

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Apr 20 14:50:56 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=2
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1,group=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1,group=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1,group=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=4,class=CODE,space=0,delta=1
   167                           	psect	text148,global,reloc=4,class=CODE,space=0,delta=1
   168                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   171                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   172   000000                     
   173                           ; Generated 24/03/2025 GMT
   174                           ; 
   175                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   176                           ; All rights reserved.
   177                           ; 
   178                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   179                           ; 
   180                           ; Redistribution and use in source and binary forms, with or without modification, are
   181                           ; permitted provided that the following conditions are met:
   182                           ; 
   183                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   184                           ;        conditions and the following disclaimer.
   185                           ; 
   186                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   187                           ;        of conditions and the following disclaimer in the documentation and/or other
   188                           ;        materials provided with the distribution. Publication is not required when
   189                           ;        this file is used in an embedded application.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F27Q83 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207   0004E0                     bsr             equ	1248
   208   0004E9                     fsr0            equ	1257
   209   0004EA                     fsr0h           equ	1258
   210   0004E9                     fsr0l           equ	1257
   211   0004E1                     fsr1            equ	1249
   212   0004E2                     fsr1h           equ	1250
   213   0004E1                     fsr1l           equ	1249
   214   0004D9                     fsr2            equ	1241
   215   0004DA                     fsr2h           equ	1242
   216   0004D9                     fsr2l           equ	1241
   217   0004EF                     indf0           equ	1263
   218   0004E7                     indf1           equ	1255
   219   0004DF                     indf2           equ	1247
   220   0004D6                     intcon          equ	1238
   221   000041                     nvmcon          equ	65
   222   0004F9                     pcl             equ	1273
   223   0004FA                     pclath          equ	1274
   224   0004FB                     pclatu          equ	1275
   225   0004EB                     plusw0          equ	1259
   226   0004E3                     plusw1          equ	1251
   227   0004DB                     plusw2          equ	1243
   228   0004ED                     postdec0        equ	1261
   229   0004E5                     postdec1        equ	1253
   230   0004DD                     postdec2        equ	1245
   231   0004EE                     postinc0        equ	1262
   232   0004E6                     postinc1        equ	1254
   233   0004DE                     postinc2        equ	1246
   234   0004EC                     preinc0         equ	1260
   235   0004E4                     preinc1         equ	1252
   236   0004DC                     preinc2         equ	1244
   237   0004F3                     prod            equ	1267
   238   0004F4                     prodh           equ	1268
   239   0004F3                     prodl           equ	1267
   240   0004D8                     status          equ	1240
   241   0004F5                     tablat          equ	1269
   242   0004F6                     tblptr          equ	1270
   243   0004F7                     tblptrh         equ	1271
   244   0004F6                     tblptrl         equ	1270
   245   0004F8                     tblptru         equ	1272
   246   0004FD                     tosl            equ	1277
   247   0004E8                     wreg            equ	1256
   248   000038                     BOOTREG         equ	56	;# 
   249   000039                     CLKRCON         equ	57	;# 
   250   00003A                     CLKRCLK         equ	58	;# 
   251   000040                     NVMCON0         equ	64	;# 
   252   000041                     NVMCON1         equ	65	;# 
   253   000042                     NVMLOCK         equ	66	;# 
   254   000043                     NVMADR          equ	67	;# 
   255   000043                     NVMADRL         equ	67	;# 
   256   000044                     NVMADRH         equ	68	;# 
   257   000045                     NVMADRU         equ	69	;# 
   258   000046                     NVMDAT          equ	70	;# 
   259   000046                     NVMDATL         equ	70	;# 
   260   000047                     NVMDATH         equ	71	;# 
   261   000048                     VREGCON         equ	72	;# 
   262   000049                     BORCON          equ	73	;# 
   263   00004A                     HLVDCON0        equ	74	;# 
   264   00004B                     HLVDCON1        equ	75	;# 
   265   00004C                     ZCDCON          equ	76	;# 
   266   000060                     PMD0            equ	96	;# 
   267   000061                     PMD1            equ	97	;# 
   268   000062                     PMD2            equ	98	;# 
   269   000063                     PMD3            equ	99	;# 
   270   000064                     PMD4            equ	100	;# 
   271   000065                     PMD5            equ	101	;# 
   272   000066                     PMD6            equ	102	;# 
   273   000067                     PMD7            equ	103	;# 
   274   000068                     PMD8            equ	104	;# 
   275   00006A                     MD1CON0         equ	106	;# 
   276   00006B                     MD1CON1         equ	107	;# 
   277   00006C                     MD1SRC          equ	108	;# 
   278   00006D                     MD1CARL         equ	109	;# 
   279   00006E                     MD1CARH         equ	110	;# 
   280   00006F                     CMOUT           equ	111	;# 
   281   000070                     CM1CON0         equ	112	;# 
   282   000071                     CM1CON1         equ	113	;# 
   283   000072                     CM1NCH          equ	114	;# 
   284   000073                     CM1PCH          equ	115	;# 
   285   000074                     CM2CON0         equ	116	;# 
   286   000075                     CM2CON1         equ	117	;# 
   287   000076                     CM2NCH          equ	118	;# 
   288   000077                     CM2PCH          equ	119	;# 
   289   000078                     WDTCON0         equ	120	;# 
   290   000079                     WDTCON1         equ	121	;# 
   291   00007A                     WDTPSL          equ	122	;# 
   292   00007B                     WDTPSH          equ	123	;# 
   293   00007C                     WDTTMR          equ	124	;# 
   294   00007D                     DAC1DAT         equ	125	;# 
   295   00007D                     DAC1DATL        equ	125	;# 
   296   00007F                     DAC1CON         equ	127	;# 
   297   000080                     SPI1RXB         equ	128	;# 
   298   000081                     SPI1TXB         equ	129	;# 
   299   000082                     SPI1TCNT        equ	130	;# 
   300   000082                     SPI1TCNTL       equ	130	;# 
   301   000083                     SPI1TCNTH       equ	131	;# 
   302   000084                     SPI1CON0        equ	132	;# 
   303   000085                     SPI1CON1        equ	133	;# 
   304   000086                     SPI1CON2        equ	134	;# 
   305   000087                     SPI1STATUS      equ	135	;# 
   306   000088                     SPI1TWIDTH      equ	136	;# 
   307   000089                     SPI1BAUD        equ	137	;# 
   308   00008A                     SPI1INTF        equ	138	;# 
   309   00008B                     SPI1INTE        equ	139	;# 
   310   00008C                     SPI1CLK         equ	140	;# 
   311   00008D                     SPI2RXB         equ	141	;# 
   312   00008E                     SPI2TXB         equ	142	;# 
   313   00008F                     SPI2TCNT        equ	143	;# 
   314   00008F                     SPI2TCNTL       equ	143	;# 
   315   000090                     SPI2TCNTH       equ	144	;# 
   316   000091                     SPI2CON0        equ	145	;# 
   317   000092                     SPI2CON1        equ	146	;# 
   318   000093                     SPI2CON2        equ	147	;# 
   319   000094                     SPI2STATUS      equ	148	;# 
   320   000095                     SPI2TWIDTH      equ	149	;# 
   321   000096                     SPI2BAUD        equ	150	;# 
   322   000097                     SPI2INTF        equ	151	;# 
   323   000098                     SPI2INTE        equ	152	;# 
   324   000099                     SPI2CLK         equ	153	;# 
   325   0000AC                     ACTCON          equ	172	;# 
   326   0000AD                     OSCCON1         equ	173	;# 
   327   0000AE                     OSCCON2         equ	174	;# 
   328   0000AF                     OSCCON3         equ	175	;# 
   329   0000B0                     OSCTUNE         equ	176	;# 
   330   0000B1                     OSCFRQ          equ	177	;# 
   331   0000B1                     OSCFREQ         equ	177	;# 
   332   0000B2                     OSCSTAT         equ	178	;# 
   333   0000B2                     OSCSTAT1        equ	178	;# 
   334   0000B3                     OSCEN           equ	179	;# 
   335   0000B4                     PRLOCK          equ	180	;# 
   336   0000B5                     SCANPR          equ	181	;# 
   337   0000B6                     DMA1PR          equ	182	;# 
   338   0000B7                     DMA2PR          equ	183	;# 
   339   0000B8                     DMA3PR          equ	184	;# 
   340   0000B9                     DMA4PR          equ	185	;# 
   341   0000BA                     DMA5PR          equ	186	;# 
   342   0000BB                     DMA6PR          equ	187	;# 
   343   0000BC                     DMA7PR          equ	188	;# 
   344   0000BD                     DMA8PR          equ	189	;# 
   345   0000BE                     MAINPR          equ	190	;# 
   346   0000BF                     ISRPR           equ	191	;# 
   347   0000D4                     CLCDATA         equ	212	;# 
   348   0000D5                     CLCSELECT       equ	213	;# 
   349   0000D6                     CLCnCON         equ	214	;# 
   350   0000D7                     CLCnPOL         equ	215	;# 
   351   0000D8                     CLCnSEL0        equ	216	;# 
   352   0000D9                     CLCnSEL1        equ	217	;# 
   353   0000DA                     CLCnSEL2        equ	218	;# 
   354   0000DB                     CLCnSEL3        equ	219	;# 
   355   0000DC                     CLCnGLS0        equ	220	;# 
   356   0000DD                     CLCnGLS1        equ	221	;# 
   357   0000DE                     CLCnGLS2        equ	222	;# 
   358   0000DF                     CLCnGLS3        equ	223	;# 
   359   0000E8                     DMASELECT       equ	232	;# 
   360   0000E9                     DMAnBUF         equ	233	;# 
   361   0000EA                     DMAnDCNT        equ	234	;# 
   362   0000EA                     DMAnDCNTL       equ	234	;# 
   363   0000EB                     DMAnDCNTH       equ	235	;# 
   364   0000EC                     DMAnDPTR        equ	236	;# 
   365   0000EC                     DMAnDPTRL       equ	236	;# 
   366   0000ED                     DMAnDPTRH       equ	237	;# 
   367   0000EE                     DMAnDSZ         equ	238	;# 
   368   0000EE                     DMAnDSZL        equ	238	;# 
   369   0000EF                     DMAnDSZH        equ	239	;# 
   370   0000F0                     DMAnDSA         equ	240	;# 
   371   0000F0                     DMAnDSAL        equ	240	;# 
   372   0000F1                     DMAnDSAH        equ	241	;# 
   373   0000F2                     DMAnSCNT        equ	242	;# 
   374   0000F2                     DMAnSCNTL       equ	242	;# 
   375   0000F3                     DMAnSCNTH       equ	243	;# 
   376   0000F4                     DMAnSPTR        equ	244	;# 
   377   0000F4                     DMAnSPTRL       equ	244	;# 
   378   0000F5                     DMAnSPTRH       equ	245	;# 
   379   0000F6                     DMAnSPTRU       equ	246	;# 
   380   0000F7                     DMAnSSZ         equ	247	;# 
   381   0000F7                     DMAnSSZL        equ	247	;# 
   382   0000F8                     DMAnSSZH        equ	248	;# 
   383   0000F9                     DMAnSSA         equ	249	;# 
   384   0000F9                     DMAnSSAL        equ	249	;# 
   385   0000FA                     DMAnSSAH        equ	250	;# 
   386   0000FB                     DMAnSSAU        equ	251	;# 
   387   0000FC                     DMAnCON0        equ	252	;# 
   388   0000FD                     DMAnCON1        equ	253	;# 
   389   0000FE                     DMAnAIRQ        equ	254	;# 
   390   0000FF                     DMAnSIRQ        equ	255	;# 
   391   000100                     C1CONL          equ	256	;# 
   392   000101                     C1CONH          equ	257	;# 
   393   000102                     C1CONU          equ	258	;# 
   394   000103                     C1CONT          equ	259	;# 
   395   000104                     C1NBTCFGL       equ	260	;# 
   396   000105                     C1NBTCFGH       equ	261	;# 
   397   000106                     C1NBTCFGU       equ	262	;# 
   398   000107                     C1NBTCFGT       equ	263	;# 
   399   000108                     C1DBTCFGL       equ	264	;# 
   400   000109                     C1DBTCFGH       equ	265	;# 
   401   00010A                     C1DBTCFGU       equ	266	;# 
   402   00010B                     C1DBTCFGT       equ	267	;# 
   403   00010C                     C1TDCL          equ	268	;# 
   404   00010D                     C1TDCH          equ	269	;# 
   405   00010E                     C1TDCU          equ	270	;# 
   406   000110                     C1TBC           equ	272	;# 
   407   000110                     C1TBCL          equ	272	;# 
   408   000111                     C1TBCH          equ	273	;# 
   409   000112                     C1TBCU          equ	274	;# 
   410   000113                     C1TBCT          equ	275	;# 
   411   000114                     C1TSCONL        equ	276	;# 
   412   000115                     C1TSCONH        equ	277	;# 
   413   000116                     C1TSCONU        equ	278	;# 
   414   000117                     C1TSCONT        equ	279	;# 
   415   000118                     C1VECL          equ	280	;# 
   416   000119                     C1VECH          equ	281	;# 
   417   00011A                     C1VECU          equ	282	;# 
   418   00011B                     C1VECT          equ	283	;# 
   419   00011C                     C1INTL          equ	284	;# 
   420   00011D                     C1INTH          equ	285	;# 
   421   00011E                     C1INTU          equ	286	;# 
   422   00011F                     C1INTT          equ	287	;# 
   423   000120                     C1RXIF          equ	288	;# 
   424   000120                     C1RXIFL         equ	288	;# 
   425   000121                     C1RXIFH         equ	289	;# 
   426   000122                     C1RXIFU         equ	290	;# 
   427   000123                     C1RXIFT         equ	291	;# 
   428   000124                     C1TXIF          equ	292	;# 
   429   000124                     C1TXIFL         equ	292	;# 
   430   000125                     C1TXIFH         equ	293	;# 
   431   000126                     C1TXIFU         equ	294	;# 
   432   000127                     C1TXIFT         equ	295	;# 
   433   000128                     C1RXOVIF        equ	296	;# 
   434   000128                     C1RXOVIFL       equ	296	;# 
   435   000129                     C1RXOVIFH       equ	297	;# 
   436   00012A                     C1RXOVIFU       equ	298	;# 
   437   00012B                     C1RXOVIFT       equ	299	;# 
   438   00012C                     C1TXATIF        equ	300	;# 
   439   00012C                     C1TXATIFL       equ	300	;# 
   440   00012D                     C1TXATIFH       equ	301	;# 
   441   00012E                     C1TXATIFU       equ	302	;# 
   442   00012F                     C1TXATIFT       equ	303	;# 
   443   000130                     C1TXREQ         equ	304	;# 
   444   000130                     C1TXREQL        equ	304	;# 
   445   000131                     C1TXREQH        equ	305	;# 
   446   000132                     C1TXREQU        equ	306	;# 
   447   000133                     C1TXREQT        equ	307	;# 
   448   000134                     C1TRECL         equ	308	;# 
   449   000135                     C1TRECH         equ	309	;# 
   450   000136                     C1TRECU         equ	310	;# 
   451   000137                     C1TRECT         equ	311	;# 
   452   000138                     C1BDIAG0L       equ	312	;# 
   453   000139                     C1BDIAG0H       equ	313	;# 
   454   00013C                     C1BDIAG1L       equ	316	;# 
   455   00013D                     C1BDIAG1H       equ	317	;# 
   456   00013E                     C1BDIAG1U       equ	318	;# 
   457   00013F                     C1BDIAG1T       equ	319	;# 
   458   000140                     C1TEFCONL       equ	320	;# 
   459   000141                     C1TEFCONH       equ	321	;# 
   460   000142                     C1TEFCONU       equ	322	;# 
   461   000143                     C1TEFCONT       equ	323	;# 
   462   000144                     C1TEFSTAL       equ	324	;# 
   463   000145                     C1TEFSTAH       equ	325	;# 
   464   000146                     C1TEFSTAU       equ	326	;# 
   465   000147                     C1TEFSTAT       equ	327	;# 
   466   000148                     C1TEFUA         equ	328	;# 
   467   000148                     C1TEFUAL        equ	328	;# 
   468   000149                     C1TEFUAH        equ	329	;# 
   469   00014A                     C1TEFUAU        equ	330	;# 
   470   00014B                     C1TEFUAT        equ	331	;# 
   471   00014C                     C1FIFOBA        equ	332	;# 
   472   00014C                     C1FIFOBAL       equ	332	;# 
   473   00014D                     C1FIFOBAH       equ	333	;# 
   474   00014E                     C1FIFOBAU       equ	334	;# 
   475   00014F                     C1FIFOBAT       equ	335	;# 
   476   000150                     C1TXQCONL       equ	336	;# 
   477   000151                     C1TXQCONH       equ	337	;# 
   478   000152                     C1TXQCONU       equ	338	;# 
   479   000153                     C1TXQCONT       equ	339	;# 
   480   000154                     C1TXQSTAL       equ	340	;# 
   481   000155                     C1TXQSTAH       equ	341	;# 
   482   000156                     C1TXQSTAU       equ	342	;# 
   483   000157                     C1TXQSTAT       equ	343	;# 
   484   000158                     C1TXQUA         equ	344	;# 
   485   000158                     C1TXQUAL        equ	344	;# 
   486   000159                     C1TXQUAH        equ	345	;# 
   487   00015A                     C1TXQUAU        equ	346	;# 
   488   00015B                     C1TXQUAT        equ	347	;# 
   489   00015C                     C1FIFOCON1      equ	348	;# 
   490   00015C                     C1FIFOCON1L     equ	348	;# 
   491   00015D                     C1FIFOCON1H     equ	349	;# 
   492   00015E                     C1FIFOCON1U     equ	350	;# 
   493   00015F                     C1FIFOCON1T     equ	351	;# 
   494   000160                     C1FIFOSTA1      equ	352	;# 
   495   000160                     C1FIFOSTA1L     equ	352	;# 
   496   000161                     C1FIFOSTA1H     equ	353	;# 
   497   000162                     C1FIFOSTA1U     equ	354	;# 
   498   000163                     C1FIFOSTA1T     equ	355	;# 
   499   000164                     C1FIFOUA1       equ	356	;# 
   500   000164                     C1FIFOUA1L      equ	356	;# 
   501   000165                     C1FIFOUA1H      equ	357	;# 
   502   000166                     C1FIFOUA1U      equ	358	;# 
   503   000167                     C1FIFOUA1T      equ	359	;# 
   504   000168                     C1FIFOCON2      equ	360	;# 
   505   000168                     C1FIFOCON2L     equ	360	;# 
   506   000169                     C1FIFOCON2H     equ	361	;# 
   507   00016A                     C1FIFOCON2U     equ	362	;# 
   508   00016B                     C1FIFOCON2T     equ	363	;# 
   509   00016C                     C1FIFOSTA2      equ	364	;# 
   510   00016C                     C1FIFOSTA2L     equ	364	;# 
   511   00016D                     C1FIFOSTA2H     equ	365	;# 
   512   00016E                     C1FIFOSTA2U     equ	366	;# 
   513   00016F                     C1FIFOSTA2T     equ	367	;# 
   514   000170                     C1FIFOUA2       equ	368	;# 
   515   000170                     C1FIFOUA2L      equ	368	;# 
   516   000171                     C1FIFOUA2H      equ	369	;# 
   517   000172                     C1FIFOUA2U      equ	370	;# 
   518   000173                     C1FIFOUA2T      equ	371	;# 
   519   000174                     C1FIFOCON3      equ	372	;# 
   520   000174                     C1FIFOCON3L     equ	372	;# 
   521   000175                     C1FIFOCON3H     equ	373	;# 
   522   000176                     C1FIFOCON3U     equ	374	;# 
   523   000177                     C1FIFOCON3T     equ	375	;# 
   524   000178                     C1FIFOSTA3      equ	376	;# 
   525   000178                     C1FIFOSTA3L     equ	376	;# 
   526   000179                     C1FIFOSTA3H     equ	377	;# 
   527   00017A                     C1FIFOSTA3U     equ	378	;# 
   528   00017B                     C1FIFOSTA3T     equ	379	;# 
   529   00017C                     C1FIFOUA3       equ	380	;# 
   530   00017C                     C1FIFOUA3L      equ	380	;# 
   531   00017D                     C1FIFOUA3H      equ	381	;# 
   532   00017E                     C1FIFOUA3U      equ	382	;# 
   533   00017F                     C1FIFOUA3T      equ	383	;# 
   534   000180                     C1FLTCON0L      equ	384	;# 
   535   000181                     C1FLTCON0H      equ	385	;# 
   536   000182                     C1FLTCON0U      equ	386	;# 
   537   000183                     C1FLTCON0T      equ	387	;# 
   538   000184                     C1FLTCON1L      equ	388	;# 
   539   000185                     C1FLTCON1H      equ	389	;# 
   540   000186                     C1FLTCON1U      equ	390	;# 
   541   000187                     C1FLTCON1T      equ	391	;# 
   542   000188                     C1FLTCON2L      equ	392	;# 
   543   000189                     C1FLTCON2H      equ	393	;# 
   544   00018A                     C1FLTCON2U      equ	394	;# 
   545   00018B                     C1FLTCON2T      equ	395	;# 
   546   00018C                     C1FLTOBJ0       equ	396	;# 
   547   00018C                     C1FLTOBJ0L      equ	396	;# 
   548   00018D                     C1FLTOBJ0H      equ	397	;# 
   549   00018E                     C1FLTOBJ0U      equ	398	;# 
   550   00018F                     C1FLTOBJ0T      equ	399	;# 
   551   000190                     C1MASK0         equ	400	;# 
   552   000190                     C1MASK0L        equ	400	;# 
   553   000191                     C1MASK0H        equ	401	;# 
   554   000192                     C1MASK0U        equ	402	;# 
   555   000193                     C1MASK0T        equ	403	;# 
   556   000194                     C1FLTOBJ1       equ	404	;# 
   557   000194                     C1FLTOBJ1L      equ	404	;# 
   558   000195                     C1FLTOBJ1H      equ	405	;# 
   559   000196                     C1FLTOBJ1U      equ	406	;# 
   560   000197                     C1FLTOBJ1T      equ	407	;# 
   561   000198                     C1MASK1         equ	408	;# 
   562   000198                     C1MASK1L        equ	408	;# 
   563   000199                     C1MASK1H        equ	409	;# 
   564   00019A                     C1MASK1U        equ	410	;# 
   565   00019B                     C1MASK1T        equ	411	;# 
   566   00019C                     C1FLTOBJ2       equ	412	;# 
   567   00019C                     C1FLTOBJ2L      equ	412	;# 
   568   00019D                     C1FLTOBJ2H      equ	413	;# 
   569   00019E                     C1FLTOBJ2U      equ	414	;# 
   570   00019F                     C1FLTOBJ2T      equ	415	;# 
   571   0001A0                     C1MASK2         equ	416	;# 
   572   0001A0                     C1MASK2L        equ	416	;# 
   573   0001A1                     C1MASK2H        equ	417	;# 
   574   0001A2                     C1MASK2U        equ	418	;# 
   575   0001A3                     C1MASK2T        equ	419	;# 
   576   0001A4                     C1FLTOBJ3       equ	420	;# 
   577   0001A4                     C1FLTOBJ3L      equ	420	;# 
   578   0001A5                     C1FLTOBJ3H      equ	421	;# 
   579   0001A6                     C1FLTOBJ3U      equ	422	;# 
   580   0001A7                     C1FLTOBJ3T      equ	423	;# 
   581   0001A8                     C1MASK3         equ	424	;# 
   582   0001A8                     C1MASK3L        equ	424	;# 
   583   0001A9                     C1MASK3H        equ	425	;# 
   584   0001AA                     C1MASK3U        equ	426	;# 
   585   0001AB                     C1MASK3T        equ	427	;# 
   586   0001AC                     C1FLTOBJ4       equ	428	;# 
   587   0001AC                     C1FLTOBJ4L      equ	428	;# 
   588   0001AD                     C1FLTOBJ4H      equ	429	;# 
   589   0001AE                     C1FLTOBJ4U      equ	430	;# 
   590   0001AF                     C1FLTOBJ4T      equ	431	;# 
   591   0001B0                     C1MASK4         equ	432	;# 
   592   0001B0                     C1MASK4L        equ	432	;# 
   593   0001B1                     C1MASK4H        equ	433	;# 
   594   0001B2                     C1MASK4U        equ	434	;# 
   595   0001B3                     C1MASK4T        equ	435	;# 
   596   0001B4                     C1FLTOBJ5       equ	436	;# 
   597   0001B4                     C1FLTOBJ5L      equ	436	;# 
   598   0001B5                     C1FLTOBJ5H      equ	437	;# 
   599   0001B6                     C1FLTOBJ5U      equ	438	;# 
   600   0001B7                     C1FLTOBJ5T      equ	439	;# 
   601   0001B8                     C1MASK5         equ	440	;# 
   602   0001B8                     C1MASK5L        equ	440	;# 
   603   0001B9                     C1MASK5H        equ	441	;# 
   604   0001BA                     C1MASK5U        equ	442	;# 
   605   0001BB                     C1MASK5T        equ	443	;# 
   606   0001BC                     C1FLTOBJ6       equ	444	;# 
   607   0001BC                     C1FLTOBJ6L      equ	444	;# 
   608   0001BD                     C1FLTOBJ6H      equ	445	;# 
   609   0001BE                     C1FLTOBJ6U      equ	446	;# 
   610   0001BF                     C1FLTOBJ6T      equ	447	;# 
   611   0001C0                     C1MASK6         equ	448	;# 
   612   0001C0                     C1MASK6L        equ	448	;# 
   613   0001C1                     C1MASK6H        equ	449	;# 
   614   0001C2                     C1MASK6U        equ	450	;# 
   615   0001C3                     C1MASK6T        equ	451	;# 
   616   0001C4                     C1FLTOBJ7       equ	452	;# 
   617   0001C4                     C1FLTOBJ7L      equ	452	;# 
   618   0001C5                     C1FLTOBJ7H      equ	453	;# 
   619   0001C6                     C1FLTOBJ7U      equ	454	;# 
   620   0001C7                     C1FLTOBJ7T      equ	455	;# 
   621   0001C8                     C1MASK7         equ	456	;# 
   622   0001C8                     C1MASK7L        equ	456	;# 
   623   0001C9                     C1MASK7H        equ	457	;# 
   624   0001CA                     C1MASK7U        equ	458	;# 
   625   0001CB                     C1MASK7T        equ	459	;# 
   626   0001CC                     C1FLTOBJ8       equ	460	;# 
   627   0001CC                     C1FLTOBJ8L      equ	460	;# 
   628   0001CD                     C1FLTOBJ8H      equ	461	;# 
   629   0001CE                     C1FLTOBJ8U      equ	462	;# 
   630   0001CF                     C1FLTOBJ8T      equ	463	;# 
   631   0001D0                     C1MASK8         equ	464	;# 
   632   0001D0                     C1MASK8L        equ	464	;# 
   633   0001D1                     C1MASK8H        equ	465	;# 
   634   0001D2                     C1MASK8U        equ	466	;# 
   635   0001D3                     C1MASK8T        equ	467	;# 
   636   0001D4                     C1FLTOBJ9       equ	468	;# 
   637   0001D4                     C1FLTOBJ9L      equ	468	;# 
   638   0001D5                     C1FLTOBJ9H      equ	469	;# 
   639   0001D6                     C1FLTOBJ9U      equ	470	;# 
   640   0001D7                     C1FLTOBJ9T      equ	471	;# 
   641   0001D8                     C1MASK9         equ	472	;# 
   642   0001D8                     C1MASK9L        equ	472	;# 
   643   0001D9                     C1MASK9H        equ	473	;# 
   644   0001DA                     C1MASK9U        equ	474	;# 
   645   0001DB                     C1MASK9T        equ	475	;# 
   646   0001DC                     C1FLTOBJ10      equ	476	;# 
   647   0001DC                     C1FLTOBJ10L     equ	476	;# 
   648   0001DD                     C1FLTOBJ10H     equ	477	;# 
   649   0001DE                     C1FLTOBJ10U     equ	478	;# 
   650   0001DF                     C1FLTOBJ10T     equ	479	;# 
   651   0001E0                     C1MASK10        equ	480	;# 
   652   0001E0                     C1MASK10L       equ	480	;# 
   653   0001E1                     C1MASK10H       equ	481	;# 
   654   0001E2                     C1MASK10U       equ	482	;# 
   655   0001E3                     C1MASK10T       equ	483	;# 
   656   0001E4                     C1FLTOBJ11      equ	484	;# 
   657   0001E4                     C1FLTOBJ11L     equ	484	;# 
   658   0001E5                     C1FLTOBJ11H     equ	485	;# 
   659   0001E6                     C1FLTOBJ11U     equ	486	;# 
   660   0001E7                     C1FLTOBJ11T     equ	487	;# 
   661   0001E8                     C1MASK11        equ	488	;# 
   662   0001E8                     C1MASK11L       equ	488	;# 
   663   0001E9                     C1MASK11H       equ	489	;# 
   664   0001EA                     C1MASK11U       equ	490	;# 
   665   0001EB                     C1MASK11T       equ	491	;# 
   666   000200                     PPSLOCK         equ	512	;# 
   667   000201                     RA0PPS          equ	513	;# 
   668   000202                     RA1PPS          equ	514	;# 
   669   000203                     RA2PPS          equ	515	;# 
   670   000204                     RA3PPS          equ	516	;# 
   671   000205                     RA4PPS          equ	517	;# 
   672   000206                     RA5PPS          equ	518	;# 
   673   000207                     RA6PPS          equ	519	;# 
   674   000208                     RA7PPS          equ	520	;# 
   675   000209                     RB0PPS          equ	521	;# 
   676   00020A                     RB1PPS          equ	522	;# 
   677   00020B                     RB2PPS          equ	523	;# 
   678   00020C                     RB3PPS          equ	524	;# 
   679   00020D                     RB4PPS          equ	525	;# 
   680   00020E                     RB5PPS          equ	526	;# 
   681   00020F                     RB6PPS          equ	527	;# 
   682   000210                     RB7PPS          equ	528	;# 
   683   000211                     RC0PPS          equ	529	;# 
   684   000212                     RC1PPS          equ	530	;# 
   685   000213                     RC2PPS          equ	531	;# 
   686   000214                     RC3PPS          equ	532	;# 
   687   000215                     RC4PPS          equ	533	;# 
   688   000216                     RC5PPS          equ	534	;# 
   689   000217                     RC6PPS          equ	535	;# 
   690   000218                     RC7PPS          equ	536	;# 
   691   00023D                     CANRXPPS        equ	573	;# 
   692   00023E                     INT0PPS         equ	574	;# 
   693   00023F                     INT1PPS         equ	575	;# 
   694   000240                     INT2PPS         equ	576	;# 
   695   000241                     T0CKIPPS        equ	577	;# 
   696   000242                     T1CKIPPS        equ	578	;# 
   697   000243                     T1GPPS          equ	579	;# 
   698   000244                     T3CKIPPS        equ	580	;# 
   699   000245                     T3GPPS          equ	581	;# 
   700   000246                     T5CKIPPS        equ	582	;# 
   701   000247                     T5GPPS          equ	583	;# 
   702   000248                     T2INPPS         equ	584	;# 
   703   000249                     T4INPPS         equ	585	;# 
   704   00024A                     T6INPPS         equ	586	;# 
   705   00024B                     TUIN0PPS        equ	587	;# 
   706   00024C                     TUIN1PPS        equ	588	;# 
   707   00024F                     CCP1PPS         equ	591	;# 
   708   000250                     CCP2PPS         equ	592	;# 
   709   000251                     CCP3PPS         equ	593	;# 
   710   000253                     PWM1ERSPPS      equ	595	;# 
   711   000254                     PWM2ERSPPS      equ	596	;# 
   712   000255                     PWM3ERSPPS      equ	597	;# 
   713   000256                     PWM4ERSPPS      equ	598	;# 
   714   000257                     PWMIN0PPS       equ	599	;# 
   715   000258                     PWMIN1PPS       equ	600	;# 
   716   000259                     SMT1WINPPS      equ	601	;# 
   717   00025A                     SMT1SIGPPS      equ	602	;# 
   718   00025B                     CWG1PPS         equ	603	;# 
   719   00025B                     CWG1INPPS       equ	603	;# 
   720   00025C                     CWG2PPS         equ	604	;# 
   721   00025C                     CWG2INPPS       equ	604	;# 
   722   00025D                     CWG3PPS         equ	605	;# 
   723   00025D                     CWG3INPPS       equ	605	;# 
   724   00025E                     MD1CARLPPS      equ	606	;# 
   725   00025E                     MDCARLPPS       equ	606	;# 
   726   00025F                     MD1CARHPPS      equ	607	;# 
   727   00025F                     MDCARHPPS       equ	607	;# 
   728   000260                     MD1SRCPPS       equ	608	;# 
   729   000260                     MDSRCPPS        equ	608	;# 
   730   000261                     CLCIN0PPS       equ	609	;# 
   731   000262                     CLCIN1PPS       equ	610	;# 
   732   000263                     CLCIN2PPS       equ	611	;# 
   733   000264                     CLCIN3PPS       equ	612	;# 
   734   000265                     CLCIN4PPS       equ	613	;# 
   735   000266                     CLCIN5PPS       equ	614	;# 
   736   000267                     CLCIN6PPS       equ	615	;# 
   737   000268                     CLCIN7PPS       equ	616	;# 
   738   000269                     ADACTPPS        equ	617	;# 
   739   00026A                     SPI1SCKPPS      equ	618	;# 
   740   00026B                     SPI1SDIPPS      equ	619	;# 
   741   00026C                     SPI1SSPPS       equ	620	;# 
   742   00026D                     SPI2SCKPPS      equ	621	;# 
   743   00026E                     SPI2SDIPPS      equ	622	;# 
   744   00026F                     SPI2SSPPS       equ	623	;# 
   745   000270                     I2C1SDAPPS      equ	624	;# 
   746   000271                     I2C1SCLPPS      equ	625	;# 
   747   000272                     U1RXPPS         equ	626	;# 
   748   000273                     U1CTSPPS        equ	627	;# 
   749   000274                     U2RXPPS         equ	628	;# 
   750   000275                     U2CTSPPS        equ	629	;# 
   751   000276                     U3RXPPS         equ	630	;# 
   752   000277                     U3CTSPPS        equ	631	;# 
   753   000278                     U4RXPPS         equ	632	;# 
   754   000279                     U4CTSPPS        equ	633	;# 
   755   00027A                     U5RXPPS         equ	634	;# 
   756   00027B                     U5CTSPPS        equ	635	;# 
   757   000286                     RC4I2C          equ	646	;# 
   758   000287                     RC3I2C          equ	647	;# 
   759   000288                     RB2I2C          equ	648	;# 
   760   000289                     RB1I2C          equ	649	;# 
   761   00028A                     I2C1RXB         equ	650	;# 
   762   00028B                     I2C1TXB         equ	651	;# 
   763   00028C                     I2C1CNTL        equ	652	;# 
   764   00028D                     I2C1CNTH        equ	653	;# 
   765   00028E                     I2C1ADB0        equ	654	;# 
   766   00028F                     I2C1ADB1        equ	655	;# 
   767   000290                     I2C1ADR0        equ	656	;# 
   768   000291                     I2C1ADR1        equ	657	;# 
   769   000292                     I2C1ADR2        equ	658	;# 
   770   000293                     I2C1ADR3        equ	659	;# 
   771   000294                     I2C1CON0        equ	660	;# 
   772   000295                     I2C1CON1        equ	661	;# 
   773   000296                     I2C1CON2        equ	662	;# 
   774   000297                     I2C1ERR         equ	663	;# 
   775   000298                     I2C1STAT0       equ	664	;# 
   776   000299                     I2C1STAT1       equ	665	;# 
   777   00029A                     I2C1PIR         equ	666	;# 
   778   00029B                     I2C1PIE         equ	667	;# 
   779   00029C                     I2C1BTO         equ	668	;# 
   780   00029D                     I2C1BAUD        equ	669	;# 
   781   00029E                     I2C1CLK         equ	670	;# 
   782   00029F                     I2C1BTOC        equ	671	;# 
   783   0002A1                     U1RXB           equ	673	;# 
   784   0002A1                     U1RXBL          equ	673	;# 
   785   0002A2                     U1RXCHK         equ	674	;# 
   786   0002A3                     U1TXB           equ	675	;# 
   787   0002A3                     U1TXBL          equ	675	;# 
   788   0002A4                     U1TXCHK         equ	676	;# 
   789   0002A5                     U1P1            equ	677	;# 
   790   0002A5                     U1P1L           equ	677	;# 
   791   0002A6                     U1P1H           equ	678	;# 
   792   0002A7                     U1P2            equ	679	;# 
   793   0002A7                     U1P2L           equ	679	;# 
   794   0002A8                     U1P2H           equ	680	;# 
   795   0002A9                     U1P3            equ	681	;# 
   796   0002A9                     U1P3L           equ	681	;# 
   797   0002AA                     U1P3H           equ	682	;# 
   798   0002AB                     U1CON0          equ	683	;# 
   799   0002AC                     U1CON1          equ	684	;# 
   800   0002AD                     U1CON2          equ	685	;# 
   801   0002AE                     U1BRG           equ	686	;# 
   802   0002AE                     U1BRGL          equ	686	;# 
   803   0002AF                     U1BRGH          equ	687	;# 
   804   0002B0                     U1FIFO          equ	688	;# 
   805   0002B1                     U1UIR           equ	689	;# 
   806   0002B2                     U1ERRIR         equ	690	;# 
   807   0002B3                     U1ERRIE         equ	691	;# 
   808   0002B4                     U2RXB           equ	692	;# 
   809   0002B4                     U2RXBL          equ	692	;# 
   810   0002B5                     U2RXCHK         equ	693	;# 
   811   0002B6                     U2TXB           equ	694	;# 
   812   0002B6                     U2TXBL          equ	694	;# 
   813   0002B7                     U2TXCHK         equ	695	;# 
   814   0002B8                     U2P1            equ	696	;# 
   815   0002B8                     U2P1L           equ	696	;# 
   816   0002B9                     U2P1H           equ	697	;# 
   817   0002BA                     U2P2            equ	698	;# 
   818   0002BA                     U2P2L           equ	698	;# 
   819   0002BB                     U2P2H           equ	699	;# 
   820   0002BC                     U2P3            equ	700	;# 
   821   0002BC                     U2P3L           equ	700	;# 
   822   0002BD                     U2P3H           equ	701	;# 
   823   0002BE                     U2CON0          equ	702	;# 
   824   0002BF                     U2CON1          equ	703	;# 
   825   0002C0                     U2CON2          equ	704	;# 
   826   0002C1                     U2BRG           equ	705	;# 
   827   0002C1                     U2BRGL          equ	705	;# 
   828   0002C2                     U2BRGH          equ	706	;# 
   829   0002C3                     U2FIFO          equ	707	;# 
   830   0002C4                     U2UIR           equ	708	;# 
   831   0002C5                     U2ERRIR         equ	709	;# 
   832   0002C6                     U2ERRIE         equ	710	;# 
   833   0002C7                     U3RXB           equ	711	;# 
   834   0002C7                     U3RXBL          equ	711	;# 
   835   0002C9                     U3TXB           equ	713	;# 
   836   0002C9                     U3TXBL          equ	713	;# 
   837   0002CB                     U3P1            equ	715	;# 
   838   0002CB                     U3P1L           equ	715	;# 
   839   0002CD                     U3P2            equ	717	;# 
   840   0002CD                     U3P2L           equ	717	;# 
   841   0002CF                     U3P3            equ	719	;# 
   842   0002CF                     U3P3L           equ	719	;# 
   843   0002D1                     U3CON0          equ	721	;# 
   844   0002D2                     U3CON1          equ	722	;# 
   845   0002D3                     U3CON2          equ	723	;# 
   846   0002D4                     U3BRG           equ	724	;# 
   847   0002D4                     U3BRGL          equ	724	;# 
   848   0002D5                     U3BRGH          equ	725	;# 
   849   0002D6                     U3FIFO          equ	726	;# 
   850   0002D7                     U3UIR           equ	727	;# 
   851   0002D8                     U3ERRIR         equ	728	;# 
   852   0002D9                     U3ERRIE         equ	729	;# 
   853   0002DA                     U4RXB           equ	730	;# 
   854   0002DA                     U4RXBL          equ	730	;# 
   855   0002DC                     U4TXB           equ	732	;# 
   856   0002DC                     U4TXBL          equ	732	;# 
   857   0002DE                     U4P1            equ	734	;# 
   858   0002DE                     U4P1L           equ	734	;# 
   859   0002E0                     U4P2            equ	736	;# 
   860   0002E0                     U4P2L           equ	736	;# 
   861   0002E2                     U4P3            equ	738	;# 
   862   0002E2                     U4P3L           equ	738	;# 
   863   0002E4                     U4CON0          equ	740	;# 
   864   0002E5                     U4CON1          equ	741	;# 
   865   0002E6                     U4CON2          equ	742	;# 
   866   0002E7                     U4BRG           equ	743	;# 
   867   0002E7                     U4BRGL          equ	743	;# 
   868   0002E8                     U4BRGH          equ	744	;# 
   869   0002E9                     U4FIFO          equ	745	;# 
   870   0002EA                     U4UIR           equ	746	;# 
   871   0002EB                     U4ERRIR         equ	747	;# 
   872   0002EC                     U4ERRIE         equ	748	;# 
   873   0002ED                     U5RXB           equ	749	;# 
   874   0002ED                     U5RXBL          equ	749	;# 
   875   0002EF                     U5TXB           equ	751	;# 
   876   0002EF                     U5TXBL          equ	751	;# 
   877   0002F1                     U5P1            equ	753	;# 
   878   0002F1                     U5P1L           equ	753	;# 
   879   0002F3                     U5P2            equ	755	;# 
   880   0002F3                     U5P2L           equ	755	;# 
   881   0002F5                     U5P3            equ	757	;# 
   882   0002F5                     U5P3L           equ	757	;# 
   883   0002F7                     U5CON0          equ	759	;# 
   884   0002F8                     U5CON1          equ	760	;# 
   885   0002F9                     U5CON2          equ	761	;# 
   886   0002FA                     U5BRG           equ	762	;# 
   887   0002FA                     U5BRGL          equ	762	;# 
   888   0002FB                     U5BRGH          equ	763	;# 
   889   0002FC                     U5FIFO          equ	764	;# 
   890   0002FD                     U5UIR           equ	765	;# 
   891   0002FE                     U5ERRIR         equ	766	;# 
   892   0002FF                     U5ERRIE         equ	767	;# 
   893   000300                     SMT1TMR         equ	768	;# 
   894   000300                     SMT1TMRL        equ	768	;# 
   895   000301                     SMT1TMRH        equ	769	;# 
   896   000302                     SMT1TMRU        equ	770	;# 
   897   000303                     SMT1CPR         equ	771	;# 
   898   000303                     SMT1CPRL        equ	771	;# 
   899   000304                     SMT1CPRH        equ	772	;# 
   900   000305                     SMT1CPRU        equ	773	;# 
   901   000306                     SMT1CPW         equ	774	;# 
   902   000306                     SMT1CPWL        equ	774	;# 
   903   000307                     SMT1CPWH        equ	775	;# 
   904   000308                     SMT1CPWU        equ	776	;# 
   905   000309                     SMT1PR          equ	777	;# 
   906   000309                     SMT1PRL         equ	777	;# 
   907   00030A                     SMT1PRH         equ	778	;# 
   908   00030B                     SMT1PRU         equ	779	;# 
   909   00030C                     SMT1CON0        equ	780	;# 
   910   00030D                     SMT1CON1        equ	781	;# 
   911   00030E                     SMT1STAT        equ	782	;# 
   912   00030F                     SMT1CLK         equ	783	;# 
   913   000310                     SMT1SIG         equ	784	;# 
   914   000311                     SMT1WIN         equ	785	;# 
   915   000318                     TMR0L           equ	792	;# 
   916   000318                     TMR0            equ	792	;# 
   917   000319                     TMR0H           equ	793	;# 
   918   000319                     PR0             equ	793	;# 
   919   00031A                     T0CON0          equ	794	;# 
   920   00031B                     T0CON1          equ	795	;# 
   921   00031C                     TMR1            equ	796	;# 
   922   00031C                     TMR1L           equ	796	;# 
   923   00031D                     TMR1H           equ	797	;# 
   924   00031E                     T1CON           equ	798	;# 
   925   00031E                     TMR1CON         equ	798	;# 
   926   00031F                     T1GCON          equ	799	;# 
   927   00031F                     TMR1GCON        equ	799	;# 
   928   000320                     T1GATE          equ	800	;# 
   929   000320                     TMR1GATE        equ	800	;# 
   930   000321                     T1CLK           equ	801	;# 
   931   000321                     TMR1CLK         equ	801	;# 
   932   000321                     PR1             equ	801	;# 
   933   000322                     T2TMR           equ	802	;# 
   934   000322                     TMR2            equ	802	;# 
   935   000323                     T2PR            equ	803	;# 
   936   000323                     PR2             equ	803	;# 
   937   000324                     T2CON           equ	804	;# 
   938   000325                     T2HLT           equ	805	;# 
   939   000326                     T2CLKCON        equ	806	;# 
   940   000326                     T2CLK           equ	806	;# 
   941   000327                     T2RST           equ	807	;# 
   942   000328                     TMR3            equ	808	;# 
   943   000328                     TMR3L           equ	808	;# 
   944   000329                     TMR3H           equ	809	;# 
   945   00032A                     T3CON           equ	810	;# 
   946   00032A                     TMR3CON         equ	810	;# 
   947   00032B                     T3GCON          equ	811	;# 
   948   00032B                     TMR3GCON        equ	811	;# 
   949   00032C                     T3GATE          equ	812	;# 
   950   00032C                     TMR3GATE        equ	812	;# 
   951   00032D                     T3CLK           equ	813	;# 
   952   00032D                     TMR3CLK         equ	813	;# 
   953   00032D                     PR3             equ	813	;# 
   954   00032E                     T4TMR           equ	814	;# 
   955   00032E                     TMR4            equ	814	;# 
   956   00032F                     T4PR            equ	815	;# 
   957   00032F                     PR4             equ	815	;# 
   958   000330                     T4CON           equ	816	;# 
   959   000331                     T4HLT           equ	817	;# 
   960   000332                     T4CLKCON        equ	818	;# 
   961   000332                     T4CLK           equ	818	;# 
   962   000333                     T4RST           equ	819	;# 
   963   000334                     TMR5            equ	820	;# 
   964   000334                     TMR5L           equ	820	;# 
   965   000335                     TMR5H           equ	821	;# 
   966   000336                     T5CON           equ	822	;# 
   967   000336                     TMR5CON         equ	822	;# 
   968   000337                     T5GCON          equ	823	;# 
   969   000337                     TMR5GCON        equ	823	;# 
   970   000338                     T5GATE          equ	824	;# 
   971   000338                     TMR5GATE        equ	824	;# 
   972   000339                     T5CLK           equ	825	;# 
   973   000339                     TMR5CLK         equ	825	;# 
   974   000339                     PR5             equ	825	;# 
   975   00033A                     T6TMR           equ	826	;# 
   976   00033A                     TMR6            equ	826	;# 
   977   00033B                     T6PR            equ	827	;# 
   978   00033B                     PR6             equ	827	;# 
   979   00033C                     T6CON           equ	828	;# 
   980   00033D                     T6HLT           equ	829	;# 
   981   00033E                     T6CLKCON        equ	830	;# 
   982   00033E                     T6CLK           equ	830	;# 
   983   00033F                     T6RST           equ	831	;# 
   984   000340                     CCPR1           equ	832	;# 
   985   000340                     CCPR1L          equ	832	;# 
   986   000341                     CCPR1H          equ	833	;# 
   987   000342                     CCP1CON         equ	834	;# 
   988   000343                     CCP1CAP         equ	835	;# 
   989   000344                     CCPR2           equ	836	;# 
   990   000344                     CCPR2L          equ	836	;# 
   991   000345                     CCPR2H          equ	837	;# 
   992   000346                     CCP2CON         equ	838	;# 
   993   000347                     CCP2CAP         equ	839	;# 
   994   000348                     CCPR3           equ	840	;# 
   995   000348                     CCPR3L          equ	840	;# 
   996   000349                     CCPR3H          equ	841	;# 
   997   00034A                     CCP3CON         equ	842	;# 
   998   00034B                     CCP3CAP         equ	843	;# 
   999   00034C                     CCPTMRS0        equ	844	;# 
  1000   00034F                     CRCDATA         equ	847	;# 
  1001   00034F                     CRCDATAL        equ	847	;# 
  1002   000350                     CRCDATAH        equ	848	;# 
  1003   000351                     CRCDATAU        equ	849	;# 
  1004   000352                     CRCDATAT        equ	850	;# 
  1005   000353                     CRCOUT          equ	851	;# 
  1006   000353                     CRCSHFT         equ	851	;# 
  1007   000353                     CRCXOR          equ	851	;# 
  1008   000353                     CRCOUTL         equ	851	;# 
  1009   000353                     CRCSHFTL        equ	851	;# 
  1010   000353                     CRCSHIFTL       equ	851	;# 
  1011   000353                     CRCXORL         equ	851	;# 
  1012   000354                     CRCOUTH         equ	852	;# 
  1013   000354                     CRCSHFTH        equ	852	;# 
  1014   000354                     CRCSHIFTH       equ	852	;# 
  1015   000354                     CRCXORH         equ	852	;# 
  1016   000355                     CRCOUTU         equ	853	;# 
  1017   000355                     CRCSHFTU        equ	853	;# 
  1018   000355                     CRCSHIFTU       equ	853	;# 
  1019   000355                     CRCXORU         equ	853	;# 
  1020   000356                     CRCOUTT         equ	854	;# 
  1021   000356                     CRCSHFTT        equ	854	;# 
  1022   000356                     CRCSHIFTT       equ	854	;# 
  1023   000356                     CRCXORT         equ	854	;# 
  1024   000357                     CRCCON0         equ	855	;# 
  1025   000358                     CRCCON1         equ	856	;# 
  1026   000359                     CRCCON2         equ	857	;# 
  1027   00035A                     SCANLADR        equ	858	;# 
  1028   00035A                     SCANLADRL       equ	858	;# 
  1029   00035B                     SCANLADRH       equ	859	;# 
  1030   00035C                     SCANLADRU       equ	860	;# 
  1031   00035D                     SCANHADR        equ	861	;# 
  1032   00035D                     SCANHADRL       equ	861	;# 
  1033   00035E                     SCANHADRH       equ	862	;# 
  1034   00035F                     SCANHADRU       equ	863	;# 
  1035   000360                     SCANCON0        equ	864	;# 
  1036   000361                     SCANTRIG        equ	865	;# 
  1037   000362                     IPR0            equ	866	;# 
  1038   000363                     IPR1            equ	867	;# 
  1039   000364                     IPR2            equ	868	;# 
  1040   000365                     IPR3            equ	869	;# 
  1041   000366                     IPR4            equ	870	;# 
  1042   000367                     IPR5            equ	871	;# 
  1043   000368                     IPR6            equ	872	;# 
  1044   000369                     IPR7            equ	873	;# 
  1045   00036A                     IPR8            equ	874	;# 
  1046   00036B                     IPR9            equ	875	;# 
  1047   00036C                     IPR10           equ	876	;# 
  1048   00036D                     IPR11           equ	877	;# 
  1049   00036E                     IPR12           equ	878	;# 
  1050   00036F                     IPR13           equ	879	;# 
  1051   000370                     IPR14           equ	880	;# 
  1052   000371                     IPR15           equ	881	;# 
  1053   000373                     STATUS_CSHAD    equ	883	;# 
  1054   000374                     WREG_CSHAD      equ	884	;# 
  1055   000375                     BSR_CSHAD       equ	885	;# 
  1056   000376                     SHADCON         equ	886	;# 
  1057   000377                     STATUS_SHAD     equ	887	;# 
  1058   000378                     WREG_SHAD       equ	888	;# 
  1059   000379                     BSR_SHAD        equ	889	;# 
  1060   00037A                     PCLATH_SHAD     equ	890	;# 
  1061   00037B                     PCLATU_SHAD     equ	891	;# 
  1062   00037C                     FSR0SH          equ	892	;# 
  1063   00037C                     FSR0L_SHAD      equ	892	;# 
  1064   00037D                     FSR0H_SHAD      equ	893	;# 
  1065   00037E                     FSR1SH          equ	894	;# 
  1066   00037E                     FSR1L_SHAD      equ	894	;# 
  1067   00037F                     FSR1H_SHAD      equ	895	;# 
  1068   000380                     FSR2SH          equ	896	;# 
  1069   000380                     FSR2L_SHAD      equ	896	;# 
  1070   000381                     FSR2H_SHAD      equ	897	;# 
  1071   000382                     PRODSH          equ	898	;# 
  1072   000382                     PRODL_SHAD      equ	898	;# 
  1073   000383                     PRODH_SHAD      equ	899	;# 
  1074   000387                     TU16ACON0       equ	903	;# 
  1075   000388                     TU16ACON1       equ	904	;# 
  1076   000389                     TU16AHLT        equ	905	;# 
  1077   00038A                     TU16APS         equ	906	;# 
  1078   00038B                     TU16ATMR        equ	907	;# 
  1079   00038B                     TU16ACR         equ	907	;# 
  1080   00038B                     TU16ATMRL       equ	907	;# 
  1081   00038B                     TU16ACRL        equ	907	;# 
  1082   00038C                     TU16ATMRH       equ	908	;# 
  1083   00038C                     TU16ACRH        equ	908	;# 
  1084   00038D                     TU16APR         equ	909	;# 
  1085   00038D                     TU16APRL        equ	909	;# 
  1086   00038E                     TU16APRH        equ	910	;# 
  1087   00038F                     TU16ACLK        equ	911	;# 
  1088   000390                     TU16AERS        equ	912	;# 
  1089   000393                     TU16BCON0       equ	915	;# 
  1090   000394                     TU16BCON1       equ	916	;# 
  1091   000395                     TU16BHLT        equ	917	;# 
  1092   000396                     TU16BPS         equ	918	;# 
  1093   000397                     TU16BTMR        equ	919	;# 
  1094   000397                     TU16BCR         equ	919	;# 
  1095   000397                     TU16BTMRL       equ	919	;# 
  1096   000397                     TU16BCRL        equ	919	;# 
  1097   000398                     TU16BTMRH       equ	920	;# 
  1098   000398                     TU16BCRH        equ	920	;# 
  1099   000399                     TU16BPR         equ	921	;# 
  1100   000399                     TU16BPRL        equ	921	;# 
  1101   00039A                     TU16BPRH        equ	922	;# 
  1102   00039B                     TU16BCLK        equ	923	;# 
  1103   00039C                     TU16BERS        equ	924	;# 
  1104   0003BB                     TUCHAIN         equ	955	;# 
  1105   0003BC                     CWG1CLK         equ	956	;# 
  1106   0003BC                     CWG1CLKCON      equ	956	;# 
  1107   0003BD                     CWG1ISM         equ	957	;# 
  1108   0003BE                     CWG1DBR         equ	958	;# 
  1109   0003BF                     CWG1DBF         equ	959	;# 
  1110   0003C0                     CWG1CON0        equ	960	;# 
  1111   0003C1                     CWG1CON1        equ	961	;# 
  1112   0003C2                     CWG1AS0         equ	962	;# 
  1113   0003C3                     CWG1AS1         equ	963	;# 
  1114   0003C4                     CWG1STR         equ	964	;# 
  1115   0003C5                     CWG2CLK         equ	965	;# 
  1116   0003C5                     CWG2CLKCON      equ	965	;# 
  1117   0003C6                     CWG2ISM         equ	966	;# 
  1118   0003C7                     CWG2DBR         equ	967	;# 
  1119   0003C8                     CWG2DBF         equ	968	;# 
  1120   0003C9                     CWG2CON0        equ	969	;# 
  1121   0003CA                     CWG2CON1        equ	970	;# 
  1122   0003CB                     CWG2AS0         equ	971	;# 
  1123   0003CC                     CWG2AS1         equ	972	;# 
  1124   0003CD                     CWG2STR         equ	973	;# 
  1125   0003CE                     CWG3CLK         equ	974	;# 
  1126   0003CE                     CWG3CLKCON      equ	974	;# 
  1127   0003CF                     CWG3ISM         equ	975	;# 
  1128   0003D0                     CWG3DBR         equ	976	;# 
  1129   0003D1                     CWG3DBF         equ	977	;# 
  1130   0003D2                     CWG3CON0        equ	978	;# 
  1131   0003D3                     CWG3CON1        equ	979	;# 
  1132   0003D4                     CWG3AS0         equ	980	;# 
  1133   0003D5                     CWG3AS1         equ	981	;# 
  1134   0003D6                     CWG3STR         equ	982	;# 
  1135   0003D7                     FVRCON          equ	983	;# 
  1136   0003D8                     ADCPCON         equ	984	;# 
  1137   0003D8                     ADCP            equ	984	;# 
  1138   0003D9                     ADLTH           equ	985	;# 
  1139   0003D9                     ADLTHL          equ	985	;# 
  1140   0003DA                     ADLTHH          equ	986	;# 
  1141   0003DB                     ADUTH           equ	987	;# 
  1142   0003DB                     ADUTHL          equ	987	;# 
  1143   0003DC                     ADUTHH          equ	988	;# 
  1144   0003DD                     ADERR           equ	989	;# 
  1145   0003DD                     ADERRL          equ	989	;# 
  1146   0003DE                     ADERRH          equ	990	;# 
  1147   0003DF                     ADSTPT          equ	991	;# 
  1148   0003DF                     ADSTPTL         equ	991	;# 
  1149   0003E0                     ADSTPTH         equ	992	;# 
  1150   0003E1                     ADFLTR          equ	993	;# 
  1151   0003E1                     ADFLTRL         equ	993	;# 
  1152   0003E2                     ADFLTRH         equ	994	;# 
  1153   0003E3                     ADACC           equ	995	;# 
  1154   0003E3                     ADACCL          equ	995	;# 
  1155   0003E4                     ADACCH          equ	996	;# 
  1156   0003E5                     ADACCU          equ	997	;# 
  1157   0003E6                     ADCNT           equ	998	;# 
  1158   0003E7                     ADRPT           equ	999	;# 
  1159   0003E8                     ADPREV          equ	1000	;# 
  1160   0003E8                     ADPREVL         equ	1000	;# 
  1161   0003E9                     ADPREVH         equ	1001	;# 
  1162   0003EA                     ADRES           equ	1002	;# 
  1163   0003EA                     ADRESL          equ	1002	;# 
  1164   0003EB                     ADRESH          equ	1003	;# 
  1165   0003EC                     ADPCH           equ	1004	;# 
  1166   0003EE                     ADACQ           equ	1006	;# 
  1167   0003EE                     ADACQL          equ	1006	;# 
  1168   0003EF                     ADACQH          equ	1007	;# 
  1169   0003F0                     ADCAP           equ	1008	;# 
  1170   0003F1                     ADPRE           equ	1009	;# 
  1171   0003F1                     ADPREL          equ	1009	;# 
  1172   0003F2                     ADPREH          equ	1010	;# 
  1173   0003F3                     ADCON0          equ	1011	;# 
  1174   0003F4                     ADCON1          equ	1012	;# 
  1175   0003F5                     ADCON2          equ	1013	;# 
  1176   0003F6                     ADCON3          equ	1014	;# 
  1177   0003F7                     ADSTAT          equ	1015	;# 
  1178   0003F8                     ADREF           equ	1016	;# 
  1179   0003F9                     ADACT           equ	1017	;# 
  1180   0003FA                     ADCLK           equ	1018	;# 
  1181   0003FB                     ADCTX           equ	1019	;# 
  1182   0003FC                     ADCSEL1         equ	1020	;# 
  1183   0003FD                     ADCSEL2         equ	1021	;# 
  1184   0003FE                     ADCSEL3         equ	1022	;# 
  1185   0003FF                     ADCSEL4         equ	1023	;# 
  1186   000400                     ANSELA          equ	1024	;# 
  1187   000401                     WPUA            equ	1025	;# 
  1188   000402                     ODCONA          equ	1026	;# 
  1189   000403                     SLRCONA         equ	1027	;# 
  1190   000404                     INLVLA          equ	1028	;# 
  1191   000405                     IOCAP           equ	1029	;# 
  1192   000406                     IOCAN           equ	1030	;# 
  1193   000407                     IOCAF           equ	1031	;# 
  1194   000408                     ANSELB          equ	1032	;# 
  1195   000409                     WPUB            equ	1033	;# 
  1196   00040A                     ODCONB          equ	1034	;# 
  1197   00040B                     SLRCONB         equ	1035	;# 
  1198   00040C                     INLVLB          equ	1036	;# 
  1199   00040D                     IOCBP           equ	1037	;# 
  1200   00040E                     IOCBN           equ	1038	;# 
  1201   00040F                     IOCBF           equ	1039	;# 
  1202   000410                     ANSELC          equ	1040	;# 
  1203   000411                     WPUC            equ	1041	;# 
  1204   000412                     ODCONC          equ	1042	;# 
  1205   000413                     SLRCONC         equ	1043	;# 
  1206   000414                     INLVLC          equ	1044	;# 
  1207   000415                     IOCCP           equ	1045	;# 
  1208   000416                     IOCCN           equ	1046	;# 
  1209   000417                     IOCCF           equ	1047	;# 
  1210   000421                     WPUE            equ	1057	;# 
  1211   000424                     INLVLE          equ	1060	;# 
  1212   000425                     IOCEP           equ	1061	;# 
  1213   000426                     IOCEN           equ	1062	;# 
  1214   000427                     IOCEF           equ	1063	;# 
  1215   000440                     NCO1ACC         equ	1088	;# 
  1216   000440                     NCO1ACCL        equ	1088	;# 
  1217   000441                     NCO1ACCH        equ	1089	;# 
  1218   000442                     NCO1ACCU        equ	1090	;# 
  1219   000443                     NCO1INC         equ	1091	;# 
  1220   000443                     NCO1INCL        equ	1091	;# 
  1221   000444                     NCO1INCH        equ	1092	;# 
  1222   000445                     NCO1INCU        equ	1093	;# 
  1223   000446                     NCO1CON         equ	1094	;# 
  1224   000447                     NCO1CLK         equ	1095	;# 
  1225   000448                     NCO2ACC         equ	1096	;# 
  1226   000448                     NCO2ACCL        equ	1096	;# 
  1227   000449                     NCO2ACCH        equ	1097	;# 
  1228   00044A                     NCO2ACCU        equ	1098	;# 
  1229   00044B                     NCO2INC         equ	1099	;# 
  1230   00044B                     NCO2INCL        equ	1099	;# 
  1231   00044C                     NCO2INCH        equ	1100	;# 
  1232   00044D                     NCO2INCU        equ	1101	;# 
  1233   00044E                     NCO2CON         equ	1102	;# 
  1234   00044F                     NCO2CLK         equ	1103	;# 
  1235   000450                     NCO3ACC         equ	1104	;# 
  1236   000450                     NCO3ACCL        equ	1104	;# 
  1237   000451                     NCO3ACCH        equ	1105	;# 
  1238   000452                     NCO3ACCU        equ	1106	;# 
  1239   000453                     NCO3INC         equ	1107	;# 
  1240   000453                     NCO3INCL        equ	1107	;# 
  1241   000454                     NCO3INCH        equ	1108	;# 
  1242   000455                     NCO3INCU        equ	1109	;# 
  1243   000456                     NCO3CON         equ	1110	;# 
  1244   000457                     NCO3CLK         equ	1111	;# 
  1245   000458                     FSCMCON         equ	1112	;# 
  1246   000459                     IVTLOCK         equ	1113	;# 
  1247   00045A                     IVTAD           equ	1114	;# 
  1248   00045A                     IVTADL          equ	1114	;# 
  1249   00045B                     IVTADH          equ	1115	;# 
  1250   00045C                     IVTADU          equ	1116	;# 
  1251   00045D                     IVTBASE         equ	1117	;# 
  1252   00045D                     IVTBASEL        equ	1117	;# 
  1253   00045E                     IVTBASEH        equ	1118	;# 
  1254   00045F                     IVTBASEU        equ	1119	;# 
  1255   000460                     PWM1ERS         equ	1120	;# 
  1256   000461                     PWM1CLK         equ	1121	;# 
  1257   000462                     PWM1LDS         equ	1122	;# 
  1258   000463                     PWM1PR          equ	1123	;# 
  1259   000463                     PWM1PRL         equ	1123	;# 
  1260   000464                     PWM1PRH         equ	1124	;# 
  1261   000465                     PWM1CPRE        equ	1125	;# 
  1262   000466                     PWM1PIPOS       equ	1126	;# 
  1263   000467                     PWM1GIR         equ	1127	;# 
  1264   000468                     PWM1GIE         equ	1128	;# 
  1265   000469                     PWM1CON         equ	1129	;# 
  1266   00046A                     PWM1S1CFG       equ	1130	;# 
  1267   00046B                     PWM1S1P1        equ	1131	;# 
  1268   00046B                     PWM1S1P1L       equ	1131	;# 
  1269   00046C                     PWM1S1P1H       equ	1132	;# 
  1270   00046D                     PWM1S1P2        equ	1133	;# 
  1271   00046D                     PWM1S1P2L       equ	1133	;# 
  1272   00046E                     PWM1S1P2H       equ	1134	;# 
  1273   00046F                     PWM2ERS         equ	1135	;# 
  1274   000470                     PWM2CLK         equ	1136	;# 
  1275   000471                     PWM2LDS         equ	1137	;# 
  1276   000472                     PWM2PR          equ	1138	;# 
  1277   000472                     PWM2PRL         equ	1138	;# 
  1278   000473                     PWM2PRH         equ	1139	;# 
  1279   000474                     PWM2CPRE        equ	1140	;# 
  1280   000475                     PWM2PIPOS       equ	1141	;# 
  1281   000476                     PWM2GIR         equ	1142	;# 
  1282   000477                     PWM2GIE         equ	1143	;# 
  1283   000478                     PWM2CON         equ	1144	;# 
  1284   000479                     PWM2S1CFG       equ	1145	;# 
  1285   00047A                     PWM2S1P1        equ	1146	;# 
  1286   00047A                     PWM2S1P1L       equ	1146	;# 
  1287   00047B                     PWM2S1P1H       equ	1147	;# 
  1288   00047C                     PWM2S1P2        equ	1148	;# 
  1289   00047C                     PWM2S1P2L       equ	1148	;# 
  1290   00047D                     PWM2S1P2H       equ	1149	;# 
  1291   00047E                     PWM3ERS         equ	1150	;# 
  1292   00047F                     PWM3CLK         equ	1151	;# 
  1293   000480                     PWM3LDS         equ	1152	;# 
  1294   000481                     PWM3PR          equ	1153	;# 
  1295   000481                     PWM3PRL         equ	1153	;# 
  1296   000482                     PWM3PRH         equ	1154	;# 
  1297   000483                     PWM3CPRE        equ	1155	;# 
  1298   000484                     PWM3PIPOS       equ	1156	;# 
  1299   000485                     PWM3GIR         equ	1157	;# 
  1300   000486                     PWM3GIE         equ	1158	;# 
  1301   000487                     PWM3CON         equ	1159	;# 
  1302   000488                     PWM3S1CFG       equ	1160	;# 
  1303   000489                     PWM3S1P1        equ	1161	;# 
  1304   000489                     PWM3S1P1L       equ	1161	;# 
  1305   00048A                     PWM3S1P1H       equ	1162	;# 
  1306   00048B                     PWM3S1P2        equ	1163	;# 
  1307   00048B                     PWM3S1P2L       equ	1163	;# 
  1308   00048C                     PWM3S1P2H       equ	1164	;# 
  1309   00048D                     PWM4ERS         equ	1165	;# 
  1310   00048E                     PWM4CLK         equ	1166	;# 
  1311   00048F                     PWM4LDS         equ	1167	;# 
  1312   000490                     PWM4PR          equ	1168	;# 
  1313   000490                     PWM4PRL         equ	1168	;# 
  1314   000491                     PWM4PRH         equ	1169	;# 
  1315   000492                     PWM4CPRE        equ	1170	;# 
  1316   000493                     PWM4PIPOS       equ	1171	;# 
  1317   000494                     PWM4GIR         equ	1172	;# 
  1318   000495                     PWM4GIE         equ	1173	;# 
  1319   000496                     PWM4CON         equ	1174	;# 
  1320   000497                     PWM4S1CFG       equ	1175	;# 
  1321   000498                     PWM4S1P1        equ	1176	;# 
  1322   000498                     PWM4S1P1L       equ	1176	;# 
  1323   000499                     PWM4S1P1H       equ	1177	;# 
  1324   00049A                     PWM4S1P2        equ	1178	;# 
  1325   00049A                     PWM4S1P2L       equ	1178	;# 
  1326   00049B                     PWM4S1P2H       equ	1179	;# 
  1327   00049C                     PWMLOAD         equ	1180	;# 
  1328   00049D                     PWMEN           equ	1181	;# 
  1329   00049E                     PIE0            equ	1182	;# 
  1330   00049F                     PIE1            equ	1183	;# 
  1331   0004A0                     PIE2            equ	1184	;# 
  1332   0004A1                     PIE3            equ	1185	;# 
  1333   0004A2                     PIE4            equ	1186	;# 
  1334   0004A3                     PIE5            equ	1187	;# 
  1335   0004A4                     PIE6            equ	1188	;# 
  1336   0004A5                     PIE7            equ	1189	;# 
  1337   0004A6                     PIE8            equ	1190	;# 
  1338   0004A7                     PIE9            equ	1191	;# 
  1339   0004A8                     PIE10           equ	1192	;# 
  1340   0004A9                     PIE11           equ	1193	;# 
  1341   0004AA                     PIE12           equ	1194	;# 
  1342   0004AB                     PIE13           equ	1195	;# 
  1343   0004AC                     PIE14           equ	1196	;# 
  1344   0004AD                     PIE15           equ	1197	;# 
  1345   0004AE                     PIR0            equ	1198	;# 
  1346   0004AF                     PIR1            equ	1199	;# 
  1347   0004B0                     PIR2            equ	1200	;# 
  1348   0004B1                     PIR3            equ	1201	;# 
  1349   0004B2                     PIR4            equ	1202	;# 
  1350   0004B3                     PIR5            equ	1203	;# 
  1351   0004B4                     PIR6            equ	1204	;# 
  1352   0004B5                     PIR7            equ	1205	;# 
  1353   0004B6                     PIR8            equ	1206	;# 
  1354   0004B7                     PIR9            equ	1207	;# 
  1355   0004B8                     PIR10           equ	1208	;# 
  1356   0004B9                     PIR11           equ	1209	;# 
  1357   0004BA                     PIR12           equ	1210	;# 
  1358   0004BB                     PIR13           equ	1211	;# 
  1359   0004BC                     PIR14           equ	1212	;# 
  1360   0004BD                     PIR15           equ	1213	;# 
  1361   0004BE                     LATA            equ	1214	;# 
  1362   0004BF                     LATB            equ	1215	;# 
  1363   0004C0                     LATC            equ	1216	;# 
  1364   0004C6                     TRISA           equ	1222	;# 
  1365   0004C7                     TRISB           equ	1223	;# 
  1366   0004C8                     TRISC           equ	1224	;# 
  1367   0004CA                     TRISE           equ	1226	;# 
  1368   0004CE                     PORTA           equ	1230	;# 
  1369   0004CF                     PORTB           equ	1231	;# 
  1370   0004D0                     PORTC           equ	1232	;# 
  1371   0004D2                     PORTE           equ	1234	;# 
  1372   0004D6                     INTCON0         equ	1238	;# 
  1373   0004D7                     INTCON1         equ	1239	;# 
  1374   0004D8                     STATUS          equ	1240	;# 
  1375   0004D9                     FSR2            equ	1241	;# 
  1376   0004D9                     FSR2L           equ	1241	;# 
  1377   0004DA                     FSR2H           equ	1242	;# 
  1378   0004DB                     PLUSW2          equ	1243	;# 
  1379   0004DC                     PREINC2         equ	1244	;# 
  1380   0004DD                     POSTDEC2        equ	1245	;# 
  1381   0004DE                     POSTINC2        equ	1246	;# 
  1382   0004DF                     INDF2           equ	1247	;# 
  1383   0004E0                     BSR             equ	1248	;# 
  1384   0004E1                     FSR1            equ	1249	;# 
  1385   0004E1                     FSR1L           equ	1249	;# 
  1386   0004E2                     FSR1H           equ	1250	;# 
  1387   0004E3                     PLUSW1          equ	1251	;# 
  1388   0004E4                     PREINC1         equ	1252	;# 
  1389   0004E5                     POSTDEC1        equ	1253	;# 
  1390   0004E6                     POSTINC1        equ	1254	;# 
  1391   0004E7                     INDF1           equ	1255	;# 
  1392   0004E8                     WREG            equ	1256	;# 
  1393   0004E9                     FSR0            equ	1257	;# 
  1394   0004E9                     FSR0L           equ	1257	;# 
  1395   0004EA                     FSR0H           equ	1258	;# 
  1396   0004EB                     PLUSW0          equ	1259	;# 
  1397   0004EC                     PREINC0         equ	1260	;# 
  1398   0004ED                     POSTDEC0        equ	1261	;# 
  1399   0004EE                     POSTINC0        equ	1262	;# 
  1400   0004EF                     INDF0           equ	1263	;# 
  1401   0004F0                     PCON0           equ	1264	;# 
  1402   0004F1                     PCON1           equ	1265	;# 
  1403   0004F2                     CPUDOZE         equ	1266	;# 
  1404   0004F3                     PROD            equ	1267	;# 
  1405   0004F3                     PRODL           equ	1267	;# 
  1406   0004F4                     PRODH           equ	1268	;# 
  1407   0004F5                     TABLAT          equ	1269	;# 
  1408   0004F6                     TBLPTR          equ	1270	;# 
  1409   0004F6                     TBLPTRL         equ	1270	;# 
  1410   0004F7                     TBLPTRH         equ	1271	;# 
  1411   0004F8                     TBLPTRU         equ	1272	;# 
  1412   0004F9                     PCLAT           equ	1273	;# 
  1413   0004F9                     PCL             equ	1273	;# 
  1414   0004FA                     PCLATH          equ	1274	;# 
  1415   0004FB                     PCLATU          equ	1275	;# 
  1416   0004FC                     STKPTR          equ	1276	;# 
  1417   0004FD                     TOS             equ	1277	;# 
  1418   0004FD                     TOSL            equ	1277	;# 
  1419   0004FE                     TOSH            equ	1278	;# 
  1420   0004FF                     TOSU            equ	1279	;# 
  1421   000038                     BOOTREG         equ	56	;# 
  1422   000039                     CLKRCON         equ	57	;# 
  1423   00003A                     CLKRCLK         equ	58	;# 
  1424   000040                     NVMCON0         equ	64	;# 
  1425   000041                     NVMCON1         equ	65	;# 
  1426   000042                     NVMLOCK         equ	66	;# 
  1427   000043                     NVMADR          equ	67	;# 
  1428   000043                     NVMADRL         equ	67	;# 
  1429   000044                     NVMADRH         equ	68	;# 
  1430   000045                     NVMADRU         equ	69	;# 
  1431   000046                     NVMDAT          equ	70	;# 
  1432   000046                     NVMDATL         equ	70	;# 
  1433   000047                     NVMDATH         equ	71	;# 
  1434   000048                     VREGCON         equ	72	;# 
  1435   000049                     BORCON          equ	73	;# 
  1436   00004A                     HLVDCON0        equ	74	;# 
  1437   00004B                     HLVDCON1        equ	75	;# 
  1438   00004C                     ZCDCON          equ	76	;# 
  1439   000060                     PMD0            equ	96	;# 
  1440   000061                     PMD1            equ	97	;# 
  1441   000062                     PMD2            equ	98	;# 
  1442   000063                     PMD3            equ	99	;# 
  1443   000064                     PMD4            equ	100	;# 
  1444   000065                     PMD5            equ	101	;# 
  1445   000066                     PMD6            equ	102	;# 
  1446   000067                     PMD7            equ	103	;# 
  1447   000068                     PMD8            equ	104	;# 
  1448   00006A                     MD1CON0         equ	106	;# 
  1449   00006B                     MD1CON1         equ	107	;# 
  1450   00006C                     MD1SRC          equ	108	;# 
  1451   00006D                     MD1CARL         equ	109	;# 
  1452   00006E                     MD1CARH         equ	110	;# 
  1453   00006F                     CMOUT           equ	111	;# 
  1454   000070                     CM1CON0         equ	112	;# 
  1455   000071                     CM1CON1         equ	113	;# 
  1456   000072                     CM1NCH          equ	114	;# 
  1457   000073                     CM1PCH          equ	115	;# 
  1458   000074                     CM2CON0         equ	116	;# 
  1459   000075                     CM2CON1         equ	117	;# 
  1460   000076                     CM2NCH          equ	118	;# 
  1461   000077                     CM2PCH          equ	119	;# 
  1462   000078                     WDTCON0         equ	120	;# 
  1463   000079                     WDTCON1         equ	121	;# 
  1464   00007A                     WDTPSL          equ	122	;# 
  1465   00007B                     WDTPSH          equ	123	;# 
  1466   00007C                     WDTTMR          equ	124	;# 
  1467   00007D                     DAC1DAT         equ	125	;# 
  1468   00007D                     DAC1DATL        equ	125	;# 
  1469   00007F                     DAC1CON         equ	127	;# 
  1470   000080                     SPI1RXB         equ	128	;# 
  1471   000081                     SPI1TXB         equ	129	;# 
  1472   000082                     SPI1TCNT        equ	130	;# 
  1473   000082                     SPI1TCNTL       equ	130	;# 
  1474   000083                     SPI1TCNTH       equ	131	;# 
  1475   000084                     SPI1CON0        equ	132	;# 
  1476   000085                     SPI1CON1        equ	133	;# 
  1477   000086                     SPI1CON2        equ	134	;# 
  1478   000087                     SPI1STATUS      equ	135	;# 
  1479   000088                     SPI1TWIDTH      equ	136	;# 
  1480   000089                     SPI1BAUD        equ	137	;# 
  1481   00008A                     SPI1INTF        equ	138	;# 
  1482   00008B                     SPI1INTE        equ	139	;# 
  1483   00008C                     SPI1CLK         equ	140	;# 
  1484   00008D                     SPI2RXB         equ	141	;# 
  1485   00008E                     SPI2TXB         equ	142	;# 
  1486   00008F                     SPI2TCNT        equ	143	;# 
  1487   00008F                     SPI2TCNTL       equ	143	;# 
  1488   000090                     SPI2TCNTH       equ	144	;# 
  1489   000091                     SPI2CON0        equ	145	;# 
  1490   000092                     SPI2CON1        equ	146	;# 
  1491   000093                     SPI2CON2        equ	147	;# 
  1492   000094                     SPI2STATUS      equ	148	;# 
  1493   000095                     SPI2TWIDTH      equ	149	;# 
  1494   000096                     SPI2BAUD        equ	150	;# 
  1495   000097                     SPI2INTF        equ	151	;# 
  1496   000098                     SPI2INTE        equ	152	;# 
  1497   000099                     SPI2CLK         equ	153	;# 
  1498   0000AC                     ACTCON          equ	172	;# 
  1499   0000AD                     OSCCON1         equ	173	;# 
  1500   0000AE                     OSCCON2         equ	174	;# 
  1501   0000AF                     OSCCON3         equ	175	;# 
  1502   0000B0                     OSCTUNE         equ	176	;# 
  1503   0000B1                     OSCFRQ          equ	177	;# 
  1504   0000B1                     OSCFREQ         equ	177	;# 
  1505   0000B2                     OSCSTAT         equ	178	;# 
  1506   0000B2                     OSCSTAT1        equ	178	;# 
  1507   0000B3                     OSCEN           equ	179	;# 
  1508   0000B4                     PRLOCK          equ	180	;# 
  1509   0000B5                     SCANPR          equ	181	;# 
  1510   0000B6                     DMA1PR          equ	182	;# 
  1511   0000B7                     DMA2PR          equ	183	;# 
  1512   0000B8                     DMA3PR          equ	184	;# 
  1513   0000B9                     DMA4PR          equ	185	;# 
  1514   0000BA                     DMA5PR          equ	186	;# 
  1515   0000BB                     DMA6PR          equ	187	;# 
  1516   0000BC                     DMA7PR          equ	188	;# 
  1517   0000BD                     DMA8PR          equ	189	;# 
  1518   0000BE                     MAINPR          equ	190	;# 
  1519   0000BF                     ISRPR           equ	191	;# 
  1520   0000D4                     CLCDATA         equ	212	;# 
  1521   0000D5                     CLCSELECT       equ	213	;# 
  1522   0000D6                     CLCnCON         equ	214	;# 
  1523   0000D7                     CLCnPOL         equ	215	;# 
  1524   0000D8                     CLCnSEL0        equ	216	;# 
  1525   0000D9                     CLCnSEL1        equ	217	;# 
  1526   0000DA                     CLCnSEL2        equ	218	;# 
  1527   0000DB                     CLCnSEL3        equ	219	;# 
  1528   0000DC                     CLCnGLS0        equ	220	;# 
  1529   0000DD                     CLCnGLS1        equ	221	;# 
  1530   0000DE                     CLCnGLS2        equ	222	;# 
  1531   0000DF                     CLCnGLS3        equ	223	;# 
  1532   0000E8                     DMASELECT       equ	232	;# 
  1533   0000E9                     DMAnBUF         equ	233	;# 
  1534   0000EA                     DMAnDCNT        equ	234	;# 
  1535   0000EA                     DMAnDCNTL       equ	234	;# 
  1536   0000EB                     DMAnDCNTH       equ	235	;# 
  1537   0000EC                     DMAnDPTR        equ	236	;# 
  1538   0000EC                     DMAnDPTRL       equ	236	;# 
  1539   0000ED                     DMAnDPTRH       equ	237	;# 
  1540   0000EE                     DMAnDSZ         equ	238	;# 
  1541   0000EE                     DMAnDSZL        equ	238	;# 
  1542   0000EF                     DMAnDSZH        equ	239	;# 
  1543   0000F0                     DMAnDSA         equ	240	;# 
  1544   0000F0                     DMAnDSAL        equ	240	;# 
  1545   0000F1                     DMAnDSAH        equ	241	;# 
  1546   0000F2                     DMAnSCNT        equ	242	;# 
  1547   0000F2                     DMAnSCNTL       equ	242	;# 
  1548   0000F3                     DMAnSCNTH       equ	243	;# 
  1549   0000F4                     DMAnSPTR        equ	244	;# 
  1550   0000F4                     DMAnSPTRL       equ	244	;# 
  1551   0000F5                     DMAnSPTRH       equ	245	;# 
  1552   0000F6                     DMAnSPTRU       equ	246	;# 
  1553   0000F7                     DMAnSSZ         equ	247	;# 
  1554   0000F7                     DMAnSSZL        equ	247	;# 
  1555   0000F8                     DMAnSSZH        equ	248	;# 
  1556   0000F9                     DMAnSSA         equ	249	;# 
  1557   0000F9                     DMAnSSAL        equ	249	;# 
  1558   0000FA                     DMAnSSAH        equ	250	;# 
  1559   0000FB                     DMAnSSAU        equ	251	;# 
  1560   0000FC                     DMAnCON0        equ	252	;# 
  1561   0000FD                     DMAnCON1        equ	253	;# 
  1562   0000FE                     DMAnAIRQ        equ	254	;# 
  1563   0000FF                     DMAnSIRQ        equ	255	;# 
  1564   000100                     C1CONL          equ	256	;# 
  1565   000101                     C1CONH          equ	257	;# 
  1566   000102                     C1CONU          equ	258	;# 
  1567   000103                     C1CONT          equ	259	;# 
  1568   000104                     C1NBTCFGL       equ	260	;# 
  1569   000105                     C1NBTCFGH       equ	261	;# 
  1570   000106                     C1NBTCFGU       equ	262	;# 
  1571   000107                     C1NBTCFGT       equ	263	;# 
  1572   000108                     C1DBTCFGL       equ	264	;# 
  1573   000109                     C1DBTCFGH       equ	265	;# 
  1574   00010A                     C1DBTCFGU       equ	266	;# 
  1575   00010B                     C1DBTCFGT       equ	267	;# 
  1576   00010C                     C1TDCL          equ	268	;# 
  1577   00010D                     C1TDCH          equ	269	;# 
  1578   00010E                     C1TDCU          equ	270	;# 
  1579   000110                     C1TBC           equ	272	;# 
  1580   000110                     C1TBCL          equ	272	;# 
  1581   000111                     C1TBCH          equ	273	;# 
  1582   000112                     C1TBCU          equ	274	;# 
  1583   000113                     C1TBCT          equ	275	;# 
  1584   000114                     C1TSCONL        equ	276	;# 
  1585   000115                     C1TSCONH        equ	277	;# 
  1586   000116                     C1TSCONU        equ	278	;# 
  1587   000117                     C1TSCONT        equ	279	;# 
  1588   000118                     C1VECL          equ	280	;# 
  1589   000119                     C1VECH          equ	281	;# 
  1590   00011A                     C1VECU          equ	282	;# 
  1591   00011B                     C1VECT          equ	283	;# 
  1592   00011C                     C1INTL          equ	284	;# 
  1593   00011D                     C1INTH          equ	285	;# 
  1594   00011E                     C1INTU          equ	286	;# 
  1595   00011F                     C1INTT          equ	287	;# 
  1596   000120                     C1RXIF          equ	288	;# 
  1597   000120                     C1RXIFL         equ	288	;# 
  1598   000121                     C1RXIFH         equ	289	;# 
  1599   000122                     C1RXIFU         equ	290	;# 
  1600   000123                     C1RXIFT         equ	291	;# 
  1601   000124                     C1TXIF          equ	292	;# 
  1602   000124                     C1TXIFL         equ	292	;# 
  1603   000125                     C1TXIFH         equ	293	;# 
  1604   000126                     C1TXIFU         equ	294	;# 
  1605   000127                     C1TXIFT         equ	295	;# 
  1606   000128                     C1RXOVIF        equ	296	;# 
  1607   000128                     C1RXOVIFL       equ	296	;# 
  1608   000129                     C1RXOVIFH       equ	297	;# 
  1609   00012A                     C1RXOVIFU       equ	298	;# 
  1610   00012B                     C1RXOVIFT       equ	299	;# 
  1611   00012C                     C1TXATIF        equ	300	;# 
  1612   00012C                     C1TXATIFL       equ	300	;# 
  1613   00012D                     C1TXATIFH       equ	301	;# 
  1614   00012E                     C1TXATIFU       equ	302	;# 
  1615   00012F                     C1TXATIFT       equ	303	;# 
  1616   000130                     C1TXREQ         equ	304	;# 
  1617   000130                     C1TXREQL        equ	304	;# 
  1618   000131                     C1TXREQH        equ	305	;# 
  1619   000132                     C1TXREQU        equ	306	;# 
  1620   000133                     C1TXREQT        equ	307	;# 
  1621   000134                     C1TRECL         equ	308	;# 
  1622   000135                     C1TRECH         equ	309	;# 
  1623   000136                     C1TRECU         equ	310	;# 
  1624   000137                     C1TRECT         equ	311	;# 
  1625   000138                     C1BDIAG0L       equ	312	;# 
  1626   000139                     C1BDIAG0H       equ	313	;# 
  1627   00013C                     C1BDIAG1L       equ	316	;# 
  1628   00013D                     C1BDIAG1H       equ	317	;# 
  1629   00013E                     C1BDIAG1U       equ	318	;# 
  1630   00013F                     C1BDIAG1T       equ	319	;# 
  1631   000140                     C1TEFCONL       equ	320	;# 
  1632   000141                     C1TEFCONH       equ	321	;# 
  1633   000142                     C1TEFCONU       equ	322	;# 
  1634   000143                     C1TEFCONT       equ	323	;# 
  1635   000144                     C1TEFSTAL       equ	324	;# 
  1636   000145                     C1TEFSTAH       equ	325	;# 
  1637   000146                     C1TEFSTAU       equ	326	;# 
  1638   000147                     C1TEFSTAT       equ	327	;# 
  1639   000148                     C1TEFUA         equ	328	;# 
  1640   000148                     C1TEFUAL        equ	328	;# 
  1641   000149                     C1TEFUAH        equ	329	;# 
  1642   00014A                     C1TEFUAU        equ	330	;# 
  1643   00014B                     C1TEFUAT        equ	331	;# 
  1644   00014C                     C1FIFOBA        equ	332	;# 
  1645   00014C                     C1FIFOBAL       equ	332	;# 
  1646   00014D                     C1FIFOBAH       equ	333	;# 
  1647   00014E                     C1FIFOBAU       equ	334	;# 
  1648   00014F                     C1FIFOBAT       equ	335	;# 
  1649   000150                     C1TXQCONL       equ	336	;# 
  1650   000151                     C1TXQCONH       equ	337	;# 
  1651   000152                     C1TXQCONU       equ	338	;# 
  1652   000153                     C1TXQCONT       equ	339	;# 
  1653   000154                     C1TXQSTAL       equ	340	;# 
  1654   000155                     C1TXQSTAH       equ	341	;# 
  1655   000156                     C1TXQSTAU       equ	342	;# 
  1656   000157                     C1TXQSTAT       equ	343	;# 
  1657   000158                     C1TXQUA         equ	344	;# 
  1658   000158                     C1TXQUAL        equ	344	;# 
  1659   000159                     C1TXQUAH        equ	345	;# 
  1660   00015A                     C1TXQUAU        equ	346	;# 
  1661   00015B                     C1TXQUAT        equ	347	;# 
  1662   00015C                     C1FIFOCON1      equ	348	;# 
  1663   00015C                     C1FIFOCON1L     equ	348	;# 
  1664   00015D                     C1FIFOCON1H     equ	349	;# 
  1665   00015E                     C1FIFOCON1U     equ	350	;# 
  1666   00015F                     C1FIFOCON1T     equ	351	;# 
  1667   000160                     C1FIFOSTA1      equ	352	;# 
  1668   000160                     C1FIFOSTA1L     equ	352	;# 
  1669   000161                     C1FIFOSTA1H     equ	353	;# 
  1670   000162                     C1FIFOSTA1U     equ	354	;# 
  1671   000163                     C1FIFOSTA1T     equ	355	;# 
  1672   000164                     C1FIFOUA1       equ	356	;# 
  1673   000164                     C1FIFOUA1L      equ	356	;# 
  1674   000165                     C1FIFOUA1H      equ	357	;# 
  1675   000166                     C1FIFOUA1U      equ	358	;# 
  1676   000167                     C1FIFOUA1T      equ	359	;# 
  1677   000168                     C1FIFOCON2      equ	360	;# 
  1678   000168                     C1FIFOCON2L     equ	360	;# 
  1679   000169                     C1FIFOCON2H     equ	361	;# 
  1680   00016A                     C1FIFOCON2U     equ	362	;# 
  1681   00016B                     C1FIFOCON2T     equ	363	;# 
  1682   00016C                     C1FIFOSTA2      equ	364	;# 
  1683   00016C                     C1FIFOSTA2L     equ	364	;# 
  1684   00016D                     C1FIFOSTA2H     equ	365	;# 
  1685   00016E                     C1FIFOSTA2U     equ	366	;# 
  1686   00016F                     C1FIFOSTA2T     equ	367	;# 
  1687   000170                     C1FIFOUA2       equ	368	;# 
  1688   000170                     C1FIFOUA2L      equ	368	;# 
  1689   000171                     C1FIFOUA2H      equ	369	;# 
  1690   000172                     C1FIFOUA2U      equ	370	;# 
  1691   000173                     C1FIFOUA2T      equ	371	;# 
  1692   000174                     C1FIFOCON3      equ	372	;# 
  1693   000174                     C1FIFOCON3L     equ	372	;# 
  1694   000175                     C1FIFOCON3H     equ	373	;# 
  1695   000176                     C1FIFOCON3U     equ	374	;# 
  1696   000177                     C1FIFOCON3T     equ	375	;# 
  1697   000178                     C1FIFOSTA3      equ	376	;# 
  1698   000178                     C1FIFOSTA3L     equ	376	;# 
  1699   000179                     C1FIFOSTA3H     equ	377	;# 
  1700   00017A                     C1FIFOSTA3U     equ	378	;# 
  1701   00017B                     C1FIFOSTA3T     equ	379	;# 
  1702   00017C                     C1FIFOUA3       equ	380	;# 
  1703   00017C                     C1FIFOUA3L      equ	380	;# 
  1704   00017D                     C1FIFOUA3H      equ	381	;# 
  1705   00017E                     C1FIFOUA3U      equ	382	;# 
  1706   00017F                     C1FIFOUA3T      equ	383	;# 
  1707   000180                     C1FLTCON0L      equ	384	;# 
  1708   000181                     C1FLTCON0H      equ	385	;# 
  1709   000182                     C1FLTCON0U      equ	386	;# 
  1710   000183                     C1FLTCON0T      equ	387	;# 
  1711   000184                     C1FLTCON1L      equ	388	;# 
  1712   000185                     C1FLTCON1H      equ	389	;# 
  1713   000186                     C1FLTCON1U      equ	390	;# 
  1714   000187                     C1FLTCON1T      equ	391	;# 
  1715   000188                     C1FLTCON2L      equ	392	;# 
  1716   000189                     C1FLTCON2H      equ	393	;# 
  1717   00018A                     C1FLTCON2U      equ	394	;# 
  1718   00018B                     C1FLTCON2T      equ	395	;# 
  1719   00018C                     C1FLTOBJ0       equ	396	;# 
  1720   00018C                     C1FLTOBJ0L      equ	396	;# 
  1721   00018D                     C1FLTOBJ0H      equ	397	;# 
  1722   00018E                     C1FLTOBJ0U      equ	398	;# 
  1723   00018F                     C1FLTOBJ0T      equ	399	;# 
  1724   000190                     C1MASK0         equ	400	;# 
  1725   000190                     C1MASK0L        equ	400	;# 
  1726   000191                     C1MASK0H        equ	401	;# 
  1727   000192                     C1MASK0U        equ	402	;# 
  1728   000193                     C1MASK0T        equ	403	;# 
  1729   000194                     C1FLTOBJ1       equ	404	;# 
  1730   000194                     C1FLTOBJ1L      equ	404	;# 
  1731   000195                     C1FLTOBJ1H      equ	405	;# 
  1732   000196                     C1FLTOBJ1U      equ	406	;# 
  1733   000197                     C1FLTOBJ1T      equ	407	;# 
  1734   000198                     C1MASK1         equ	408	;# 
  1735   000198                     C1MASK1L        equ	408	;# 
  1736   000199                     C1MASK1H        equ	409	;# 
  1737   00019A                     C1MASK1U        equ	410	;# 
  1738   00019B                     C1MASK1T        equ	411	;# 
  1739   00019C                     C1FLTOBJ2       equ	412	;# 
  1740   00019C                     C1FLTOBJ2L      equ	412	;# 
  1741   00019D                     C1FLTOBJ2H      equ	413	;# 
  1742   00019E                     C1FLTOBJ2U      equ	414	;# 
  1743   00019F                     C1FLTOBJ2T      equ	415	;# 
  1744   0001A0                     C1MASK2         equ	416	;# 
  1745   0001A0                     C1MASK2L        equ	416	;# 
  1746   0001A1                     C1MASK2H        equ	417	;# 
  1747   0001A2                     C1MASK2U        equ	418	;# 
  1748   0001A3                     C1MASK2T        equ	419	;# 
  1749   0001A4                     C1FLTOBJ3       equ	420	;# 
  1750   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1751   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1752   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1753   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1754   0001A8                     C1MASK3         equ	424	;# 
  1755   0001A8                     C1MASK3L        equ	424	;# 
  1756   0001A9                     C1MASK3H        equ	425	;# 
  1757   0001AA                     C1MASK3U        equ	426	;# 
  1758   0001AB                     C1MASK3T        equ	427	;# 
  1759   0001AC                     C1FLTOBJ4       equ	428	;# 
  1760   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1761   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1762   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1763   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1764   0001B0                     C1MASK4         equ	432	;# 
  1765   0001B0                     C1MASK4L        equ	432	;# 
  1766   0001B1                     C1MASK4H        equ	433	;# 
  1767   0001B2                     C1MASK4U        equ	434	;# 
  1768   0001B3                     C1MASK4T        equ	435	;# 
  1769   0001B4                     C1FLTOBJ5       equ	436	;# 
  1770   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1771   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1772   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1773   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1774   0001B8                     C1MASK5         equ	440	;# 
  1775   0001B8                     C1MASK5L        equ	440	;# 
  1776   0001B9                     C1MASK5H        equ	441	;# 
  1777   0001BA                     C1MASK5U        equ	442	;# 
  1778   0001BB                     C1MASK5T        equ	443	;# 
  1779   0001BC                     C1FLTOBJ6       equ	444	;# 
  1780   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1781   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1782   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1783   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1784   0001C0                     C1MASK6         equ	448	;# 
  1785   0001C0                     C1MASK6L        equ	448	;# 
  1786   0001C1                     C1MASK6H        equ	449	;# 
  1787   0001C2                     C1MASK6U        equ	450	;# 
  1788   0001C3                     C1MASK6T        equ	451	;# 
  1789   0001C4                     C1FLTOBJ7       equ	452	;# 
  1790   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1791   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1792   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1793   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1794   0001C8                     C1MASK7         equ	456	;# 
  1795   0001C8                     C1MASK7L        equ	456	;# 
  1796   0001C9                     C1MASK7H        equ	457	;# 
  1797   0001CA                     C1MASK7U        equ	458	;# 
  1798   0001CB                     C1MASK7T        equ	459	;# 
  1799   0001CC                     C1FLTOBJ8       equ	460	;# 
  1800   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1801   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1802   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1803   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1804   0001D0                     C1MASK8         equ	464	;# 
  1805   0001D0                     C1MASK8L        equ	464	;# 
  1806   0001D1                     C1MASK8H        equ	465	;# 
  1807   0001D2                     C1MASK8U        equ	466	;# 
  1808   0001D3                     C1MASK8T        equ	467	;# 
  1809   0001D4                     C1FLTOBJ9       equ	468	;# 
  1810   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1811   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1812   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1813   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1814   0001D8                     C1MASK9         equ	472	;# 
  1815   0001D8                     C1MASK9L        equ	472	;# 
  1816   0001D9                     C1MASK9H        equ	473	;# 
  1817   0001DA                     C1MASK9U        equ	474	;# 
  1818   0001DB                     C1MASK9T        equ	475	;# 
  1819   0001DC                     C1FLTOBJ10      equ	476	;# 
  1820   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1821   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1822   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1823   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1824   0001E0                     C1MASK10        equ	480	;# 
  1825   0001E0                     C1MASK10L       equ	480	;# 
  1826   0001E1                     C1MASK10H       equ	481	;# 
  1827   0001E2                     C1MASK10U       equ	482	;# 
  1828   0001E3                     C1MASK10T       equ	483	;# 
  1829   0001E4                     C1FLTOBJ11      equ	484	;# 
  1830   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1831   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1832   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1833   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1834   0001E8                     C1MASK11        equ	488	;# 
  1835   0001E8                     C1MASK11L       equ	488	;# 
  1836   0001E9                     C1MASK11H       equ	489	;# 
  1837   0001EA                     C1MASK11U       equ	490	;# 
  1838   0001EB                     C1MASK11T       equ	491	;# 
  1839   000200                     PPSLOCK         equ	512	;# 
  1840   000201                     RA0PPS          equ	513	;# 
  1841   000202                     RA1PPS          equ	514	;# 
  1842   000203                     RA2PPS          equ	515	;# 
  1843   000204                     RA3PPS          equ	516	;# 
  1844   000205                     RA4PPS          equ	517	;# 
  1845   000206                     RA5PPS          equ	518	;# 
  1846   000207                     RA6PPS          equ	519	;# 
  1847   000208                     RA7PPS          equ	520	;# 
  1848   000209                     RB0PPS          equ	521	;# 
  1849   00020A                     RB1PPS          equ	522	;# 
  1850   00020B                     RB2PPS          equ	523	;# 
  1851   00020C                     RB3PPS          equ	524	;# 
  1852   00020D                     RB4PPS          equ	525	;# 
  1853   00020E                     RB5PPS          equ	526	;# 
  1854   00020F                     RB6PPS          equ	527	;# 
  1855   000210                     RB7PPS          equ	528	;# 
  1856   000211                     RC0PPS          equ	529	;# 
  1857   000212                     RC1PPS          equ	530	;# 
  1858   000213                     RC2PPS          equ	531	;# 
  1859   000214                     RC3PPS          equ	532	;# 
  1860   000215                     RC4PPS          equ	533	;# 
  1861   000216                     RC5PPS          equ	534	;# 
  1862   000217                     RC6PPS          equ	535	;# 
  1863   000218                     RC7PPS          equ	536	;# 
  1864   00023D                     CANRXPPS        equ	573	;# 
  1865   00023E                     INT0PPS         equ	574	;# 
  1866   00023F                     INT1PPS         equ	575	;# 
  1867   000240                     INT2PPS         equ	576	;# 
  1868   000241                     T0CKIPPS        equ	577	;# 
  1869   000242                     T1CKIPPS        equ	578	;# 
  1870   000243                     T1GPPS          equ	579	;# 
  1871   000244                     T3CKIPPS        equ	580	;# 
  1872   000245                     T3GPPS          equ	581	;# 
  1873   000246                     T5CKIPPS        equ	582	;# 
  1874   000247                     T5GPPS          equ	583	;# 
  1875   000248                     T2INPPS         equ	584	;# 
  1876   000249                     T4INPPS         equ	585	;# 
  1877   00024A                     T6INPPS         equ	586	;# 
  1878   00024B                     TUIN0PPS        equ	587	;# 
  1879   00024C                     TUIN1PPS        equ	588	;# 
  1880   00024F                     CCP1PPS         equ	591	;# 
  1881   000250                     CCP2PPS         equ	592	;# 
  1882   000251                     CCP3PPS         equ	593	;# 
  1883   000253                     PWM1ERSPPS      equ	595	;# 
  1884   000254                     PWM2ERSPPS      equ	596	;# 
  1885   000255                     PWM3ERSPPS      equ	597	;# 
  1886   000256                     PWM4ERSPPS      equ	598	;# 
  1887   000257                     PWMIN0PPS       equ	599	;# 
  1888   000258                     PWMIN1PPS       equ	600	;# 
  1889   000259                     SMT1WINPPS      equ	601	;# 
  1890   00025A                     SMT1SIGPPS      equ	602	;# 
  1891   00025B                     CWG1PPS         equ	603	;# 
  1892   00025B                     CWG1INPPS       equ	603	;# 
  1893   00025C                     CWG2PPS         equ	604	;# 
  1894   00025C                     CWG2INPPS       equ	604	;# 
  1895   00025D                     CWG3PPS         equ	605	;# 
  1896   00025D                     CWG3INPPS       equ	605	;# 
  1897   00025E                     MD1CARLPPS      equ	606	;# 
  1898   00025E                     MDCARLPPS       equ	606	;# 
  1899   00025F                     MD1CARHPPS      equ	607	;# 
  1900   00025F                     MDCARHPPS       equ	607	;# 
  1901   000260                     MD1SRCPPS       equ	608	;# 
  1902   000260                     MDSRCPPS        equ	608	;# 
  1903   000261                     CLCIN0PPS       equ	609	;# 
  1904   000262                     CLCIN1PPS       equ	610	;# 
  1905   000263                     CLCIN2PPS       equ	611	;# 
  1906   000264                     CLCIN3PPS       equ	612	;# 
  1907   000265                     CLCIN4PPS       equ	613	;# 
  1908   000266                     CLCIN5PPS       equ	614	;# 
  1909   000267                     CLCIN6PPS       equ	615	;# 
  1910   000268                     CLCIN7PPS       equ	616	;# 
  1911   000269                     ADACTPPS        equ	617	;# 
  1912   00026A                     SPI1SCKPPS      equ	618	;# 
  1913   00026B                     SPI1SDIPPS      equ	619	;# 
  1914   00026C                     SPI1SSPPS       equ	620	;# 
  1915   00026D                     SPI2SCKPPS      equ	621	;# 
  1916   00026E                     SPI2SDIPPS      equ	622	;# 
  1917   00026F                     SPI2SSPPS       equ	623	;# 
  1918   000270                     I2C1SDAPPS      equ	624	;# 
  1919   000271                     I2C1SCLPPS      equ	625	;# 
  1920   000272                     U1RXPPS         equ	626	;# 
  1921   000273                     U1CTSPPS        equ	627	;# 
  1922   000274                     U2RXPPS         equ	628	;# 
  1923   000275                     U2CTSPPS        equ	629	;# 
  1924   000276                     U3RXPPS         equ	630	;# 
  1925   000277                     U3CTSPPS        equ	631	;# 
  1926   000278                     U4RXPPS         equ	632	;# 
  1927   000279                     U4CTSPPS        equ	633	;# 
  1928   00027A                     U5RXPPS         equ	634	;# 
  1929   00027B                     U5CTSPPS        equ	635	;# 
  1930   000286                     RC4I2C          equ	646	;# 
  1931   000287                     RC3I2C          equ	647	;# 
  1932   000288                     RB2I2C          equ	648	;# 
  1933   000289                     RB1I2C          equ	649	;# 
  1934   00028A                     I2C1RXB         equ	650	;# 
  1935   00028B                     I2C1TXB         equ	651	;# 
  1936   00028C                     I2C1CNTL        equ	652	;# 
  1937   00028D                     I2C1CNTH        equ	653	;# 
  1938   00028E                     I2C1ADB0        equ	654	;# 
  1939   00028F                     I2C1ADB1        equ	655	;# 
  1940   000290                     I2C1ADR0        equ	656	;# 
  1941   000291                     I2C1ADR1        equ	657	;# 
  1942   000292                     I2C1ADR2        equ	658	;# 
  1943   000293                     I2C1ADR3        equ	659	;# 
  1944   000294                     I2C1CON0        equ	660	;# 
  1945   000295                     I2C1CON1        equ	661	;# 
  1946   000296                     I2C1CON2        equ	662	;# 
  1947   000297                     I2C1ERR         equ	663	;# 
  1948   000298                     I2C1STAT0       equ	664	;# 
  1949   000299                     I2C1STAT1       equ	665	;# 
  1950   00029A                     I2C1PIR         equ	666	;# 
  1951   00029B                     I2C1PIE         equ	667	;# 
  1952   00029C                     I2C1BTO         equ	668	;# 
  1953   00029D                     I2C1BAUD        equ	669	;# 
  1954   00029E                     I2C1CLK         equ	670	;# 
  1955   00029F                     I2C1BTOC        equ	671	;# 
  1956   0002A1                     U1RXB           equ	673	;# 
  1957   0002A1                     U1RXBL          equ	673	;# 
  1958   0002A2                     U1RXCHK         equ	674	;# 
  1959   0002A3                     U1TXB           equ	675	;# 
  1960   0002A3                     U1TXBL          equ	675	;# 
  1961   0002A4                     U1TXCHK         equ	676	;# 
  1962   0002A5                     U1P1            equ	677	;# 
  1963   0002A5                     U1P1L           equ	677	;# 
  1964   0002A6                     U1P1H           equ	678	;# 
  1965   0002A7                     U1P2            equ	679	;# 
  1966   0002A7                     U1P2L           equ	679	;# 
  1967   0002A8                     U1P2H           equ	680	;# 
  1968   0002A9                     U1P3            equ	681	;# 
  1969   0002A9                     U1P3L           equ	681	;# 
  1970   0002AA                     U1P3H           equ	682	;# 
  1971   0002AB                     U1CON0          equ	683	;# 
  1972   0002AC                     U1CON1          equ	684	;# 
  1973   0002AD                     U1CON2          equ	685	;# 
  1974   0002AE                     U1BRG           equ	686	;# 
  1975   0002AE                     U1BRGL          equ	686	;# 
  1976   0002AF                     U1BRGH          equ	687	;# 
  1977   0002B0                     U1FIFO          equ	688	;# 
  1978   0002B1                     U1UIR           equ	689	;# 
  1979   0002B2                     U1ERRIR         equ	690	;# 
  1980   0002B3                     U1ERRIE         equ	691	;# 
  1981   0002B4                     U2RXB           equ	692	;# 
  1982   0002B4                     U2RXBL          equ	692	;# 
  1983   0002B5                     U2RXCHK         equ	693	;# 
  1984   0002B6                     U2TXB           equ	694	;# 
  1985   0002B6                     U2TXBL          equ	694	;# 
  1986   0002B7                     U2TXCHK         equ	695	;# 
  1987   0002B8                     U2P1            equ	696	;# 
  1988   0002B8                     U2P1L           equ	696	;# 
  1989   0002B9                     U2P1H           equ	697	;# 
  1990   0002BA                     U2P2            equ	698	;# 
  1991   0002BA                     U2P2L           equ	698	;# 
  1992   0002BB                     U2P2H           equ	699	;# 
  1993   0002BC                     U2P3            equ	700	;# 
  1994   0002BC                     U2P3L           equ	700	;# 
  1995   0002BD                     U2P3H           equ	701	;# 
  1996   0002BE                     U2CON0          equ	702	;# 
  1997   0002BF                     U2CON1          equ	703	;# 
  1998   0002C0                     U2CON2          equ	704	;# 
  1999   0002C1                     U2BRG           equ	705	;# 
  2000   0002C1                     U2BRGL          equ	705	;# 
  2001   0002C2                     U2BRGH          equ	706	;# 
  2002   0002C3                     U2FIFO          equ	707	;# 
  2003   0002C4                     U2UIR           equ	708	;# 
  2004   0002C5                     U2ERRIR         equ	709	;# 
  2005   0002C6                     U2ERRIE         equ	710	;# 
  2006   0002C7                     U3RXB           equ	711	;# 
  2007   0002C7                     U3RXBL          equ	711	;# 
  2008   0002C9                     U3TXB           equ	713	;# 
  2009   0002C9                     U3TXBL          equ	713	;# 
  2010   0002CB                     U3P1            equ	715	;# 
  2011   0002CB                     U3P1L           equ	715	;# 
  2012   0002CD                     U3P2            equ	717	;# 
  2013   0002CD                     U3P2L           equ	717	;# 
  2014   0002CF                     U3P3            equ	719	;# 
  2015   0002CF                     U3P3L           equ	719	;# 
  2016   0002D1                     U3CON0          equ	721	;# 
  2017   0002D2                     U3CON1          equ	722	;# 
  2018   0002D3                     U3CON2          equ	723	;# 
  2019   0002D4                     U3BRG           equ	724	;# 
  2020   0002D4                     U3BRGL          equ	724	;# 
  2021   0002D5                     U3BRGH          equ	725	;# 
  2022   0002D6                     U3FIFO          equ	726	;# 
  2023   0002D7                     U3UIR           equ	727	;# 
  2024   0002D8                     U3ERRIR         equ	728	;# 
  2025   0002D9                     U3ERRIE         equ	729	;# 
  2026   0002DA                     U4RXB           equ	730	;# 
  2027   0002DA                     U4RXBL          equ	730	;# 
  2028   0002DC                     U4TXB           equ	732	;# 
  2029   0002DC                     U4TXBL          equ	732	;# 
  2030   0002DE                     U4P1            equ	734	;# 
  2031   0002DE                     U4P1L           equ	734	;# 
  2032   0002E0                     U4P2            equ	736	;# 
  2033   0002E0                     U4P2L           equ	736	;# 
  2034   0002E2                     U4P3            equ	738	;# 
  2035   0002E2                     U4P3L           equ	738	;# 
  2036   0002E4                     U4CON0          equ	740	;# 
  2037   0002E5                     U4CON1          equ	741	;# 
  2038   0002E6                     U4CON2          equ	742	;# 
  2039   0002E7                     U4BRG           equ	743	;# 
  2040   0002E7                     U4BRGL          equ	743	;# 
  2041   0002E8                     U4BRGH          equ	744	;# 
  2042   0002E9                     U4FIFO          equ	745	;# 
  2043   0002EA                     U4UIR           equ	746	;# 
  2044   0002EB                     U4ERRIR         equ	747	;# 
  2045   0002EC                     U4ERRIE         equ	748	;# 
  2046   0002ED                     U5RXB           equ	749	;# 
  2047   0002ED                     U5RXBL          equ	749	;# 
  2048   0002EF                     U5TXB           equ	751	;# 
  2049   0002EF                     U5TXBL          equ	751	;# 
  2050   0002F1                     U5P1            equ	753	;# 
  2051   0002F1                     U5P1L           equ	753	;# 
  2052   0002F3                     U5P2            equ	755	;# 
  2053   0002F3                     U5P2L           equ	755	;# 
  2054   0002F5                     U5P3            equ	757	;# 
  2055   0002F5                     U5P3L           equ	757	;# 
  2056   0002F7                     U5CON0          equ	759	;# 
  2057   0002F8                     U5CON1          equ	760	;# 
  2058   0002F9                     U5CON2          equ	761	;# 
  2059   0002FA                     U5BRG           equ	762	;# 
  2060   0002FA                     U5BRGL          equ	762	;# 
  2061   0002FB                     U5BRGH          equ	763	;# 
  2062   0002FC                     U5FIFO          equ	764	;# 
  2063   0002FD                     U5UIR           equ	765	;# 
  2064   0002FE                     U5ERRIR         equ	766	;# 
  2065   0002FF                     U5ERRIE         equ	767	;# 
  2066   000300                     SMT1TMR         equ	768	;# 
  2067   000300                     SMT1TMRL        equ	768	;# 
  2068   000301                     SMT1TMRH        equ	769	;# 
  2069   000302                     SMT1TMRU        equ	770	;# 
  2070   000303                     SMT1CPR         equ	771	;# 
  2071   000303                     SMT1CPRL        equ	771	;# 
  2072   000304                     SMT1CPRH        equ	772	;# 
  2073   000305                     SMT1CPRU        equ	773	;# 
  2074   000306                     SMT1CPW         equ	774	;# 
  2075   000306                     SMT1CPWL        equ	774	;# 
  2076   000307                     SMT1CPWH        equ	775	;# 
  2077   000308                     SMT1CPWU        equ	776	;# 
  2078   000309                     SMT1PR          equ	777	;# 
  2079   000309                     SMT1PRL         equ	777	;# 
  2080   00030A                     SMT1PRH         equ	778	;# 
  2081   00030B                     SMT1PRU         equ	779	;# 
  2082   00030C                     SMT1CON0        equ	780	;# 
  2083   00030D                     SMT1CON1        equ	781	;# 
  2084   00030E                     SMT1STAT        equ	782	;# 
  2085   00030F                     SMT1CLK         equ	783	;# 
  2086   000310                     SMT1SIG         equ	784	;# 
  2087   000311                     SMT1WIN         equ	785	;# 
  2088   000318                     TMR0L           equ	792	;# 
  2089   000318                     TMR0            equ	792	;# 
  2090   000319                     TMR0H           equ	793	;# 
  2091   000319                     PR0             equ	793	;# 
  2092   00031A                     T0CON0          equ	794	;# 
  2093   00031B                     T0CON1          equ	795	;# 
  2094   00031C                     TMR1            equ	796	;# 
  2095   00031C                     TMR1L           equ	796	;# 
  2096   00031D                     TMR1H           equ	797	;# 
  2097   00031E                     T1CON           equ	798	;# 
  2098   00031E                     TMR1CON         equ	798	;# 
  2099   00031F                     T1GCON          equ	799	;# 
  2100   00031F                     TMR1GCON        equ	799	;# 
  2101   000320                     T1GATE          equ	800	;# 
  2102   000320                     TMR1GATE        equ	800	;# 
  2103   000321                     T1CLK           equ	801	;# 
  2104   000321                     TMR1CLK         equ	801	;# 
  2105   000321                     PR1             equ	801	;# 
  2106   000322                     T2TMR           equ	802	;# 
  2107   000322                     TMR2            equ	802	;# 
  2108   000323                     T2PR            equ	803	;# 
  2109   000323                     PR2             equ	803	;# 
  2110   000324                     T2CON           equ	804	;# 
  2111   000325                     T2HLT           equ	805	;# 
  2112   000326                     T2CLKCON        equ	806	;# 
  2113   000326                     T2CLK           equ	806	;# 
  2114   000327                     T2RST           equ	807	;# 
  2115   000328                     TMR3            equ	808	;# 
  2116   000328                     TMR3L           equ	808	;# 
  2117   000329                     TMR3H           equ	809	;# 
  2118   00032A                     T3CON           equ	810	;# 
  2119   00032A                     TMR3CON         equ	810	;# 
  2120   00032B                     T3GCON          equ	811	;# 
  2121   00032B                     TMR3GCON        equ	811	;# 
  2122   00032C                     T3GATE          equ	812	;# 
  2123   00032C                     TMR3GATE        equ	812	;# 
  2124   00032D                     T3CLK           equ	813	;# 
  2125   00032D                     TMR3CLK         equ	813	;# 
  2126   00032D                     PR3             equ	813	;# 
  2127   00032E                     T4TMR           equ	814	;# 
  2128   00032E                     TMR4            equ	814	;# 
  2129   00032F                     T4PR            equ	815	;# 
  2130   00032F                     PR4             equ	815	;# 
  2131   000330                     T4CON           equ	816	;# 
  2132   000331                     T4HLT           equ	817	;# 
  2133   000332                     T4CLKCON        equ	818	;# 
  2134   000332                     T4CLK           equ	818	;# 
  2135   000333                     T4RST           equ	819	;# 
  2136   000334                     TMR5            equ	820	;# 
  2137   000334                     TMR5L           equ	820	;# 
  2138   000335                     TMR5H           equ	821	;# 
  2139   000336                     T5CON           equ	822	;# 
  2140   000336                     TMR5CON         equ	822	;# 
  2141   000337                     T5GCON          equ	823	;# 
  2142   000337                     TMR5GCON        equ	823	;# 
  2143   000338                     T5GATE          equ	824	;# 
  2144   000338                     TMR5GATE        equ	824	;# 
  2145   000339                     T5CLK           equ	825	;# 
  2146   000339                     TMR5CLK         equ	825	;# 
  2147   000339                     PR5             equ	825	;# 
  2148   00033A                     T6TMR           equ	826	;# 
  2149   00033A                     TMR6            equ	826	;# 
  2150   00033B                     T6PR            equ	827	;# 
  2151   00033B                     PR6             equ	827	;# 
  2152   00033C                     T6CON           equ	828	;# 
  2153   00033D                     T6HLT           equ	829	;# 
  2154   00033E                     T6CLKCON        equ	830	;# 
  2155   00033E                     T6CLK           equ	830	;# 
  2156   00033F                     T6RST           equ	831	;# 
  2157   000340                     CCPR1           equ	832	;# 
  2158   000340                     CCPR1L          equ	832	;# 
  2159   000341                     CCPR1H          equ	833	;# 
  2160   000342                     CCP1CON         equ	834	;# 
  2161   000343                     CCP1CAP         equ	835	;# 
  2162   000344                     CCPR2           equ	836	;# 
  2163   000344                     CCPR2L          equ	836	;# 
  2164   000345                     CCPR2H          equ	837	;# 
  2165   000346                     CCP2CON         equ	838	;# 
  2166   000347                     CCP2CAP         equ	839	;# 
  2167   000348                     CCPR3           equ	840	;# 
  2168   000348                     CCPR3L          equ	840	;# 
  2169   000349                     CCPR3H          equ	841	;# 
  2170   00034A                     CCP3CON         equ	842	;# 
  2171   00034B                     CCP3CAP         equ	843	;# 
  2172   00034C                     CCPTMRS0        equ	844	;# 
  2173   00034F                     CRCDATA         equ	847	;# 
  2174   00034F                     CRCDATAL        equ	847	;# 
  2175   000350                     CRCDATAH        equ	848	;# 
  2176   000351                     CRCDATAU        equ	849	;# 
  2177   000352                     CRCDATAT        equ	850	;# 
  2178   000353                     CRCOUT          equ	851	;# 
  2179   000353                     CRCSHFT         equ	851	;# 
  2180   000353                     CRCXOR          equ	851	;# 
  2181   000353                     CRCOUTL         equ	851	;# 
  2182   000353                     CRCSHFTL        equ	851	;# 
  2183   000353                     CRCSHIFTL       equ	851	;# 
  2184   000353                     CRCXORL         equ	851	;# 
  2185   000354                     CRCOUTH         equ	852	;# 
  2186   000354                     CRCSHFTH        equ	852	;# 
  2187   000354                     CRCSHIFTH       equ	852	;# 
  2188   000354                     CRCXORH         equ	852	;# 
  2189   000355                     CRCOUTU         equ	853	;# 
  2190   000355                     CRCSHFTU        equ	853	;# 
  2191   000355                     CRCSHIFTU       equ	853	;# 
  2192   000355                     CRCXORU         equ	853	;# 
  2193   000356                     CRCOUTT         equ	854	;# 
  2194   000356                     CRCSHFTT        equ	854	;# 
  2195   000356                     CRCSHIFTT       equ	854	;# 
  2196   000356                     CRCXORT         equ	854	;# 
  2197   000357                     CRCCON0         equ	855	;# 
  2198   000358                     CRCCON1         equ	856	;# 
  2199   000359                     CRCCON2         equ	857	;# 
  2200   00035A                     SCANLADR        equ	858	;# 
  2201   00035A                     SCANLADRL       equ	858	;# 
  2202   00035B                     SCANLADRH       equ	859	;# 
  2203   00035C                     SCANLADRU       equ	860	;# 
  2204   00035D                     SCANHADR        equ	861	;# 
  2205   00035D                     SCANHADRL       equ	861	;# 
  2206   00035E                     SCANHADRH       equ	862	;# 
  2207   00035F                     SCANHADRU       equ	863	;# 
  2208   000360                     SCANCON0        equ	864	;# 
  2209   000361                     SCANTRIG        equ	865	;# 
  2210   000362                     IPR0            equ	866	;# 
  2211   000363                     IPR1            equ	867	;# 
  2212   000364                     IPR2            equ	868	;# 
  2213   000365                     IPR3            equ	869	;# 
  2214   000366                     IPR4            equ	870	;# 
  2215   000367                     IPR5            equ	871	;# 
  2216   000368                     IPR6            equ	872	;# 
  2217   000369                     IPR7            equ	873	;# 
  2218   00036A                     IPR8            equ	874	;# 
  2219   00036B                     IPR9            equ	875	;# 
  2220   00036C                     IPR10           equ	876	;# 
  2221   00036D                     IPR11           equ	877	;# 
  2222   00036E                     IPR12           equ	878	;# 
  2223   00036F                     IPR13           equ	879	;# 
  2224   000370                     IPR14           equ	880	;# 
  2225   000371                     IPR15           equ	881	;# 
  2226   000373                     STATUS_CSHAD    equ	883	;# 
  2227   000374                     WREG_CSHAD      equ	884	;# 
  2228   000375                     BSR_CSHAD       equ	885	;# 
  2229   000376                     SHADCON         equ	886	;# 
  2230   000377                     STATUS_SHAD     equ	887	;# 
  2231   000378                     WREG_SHAD       equ	888	;# 
  2232   000379                     BSR_SHAD        equ	889	;# 
  2233   00037A                     PCLATH_SHAD     equ	890	;# 
  2234   00037B                     PCLATU_SHAD     equ	891	;# 
  2235   00037C                     FSR0SH          equ	892	;# 
  2236   00037C                     FSR0L_SHAD      equ	892	;# 
  2237   00037D                     FSR0H_SHAD      equ	893	;# 
  2238   00037E                     FSR1SH          equ	894	;# 
  2239   00037E                     FSR1L_SHAD      equ	894	;# 
  2240   00037F                     FSR1H_SHAD      equ	895	;# 
  2241   000380                     FSR2SH          equ	896	;# 
  2242   000380                     FSR2L_SHAD      equ	896	;# 
  2243   000381                     FSR2H_SHAD      equ	897	;# 
  2244   000382                     PRODSH          equ	898	;# 
  2245   000382                     PRODL_SHAD      equ	898	;# 
  2246   000383                     PRODH_SHAD      equ	899	;# 
  2247   000387                     TU16ACON0       equ	903	;# 
  2248   000388                     TU16ACON1       equ	904	;# 
  2249   000389                     TU16AHLT        equ	905	;# 
  2250   00038A                     TU16APS         equ	906	;# 
  2251   00038B                     TU16ATMR        equ	907	;# 
  2252   00038B                     TU16ACR         equ	907	;# 
  2253   00038B                     TU16ATMRL       equ	907	;# 
  2254   00038B                     TU16ACRL        equ	907	;# 
  2255   00038C                     TU16ATMRH       equ	908	;# 
  2256   00038C                     TU16ACRH        equ	908	;# 
  2257   00038D                     TU16APR         equ	909	;# 
  2258   00038D                     TU16APRL        equ	909	;# 
  2259   00038E                     TU16APRH        equ	910	;# 
  2260   00038F                     TU16ACLK        equ	911	;# 
  2261   000390                     TU16AERS        equ	912	;# 
  2262   000393                     TU16BCON0       equ	915	;# 
  2263   000394                     TU16BCON1       equ	916	;# 
  2264   000395                     TU16BHLT        equ	917	;# 
  2265   000396                     TU16BPS         equ	918	;# 
  2266   000397                     TU16BTMR        equ	919	;# 
  2267   000397                     TU16BCR         equ	919	;# 
  2268   000397                     TU16BTMRL       equ	919	;# 
  2269   000397                     TU16BCRL        equ	919	;# 
  2270   000398                     TU16BTMRH       equ	920	;# 
  2271   000398                     TU16BCRH        equ	920	;# 
  2272   000399                     TU16BPR         equ	921	;# 
  2273   000399                     TU16BPRL        equ	921	;# 
  2274   00039A                     TU16BPRH        equ	922	;# 
  2275   00039B                     TU16BCLK        equ	923	;# 
  2276   00039C                     TU16BERS        equ	924	;# 
  2277   0003BB                     TUCHAIN         equ	955	;# 
  2278   0003BC                     CWG1CLK         equ	956	;# 
  2279   0003BC                     CWG1CLKCON      equ	956	;# 
  2280   0003BD                     CWG1ISM         equ	957	;# 
  2281   0003BE                     CWG1DBR         equ	958	;# 
  2282   0003BF                     CWG1DBF         equ	959	;# 
  2283   0003C0                     CWG1CON0        equ	960	;# 
  2284   0003C1                     CWG1CON1        equ	961	;# 
  2285   0003C2                     CWG1AS0         equ	962	;# 
  2286   0003C3                     CWG1AS1         equ	963	;# 
  2287   0003C4                     CWG1STR         equ	964	;# 
  2288   0003C5                     CWG2CLK         equ	965	;# 
  2289   0003C5                     CWG2CLKCON      equ	965	;# 
  2290   0003C6                     CWG2ISM         equ	966	;# 
  2291   0003C7                     CWG2DBR         equ	967	;# 
  2292   0003C8                     CWG2DBF         equ	968	;# 
  2293   0003C9                     CWG2CON0        equ	969	;# 
  2294   0003CA                     CWG2CON1        equ	970	;# 
  2295   0003CB                     CWG2AS0         equ	971	;# 
  2296   0003CC                     CWG2AS1         equ	972	;# 
  2297   0003CD                     CWG2STR         equ	973	;# 
  2298   0003CE                     CWG3CLK         equ	974	;# 
  2299   0003CE                     CWG3CLKCON      equ	974	;# 
  2300   0003CF                     CWG3ISM         equ	975	;# 
  2301   0003D0                     CWG3DBR         equ	976	;# 
  2302   0003D1                     CWG3DBF         equ	977	;# 
  2303   0003D2                     CWG3CON0        equ	978	;# 
  2304   0003D3                     CWG3CON1        equ	979	;# 
  2305   0003D4                     CWG3AS0         equ	980	;# 
  2306   0003D5                     CWG3AS1         equ	981	;# 
  2307   0003D6                     CWG3STR         equ	982	;# 
  2308   0003D7                     FVRCON          equ	983	;# 
  2309   0003D8                     ADCPCON         equ	984	;# 
  2310   0003D8                     ADCP            equ	984	;# 
  2311   0003D9                     ADLTH           equ	985	;# 
  2312   0003D9                     ADLTHL          equ	985	;# 
  2313   0003DA                     ADLTHH          equ	986	;# 
  2314   0003DB                     ADUTH           equ	987	;# 
  2315   0003DB                     ADUTHL          equ	987	;# 
  2316   0003DC                     ADUTHH          equ	988	;# 
  2317   0003DD                     ADERR           equ	989	;# 
  2318   0003DD                     ADERRL          equ	989	;# 
  2319   0003DE                     ADERRH          equ	990	;# 
  2320   0003DF                     ADSTPT          equ	991	;# 
  2321   0003DF                     ADSTPTL         equ	991	;# 
  2322   0003E0                     ADSTPTH         equ	992	;# 
  2323   0003E1                     ADFLTR          equ	993	;# 
  2324   0003E1                     ADFLTRL         equ	993	;# 
  2325   0003E2                     ADFLTRH         equ	994	;# 
  2326   0003E3                     ADACC           equ	995	;# 
  2327   0003E3                     ADACCL          equ	995	;# 
  2328   0003E4                     ADACCH          equ	996	;# 
  2329   0003E5                     ADACCU          equ	997	;# 
  2330   0003E6                     ADCNT           equ	998	;# 
  2331   0003E7                     ADRPT           equ	999	;# 
  2332   0003E8                     ADPREV          equ	1000	;# 
  2333   0003E8                     ADPREVL         equ	1000	;# 
  2334   0003E9                     ADPREVH         equ	1001	;# 
  2335   0003EA                     ADRES           equ	1002	;# 
  2336   0003EA                     ADRESL          equ	1002	;# 
  2337   0003EB                     ADRESH          equ	1003	;# 
  2338   0003EC                     ADPCH           equ	1004	;# 
  2339   0003EE                     ADACQ           equ	1006	;# 
  2340   0003EE                     ADACQL          equ	1006	;# 
  2341   0003EF                     ADACQH          equ	1007	;# 
  2342   0003F0                     ADCAP           equ	1008	;# 
  2343   0003F1                     ADPRE           equ	1009	;# 
  2344   0003F1                     ADPREL          equ	1009	;# 
  2345   0003F2                     ADPREH          equ	1010	;# 
  2346   0003F3                     ADCON0          equ	1011	;# 
  2347   0003F4                     ADCON1          equ	1012	;# 
  2348   0003F5                     ADCON2          equ	1013	;# 
  2349   0003F6                     ADCON3          equ	1014	;# 
  2350   0003F7                     ADSTAT          equ	1015	;# 
  2351   0003F8                     ADREF           equ	1016	;# 
  2352   0003F9                     ADACT           equ	1017	;# 
  2353   0003FA                     ADCLK           equ	1018	;# 
  2354   0003FB                     ADCTX           equ	1019	;# 
  2355   0003FC                     ADCSEL1         equ	1020	;# 
  2356   0003FD                     ADCSEL2         equ	1021	;# 
  2357   0003FE                     ADCSEL3         equ	1022	;# 
  2358   0003FF                     ADCSEL4         equ	1023	;# 
  2359   000400                     ANSELA          equ	1024	;# 
  2360   000401                     WPUA            equ	1025	;# 
  2361   000402                     ODCONA          equ	1026	;# 
  2362   000403                     SLRCONA         equ	1027	;# 
  2363   000404                     INLVLA          equ	1028	;# 
  2364   000405                     IOCAP           equ	1029	;# 
  2365   000406                     IOCAN           equ	1030	;# 
  2366   000407                     IOCAF           equ	1031	;# 
  2367   000408                     ANSELB          equ	1032	;# 
  2368   000409                     WPUB            equ	1033	;# 
  2369   00040A                     ODCONB          equ	1034	;# 
  2370   00040B                     SLRCONB         equ	1035	;# 
  2371   00040C                     INLVLB          equ	1036	;# 
  2372   00040D                     IOCBP           equ	1037	;# 
  2373   00040E                     IOCBN           equ	1038	;# 
  2374   00040F                     IOCBF           equ	1039	;# 
  2375   000410                     ANSELC          equ	1040	;# 
  2376   000411                     WPUC            equ	1041	;# 
  2377   000412                     ODCONC          equ	1042	;# 
  2378   000413                     SLRCONC         equ	1043	;# 
  2379   000414                     INLVLC          equ	1044	;# 
  2380   000415                     IOCCP           equ	1045	;# 
  2381   000416                     IOCCN           equ	1046	;# 
  2382   000417                     IOCCF           equ	1047	;# 
  2383   000421                     WPUE            equ	1057	;# 
  2384   000424                     INLVLE          equ	1060	;# 
  2385   000425                     IOCEP           equ	1061	;# 
  2386   000426                     IOCEN           equ	1062	;# 
  2387   000427                     IOCEF           equ	1063	;# 
  2388   000440                     NCO1ACC         equ	1088	;# 
  2389   000440                     NCO1ACCL        equ	1088	;# 
  2390   000441                     NCO1ACCH        equ	1089	;# 
  2391   000442                     NCO1ACCU        equ	1090	;# 
  2392   000443                     NCO1INC         equ	1091	;# 
  2393   000443                     NCO1INCL        equ	1091	;# 
  2394   000444                     NCO1INCH        equ	1092	;# 
  2395   000445                     NCO1INCU        equ	1093	;# 
  2396   000446                     NCO1CON         equ	1094	;# 
  2397   000447                     NCO1CLK         equ	1095	;# 
  2398   000448                     NCO2ACC         equ	1096	;# 
  2399   000448                     NCO2ACCL        equ	1096	;# 
  2400   000449                     NCO2ACCH        equ	1097	;# 
  2401   00044A                     NCO2ACCU        equ	1098	;# 
  2402   00044B                     NCO2INC         equ	1099	;# 
  2403   00044B                     NCO2INCL        equ	1099	;# 
  2404   00044C                     NCO2INCH        equ	1100	;# 
  2405   00044D                     NCO2INCU        equ	1101	;# 
  2406   00044E                     NCO2CON         equ	1102	;# 
  2407   00044F                     NCO2CLK         equ	1103	;# 
  2408   000450                     NCO3ACC         equ	1104	;# 
  2409   000450                     NCO3ACCL        equ	1104	;# 
  2410   000451                     NCO3ACCH        equ	1105	;# 
  2411   000452                     NCO3ACCU        equ	1106	;# 
  2412   000453                     NCO3INC         equ	1107	;# 
  2413   000453                     NCO3INCL        equ	1107	;# 
  2414   000454                     NCO3INCH        equ	1108	;# 
  2415   000455                     NCO3INCU        equ	1109	;# 
  2416   000456                     NCO3CON         equ	1110	;# 
  2417   000457                     NCO3CLK         equ	1111	;# 
  2418   000458                     FSCMCON         equ	1112	;# 
  2419   000459                     IVTLOCK         equ	1113	;# 
  2420   00045A                     IVTAD           equ	1114	;# 
  2421   00045A                     IVTADL          equ	1114	;# 
  2422   00045B                     IVTADH          equ	1115	;# 
  2423   00045C                     IVTADU          equ	1116	;# 
  2424   00045D                     IVTBASE         equ	1117	;# 
  2425   00045D                     IVTBASEL        equ	1117	;# 
  2426   00045E                     IVTBASEH        equ	1118	;# 
  2427   00045F                     IVTBASEU        equ	1119	;# 
  2428   000460                     PWM1ERS         equ	1120	;# 
  2429   000461                     PWM1CLK         equ	1121	;# 
  2430   000462                     PWM1LDS         equ	1122	;# 
  2431   000463                     PWM1PR          equ	1123	;# 
  2432   000463                     PWM1PRL         equ	1123	;# 
  2433   000464                     PWM1PRH         equ	1124	;# 
  2434   000465                     PWM1CPRE        equ	1125	;# 
  2435   000466                     PWM1PIPOS       equ	1126	;# 
  2436   000467                     PWM1GIR         equ	1127	;# 
  2437   000468                     PWM1GIE         equ	1128	;# 
  2438   000469                     PWM1CON         equ	1129	;# 
  2439   00046A                     PWM1S1CFG       equ	1130	;# 
  2440   00046B                     PWM1S1P1        equ	1131	;# 
  2441   00046B                     PWM1S1P1L       equ	1131	;# 
  2442   00046C                     PWM1S1P1H       equ	1132	;# 
  2443   00046D                     PWM1S1P2        equ	1133	;# 
  2444   00046D                     PWM1S1P2L       equ	1133	;# 
  2445   00046E                     PWM1S1P2H       equ	1134	;# 
  2446   00046F                     PWM2ERS         equ	1135	;# 
  2447   000470                     PWM2CLK         equ	1136	;# 
  2448   000471                     PWM2LDS         equ	1137	;# 
  2449   000472                     PWM2PR          equ	1138	;# 
  2450   000472                     PWM2PRL         equ	1138	;# 
  2451   000473                     PWM2PRH         equ	1139	;# 
  2452   000474                     PWM2CPRE        equ	1140	;# 
  2453   000475                     PWM2PIPOS       equ	1141	;# 
  2454   000476                     PWM2GIR         equ	1142	;# 
  2455   000477                     PWM2GIE         equ	1143	;# 
  2456   000478                     PWM2CON         equ	1144	;# 
  2457   000479                     PWM2S1CFG       equ	1145	;# 
  2458   00047A                     PWM2S1P1        equ	1146	;# 
  2459   00047A                     PWM2S1P1L       equ	1146	;# 
  2460   00047B                     PWM2S1P1H       equ	1147	;# 
  2461   00047C                     PWM2S1P2        equ	1148	;# 
  2462   00047C                     PWM2S1P2L       equ	1148	;# 
  2463   00047D                     PWM2S1P2H       equ	1149	;# 
  2464   00047E                     PWM3ERS         equ	1150	;# 
  2465   00047F                     PWM3CLK         equ	1151	;# 
  2466   000480                     PWM3LDS         equ	1152	;# 
  2467   000481                     PWM3PR          equ	1153	;# 
  2468   000481                     PWM3PRL         equ	1153	;# 
  2469   000482                     PWM3PRH         equ	1154	;# 
  2470   000483                     PWM3CPRE        equ	1155	;# 
  2471   000484                     PWM3PIPOS       equ	1156	;# 
  2472   000485                     PWM3GIR         equ	1157	;# 
  2473   000486                     PWM3GIE         equ	1158	;# 
  2474   000487                     PWM3CON         equ	1159	;# 
  2475   000488                     PWM3S1CFG       equ	1160	;# 
  2476   000489                     PWM3S1P1        equ	1161	;# 
  2477   000489                     PWM3S1P1L       equ	1161	;# 
  2478   00048A                     PWM3S1P1H       equ	1162	;# 
  2479   00048B                     PWM3S1P2        equ	1163	;# 
  2480   00048B                     PWM3S1P2L       equ	1163	;# 
  2481   00048C                     PWM3S1P2H       equ	1164	;# 
  2482   00048D                     PWM4ERS         equ	1165	;# 
  2483   00048E                     PWM4CLK         equ	1166	;# 
  2484   00048F                     PWM4LDS         equ	1167	;# 
  2485   000490                     PWM4PR          equ	1168	;# 
  2486   000490                     PWM4PRL         equ	1168	;# 
  2487   000491                     PWM4PRH         equ	1169	;# 
  2488   000492                     PWM4CPRE        equ	1170	;# 
  2489   000493                     PWM4PIPOS       equ	1171	;# 
  2490   000494                     PWM4GIR         equ	1172	;# 
  2491   000495                     PWM4GIE         equ	1173	;# 
  2492   000496                     PWM4CON         equ	1174	;# 
  2493   000497                     PWM4S1CFG       equ	1175	;# 
  2494   000498                     PWM4S1P1        equ	1176	;# 
  2495   000498                     PWM4S1P1L       equ	1176	;# 
  2496   000499                     PWM4S1P1H       equ	1177	;# 
  2497   00049A                     PWM4S1P2        equ	1178	;# 
  2498   00049A                     PWM4S1P2L       equ	1178	;# 
  2499   00049B                     PWM4S1P2H       equ	1179	;# 
  2500   00049C                     PWMLOAD         equ	1180	;# 
  2501   00049D                     PWMEN           equ	1181	;# 
  2502   00049E                     PIE0            equ	1182	;# 
  2503   00049F                     PIE1            equ	1183	;# 
  2504   0004A0                     PIE2            equ	1184	;# 
  2505   0004A1                     PIE3            equ	1185	;# 
  2506   0004A2                     PIE4            equ	1186	;# 
  2507   0004A3                     PIE5            equ	1187	;# 
  2508   0004A4                     PIE6            equ	1188	;# 
  2509   0004A5                     PIE7            equ	1189	;# 
  2510   0004A6                     PIE8            equ	1190	;# 
  2511   0004A7                     PIE9            equ	1191	;# 
  2512   0004A8                     PIE10           equ	1192	;# 
  2513   0004A9                     PIE11           equ	1193	;# 
  2514   0004AA                     PIE12           equ	1194	;# 
  2515   0004AB                     PIE13           equ	1195	;# 
  2516   0004AC                     PIE14           equ	1196	;# 
  2517   0004AD                     PIE15           equ	1197	;# 
  2518   0004AE                     PIR0            equ	1198	;# 
  2519   0004AF                     PIR1            equ	1199	;# 
  2520   0004B0                     PIR2            equ	1200	;# 
  2521   0004B1                     PIR3            equ	1201	;# 
  2522   0004B2                     PIR4            equ	1202	;# 
  2523   0004B3                     PIR5            equ	1203	;# 
  2524   0004B4                     PIR6            equ	1204	;# 
  2525   0004B5                     PIR7            equ	1205	;# 
  2526   0004B6                     PIR8            equ	1206	;# 
  2527   0004B7                     PIR9            equ	1207	;# 
  2528   0004B8                     PIR10           equ	1208	;# 
  2529   0004B9                     PIR11           equ	1209	;# 
  2530   0004BA                     PIR12           equ	1210	;# 
  2531   0004BB                     PIR13           equ	1211	;# 
  2532   0004BC                     PIR14           equ	1212	;# 
  2533   0004BD                     PIR15           equ	1213	;# 
  2534   0004BE                     LATA            equ	1214	;# 
  2535   0004BF                     LATB            equ	1215	;# 
  2536   0004C0                     LATC            equ	1216	;# 
  2537   0004C6                     TRISA           equ	1222	;# 
  2538   0004C7                     TRISB           equ	1223	;# 
  2539   0004C8                     TRISC           equ	1224	;# 
  2540   0004CA                     TRISE           equ	1226	;# 
  2541   0004CE                     PORTA           equ	1230	;# 
  2542   0004CF                     PORTB           equ	1231	;# 
  2543   0004D0                     PORTC           equ	1232	;# 
  2544   0004D2                     PORTE           equ	1234	;# 
  2545   0004D6                     INTCON0         equ	1238	;# 
  2546   0004D7                     INTCON1         equ	1239	;# 
  2547   0004D8                     STATUS          equ	1240	;# 
  2548   0004D9                     FSR2            equ	1241	;# 
  2549   0004D9                     FSR2L           equ	1241	;# 
  2550   0004DA                     FSR2H           equ	1242	;# 
  2551   0004DB                     PLUSW2          equ	1243	;# 
  2552   0004DC                     PREINC2         equ	1244	;# 
  2553   0004DD                     POSTDEC2        equ	1245	;# 
  2554   0004DE                     POSTINC2        equ	1246	;# 
  2555   0004DF                     INDF2           equ	1247	;# 
  2556   0004E0                     BSR             equ	1248	;# 
  2557   0004E1                     FSR1            equ	1249	;# 
  2558   0004E1                     FSR1L           equ	1249	;# 
  2559   0004E2                     FSR1H           equ	1250	;# 
  2560   0004E3                     PLUSW1          equ	1251	;# 
  2561   0004E4                     PREINC1         equ	1252	;# 
  2562   0004E5                     POSTDEC1        equ	1253	;# 
  2563   0004E6                     POSTINC1        equ	1254	;# 
  2564   0004E7                     INDF1           equ	1255	;# 
  2565   0004E8                     WREG            equ	1256	;# 
  2566   0004E9                     FSR0            equ	1257	;# 
  2567   0004E9                     FSR0L           equ	1257	;# 
  2568   0004EA                     FSR0H           equ	1258	;# 
  2569   0004EB                     PLUSW0          equ	1259	;# 
  2570   0004EC                     PREINC0         equ	1260	;# 
  2571   0004ED                     POSTDEC0        equ	1261	;# 
  2572   0004EE                     POSTINC0        equ	1262	;# 
  2573   0004EF                     INDF0           equ	1263	;# 
  2574   0004F0                     PCON0           equ	1264	;# 
  2575   0004F1                     PCON1           equ	1265	;# 
  2576   0004F2                     CPUDOZE         equ	1266	;# 
  2577   0004F3                     PROD            equ	1267	;# 
  2578   0004F3                     PRODL           equ	1267	;# 
  2579   0004F4                     PRODH           equ	1268	;# 
  2580   0004F5                     TABLAT          equ	1269	;# 
  2581   0004F6                     TBLPTR          equ	1270	;# 
  2582   0004F6                     TBLPTRL         equ	1270	;# 
  2583   0004F7                     TBLPTRH         equ	1271	;# 
  2584   0004F8                     TBLPTRU         equ	1272	;# 
  2585   0004F9                     PCLAT           equ	1273	;# 
  2586   0004F9                     PCL             equ	1273	;# 
  2587   0004FA                     PCLATH          equ	1274	;# 
  2588   0004FB                     PCLATU          equ	1275	;# 
  2589   0004FC                     STKPTR          equ	1276	;# 
  2590   0004FD                     TOS             equ	1277	;# 
  2591   0004FD                     TOSL            equ	1277	;# 
  2592   0004FE                     TOSH            equ	1278	;# 
  2593   0004FF                     TOSU            equ	1279	;# 
  2594                           
  2595                           	psect	eeprom_data
  2596   3803FF                     	org	1023	;# 
  2597   3803FF  00                 	db	0	;# 
  2598   000038                     BOOTREG         equ	56	;# 
  2599   000039                     CLKRCON         equ	57	;# 
  2600   00003A                     CLKRCLK         equ	58	;# 
  2601   000040                     NVMCON0         equ	64	;# 
  2602   000041                     NVMCON1         equ	65	;# 
  2603   000042                     NVMLOCK         equ	66	;# 
  2604   000043                     NVMADR          equ	67	;# 
  2605   000043                     NVMADRL         equ	67	;# 
  2606   000044                     NVMADRH         equ	68	;# 
  2607   000045                     NVMADRU         equ	69	;# 
  2608   000046                     NVMDAT          equ	70	;# 
  2609   000046                     NVMDATL         equ	70	;# 
  2610   000047                     NVMDATH         equ	71	;# 
  2611   000048                     VREGCON         equ	72	;# 
  2612   000049                     BORCON          equ	73	;# 
  2613   00004A                     HLVDCON0        equ	74	;# 
  2614   00004B                     HLVDCON1        equ	75	;# 
  2615   00004C                     ZCDCON          equ	76	;# 
  2616   000060                     PMD0            equ	96	;# 
  2617   000061                     PMD1            equ	97	;# 
  2618   000062                     PMD2            equ	98	;# 
  2619   000063                     PMD3            equ	99	;# 
  2620   000064                     PMD4            equ	100	;# 
  2621   000065                     PMD5            equ	101	;# 
  2622   000066                     PMD6            equ	102	;# 
  2623   000067                     PMD7            equ	103	;# 
  2624   000068                     PMD8            equ	104	;# 
  2625   00006A                     MD1CON0         equ	106	;# 
  2626   00006B                     MD1CON1         equ	107	;# 
  2627   00006C                     MD1SRC          equ	108	;# 
  2628   00006D                     MD1CARL         equ	109	;# 
  2629   00006E                     MD1CARH         equ	110	;# 
  2630   00006F                     CMOUT           equ	111	;# 
  2631   000070                     CM1CON0         equ	112	;# 
  2632   000071                     CM1CON1         equ	113	;# 
  2633   000072                     CM1NCH          equ	114	;# 
  2634   000073                     CM1PCH          equ	115	;# 
  2635   000074                     CM2CON0         equ	116	;# 
  2636   000075                     CM2CON1         equ	117	;# 
  2637   000076                     CM2NCH          equ	118	;# 
  2638   000077                     CM2PCH          equ	119	;# 
  2639   000078                     WDTCON0         equ	120	;# 
  2640   000079                     WDTCON1         equ	121	;# 
  2641   00007A                     WDTPSL          equ	122	;# 
  2642   00007B                     WDTPSH          equ	123	;# 
  2643   00007C                     WDTTMR          equ	124	;# 
  2644   00007D                     DAC1DAT         equ	125	;# 
  2645   00007D                     DAC1DATL        equ	125	;# 
  2646   00007F                     DAC1CON         equ	127	;# 
  2647   000080                     SPI1RXB         equ	128	;# 
  2648   000081                     SPI1TXB         equ	129	;# 
  2649   000082                     SPI1TCNT        equ	130	;# 
  2650   000082                     SPI1TCNTL       equ	130	;# 
  2651   000083                     SPI1TCNTH       equ	131	;# 
  2652   000084                     SPI1CON0        equ	132	;# 
  2653   000085                     SPI1CON1        equ	133	;# 
  2654   000086                     SPI1CON2        equ	134	;# 
  2655   000087                     SPI1STATUS      equ	135	;# 
  2656   000088                     SPI1TWIDTH      equ	136	;# 
  2657   000089                     SPI1BAUD        equ	137	;# 
  2658   00008A                     SPI1INTF        equ	138	;# 
  2659   00008B                     SPI1INTE        equ	139	;# 
  2660   00008C                     SPI1CLK         equ	140	;# 
  2661   00008D                     SPI2RXB         equ	141	;# 
  2662   00008E                     SPI2TXB         equ	142	;# 
  2663   00008F                     SPI2TCNT        equ	143	;# 
  2664   00008F                     SPI2TCNTL       equ	143	;# 
  2665   000090                     SPI2TCNTH       equ	144	;# 
  2666   000091                     SPI2CON0        equ	145	;# 
  2667   000092                     SPI2CON1        equ	146	;# 
  2668   000093                     SPI2CON2        equ	147	;# 
  2669   000094                     SPI2STATUS      equ	148	;# 
  2670   000095                     SPI2TWIDTH      equ	149	;# 
  2671   000096                     SPI2BAUD        equ	150	;# 
  2672   000097                     SPI2INTF        equ	151	;# 
  2673   000098                     SPI2INTE        equ	152	;# 
  2674   000099                     SPI2CLK         equ	153	;# 
  2675   0000AC                     ACTCON          equ	172	;# 
  2676   0000AD                     OSCCON1         equ	173	;# 
  2677   0000AE                     OSCCON2         equ	174	;# 
  2678   0000AF                     OSCCON3         equ	175	;# 
  2679   0000B0                     OSCTUNE         equ	176	;# 
  2680   0000B1                     OSCFRQ          equ	177	;# 
  2681   0000B1                     OSCFREQ         equ	177	;# 
  2682   0000B2                     OSCSTAT         equ	178	;# 
  2683   0000B2                     OSCSTAT1        equ	178	;# 
  2684   0000B3                     OSCEN           equ	179	;# 
  2685   0000B4                     PRLOCK          equ	180	;# 
  2686   0000B5                     SCANPR          equ	181	;# 
  2687   0000B6                     DMA1PR          equ	182	;# 
  2688   0000B7                     DMA2PR          equ	183	;# 
  2689   0000B8                     DMA3PR          equ	184	;# 
  2690   0000B9                     DMA4PR          equ	185	;# 
  2691   0000BA                     DMA5PR          equ	186	;# 
  2692   0000BB                     DMA6PR          equ	187	;# 
  2693   0000BC                     DMA7PR          equ	188	;# 
  2694   0000BD                     DMA8PR          equ	189	;# 
  2695   0000BE                     MAINPR          equ	190	;# 
  2696   0000BF                     ISRPR           equ	191	;# 
  2697   0000D4                     CLCDATA         equ	212	;# 
  2698   0000D5                     CLCSELECT       equ	213	;# 
  2699   0000D6                     CLCnCON         equ	214	;# 
  2700   0000D7                     CLCnPOL         equ	215	;# 
  2701   0000D8                     CLCnSEL0        equ	216	;# 
  2702   0000D9                     CLCnSEL1        equ	217	;# 
  2703   0000DA                     CLCnSEL2        equ	218	;# 
  2704   0000DB                     CLCnSEL3        equ	219	;# 
  2705   0000DC                     CLCnGLS0        equ	220	;# 
  2706   0000DD                     CLCnGLS1        equ	221	;# 
  2707   0000DE                     CLCnGLS2        equ	222	;# 
  2708   0000DF                     CLCnGLS3        equ	223	;# 
  2709   0000E8                     DMASELECT       equ	232	;# 
  2710   0000E9                     DMAnBUF         equ	233	;# 
  2711   0000EA                     DMAnDCNT        equ	234	;# 
  2712   0000EA                     DMAnDCNTL       equ	234	;# 
  2713   0000EB                     DMAnDCNTH       equ	235	;# 
  2714   0000EC                     DMAnDPTR        equ	236	;# 
  2715   0000EC                     DMAnDPTRL       equ	236	;# 
  2716   0000ED                     DMAnDPTRH       equ	237	;# 
  2717   0000EE                     DMAnDSZ         equ	238	;# 
  2718   0000EE                     DMAnDSZL        equ	238	;# 
  2719   0000EF                     DMAnDSZH        equ	239	;# 
  2720   0000F0                     DMAnDSA         equ	240	;# 
  2721   0000F0                     DMAnDSAL        equ	240	;# 
  2722   0000F1                     DMAnDSAH        equ	241	;# 
  2723   0000F2                     DMAnSCNT        equ	242	;# 
  2724   0000F2                     DMAnSCNTL       equ	242	;# 
  2725   0000F3                     DMAnSCNTH       equ	243	;# 
  2726   0000F4                     DMAnSPTR        equ	244	;# 
  2727   0000F4                     DMAnSPTRL       equ	244	;# 
  2728   0000F5                     DMAnSPTRH       equ	245	;# 
  2729   0000F6                     DMAnSPTRU       equ	246	;# 
  2730   0000F7                     DMAnSSZ         equ	247	;# 
  2731   0000F7                     DMAnSSZL        equ	247	;# 
  2732   0000F8                     DMAnSSZH        equ	248	;# 
  2733   0000F9                     DMAnSSA         equ	249	;# 
  2734   0000F9                     DMAnSSAL        equ	249	;# 
  2735   0000FA                     DMAnSSAH        equ	250	;# 
  2736   0000FB                     DMAnSSAU        equ	251	;# 
  2737   0000FC                     DMAnCON0        equ	252	;# 
  2738   0000FD                     DMAnCON1        equ	253	;# 
  2739   0000FE                     DMAnAIRQ        equ	254	;# 
  2740   0000FF                     DMAnSIRQ        equ	255	;# 
  2741   000100                     C1CONL          equ	256	;# 
  2742   000101                     C1CONH          equ	257	;# 
  2743   000102                     C1CONU          equ	258	;# 
  2744   000103                     C1CONT          equ	259	;# 
  2745   000104                     C1NBTCFGL       equ	260	;# 
  2746   000105                     C1NBTCFGH       equ	261	;# 
  2747   000106                     C1NBTCFGU       equ	262	;# 
  2748   000107                     C1NBTCFGT       equ	263	;# 
  2749   000108                     C1DBTCFGL       equ	264	;# 
  2750   000109                     C1DBTCFGH       equ	265	;# 
  2751   00010A                     C1DBTCFGU       equ	266	;# 
  2752   00010B                     C1DBTCFGT       equ	267	;# 
  2753   00010C                     C1TDCL          equ	268	;# 
  2754   00010D                     C1TDCH          equ	269	;# 
  2755   00010E                     C1TDCU          equ	270	;# 
  2756   000110                     C1TBC           equ	272	;# 
  2757   000110                     C1TBCL          equ	272	;# 
  2758   000111                     C1TBCH          equ	273	;# 
  2759   000112                     C1TBCU          equ	274	;# 
  2760   000113                     C1TBCT          equ	275	;# 
  2761   000114                     C1TSCONL        equ	276	;# 
  2762   000115                     C1TSCONH        equ	277	;# 
  2763   000116                     C1TSCONU        equ	278	;# 
  2764   000117                     C1TSCONT        equ	279	;# 
  2765   000118                     C1VECL          equ	280	;# 
  2766   000119                     C1VECH          equ	281	;# 
  2767   00011A                     C1VECU          equ	282	;# 
  2768   00011B                     C1VECT          equ	283	;# 
  2769   00011C                     C1INTL          equ	284	;# 
  2770   00011D                     C1INTH          equ	285	;# 
  2771   00011E                     C1INTU          equ	286	;# 
  2772   00011F                     C1INTT          equ	287	;# 
  2773   000120                     C1RXIF          equ	288	;# 
  2774   000120                     C1RXIFL         equ	288	;# 
  2775   000121                     C1RXIFH         equ	289	;# 
  2776   000122                     C1RXIFU         equ	290	;# 
  2777   000123                     C1RXIFT         equ	291	;# 
  2778   000124                     C1TXIF          equ	292	;# 
  2779   000124                     C1TXIFL         equ	292	;# 
  2780   000125                     C1TXIFH         equ	293	;# 
  2781   000126                     C1TXIFU         equ	294	;# 
  2782   000127                     C1TXIFT         equ	295	;# 
  2783   000128                     C1RXOVIF        equ	296	;# 
  2784   000128                     C1RXOVIFL       equ	296	;# 
  2785   000129                     C1RXOVIFH       equ	297	;# 
  2786   00012A                     C1RXOVIFU       equ	298	;# 
  2787   00012B                     C1RXOVIFT       equ	299	;# 
  2788   00012C                     C1TXATIF        equ	300	;# 
  2789   00012C                     C1TXATIFL       equ	300	;# 
  2790   00012D                     C1TXATIFH       equ	301	;# 
  2791   00012E                     C1TXATIFU       equ	302	;# 
  2792   00012F                     C1TXATIFT       equ	303	;# 
  2793   000130                     C1TXREQ         equ	304	;# 
  2794   000130                     C1TXREQL        equ	304	;# 
  2795   000131                     C1TXREQH        equ	305	;# 
  2796   000132                     C1TXREQU        equ	306	;# 
  2797   000133                     C1TXREQT        equ	307	;# 
  2798   000134                     C1TRECL         equ	308	;# 
  2799   000135                     C1TRECH         equ	309	;# 
  2800   000136                     C1TRECU         equ	310	;# 
  2801   000137                     C1TRECT         equ	311	;# 
  2802   000138                     C1BDIAG0L       equ	312	;# 
  2803   000139                     C1BDIAG0H       equ	313	;# 
  2804   00013C                     C1BDIAG1L       equ	316	;# 
  2805   00013D                     C1BDIAG1H       equ	317	;# 
  2806   00013E                     C1BDIAG1U       equ	318	;# 
  2807   00013F                     C1BDIAG1T       equ	319	;# 
  2808   000140                     C1TEFCONL       equ	320	;# 
  2809   000141                     C1TEFCONH       equ	321	;# 
  2810   000142                     C1TEFCONU       equ	322	;# 
  2811   000143                     C1TEFCONT       equ	323	;# 
  2812   000144                     C1TEFSTAL       equ	324	;# 
  2813   000145                     C1TEFSTAH       equ	325	;# 
  2814   000146                     C1TEFSTAU       equ	326	;# 
  2815   000147                     C1TEFSTAT       equ	327	;# 
  2816   000148                     C1TEFUA         equ	328	;# 
  2817   000148                     C1TEFUAL        equ	328	;# 
  2818   000149                     C1TEFUAH        equ	329	;# 
  2819   00014A                     C1TEFUAU        equ	330	;# 
  2820   00014B                     C1TEFUAT        equ	331	;# 
  2821   00014C                     C1FIFOBA        equ	332	;# 
  2822   00014C                     C1FIFOBAL       equ	332	;# 
  2823   00014D                     C1FIFOBAH       equ	333	;# 
  2824   00014E                     C1FIFOBAU       equ	334	;# 
  2825   00014F                     C1FIFOBAT       equ	335	;# 
  2826   000150                     C1TXQCONL       equ	336	;# 
  2827   000151                     C1TXQCONH       equ	337	;# 
  2828   000152                     C1TXQCONU       equ	338	;# 
  2829   000153                     C1TXQCONT       equ	339	;# 
  2830   000154                     C1TXQSTAL       equ	340	;# 
  2831   000155                     C1TXQSTAH       equ	341	;# 
  2832   000156                     C1TXQSTAU       equ	342	;# 
  2833   000157                     C1TXQSTAT       equ	343	;# 
  2834   000158                     C1TXQUA         equ	344	;# 
  2835   000158                     C1TXQUAL        equ	344	;# 
  2836   000159                     C1TXQUAH        equ	345	;# 
  2837   00015A                     C1TXQUAU        equ	346	;# 
  2838   00015B                     C1TXQUAT        equ	347	;# 
  2839   00015C                     C1FIFOCON1      equ	348	;# 
  2840   00015C                     C1FIFOCON1L     equ	348	;# 
  2841   00015D                     C1FIFOCON1H     equ	349	;# 
  2842   00015E                     C1FIFOCON1U     equ	350	;# 
  2843   00015F                     C1FIFOCON1T     equ	351	;# 
  2844   000160                     C1FIFOSTA1      equ	352	;# 
  2845   000160                     C1FIFOSTA1L     equ	352	;# 
  2846   000161                     C1FIFOSTA1H     equ	353	;# 
  2847   000162                     C1FIFOSTA1U     equ	354	;# 
  2848   000163                     C1FIFOSTA1T     equ	355	;# 
  2849   000164                     C1FIFOUA1       equ	356	;# 
  2850   000164                     C1FIFOUA1L      equ	356	;# 
  2851   000165                     C1FIFOUA1H      equ	357	;# 
  2852   000166                     C1FIFOUA1U      equ	358	;# 
  2853   000167                     C1FIFOUA1T      equ	359	;# 
  2854   000168                     C1FIFOCON2      equ	360	;# 
  2855   000168                     C1FIFOCON2L     equ	360	;# 
  2856   000169                     C1FIFOCON2H     equ	361	;# 
  2857   00016A                     C1FIFOCON2U     equ	362	;# 
  2858   00016B                     C1FIFOCON2T     equ	363	;# 
  2859   00016C                     C1FIFOSTA2      equ	364	;# 
  2860   00016C                     C1FIFOSTA2L     equ	364	;# 
  2861   00016D                     C1FIFOSTA2H     equ	365	;# 
  2862   00016E                     C1FIFOSTA2U     equ	366	;# 
  2863   00016F                     C1FIFOSTA2T     equ	367	;# 
  2864   000170                     C1FIFOUA2       equ	368	;# 
  2865   000170                     C1FIFOUA2L      equ	368	;# 
  2866   000171                     C1FIFOUA2H      equ	369	;# 
  2867   000172                     C1FIFOUA2U      equ	370	;# 
  2868   000173                     C1FIFOUA2T      equ	371	;# 
  2869   000174                     C1FIFOCON3      equ	372	;# 
  2870   000174                     C1FIFOCON3L     equ	372	;# 
  2871   000175                     C1FIFOCON3H     equ	373	;# 
  2872   000176                     C1FIFOCON3U     equ	374	;# 
  2873   000177                     C1FIFOCON3T     equ	375	;# 
  2874   000178                     C1FIFOSTA3      equ	376	;# 
  2875   000178                     C1FIFOSTA3L     equ	376	;# 
  2876   000179                     C1FIFOSTA3H     equ	377	;# 
  2877   00017A                     C1FIFOSTA3U     equ	378	;# 
  2878   00017B                     C1FIFOSTA3T     equ	379	;# 
  2879   00017C                     C1FIFOUA3       equ	380	;# 
  2880   00017C                     C1FIFOUA3L      equ	380	;# 
  2881   00017D                     C1FIFOUA3H      equ	381	;# 
  2882   00017E                     C1FIFOUA3U      equ	382	;# 
  2883   00017F                     C1FIFOUA3T      equ	383	;# 
  2884   000180                     C1FLTCON0L      equ	384	;# 
  2885   000181                     C1FLTCON0H      equ	385	;# 
  2886   000182                     C1FLTCON0U      equ	386	;# 
  2887   000183                     C1FLTCON0T      equ	387	;# 
  2888   000184                     C1FLTCON1L      equ	388	;# 
  2889   000185                     C1FLTCON1H      equ	389	;# 
  2890   000186                     C1FLTCON1U      equ	390	;# 
  2891   000187                     C1FLTCON1T      equ	391	;# 
  2892   000188                     C1FLTCON2L      equ	392	;# 
  2893   000189                     C1FLTCON2H      equ	393	;# 
  2894   00018A                     C1FLTCON2U      equ	394	;# 
  2895   00018B                     C1FLTCON2T      equ	395	;# 
  2896   00018C                     C1FLTOBJ0       equ	396	;# 
  2897   00018C                     C1FLTOBJ0L      equ	396	;# 
  2898   00018D                     C1FLTOBJ0H      equ	397	;# 
  2899   00018E                     C1FLTOBJ0U      equ	398	;# 
  2900   00018F                     C1FLTOBJ0T      equ	399	;# 
  2901   000190                     C1MASK0         equ	400	;# 
  2902   000190                     C1MASK0L        equ	400	;# 
  2903   000191                     C1MASK0H        equ	401	;# 
  2904   000192                     C1MASK0U        equ	402	;# 
  2905   000193                     C1MASK0T        equ	403	;# 
  2906   000194                     C1FLTOBJ1       equ	404	;# 
  2907   000194                     C1FLTOBJ1L      equ	404	;# 
  2908   000195                     C1FLTOBJ1H      equ	405	;# 
  2909   000196                     C1FLTOBJ1U      equ	406	;# 
  2910   000197                     C1FLTOBJ1T      equ	407	;# 
  2911   000198                     C1MASK1         equ	408	;# 
  2912   000198                     C1MASK1L        equ	408	;# 
  2913   000199                     C1MASK1H        equ	409	;# 
  2914   00019A                     C1MASK1U        equ	410	;# 
  2915   00019B                     C1MASK1T        equ	411	;# 
  2916   00019C                     C1FLTOBJ2       equ	412	;# 
  2917   00019C                     C1FLTOBJ2L      equ	412	;# 
  2918   00019D                     C1FLTOBJ2H      equ	413	;# 
  2919   00019E                     C1FLTOBJ2U      equ	414	;# 
  2920   00019F                     C1FLTOBJ2T      equ	415	;# 
  2921   0001A0                     C1MASK2         equ	416	;# 
  2922   0001A0                     C1MASK2L        equ	416	;# 
  2923   0001A1                     C1MASK2H        equ	417	;# 
  2924   0001A2                     C1MASK2U        equ	418	;# 
  2925   0001A3                     C1MASK2T        equ	419	;# 
  2926   0001A4                     C1FLTOBJ3       equ	420	;# 
  2927   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2928   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2929   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2930   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2931   0001A8                     C1MASK3         equ	424	;# 
  2932   0001A8                     C1MASK3L        equ	424	;# 
  2933   0001A9                     C1MASK3H        equ	425	;# 
  2934   0001AA                     C1MASK3U        equ	426	;# 
  2935   0001AB                     C1MASK3T        equ	427	;# 
  2936   0001AC                     C1FLTOBJ4       equ	428	;# 
  2937   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2938   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2939   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2940   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2941   0001B0                     C1MASK4         equ	432	;# 
  2942   0001B0                     C1MASK4L        equ	432	;# 
  2943   0001B1                     C1MASK4H        equ	433	;# 
  2944   0001B2                     C1MASK4U        equ	434	;# 
  2945   0001B3                     C1MASK4T        equ	435	;# 
  2946   0001B4                     C1FLTOBJ5       equ	436	;# 
  2947   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2948   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2949   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2950   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2951   0001B8                     C1MASK5         equ	440	;# 
  2952   0001B8                     C1MASK5L        equ	440	;# 
  2953   0001B9                     C1MASK5H        equ	441	;# 
  2954   0001BA                     C1MASK5U        equ	442	;# 
  2955   0001BB                     C1MASK5T        equ	443	;# 
  2956   0001BC                     C1FLTOBJ6       equ	444	;# 
  2957   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2958   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2959   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2960   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2961   0001C0                     C1MASK6         equ	448	;# 
  2962   0001C0                     C1MASK6L        equ	448	;# 
  2963   0001C1                     C1MASK6H        equ	449	;# 
  2964   0001C2                     C1MASK6U        equ	450	;# 
  2965   0001C3                     C1MASK6T        equ	451	;# 
  2966   0001C4                     C1FLTOBJ7       equ	452	;# 
  2967   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2968   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2969   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2970   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2971   0001C8                     C1MASK7         equ	456	;# 
  2972   0001C8                     C1MASK7L        equ	456	;# 
  2973   0001C9                     C1MASK7H        equ	457	;# 
  2974   0001CA                     C1MASK7U        equ	458	;# 
  2975   0001CB                     C1MASK7T        equ	459	;# 
  2976   0001CC                     C1FLTOBJ8       equ	460	;# 
  2977   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2978   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2979   0001CE                     C1FLTOBJ8U      equ	462	;# 
  2980   0001CF                     C1FLTOBJ8T      equ	463	;# 
  2981   0001D0                     C1MASK8         equ	464	;# 
  2982   0001D0                     C1MASK8L        equ	464	;# 
  2983   0001D1                     C1MASK8H        equ	465	;# 
  2984   0001D2                     C1MASK8U        equ	466	;# 
  2985   0001D3                     C1MASK8T        equ	467	;# 
  2986   0001D4                     C1FLTOBJ9       equ	468	;# 
  2987   0001D4                     C1FLTOBJ9L      equ	468	;# 
  2988   0001D5                     C1FLTOBJ9H      equ	469	;# 
  2989   0001D6                     C1FLTOBJ9U      equ	470	;# 
  2990   0001D7                     C1FLTOBJ9T      equ	471	;# 
  2991   0001D8                     C1MASK9         equ	472	;# 
  2992   0001D8                     C1MASK9L        equ	472	;# 
  2993   0001D9                     C1MASK9H        equ	473	;# 
  2994   0001DA                     C1MASK9U        equ	474	;# 
  2995   0001DB                     C1MASK9T        equ	475	;# 
  2996   0001DC                     C1FLTOBJ10      equ	476	;# 
  2997   0001DC                     C1FLTOBJ10L     equ	476	;# 
  2998   0001DD                     C1FLTOBJ10H     equ	477	;# 
  2999   0001DE                     C1FLTOBJ10U     equ	478	;# 
  3000   0001DF                     C1FLTOBJ10T     equ	479	;# 
  3001   0001E0                     C1MASK10        equ	480	;# 
  3002   0001E0                     C1MASK10L       equ	480	;# 
  3003   0001E1                     C1MASK10H       equ	481	;# 
  3004   0001E2                     C1MASK10U       equ	482	;# 
  3005   0001E3                     C1MASK10T       equ	483	;# 
  3006   0001E4                     C1FLTOBJ11      equ	484	;# 
  3007   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3008   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3009   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3010   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3011   0001E8                     C1MASK11        equ	488	;# 
  3012   0001E8                     C1MASK11L       equ	488	;# 
  3013   0001E9                     C1MASK11H       equ	489	;# 
  3014   0001EA                     C1MASK11U       equ	490	;# 
  3015   0001EB                     C1MASK11T       equ	491	;# 
  3016   000200                     PPSLOCK         equ	512	;# 
  3017   000201                     RA0PPS          equ	513	;# 
  3018   000202                     RA1PPS          equ	514	;# 
  3019   000203                     RA2PPS          equ	515	;# 
  3020   000204                     RA3PPS          equ	516	;# 
  3021   000205                     RA4PPS          equ	517	;# 
  3022   000206                     RA5PPS          equ	518	;# 
  3023   000207                     RA6PPS          equ	519	;# 
  3024   000208                     RA7PPS          equ	520	;# 
  3025   000209                     RB0PPS          equ	521	;# 
  3026   00020A                     RB1PPS          equ	522	;# 
  3027   00020B                     RB2PPS          equ	523	;# 
  3028   00020C                     RB3PPS          equ	524	;# 
  3029   00020D                     RB4PPS          equ	525	;# 
  3030   00020E                     RB5PPS          equ	526	;# 
  3031   00020F                     RB6PPS          equ	527	;# 
  3032   000210                     RB7PPS          equ	528	;# 
  3033   000211                     RC0PPS          equ	529	;# 
  3034   000212                     RC1PPS          equ	530	;# 
  3035   000213                     RC2PPS          equ	531	;# 
  3036   000214                     RC3PPS          equ	532	;# 
  3037   000215                     RC4PPS          equ	533	;# 
  3038   000216                     RC5PPS          equ	534	;# 
  3039   000217                     RC6PPS          equ	535	;# 
  3040   000218                     RC7PPS          equ	536	;# 
  3041   00023D                     CANRXPPS        equ	573	;# 
  3042   00023E                     INT0PPS         equ	574	;# 
  3043   00023F                     INT1PPS         equ	575	;# 
  3044   000240                     INT2PPS         equ	576	;# 
  3045   000241                     T0CKIPPS        equ	577	;# 
  3046   000242                     T1CKIPPS        equ	578	;# 
  3047   000243                     T1GPPS          equ	579	;# 
  3048   000244                     T3CKIPPS        equ	580	;# 
  3049   000245                     T3GPPS          equ	581	;# 
  3050   000246                     T5CKIPPS        equ	582	;# 
  3051   000247                     T5GPPS          equ	583	;# 
  3052   000248                     T2INPPS         equ	584	;# 
  3053   000249                     T4INPPS         equ	585	;# 
  3054   00024A                     T6INPPS         equ	586	;# 
  3055   00024B                     TUIN0PPS        equ	587	;# 
  3056   00024C                     TUIN1PPS        equ	588	;# 
  3057   00024F                     CCP1PPS         equ	591	;# 
  3058   000250                     CCP2PPS         equ	592	;# 
  3059   000251                     CCP3PPS         equ	593	;# 
  3060   000253                     PWM1ERSPPS      equ	595	;# 
  3061   000254                     PWM2ERSPPS      equ	596	;# 
  3062   000255                     PWM3ERSPPS      equ	597	;# 
  3063   000256                     PWM4ERSPPS      equ	598	;# 
  3064   000257                     PWMIN0PPS       equ	599	;# 
  3065   000258                     PWMIN1PPS       equ	600	;# 
  3066   000259                     SMT1WINPPS      equ	601	;# 
  3067   00025A                     SMT1SIGPPS      equ	602	;# 
  3068   00025B                     CWG1PPS         equ	603	;# 
  3069   00025B                     CWG1INPPS       equ	603	;# 
  3070   00025C                     CWG2PPS         equ	604	;# 
  3071   00025C                     CWG2INPPS       equ	604	;# 
  3072   00025D                     CWG3PPS         equ	605	;# 
  3073   00025D                     CWG3INPPS       equ	605	;# 
  3074   00025E                     MD1CARLPPS      equ	606	;# 
  3075   00025E                     MDCARLPPS       equ	606	;# 
  3076   00025F                     MD1CARHPPS      equ	607	;# 
  3077   00025F                     MDCARHPPS       equ	607	;# 
  3078   000260                     MD1SRCPPS       equ	608	;# 
  3079   000260                     MDSRCPPS        equ	608	;# 
  3080   000261                     CLCIN0PPS       equ	609	;# 
  3081   000262                     CLCIN1PPS       equ	610	;# 
  3082   000263                     CLCIN2PPS       equ	611	;# 
  3083   000264                     CLCIN3PPS       equ	612	;# 
  3084   000265                     CLCIN4PPS       equ	613	;# 
  3085   000266                     CLCIN5PPS       equ	614	;# 
  3086   000267                     CLCIN6PPS       equ	615	;# 
  3087   000268                     CLCIN7PPS       equ	616	;# 
  3088   000269                     ADACTPPS        equ	617	;# 
  3089   00026A                     SPI1SCKPPS      equ	618	;# 
  3090   00026B                     SPI1SDIPPS      equ	619	;# 
  3091   00026C                     SPI1SSPPS       equ	620	;# 
  3092   00026D                     SPI2SCKPPS      equ	621	;# 
  3093   00026E                     SPI2SDIPPS      equ	622	;# 
  3094   00026F                     SPI2SSPPS       equ	623	;# 
  3095   000270                     I2C1SDAPPS      equ	624	;# 
  3096   000271                     I2C1SCLPPS      equ	625	;# 
  3097   000272                     U1RXPPS         equ	626	;# 
  3098   000273                     U1CTSPPS        equ	627	;# 
  3099   000274                     U2RXPPS         equ	628	;# 
  3100   000275                     U2CTSPPS        equ	629	;# 
  3101   000276                     U3RXPPS         equ	630	;# 
  3102   000277                     U3CTSPPS        equ	631	;# 
  3103   000278                     U4RXPPS         equ	632	;# 
  3104   000279                     U4CTSPPS        equ	633	;# 
  3105   00027A                     U5RXPPS         equ	634	;# 
  3106   00027B                     U5CTSPPS        equ	635	;# 
  3107   000286                     RC4I2C          equ	646	;# 
  3108   000287                     RC3I2C          equ	647	;# 
  3109   000288                     RB2I2C          equ	648	;# 
  3110   000289                     RB1I2C          equ	649	;# 
  3111   00028A                     I2C1RXB         equ	650	;# 
  3112   00028B                     I2C1TXB         equ	651	;# 
  3113   00028C                     I2C1CNTL        equ	652	;# 
  3114   00028D                     I2C1CNTH        equ	653	;# 
  3115   00028E                     I2C1ADB0        equ	654	;# 
  3116   00028F                     I2C1ADB1        equ	655	;# 
  3117   000290                     I2C1ADR0        equ	656	;# 
  3118   000291                     I2C1ADR1        equ	657	;# 
  3119   000292                     I2C1ADR2        equ	658	;# 
  3120   000293                     I2C1ADR3        equ	659	;# 
  3121   000294                     I2C1CON0        equ	660	;# 
  3122   000295                     I2C1CON1        equ	661	;# 
  3123   000296                     I2C1CON2        equ	662	;# 
  3124   000297                     I2C1ERR         equ	663	;# 
  3125   000298                     I2C1STAT0       equ	664	;# 
  3126   000299                     I2C1STAT1       equ	665	;# 
  3127   00029A                     I2C1PIR         equ	666	;# 
  3128   00029B                     I2C1PIE         equ	667	;# 
  3129   00029C                     I2C1BTO         equ	668	;# 
  3130   00029D                     I2C1BAUD        equ	669	;# 
  3131   00029E                     I2C1CLK         equ	670	;# 
  3132   00029F                     I2C1BTOC        equ	671	;# 
  3133   0002A1                     U1RXB           equ	673	;# 
  3134   0002A1                     U1RXBL          equ	673	;# 
  3135   0002A2                     U1RXCHK         equ	674	;# 
  3136   0002A3                     U1TXB           equ	675	;# 
  3137   0002A3                     U1TXBL          equ	675	;# 
  3138   0002A4                     U1TXCHK         equ	676	;# 
  3139   0002A5                     U1P1            equ	677	;# 
  3140   0002A5                     U1P1L           equ	677	;# 
  3141   0002A6                     U1P1H           equ	678	;# 
  3142   0002A7                     U1P2            equ	679	;# 
  3143   0002A7                     U1P2L           equ	679	;# 
  3144   0002A8                     U1P2H           equ	680	;# 
  3145   0002A9                     U1P3            equ	681	;# 
  3146   0002A9                     U1P3L           equ	681	;# 
  3147   0002AA                     U1P3H           equ	682	;# 
  3148   0002AB                     U1CON0          equ	683	;# 
  3149   0002AC                     U1CON1          equ	684	;# 
  3150   0002AD                     U1CON2          equ	685	;# 
  3151   0002AE                     U1BRG           equ	686	;# 
  3152   0002AE                     U1BRGL          equ	686	;# 
  3153   0002AF                     U1BRGH          equ	687	;# 
  3154   0002B0                     U1FIFO          equ	688	;# 
  3155   0002B1                     U1UIR           equ	689	;# 
  3156   0002B2                     U1ERRIR         equ	690	;# 
  3157   0002B3                     U1ERRIE         equ	691	;# 
  3158   0002B4                     U2RXB           equ	692	;# 
  3159   0002B4                     U2RXBL          equ	692	;# 
  3160   0002B5                     U2RXCHK         equ	693	;# 
  3161   0002B6                     U2TXB           equ	694	;# 
  3162   0002B6                     U2TXBL          equ	694	;# 
  3163   0002B7                     U2TXCHK         equ	695	;# 
  3164   0002B8                     U2P1            equ	696	;# 
  3165   0002B8                     U2P1L           equ	696	;# 
  3166   0002B9                     U2P1H           equ	697	;# 
  3167   0002BA                     U2P2            equ	698	;# 
  3168   0002BA                     U2P2L           equ	698	;# 
  3169   0002BB                     U2P2H           equ	699	;# 
  3170   0002BC                     U2P3            equ	700	;# 
  3171   0002BC                     U2P3L           equ	700	;# 
  3172   0002BD                     U2P3H           equ	701	;# 
  3173   0002BE                     U2CON0          equ	702	;# 
  3174   0002BF                     U2CON1          equ	703	;# 
  3175   0002C0                     U2CON2          equ	704	;# 
  3176   0002C1                     U2BRG           equ	705	;# 
  3177   0002C1                     U2BRGL          equ	705	;# 
  3178   0002C2                     U2BRGH          equ	706	;# 
  3179   0002C3                     U2FIFO          equ	707	;# 
  3180   0002C4                     U2UIR           equ	708	;# 
  3181   0002C5                     U2ERRIR         equ	709	;# 
  3182   0002C6                     U2ERRIE         equ	710	;# 
  3183   0002C7                     U3RXB           equ	711	;# 
  3184   0002C7                     U3RXBL          equ	711	;# 
  3185   0002C9                     U3TXB           equ	713	;# 
  3186   0002C9                     U3TXBL          equ	713	;# 
  3187   0002CB                     U3P1            equ	715	;# 
  3188   0002CB                     U3P1L           equ	715	;# 
  3189   0002CD                     U3P2            equ	717	;# 
  3190   0002CD                     U3P2L           equ	717	;# 
  3191   0002CF                     U3P3            equ	719	;# 
  3192   0002CF                     U3P3L           equ	719	;# 
  3193   0002D1                     U3CON0          equ	721	;# 
  3194   0002D2                     U3CON1          equ	722	;# 
  3195   0002D3                     U3CON2          equ	723	;# 
  3196   0002D4                     U3BRG           equ	724	;# 
  3197   0002D4                     U3BRGL          equ	724	;# 
  3198   0002D5                     U3BRGH          equ	725	;# 
  3199   0002D6                     U3FIFO          equ	726	;# 
  3200   0002D7                     U3UIR           equ	727	;# 
  3201   0002D8                     U3ERRIR         equ	728	;# 
  3202   0002D9                     U3ERRIE         equ	729	;# 
  3203   0002DA                     U4RXB           equ	730	;# 
  3204   0002DA                     U4RXBL          equ	730	;# 
  3205   0002DC                     U4TXB           equ	732	;# 
  3206   0002DC                     U4TXBL          equ	732	;# 
  3207   0002DE                     U4P1            equ	734	;# 
  3208   0002DE                     U4P1L           equ	734	;# 
  3209   0002E0                     U4P2            equ	736	;# 
  3210   0002E0                     U4P2L           equ	736	;# 
  3211   0002E2                     U4P3            equ	738	;# 
  3212   0002E2                     U4P3L           equ	738	;# 
  3213   0002E4                     U4CON0          equ	740	;# 
  3214   0002E5                     U4CON1          equ	741	;# 
  3215   0002E6                     U4CON2          equ	742	;# 
  3216   0002E7                     U4BRG           equ	743	;# 
  3217   0002E7                     U4BRGL          equ	743	;# 
  3218   0002E8                     U4BRGH          equ	744	;# 
  3219   0002E9                     U4FIFO          equ	745	;# 
  3220   0002EA                     U4UIR           equ	746	;# 
  3221   0002EB                     U4ERRIR         equ	747	;# 
  3222   0002EC                     U4ERRIE         equ	748	;# 
  3223   0002ED                     U5RXB           equ	749	;# 
  3224   0002ED                     U5RXBL          equ	749	;# 
  3225   0002EF                     U5TXB           equ	751	;# 
  3226   0002EF                     U5TXBL          equ	751	;# 
  3227   0002F1                     U5P1            equ	753	;# 
  3228   0002F1                     U5P1L           equ	753	;# 
  3229   0002F3                     U5P2            equ	755	;# 
  3230   0002F3                     U5P2L           equ	755	;# 
  3231   0002F5                     U5P3            equ	757	;# 
  3232   0002F5                     U5P3L           equ	757	;# 
  3233   0002F7                     U5CON0          equ	759	;# 
  3234   0002F8                     U5CON1          equ	760	;# 
  3235   0002F9                     U5CON2          equ	761	;# 
  3236   0002FA                     U5BRG           equ	762	;# 
  3237   0002FA                     U5BRGL          equ	762	;# 
  3238   0002FB                     U5BRGH          equ	763	;# 
  3239   0002FC                     U5FIFO          equ	764	;# 
  3240   0002FD                     U5UIR           equ	765	;# 
  3241   0002FE                     U5ERRIR         equ	766	;# 
  3242   0002FF                     U5ERRIE         equ	767	;# 
  3243   000300                     SMT1TMR         equ	768	;# 
  3244   000300                     SMT1TMRL        equ	768	;# 
  3245   000301                     SMT1TMRH        equ	769	;# 
  3246   000302                     SMT1TMRU        equ	770	;# 
  3247   000303                     SMT1CPR         equ	771	;# 
  3248   000303                     SMT1CPRL        equ	771	;# 
  3249   000304                     SMT1CPRH        equ	772	;# 
  3250   000305                     SMT1CPRU        equ	773	;# 
  3251   000306                     SMT1CPW         equ	774	;# 
  3252   000306                     SMT1CPWL        equ	774	;# 
  3253   000307                     SMT1CPWH        equ	775	;# 
  3254   000308                     SMT1CPWU        equ	776	;# 
  3255   000309                     SMT1PR          equ	777	;# 
  3256   000309                     SMT1PRL         equ	777	;# 
  3257   00030A                     SMT1PRH         equ	778	;# 
  3258   00030B                     SMT1PRU         equ	779	;# 
  3259   00030C                     SMT1CON0        equ	780	;# 
  3260   00030D                     SMT1CON1        equ	781	;# 
  3261   00030E                     SMT1STAT        equ	782	;# 
  3262   00030F                     SMT1CLK         equ	783	;# 
  3263   000310                     SMT1SIG         equ	784	;# 
  3264   000311                     SMT1WIN         equ	785	;# 
  3265   000318                     TMR0L           equ	792	;# 
  3266   000318                     TMR0            equ	792	;# 
  3267   000319                     TMR0H           equ	793	;# 
  3268   000319                     PR0             equ	793	;# 
  3269   00031A                     T0CON0          equ	794	;# 
  3270   00031B                     T0CON1          equ	795	;# 
  3271   00031C                     TMR1            equ	796	;# 
  3272   00031C                     TMR1L           equ	796	;# 
  3273   00031D                     TMR1H           equ	797	;# 
  3274   00031E                     T1CON           equ	798	;# 
  3275   00031E                     TMR1CON         equ	798	;# 
  3276   00031F                     T1GCON          equ	799	;# 
  3277   00031F                     TMR1GCON        equ	799	;# 
  3278   000320                     T1GATE          equ	800	;# 
  3279   000320                     TMR1GATE        equ	800	;# 
  3280   000321                     T1CLK           equ	801	;# 
  3281   000321                     TMR1CLK         equ	801	;# 
  3282   000321                     PR1             equ	801	;# 
  3283   000322                     T2TMR           equ	802	;# 
  3284   000322                     TMR2            equ	802	;# 
  3285   000323                     T2PR            equ	803	;# 
  3286   000323                     PR2             equ	803	;# 
  3287   000324                     T2CON           equ	804	;# 
  3288   000325                     T2HLT           equ	805	;# 
  3289   000326                     T2CLKCON        equ	806	;# 
  3290   000326                     T2CLK           equ	806	;# 
  3291   000327                     T2RST           equ	807	;# 
  3292   000328                     TMR3            equ	808	;# 
  3293   000328                     TMR3L           equ	808	;# 
  3294   000329                     TMR3H           equ	809	;# 
  3295   00032A                     T3CON           equ	810	;# 
  3296   00032A                     TMR3CON         equ	810	;# 
  3297   00032B                     T3GCON          equ	811	;# 
  3298   00032B                     TMR3GCON        equ	811	;# 
  3299   00032C                     T3GATE          equ	812	;# 
  3300   00032C                     TMR3GATE        equ	812	;# 
  3301   00032D                     T3CLK           equ	813	;# 
  3302   00032D                     TMR3CLK         equ	813	;# 
  3303   00032D                     PR3             equ	813	;# 
  3304   00032E                     T4TMR           equ	814	;# 
  3305   00032E                     TMR4            equ	814	;# 
  3306   00032F                     T4PR            equ	815	;# 
  3307   00032F                     PR4             equ	815	;# 
  3308   000330                     T4CON           equ	816	;# 
  3309   000331                     T4HLT           equ	817	;# 
  3310   000332                     T4CLKCON        equ	818	;# 
  3311   000332                     T4CLK           equ	818	;# 
  3312   000333                     T4RST           equ	819	;# 
  3313   000334                     TMR5            equ	820	;# 
  3314   000334                     TMR5L           equ	820	;# 
  3315   000335                     TMR5H           equ	821	;# 
  3316   000336                     T5CON           equ	822	;# 
  3317   000336                     TMR5CON         equ	822	;# 
  3318   000337                     T5GCON          equ	823	;# 
  3319   000337                     TMR5GCON        equ	823	;# 
  3320   000338                     T5GATE          equ	824	;# 
  3321   000338                     TMR5GATE        equ	824	;# 
  3322   000339                     T5CLK           equ	825	;# 
  3323   000339                     TMR5CLK         equ	825	;# 
  3324   000339                     PR5             equ	825	;# 
  3325   00033A                     T6TMR           equ	826	;# 
  3326   00033A                     TMR6            equ	826	;# 
  3327   00033B                     T6PR            equ	827	;# 
  3328   00033B                     PR6             equ	827	;# 
  3329   00033C                     T6CON           equ	828	;# 
  3330   00033D                     T6HLT           equ	829	;# 
  3331   00033E                     T6CLKCON        equ	830	;# 
  3332   00033E                     T6CLK           equ	830	;# 
  3333   00033F                     T6RST           equ	831	;# 
  3334   000340                     CCPR1           equ	832	;# 
  3335   000340                     CCPR1L          equ	832	;# 
  3336   000341                     CCPR1H          equ	833	;# 
  3337   000342                     CCP1CON         equ	834	;# 
  3338   000343                     CCP1CAP         equ	835	;# 
  3339   000344                     CCPR2           equ	836	;# 
  3340   000344                     CCPR2L          equ	836	;# 
  3341   000345                     CCPR2H          equ	837	;# 
  3342   000346                     CCP2CON         equ	838	;# 
  3343   000347                     CCP2CAP         equ	839	;# 
  3344   000348                     CCPR3           equ	840	;# 
  3345   000348                     CCPR3L          equ	840	;# 
  3346   000349                     CCPR3H          equ	841	;# 
  3347   00034A                     CCP3CON         equ	842	;# 
  3348   00034B                     CCP3CAP         equ	843	;# 
  3349   00034C                     CCPTMRS0        equ	844	;# 
  3350   00034F                     CRCDATA         equ	847	;# 
  3351   00034F                     CRCDATAL        equ	847	;# 
  3352   000350                     CRCDATAH        equ	848	;# 
  3353   000351                     CRCDATAU        equ	849	;# 
  3354   000352                     CRCDATAT        equ	850	;# 
  3355   000353                     CRCOUT          equ	851	;# 
  3356   000353                     CRCSHFT         equ	851	;# 
  3357   000353                     CRCXOR          equ	851	;# 
  3358   000353                     CRCOUTL         equ	851	;# 
  3359   000353                     CRCSHFTL        equ	851	;# 
  3360   000353                     CRCSHIFTL       equ	851	;# 
  3361   000353                     CRCXORL         equ	851	;# 
  3362   000354                     CRCOUTH         equ	852	;# 
  3363   000354                     CRCSHFTH        equ	852	;# 
  3364   000354                     CRCSHIFTH       equ	852	;# 
  3365   000354                     CRCXORH         equ	852	;# 
  3366   000355                     CRCOUTU         equ	853	;# 
  3367   000355                     CRCSHFTU        equ	853	;# 
  3368   000355                     CRCSHIFTU       equ	853	;# 
  3369   000355                     CRCXORU         equ	853	;# 
  3370   000356                     CRCOUTT         equ	854	;# 
  3371   000356                     CRCSHFTT        equ	854	;# 
  3372   000356                     CRCSHIFTT       equ	854	;# 
  3373   000356                     CRCXORT         equ	854	;# 
  3374   000357                     CRCCON0         equ	855	;# 
  3375   000358                     CRCCON1         equ	856	;# 
  3376   000359                     CRCCON2         equ	857	;# 
  3377   00035A                     SCANLADR        equ	858	;# 
  3378   00035A                     SCANLADRL       equ	858	;# 
  3379   00035B                     SCANLADRH       equ	859	;# 
  3380   00035C                     SCANLADRU       equ	860	;# 
  3381   00035D                     SCANHADR        equ	861	;# 
  3382   00035D                     SCANHADRL       equ	861	;# 
  3383   00035E                     SCANHADRH       equ	862	;# 
  3384   00035F                     SCANHADRU       equ	863	;# 
  3385   000360                     SCANCON0        equ	864	;# 
  3386   000361                     SCANTRIG        equ	865	;# 
  3387   000362                     IPR0            equ	866	;# 
  3388   000363                     IPR1            equ	867	;# 
  3389   000364                     IPR2            equ	868	;# 
  3390   000365                     IPR3            equ	869	;# 
  3391   000366                     IPR4            equ	870	;# 
  3392   000367                     IPR5            equ	871	;# 
  3393   000368                     IPR6            equ	872	;# 
  3394   000369                     IPR7            equ	873	;# 
  3395   00036A                     IPR8            equ	874	;# 
  3396   00036B                     IPR9            equ	875	;# 
  3397   00036C                     IPR10           equ	876	;# 
  3398   00036D                     IPR11           equ	877	;# 
  3399   00036E                     IPR12           equ	878	;# 
  3400   00036F                     IPR13           equ	879	;# 
  3401   000370                     IPR14           equ	880	;# 
  3402   000371                     IPR15           equ	881	;# 
  3403   000373                     STATUS_CSHAD    equ	883	;# 
  3404   000374                     WREG_CSHAD      equ	884	;# 
  3405   000375                     BSR_CSHAD       equ	885	;# 
  3406   000376                     SHADCON         equ	886	;# 
  3407   000377                     STATUS_SHAD     equ	887	;# 
  3408   000378                     WREG_SHAD       equ	888	;# 
  3409   000379                     BSR_SHAD        equ	889	;# 
  3410   00037A                     PCLATH_SHAD     equ	890	;# 
  3411   00037B                     PCLATU_SHAD     equ	891	;# 
  3412   00037C                     FSR0SH          equ	892	;# 
  3413   00037C                     FSR0L_SHAD      equ	892	;# 
  3414   00037D                     FSR0H_SHAD      equ	893	;# 
  3415   00037E                     FSR1SH          equ	894	;# 
  3416   00037E                     FSR1L_SHAD      equ	894	;# 
  3417   00037F                     FSR1H_SHAD      equ	895	;# 
  3418   000380                     FSR2SH          equ	896	;# 
  3419   000380                     FSR2L_SHAD      equ	896	;# 
  3420   000381                     FSR2H_SHAD      equ	897	;# 
  3421   000382                     PRODSH          equ	898	;# 
  3422   000382                     PRODL_SHAD      equ	898	;# 
  3423   000383                     PRODH_SHAD      equ	899	;# 
  3424   000387                     TU16ACON0       equ	903	;# 
  3425   000388                     TU16ACON1       equ	904	;# 
  3426   000389                     TU16AHLT        equ	905	;# 
  3427   00038A                     TU16APS         equ	906	;# 
  3428   00038B                     TU16ATMR        equ	907	;# 
  3429   00038B                     TU16ACR         equ	907	;# 
  3430   00038B                     TU16ATMRL       equ	907	;# 
  3431   00038B                     TU16ACRL        equ	907	;# 
  3432   00038C                     TU16ATMRH       equ	908	;# 
  3433   00038C                     TU16ACRH        equ	908	;# 
  3434   00038D                     TU16APR         equ	909	;# 
  3435   00038D                     TU16APRL        equ	909	;# 
  3436   00038E                     TU16APRH        equ	910	;# 
  3437   00038F                     TU16ACLK        equ	911	;# 
  3438   000390                     TU16AERS        equ	912	;# 
  3439   000393                     TU16BCON0       equ	915	;# 
  3440   000394                     TU16BCON1       equ	916	;# 
  3441   000395                     TU16BHLT        equ	917	;# 
  3442   000396                     TU16BPS         equ	918	;# 
  3443   000397                     TU16BTMR        equ	919	;# 
  3444   000397                     TU16BCR         equ	919	;# 
  3445   000397                     TU16BTMRL       equ	919	;# 
  3446   000397                     TU16BCRL        equ	919	;# 
  3447   000398                     TU16BTMRH       equ	920	;# 
  3448   000398                     TU16BCRH        equ	920	;# 
  3449   000399                     TU16BPR         equ	921	;# 
  3450   000399                     TU16BPRL        equ	921	;# 
  3451   00039A                     TU16BPRH        equ	922	;# 
  3452   00039B                     TU16BCLK        equ	923	;# 
  3453   00039C                     TU16BERS        equ	924	;# 
  3454   0003BB                     TUCHAIN         equ	955	;# 
  3455   0003BC                     CWG1CLK         equ	956	;# 
  3456   0003BC                     CWG1CLKCON      equ	956	;# 
  3457   0003BD                     CWG1ISM         equ	957	;# 
  3458   0003BE                     CWG1DBR         equ	958	;# 
  3459   0003BF                     CWG1DBF         equ	959	;# 
  3460   0003C0                     CWG1CON0        equ	960	;# 
  3461   0003C1                     CWG1CON1        equ	961	;# 
  3462   0003C2                     CWG1AS0         equ	962	;# 
  3463   0003C3                     CWG1AS1         equ	963	;# 
  3464   0003C4                     CWG1STR         equ	964	;# 
  3465   0003C5                     CWG2CLK         equ	965	;# 
  3466   0003C5                     CWG2CLKCON      equ	965	;# 
  3467   0003C6                     CWG2ISM         equ	966	;# 
  3468   0003C7                     CWG2DBR         equ	967	;# 
  3469   0003C8                     CWG2DBF         equ	968	;# 
  3470   0003C9                     CWG2CON0        equ	969	;# 
  3471   0003CA                     CWG2CON1        equ	970	;# 
  3472   0003CB                     CWG2AS0         equ	971	;# 
  3473   0003CC                     CWG2AS1         equ	972	;# 
  3474   0003CD                     CWG2STR         equ	973	;# 
  3475   0003CE                     CWG3CLK         equ	974	;# 
  3476   0003CE                     CWG3CLKCON      equ	974	;# 
  3477   0003CF                     CWG3ISM         equ	975	;# 
  3478   0003D0                     CWG3DBR         equ	976	;# 
  3479   0003D1                     CWG3DBF         equ	977	;# 
  3480   0003D2                     CWG3CON0        equ	978	;# 
  3481   0003D3                     CWG3CON1        equ	979	;# 
  3482   0003D4                     CWG3AS0         equ	980	;# 
  3483   0003D5                     CWG3AS1         equ	981	;# 
  3484   0003D6                     CWG3STR         equ	982	;# 
  3485   0003D7                     FVRCON          equ	983	;# 
  3486   0003D8                     ADCPCON         equ	984	;# 
  3487   0003D8                     ADCP            equ	984	;# 
  3488   0003D9                     ADLTH           equ	985	;# 
  3489   0003D9                     ADLTHL          equ	985	;# 
  3490   0003DA                     ADLTHH          equ	986	;# 
  3491   0003DB                     ADUTH           equ	987	;# 
  3492   0003DB                     ADUTHL          equ	987	;# 
  3493   0003DC                     ADUTHH          equ	988	;# 
  3494   0003DD                     ADERR           equ	989	;# 
  3495   0003DD                     ADERRL          equ	989	;# 
  3496   0003DE                     ADERRH          equ	990	;# 
  3497   0003DF                     ADSTPT          equ	991	;# 
  3498   0003DF                     ADSTPTL         equ	991	;# 
  3499   0003E0                     ADSTPTH         equ	992	;# 
  3500   0003E1                     ADFLTR          equ	993	;# 
  3501   0003E1                     ADFLTRL         equ	993	;# 
  3502   0003E2                     ADFLTRH         equ	994	;# 
  3503   0003E3                     ADACC           equ	995	;# 
  3504   0003E3                     ADACCL          equ	995	;# 
  3505   0003E4                     ADACCH          equ	996	;# 
  3506   0003E5                     ADACCU          equ	997	;# 
  3507   0003E6                     ADCNT           equ	998	;# 
  3508   0003E7                     ADRPT           equ	999	;# 
  3509   0003E8                     ADPREV          equ	1000	;# 
  3510   0003E8                     ADPREVL         equ	1000	;# 
  3511   0003E9                     ADPREVH         equ	1001	;# 
  3512   0003EA                     ADRES           equ	1002	;# 
  3513   0003EA                     ADRESL          equ	1002	;# 
  3514   0003EB                     ADRESH          equ	1003	;# 
  3515   0003EC                     ADPCH           equ	1004	;# 
  3516   0003EE                     ADACQ           equ	1006	;# 
  3517   0003EE                     ADACQL          equ	1006	;# 
  3518   0003EF                     ADACQH          equ	1007	;# 
  3519   0003F0                     ADCAP           equ	1008	;# 
  3520   0003F1                     ADPRE           equ	1009	;# 
  3521   0003F1                     ADPREL          equ	1009	;# 
  3522   0003F2                     ADPREH          equ	1010	;# 
  3523   0003F3                     ADCON0          equ	1011	;# 
  3524   0003F4                     ADCON1          equ	1012	;# 
  3525   0003F5                     ADCON2          equ	1013	;# 
  3526   0003F6                     ADCON3          equ	1014	;# 
  3527   0003F7                     ADSTAT          equ	1015	;# 
  3528   0003F8                     ADREF           equ	1016	;# 
  3529   0003F9                     ADACT           equ	1017	;# 
  3530   0003FA                     ADCLK           equ	1018	;# 
  3531   0003FB                     ADCTX           equ	1019	;# 
  3532   0003FC                     ADCSEL1         equ	1020	;# 
  3533   0003FD                     ADCSEL2         equ	1021	;# 
  3534   0003FE                     ADCSEL3         equ	1022	;# 
  3535   0003FF                     ADCSEL4         equ	1023	;# 
  3536   000400                     ANSELA          equ	1024	;# 
  3537   000401                     WPUA            equ	1025	;# 
  3538   000402                     ODCONA          equ	1026	;# 
  3539   000403                     SLRCONA         equ	1027	;# 
  3540   000404                     INLVLA          equ	1028	;# 
  3541   000405                     IOCAP           equ	1029	;# 
  3542   000406                     IOCAN           equ	1030	;# 
  3543   000407                     IOCAF           equ	1031	;# 
  3544   000408                     ANSELB          equ	1032	;# 
  3545   000409                     WPUB            equ	1033	;# 
  3546   00040A                     ODCONB          equ	1034	;# 
  3547   00040B                     SLRCONB         equ	1035	;# 
  3548   00040C                     INLVLB          equ	1036	;# 
  3549   00040D                     IOCBP           equ	1037	;# 
  3550   00040E                     IOCBN           equ	1038	;# 
  3551   00040F                     IOCBF           equ	1039	;# 
  3552   000410                     ANSELC          equ	1040	;# 
  3553   000411                     WPUC            equ	1041	;# 
  3554   000412                     ODCONC          equ	1042	;# 
  3555   000413                     SLRCONC         equ	1043	;# 
  3556   000414                     INLVLC          equ	1044	;# 
  3557   000415                     IOCCP           equ	1045	;# 
  3558   000416                     IOCCN           equ	1046	;# 
  3559   000417                     IOCCF           equ	1047	;# 
  3560   000421                     WPUE            equ	1057	;# 
  3561   000424                     INLVLE          equ	1060	;# 
  3562   000425                     IOCEP           equ	1061	;# 
  3563   000426                     IOCEN           equ	1062	;# 
  3564   000427                     IOCEF           equ	1063	;# 
  3565   000440                     NCO1ACC         equ	1088	;# 
  3566   000440                     NCO1ACCL        equ	1088	;# 
  3567   000441                     NCO1ACCH        equ	1089	;# 
  3568   000442                     NCO1ACCU        equ	1090	;# 
  3569   000443                     NCO1INC         equ	1091	;# 
  3570   000443                     NCO1INCL        equ	1091	;# 
  3571   000444                     NCO1INCH        equ	1092	;# 
  3572   000445                     NCO1INCU        equ	1093	;# 
  3573   000446                     NCO1CON         equ	1094	;# 
  3574   000447                     NCO1CLK         equ	1095	;# 
  3575   000448                     NCO2ACC         equ	1096	;# 
  3576   000448                     NCO2ACCL        equ	1096	;# 
  3577   000449                     NCO2ACCH        equ	1097	;# 
  3578   00044A                     NCO2ACCU        equ	1098	;# 
  3579   00044B                     NCO2INC         equ	1099	;# 
  3580   00044B                     NCO2INCL        equ	1099	;# 
  3581   00044C                     NCO2INCH        equ	1100	;# 
  3582   00044D                     NCO2INCU        equ	1101	;# 
  3583   00044E                     NCO2CON         equ	1102	;# 
  3584   00044F                     NCO2CLK         equ	1103	;# 
  3585   000450                     NCO3ACC         equ	1104	;# 
  3586   000450                     NCO3ACCL        equ	1104	;# 
  3587   000451                     NCO3ACCH        equ	1105	;# 
  3588   000452                     NCO3ACCU        equ	1106	;# 
  3589   000453                     NCO3INC         equ	1107	;# 
  3590   000453                     NCO3INCL        equ	1107	;# 
  3591   000454                     NCO3INCH        equ	1108	;# 
  3592   000455                     NCO3INCU        equ	1109	;# 
  3593   000456                     NCO3CON         equ	1110	;# 
  3594   000457                     NCO3CLK         equ	1111	;# 
  3595   000458                     FSCMCON         equ	1112	;# 
  3596   000459                     IVTLOCK         equ	1113	;# 
  3597   00045A                     IVTAD           equ	1114	;# 
  3598   00045A                     IVTADL          equ	1114	;# 
  3599   00045B                     IVTADH          equ	1115	;# 
  3600   00045C                     IVTADU          equ	1116	;# 
  3601   00045D                     IVTBASE         equ	1117	;# 
  3602   00045D                     IVTBASEL        equ	1117	;# 
  3603   00045E                     IVTBASEH        equ	1118	;# 
  3604   00045F                     IVTBASEU        equ	1119	;# 
  3605   000460                     PWM1ERS         equ	1120	;# 
  3606   000461                     PWM1CLK         equ	1121	;# 
  3607   000462                     PWM1LDS         equ	1122	;# 
  3608   000463                     PWM1PR          equ	1123	;# 
  3609   000463                     PWM1PRL         equ	1123	;# 
  3610   000464                     PWM1PRH         equ	1124	;# 
  3611   000465                     PWM1CPRE        equ	1125	;# 
  3612   000466                     PWM1PIPOS       equ	1126	;# 
  3613   000467                     PWM1GIR         equ	1127	;# 
  3614   000468                     PWM1GIE         equ	1128	;# 
  3615   000469                     PWM1CON         equ	1129	;# 
  3616   00046A                     PWM1S1CFG       equ	1130	;# 
  3617   00046B                     PWM1S1P1        equ	1131	;# 
  3618   00046B                     PWM1S1P1L       equ	1131	;# 
  3619   00046C                     PWM1S1P1H       equ	1132	;# 
  3620   00046D                     PWM1S1P2        equ	1133	;# 
  3621   00046D                     PWM1S1P2L       equ	1133	;# 
  3622   00046E                     PWM1S1P2H       equ	1134	;# 
  3623   00046F                     PWM2ERS         equ	1135	;# 
  3624   000470                     PWM2CLK         equ	1136	;# 
  3625   000471                     PWM2LDS         equ	1137	;# 
  3626   000472                     PWM2PR          equ	1138	;# 
  3627   000472                     PWM2PRL         equ	1138	;# 
  3628   000473                     PWM2PRH         equ	1139	;# 
  3629   000474                     PWM2CPRE        equ	1140	;# 
  3630   000475                     PWM2PIPOS       equ	1141	;# 
  3631   000476                     PWM2GIR         equ	1142	;# 
  3632   000477                     PWM2GIE         equ	1143	;# 
  3633   000478                     PWM2CON         equ	1144	;# 
  3634   000479                     PWM2S1CFG       equ	1145	;# 
  3635   00047A                     PWM2S1P1        equ	1146	;# 
  3636   00047A                     PWM2S1P1L       equ	1146	;# 
  3637   00047B                     PWM2S1P1H       equ	1147	;# 
  3638   00047C                     PWM2S1P2        equ	1148	;# 
  3639   00047C                     PWM2S1P2L       equ	1148	;# 
  3640   00047D                     PWM2S1P2H       equ	1149	;# 
  3641   00047E                     PWM3ERS         equ	1150	;# 
  3642   00047F                     PWM3CLK         equ	1151	;# 
  3643   000480                     PWM3LDS         equ	1152	;# 
  3644   000481                     PWM3PR          equ	1153	;# 
  3645   000481                     PWM3PRL         equ	1153	;# 
  3646   000482                     PWM3PRH         equ	1154	;# 
  3647   000483                     PWM3CPRE        equ	1155	;# 
  3648   000484                     PWM3PIPOS       equ	1156	;# 
  3649   000485                     PWM3GIR         equ	1157	;# 
  3650   000486                     PWM3GIE         equ	1158	;# 
  3651   000487                     PWM3CON         equ	1159	;# 
  3652   000488                     PWM3S1CFG       equ	1160	;# 
  3653   000489                     PWM3S1P1        equ	1161	;# 
  3654   000489                     PWM3S1P1L       equ	1161	;# 
  3655   00048A                     PWM3S1P1H       equ	1162	;# 
  3656   00048B                     PWM3S1P2        equ	1163	;# 
  3657   00048B                     PWM3S1P2L       equ	1163	;# 
  3658   00048C                     PWM3S1P2H       equ	1164	;# 
  3659   00048D                     PWM4ERS         equ	1165	;# 
  3660   00048E                     PWM4CLK         equ	1166	;# 
  3661   00048F                     PWM4LDS         equ	1167	;# 
  3662   000490                     PWM4PR          equ	1168	;# 
  3663   000490                     PWM4PRL         equ	1168	;# 
  3664   000491                     PWM4PRH         equ	1169	;# 
  3665   000492                     PWM4CPRE        equ	1170	;# 
  3666   000493                     PWM4PIPOS       equ	1171	;# 
  3667   000494                     PWM4GIR         equ	1172	;# 
  3668   000495                     PWM4GIE         equ	1173	;# 
  3669   000496                     PWM4CON         equ	1174	;# 
  3670   000497                     PWM4S1CFG       equ	1175	;# 
  3671   000498                     PWM4S1P1        equ	1176	;# 
  3672   000498                     PWM4S1P1L       equ	1176	;# 
  3673   000499                     PWM4S1P1H       equ	1177	;# 
  3674   00049A                     PWM4S1P2        equ	1178	;# 
  3675   00049A                     PWM4S1P2L       equ	1178	;# 
  3676   00049B                     PWM4S1P2H       equ	1179	;# 
  3677   00049C                     PWMLOAD         equ	1180	;# 
  3678   00049D                     PWMEN           equ	1181	;# 
  3679   00049E                     PIE0            equ	1182	;# 
  3680   00049F                     PIE1            equ	1183	;# 
  3681   0004A0                     PIE2            equ	1184	;# 
  3682   0004A1                     PIE3            equ	1185	;# 
  3683   0004A2                     PIE4            equ	1186	;# 
  3684   0004A3                     PIE5            equ	1187	;# 
  3685   0004A4                     PIE6            equ	1188	;# 
  3686   0004A5                     PIE7            equ	1189	;# 
  3687   0004A6                     PIE8            equ	1190	;# 
  3688   0004A7                     PIE9            equ	1191	;# 
  3689   0004A8                     PIE10           equ	1192	;# 
  3690   0004A9                     PIE11           equ	1193	;# 
  3691   0004AA                     PIE12           equ	1194	;# 
  3692   0004AB                     PIE13           equ	1195	;# 
  3693   0004AC                     PIE14           equ	1196	;# 
  3694   0004AD                     PIE15           equ	1197	;# 
  3695   0004AE                     PIR0            equ	1198	;# 
  3696   0004AF                     PIR1            equ	1199	;# 
  3697   0004B0                     PIR2            equ	1200	;# 
  3698   0004B1                     PIR3            equ	1201	;# 
  3699   0004B2                     PIR4            equ	1202	;# 
  3700   0004B3                     PIR5            equ	1203	;# 
  3701   0004B4                     PIR6            equ	1204	;# 
  3702   0004B5                     PIR7            equ	1205	;# 
  3703   0004B6                     PIR8            equ	1206	;# 
  3704   0004B7                     PIR9            equ	1207	;# 
  3705   0004B8                     PIR10           equ	1208	;# 
  3706   0004B9                     PIR11           equ	1209	;# 
  3707   0004BA                     PIR12           equ	1210	;# 
  3708   0004BB                     PIR13           equ	1211	;# 
  3709   0004BC                     PIR14           equ	1212	;# 
  3710   0004BD                     PIR15           equ	1213	;# 
  3711   0004BE                     LATA            equ	1214	;# 
  3712   0004BF                     LATB            equ	1215	;# 
  3713   0004C0                     LATC            equ	1216	;# 
  3714   0004C6                     TRISA           equ	1222	;# 
  3715   0004C7                     TRISB           equ	1223	;# 
  3716   0004C8                     TRISC           equ	1224	;# 
  3717   0004CA                     TRISE           equ	1226	;# 
  3718   0004CE                     PORTA           equ	1230	;# 
  3719   0004CF                     PORTB           equ	1231	;# 
  3720   0004D0                     PORTC           equ	1232	;# 
  3721   0004D2                     PORTE           equ	1234	;# 
  3722   0004D6                     INTCON0         equ	1238	;# 
  3723   0004D7                     INTCON1         equ	1239	;# 
  3724   0004D8                     STATUS          equ	1240	;# 
  3725   0004D9                     FSR2            equ	1241	;# 
  3726   0004D9                     FSR2L           equ	1241	;# 
  3727   0004DA                     FSR2H           equ	1242	;# 
  3728   0004DB                     PLUSW2          equ	1243	;# 
  3729   0004DC                     PREINC2         equ	1244	;# 
  3730   0004DD                     POSTDEC2        equ	1245	;# 
  3731   0004DE                     POSTINC2        equ	1246	;# 
  3732   0004DF                     INDF2           equ	1247	;# 
  3733   0004E0                     BSR             equ	1248	;# 
  3734   0004E1                     FSR1            equ	1249	;# 
  3735   0004E1                     FSR1L           equ	1249	;# 
  3736   0004E2                     FSR1H           equ	1250	;# 
  3737   0004E3                     PLUSW1          equ	1251	;# 
  3738   0004E4                     PREINC1         equ	1252	;# 
  3739   0004E5                     POSTDEC1        equ	1253	;# 
  3740   0004E6                     POSTINC1        equ	1254	;# 
  3741   0004E7                     INDF1           equ	1255	;# 
  3742   0004E8                     WREG            equ	1256	;# 
  3743   0004E9                     FSR0            equ	1257	;# 
  3744   0004E9                     FSR0L           equ	1257	;# 
  3745   0004EA                     FSR0H           equ	1258	;# 
  3746   0004EB                     PLUSW0          equ	1259	;# 
  3747   0004EC                     PREINC0         equ	1260	;# 
  3748   0004ED                     POSTDEC0        equ	1261	;# 
  3749   0004EE                     POSTINC0        equ	1262	;# 
  3750   0004EF                     INDF0           equ	1263	;# 
  3751   0004F0                     PCON0           equ	1264	;# 
  3752   0004F1                     PCON1           equ	1265	;# 
  3753   0004F2                     CPUDOZE         equ	1266	;# 
  3754   0004F3                     PROD            equ	1267	;# 
  3755   0004F3                     PRODL           equ	1267	;# 
  3756   0004F4                     PRODH           equ	1268	;# 
  3757   0004F5                     TABLAT          equ	1269	;# 
  3758   0004F6                     TBLPTR          equ	1270	;# 
  3759   0004F6                     TBLPTRL         equ	1270	;# 
  3760   0004F7                     TBLPTRH         equ	1271	;# 
  3761   0004F8                     TBLPTRU         equ	1272	;# 
  3762   0004F9                     PCLAT           equ	1273	;# 
  3763   0004F9                     PCL             equ	1273	;# 
  3764   0004FA                     PCLATH          equ	1274	;# 
  3765   0004FB                     PCLATU          equ	1275	;# 
  3766   0004FC                     STKPTR          equ	1276	;# 
  3767   0004FD                     TOS             equ	1277	;# 
  3768   0004FD                     TOSL            equ	1277	;# 
  3769   0004FE                     TOSH            equ	1278	;# 
  3770   0004FF                     TOSU            equ	1279	;# 
  3771   000038                     BOOTREG         equ	56	;# 
  3772   000039                     CLKRCON         equ	57	;# 
  3773   00003A                     CLKRCLK         equ	58	;# 
  3774   000040                     NVMCON0         equ	64	;# 
  3775   000041                     NVMCON1         equ	65	;# 
  3776   000042                     NVMLOCK         equ	66	;# 
  3777   000043                     NVMADR          equ	67	;# 
  3778   000043                     NVMADRL         equ	67	;# 
  3779   000044                     NVMADRH         equ	68	;# 
  3780   000045                     NVMADRU         equ	69	;# 
  3781   000046                     NVMDAT          equ	70	;# 
  3782   000046                     NVMDATL         equ	70	;# 
  3783   000047                     NVMDATH         equ	71	;# 
  3784   000048                     VREGCON         equ	72	;# 
  3785   000049                     BORCON          equ	73	;# 
  3786   00004A                     HLVDCON0        equ	74	;# 
  3787   00004B                     HLVDCON1        equ	75	;# 
  3788   00004C                     ZCDCON          equ	76	;# 
  3789   000060                     PMD0            equ	96	;# 
  3790   000061                     PMD1            equ	97	;# 
  3791   000062                     PMD2            equ	98	;# 
  3792   000063                     PMD3            equ	99	;# 
  3793   000064                     PMD4            equ	100	;# 
  3794   000065                     PMD5            equ	101	;# 
  3795   000066                     PMD6            equ	102	;# 
  3796   000067                     PMD7            equ	103	;# 
  3797   000068                     PMD8            equ	104	;# 
  3798   00006A                     MD1CON0         equ	106	;# 
  3799   00006B                     MD1CON1         equ	107	;# 
  3800   00006C                     MD1SRC          equ	108	;# 
  3801   00006D                     MD1CARL         equ	109	;# 
  3802   00006E                     MD1CARH         equ	110	;# 
  3803   00006F                     CMOUT           equ	111	;# 
  3804   000070                     CM1CON0         equ	112	;# 
  3805   000071                     CM1CON1         equ	113	;# 
  3806   000072                     CM1NCH          equ	114	;# 
  3807   000073                     CM1PCH          equ	115	;# 
  3808   000074                     CM2CON0         equ	116	;# 
  3809   000075                     CM2CON1         equ	117	;# 
  3810   000076                     CM2NCH          equ	118	;# 
  3811   000077                     CM2PCH          equ	119	;# 
  3812   000078                     WDTCON0         equ	120	;# 
  3813   000079                     WDTCON1         equ	121	;# 
  3814   00007A                     WDTPSL          equ	122	;# 
  3815   00007B                     WDTPSH          equ	123	;# 
  3816   00007C                     WDTTMR          equ	124	;# 
  3817   00007D                     DAC1DAT         equ	125	;# 
  3818   00007D                     DAC1DATL        equ	125	;# 
  3819   00007F                     DAC1CON         equ	127	;# 
  3820   000080                     SPI1RXB         equ	128	;# 
  3821   000081                     SPI1TXB         equ	129	;# 
  3822   000082                     SPI1TCNT        equ	130	;# 
  3823   000082                     SPI1TCNTL       equ	130	;# 
  3824   000083                     SPI1TCNTH       equ	131	;# 
  3825   000084                     SPI1CON0        equ	132	;# 
  3826   000085                     SPI1CON1        equ	133	;# 
  3827   000086                     SPI1CON2        equ	134	;# 
  3828   000087                     SPI1STATUS      equ	135	;# 
  3829   000088                     SPI1TWIDTH      equ	136	;# 
  3830   000089                     SPI1BAUD        equ	137	;# 
  3831   00008A                     SPI1INTF        equ	138	;# 
  3832   00008B                     SPI1INTE        equ	139	;# 
  3833   00008C                     SPI1CLK         equ	140	;# 
  3834   00008D                     SPI2RXB         equ	141	;# 
  3835   00008E                     SPI2TXB         equ	142	;# 
  3836   00008F                     SPI2TCNT        equ	143	;# 
  3837   00008F                     SPI2TCNTL       equ	143	;# 
  3838   000090                     SPI2TCNTH       equ	144	;# 
  3839   000091                     SPI2CON0        equ	145	;# 
  3840   000092                     SPI2CON1        equ	146	;# 
  3841   000093                     SPI2CON2        equ	147	;# 
  3842   000094                     SPI2STATUS      equ	148	;# 
  3843   000095                     SPI2TWIDTH      equ	149	;# 
  3844   000096                     SPI2BAUD        equ	150	;# 
  3845   000097                     SPI2INTF        equ	151	;# 
  3846   000098                     SPI2INTE        equ	152	;# 
  3847   000099                     SPI2CLK         equ	153	;# 
  3848   0000AC                     ACTCON          equ	172	;# 
  3849   0000AD                     OSCCON1         equ	173	;# 
  3850   0000AE                     OSCCON2         equ	174	;# 
  3851   0000AF                     OSCCON3         equ	175	;# 
  3852   0000B0                     OSCTUNE         equ	176	;# 
  3853   0000B1                     OSCFRQ          equ	177	;# 
  3854   0000B1                     OSCFREQ         equ	177	;# 
  3855   0000B2                     OSCSTAT         equ	178	;# 
  3856   0000B2                     OSCSTAT1        equ	178	;# 
  3857   0000B3                     OSCEN           equ	179	;# 
  3858   0000B4                     PRLOCK          equ	180	;# 
  3859   0000B5                     SCANPR          equ	181	;# 
  3860   0000B6                     DMA1PR          equ	182	;# 
  3861   0000B7                     DMA2PR          equ	183	;# 
  3862   0000B8                     DMA3PR          equ	184	;# 
  3863   0000B9                     DMA4PR          equ	185	;# 
  3864   0000BA                     DMA5PR          equ	186	;# 
  3865   0000BB                     DMA6PR          equ	187	;# 
  3866   0000BC                     DMA7PR          equ	188	;# 
  3867   0000BD                     DMA8PR          equ	189	;# 
  3868   0000BE                     MAINPR          equ	190	;# 
  3869   0000BF                     ISRPR           equ	191	;# 
  3870   0000D4                     CLCDATA         equ	212	;# 
  3871   0000D5                     CLCSELECT       equ	213	;# 
  3872   0000D6                     CLCnCON         equ	214	;# 
  3873   0000D7                     CLCnPOL         equ	215	;# 
  3874   0000D8                     CLCnSEL0        equ	216	;# 
  3875   0000D9                     CLCnSEL1        equ	217	;# 
  3876   0000DA                     CLCnSEL2        equ	218	;# 
  3877   0000DB                     CLCnSEL3        equ	219	;# 
  3878   0000DC                     CLCnGLS0        equ	220	;# 
  3879   0000DD                     CLCnGLS1        equ	221	;# 
  3880   0000DE                     CLCnGLS2        equ	222	;# 
  3881   0000DF                     CLCnGLS3        equ	223	;# 
  3882   0000E8                     DMASELECT       equ	232	;# 
  3883   0000E9                     DMAnBUF         equ	233	;# 
  3884   0000EA                     DMAnDCNT        equ	234	;# 
  3885   0000EA                     DMAnDCNTL       equ	234	;# 
  3886   0000EB                     DMAnDCNTH       equ	235	;# 
  3887   0000EC                     DMAnDPTR        equ	236	;# 
  3888   0000EC                     DMAnDPTRL       equ	236	;# 
  3889   0000ED                     DMAnDPTRH       equ	237	;# 
  3890   0000EE                     DMAnDSZ         equ	238	;# 
  3891   0000EE                     DMAnDSZL        equ	238	;# 
  3892   0000EF                     DMAnDSZH        equ	239	;# 
  3893   0000F0                     DMAnDSA         equ	240	;# 
  3894   0000F0                     DMAnDSAL        equ	240	;# 
  3895   0000F1                     DMAnDSAH        equ	241	;# 
  3896   0000F2                     DMAnSCNT        equ	242	;# 
  3897   0000F2                     DMAnSCNTL       equ	242	;# 
  3898   0000F3                     DMAnSCNTH       equ	243	;# 
  3899   0000F4                     DMAnSPTR        equ	244	;# 
  3900   0000F4                     DMAnSPTRL       equ	244	;# 
  3901   0000F5                     DMAnSPTRH       equ	245	;# 
  3902   0000F6                     DMAnSPTRU       equ	246	;# 
  3903   0000F7                     DMAnSSZ         equ	247	;# 
  3904   0000F7                     DMAnSSZL        equ	247	;# 
  3905   0000F8                     DMAnSSZH        equ	248	;# 
  3906   0000F9                     DMAnSSA         equ	249	;# 
  3907   0000F9                     DMAnSSAL        equ	249	;# 
  3908   0000FA                     DMAnSSAH        equ	250	;# 
  3909   0000FB                     DMAnSSAU        equ	251	;# 
  3910   0000FC                     DMAnCON0        equ	252	;# 
  3911   0000FD                     DMAnCON1        equ	253	;# 
  3912   0000FE                     DMAnAIRQ        equ	254	;# 
  3913   0000FF                     DMAnSIRQ        equ	255	;# 
  3914   000100                     C1CONL          equ	256	;# 
  3915   000101                     C1CONH          equ	257	;# 
  3916   000102                     C1CONU          equ	258	;# 
  3917   000103                     C1CONT          equ	259	;# 
  3918   000104                     C1NBTCFGL       equ	260	;# 
  3919   000105                     C1NBTCFGH       equ	261	;# 
  3920   000106                     C1NBTCFGU       equ	262	;# 
  3921   000107                     C1NBTCFGT       equ	263	;# 
  3922   000108                     C1DBTCFGL       equ	264	;# 
  3923   000109                     C1DBTCFGH       equ	265	;# 
  3924   00010A                     C1DBTCFGU       equ	266	;# 
  3925   00010B                     C1DBTCFGT       equ	267	;# 
  3926   00010C                     C1TDCL          equ	268	;# 
  3927   00010D                     C1TDCH          equ	269	;# 
  3928   00010E                     C1TDCU          equ	270	;# 
  3929   000110                     C1TBC           equ	272	;# 
  3930   000110                     C1TBCL          equ	272	;# 
  3931   000111                     C1TBCH          equ	273	;# 
  3932   000112                     C1TBCU          equ	274	;# 
  3933   000113                     C1TBCT          equ	275	;# 
  3934   000114                     C1TSCONL        equ	276	;# 
  3935   000115                     C1TSCONH        equ	277	;# 
  3936   000116                     C1TSCONU        equ	278	;# 
  3937   000117                     C1TSCONT        equ	279	;# 
  3938   000118                     C1VECL          equ	280	;# 
  3939   000119                     C1VECH          equ	281	;# 
  3940   00011A                     C1VECU          equ	282	;# 
  3941   00011B                     C1VECT          equ	283	;# 
  3942   00011C                     C1INTL          equ	284	;# 
  3943   00011D                     C1INTH          equ	285	;# 
  3944   00011E                     C1INTU          equ	286	;# 
  3945   00011F                     C1INTT          equ	287	;# 
  3946   000120                     C1RXIF          equ	288	;# 
  3947   000120                     C1RXIFL         equ	288	;# 
  3948   000121                     C1RXIFH         equ	289	;# 
  3949   000122                     C1RXIFU         equ	290	;# 
  3950   000123                     C1RXIFT         equ	291	;# 
  3951   000124                     C1TXIF          equ	292	;# 
  3952   000124                     C1TXIFL         equ	292	;# 
  3953   000125                     C1TXIFH         equ	293	;# 
  3954   000126                     C1TXIFU         equ	294	;# 
  3955   000127                     C1TXIFT         equ	295	;# 
  3956   000128                     C1RXOVIF        equ	296	;# 
  3957   000128                     C1RXOVIFL       equ	296	;# 
  3958   000129                     C1RXOVIFH       equ	297	;# 
  3959   00012A                     C1RXOVIFU       equ	298	;# 
  3960   00012B                     C1RXOVIFT       equ	299	;# 
  3961   00012C                     C1TXATIF        equ	300	;# 
  3962   00012C                     C1TXATIFL       equ	300	;# 
  3963   00012D                     C1TXATIFH       equ	301	;# 
  3964   00012E                     C1TXATIFU       equ	302	;# 
  3965   00012F                     C1TXATIFT       equ	303	;# 
  3966   000130                     C1TXREQ         equ	304	;# 
  3967   000130                     C1TXREQL        equ	304	;# 
  3968   000131                     C1TXREQH        equ	305	;# 
  3969   000132                     C1TXREQU        equ	306	;# 
  3970   000133                     C1TXREQT        equ	307	;# 
  3971   000134                     C1TRECL         equ	308	;# 
  3972   000135                     C1TRECH         equ	309	;# 
  3973   000136                     C1TRECU         equ	310	;# 
  3974   000137                     C1TRECT         equ	311	;# 
  3975   000138                     C1BDIAG0L       equ	312	;# 
  3976   000139                     C1BDIAG0H       equ	313	;# 
  3977   00013C                     C1BDIAG1L       equ	316	;# 
  3978   00013D                     C1BDIAG1H       equ	317	;# 
  3979   00013E                     C1BDIAG1U       equ	318	;# 
  3980   00013F                     C1BDIAG1T       equ	319	;# 
  3981   000140                     C1TEFCONL       equ	320	;# 
  3982   000141                     C1TEFCONH       equ	321	;# 
  3983   000142                     C1TEFCONU       equ	322	;# 
  3984   000143                     C1TEFCONT       equ	323	;# 
  3985   000144                     C1TEFSTAL       equ	324	;# 
  3986   000145                     C1TEFSTAH       equ	325	;# 
  3987   000146                     C1TEFSTAU       equ	326	;# 
  3988   000147                     C1TEFSTAT       equ	327	;# 
  3989   000148                     C1TEFUA         equ	328	;# 
  3990   000148                     C1TEFUAL        equ	328	;# 
  3991   000149                     C1TEFUAH        equ	329	;# 
  3992   00014A                     C1TEFUAU        equ	330	;# 
  3993   00014B                     C1TEFUAT        equ	331	;# 
  3994   00014C                     C1FIFOBA        equ	332	;# 
  3995   00014C                     C1FIFOBAL       equ	332	;# 
  3996   00014D                     C1FIFOBAH       equ	333	;# 
  3997   00014E                     C1FIFOBAU       equ	334	;# 
  3998   00014F                     C1FIFOBAT       equ	335	;# 
  3999   000150                     C1TXQCONL       equ	336	;# 
  4000   000151                     C1TXQCONH       equ	337	;# 
  4001   000152                     C1TXQCONU       equ	338	;# 
  4002   000153                     C1TXQCONT       equ	339	;# 
  4003   000154                     C1TXQSTAL       equ	340	;# 
  4004   000155                     C1TXQSTAH       equ	341	;# 
  4005   000156                     C1TXQSTAU       equ	342	;# 
  4006   000157                     C1TXQSTAT       equ	343	;# 
  4007   000158                     C1TXQUA         equ	344	;# 
  4008   000158                     C1TXQUAL        equ	344	;# 
  4009   000159                     C1TXQUAH        equ	345	;# 
  4010   00015A                     C1TXQUAU        equ	346	;# 
  4011   00015B                     C1TXQUAT        equ	347	;# 
  4012   00015C                     C1FIFOCON1      equ	348	;# 
  4013   00015C                     C1FIFOCON1L     equ	348	;# 
  4014   00015D                     C1FIFOCON1H     equ	349	;# 
  4015   00015E                     C1FIFOCON1U     equ	350	;# 
  4016   00015F                     C1FIFOCON1T     equ	351	;# 
  4017   000160                     C1FIFOSTA1      equ	352	;# 
  4018   000160                     C1FIFOSTA1L     equ	352	;# 
  4019   000161                     C1FIFOSTA1H     equ	353	;# 
  4020   000162                     C1FIFOSTA1U     equ	354	;# 
  4021   000163                     C1FIFOSTA1T     equ	355	;# 
  4022   000164                     C1FIFOUA1       equ	356	;# 
  4023   000164                     C1FIFOUA1L      equ	356	;# 
  4024   000165                     C1FIFOUA1H      equ	357	;# 
  4025   000166                     C1FIFOUA1U      equ	358	;# 
  4026   000167                     C1FIFOUA1T      equ	359	;# 
  4027   000168                     C1FIFOCON2      equ	360	;# 
  4028   000168                     C1FIFOCON2L     equ	360	;# 
  4029   000169                     C1FIFOCON2H     equ	361	;# 
  4030   00016A                     C1FIFOCON2U     equ	362	;# 
  4031   00016B                     C1FIFOCON2T     equ	363	;# 
  4032   00016C                     C1FIFOSTA2      equ	364	;# 
  4033   00016C                     C1FIFOSTA2L     equ	364	;# 
  4034   00016D                     C1FIFOSTA2H     equ	365	;# 
  4035   00016E                     C1FIFOSTA2U     equ	366	;# 
  4036   00016F                     C1FIFOSTA2T     equ	367	;# 
  4037   000170                     C1FIFOUA2       equ	368	;# 
  4038   000170                     C1FIFOUA2L      equ	368	;# 
  4039   000171                     C1FIFOUA2H      equ	369	;# 
  4040   000172                     C1FIFOUA2U      equ	370	;# 
  4041   000173                     C1FIFOUA2T      equ	371	;# 
  4042   000174                     C1FIFOCON3      equ	372	;# 
  4043   000174                     C1FIFOCON3L     equ	372	;# 
  4044   000175                     C1FIFOCON3H     equ	373	;# 
  4045   000176                     C1FIFOCON3U     equ	374	;# 
  4046   000177                     C1FIFOCON3T     equ	375	;# 
  4047   000178                     C1FIFOSTA3      equ	376	;# 
  4048   000178                     C1FIFOSTA3L     equ	376	;# 
  4049   000179                     C1FIFOSTA3H     equ	377	;# 
  4050   00017A                     C1FIFOSTA3U     equ	378	;# 
  4051   00017B                     C1FIFOSTA3T     equ	379	;# 
  4052   00017C                     C1FIFOUA3       equ	380	;# 
  4053   00017C                     C1FIFOUA3L      equ	380	;# 
  4054   00017D                     C1FIFOUA3H      equ	381	;# 
  4055   00017E                     C1FIFOUA3U      equ	382	;# 
  4056   00017F                     C1FIFOUA3T      equ	383	;# 
  4057   000180                     C1FLTCON0L      equ	384	;# 
  4058   000181                     C1FLTCON0H      equ	385	;# 
  4059   000182                     C1FLTCON0U      equ	386	;# 
  4060   000183                     C1FLTCON0T      equ	387	;# 
  4061   000184                     C1FLTCON1L      equ	388	;# 
  4062   000185                     C1FLTCON1H      equ	389	;# 
  4063   000186                     C1FLTCON1U      equ	390	;# 
  4064   000187                     C1FLTCON1T      equ	391	;# 
  4065   000188                     C1FLTCON2L      equ	392	;# 
  4066   000189                     C1FLTCON2H      equ	393	;# 
  4067   00018A                     C1FLTCON2U      equ	394	;# 
  4068   00018B                     C1FLTCON2T      equ	395	;# 
  4069   00018C                     C1FLTOBJ0       equ	396	;# 
  4070   00018C                     C1FLTOBJ0L      equ	396	;# 
  4071   00018D                     C1FLTOBJ0H      equ	397	;# 
  4072   00018E                     C1FLTOBJ0U      equ	398	;# 
  4073   00018F                     C1FLTOBJ0T      equ	399	;# 
  4074   000190                     C1MASK0         equ	400	;# 
  4075   000190                     C1MASK0L        equ	400	;# 
  4076   000191                     C1MASK0H        equ	401	;# 
  4077   000192                     C1MASK0U        equ	402	;# 
  4078   000193                     C1MASK0T        equ	403	;# 
  4079   000194                     C1FLTOBJ1       equ	404	;# 
  4080   000194                     C1FLTOBJ1L      equ	404	;# 
  4081   000195                     C1FLTOBJ1H      equ	405	;# 
  4082   000196                     C1FLTOBJ1U      equ	406	;# 
  4083   000197                     C1FLTOBJ1T      equ	407	;# 
  4084   000198                     C1MASK1         equ	408	;# 
  4085   000198                     C1MASK1L        equ	408	;# 
  4086   000199                     C1MASK1H        equ	409	;# 
  4087   00019A                     C1MASK1U        equ	410	;# 
  4088   00019B                     C1MASK1T        equ	411	;# 
  4089   00019C                     C1FLTOBJ2       equ	412	;# 
  4090   00019C                     C1FLTOBJ2L      equ	412	;# 
  4091   00019D                     C1FLTOBJ2H      equ	413	;# 
  4092   00019E                     C1FLTOBJ2U      equ	414	;# 
  4093   00019F                     C1FLTOBJ2T      equ	415	;# 
  4094   0001A0                     C1MASK2         equ	416	;# 
  4095   0001A0                     C1MASK2L        equ	416	;# 
  4096   0001A1                     C1MASK2H        equ	417	;# 
  4097   0001A2                     C1MASK2U        equ	418	;# 
  4098   0001A3                     C1MASK2T        equ	419	;# 
  4099   0001A4                     C1FLTOBJ3       equ	420	;# 
  4100   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4101   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4102   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4103   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4104   0001A8                     C1MASK3         equ	424	;# 
  4105   0001A8                     C1MASK3L        equ	424	;# 
  4106   0001A9                     C1MASK3H        equ	425	;# 
  4107   0001AA                     C1MASK3U        equ	426	;# 
  4108   0001AB                     C1MASK3T        equ	427	;# 
  4109   0001AC                     C1FLTOBJ4       equ	428	;# 
  4110   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4111   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4112   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4113   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4114   0001B0                     C1MASK4         equ	432	;# 
  4115   0001B0                     C1MASK4L        equ	432	;# 
  4116   0001B1                     C1MASK4H        equ	433	;# 
  4117   0001B2                     C1MASK4U        equ	434	;# 
  4118   0001B3                     C1MASK4T        equ	435	;# 
  4119   0001B4                     C1FLTOBJ5       equ	436	;# 
  4120   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4121   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4122   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4123   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4124   0001B8                     C1MASK5         equ	440	;# 
  4125   0001B8                     C1MASK5L        equ	440	;# 
  4126   0001B9                     C1MASK5H        equ	441	;# 
  4127   0001BA                     C1MASK5U        equ	442	;# 
  4128   0001BB                     C1MASK5T        equ	443	;# 
  4129   0001BC                     C1FLTOBJ6       equ	444	;# 
  4130   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4131   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4132   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4133   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4134   0001C0                     C1MASK6         equ	448	;# 
  4135   0001C0                     C1MASK6L        equ	448	;# 
  4136   0001C1                     C1MASK6H        equ	449	;# 
  4137   0001C2                     C1MASK6U        equ	450	;# 
  4138   0001C3                     C1MASK6T        equ	451	;# 
  4139   0001C4                     C1FLTOBJ7       equ	452	;# 
  4140   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4141   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4142   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4143   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4144   0001C8                     C1MASK7         equ	456	;# 
  4145   0001C8                     C1MASK7L        equ	456	;# 
  4146   0001C9                     C1MASK7H        equ	457	;# 
  4147   0001CA                     C1MASK7U        equ	458	;# 
  4148   0001CB                     C1MASK7T        equ	459	;# 
  4149   0001CC                     C1FLTOBJ8       equ	460	;# 
  4150   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4151   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4152   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4153   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4154   0001D0                     C1MASK8         equ	464	;# 
  4155   0001D0                     C1MASK8L        equ	464	;# 
  4156   0001D1                     C1MASK8H        equ	465	;# 
  4157   0001D2                     C1MASK8U        equ	466	;# 
  4158   0001D3                     C1MASK8T        equ	467	;# 
  4159   0001D4                     C1FLTOBJ9       equ	468	;# 
  4160   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4161   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4162   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4163   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4164   0001D8                     C1MASK9         equ	472	;# 
  4165   0001D8                     C1MASK9L        equ	472	;# 
  4166   0001D9                     C1MASK9H        equ	473	;# 
  4167   0001DA                     C1MASK9U        equ	474	;# 
  4168   0001DB                     C1MASK9T        equ	475	;# 
  4169   0001DC                     C1FLTOBJ10      equ	476	;# 
  4170   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4171   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4172   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4173   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4174   0001E0                     C1MASK10        equ	480	;# 
  4175   0001E0                     C1MASK10L       equ	480	;# 
  4176   0001E1                     C1MASK10H       equ	481	;# 
  4177   0001E2                     C1MASK10U       equ	482	;# 
  4178   0001E3                     C1MASK10T       equ	483	;# 
  4179   0001E4                     C1FLTOBJ11      equ	484	;# 
  4180   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4181   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4182   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4183   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4184   0001E8                     C1MASK11        equ	488	;# 
  4185   0001E8                     C1MASK11L       equ	488	;# 
  4186   0001E9                     C1MASK11H       equ	489	;# 
  4187   0001EA                     C1MASK11U       equ	490	;# 
  4188   0001EB                     C1MASK11T       equ	491	;# 
  4189   000200                     PPSLOCK         equ	512	;# 
  4190   000201                     RA0PPS          equ	513	;# 
  4191   000202                     RA1PPS          equ	514	;# 
  4192   000203                     RA2PPS          equ	515	;# 
  4193   000204                     RA3PPS          equ	516	;# 
  4194   000205                     RA4PPS          equ	517	;# 
  4195   000206                     RA5PPS          equ	518	;# 
  4196   000207                     RA6PPS          equ	519	;# 
  4197   000208                     RA7PPS          equ	520	;# 
  4198   000209                     RB0PPS          equ	521	;# 
  4199   00020A                     RB1PPS          equ	522	;# 
  4200   00020B                     RB2PPS          equ	523	;# 
  4201   00020C                     RB3PPS          equ	524	;# 
  4202   00020D                     RB4PPS          equ	525	;# 
  4203   00020E                     RB5PPS          equ	526	;# 
  4204   00020F                     RB6PPS          equ	527	;# 
  4205   000210                     RB7PPS          equ	528	;# 
  4206   000211                     RC0PPS          equ	529	;# 
  4207   000212                     RC1PPS          equ	530	;# 
  4208   000213                     RC2PPS          equ	531	;# 
  4209   000214                     RC3PPS          equ	532	;# 
  4210   000215                     RC4PPS          equ	533	;# 
  4211   000216                     RC5PPS          equ	534	;# 
  4212   000217                     RC6PPS          equ	535	;# 
  4213   000218                     RC7PPS          equ	536	;# 
  4214   00023D                     CANRXPPS        equ	573	;# 
  4215   00023E                     INT0PPS         equ	574	;# 
  4216   00023F                     INT1PPS         equ	575	;# 
  4217   000240                     INT2PPS         equ	576	;# 
  4218   000241                     T0CKIPPS        equ	577	;# 
  4219   000242                     T1CKIPPS        equ	578	;# 
  4220   000243                     T1GPPS          equ	579	;# 
  4221   000244                     T3CKIPPS        equ	580	;# 
  4222   000245                     T3GPPS          equ	581	;# 
  4223   000246                     T5CKIPPS        equ	582	;# 
  4224   000247                     T5GPPS          equ	583	;# 
  4225   000248                     T2INPPS         equ	584	;# 
  4226   000249                     T4INPPS         equ	585	;# 
  4227   00024A                     T6INPPS         equ	586	;# 
  4228   00024B                     TUIN0PPS        equ	587	;# 
  4229   00024C                     TUIN1PPS        equ	588	;# 
  4230   00024F                     CCP1PPS         equ	591	;# 
  4231   000250                     CCP2PPS         equ	592	;# 
  4232   000251                     CCP3PPS         equ	593	;# 
  4233   000253                     PWM1ERSPPS      equ	595	;# 
  4234   000254                     PWM2ERSPPS      equ	596	;# 
  4235   000255                     PWM3ERSPPS      equ	597	;# 
  4236   000256                     PWM4ERSPPS      equ	598	;# 
  4237   000257                     PWMIN0PPS       equ	599	;# 
  4238   000258                     PWMIN1PPS       equ	600	;# 
  4239   000259                     SMT1WINPPS      equ	601	;# 
  4240   00025A                     SMT1SIGPPS      equ	602	;# 
  4241   00025B                     CWG1PPS         equ	603	;# 
  4242   00025B                     CWG1INPPS       equ	603	;# 
  4243   00025C                     CWG2PPS         equ	604	;# 
  4244   00025C                     CWG2INPPS       equ	604	;# 
  4245   00025D                     CWG3PPS         equ	605	;# 
  4246   00025D                     CWG3INPPS       equ	605	;# 
  4247   00025E                     MD1CARLPPS      equ	606	;# 
  4248   00025E                     MDCARLPPS       equ	606	;# 
  4249   00025F                     MD1CARHPPS      equ	607	;# 
  4250   00025F                     MDCARHPPS       equ	607	;# 
  4251   000260                     MD1SRCPPS       equ	608	;# 
  4252   000260                     MDSRCPPS        equ	608	;# 
  4253   000261                     CLCIN0PPS       equ	609	;# 
  4254   000262                     CLCIN1PPS       equ	610	;# 
  4255   000263                     CLCIN2PPS       equ	611	;# 
  4256   000264                     CLCIN3PPS       equ	612	;# 
  4257   000265                     CLCIN4PPS       equ	613	;# 
  4258   000266                     CLCIN5PPS       equ	614	;# 
  4259   000267                     CLCIN6PPS       equ	615	;# 
  4260   000268                     CLCIN7PPS       equ	616	;# 
  4261   000269                     ADACTPPS        equ	617	;# 
  4262   00026A                     SPI1SCKPPS      equ	618	;# 
  4263   00026B                     SPI1SDIPPS      equ	619	;# 
  4264   00026C                     SPI1SSPPS       equ	620	;# 
  4265   00026D                     SPI2SCKPPS      equ	621	;# 
  4266   00026E                     SPI2SDIPPS      equ	622	;# 
  4267   00026F                     SPI2SSPPS       equ	623	;# 
  4268   000270                     I2C1SDAPPS      equ	624	;# 
  4269   000271                     I2C1SCLPPS      equ	625	;# 
  4270   000272                     U1RXPPS         equ	626	;# 
  4271   000273                     U1CTSPPS        equ	627	;# 
  4272   000274                     U2RXPPS         equ	628	;# 
  4273   000275                     U2CTSPPS        equ	629	;# 
  4274   000276                     U3RXPPS         equ	630	;# 
  4275   000277                     U3CTSPPS        equ	631	;# 
  4276   000278                     U4RXPPS         equ	632	;# 
  4277   000279                     U4CTSPPS        equ	633	;# 
  4278   00027A                     U5RXPPS         equ	634	;# 
  4279   00027B                     U5CTSPPS        equ	635	;# 
  4280   000286                     RC4I2C          equ	646	;# 
  4281   000287                     RC3I2C          equ	647	;# 
  4282   000288                     RB2I2C          equ	648	;# 
  4283   000289                     RB1I2C          equ	649	;# 
  4284   00028A                     I2C1RXB         equ	650	;# 
  4285   00028B                     I2C1TXB         equ	651	;# 
  4286   00028C                     I2C1CNTL        equ	652	;# 
  4287   00028D                     I2C1CNTH        equ	653	;# 
  4288   00028E                     I2C1ADB0        equ	654	;# 
  4289   00028F                     I2C1ADB1        equ	655	;# 
  4290   000290                     I2C1ADR0        equ	656	;# 
  4291   000291                     I2C1ADR1        equ	657	;# 
  4292   000292                     I2C1ADR2        equ	658	;# 
  4293   000293                     I2C1ADR3        equ	659	;# 
  4294   000294                     I2C1CON0        equ	660	;# 
  4295   000295                     I2C1CON1        equ	661	;# 
  4296   000296                     I2C1CON2        equ	662	;# 
  4297   000297                     I2C1ERR         equ	663	;# 
  4298   000298                     I2C1STAT0       equ	664	;# 
  4299   000299                     I2C1STAT1       equ	665	;# 
  4300   00029A                     I2C1PIR         equ	666	;# 
  4301   00029B                     I2C1PIE         equ	667	;# 
  4302   00029C                     I2C1BTO         equ	668	;# 
  4303   00029D                     I2C1BAUD        equ	669	;# 
  4304   00029E                     I2C1CLK         equ	670	;# 
  4305   00029F                     I2C1BTOC        equ	671	;# 
  4306   0002A1                     U1RXB           equ	673	;# 
  4307   0002A1                     U1RXBL          equ	673	;# 
  4308   0002A2                     U1RXCHK         equ	674	;# 
  4309   0002A3                     U1TXB           equ	675	;# 
  4310   0002A3                     U1TXBL          equ	675	;# 
  4311   0002A4                     U1TXCHK         equ	676	;# 
  4312   0002A5                     U1P1            equ	677	;# 
  4313   0002A5                     U1P1L           equ	677	;# 
  4314   0002A6                     U1P1H           equ	678	;# 
  4315   0002A7                     U1P2            equ	679	;# 
  4316   0002A7                     U1P2L           equ	679	;# 
  4317   0002A8                     U1P2H           equ	680	;# 
  4318   0002A9                     U1P3            equ	681	;# 
  4319   0002A9                     U1P3L           equ	681	;# 
  4320   0002AA                     U1P3H           equ	682	;# 
  4321   0002AB                     U1CON0          equ	683	;# 
  4322   0002AC                     U1CON1          equ	684	;# 
  4323   0002AD                     U1CON2          equ	685	;# 
  4324   0002AE                     U1BRG           equ	686	;# 
  4325   0002AE                     U1BRGL          equ	686	;# 
  4326   0002AF                     U1BRGH          equ	687	;# 
  4327   0002B0                     U1FIFO          equ	688	;# 
  4328   0002B1                     U1UIR           equ	689	;# 
  4329   0002B2                     U1ERRIR         equ	690	;# 
  4330   0002B3                     U1ERRIE         equ	691	;# 
  4331   0002B4                     U2RXB           equ	692	;# 
  4332   0002B4                     U2RXBL          equ	692	;# 
  4333   0002B5                     U2RXCHK         equ	693	;# 
  4334   0002B6                     U2TXB           equ	694	;# 
  4335   0002B6                     U2TXBL          equ	694	;# 
  4336   0002B7                     U2TXCHK         equ	695	;# 
  4337   0002B8                     U2P1            equ	696	;# 
  4338   0002B8                     U2P1L           equ	696	;# 
  4339   0002B9                     U2P1H           equ	697	;# 
  4340   0002BA                     U2P2            equ	698	;# 
  4341   0002BA                     U2P2L           equ	698	;# 
  4342   0002BB                     U2P2H           equ	699	;# 
  4343   0002BC                     U2P3            equ	700	;# 
  4344   0002BC                     U2P3L           equ	700	;# 
  4345   0002BD                     U2P3H           equ	701	;# 
  4346   0002BE                     U2CON0          equ	702	;# 
  4347   0002BF                     U2CON1          equ	703	;# 
  4348   0002C0                     U2CON2          equ	704	;# 
  4349   0002C1                     U2BRG           equ	705	;# 
  4350   0002C1                     U2BRGL          equ	705	;# 
  4351   0002C2                     U2BRGH          equ	706	;# 
  4352   0002C3                     U2FIFO          equ	707	;# 
  4353   0002C4                     U2UIR           equ	708	;# 
  4354   0002C5                     U2ERRIR         equ	709	;# 
  4355   0002C6                     U2ERRIE         equ	710	;# 
  4356   0002C7                     U3RXB           equ	711	;# 
  4357   0002C7                     U3RXBL          equ	711	;# 
  4358   0002C9                     U3TXB           equ	713	;# 
  4359   0002C9                     U3TXBL          equ	713	;# 
  4360   0002CB                     U3P1            equ	715	;# 
  4361   0002CB                     U3P1L           equ	715	;# 
  4362   0002CD                     U3P2            equ	717	;# 
  4363   0002CD                     U3P2L           equ	717	;# 
  4364   0002CF                     U3P3            equ	719	;# 
  4365   0002CF                     U3P3L           equ	719	;# 
  4366   0002D1                     U3CON0          equ	721	;# 
  4367   0002D2                     U3CON1          equ	722	;# 
  4368   0002D3                     U3CON2          equ	723	;# 
  4369   0002D4                     U3BRG           equ	724	;# 
  4370   0002D4                     U3BRGL          equ	724	;# 
  4371   0002D5                     U3BRGH          equ	725	;# 
  4372   0002D6                     U3FIFO          equ	726	;# 
  4373   0002D7                     U3UIR           equ	727	;# 
  4374   0002D8                     U3ERRIR         equ	728	;# 
  4375   0002D9                     U3ERRIE         equ	729	;# 
  4376   0002DA                     U4RXB           equ	730	;# 
  4377   0002DA                     U4RXBL          equ	730	;# 
  4378   0002DC                     U4TXB           equ	732	;# 
  4379   0002DC                     U4TXBL          equ	732	;# 
  4380   0002DE                     U4P1            equ	734	;# 
  4381   0002DE                     U4P1L           equ	734	;# 
  4382   0002E0                     U4P2            equ	736	;# 
  4383   0002E0                     U4P2L           equ	736	;# 
  4384   0002E2                     U4P3            equ	738	;# 
  4385   0002E2                     U4P3L           equ	738	;# 
  4386   0002E4                     U4CON0          equ	740	;# 
  4387   0002E5                     U4CON1          equ	741	;# 
  4388   0002E6                     U4CON2          equ	742	;# 
  4389   0002E7                     U4BRG           equ	743	;# 
  4390   0002E7                     U4BRGL          equ	743	;# 
  4391   0002E8                     U4BRGH          equ	744	;# 
  4392   0002E9                     U4FIFO          equ	745	;# 
  4393   0002EA                     U4UIR           equ	746	;# 
  4394   0002EB                     U4ERRIR         equ	747	;# 
  4395   0002EC                     U4ERRIE         equ	748	;# 
  4396   0002ED                     U5RXB           equ	749	;# 
  4397   0002ED                     U5RXBL          equ	749	;# 
  4398   0002EF                     U5TXB           equ	751	;# 
  4399   0002EF                     U5TXBL          equ	751	;# 
  4400   0002F1                     U5P1            equ	753	;# 
  4401   0002F1                     U5P1L           equ	753	;# 
  4402   0002F3                     U5P2            equ	755	;# 
  4403   0002F3                     U5P2L           equ	755	;# 
  4404   0002F5                     U5P3            equ	757	;# 
  4405   0002F5                     U5P3L           equ	757	;# 
  4406   0002F7                     U5CON0          equ	759	;# 
  4407   0002F8                     U5CON1          equ	760	;# 
  4408   0002F9                     U5CON2          equ	761	;# 
  4409   0002FA                     U5BRG           equ	762	;# 
  4410   0002FA                     U5BRGL          equ	762	;# 
  4411   0002FB                     U5BRGH          equ	763	;# 
  4412   0002FC                     U5FIFO          equ	764	;# 
  4413   0002FD                     U5UIR           equ	765	;# 
  4414   0002FE                     U5ERRIR         equ	766	;# 
  4415   0002FF                     U5ERRIE         equ	767	;# 
  4416   000300                     SMT1TMR         equ	768	;# 
  4417   000300                     SMT1TMRL        equ	768	;# 
  4418   000301                     SMT1TMRH        equ	769	;# 
  4419   000302                     SMT1TMRU        equ	770	;# 
  4420   000303                     SMT1CPR         equ	771	;# 
  4421   000303                     SMT1CPRL        equ	771	;# 
  4422   000304                     SMT1CPRH        equ	772	;# 
  4423   000305                     SMT1CPRU        equ	773	;# 
  4424   000306                     SMT1CPW         equ	774	;# 
  4425   000306                     SMT1CPWL        equ	774	;# 
  4426   000307                     SMT1CPWH        equ	775	;# 
  4427   000308                     SMT1CPWU        equ	776	;# 
  4428   000309                     SMT1PR          equ	777	;# 
  4429   000309                     SMT1PRL         equ	777	;# 
  4430   00030A                     SMT1PRH         equ	778	;# 
  4431   00030B                     SMT1PRU         equ	779	;# 
  4432   00030C                     SMT1CON0        equ	780	;# 
  4433   00030D                     SMT1CON1        equ	781	;# 
  4434   00030E                     SMT1STAT        equ	782	;# 
  4435   00030F                     SMT1CLK         equ	783	;# 
  4436   000310                     SMT1SIG         equ	784	;# 
  4437   000311                     SMT1WIN         equ	785	;# 
  4438   000318                     TMR0L           equ	792	;# 
  4439   000318                     TMR0            equ	792	;# 
  4440   000319                     TMR0H           equ	793	;# 
  4441   000319                     PR0             equ	793	;# 
  4442   00031A                     T0CON0          equ	794	;# 
  4443   00031B                     T0CON1          equ	795	;# 
  4444   00031C                     TMR1            equ	796	;# 
  4445   00031C                     TMR1L           equ	796	;# 
  4446   00031D                     TMR1H           equ	797	;# 
  4447   00031E                     T1CON           equ	798	;# 
  4448   00031E                     TMR1CON         equ	798	;# 
  4449   00031F                     T1GCON          equ	799	;# 
  4450   00031F                     TMR1GCON        equ	799	;# 
  4451   000320                     T1GATE          equ	800	;# 
  4452   000320                     TMR1GATE        equ	800	;# 
  4453   000321                     T1CLK           equ	801	;# 
  4454   000321                     TMR1CLK         equ	801	;# 
  4455   000321                     PR1             equ	801	;# 
  4456   000322                     T2TMR           equ	802	;# 
  4457   000322                     TMR2            equ	802	;# 
  4458   000323                     T2PR            equ	803	;# 
  4459   000323                     PR2             equ	803	;# 
  4460   000324                     T2CON           equ	804	;# 
  4461   000325                     T2HLT           equ	805	;# 
  4462   000326                     T2CLKCON        equ	806	;# 
  4463   000326                     T2CLK           equ	806	;# 
  4464   000327                     T2RST           equ	807	;# 
  4465   000328                     TMR3            equ	808	;# 
  4466   000328                     TMR3L           equ	808	;# 
  4467   000329                     TMR3H           equ	809	;# 
  4468   00032A                     T3CON           equ	810	;# 
  4469   00032A                     TMR3CON         equ	810	;# 
  4470   00032B                     T3GCON          equ	811	;# 
  4471   00032B                     TMR3GCON        equ	811	;# 
  4472   00032C                     T3GATE          equ	812	;# 
  4473   00032C                     TMR3GATE        equ	812	;# 
  4474   00032D                     T3CLK           equ	813	;# 
  4475   00032D                     TMR3CLK         equ	813	;# 
  4476   00032D                     PR3             equ	813	;# 
  4477   00032E                     T4TMR           equ	814	;# 
  4478   00032E                     TMR4            equ	814	;# 
  4479   00032F                     T4PR            equ	815	;# 
  4480   00032F                     PR4             equ	815	;# 
  4481   000330                     T4CON           equ	816	;# 
  4482   000331                     T4HLT           equ	817	;# 
  4483   000332                     T4CLKCON        equ	818	;# 
  4484   000332                     T4CLK           equ	818	;# 
  4485   000333                     T4RST           equ	819	;# 
  4486   000334                     TMR5            equ	820	;# 
  4487   000334                     TMR5L           equ	820	;# 
  4488   000335                     TMR5H           equ	821	;# 
  4489   000336                     T5CON           equ	822	;# 
  4490   000336                     TMR5CON         equ	822	;# 
  4491   000337                     T5GCON          equ	823	;# 
  4492   000337                     TMR5GCON        equ	823	;# 
  4493   000338                     T5GATE          equ	824	;# 
  4494   000338                     TMR5GATE        equ	824	;# 
  4495   000339                     T5CLK           equ	825	;# 
  4496   000339                     TMR5CLK         equ	825	;# 
  4497   000339                     PR5             equ	825	;# 
  4498   00033A                     T6TMR           equ	826	;# 
  4499   00033A                     TMR6            equ	826	;# 
  4500   00033B                     T6PR            equ	827	;# 
  4501   00033B                     PR6             equ	827	;# 
  4502   00033C                     T6CON           equ	828	;# 
  4503   00033D                     T6HLT           equ	829	;# 
  4504   00033E                     T6CLKCON        equ	830	;# 
  4505   00033E                     T6CLK           equ	830	;# 
  4506   00033F                     T6RST           equ	831	;# 
  4507   000340                     CCPR1           equ	832	;# 
  4508   000340                     CCPR1L          equ	832	;# 
  4509   000341                     CCPR1H          equ	833	;# 
  4510   000342                     CCP1CON         equ	834	;# 
  4511   000343                     CCP1CAP         equ	835	;# 
  4512   000344                     CCPR2           equ	836	;# 
  4513   000344                     CCPR2L          equ	836	;# 
  4514   000345                     CCPR2H          equ	837	;# 
  4515   000346                     CCP2CON         equ	838	;# 
  4516   000347                     CCP2CAP         equ	839	;# 
  4517   000348                     CCPR3           equ	840	;# 
  4518   000348                     CCPR3L          equ	840	;# 
  4519   000349                     CCPR3H          equ	841	;# 
  4520   00034A                     CCP3CON         equ	842	;# 
  4521   00034B                     CCP3CAP         equ	843	;# 
  4522   00034C                     CCPTMRS0        equ	844	;# 
  4523   00034F                     CRCDATA         equ	847	;# 
  4524   00034F                     CRCDATAL        equ	847	;# 
  4525   000350                     CRCDATAH        equ	848	;# 
  4526   000351                     CRCDATAU        equ	849	;# 
  4527   000352                     CRCDATAT        equ	850	;# 
  4528   000353                     CRCOUT          equ	851	;# 
  4529   000353                     CRCSHFT         equ	851	;# 
  4530   000353                     CRCXOR          equ	851	;# 
  4531   000353                     CRCOUTL         equ	851	;# 
  4532   000353                     CRCSHFTL        equ	851	;# 
  4533   000353                     CRCSHIFTL       equ	851	;# 
  4534   000353                     CRCXORL         equ	851	;# 
  4535   000354                     CRCOUTH         equ	852	;# 
  4536   000354                     CRCSHFTH        equ	852	;# 
  4537   000354                     CRCSHIFTH       equ	852	;# 
  4538   000354                     CRCXORH         equ	852	;# 
  4539   000355                     CRCOUTU         equ	853	;# 
  4540   000355                     CRCSHFTU        equ	853	;# 
  4541   000355                     CRCSHIFTU       equ	853	;# 
  4542   000355                     CRCXORU         equ	853	;# 
  4543   000356                     CRCOUTT         equ	854	;# 
  4544   000356                     CRCSHFTT        equ	854	;# 
  4545   000356                     CRCSHIFTT       equ	854	;# 
  4546   000356                     CRCXORT         equ	854	;# 
  4547   000357                     CRCCON0         equ	855	;# 
  4548   000358                     CRCCON1         equ	856	;# 
  4549   000359                     CRCCON2         equ	857	;# 
  4550   00035A                     SCANLADR        equ	858	;# 
  4551   00035A                     SCANLADRL       equ	858	;# 
  4552   00035B                     SCANLADRH       equ	859	;# 
  4553   00035C                     SCANLADRU       equ	860	;# 
  4554   00035D                     SCANHADR        equ	861	;# 
  4555   00035D                     SCANHADRL       equ	861	;# 
  4556   00035E                     SCANHADRH       equ	862	;# 
  4557   00035F                     SCANHADRU       equ	863	;# 
  4558   000360                     SCANCON0        equ	864	;# 
  4559   000361                     SCANTRIG        equ	865	;# 
  4560   000362                     IPR0            equ	866	;# 
  4561   000363                     IPR1            equ	867	;# 
  4562   000364                     IPR2            equ	868	;# 
  4563   000365                     IPR3            equ	869	;# 
  4564   000366                     IPR4            equ	870	;# 
  4565   000367                     IPR5            equ	871	;# 
  4566   000368                     IPR6            equ	872	;# 
  4567   000369                     IPR7            equ	873	;# 
  4568   00036A                     IPR8            equ	874	;# 
  4569   00036B                     IPR9            equ	875	;# 
  4570   00036C                     IPR10           equ	876	;# 
  4571   00036D                     IPR11           equ	877	;# 
  4572   00036E                     IPR12           equ	878	;# 
  4573   00036F                     IPR13           equ	879	;# 
  4574   000370                     IPR14           equ	880	;# 
  4575   000371                     IPR15           equ	881	;# 
  4576   000373                     STATUS_CSHAD    equ	883	;# 
  4577   000374                     WREG_CSHAD      equ	884	;# 
  4578   000375                     BSR_CSHAD       equ	885	;# 
  4579   000376                     SHADCON         equ	886	;# 
  4580   000377                     STATUS_SHAD     equ	887	;# 
  4581   000378                     WREG_SHAD       equ	888	;# 
  4582   000379                     BSR_SHAD        equ	889	;# 
  4583   00037A                     PCLATH_SHAD     equ	890	;# 
  4584   00037B                     PCLATU_SHAD     equ	891	;# 
  4585   00037C                     FSR0SH          equ	892	;# 
  4586   00037C                     FSR0L_SHAD      equ	892	;# 
  4587   00037D                     FSR0H_SHAD      equ	893	;# 
  4588   00037E                     FSR1SH          equ	894	;# 
  4589   00037E                     FSR1L_SHAD      equ	894	;# 
  4590   00037F                     FSR1H_SHAD      equ	895	;# 
  4591   000380                     FSR2SH          equ	896	;# 
  4592   000380                     FSR2L_SHAD      equ	896	;# 
  4593   000381                     FSR2H_SHAD      equ	897	;# 
  4594   000382                     PRODSH          equ	898	;# 
  4595   000382                     PRODL_SHAD      equ	898	;# 
  4596   000383                     PRODH_SHAD      equ	899	;# 
  4597   000387                     TU16ACON0       equ	903	;# 
  4598   000388                     TU16ACON1       equ	904	;# 
  4599   000389                     TU16AHLT        equ	905	;# 
  4600   00038A                     TU16APS         equ	906	;# 
  4601   00038B                     TU16ATMR        equ	907	;# 
  4602   00038B                     TU16ACR         equ	907	;# 
  4603   00038B                     TU16ATMRL       equ	907	;# 
  4604   00038B                     TU16ACRL        equ	907	;# 
  4605   00038C                     TU16ATMRH       equ	908	;# 
  4606   00038C                     TU16ACRH        equ	908	;# 
  4607   00038D                     TU16APR         equ	909	;# 
  4608   00038D                     TU16APRL        equ	909	;# 
  4609   00038E                     TU16APRH        equ	910	;# 
  4610   00038F                     TU16ACLK        equ	911	;# 
  4611   000390                     TU16AERS        equ	912	;# 
  4612   000393                     TU16BCON0       equ	915	;# 
  4613   000394                     TU16BCON1       equ	916	;# 
  4614   000395                     TU16BHLT        equ	917	;# 
  4615   000396                     TU16BPS         equ	918	;# 
  4616   000397                     TU16BTMR        equ	919	;# 
  4617   000397                     TU16BCR         equ	919	;# 
  4618   000397                     TU16BTMRL       equ	919	;# 
  4619   000397                     TU16BCRL        equ	919	;# 
  4620   000398                     TU16BTMRH       equ	920	;# 
  4621   000398                     TU16BCRH        equ	920	;# 
  4622   000399                     TU16BPR         equ	921	;# 
  4623   000399                     TU16BPRL        equ	921	;# 
  4624   00039A                     TU16BPRH        equ	922	;# 
  4625   00039B                     TU16BCLK        equ	923	;# 
  4626   00039C                     TU16BERS        equ	924	;# 
  4627   0003BB                     TUCHAIN         equ	955	;# 
  4628   0003BC                     CWG1CLK         equ	956	;# 
  4629   0003BC                     CWG1CLKCON      equ	956	;# 
  4630   0003BD                     CWG1ISM         equ	957	;# 
  4631   0003BE                     CWG1DBR         equ	958	;# 
  4632   0003BF                     CWG1DBF         equ	959	;# 
  4633   0003C0                     CWG1CON0        equ	960	;# 
  4634   0003C1                     CWG1CON1        equ	961	;# 
  4635   0003C2                     CWG1AS0         equ	962	;# 
  4636   0003C3                     CWG1AS1         equ	963	;# 
  4637   0003C4                     CWG1STR         equ	964	;# 
  4638   0003C5                     CWG2CLK         equ	965	;# 
  4639   0003C5                     CWG2CLKCON      equ	965	;# 
  4640   0003C6                     CWG2ISM         equ	966	;# 
  4641   0003C7                     CWG2DBR         equ	967	;# 
  4642   0003C8                     CWG2DBF         equ	968	;# 
  4643   0003C9                     CWG2CON0        equ	969	;# 
  4644   0003CA                     CWG2CON1        equ	970	;# 
  4645   0003CB                     CWG2AS0         equ	971	;# 
  4646   0003CC                     CWG2AS1         equ	972	;# 
  4647   0003CD                     CWG2STR         equ	973	;# 
  4648   0003CE                     CWG3CLK         equ	974	;# 
  4649   0003CE                     CWG3CLKCON      equ	974	;# 
  4650   0003CF                     CWG3ISM         equ	975	;# 
  4651   0003D0                     CWG3DBR         equ	976	;# 
  4652   0003D1                     CWG3DBF         equ	977	;# 
  4653   0003D2                     CWG3CON0        equ	978	;# 
  4654   0003D3                     CWG3CON1        equ	979	;# 
  4655   0003D4                     CWG3AS0         equ	980	;# 
  4656   0003D5                     CWG3AS1         equ	981	;# 
  4657   0003D6                     CWG3STR         equ	982	;# 
  4658   0003D7                     FVRCON          equ	983	;# 
  4659   0003D8                     ADCPCON         equ	984	;# 
  4660   0003D8                     ADCP            equ	984	;# 
  4661   0003D9                     ADLTH           equ	985	;# 
  4662   0003D9                     ADLTHL          equ	985	;# 
  4663   0003DA                     ADLTHH          equ	986	;# 
  4664   0003DB                     ADUTH           equ	987	;# 
  4665   0003DB                     ADUTHL          equ	987	;# 
  4666   0003DC                     ADUTHH          equ	988	;# 
  4667   0003DD                     ADERR           equ	989	;# 
  4668   0003DD                     ADERRL          equ	989	;# 
  4669   0003DE                     ADERRH          equ	990	;# 
  4670   0003DF                     ADSTPT          equ	991	;# 
  4671   0003DF                     ADSTPTL         equ	991	;# 
  4672   0003E0                     ADSTPTH         equ	992	;# 
  4673   0003E1                     ADFLTR          equ	993	;# 
  4674   0003E1                     ADFLTRL         equ	993	;# 
  4675   0003E2                     ADFLTRH         equ	994	;# 
  4676   0003E3                     ADACC           equ	995	;# 
  4677   0003E3                     ADACCL          equ	995	;# 
  4678   0003E4                     ADACCH          equ	996	;# 
  4679   0003E5                     ADACCU          equ	997	;# 
  4680   0003E6                     ADCNT           equ	998	;# 
  4681   0003E7                     ADRPT           equ	999	;# 
  4682   0003E8                     ADPREV          equ	1000	;# 
  4683   0003E8                     ADPREVL         equ	1000	;# 
  4684   0003E9                     ADPREVH         equ	1001	;# 
  4685   0003EA                     ADRES           equ	1002	;# 
  4686   0003EA                     ADRESL          equ	1002	;# 
  4687   0003EB                     ADRESH          equ	1003	;# 
  4688   0003EC                     ADPCH           equ	1004	;# 
  4689   0003EE                     ADACQ           equ	1006	;# 
  4690   0003EE                     ADACQL          equ	1006	;# 
  4691   0003EF                     ADACQH          equ	1007	;# 
  4692   0003F0                     ADCAP           equ	1008	;# 
  4693   0003F1                     ADPRE           equ	1009	;# 
  4694   0003F1                     ADPREL          equ	1009	;# 
  4695   0003F2                     ADPREH          equ	1010	;# 
  4696   0003F3                     ADCON0          equ	1011	;# 
  4697   0003F4                     ADCON1          equ	1012	;# 
  4698   0003F5                     ADCON2          equ	1013	;# 
  4699   0003F6                     ADCON3          equ	1014	;# 
  4700   0003F7                     ADSTAT          equ	1015	;# 
  4701   0003F8                     ADREF           equ	1016	;# 
  4702   0003F9                     ADACT           equ	1017	;# 
  4703   0003FA                     ADCLK           equ	1018	;# 
  4704   0003FB                     ADCTX           equ	1019	;# 
  4705   0003FC                     ADCSEL1         equ	1020	;# 
  4706   0003FD                     ADCSEL2         equ	1021	;# 
  4707   0003FE                     ADCSEL3         equ	1022	;# 
  4708   0003FF                     ADCSEL4         equ	1023	;# 
  4709   000400                     ANSELA          equ	1024	;# 
  4710   000401                     WPUA            equ	1025	;# 
  4711   000402                     ODCONA          equ	1026	;# 
  4712   000403                     SLRCONA         equ	1027	;# 
  4713   000404                     INLVLA          equ	1028	;# 
  4714   000405                     IOCAP           equ	1029	;# 
  4715   000406                     IOCAN           equ	1030	;# 
  4716   000407                     IOCAF           equ	1031	;# 
  4717   000408                     ANSELB          equ	1032	;# 
  4718   000409                     WPUB            equ	1033	;# 
  4719   00040A                     ODCONB          equ	1034	;# 
  4720   00040B                     SLRCONB         equ	1035	;# 
  4721   00040C                     INLVLB          equ	1036	;# 
  4722   00040D                     IOCBP           equ	1037	;# 
  4723   00040E                     IOCBN           equ	1038	;# 
  4724   00040F                     IOCBF           equ	1039	;# 
  4725   000410                     ANSELC          equ	1040	;# 
  4726   000411                     WPUC            equ	1041	;# 
  4727   000412                     ODCONC          equ	1042	;# 
  4728   000413                     SLRCONC         equ	1043	;# 
  4729   000414                     INLVLC          equ	1044	;# 
  4730   000415                     IOCCP           equ	1045	;# 
  4731   000416                     IOCCN           equ	1046	;# 
  4732   000417                     IOCCF           equ	1047	;# 
  4733   000421                     WPUE            equ	1057	;# 
  4734   000424                     INLVLE          equ	1060	;# 
  4735   000425                     IOCEP           equ	1061	;# 
  4736   000426                     IOCEN           equ	1062	;# 
  4737   000427                     IOCEF           equ	1063	;# 
  4738   000440                     NCO1ACC         equ	1088	;# 
  4739   000440                     NCO1ACCL        equ	1088	;# 
  4740   000441                     NCO1ACCH        equ	1089	;# 
  4741   000442                     NCO1ACCU        equ	1090	;# 
  4742   000443                     NCO1INC         equ	1091	;# 
  4743   000443                     NCO1INCL        equ	1091	;# 
  4744   000444                     NCO1INCH        equ	1092	;# 
  4745   000445                     NCO1INCU        equ	1093	;# 
  4746   000446                     NCO1CON         equ	1094	;# 
  4747   000447                     NCO1CLK         equ	1095	;# 
  4748   000448                     NCO2ACC         equ	1096	;# 
  4749   000448                     NCO2ACCL        equ	1096	;# 
  4750   000449                     NCO2ACCH        equ	1097	;# 
  4751   00044A                     NCO2ACCU        equ	1098	;# 
  4752   00044B                     NCO2INC         equ	1099	;# 
  4753   00044B                     NCO2INCL        equ	1099	;# 
  4754   00044C                     NCO2INCH        equ	1100	;# 
  4755   00044D                     NCO2INCU        equ	1101	;# 
  4756   00044E                     NCO2CON         equ	1102	;# 
  4757   00044F                     NCO2CLK         equ	1103	;# 
  4758   000450                     NCO3ACC         equ	1104	;# 
  4759   000450                     NCO3ACCL        equ	1104	;# 
  4760   000451                     NCO3ACCH        equ	1105	;# 
  4761   000452                     NCO3ACCU        equ	1106	;# 
  4762   000453                     NCO3INC         equ	1107	;# 
  4763   000453                     NCO3INCL        equ	1107	;# 
  4764   000454                     NCO3INCH        equ	1108	;# 
  4765   000455                     NCO3INCU        equ	1109	;# 
  4766   000456                     NCO3CON         equ	1110	;# 
  4767   000457                     NCO3CLK         equ	1111	;# 
  4768   000458                     FSCMCON         equ	1112	;# 
  4769   000459                     IVTLOCK         equ	1113	;# 
  4770   00045A                     IVTAD           equ	1114	;# 
  4771   00045A                     IVTADL          equ	1114	;# 
  4772   00045B                     IVTADH          equ	1115	;# 
  4773   00045C                     IVTADU          equ	1116	;# 
  4774   00045D                     IVTBASE         equ	1117	;# 
  4775   00045D                     IVTBASEL        equ	1117	;# 
  4776   00045E                     IVTBASEH        equ	1118	;# 
  4777   00045F                     IVTBASEU        equ	1119	;# 
  4778   000460                     PWM1ERS         equ	1120	;# 
  4779   000461                     PWM1CLK         equ	1121	;# 
  4780   000462                     PWM1LDS         equ	1122	;# 
  4781   000463                     PWM1PR          equ	1123	;# 
  4782   000463                     PWM1PRL         equ	1123	;# 
  4783   000464                     PWM1PRH         equ	1124	;# 
  4784   000465                     PWM1CPRE        equ	1125	;# 
  4785   000466                     PWM1PIPOS       equ	1126	;# 
  4786   000467                     PWM1GIR         equ	1127	;# 
  4787   000468                     PWM1GIE         equ	1128	;# 
  4788   000469                     PWM1CON         equ	1129	;# 
  4789   00046A                     PWM1S1CFG       equ	1130	;# 
  4790   00046B                     PWM1S1P1        equ	1131	;# 
  4791   00046B                     PWM1S1P1L       equ	1131	;# 
  4792   00046C                     PWM1S1P1H       equ	1132	;# 
  4793   00046D                     PWM1S1P2        equ	1133	;# 
  4794   00046D                     PWM1S1P2L       equ	1133	;# 
  4795   00046E                     PWM1S1P2H       equ	1134	;# 
  4796   00046F                     PWM2ERS         equ	1135	;# 
  4797   000470                     PWM2CLK         equ	1136	;# 
  4798   000471                     PWM2LDS         equ	1137	;# 
  4799   000472                     PWM2PR          equ	1138	;# 
  4800   000472                     PWM2PRL         equ	1138	;# 
  4801   000473                     PWM2PRH         equ	1139	;# 
  4802   000474                     PWM2CPRE        equ	1140	;# 
  4803   000475                     PWM2PIPOS       equ	1141	;# 
  4804   000476                     PWM2GIR         equ	1142	;# 
  4805   000477                     PWM2GIE         equ	1143	;# 
  4806   000478                     PWM2CON         equ	1144	;# 
  4807   000479                     PWM2S1CFG       equ	1145	;# 
  4808   00047A                     PWM2S1P1        equ	1146	;# 
  4809   00047A                     PWM2S1P1L       equ	1146	;# 
  4810   00047B                     PWM2S1P1H       equ	1147	;# 
  4811   00047C                     PWM2S1P2        equ	1148	;# 
  4812   00047C                     PWM2S1P2L       equ	1148	;# 
  4813   00047D                     PWM2S1P2H       equ	1149	;# 
  4814   00047E                     PWM3ERS         equ	1150	;# 
  4815   00047F                     PWM3CLK         equ	1151	;# 
  4816   000480                     PWM3LDS         equ	1152	;# 
  4817   000481                     PWM3PR          equ	1153	;# 
  4818   000481                     PWM3PRL         equ	1153	;# 
  4819   000482                     PWM3PRH         equ	1154	;# 
  4820   000483                     PWM3CPRE        equ	1155	;# 
  4821   000484                     PWM3PIPOS       equ	1156	;# 
  4822   000485                     PWM3GIR         equ	1157	;# 
  4823   000486                     PWM3GIE         equ	1158	;# 
  4824   000487                     PWM3CON         equ	1159	;# 
  4825   000488                     PWM3S1CFG       equ	1160	;# 
  4826   000489                     PWM3S1P1        equ	1161	;# 
  4827   000489                     PWM3S1P1L       equ	1161	;# 
  4828   00048A                     PWM3S1P1H       equ	1162	;# 
  4829   00048B                     PWM3S1P2        equ	1163	;# 
  4830   00048B                     PWM3S1P2L       equ	1163	;# 
  4831   00048C                     PWM3S1P2H       equ	1164	;# 
  4832   00048D                     PWM4ERS         equ	1165	;# 
  4833   00048E                     PWM4CLK         equ	1166	;# 
  4834   00048F                     PWM4LDS         equ	1167	;# 
  4835   000490                     PWM4PR          equ	1168	;# 
  4836   000490                     PWM4PRL         equ	1168	;# 
  4837   000491                     PWM4PRH         equ	1169	;# 
  4838   000492                     PWM4CPRE        equ	1170	;# 
  4839   000493                     PWM4PIPOS       equ	1171	;# 
  4840   000494                     PWM4GIR         equ	1172	;# 
  4841   000495                     PWM4GIE         equ	1173	;# 
  4842   000496                     PWM4CON         equ	1174	;# 
  4843   000497                     PWM4S1CFG       equ	1175	;# 
  4844   000498                     PWM4S1P1        equ	1176	;# 
  4845   000498                     PWM4S1P1L       equ	1176	;# 
  4846   000499                     PWM4S1P1H       equ	1177	;# 
  4847   00049A                     PWM4S1P2        equ	1178	;# 
  4848   00049A                     PWM4S1P2L       equ	1178	;# 
  4849   00049B                     PWM4S1P2H       equ	1179	;# 
  4850   00049C                     PWMLOAD         equ	1180	;# 
  4851   00049D                     PWMEN           equ	1181	;# 
  4852   00049E                     PIE0            equ	1182	;# 
  4853   00049F                     PIE1            equ	1183	;# 
  4854   0004A0                     PIE2            equ	1184	;# 
  4855   0004A1                     PIE3            equ	1185	;# 
  4856   0004A2                     PIE4            equ	1186	;# 
  4857   0004A3                     PIE5            equ	1187	;# 
  4858   0004A4                     PIE6            equ	1188	;# 
  4859   0004A5                     PIE7            equ	1189	;# 
  4860   0004A6                     PIE8            equ	1190	;# 
  4861   0004A7                     PIE9            equ	1191	;# 
  4862   0004A8                     PIE10           equ	1192	;# 
  4863   0004A9                     PIE11           equ	1193	;# 
  4864   0004AA                     PIE12           equ	1194	;# 
  4865   0004AB                     PIE13           equ	1195	;# 
  4866   0004AC                     PIE14           equ	1196	;# 
  4867   0004AD                     PIE15           equ	1197	;# 
  4868   0004AE                     PIR0            equ	1198	;# 
  4869   0004AF                     PIR1            equ	1199	;# 
  4870   0004B0                     PIR2            equ	1200	;# 
  4871   0004B1                     PIR3            equ	1201	;# 
  4872   0004B2                     PIR4            equ	1202	;# 
  4873   0004B3                     PIR5            equ	1203	;# 
  4874   0004B4                     PIR6            equ	1204	;# 
  4875   0004B5                     PIR7            equ	1205	;# 
  4876   0004B6                     PIR8            equ	1206	;# 
  4877   0004B7                     PIR9            equ	1207	;# 
  4878   0004B8                     PIR10           equ	1208	;# 
  4879   0004B9                     PIR11           equ	1209	;# 
  4880   0004BA                     PIR12           equ	1210	;# 
  4881   0004BB                     PIR13           equ	1211	;# 
  4882   0004BC                     PIR14           equ	1212	;# 
  4883   0004BD                     PIR15           equ	1213	;# 
  4884   0004BE                     LATA            equ	1214	;# 
  4885   0004BF                     LATB            equ	1215	;# 
  4886   0004C0                     LATC            equ	1216	;# 
  4887   0004C6                     TRISA           equ	1222	;# 
  4888   0004C7                     TRISB           equ	1223	;# 
  4889   0004C8                     TRISC           equ	1224	;# 
  4890   0004CA                     TRISE           equ	1226	;# 
  4891   0004CE                     PORTA           equ	1230	;# 
  4892   0004CF                     PORTB           equ	1231	;# 
  4893   0004D0                     PORTC           equ	1232	;# 
  4894   0004D2                     PORTE           equ	1234	;# 
  4895   0004D6                     INTCON0         equ	1238	;# 
  4896   0004D7                     INTCON1         equ	1239	;# 
  4897   0004D8                     STATUS          equ	1240	;# 
  4898   0004D9                     FSR2            equ	1241	;# 
  4899   0004D9                     FSR2L           equ	1241	;# 
  4900   0004DA                     FSR2H           equ	1242	;# 
  4901   0004DB                     PLUSW2          equ	1243	;# 
  4902   0004DC                     PREINC2         equ	1244	;# 
  4903   0004DD                     POSTDEC2        equ	1245	;# 
  4904   0004DE                     POSTINC2        equ	1246	;# 
  4905   0004DF                     INDF2           equ	1247	;# 
  4906   0004E0                     BSR             equ	1248	;# 
  4907   0004E1                     FSR1            equ	1249	;# 
  4908   0004E1                     FSR1L           equ	1249	;# 
  4909   0004E2                     FSR1H           equ	1250	;# 
  4910   0004E3                     PLUSW1          equ	1251	;# 
  4911   0004E4                     PREINC1         equ	1252	;# 
  4912   0004E5                     POSTDEC1        equ	1253	;# 
  4913   0004E6                     POSTINC1        equ	1254	;# 
  4914   0004E7                     INDF1           equ	1255	;# 
  4915   0004E8                     WREG            equ	1256	;# 
  4916   0004E9                     FSR0            equ	1257	;# 
  4917   0004E9                     FSR0L           equ	1257	;# 
  4918   0004EA                     FSR0H           equ	1258	;# 
  4919   0004EB                     PLUSW0          equ	1259	;# 
  4920   0004EC                     PREINC0         equ	1260	;# 
  4921   0004ED                     POSTDEC0        equ	1261	;# 
  4922   0004EE                     POSTINC0        equ	1262	;# 
  4923   0004EF                     INDF0           equ	1263	;# 
  4924   0004F0                     PCON0           equ	1264	;# 
  4925   0004F1                     PCON1           equ	1265	;# 
  4926   0004F2                     CPUDOZE         equ	1266	;# 
  4927   0004F3                     PROD            equ	1267	;# 
  4928   0004F3                     PRODL           equ	1267	;# 
  4929   0004F4                     PRODH           equ	1268	;# 
  4930   0004F5                     TABLAT          equ	1269	;# 
  4931   0004F6                     TBLPTR          equ	1270	;# 
  4932   0004F6                     TBLPTRL         equ	1270	;# 
  4933   0004F7                     TBLPTRH         equ	1271	;# 
  4934   0004F8                     TBLPTRU         equ	1272	;# 
  4935   0004F9                     PCLAT           equ	1273	;# 
  4936   0004F9                     PCL             equ	1273	;# 
  4937   0004FA                     PCLATH          equ	1274	;# 
  4938   0004FB                     PCLATU          equ	1275	;# 
  4939   0004FC                     STKPTR          equ	1276	;# 
  4940   0004FD                     TOS             equ	1277	;# 
  4941   0004FD                     TOSL            equ	1277	;# 
  4942   0004FE                     TOSH            equ	1278	;# 
  4943   0004FF                     TOSU            equ	1279	;# 
  4944   000038                     BOOTREG         equ	56	;# 
  4945   000039                     CLKRCON         equ	57	;# 
  4946   00003A                     CLKRCLK         equ	58	;# 
  4947   000040                     NVMCON0         equ	64	;# 
  4948   000041                     NVMCON1         equ	65	;# 
  4949   000042                     NVMLOCK         equ	66	;# 
  4950   000043                     NVMADR          equ	67	;# 
  4951   000043                     NVMADRL         equ	67	;# 
  4952   000044                     NVMADRH         equ	68	;# 
  4953   000045                     NVMADRU         equ	69	;# 
  4954   000046                     NVMDAT          equ	70	;# 
  4955   000046                     NVMDATL         equ	70	;# 
  4956   000047                     NVMDATH         equ	71	;# 
  4957   000048                     VREGCON         equ	72	;# 
  4958   000049                     BORCON          equ	73	;# 
  4959   00004A                     HLVDCON0        equ	74	;# 
  4960   00004B                     HLVDCON1        equ	75	;# 
  4961   00004C                     ZCDCON          equ	76	;# 
  4962   000060                     PMD0            equ	96	;# 
  4963   000061                     PMD1            equ	97	;# 
  4964   000062                     PMD2            equ	98	;# 
  4965   000063                     PMD3            equ	99	;# 
  4966   000064                     PMD4            equ	100	;# 
  4967   000065                     PMD5            equ	101	;# 
  4968   000066                     PMD6            equ	102	;# 
  4969   000067                     PMD7            equ	103	;# 
  4970   000068                     PMD8            equ	104	;# 
  4971   00006A                     MD1CON0         equ	106	;# 
  4972   00006B                     MD1CON1         equ	107	;# 
  4973   00006C                     MD1SRC          equ	108	;# 
  4974   00006D                     MD1CARL         equ	109	;# 
  4975   00006E                     MD1CARH         equ	110	;# 
  4976   00006F                     CMOUT           equ	111	;# 
  4977   000070                     CM1CON0         equ	112	;# 
  4978   000071                     CM1CON1         equ	113	;# 
  4979   000072                     CM1NCH          equ	114	;# 
  4980   000073                     CM1PCH          equ	115	;# 
  4981   000074                     CM2CON0         equ	116	;# 
  4982   000075                     CM2CON1         equ	117	;# 
  4983   000076                     CM2NCH          equ	118	;# 
  4984   000077                     CM2PCH          equ	119	;# 
  4985   000078                     WDTCON0         equ	120	;# 
  4986   000079                     WDTCON1         equ	121	;# 
  4987   00007A                     WDTPSL          equ	122	;# 
  4988   00007B                     WDTPSH          equ	123	;# 
  4989   00007C                     WDTTMR          equ	124	;# 
  4990   00007D                     DAC1DAT         equ	125	;# 
  4991   00007D                     DAC1DATL        equ	125	;# 
  4992   00007F                     DAC1CON         equ	127	;# 
  4993   000080                     SPI1RXB         equ	128	;# 
  4994   000081                     SPI1TXB         equ	129	;# 
  4995   000082                     SPI1TCNT        equ	130	;# 
  4996   000082                     SPI1TCNTL       equ	130	;# 
  4997   000083                     SPI1TCNTH       equ	131	;# 
  4998   000084                     SPI1CON0        equ	132	;# 
  4999   000085                     SPI1CON1        equ	133	;# 
  5000   000086                     SPI1CON2        equ	134	;# 
  5001   000087                     SPI1STATUS      equ	135	;# 
  5002   000088                     SPI1TWIDTH      equ	136	;# 
  5003   000089                     SPI1BAUD        equ	137	;# 
  5004   00008A                     SPI1INTF        equ	138	;# 
  5005   00008B                     SPI1INTE        equ	139	;# 
  5006   00008C                     SPI1CLK         equ	140	;# 
  5007   00008D                     SPI2RXB         equ	141	;# 
  5008   00008E                     SPI2TXB         equ	142	;# 
  5009   00008F                     SPI2TCNT        equ	143	;# 
  5010   00008F                     SPI2TCNTL       equ	143	;# 
  5011   000090                     SPI2TCNTH       equ	144	;# 
  5012   000091                     SPI2CON0        equ	145	;# 
  5013   000092                     SPI2CON1        equ	146	;# 
  5014   000093                     SPI2CON2        equ	147	;# 
  5015   000094                     SPI2STATUS      equ	148	;# 
  5016   000095                     SPI2TWIDTH      equ	149	;# 
  5017   000096                     SPI2BAUD        equ	150	;# 
  5018   000097                     SPI2INTF        equ	151	;# 
  5019   000098                     SPI2INTE        equ	152	;# 
  5020   000099                     SPI2CLK         equ	153	;# 
  5021   0000AC                     ACTCON          equ	172	;# 
  5022   0000AD                     OSCCON1         equ	173	;# 
  5023   0000AE                     OSCCON2         equ	174	;# 
  5024   0000AF                     OSCCON3         equ	175	;# 
  5025   0000B0                     OSCTUNE         equ	176	;# 
  5026   0000B1                     OSCFRQ          equ	177	;# 
  5027   0000B1                     OSCFREQ         equ	177	;# 
  5028   0000B2                     OSCSTAT         equ	178	;# 
  5029   0000B2                     OSCSTAT1        equ	178	;# 
  5030   0000B3                     OSCEN           equ	179	;# 
  5031   0000B4                     PRLOCK          equ	180	;# 
  5032   0000B5                     SCANPR          equ	181	;# 
  5033   0000B6                     DMA1PR          equ	182	;# 
  5034   0000B7                     DMA2PR          equ	183	;# 
  5035   0000B8                     DMA3PR          equ	184	;# 
  5036   0000B9                     DMA4PR          equ	185	;# 
  5037   0000BA                     DMA5PR          equ	186	;# 
  5038   0000BB                     DMA6PR          equ	187	;# 
  5039   0000BC                     DMA7PR          equ	188	;# 
  5040   0000BD                     DMA8PR          equ	189	;# 
  5041   0000BE                     MAINPR          equ	190	;# 
  5042   0000BF                     ISRPR           equ	191	;# 
  5043   0000D4                     CLCDATA         equ	212	;# 
  5044   0000D5                     CLCSELECT       equ	213	;# 
  5045   0000D6                     CLCnCON         equ	214	;# 
  5046   0000D7                     CLCnPOL         equ	215	;# 
  5047   0000D8                     CLCnSEL0        equ	216	;# 
  5048   0000D9                     CLCnSEL1        equ	217	;# 
  5049   0000DA                     CLCnSEL2        equ	218	;# 
  5050   0000DB                     CLCnSEL3        equ	219	;# 
  5051   0000DC                     CLCnGLS0        equ	220	;# 
  5052   0000DD                     CLCnGLS1        equ	221	;# 
  5053   0000DE                     CLCnGLS2        equ	222	;# 
  5054   0000DF                     CLCnGLS3        equ	223	;# 
  5055   0000E8                     DMASELECT       equ	232	;# 
  5056   0000E9                     DMAnBUF         equ	233	;# 
  5057   0000EA                     DMAnDCNT        equ	234	;# 
  5058   0000EA                     DMAnDCNTL       equ	234	;# 
  5059   0000EB                     DMAnDCNTH       equ	235	;# 
  5060   0000EC                     DMAnDPTR        equ	236	;# 
  5061   0000EC                     DMAnDPTRL       equ	236	;# 
  5062   0000ED                     DMAnDPTRH       equ	237	;# 
  5063   0000EE                     DMAnDSZ         equ	238	;# 
  5064   0000EE                     DMAnDSZL        equ	238	;# 
  5065   0000EF                     DMAnDSZH        equ	239	;# 
  5066   0000F0                     DMAnDSA         equ	240	;# 
  5067   0000F0                     DMAnDSAL        equ	240	;# 
  5068   0000F1                     DMAnDSAH        equ	241	;# 
  5069   0000F2                     DMAnSCNT        equ	242	;# 
  5070   0000F2                     DMAnSCNTL       equ	242	;# 
  5071   0000F3                     DMAnSCNTH       equ	243	;# 
  5072   0000F4                     DMAnSPTR        equ	244	;# 
  5073   0000F4                     DMAnSPTRL       equ	244	;# 
  5074   0000F5                     DMAnSPTRH       equ	245	;# 
  5075   0000F6                     DMAnSPTRU       equ	246	;# 
  5076   0000F7                     DMAnSSZ         equ	247	;# 
  5077   0000F7                     DMAnSSZL        equ	247	;# 
  5078   0000F8                     DMAnSSZH        equ	248	;# 
  5079   0000F9                     DMAnSSA         equ	249	;# 
  5080   0000F9                     DMAnSSAL        equ	249	;# 
  5081   0000FA                     DMAnSSAH        equ	250	;# 
  5082   0000FB                     DMAnSSAU        equ	251	;# 
  5083   0000FC                     DMAnCON0        equ	252	;# 
  5084   0000FD                     DMAnCON1        equ	253	;# 
  5085   0000FE                     DMAnAIRQ        equ	254	;# 
  5086   0000FF                     DMAnSIRQ        equ	255	;# 
  5087   000100                     C1CONL          equ	256	;# 
  5088   000101                     C1CONH          equ	257	;# 
  5089   000102                     C1CONU          equ	258	;# 
  5090   000103                     C1CONT          equ	259	;# 
  5091   000104                     C1NBTCFGL       equ	260	;# 
  5092   000105                     C1NBTCFGH       equ	261	;# 
  5093   000106                     C1NBTCFGU       equ	262	;# 
  5094   000107                     C1NBTCFGT       equ	263	;# 
  5095   000108                     C1DBTCFGL       equ	264	;# 
  5096   000109                     C1DBTCFGH       equ	265	;# 
  5097   00010A                     C1DBTCFGU       equ	266	;# 
  5098   00010B                     C1DBTCFGT       equ	267	;# 
  5099   00010C                     C1TDCL          equ	268	;# 
  5100   00010D                     C1TDCH          equ	269	;# 
  5101   00010E                     C1TDCU          equ	270	;# 
  5102   000110                     C1TBC           equ	272	;# 
  5103   000110                     C1TBCL          equ	272	;# 
  5104   000111                     C1TBCH          equ	273	;# 
  5105   000112                     C1TBCU          equ	274	;# 
  5106   000113                     C1TBCT          equ	275	;# 
  5107   000114                     C1TSCONL        equ	276	;# 
  5108   000115                     C1TSCONH        equ	277	;# 
  5109   000116                     C1TSCONU        equ	278	;# 
  5110   000117                     C1TSCONT        equ	279	;# 
  5111   000118                     C1VECL          equ	280	;# 
  5112   000119                     C1VECH          equ	281	;# 
  5113   00011A                     C1VECU          equ	282	;# 
  5114   00011B                     C1VECT          equ	283	;# 
  5115   00011C                     C1INTL          equ	284	;# 
  5116   00011D                     C1INTH          equ	285	;# 
  5117   00011E                     C1INTU          equ	286	;# 
  5118   00011F                     C1INTT          equ	287	;# 
  5119   000120                     C1RXIF          equ	288	;# 
  5120   000120                     C1RXIFL         equ	288	;# 
  5121   000121                     C1RXIFH         equ	289	;# 
  5122   000122                     C1RXIFU         equ	290	;# 
  5123   000123                     C1RXIFT         equ	291	;# 
  5124   000124                     C1TXIF          equ	292	;# 
  5125   000124                     C1TXIFL         equ	292	;# 
  5126   000125                     C1TXIFH         equ	293	;# 
  5127   000126                     C1TXIFU         equ	294	;# 
  5128   000127                     C1TXIFT         equ	295	;# 
  5129   000128                     C1RXOVIF        equ	296	;# 
  5130   000128                     C1RXOVIFL       equ	296	;# 
  5131   000129                     C1RXOVIFH       equ	297	;# 
  5132   00012A                     C1RXOVIFU       equ	298	;# 
  5133   00012B                     C1RXOVIFT       equ	299	;# 
  5134   00012C                     C1TXATIF        equ	300	;# 
  5135   00012C                     C1TXATIFL       equ	300	;# 
  5136   00012D                     C1TXATIFH       equ	301	;# 
  5137   00012E                     C1TXATIFU       equ	302	;# 
  5138   00012F                     C1TXATIFT       equ	303	;# 
  5139   000130                     C1TXREQ         equ	304	;# 
  5140   000130                     C1TXREQL        equ	304	;# 
  5141   000131                     C1TXREQH        equ	305	;# 
  5142   000132                     C1TXREQU        equ	306	;# 
  5143   000133                     C1TXREQT        equ	307	;# 
  5144   000134                     C1TRECL         equ	308	;# 
  5145   000135                     C1TRECH         equ	309	;# 
  5146   000136                     C1TRECU         equ	310	;# 
  5147   000137                     C1TRECT         equ	311	;# 
  5148   000138                     C1BDIAG0L       equ	312	;# 
  5149   000139                     C1BDIAG0H       equ	313	;# 
  5150   00013C                     C1BDIAG1L       equ	316	;# 
  5151   00013D                     C1BDIAG1H       equ	317	;# 
  5152   00013E                     C1BDIAG1U       equ	318	;# 
  5153   00013F                     C1BDIAG1T       equ	319	;# 
  5154   000140                     C1TEFCONL       equ	320	;# 
  5155   000141                     C1TEFCONH       equ	321	;# 
  5156   000142                     C1TEFCONU       equ	322	;# 
  5157   000143                     C1TEFCONT       equ	323	;# 
  5158   000144                     C1TEFSTAL       equ	324	;# 
  5159   000145                     C1TEFSTAH       equ	325	;# 
  5160   000146                     C1TEFSTAU       equ	326	;# 
  5161   000147                     C1TEFSTAT       equ	327	;# 
  5162   000148                     C1TEFUA         equ	328	;# 
  5163   000148                     C1TEFUAL        equ	328	;# 
  5164   000149                     C1TEFUAH        equ	329	;# 
  5165   00014A                     C1TEFUAU        equ	330	;# 
  5166   00014B                     C1TEFUAT        equ	331	;# 
  5167   00014C                     C1FIFOBA        equ	332	;# 
  5168   00014C                     C1FIFOBAL       equ	332	;# 
  5169   00014D                     C1FIFOBAH       equ	333	;# 
  5170   00014E                     C1FIFOBAU       equ	334	;# 
  5171   00014F                     C1FIFOBAT       equ	335	;# 
  5172   000150                     C1TXQCONL       equ	336	;# 
  5173   000151                     C1TXQCONH       equ	337	;# 
  5174   000152                     C1TXQCONU       equ	338	;# 
  5175   000153                     C1TXQCONT       equ	339	;# 
  5176   000154                     C1TXQSTAL       equ	340	;# 
  5177   000155                     C1TXQSTAH       equ	341	;# 
  5178   000156                     C1TXQSTAU       equ	342	;# 
  5179   000157                     C1TXQSTAT       equ	343	;# 
  5180   000158                     C1TXQUA         equ	344	;# 
  5181   000158                     C1TXQUAL        equ	344	;# 
  5182   000159                     C1TXQUAH        equ	345	;# 
  5183   00015A                     C1TXQUAU        equ	346	;# 
  5184   00015B                     C1TXQUAT        equ	347	;# 
  5185   00015C                     C1FIFOCON1      equ	348	;# 
  5186   00015C                     C1FIFOCON1L     equ	348	;# 
  5187   00015D                     C1FIFOCON1H     equ	349	;# 
  5188   00015E                     C1FIFOCON1U     equ	350	;# 
  5189   00015F                     C1FIFOCON1T     equ	351	;# 
  5190   000160                     C1FIFOSTA1      equ	352	;# 
  5191   000160                     C1FIFOSTA1L     equ	352	;# 
  5192   000161                     C1FIFOSTA1H     equ	353	;# 
  5193   000162                     C1FIFOSTA1U     equ	354	;# 
  5194   000163                     C1FIFOSTA1T     equ	355	;# 
  5195   000164                     C1FIFOUA1       equ	356	;# 
  5196   000164                     C1FIFOUA1L      equ	356	;# 
  5197   000165                     C1FIFOUA1H      equ	357	;# 
  5198   000166                     C1FIFOUA1U      equ	358	;# 
  5199   000167                     C1FIFOUA1T      equ	359	;# 
  5200   000168                     C1FIFOCON2      equ	360	;# 
  5201   000168                     C1FIFOCON2L     equ	360	;# 
  5202   000169                     C1FIFOCON2H     equ	361	;# 
  5203   00016A                     C1FIFOCON2U     equ	362	;# 
  5204   00016B                     C1FIFOCON2T     equ	363	;# 
  5205   00016C                     C1FIFOSTA2      equ	364	;# 
  5206   00016C                     C1FIFOSTA2L     equ	364	;# 
  5207   00016D                     C1FIFOSTA2H     equ	365	;# 
  5208   00016E                     C1FIFOSTA2U     equ	366	;# 
  5209   00016F                     C1FIFOSTA2T     equ	367	;# 
  5210   000170                     C1FIFOUA2       equ	368	;# 
  5211   000170                     C1FIFOUA2L      equ	368	;# 
  5212   000171                     C1FIFOUA2H      equ	369	;# 
  5213   000172                     C1FIFOUA2U      equ	370	;# 
  5214   000173                     C1FIFOUA2T      equ	371	;# 
  5215   000174                     C1FIFOCON3      equ	372	;# 
  5216   000174                     C1FIFOCON3L     equ	372	;# 
  5217   000175                     C1FIFOCON3H     equ	373	;# 
  5218   000176                     C1FIFOCON3U     equ	374	;# 
  5219   000177                     C1FIFOCON3T     equ	375	;# 
  5220   000178                     C1FIFOSTA3      equ	376	;# 
  5221   000178                     C1FIFOSTA3L     equ	376	;# 
  5222   000179                     C1FIFOSTA3H     equ	377	;# 
  5223   00017A                     C1FIFOSTA3U     equ	378	;# 
  5224   00017B                     C1FIFOSTA3T     equ	379	;# 
  5225   00017C                     C1FIFOUA3       equ	380	;# 
  5226   00017C                     C1FIFOUA3L      equ	380	;# 
  5227   00017D                     C1FIFOUA3H      equ	381	;# 
  5228   00017E                     C1FIFOUA3U      equ	382	;# 
  5229   00017F                     C1FIFOUA3T      equ	383	;# 
  5230   000180                     C1FLTCON0L      equ	384	;# 
  5231   000181                     C1FLTCON0H      equ	385	;# 
  5232   000182                     C1FLTCON0U      equ	386	;# 
  5233   000183                     C1FLTCON0T      equ	387	;# 
  5234   000184                     C1FLTCON1L      equ	388	;# 
  5235   000185                     C1FLTCON1H      equ	389	;# 
  5236   000186                     C1FLTCON1U      equ	390	;# 
  5237   000187                     C1FLTCON1T      equ	391	;# 
  5238   000188                     C1FLTCON2L      equ	392	;# 
  5239   000189                     C1FLTCON2H      equ	393	;# 
  5240   00018A                     C1FLTCON2U      equ	394	;# 
  5241   00018B                     C1FLTCON2T      equ	395	;# 
  5242   00018C                     C1FLTOBJ0       equ	396	;# 
  5243   00018C                     C1FLTOBJ0L      equ	396	;# 
  5244   00018D                     C1FLTOBJ0H      equ	397	;# 
  5245   00018E                     C1FLTOBJ0U      equ	398	;# 
  5246   00018F                     C1FLTOBJ0T      equ	399	;# 
  5247   000190                     C1MASK0         equ	400	;# 
  5248   000190                     C1MASK0L        equ	400	;# 
  5249   000191                     C1MASK0H        equ	401	;# 
  5250   000192                     C1MASK0U        equ	402	;# 
  5251   000193                     C1MASK0T        equ	403	;# 
  5252   000194                     C1FLTOBJ1       equ	404	;# 
  5253   000194                     C1FLTOBJ1L      equ	404	;# 
  5254   000195                     C1FLTOBJ1H      equ	405	;# 
  5255   000196                     C1FLTOBJ1U      equ	406	;# 
  5256   000197                     C1FLTOBJ1T      equ	407	;# 
  5257   000198                     C1MASK1         equ	408	;# 
  5258   000198                     C1MASK1L        equ	408	;# 
  5259   000199                     C1MASK1H        equ	409	;# 
  5260   00019A                     C1MASK1U        equ	410	;# 
  5261   00019B                     C1MASK1T        equ	411	;# 
  5262   00019C                     C1FLTOBJ2       equ	412	;# 
  5263   00019C                     C1FLTOBJ2L      equ	412	;# 
  5264   00019D                     C1FLTOBJ2H      equ	413	;# 
  5265   00019E                     C1FLTOBJ2U      equ	414	;# 
  5266   00019F                     C1FLTOBJ2T      equ	415	;# 
  5267   0001A0                     C1MASK2         equ	416	;# 
  5268   0001A0                     C1MASK2L        equ	416	;# 
  5269   0001A1                     C1MASK2H        equ	417	;# 
  5270   0001A2                     C1MASK2U        equ	418	;# 
  5271   0001A3                     C1MASK2T        equ	419	;# 
  5272   0001A4                     C1FLTOBJ3       equ	420	;# 
  5273   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5274   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5275   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5276   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5277   0001A8                     C1MASK3         equ	424	;# 
  5278   0001A8                     C1MASK3L        equ	424	;# 
  5279   0001A9                     C1MASK3H        equ	425	;# 
  5280   0001AA                     C1MASK3U        equ	426	;# 
  5281   0001AB                     C1MASK3T        equ	427	;# 
  5282   0001AC                     C1FLTOBJ4       equ	428	;# 
  5283   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5284   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5285   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5286   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5287   0001B0                     C1MASK4         equ	432	;# 
  5288   0001B0                     C1MASK4L        equ	432	;# 
  5289   0001B1                     C1MASK4H        equ	433	;# 
  5290   0001B2                     C1MASK4U        equ	434	;# 
  5291   0001B3                     C1MASK4T        equ	435	;# 
  5292   0001B4                     C1FLTOBJ5       equ	436	;# 
  5293   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5294   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5295   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5296   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5297   0001B8                     C1MASK5         equ	440	;# 
  5298   0001B8                     C1MASK5L        equ	440	;# 
  5299   0001B9                     C1MASK5H        equ	441	;# 
  5300   0001BA                     C1MASK5U        equ	442	;# 
  5301   0001BB                     C1MASK5T        equ	443	;# 
  5302   0001BC                     C1FLTOBJ6       equ	444	;# 
  5303   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5304   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5305   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5306   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5307   0001C0                     C1MASK6         equ	448	;# 
  5308   0001C0                     C1MASK6L        equ	448	;# 
  5309   0001C1                     C1MASK6H        equ	449	;# 
  5310   0001C2                     C1MASK6U        equ	450	;# 
  5311   0001C3                     C1MASK6T        equ	451	;# 
  5312   0001C4                     C1FLTOBJ7       equ	452	;# 
  5313   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5314   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5315   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5316   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5317   0001C8                     C1MASK7         equ	456	;# 
  5318   0001C8                     C1MASK7L        equ	456	;# 
  5319   0001C9                     C1MASK7H        equ	457	;# 
  5320   0001CA                     C1MASK7U        equ	458	;# 
  5321   0001CB                     C1MASK7T        equ	459	;# 
  5322   0001CC                     C1FLTOBJ8       equ	460	;# 
  5323   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5324   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5325   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5326   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5327   0001D0                     C1MASK8         equ	464	;# 
  5328   0001D0                     C1MASK8L        equ	464	;# 
  5329   0001D1                     C1MASK8H        equ	465	;# 
  5330   0001D2                     C1MASK8U        equ	466	;# 
  5331   0001D3                     C1MASK8T        equ	467	;# 
  5332   0001D4                     C1FLTOBJ9       equ	468	;# 
  5333   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5334   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5335   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5336   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5337   0001D8                     C1MASK9         equ	472	;# 
  5338   0001D8                     C1MASK9L        equ	472	;# 
  5339   0001D9                     C1MASK9H        equ	473	;# 
  5340   0001DA                     C1MASK9U        equ	474	;# 
  5341   0001DB                     C1MASK9T        equ	475	;# 
  5342   0001DC                     C1FLTOBJ10      equ	476	;# 
  5343   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5344   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5345   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5346   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5347   0001E0                     C1MASK10        equ	480	;# 
  5348   0001E0                     C1MASK10L       equ	480	;# 
  5349   0001E1                     C1MASK10H       equ	481	;# 
  5350   0001E2                     C1MASK10U       equ	482	;# 
  5351   0001E3                     C1MASK10T       equ	483	;# 
  5352   0001E4                     C1FLTOBJ11      equ	484	;# 
  5353   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5354   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5355   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5356   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5357   0001E8                     C1MASK11        equ	488	;# 
  5358   0001E8                     C1MASK11L       equ	488	;# 
  5359   0001E9                     C1MASK11H       equ	489	;# 
  5360   0001EA                     C1MASK11U       equ	490	;# 
  5361   0001EB                     C1MASK11T       equ	491	;# 
  5362   000200                     PPSLOCK         equ	512	;# 
  5363   000201                     RA0PPS          equ	513	;# 
  5364   000202                     RA1PPS          equ	514	;# 
  5365   000203                     RA2PPS          equ	515	;# 
  5366   000204                     RA3PPS          equ	516	;# 
  5367   000205                     RA4PPS          equ	517	;# 
  5368   000206                     RA5PPS          equ	518	;# 
  5369   000207                     RA6PPS          equ	519	;# 
  5370   000208                     RA7PPS          equ	520	;# 
  5371   000209                     RB0PPS          equ	521	;# 
  5372   00020A                     RB1PPS          equ	522	;# 
  5373   00020B                     RB2PPS          equ	523	;# 
  5374   00020C                     RB3PPS          equ	524	;# 
  5375   00020D                     RB4PPS          equ	525	;# 
  5376   00020E                     RB5PPS          equ	526	;# 
  5377   00020F                     RB6PPS          equ	527	;# 
  5378   000210                     RB7PPS          equ	528	;# 
  5379   000211                     RC0PPS          equ	529	;# 
  5380   000212                     RC1PPS          equ	530	;# 
  5381   000213                     RC2PPS          equ	531	;# 
  5382   000214                     RC3PPS          equ	532	;# 
  5383   000215                     RC4PPS          equ	533	;# 
  5384   000216                     RC5PPS          equ	534	;# 
  5385   000217                     RC6PPS          equ	535	;# 
  5386   000218                     RC7PPS          equ	536	;# 
  5387   00023D                     CANRXPPS        equ	573	;# 
  5388   00023E                     INT0PPS         equ	574	;# 
  5389   00023F                     INT1PPS         equ	575	;# 
  5390   000240                     INT2PPS         equ	576	;# 
  5391   000241                     T0CKIPPS        equ	577	;# 
  5392   000242                     T1CKIPPS        equ	578	;# 
  5393   000243                     T1GPPS          equ	579	;# 
  5394   000244                     T3CKIPPS        equ	580	;# 
  5395   000245                     T3GPPS          equ	581	;# 
  5396   000246                     T5CKIPPS        equ	582	;# 
  5397   000247                     T5GPPS          equ	583	;# 
  5398   000248                     T2INPPS         equ	584	;# 
  5399   000249                     T4INPPS         equ	585	;# 
  5400   00024A                     T6INPPS         equ	586	;# 
  5401   00024B                     TUIN0PPS        equ	587	;# 
  5402   00024C                     TUIN1PPS        equ	588	;# 
  5403   00024F                     CCP1PPS         equ	591	;# 
  5404   000250                     CCP2PPS         equ	592	;# 
  5405   000251                     CCP3PPS         equ	593	;# 
  5406   000253                     PWM1ERSPPS      equ	595	;# 
  5407   000254                     PWM2ERSPPS      equ	596	;# 
  5408   000255                     PWM3ERSPPS      equ	597	;# 
  5409   000256                     PWM4ERSPPS      equ	598	;# 
  5410   000257                     PWMIN0PPS       equ	599	;# 
  5411   000258                     PWMIN1PPS       equ	600	;# 
  5412   000259                     SMT1WINPPS      equ	601	;# 
  5413   00025A                     SMT1SIGPPS      equ	602	;# 
  5414   00025B                     CWG1PPS         equ	603	;# 
  5415   00025B                     CWG1INPPS       equ	603	;# 
  5416   00025C                     CWG2PPS         equ	604	;# 
  5417   00025C                     CWG2INPPS       equ	604	;# 
  5418   00025D                     CWG3PPS         equ	605	;# 
  5419   00025D                     CWG3INPPS       equ	605	;# 
  5420   00025E                     MD1CARLPPS      equ	606	;# 
  5421   00025E                     MDCARLPPS       equ	606	;# 
  5422   00025F                     MD1CARHPPS      equ	607	;# 
  5423   00025F                     MDCARHPPS       equ	607	;# 
  5424   000260                     MD1SRCPPS       equ	608	;# 
  5425   000260                     MDSRCPPS        equ	608	;# 
  5426   000261                     CLCIN0PPS       equ	609	;# 
  5427   000262                     CLCIN1PPS       equ	610	;# 
  5428   000263                     CLCIN2PPS       equ	611	;# 
  5429   000264                     CLCIN3PPS       equ	612	;# 
  5430   000265                     CLCIN4PPS       equ	613	;# 
  5431   000266                     CLCIN5PPS       equ	614	;# 
  5432   000267                     CLCIN6PPS       equ	615	;# 
  5433   000268                     CLCIN7PPS       equ	616	;# 
  5434   000269                     ADACTPPS        equ	617	;# 
  5435   00026A                     SPI1SCKPPS      equ	618	;# 
  5436   00026B                     SPI1SDIPPS      equ	619	;# 
  5437   00026C                     SPI1SSPPS       equ	620	;# 
  5438   00026D                     SPI2SCKPPS      equ	621	;# 
  5439   00026E                     SPI2SDIPPS      equ	622	;# 
  5440   00026F                     SPI2SSPPS       equ	623	;# 
  5441   000270                     I2C1SDAPPS      equ	624	;# 
  5442   000271                     I2C1SCLPPS      equ	625	;# 
  5443   000272                     U1RXPPS         equ	626	;# 
  5444   000273                     U1CTSPPS        equ	627	;# 
  5445   000274                     U2RXPPS         equ	628	;# 
  5446   000275                     U2CTSPPS        equ	629	;# 
  5447   000276                     U3RXPPS         equ	630	;# 
  5448   000277                     U3CTSPPS        equ	631	;# 
  5449   000278                     U4RXPPS         equ	632	;# 
  5450   000279                     U4CTSPPS        equ	633	;# 
  5451   00027A                     U5RXPPS         equ	634	;# 
  5452   00027B                     U5CTSPPS        equ	635	;# 
  5453   000286                     RC4I2C          equ	646	;# 
  5454   000287                     RC3I2C          equ	647	;# 
  5455   000288                     RB2I2C          equ	648	;# 
  5456   000289                     RB1I2C          equ	649	;# 
  5457   00028A                     I2C1RXB         equ	650	;# 
  5458   00028B                     I2C1TXB         equ	651	;# 
  5459   00028C                     I2C1CNTL        equ	652	;# 
  5460   00028D                     I2C1CNTH        equ	653	;# 
  5461   00028E                     I2C1ADB0        equ	654	;# 
  5462   00028F                     I2C1ADB1        equ	655	;# 
  5463   000290                     I2C1ADR0        equ	656	;# 
  5464   000291                     I2C1ADR1        equ	657	;# 
  5465   000292                     I2C1ADR2        equ	658	;# 
  5466   000293                     I2C1ADR3        equ	659	;# 
  5467   000294                     I2C1CON0        equ	660	;# 
  5468   000295                     I2C1CON1        equ	661	;# 
  5469   000296                     I2C1CON2        equ	662	;# 
  5470   000297                     I2C1ERR         equ	663	;# 
  5471   000298                     I2C1STAT0       equ	664	;# 
  5472   000299                     I2C1STAT1       equ	665	;# 
  5473   00029A                     I2C1PIR         equ	666	;# 
  5474   00029B                     I2C1PIE         equ	667	;# 
  5475   00029C                     I2C1BTO         equ	668	;# 
  5476   00029D                     I2C1BAUD        equ	669	;# 
  5477   00029E                     I2C1CLK         equ	670	;# 
  5478   00029F                     I2C1BTOC        equ	671	;# 
  5479   0002A1                     U1RXB           equ	673	;# 
  5480   0002A1                     U1RXBL          equ	673	;# 
  5481   0002A2                     U1RXCHK         equ	674	;# 
  5482   0002A3                     U1TXB           equ	675	;# 
  5483   0002A3                     U1TXBL          equ	675	;# 
  5484   0002A4                     U1TXCHK         equ	676	;# 
  5485   0002A5                     U1P1            equ	677	;# 
  5486   0002A5                     U1P1L           equ	677	;# 
  5487   0002A6                     U1P1H           equ	678	;# 
  5488   0002A7                     U1P2            equ	679	;# 
  5489   0002A7                     U1P2L           equ	679	;# 
  5490   0002A8                     U1P2H           equ	680	;# 
  5491   0002A9                     U1P3            equ	681	;# 
  5492   0002A9                     U1P3L           equ	681	;# 
  5493   0002AA                     U1P3H           equ	682	;# 
  5494   0002AB                     U1CON0          equ	683	;# 
  5495   0002AC                     U1CON1          equ	684	;# 
  5496   0002AD                     U1CON2          equ	685	;# 
  5497   0002AE                     U1BRG           equ	686	;# 
  5498   0002AE                     U1BRGL          equ	686	;# 
  5499   0002AF                     U1BRGH          equ	687	;# 
  5500   0002B0                     U1FIFO          equ	688	;# 
  5501   0002B1                     U1UIR           equ	689	;# 
  5502   0002B2                     U1ERRIR         equ	690	;# 
  5503   0002B3                     U1ERRIE         equ	691	;# 
  5504   0002B4                     U2RXB           equ	692	;# 
  5505   0002B4                     U2RXBL          equ	692	;# 
  5506   0002B5                     U2RXCHK         equ	693	;# 
  5507   0002B6                     U2TXB           equ	694	;# 
  5508   0002B6                     U2TXBL          equ	694	;# 
  5509   0002B7                     U2TXCHK         equ	695	;# 
  5510   0002B8                     U2P1            equ	696	;# 
  5511   0002B8                     U2P1L           equ	696	;# 
  5512   0002B9                     U2P1H           equ	697	;# 
  5513   0002BA                     U2P2            equ	698	;# 
  5514   0002BA                     U2P2L           equ	698	;# 
  5515   0002BB                     U2P2H           equ	699	;# 
  5516   0002BC                     U2P3            equ	700	;# 
  5517   0002BC                     U2P3L           equ	700	;# 
  5518   0002BD                     U2P3H           equ	701	;# 
  5519   0002BE                     U2CON0          equ	702	;# 
  5520   0002BF                     U2CON1          equ	703	;# 
  5521   0002C0                     U2CON2          equ	704	;# 
  5522   0002C1                     U2BRG           equ	705	;# 
  5523   0002C1                     U2BRGL          equ	705	;# 
  5524   0002C2                     U2BRGH          equ	706	;# 
  5525   0002C3                     U2FIFO          equ	707	;# 
  5526   0002C4                     U2UIR           equ	708	;# 
  5527   0002C5                     U2ERRIR         equ	709	;# 
  5528   0002C6                     U2ERRIE         equ	710	;# 
  5529   0002C7                     U3RXB           equ	711	;# 
  5530   0002C7                     U3RXBL          equ	711	;# 
  5531   0002C9                     U3TXB           equ	713	;# 
  5532   0002C9                     U3TXBL          equ	713	;# 
  5533   0002CB                     U3P1            equ	715	;# 
  5534   0002CB                     U3P1L           equ	715	;# 
  5535   0002CD                     U3P2            equ	717	;# 
  5536   0002CD                     U3P2L           equ	717	;# 
  5537   0002CF                     U3P3            equ	719	;# 
  5538   0002CF                     U3P3L           equ	719	;# 
  5539   0002D1                     U3CON0          equ	721	;# 
  5540   0002D2                     U3CON1          equ	722	;# 
  5541   0002D3                     U3CON2          equ	723	;# 
  5542   0002D4                     U3BRG           equ	724	;# 
  5543   0002D4                     U3BRGL          equ	724	;# 
  5544   0002D5                     U3BRGH          equ	725	;# 
  5545   0002D6                     U3FIFO          equ	726	;# 
  5546   0002D7                     U3UIR           equ	727	;# 
  5547   0002D8                     U3ERRIR         equ	728	;# 
  5548   0002D9                     U3ERRIE         equ	729	;# 
  5549   0002DA                     U4RXB           equ	730	;# 
  5550   0002DA                     U4RXBL          equ	730	;# 
  5551   0002DC                     U4TXB           equ	732	;# 
  5552   0002DC                     U4TXBL          equ	732	;# 
  5553   0002DE                     U4P1            equ	734	;# 
  5554   0002DE                     U4P1L           equ	734	;# 
  5555   0002E0                     U4P2            equ	736	;# 
  5556   0002E0                     U4P2L           equ	736	;# 
  5557   0002E2                     U4P3            equ	738	;# 
  5558   0002E2                     U4P3L           equ	738	;# 
  5559   0002E4                     U4CON0          equ	740	;# 
  5560   0002E5                     U4CON1          equ	741	;# 
  5561   0002E6                     U4CON2          equ	742	;# 
  5562   0002E7                     U4BRG           equ	743	;# 
  5563   0002E7                     U4BRGL          equ	743	;# 
  5564   0002E8                     U4BRGH          equ	744	;# 
  5565   0002E9                     U4FIFO          equ	745	;# 
  5566   0002EA                     U4UIR           equ	746	;# 
  5567   0002EB                     U4ERRIR         equ	747	;# 
  5568   0002EC                     U4ERRIE         equ	748	;# 
  5569   0002ED                     U5RXB           equ	749	;# 
  5570   0002ED                     U5RXBL          equ	749	;# 
  5571   0002EF                     U5TXB           equ	751	;# 
  5572   0002EF                     U5TXBL          equ	751	;# 
  5573   0002F1                     U5P1            equ	753	;# 
  5574   0002F1                     U5P1L           equ	753	;# 
  5575   0002F3                     U5P2            equ	755	;# 
  5576   0002F3                     U5P2L           equ	755	;# 
  5577   0002F5                     U5P3            equ	757	;# 
  5578   0002F5                     U5P3L           equ	757	;# 
  5579   0002F7                     U5CON0          equ	759	;# 
  5580   0002F8                     U5CON1          equ	760	;# 
  5581   0002F9                     U5CON2          equ	761	;# 
  5582   0002FA                     U5BRG           equ	762	;# 
  5583   0002FA                     U5BRGL          equ	762	;# 
  5584   0002FB                     U5BRGH          equ	763	;# 
  5585   0002FC                     U5FIFO          equ	764	;# 
  5586   0002FD                     U5UIR           equ	765	;# 
  5587   0002FE                     U5ERRIR         equ	766	;# 
  5588   0002FF                     U5ERRIE         equ	767	;# 
  5589   000300                     SMT1TMR         equ	768	;# 
  5590   000300                     SMT1TMRL        equ	768	;# 
  5591   000301                     SMT1TMRH        equ	769	;# 
  5592   000302                     SMT1TMRU        equ	770	;# 
  5593   000303                     SMT1CPR         equ	771	;# 
  5594   000303                     SMT1CPRL        equ	771	;# 
  5595   000304                     SMT1CPRH        equ	772	;# 
  5596   000305                     SMT1CPRU        equ	773	;# 
  5597   000306                     SMT1CPW         equ	774	;# 
  5598   000306                     SMT1CPWL        equ	774	;# 
  5599   000307                     SMT1CPWH        equ	775	;# 
  5600   000308                     SMT1CPWU        equ	776	;# 
  5601   000309                     SMT1PR          equ	777	;# 
  5602   000309                     SMT1PRL         equ	777	;# 
  5603   00030A                     SMT1PRH         equ	778	;# 
  5604   00030B                     SMT1PRU         equ	779	;# 
  5605   00030C                     SMT1CON0        equ	780	;# 
  5606   00030D                     SMT1CON1        equ	781	;# 
  5607   00030E                     SMT1STAT        equ	782	;# 
  5608   00030F                     SMT1CLK         equ	783	;# 
  5609   000310                     SMT1SIG         equ	784	;# 
  5610   000311                     SMT1WIN         equ	785	;# 
  5611   000318                     TMR0L           equ	792	;# 
  5612   000318                     TMR0            equ	792	;# 
  5613   000319                     TMR0H           equ	793	;# 
  5614   000319                     PR0             equ	793	;# 
  5615   00031A                     T0CON0          equ	794	;# 
  5616   00031B                     T0CON1          equ	795	;# 
  5617   00031C                     TMR1            equ	796	;# 
  5618   00031C                     TMR1L           equ	796	;# 
  5619   00031D                     TMR1H           equ	797	;# 
  5620   00031E                     T1CON           equ	798	;# 
  5621   00031E                     TMR1CON         equ	798	;# 
  5622   00031F                     T1GCON          equ	799	;# 
  5623   00031F                     TMR1GCON        equ	799	;# 
  5624   000320                     T1GATE          equ	800	;# 
  5625   000320                     TMR1GATE        equ	800	;# 
  5626   000321                     T1CLK           equ	801	;# 
  5627   000321                     TMR1CLK         equ	801	;# 
  5628   000321                     PR1             equ	801	;# 
  5629   000322                     T2TMR           equ	802	;# 
  5630   000322                     TMR2            equ	802	;# 
  5631   000323                     T2PR            equ	803	;# 
  5632   000323                     PR2             equ	803	;# 
  5633   000324                     T2CON           equ	804	;# 
  5634   000325                     T2HLT           equ	805	;# 
  5635   000326                     T2CLKCON        equ	806	;# 
  5636   000326                     T2CLK           equ	806	;# 
  5637   000327                     T2RST           equ	807	;# 
  5638   000328                     TMR3            equ	808	;# 
  5639   000328                     TMR3L           equ	808	;# 
  5640   000329                     TMR3H           equ	809	;# 
  5641   00032A                     T3CON           equ	810	;# 
  5642   00032A                     TMR3CON         equ	810	;# 
  5643   00032B                     T3GCON          equ	811	;# 
  5644   00032B                     TMR3GCON        equ	811	;# 
  5645   00032C                     T3GATE          equ	812	;# 
  5646   00032C                     TMR3GATE        equ	812	;# 
  5647   00032D                     T3CLK           equ	813	;# 
  5648   00032D                     TMR3CLK         equ	813	;# 
  5649   00032D                     PR3             equ	813	;# 
  5650   00032E                     T4TMR           equ	814	;# 
  5651   00032E                     TMR4            equ	814	;# 
  5652   00032F                     T4PR            equ	815	;# 
  5653   00032F                     PR4             equ	815	;# 
  5654   000330                     T4CON           equ	816	;# 
  5655   000331                     T4HLT           equ	817	;# 
  5656   000332                     T4CLKCON        equ	818	;# 
  5657   000332                     T4CLK           equ	818	;# 
  5658   000333                     T4RST           equ	819	;# 
  5659   000334                     TMR5            equ	820	;# 
  5660   000334                     TMR5L           equ	820	;# 
  5661   000335                     TMR5H           equ	821	;# 
  5662   000336                     T5CON           equ	822	;# 
  5663   000336                     TMR5CON         equ	822	;# 
  5664   000337                     T5GCON          equ	823	;# 
  5665   000337                     TMR5GCON        equ	823	;# 
  5666   000338                     T5GATE          equ	824	;# 
  5667   000338                     TMR5GATE        equ	824	;# 
  5668   000339                     T5CLK           equ	825	;# 
  5669   000339                     TMR5CLK         equ	825	;# 
  5670   000339                     PR5             equ	825	;# 
  5671   00033A                     T6TMR           equ	826	;# 
  5672   00033A                     TMR6            equ	826	;# 
  5673   00033B                     T6PR            equ	827	;# 
  5674   00033B                     PR6             equ	827	;# 
  5675   00033C                     T6CON           equ	828	;# 
  5676   00033D                     T6HLT           equ	829	;# 
  5677   00033E                     T6CLKCON        equ	830	;# 
  5678   00033E                     T6CLK           equ	830	;# 
  5679   00033F                     T6RST           equ	831	;# 
  5680   000340                     CCPR1           equ	832	;# 
  5681   000340                     CCPR1L          equ	832	;# 
  5682   000341                     CCPR1H          equ	833	;# 
  5683   000342                     CCP1CON         equ	834	;# 
  5684   000343                     CCP1CAP         equ	835	;# 
  5685   000344                     CCPR2           equ	836	;# 
  5686   000344                     CCPR2L          equ	836	;# 
  5687   000345                     CCPR2H          equ	837	;# 
  5688   000346                     CCP2CON         equ	838	;# 
  5689   000347                     CCP2CAP         equ	839	;# 
  5690   000348                     CCPR3           equ	840	;# 
  5691   000348                     CCPR3L          equ	840	;# 
  5692   000349                     CCPR3H          equ	841	;# 
  5693   00034A                     CCP3CON         equ	842	;# 
  5694   00034B                     CCP3CAP         equ	843	;# 
  5695   00034C                     CCPTMRS0        equ	844	;# 
  5696   00034F                     CRCDATA         equ	847	;# 
  5697   00034F                     CRCDATAL        equ	847	;# 
  5698   000350                     CRCDATAH        equ	848	;# 
  5699   000351                     CRCDATAU        equ	849	;# 
  5700   000352                     CRCDATAT        equ	850	;# 
  5701   000353                     CRCOUT          equ	851	;# 
  5702   000353                     CRCSHFT         equ	851	;# 
  5703   000353                     CRCXOR          equ	851	;# 
  5704   000353                     CRCOUTL         equ	851	;# 
  5705   000353                     CRCSHFTL        equ	851	;# 
  5706   000353                     CRCSHIFTL       equ	851	;# 
  5707   000353                     CRCXORL         equ	851	;# 
  5708   000354                     CRCOUTH         equ	852	;# 
  5709   000354                     CRCSHFTH        equ	852	;# 
  5710   000354                     CRCSHIFTH       equ	852	;# 
  5711   000354                     CRCXORH         equ	852	;# 
  5712   000355                     CRCOUTU         equ	853	;# 
  5713   000355                     CRCSHFTU        equ	853	;# 
  5714   000355                     CRCSHIFTU       equ	853	;# 
  5715   000355                     CRCXORU         equ	853	;# 
  5716   000356                     CRCOUTT         equ	854	;# 
  5717   000356                     CRCSHFTT        equ	854	;# 
  5718   000356                     CRCSHIFTT       equ	854	;# 
  5719   000356                     CRCXORT         equ	854	;# 
  5720   000357                     CRCCON0         equ	855	;# 
  5721   000358                     CRCCON1         equ	856	;# 
  5722   000359                     CRCCON2         equ	857	;# 
  5723   00035A                     SCANLADR        equ	858	;# 
  5724   00035A                     SCANLADRL       equ	858	;# 
  5725   00035B                     SCANLADRH       equ	859	;# 
  5726   00035C                     SCANLADRU       equ	860	;# 
  5727   00035D                     SCANHADR        equ	861	;# 
  5728   00035D                     SCANHADRL       equ	861	;# 
  5729   00035E                     SCANHADRH       equ	862	;# 
  5730   00035F                     SCANHADRU       equ	863	;# 
  5731   000360                     SCANCON0        equ	864	;# 
  5732   000361                     SCANTRIG        equ	865	;# 
  5733   000362                     IPR0            equ	866	;# 
  5734   000363                     IPR1            equ	867	;# 
  5735   000364                     IPR2            equ	868	;# 
  5736   000365                     IPR3            equ	869	;# 
  5737   000366                     IPR4            equ	870	;# 
  5738   000367                     IPR5            equ	871	;# 
  5739   000368                     IPR6            equ	872	;# 
  5740   000369                     IPR7            equ	873	;# 
  5741   00036A                     IPR8            equ	874	;# 
  5742   00036B                     IPR9            equ	875	;# 
  5743   00036C                     IPR10           equ	876	;# 
  5744   00036D                     IPR11           equ	877	;# 
  5745   00036E                     IPR12           equ	878	;# 
  5746   00036F                     IPR13           equ	879	;# 
  5747   000370                     IPR14           equ	880	;# 
  5748   000371                     IPR15           equ	881	;# 
  5749   000373                     STATUS_CSHAD    equ	883	;# 
  5750   000374                     WREG_CSHAD      equ	884	;# 
  5751   000375                     BSR_CSHAD       equ	885	;# 
  5752   000376                     SHADCON         equ	886	;# 
  5753   000377                     STATUS_SHAD     equ	887	;# 
  5754   000378                     WREG_SHAD       equ	888	;# 
  5755   000379                     BSR_SHAD        equ	889	;# 
  5756   00037A                     PCLATH_SHAD     equ	890	;# 
  5757   00037B                     PCLATU_SHAD     equ	891	;# 
  5758   00037C                     FSR0SH          equ	892	;# 
  5759   00037C                     FSR0L_SHAD      equ	892	;# 
  5760   00037D                     FSR0H_SHAD      equ	893	;# 
  5761   00037E                     FSR1SH          equ	894	;# 
  5762   00037E                     FSR1L_SHAD      equ	894	;# 
  5763   00037F                     FSR1H_SHAD      equ	895	;# 
  5764   000380                     FSR2SH          equ	896	;# 
  5765   000380                     FSR2L_SHAD      equ	896	;# 
  5766   000381                     FSR2H_SHAD      equ	897	;# 
  5767   000382                     PRODSH          equ	898	;# 
  5768   000382                     PRODL_SHAD      equ	898	;# 
  5769   000383                     PRODH_SHAD      equ	899	;# 
  5770   000387                     TU16ACON0       equ	903	;# 
  5771   000388                     TU16ACON1       equ	904	;# 
  5772   000389                     TU16AHLT        equ	905	;# 
  5773   00038A                     TU16APS         equ	906	;# 
  5774   00038B                     TU16ATMR        equ	907	;# 
  5775   00038B                     TU16ACR         equ	907	;# 
  5776   00038B                     TU16ATMRL       equ	907	;# 
  5777   00038B                     TU16ACRL        equ	907	;# 
  5778   00038C                     TU16ATMRH       equ	908	;# 
  5779   00038C                     TU16ACRH        equ	908	;# 
  5780   00038D                     TU16APR         equ	909	;# 
  5781   00038D                     TU16APRL        equ	909	;# 
  5782   00038E                     TU16APRH        equ	910	;# 
  5783   00038F                     TU16ACLK        equ	911	;# 
  5784   000390                     TU16AERS        equ	912	;# 
  5785   000393                     TU16BCON0       equ	915	;# 
  5786   000394                     TU16BCON1       equ	916	;# 
  5787   000395                     TU16BHLT        equ	917	;# 
  5788   000396                     TU16BPS         equ	918	;# 
  5789   000397                     TU16BTMR        equ	919	;# 
  5790   000397                     TU16BCR         equ	919	;# 
  5791   000397                     TU16BTMRL       equ	919	;# 
  5792   000397                     TU16BCRL        equ	919	;# 
  5793   000398                     TU16BTMRH       equ	920	;# 
  5794   000398                     TU16BCRH        equ	920	;# 
  5795   000399                     TU16BPR         equ	921	;# 
  5796   000399                     TU16BPRL        equ	921	;# 
  5797   00039A                     TU16BPRH        equ	922	;# 
  5798   00039B                     TU16BCLK        equ	923	;# 
  5799   00039C                     TU16BERS        equ	924	;# 
  5800   0003BB                     TUCHAIN         equ	955	;# 
  5801   0003BC                     CWG1CLK         equ	956	;# 
  5802   0003BC                     CWG1CLKCON      equ	956	;# 
  5803   0003BD                     CWG1ISM         equ	957	;# 
  5804   0003BE                     CWG1DBR         equ	958	;# 
  5805   0003BF                     CWG1DBF         equ	959	;# 
  5806   0003C0                     CWG1CON0        equ	960	;# 
  5807   0003C1                     CWG1CON1        equ	961	;# 
  5808   0003C2                     CWG1AS0         equ	962	;# 
  5809   0003C3                     CWG1AS1         equ	963	;# 
  5810   0003C4                     CWG1STR         equ	964	;# 
  5811   0003C5                     CWG2CLK         equ	965	;# 
  5812   0003C5                     CWG2CLKCON      equ	965	;# 
  5813   0003C6                     CWG2ISM         equ	966	;# 
  5814   0003C7                     CWG2DBR         equ	967	;# 
  5815   0003C8                     CWG2DBF         equ	968	;# 
  5816   0003C9                     CWG2CON0        equ	969	;# 
  5817   0003CA                     CWG2CON1        equ	970	;# 
  5818   0003CB                     CWG2AS0         equ	971	;# 
  5819   0003CC                     CWG2AS1         equ	972	;# 
  5820   0003CD                     CWG2STR         equ	973	;# 
  5821   0003CE                     CWG3CLK         equ	974	;# 
  5822   0003CE                     CWG3CLKCON      equ	974	;# 
  5823   0003CF                     CWG3ISM         equ	975	;# 
  5824   0003D0                     CWG3DBR         equ	976	;# 
  5825   0003D1                     CWG3DBF         equ	977	;# 
  5826   0003D2                     CWG3CON0        equ	978	;# 
  5827   0003D3                     CWG3CON1        equ	979	;# 
  5828   0003D4                     CWG3AS0         equ	980	;# 
  5829   0003D5                     CWG3AS1         equ	981	;# 
  5830   0003D6                     CWG3STR         equ	982	;# 
  5831   0003D7                     FVRCON          equ	983	;# 
  5832   0003D8                     ADCPCON         equ	984	;# 
  5833   0003D8                     ADCP            equ	984	;# 
  5834   0003D9                     ADLTH           equ	985	;# 
  5835   0003D9                     ADLTHL          equ	985	;# 
  5836   0003DA                     ADLTHH          equ	986	;# 
  5837   0003DB                     ADUTH           equ	987	;# 
  5838   0003DB                     ADUTHL          equ	987	;# 
  5839   0003DC                     ADUTHH          equ	988	;# 
  5840   0003DD                     ADERR           equ	989	;# 
  5841   0003DD                     ADERRL          equ	989	;# 
  5842   0003DE                     ADERRH          equ	990	;# 
  5843   0003DF                     ADSTPT          equ	991	;# 
  5844   0003DF                     ADSTPTL         equ	991	;# 
  5845   0003E0                     ADSTPTH         equ	992	;# 
  5846   0003E1                     ADFLTR          equ	993	;# 
  5847   0003E1                     ADFLTRL         equ	993	;# 
  5848   0003E2                     ADFLTRH         equ	994	;# 
  5849   0003E3                     ADACC           equ	995	;# 
  5850   0003E3                     ADACCL          equ	995	;# 
  5851   0003E4                     ADACCH          equ	996	;# 
  5852   0003E5                     ADACCU          equ	997	;# 
  5853   0003E6                     ADCNT           equ	998	;# 
  5854   0003E7                     ADRPT           equ	999	;# 
  5855   0003E8                     ADPREV          equ	1000	;# 
  5856   0003E8                     ADPREVL         equ	1000	;# 
  5857   0003E9                     ADPREVH         equ	1001	;# 
  5858   0003EA                     ADRES           equ	1002	;# 
  5859   0003EA                     ADRESL          equ	1002	;# 
  5860   0003EB                     ADRESH          equ	1003	;# 
  5861   0003EC                     ADPCH           equ	1004	;# 
  5862   0003EE                     ADACQ           equ	1006	;# 
  5863   0003EE                     ADACQL          equ	1006	;# 
  5864   0003EF                     ADACQH          equ	1007	;# 
  5865   0003F0                     ADCAP           equ	1008	;# 
  5866   0003F1                     ADPRE           equ	1009	;# 
  5867   0003F1                     ADPREL          equ	1009	;# 
  5868   0003F2                     ADPREH          equ	1010	;# 
  5869   0003F3                     ADCON0          equ	1011	;# 
  5870   0003F4                     ADCON1          equ	1012	;# 
  5871   0003F5                     ADCON2          equ	1013	;# 
  5872   0003F6                     ADCON3          equ	1014	;# 
  5873   0003F7                     ADSTAT          equ	1015	;# 
  5874   0003F8                     ADREF           equ	1016	;# 
  5875   0003F9                     ADACT           equ	1017	;# 
  5876   0003FA                     ADCLK           equ	1018	;# 
  5877   0003FB                     ADCTX           equ	1019	;# 
  5878   0003FC                     ADCSEL1         equ	1020	;# 
  5879   0003FD                     ADCSEL2         equ	1021	;# 
  5880   0003FE                     ADCSEL3         equ	1022	;# 
  5881   0003FF                     ADCSEL4         equ	1023	;# 
  5882   000400                     ANSELA          equ	1024	;# 
  5883   000401                     WPUA            equ	1025	;# 
  5884   000402                     ODCONA          equ	1026	;# 
  5885   000403                     SLRCONA         equ	1027	;# 
  5886   000404                     INLVLA          equ	1028	;# 
  5887   000405                     IOCAP           equ	1029	;# 
  5888   000406                     IOCAN           equ	1030	;# 
  5889   000407                     IOCAF           equ	1031	;# 
  5890   000408                     ANSELB          equ	1032	;# 
  5891   000409                     WPUB            equ	1033	;# 
  5892   00040A                     ODCONB          equ	1034	;# 
  5893   00040B                     SLRCONB         equ	1035	;# 
  5894   00040C                     INLVLB          equ	1036	;# 
  5895   00040D                     IOCBP           equ	1037	;# 
  5896   00040E                     IOCBN           equ	1038	;# 
  5897   00040F                     IOCBF           equ	1039	;# 
  5898   000410                     ANSELC          equ	1040	;# 
  5899   000411                     WPUC            equ	1041	;# 
  5900   000412                     ODCONC          equ	1042	;# 
  5901   000413                     SLRCONC         equ	1043	;# 
  5902   000414                     INLVLC          equ	1044	;# 
  5903   000415                     IOCCP           equ	1045	;# 
  5904   000416                     IOCCN           equ	1046	;# 
  5905   000417                     IOCCF           equ	1047	;# 
  5906   000421                     WPUE            equ	1057	;# 
  5907   000424                     INLVLE          equ	1060	;# 
  5908   000425                     IOCEP           equ	1061	;# 
  5909   000426                     IOCEN           equ	1062	;# 
  5910   000427                     IOCEF           equ	1063	;# 
  5911   000440                     NCO1ACC         equ	1088	;# 
  5912   000440                     NCO1ACCL        equ	1088	;# 
  5913   000441                     NCO1ACCH        equ	1089	;# 
  5914   000442                     NCO1ACCU        equ	1090	;# 
  5915   000443                     NCO1INC         equ	1091	;# 
  5916   000443                     NCO1INCL        equ	1091	;# 
  5917   000444                     NCO1INCH        equ	1092	;# 
  5918   000445                     NCO1INCU        equ	1093	;# 
  5919   000446                     NCO1CON         equ	1094	;# 
  5920   000447                     NCO1CLK         equ	1095	;# 
  5921   000448                     NCO2ACC         equ	1096	;# 
  5922   000448                     NCO2ACCL        equ	1096	;# 
  5923   000449                     NCO2ACCH        equ	1097	;# 
  5924   00044A                     NCO2ACCU        equ	1098	;# 
  5925   00044B                     NCO2INC         equ	1099	;# 
  5926   00044B                     NCO2INCL        equ	1099	;# 
  5927   00044C                     NCO2INCH        equ	1100	;# 
  5928   00044D                     NCO2INCU        equ	1101	;# 
  5929   00044E                     NCO2CON         equ	1102	;# 
  5930   00044F                     NCO2CLK         equ	1103	;# 
  5931   000450                     NCO3ACC         equ	1104	;# 
  5932   000450                     NCO3ACCL        equ	1104	;# 
  5933   000451                     NCO3ACCH        equ	1105	;# 
  5934   000452                     NCO3ACCU        equ	1106	;# 
  5935   000453                     NCO3INC         equ	1107	;# 
  5936   000453                     NCO3INCL        equ	1107	;# 
  5937   000454                     NCO3INCH        equ	1108	;# 
  5938   000455                     NCO3INCU        equ	1109	;# 
  5939   000456                     NCO3CON         equ	1110	;# 
  5940   000457                     NCO3CLK         equ	1111	;# 
  5941   000458                     FSCMCON         equ	1112	;# 
  5942   000459                     IVTLOCK         equ	1113	;# 
  5943   00045A                     IVTAD           equ	1114	;# 
  5944   00045A                     IVTADL          equ	1114	;# 
  5945   00045B                     IVTADH          equ	1115	;# 
  5946   00045C                     IVTADU          equ	1116	;# 
  5947   00045D                     IVTBASE         equ	1117	;# 
  5948   00045D                     IVTBASEL        equ	1117	;# 
  5949   00045E                     IVTBASEH        equ	1118	;# 
  5950   00045F                     IVTBASEU        equ	1119	;# 
  5951   000460                     PWM1ERS         equ	1120	;# 
  5952   000461                     PWM1CLK         equ	1121	;# 
  5953   000462                     PWM1LDS         equ	1122	;# 
  5954   000463                     PWM1PR          equ	1123	;# 
  5955   000463                     PWM1PRL         equ	1123	;# 
  5956   000464                     PWM1PRH         equ	1124	;# 
  5957   000465                     PWM1CPRE        equ	1125	;# 
  5958   000466                     PWM1PIPOS       equ	1126	;# 
  5959   000467                     PWM1GIR         equ	1127	;# 
  5960   000468                     PWM1GIE         equ	1128	;# 
  5961   000469                     PWM1CON         equ	1129	;# 
  5962   00046A                     PWM1S1CFG       equ	1130	;# 
  5963   00046B                     PWM1S1P1        equ	1131	;# 
  5964   00046B                     PWM1S1P1L       equ	1131	;# 
  5965   00046C                     PWM1S1P1H       equ	1132	;# 
  5966   00046D                     PWM1S1P2        equ	1133	;# 
  5967   00046D                     PWM1S1P2L       equ	1133	;# 
  5968   00046E                     PWM1S1P2H       equ	1134	;# 
  5969   00046F                     PWM2ERS         equ	1135	;# 
  5970   000470                     PWM2CLK         equ	1136	;# 
  5971   000471                     PWM2LDS         equ	1137	;# 
  5972   000472                     PWM2PR          equ	1138	;# 
  5973   000472                     PWM2PRL         equ	1138	;# 
  5974   000473                     PWM2PRH         equ	1139	;# 
  5975   000474                     PWM2CPRE        equ	1140	;# 
  5976   000475                     PWM2PIPOS       equ	1141	;# 
  5977   000476                     PWM2GIR         equ	1142	;# 
  5978   000477                     PWM2GIE         equ	1143	;# 
  5979   000478                     PWM2CON         equ	1144	;# 
  5980   000479                     PWM2S1CFG       equ	1145	;# 
  5981   00047A                     PWM2S1P1        equ	1146	;# 
  5982   00047A                     PWM2S1P1L       equ	1146	;# 
  5983   00047B                     PWM2S1P1H       equ	1147	;# 
  5984   00047C                     PWM2S1P2        equ	1148	;# 
  5985   00047C                     PWM2S1P2L       equ	1148	;# 
  5986   00047D                     PWM2S1P2H       equ	1149	;# 
  5987   00047E                     PWM3ERS         equ	1150	;# 
  5988   00047F                     PWM3CLK         equ	1151	;# 
  5989   000480                     PWM3LDS         equ	1152	;# 
  5990   000481                     PWM3PR          equ	1153	;# 
  5991   000481                     PWM3PRL         equ	1153	;# 
  5992   000482                     PWM3PRH         equ	1154	;# 
  5993   000483                     PWM3CPRE        equ	1155	;# 
  5994   000484                     PWM3PIPOS       equ	1156	;# 
  5995   000485                     PWM3GIR         equ	1157	;# 
  5996   000486                     PWM3GIE         equ	1158	;# 
  5997   000487                     PWM3CON         equ	1159	;# 
  5998   000488                     PWM3S1CFG       equ	1160	;# 
  5999   000489                     PWM3S1P1        equ	1161	;# 
  6000   000489                     PWM3S1P1L       equ	1161	;# 
  6001   00048A                     PWM3S1P1H       equ	1162	;# 
  6002   00048B                     PWM3S1P2        equ	1163	;# 
  6003   00048B                     PWM3S1P2L       equ	1163	;# 
  6004   00048C                     PWM3S1P2H       equ	1164	;# 
  6005   00048D                     PWM4ERS         equ	1165	;# 
  6006   00048E                     PWM4CLK         equ	1166	;# 
  6007   00048F                     PWM4LDS         equ	1167	;# 
  6008   000490                     PWM4PR          equ	1168	;# 
  6009   000490                     PWM4PRL         equ	1168	;# 
  6010   000491                     PWM4PRH         equ	1169	;# 
  6011   000492                     PWM4CPRE        equ	1170	;# 
  6012   000493                     PWM4PIPOS       equ	1171	;# 
  6013   000494                     PWM4GIR         equ	1172	;# 
  6014   000495                     PWM4GIE         equ	1173	;# 
  6015   000496                     PWM4CON         equ	1174	;# 
  6016   000497                     PWM4S1CFG       equ	1175	;# 
  6017   000498                     PWM4S1P1        equ	1176	;# 
  6018   000498                     PWM4S1P1L       equ	1176	;# 
  6019   000499                     PWM4S1P1H       equ	1177	;# 
  6020   00049A                     PWM4S1P2        equ	1178	;# 
  6021   00049A                     PWM4S1P2L       equ	1178	;# 
  6022   00049B                     PWM4S1P2H       equ	1179	;# 
  6023   00049C                     PWMLOAD         equ	1180	;# 
  6024   00049D                     PWMEN           equ	1181	;# 
  6025   00049E                     PIE0            equ	1182	;# 
  6026   00049F                     PIE1            equ	1183	;# 
  6027   0004A0                     PIE2            equ	1184	;# 
  6028   0004A1                     PIE3            equ	1185	;# 
  6029   0004A2                     PIE4            equ	1186	;# 
  6030   0004A3                     PIE5            equ	1187	;# 
  6031   0004A4                     PIE6            equ	1188	;# 
  6032   0004A5                     PIE7            equ	1189	;# 
  6033   0004A6                     PIE8            equ	1190	;# 
  6034   0004A7                     PIE9            equ	1191	;# 
  6035   0004A8                     PIE10           equ	1192	;# 
  6036   0004A9                     PIE11           equ	1193	;# 
  6037   0004AA                     PIE12           equ	1194	;# 
  6038   0004AB                     PIE13           equ	1195	;# 
  6039   0004AC                     PIE14           equ	1196	;# 
  6040   0004AD                     PIE15           equ	1197	;# 
  6041   0004AE                     PIR0            equ	1198	;# 
  6042   0004AF                     PIR1            equ	1199	;# 
  6043   0004B0                     PIR2            equ	1200	;# 
  6044   0004B1                     PIR3            equ	1201	;# 
  6045   0004B2                     PIR4            equ	1202	;# 
  6046   0004B3                     PIR5            equ	1203	;# 
  6047   0004B4                     PIR6            equ	1204	;# 
  6048   0004B5                     PIR7            equ	1205	;# 
  6049   0004B6                     PIR8            equ	1206	;# 
  6050   0004B7                     PIR9            equ	1207	;# 
  6051   0004B8                     PIR10           equ	1208	;# 
  6052   0004B9                     PIR11           equ	1209	;# 
  6053   0004BA                     PIR12           equ	1210	;# 
  6054   0004BB                     PIR13           equ	1211	;# 
  6055   0004BC                     PIR14           equ	1212	;# 
  6056   0004BD                     PIR15           equ	1213	;# 
  6057   0004BE                     LATA            equ	1214	;# 
  6058   0004BF                     LATB            equ	1215	;# 
  6059   0004C0                     LATC            equ	1216	;# 
  6060   0004C6                     TRISA           equ	1222	;# 
  6061   0004C7                     TRISB           equ	1223	;# 
  6062   0004C8                     TRISC           equ	1224	;# 
  6063   0004CA                     TRISE           equ	1226	;# 
  6064   0004CE                     PORTA           equ	1230	;# 
  6065   0004CF                     PORTB           equ	1231	;# 
  6066   0004D0                     PORTC           equ	1232	;# 
  6067   0004D2                     PORTE           equ	1234	;# 
  6068   0004D6                     INTCON0         equ	1238	;# 
  6069   0004D7                     INTCON1         equ	1239	;# 
  6070   0004D8                     STATUS          equ	1240	;# 
  6071   0004D9                     FSR2            equ	1241	;# 
  6072   0004D9                     FSR2L           equ	1241	;# 
  6073   0004DA                     FSR2H           equ	1242	;# 
  6074   0004DB                     PLUSW2          equ	1243	;# 
  6075   0004DC                     PREINC2         equ	1244	;# 
  6076   0004DD                     POSTDEC2        equ	1245	;# 
  6077   0004DE                     POSTINC2        equ	1246	;# 
  6078   0004DF                     INDF2           equ	1247	;# 
  6079   0004E0                     BSR             equ	1248	;# 
  6080   0004E1                     FSR1            equ	1249	;# 
  6081   0004E1                     FSR1L           equ	1249	;# 
  6082   0004E2                     FSR1H           equ	1250	;# 
  6083   0004E3                     PLUSW1          equ	1251	;# 
  6084   0004E4                     PREINC1         equ	1252	;# 
  6085   0004E5                     POSTDEC1        equ	1253	;# 
  6086   0004E6                     POSTINC1        equ	1254	;# 
  6087   0004E7                     INDF1           equ	1255	;# 
  6088   0004E8                     WREG            equ	1256	;# 
  6089   0004E9                     FSR0            equ	1257	;# 
  6090   0004E9                     FSR0L           equ	1257	;# 
  6091   0004EA                     FSR0H           equ	1258	;# 
  6092   0004EB                     PLUSW0          equ	1259	;# 
  6093   0004EC                     PREINC0         equ	1260	;# 
  6094   0004ED                     POSTDEC0        equ	1261	;# 
  6095   0004EE                     POSTINC0        equ	1262	;# 
  6096   0004EF                     INDF0           equ	1263	;# 
  6097   0004F0                     PCON0           equ	1264	;# 
  6098   0004F1                     PCON1           equ	1265	;# 
  6099   0004F2                     CPUDOZE         equ	1266	;# 
  6100   0004F3                     PROD            equ	1267	;# 
  6101   0004F3                     PRODL           equ	1267	;# 
  6102   0004F4                     PRODH           equ	1268	;# 
  6103   0004F5                     TABLAT          equ	1269	;# 
  6104   0004F6                     TBLPTR          equ	1270	;# 
  6105   0004F6                     TBLPTRL         equ	1270	;# 
  6106   0004F7                     TBLPTRH         equ	1271	;# 
  6107   0004F8                     TBLPTRU         equ	1272	;# 
  6108   0004F9                     PCLAT           equ	1273	;# 
  6109   0004F9                     PCL             equ	1273	;# 
  6110   0004FA                     PCLATH          equ	1274	;# 
  6111   0004FB                     PCLATU          equ	1275	;# 
  6112   0004FC                     STKPTR          equ	1276	;# 
  6113   0004FD                     TOS             equ	1277	;# 
  6114   0004FD                     TOSL            equ	1277	;# 
  6115   0004FE                     TOSH            equ	1278	;# 
  6116   0004FF                     TOSU            equ	1279	;# 
  6117   000038                     BOOTREG         equ	56	;# 
  6118   000039                     CLKRCON         equ	57	;# 
  6119   00003A                     CLKRCLK         equ	58	;# 
  6120   000040                     NVMCON0         equ	64	;# 
  6121   000041                     NVMCON1         equ	65	;# 
  6122   000042                     NVMLOCK         equ	66	;# 
  6123   000043                     NVMADR          equ	67	;# 
  6124   000043                     NVMADRL         equ	67	;# 
  6125   000044                     NVMADRH         equ	68	;# 
  6126   000045                     NVMADRU         equ	69	;# 
  6127   000046                     NVMDAT          equ	70	;# 
  6128   000046                     NVMDATL         equ	70	;# 
  6129   000047                     NVMDATH         equ	71	;# 
  6130   000048                     VREGCON         equ	72	;# 
  6131   000049                     BORCON          equ	73	;# 
  6132   00004A                     HLVDCON0        equ	74	;# 
  6133   00004B                     HLVDCON1        equ	75	;# 
  6134   00004C                     ZCDCON          equ	76	;# 
  6135   000060                     PMD0            equ	96	;# 
  6136   000061                     PMD1            equ	97	;# 
  6137   000062                     PMD2            equ	98	;# 
  6138   000063                     PMD3            equ	99	;# 
  6139   000064                     PMD4            equ	100	;# 
  6140   000065                     PMD5            equ	101	;# 
  6141   000066                     PMD6            equ	102	;# 
  6142   000067                     PMD7            equ	103	;# 
  6143   000068                     PMD8            equ	104	;# 
  6144   00006A                     MD1CON0         equ	106	;# 
  6145   00006B                     MD1CON1         equ	107	;# 
  6146   00006C                     MD1SRC          equ	108	;# 
  6147   00006D                     MD1CARL         equ	109	;# 
  6148   00006E                     MD1CARH         equ	110	;# 
  6149   00006F                     CMOUT           equ	111	;# 
  6150   000070                     CM1CON0         equ	112	;# 
  6151   000071                     CM1CON1         equ	113	;# 
  6152   000072                     CM1NCH          equ	114	;# 
  6153   000073                     CM1PCH          equ	115	;# 
  6154   000074                     CM2CON0         equ	116	;# 
  6155   000075                     CM2CON1         equ	117	;# 
  6156   000076                     CM2NCH          equ	118	;# 
  6157   000077                     CM2PCH          equ	119	;# 
  6158   000078                     WDTCON0         equ	120	;# 
  6159   000079                     WDTCON1         equ	121	;# 
  6160   00007A                     WDTPSL          equ	122	;# 
  6161   00007B                     WDTPSH          equ	123	;# 
  6162   00007C                     WDTTMR          equ	124	;# 
  6163   00007D                     DAC1DAT         equ	125	;# 
  6164   00007D                     DAC1DATL        equ	125	;# 
  6165   00007F                     DAC1CON         equ	127	;# 
  6166   000080                     SPI1RXB         equ	128	;# 
  6167   000081                     SPI1TXB         equ	129	;# 
  6168   000082                     SPI1TCNT        equ	130	;# 
  6169   000082                     SPI1TCNTL       equ	130	;# 
  6170   000083                     SPI1TCNTH       equ	131	;# 
  6171   000084                     SPI1CON0        equ	132	;# 
  6172   000085                     SPI1CON1        equ	133	;# 
  6173   000086                     SPI1CON2        equ	134	;# 
  6174   000087                     SPI1STATUS      equ	135	;# 
  6175   000088                     SPI1TWIDTH      equ	136	;# 
  6176   000089                     SPI1BAUD        equ	137	;# 
  6177   00008A                     SPI1INTF        equ	138	;# 
  6178   00008B                     SPI1INTE        equ	139	;# 
  6179   00008C                     SPI1CLK         equ	140	;# 
  6180   00008D                     SPI2RXB         equ	141	;# 
  6181   00008E                     SPI2TXB         equ	142	;# 
  6182   00008F                     SPI2TCNT        equ	143	;# 
  6183   00008F                     SPI2TCNTL       equ	143	;# 
  6184   000090                     SPI2TCNTH       equ	144	;# 
  6185   000091                     SPI2CON0        equ	145	;# 
  6186   000092                     SPI2CON1        equ	146	;# 
  6187   000093                     SPI2CON2        equ	147	;# 
  6188   000094                     SPI2STATUS      equ	148	;# 
  6189   000095                     SPI2TWIDTH      equ	149	;# 
  6190   000096                     SPI2BAUD        equ	150	;# 
  6191   000097                     SPI2INTF        equ	151	;# 
  6192   000098                     SPI2INTE        equ	152	;# 
  6193   000099                     SPI2CLK         equ	153	;# 
  6194   0000AC                     ACTCON          equ	172	;# 
  6195   0000AD                     OSCCON1         equ	173	;# 
  6196   0000AE                     OSCCON2         equ	174	;# 
  6197   0000AF                     OSCCON3         equ	175	;# 
  6198   0000B0                     OSCTUNE         equ	176	;# 
  6199   0000B1                     OSCFRQ          equ	177	;# 
  6200   0000B1                     OSCFREQ         equ	177	;# 
  6201   0000B2                     OSCSTAT         equ	178	;# 
  6202   0000B2                     OSCSTAT1        equ	178	;# 
  6203   0000B3                     OSCEN           equ	179	;# 
  6204   0000B4                     PRLOCK          equ	180	;# 
  6205   0000B5                     SCANPR          equ	181	;# 
  6206   0000B6                     DMA1PR          equ	182	;# 
  6207   0000B7                     DMA2PR          equ	183	;# 
  6208   0000B8                     DMA3PR          equ	184	;# 
  6209   0000B9                     DMA4PR          equ	185	;# 
  6210   0000BA                     DMA5PR          equ	186	;# 
  6211   0000BB                     DMA6PR          equ	187	;# 
  6212   0000BC                     DMA7PR          equ	188	;# 
  6213   0000BD                     DMA8PR          equ	189	;# 
  6214   0000BE                     MAINPR          equ	190	;# 
  6215   0000BF                     ISRPR           equ	191	;# 
  6216   0000D4                     CLCDATA         equ	212	;# 
  6217   0000D5                     CLCSELECT       equ	213	;# 
  6218   0000D6                     CLCnCON         equ	214	;# 
  6219   0000D7                     CLCnPOL         equ	215	;# 
  6220   0000D8                     CLCnSEL0        equ	216	;# 
  6221   0000D9                     CLCnSEL1        equ	217	;# 
  6222   0000DA                     CLCnSEL2        equ	218	;# 
  6223   0000DB                     CLCnSEL3        equ	219	;# 
  6224   0000DC                     CLCnGLS0        equ	220	;# 
  6225   0000DD                     CLCnGLS1        equ	221	;# 
  6226   0000DE                     CLCnGLS2        equ	222	;# 
  6227   0000DF                     CLCnGLS3        equ	223	;# 
  6228   0000E8                     DMASELECT       equ	232	;# 
  6229   0000E9                     DMAnBUF         equ	233	;# 
  6230   0000EA                     DMAnDCNT        equ	234	;# 
  6231   0000EA                     DMAnDCNTL       equ	234	;# 
  6232   0000EB                     DMAnDCNTH       equ	235	;# 
  6233   0000EC                     DMAnDPTR        equ	236	;# 
  6234   0000EC                     DMAnDPTRL       equ	236	;# 
  6235   0000ED                     DMAnDPTRH       equ	237	;# 
  6236   0000EE                     DMAnDSZ         equ	238	;# 
  6237   0000EE                     DMAnDSZL        equ	238	;# 
  6238   0000EF                     DMAnDSZH        equ	239	;# 
  6239   0000F0                     DMAnDSA         equ	240	;# 
  6240   0000F0                     DMAnDSAL        equ	240	;# 
  6241   0000F1                     DMAnDSAH        equ	241	;# 
  6242   0000F2                     DMAnSCNT        equ	242	;# 
  6243   0000F2                     DMAnSCNTL       equ	242	;# 
  6244   0000F3                     DMAnSCNTH       equ	243	;# 
  6245   0000F4                     DMAnSPTR        equ	244	;# 
  6246   0000F4                     DMAnSPTRL       equ	244	;# 
  6247   0000F5                     DMAnSPTRH       equ	245	;# 
  6248   0000F6                     DMAnSPTRU       equ	246	;# 
  6249   0000F7                     DMAnSSZ         equ	247	;# 
  6250   0000F7                     DMAnSSZL        equ	247	;# 
  6251   0000F8                     DMAnSSZH        equ	248	;# 
  6252   0000F9                     DMAnSSA         equ	249	;# 
  6253   0000F9                     DMAnSSAL        equ	249	;# 
  6254   0000FA                     DMAnSSAH        equ	250	;# 
  6255   0000FB                     DMAnSSAU        equ	251	;# 
  6256   0000FC                     DMAnCON0        equ	252	;# 
  6257   0000FD                     DMAnCON1        equ	253	;# 
  6258   0000FE                     DMAnAIRQ        equ	254	;# 
  6259   0000FF                     DMAnSIRQ        equ	255	;# 
  6260   000100                     C1CONL          equ	256	;# 
  6261   000101                     C1CONH          equ	257	;# 
  6262   000102                     C1CONU          equ	258	;# 
  6263   000103                     C1CONT          equ	259	;# 
  6264   000104                     C1NBTCFGL       equ	260	;# 
  6265   000105                     C1NBTCFGH       equ	261	;# 
  6266   000106                     C1NBTCFGU       equ	262	;# 
  6267   000107                     C1NBTCFGT       equ	263	;# 
  6268   000108                     C1DBTCFGL       equ	264	;# 
  6269   000109                     C1DBTCFGH       equ	265	;# 
  6270   00010A                     C1DBTCFGU       equ	266	;# 
  6271   00010B                     C1DBTCFGT       equ	267	;# 
  6272   00010C                     C1TDCL          equ	268	;# 
  6273   00010D                     C1TDCH          equ	269	;# 
  6274   00010E                     C1TDCU          equ	270	;# 
  6275   000110                     C1TBC           equ	272	;# 
  6276   000110                     C1TBCL          equ	272	;# 
  6277   000111                     C1TBCH          equ	273	;# 
  6278   000112                     C1TBCU          equ	274	;# 
  6279   000113                     C1TBCT          equ	275	;# 
  6280   000114                     C1TSCONL        equ	276	;# 
  6281   000115                     C1TSCONH        equ	277	;# 
  6282   000116                     C1TSCONU        equ	278	;# 
  6283   000117                     C1TSCONT        equ	279	;# 
  6284   000118                     C1VECL          equ	280	;# 
  6285   000119                     C1VECH          equ	281	;# 
  6286   00011A                     C1VECU          equ	282	;# 
  6287   00011B                     C1VECT          equ	283	;# 
  6288   00011C                     C1INTL          equ	284	;# 
  6289   00011D                     C1INTH          equ	285	;# 
  6290   00011E                     C1INTU          equ	286	;# 
  6291   00011F                     C1INTT          equ	287	;# 
  6292   000120                     C1RXIF          equ	288	;# 
  6293   000120                     C1RXIFL         equ	288	;# 
  6294   000121                     C1RXIFH         equ	289	;# 
  6295   000122                     C1RXIFU         equ	290	;# 
  6296   000123                     C1RXIFT         equ	291	;# 
  6297   000124                     C1TXIF          equ	292	;# 
  6298   000124                     C1TXIFL         equ	292	;# 
  6299   000125                     C1TXIFH         equ	293	;# 
  6300   000126                     C1TXIFU         equ	294	;# 
  6301   000127                     C1TXIFT         equ	295	;# 
  6302   000128                     C1RXOVIF        equ	296	;# 
  6303   000128                     C1RXOVIFL       equ	296	;# 
  6304   000129                     C1RXOVIFH       equ	297	;# 
  6305   00012A                     C1RXOVIFU       equ	298	;# 
  6306   00012B                     C1RXOVIFT       equ	299	;# 
  6307   00012C                     C1TXATIF        equ	300	;# 
  6308   00012C                     C1TXATIFL       equ	300	;# 
  6309   00012D                     C1TXATIFH       equ	301	;# 
  6310   00012E                     C1TXATIFU       equ	302	;# 
  6311   00012F                     C1TXATIFT       equ	303	;# 
  6312   000130                     C1TXREQ         equ	304	;# 
  6313   000130                     C1TXREQL        equ	304	;# 
  6314   000131                     C1TXREQH        equ	305	;# 
  6315   000132                     C1TXREQU        equ	306	;# 
  6316   000133                     C1TXREQT        equ	307	;# 
  6317   000134                     C1TRECL         equ	308	;# 
  6318   000135                     C1TRECH         equ	309	;# 
  6319   000136                     C1TRECU         equ	310	;# 
  6320   000137                     C1TRECT         equ	311	;# 
  6321   000138                     C1BDIAG0L       equ	312	;# 
  6322   000139                     C1BDIAG0H       equ	313	;# 
  6323   00013C                     C1BDIAG1L       equ	316	;# 
  6324   00013D                     C1BDIAG1H       equ	317	;# 
  6325   00013E                     C1BDIAG1U       equ	318	;# 
  6326   00013F                     C1BDIAG1T       equ	319	;# 
  6327   000140                     C1TEFCONL       equ	320	;# 
  6328   000141                     C1TEFCONH       equ	321	;# 
  6329   000142                     C1TEFCONU       equ	322	;# 
  6330   000143                     C1TEFCONT       equ	323	;# 
  6331   000144                     C1TEFSTAL       equ	324	;# 
  6332   000145                     C1TEFSTAH       equ	325	;# 
  6333   000146                     C1TEFSTAU       equ	326	;# 
  6334   000147                     C1TEFSTAT       equ	327	;# 
  6335   000148                     C1TEFUA         equ	328	;# 
  6336   000148                     C1TEFUAL        equ	328	;# 
  6337   000149                     C1TEFUAH        equ	329	;# 
  6338   00014A                     C1TEFUAU        equ	330	;# 
  6339   00014B                     C1TEFUAT        equ	331	;# 
  6340   00014C                     C1FIFOBA        equ	332	;# 
  6341   00014C                     C1FIFOBAL       equ	332	;# 
  6342   00014D                     C1FIFOBAH       equ	333	;# 
  6343   00014E                     C1FIFOBAU       equ	334	;# 
  6344   00014F                     C1FIFOBAT       equ	335	;# 
  6345   000150                     C1TXQCONL       equ	336	;# 
  6346   000151                     C1TXQCONH       equ	337	;# 
  6347   000152                     C1TXQCONU       equ	338	;# 
  6348   000153                     C1TXQCONT       equ	339	;# 
  6349   000154                     C1TXQSTAL       equ	340	;# 
  6350   000155                     C1TXQSTAH       equ	341	;# 
  6351   000156                     C1TXQSTAU       equ	342	;# 
  6352   000157                     C1TXQSTAT       equ	343	;# 
  6353   000158                     C1TXQUA         equ	344	;# 
  6354   000158                     C1TXQUAL        equ	344	;# 
  6355   000159                     C1TXQUAH        equ	345	;# 
  6356   00015A                     C1TXQUAU        equ	346	;# 
  6357   00015B                     C1TXQUAT        equ	347	;# 
  6358   00015C                     C1FIFOCON1      equ	348	;# 
  6359   00015C                     C1FIFOCON1L     equ	348	;# 
  6360   00015D                     C1FIFOCON1H     equ	349	;# 
  6361   00015E                     C1FIFOCON1U     equ	350	;# 
  6362   00015F                     C1FIFOCON1T     equ	351	;# 
  6363   000160                     C1FIFOSTA1      equ	352	;# 
  6364   000160                     C1FIFOSTA1L     equ	352	;# 
  6365   000161                     C1FIFOSTA1H     equ	353	;# 
  6366   000162                     C1FIFOSTA1U     equ	354	;# 
  6367   000163                     C1FIFOSTA1T     equ	355	;# 
  6368   000164                     C1FIFOUA1       equ	356	;# 
  6369   000164                     C1FIFOUA1L      equ	356	;# 
  6370   000165                     C1FIFOUA1H      equ	357	;# 
  6371   000166                     C1FIFOUA1U      equ	358	;# 
  6372   000167                     C1FIFOUA1T      equ	359	;# 
  6373   000168                     C1FIFOCON2      equ	360	;# 
  6374   000168                     C1FIFOCON2L     equ	360	;# 
  6375   000169                     C1FIFOCON2H     equ	361	;# 
  6376   00016A                     C1FIFOCON2U     equ	362	;# 
  6377   00016B                     C1FIFOCON2T     equ	363	;# 
  6378   00016C                     C1FIFOSTA2      equ	364	;# 
  6379   00016C                     C1FIFOSTA2L     equ	364	;# 
  6380   00016D                     C1FIFOSTA2H     equ	365	;# 
  6381   00016E                     C1FIFOSTA2U     equ	366	;# 
  6382   00016F                     C1FIFOSTA2T     equ	367	;# 
  6383   000170                     C1FIFOUA2       equ	368	;# 
  6384   000170                     C1FIFOUA2L      equ	368	;# 
  6385   000171                     C1FIFOUA2H      equ	369	;# 
  6386   000172                     C1FIFOUA2U      equ	370	;# 
  6387   000173                     C1FIFOUA2T      equ	371	;# 
  6388   000174                     C1FIFOCON3      equ	372	;# 
  6389   000174                     C1FIFOCON3L     equ	372	;# 
  6390   000175                     C1FIFOCON3H     equ	373	;# 
  6391   000176                     C1FIFOCON3U     equ	374	;# 
  6392   000177                     C1FIFOCON3T     equ	375	;# 
  6393   000178                     C1FIFOSTA3      equ	376	;# 
  6394   000178                     C1FIFOSTA3L     equ	376	;# 
  6395   000179                     C1FIFOSTA3H     equ	377	;# 
  6396   00017A                     C1FIFOSTA3U     equ	378	;# 
  6397   00017B                     C1FIFOSTA3T     equ	379	;# 
  6398   00017C                     C1FIFOUA3       equ	380	;# 
  6399   00017C                     C1FIFOUA3L      equ	380	;# 
  6400   00017D                     C1FIFOUA3H      equ	381	;# 
  6401   00017E                     C1FIFOUA3U      equ	382	;# 
  6402   00017F                     C1FIFOUA3T      equ	383	;# 
  6403   000180                     C1FLTCON0L      equ	384	;# 
  6404   000181                     C1FLTCON0H      equ	385	;# 
  6405   000182                     C1FLTCON0U      equ	386	;# 
  6406   000183                     C1FLTCON0T      equ	387	;# 
  6407   000184                     C1FLTCON1L      equ	388	;# 
  6408   000185                     C1FLTCON1H      equ	389	;# 
  6409   000186                     C1FLTCON1U      equ	390	;# 
  6410   000187                     C1FLTCON1T      equ	391	;# 
  6411   000188                     C1FLTCON2L      equ	392	;# 
  6412   000189                     C1FLTCON2H      equ	393	;# 
  6413   00018A                     C1FLTCON2U      equ	394	;# 
  6414   00018B                     C1FLTCON2T      equ	395	;# 
  6415   00018C                     C1FLTOBJ0       equ	396	;# 
  6416   00018C                     C1FLTOBJ0L      equ	396	;# 
  6417   00018D                     C1FLTOBJ0H      equ	397	;# 
  6418   00018E                     C1FLTOBJ0U      equ	398	;# 
  6419   00018F                     C1FLTOBJ0T      equ	399	;# 
  6420   000190                     C1MASK0         equ	400	;# 
  6421   000190                     C1MASK0L        equ	400	;# 
  6422   000191                     C1MASK0H        equ	401	;# 
  6423   000192                     C1MASK0U        equ	402	;# 
  6424   000193                     C1MASK0T        equ	403	;# 
  6425   000194                     C1FLTOBJ1       equ	404	;# 
  6426   000194                     C1FLTOBJ1L      equ	404	;# 
  6427   000195                     C1FLTOBJ1H      equ	405	;# 
  6428   000196                     C1FLTOBJ1U      equ	406	;# 
  6429   000197                     C1FLTOBJ1T      equ	407	;# 
  6430   000198                     C1MASK1         equ	408	;# 
  6431   000198                     C1MASK1L        equ	408	;# 
  6432   000199                     C1MASK1H        equ	409	;# 
  6433   00019A                     C1MASK1U        equ	410	;# 
  6434   00019B                     C1MASK1T        equ	411	;# 
  6435   00019C                     C1FLTOBJ2       equ	412	;# 
  6436   00019C                     C1FLTOBJ2L      equ	412	;# 
  6437   00019D                     C1FLTOBJ2H      equ	413	;# 
  6438   00019E                     C1FLTOBJ2U      equ	414	;# 
  6439   00019F                     C1FLTOBJ2T      equ	415	;# 
  6440   0001A0                     C1MASK2         equ	416	;# 
  6441   0001A0                     C1MASK2L        equ	416	;# 
  6442   0001A1                     C1MASK2H        equ	417	;# 
  6443   0001A2                     C1MASK2U        equ	418	;# 
  6444   0001A3                     C1MASK2T        equ	419	;# 
  6445   0001A4                     C1FLTOBJ3       equ	420	;# 
  6446   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6447   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6448   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6449   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6450   0001A8                     C1MASK3         equ	424	;# 
  6451   0001A8                     C1MASK3L        equ	424	;# 
  6452   0001A9                     C1MASK3H        equ	425	;# 
  6453   0001AA                     C1MASK3U        equ	426	;# 
  6454   0001AB                     C1MASK3T        equ	427	;# 
  6455   0001AC                     C1FLTOBJ4       equ	428	;# 
  6456   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6457   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6458   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6459   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6460   0001B0                     C1MASK4         equ	432	;# 
  6461   0001B0                     C1MASK4L        equ	432	;# 
  6462   0001B1                     C1MASK4H        equ	433	;# 
  6463   0001B2                     C1MASK4U        equ	434	;# 
  6464   0001B3                     C1MASK4T        equ	435	;# 
  6465   0001B4                     C1FLTOBJ5       equ	436	;# 
  6466   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6467   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6468   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6469   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6470   0001B8                     C1MASK5         equ	440	;# 
  6471   0001B8                     C1MASK5L        equ	440	;# 
  6472   0001B9                     C1MASK5H        equ	441	;# 
  6473   0001BA                     C1MASK5U        equ	442	;# 
  6474   0001BB                     C1MASK5T        equ	443	;# 
  6475   0001BC                     C1FLTOBJ6       equ	444	;# 
  6476   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6477   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6478   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6479   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6480   0001C0                     C1MASK6         equ	448	;# 
  6481   0001C0                     C1MASK6L        equ	448	;# 
  6482   0001C1                     C1MASK6H        equ	449	;# 
  6483   0001C2                     C1MASK6U        equ	450	;# 
  6484   0001C3                     C1MASK6T        equ	451	;# 
  6485   0001C4                     C1FLTOBJ7       equ	452	;# 
  6486   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6487   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6488   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6489   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6490   0001C8                     C1MASK7         equ	456	;# 
  6491   0001C8                     C1MASK7L        equ	456	;# 
  6492   0001C9                     C1MASK7H        equ	457	;# 
  6493   0001CA                     C1MASK7U        equ	458	;# 
  6494   0001CB                     C1MASK7T        equ	459	;# 
  6495   0001CC                     C1FLTOBJ8       equ	460	;# 
  6496   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6497   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6498   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6499   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6500   0001D0                     C1MASK8         equ	464	;# 
  6501   0001D0                     C1MASK8L        equ	464	;# 
  6502   0001D1                     C1MASK8H        equ	465	;# 
  6503   0001D2                     C1MASK8U        equ	466	;# 
  6504   0001D3                     C1MASK8T        equ	467	;# 
  6505   0001D4                     C1FLTOBJ9       equ	468	;# 
  6506   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6507   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6508   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6509   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6510   0001D8                     C1MASK9         equ	472	;# 
  6511   0001D8                     C1MASK9L        equ	472	;# 
  6512   0001D9                     C1MASK9H        equ	473	;# 
  6513   0001DA                     C1MASK9U        equ	474	;# 
  6514   0001DB                     C1MASK9T        equ	475	;# 
  6515   0001DC                     C1FLTOBJ10      equ	476	;# 
  6516   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6517   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6518   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6519   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6520   0001E0                     C1MASK10        equ	480	;# 
  6521   0001E0                     C1MASK10L       equ	480	;# 
  6522   0001E1                     C1MASK10H       equ	481	;# 
  6523   0001E2                     C1MASK10U       equ	482	;# 
  6524   0001E3                     C1MASK10T       equ	483	;# 
  6525   0001E4                     C1FLTOBJ11      equ	484	;# 
  6526   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6527   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6528   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6529   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6530   0001E8                     C1MASK11        equ	488	;# 
  6531   0001E8                     C1MASK11L       equ	488	;# 
  6532   0001E9                     C1MASK11H       equ	489	;# 
  6533   0001EA                     C1MASK11U       equ	490	;# 
  6534   0001EB                     C1MASK11T       equ	491	;# 
  6535   000200                     PPSLOCK         equ	512	;# 
  6536   000201                     RA0PPS          equ	513	;# 
  6537   000202                     RA1PPS          equ	514	;# 
  6538   000203                     RA2PPS          equ	515	;# 
  6539   000204                     RA3PPS          equ	516	;# 
  6540   000205                     RA4PPS          equ	517	;# 
  6541   000206                     RA5PPS          equ	518	;# 
  6542   000207                     RA6PPS          equ	519	;# 
  6543   000208                     RA7PPS          equ	520	;# 
  6544   000209                     RB0PPS          equ	521	;# 
  6545   00020A                     RB1PPS          equ	522	;# 
  6546   00020B                     RB2PPS          equ	523	;# 
  6547   00020C                     RB3PPS          equ	524	;# 
  6548   00020D                     RB4PPS          equ	525	;# 
  6549   00020E                     RB5PPS          equ	526	;# 
  6550   00020F                     RB6PPS          equ	527	;# 
  6551   000210                     RB7PPS          equ	528	;# 
  6552   000211                     RC0PPS          equ	529	;# 
  6553   000212                     RC1PPS          equ	530	;# 
  6554   000213                     RC2PPS          equ	531	;# 
  6555   000214                     RC3PPS          equ	532	;# 
  6556   000215                     RC4PPS          equ	533	;# 
  6557   000216                     RC5PPS          equ	534	;# 
  6558   000217                     RC6PPS          equ	535	;# 
  6559   000218                     RC7PPS          equ	536	;# 
  6560   00023D                     CANRXPPS        equ	573	;# 
  6561   00023E                     INT0PPS         equ	574	;# 
  6562   00023F                     INT1PPS         equ	575	;# 
  6563   000240                     INT2PPS         equ	576	;# 
  6564   000241                     T0CKIPPS        equ	577	;# 
  6565   000242                     T1CKIPPS        equ	578	;# 
  6566   000243                     T1GPPS          equ	579	;# 
  6567   000244                     T3CKIPPS        equ	580	;# 
  6568   000245                     T3GPPS          equ	581	;# 
  6569   000246                     T5CKIPPS        equ	582	;# 
  6570   000247                     T5GPPS          equ	583	;# 
  6571   000248                     T2INPPS         equ	584	;# 
  6572   000249                     T4INPPS         equ	585	;# 
  6573   00024A                     T6INPPS         equ	586	;# 
  6574   00024B                     TUIN0PPS        equ	587	;# 
  6575   00024C                     TUIN1PPS        equ	588	;# 
  6576   00024F                     CCP1PPS         equ	591	;# 
  6577   000250                     CCP2PPS         equ	592	;# 
  6578   000251                     CCP3PPS         equ	593	;# 
  6579   000253                     PWM1ERSPPS      equ	595	;# 
  6580   000254                     PWM2ERSPPS      equ	596	;# 
  6581   000255                     PWM3ERSPPS      equ	597	;# 
  6582   000256                     PWM4ERSPPS      equ	598	;# 
  6583   000257                     PWMIN0PPS       equ	599	;# 
  6584   000258                     PWMIN1PPS       equ	600	;# 
  6585   000259                     SMT1WINPPS      equ	601	;# 
  6586   00025A                     SMT1SIGPPS      equ	602	;# 
  6587   00025B                     CWG1PPS         equ	603	;# 
  6588   00025B                     CWG1INPPS       equ	603	;# 
  6589   00025C                     CWG2PPS         equ	604	;# 
  6590   00025C                     CWG2INPPS       equ	604	;# 
  6591   00025D                     CWG3PPS         equ	605	;# 
  6592   00025D                     CWG3INPPS       equ	605	;# 
  6593   00025E                     MD1CARLPPS      equ	606	;# 
  6594   00025E                     MDCARLPPS       equ	606	;# 
  6595   00025F                     MD1CARHPPS      equ	607	;# 
  6596   00025F                     MDCARHPPS       equ	607	;# 
  6597   000260                     MD1SRCPPS       equ	608	;# 
  6598   000260                     MDSRCPPS        equ	608	;# 
  6599   000261                     CLCIN0PPS       equ	609	;# 
  6600   000262                     CLCIN1PPS       equ	610	;# 
  6601   000263                     CLCIN2PPS       equ	611	;# 
  6602   000264                     CLCIN3PPS       equ	612	;# 
  6603   000265                     CLCIN4PPS       equ	613	;# 
  6604   000266                     CLCIN5PPS       equ	614	;# 
  6605   000267                     CLCIN6PPS       equ	615	;# 
  6606   000268                     CLCIN7PPS       equ	616	;# 
  6607   000269                     ADACTPPS        equ	617	;# 
  6608   00026A                     SPI1SCKPPS      equ	618	;# 
  6609   00026B                     SPI1SDIPPS      equ	619	;# 
  6610   00026C                     SPI1SSPPS       equ	620	;# 
  6611   00026D                     SPI2SCKPPS      equ	621	;# 
  6612   00026E                     SPI2SDIPPS      equ	622	;# 
  6613   00026F                     SPI2SSPPS       equ	623	;# 
  6614   000270                     I2C1SDAPPS      equ	624	;# 
  6615   000271                     I2C1SCLPPS      equ	625	;# 
  6616   000272                     U1RXPPS         equ	626	;# 
  6617   000273                     U1CTSPPS        equ	627	;# 
  6618   000274                     U2RXPPS         equ	628	;# 
  6619   000275                     U2CTSPPS        equ	629	;# 
  6620   000276                     U3RXPPS         equ	630	;# 
  6621   000277                     U3CTSPPS        equ	631	;# 
  6622   000278                     U4RXPPS         equ	632	;# 
  6623   000279                     U4CTSPPS        equ	633	;# 
  6624   00027A                     U5RXPPS         equ	634	;# 
  6625   00027B                     U5CTSPPS        equ	635	;# 
  6626   000286                     RC4I2C          equ	646	;# 
  6627   000287                     RC3I2C          equ	647	;# 
  6628   000288                     RB2I2C          equ	648	;# 
  6629   000289                     RB1I2C          equ	649	;# 
  6630   00028A                     I2C1RXB         equ	650	;# 
  6631   00028B                     I2C1TXB         equ	651	;# 
  6632   00028C                     I2C1CNTL        equ	652	;# 
  6633   00028D                     I2C1CNTH        equ	653	;# 
  6634   00028E                     I2C1ADB0        equ	654	;# 
  6635   00028F                     I2C1ADB1        equ	655	;# 
  6636   000290                     I2C1ADR0        equ	656	;# 
  6637   000291                     I2C1ADR1        equ	657	;# 
  6638   000292                     I2C1ADR2        equ	658	;# 
  6639   000293                     I2C1ADR3        equ	659	;# 
  6640   000294                     I2C1CON0        equ	660	;# 
  6641   000295                     I2C1CON1        equ	661	;# 
  6642   000296                     I2C1CON2        equ	662	;# 
  6643   000297                     I2C1ERR         equ	663	;# 
  6644   000298                     I2C1STAT0       equ	664	;# 
  6645   000299                     I2C1STAT1       equ	665	;# 
  6646   00029A                     I2C1PIR         equ	666	;# 
  6647   00029B                     I2C1PIE         equ	667	;# 
  6648   00029C                     I2C1BTO         equ	668	;# 
  6649   00029D                     I2C1BAUD        equ	669	;# 
  6650   00029E                     I2C1CLK         equ	670	;# 
  6651   00029F                     I2C1BTOC        equ	671	;# 
  6652   0002A1                     U1RXB           equ	673	;# 
  6653   0002A1                     U1RXBL          equ	673	;# 
  6654   0002A2                     U1RXCHK         equ	674	;# 
  6655   0002A3                     U1TXB           equ	675	;# 
  6656   0002A3                     U1TXBL          equ	675	;# 
  6657   0002A4                     U1TXCHK         equ	676	;# 
  6658   0002A5                     U1P1            equ	677	;# 
  6659   0002A5                     U1P1L           equ	677	;# 
  6660   0002A6                     U1P1H           equ	678	;# 
  6661   0002A7                     U1P2            equ	679	;# 
  6662   0002A7                     U1P2L           equ	679	;# 
  6663   0002A8                     U1P2H           equ	680	;# 
  6664   0002A9                     U1P3            equ	681	;# 
  6665   0002A9                     U1P3L           equ	681	;# 
  6666   0002AA                     U1P3H           equ	682	;# 
  6667   0002AB                     U1CON0          equ	683	;# 
  6668   0002AC                     U1CON1          equ	684	;# 
  6669   0002AD                     U1CON2          equ	685	;# 
  6670   0002AE                     U1BRG           equ	686	;# 
  6671   0002AE                     U1BRGL          equ	686	;# 
  6672   0002AF                     U1BRGH          equ	687	;# 
  6673   0002B0                     U1FIFO          equ	688	;# 
  6674   0002B1                     U1UIR           equ	689	;# 
  6675   0002B2                     U1ERRIR         equ	690	;# 
  6676   0002B3                     U1ERRIE         equ	691	;# 
  6677   0002B4                     U2RXB           equ	692	;# 
  6678   0002B4                     U2RXBL          equ	692	;# 
  6679   0002B5                     U2RXCHK         equ	693	;# 
  6680   0002B6                     U2TXB           equ	694	;# 
  6681   0002B6                     U2TXBL          equ	694	;# 
  6682   0002B7                     U2TXCHK         equ	695	;# 
  6683   0002B8                     U2P1            equ	696	;# 
  6684   0002B8                     U2P1L           equ	696	;# 
  6685   0002B9                     U2P1H           equ	697	;# 
  6686   0002BA                     U2P2            equ	698	;# 
  6687   0002BA                     U2P2L           equ	698	;# 
  6688   0002BB                     U2P2H           equ	699	;# 
  6689   0002BC                     U2P3            equ	700	;# 
  6690   0002BC                     U2P3L           equ	700	;# 
  6691   0002BD                     U2P3H           equ	701	;# 
  6692   0002BE                     U2CON0          equ	702	;# 
  6693   0002BF                     U2CON1          equ	703	;# 
  6694   0002C0                     U2CON2          equ	704	;# 
  6695   0002C1                     U2BRG           equ	705	;# 
  6696   0002C1                     U2BRGL          equ	705	;# 
  6697   0002C2                     U2BRGH          equ	706	;# 
  6698   0002C3                     U2FIFO          equ	707	;# 
  6699   0002C4                     U2UIR           equ	708	;# 
  6700   0002C5                     U2ERRIR         equ	709	;# 
  6701   0002C6                     U2ERRIE         equ	710	;# 
  6702   0002C7                     U3RXB           equ	711	;# 
  6703   0002C7                     U3RXBL          equ	711	;# 
  6704   0002C9                     U3TXB           equ	713	;# 
  6705   0002C9                     U3TXBL          equ	713	;# 
  6706   0002CB                     U3P1            equ	715	;# 
  6707   0002CB                     U3P1L           equ	715	;# 
  6708   0002CD                     U3P2            equ	717	;# 
  6709   0002CD                     U3P2L           equ	717	;# 
  6710   0002CF                     U3P3            equ	719	;# 
  6711   0002CF                     U3P3L           equ	719	;# 
  6712   0002D1                     U3CON0          equ	721	;# 
  6713   0002D2                     U3CON1          equ	722	;# 
  6714   0002D3                     U3CON2          equ	723	;# 
  6715   0002D4                     U3BRG           equ	724	;# 
  6716   0002D4                     U3BRGL          equ	724	;# 
  6717   0002D5                     U3BRGH          equ	725	;# 
  6718   0002D6                     U3FIFO          equ	726	;# 
  6719   0002D7                     U3UIR           equ	727	;# 
  6720   0002D8                     U3ERRIR         equ	728	;# 
  6721   0002D9                     U3ERRIE         equ	729	;# 
  6722   0002DA                     U4RXB           equ	730	;# 
  6723   0002DA                     U4RXBL          equ	730	;# 
  6724   0002DC                     U4TXB           equ	732	;# 
  6725   0002DC                     U4TXBL          equ	732	;# 
  6726   0002DE                     U4P1            equ	734	;# 
  6727   0002DE                     U4P1L           equ	734	;# 
  6728   0002E0                     U4P2            equ	736	;# 
  6729   0002E0                     U4P2L           equ	736	;# 
  6730   0002E2                     U4P3            equ	738	;# 
  6731   0002E2                     U4P3L           equ	738	;# 
  6732   0002E4                     U4CON0          equ	740	;# 
  6733   0002E5                     U4CON1          equ	741	;# 
  6734   0002E6                     U4CON2          equ	742	;# 
  6735   0002E7                     U4BRG           equ	743	;# 
  6736   0002E7                     U4BRGL          equ	743	;# 
  6737   0002E8                     U4BRGH          equ	744	;# 
  6738   0002E9                     U4FIFO          equ	745	;# 
  6739   0002EA                     U4UIR           equ	746	;# 
  6740   0002EB                     U4ERRIR         equ	747	;# 
  6741   0002EC                     U4ERRIE         equ	748	;# 
  6742   0002ED                     U5RXB           equ	749	;# 
  6743   0002ED                     U5RXBL          equ	749	;# 
  6744   0002EF                     U5TXB           equ	751	;# 
  6745   0002EF                     U5TXBL          equ	751	;# 
  6746   0002F1                     U5P1            equ	753	;# 
  6747   0002F1                     U5P1L           equ	753	;# 
  6748   0002F3                     U5P2            equ	755	;# 
  6749   0002F3                     U5P2L           equ	755	;# 
  6750   0002F5                     U5P3            equ	757	;# 
  6751   0002F5                     U5P3L           equ	757	;# 
  6752   0002F7                     U5CON0          equ	759	;# 
  6753   0002F8                     U5CON1          equ	760	;# 
  6754   0002F9                     U5CON2          equ	761	;# 
  6755   0002FA                     U5BRG           equ	762	;# 
  6756   0002FA                     U5BRGL          equ	762	;# 
  6757   0002FB                     U5BRGH          equ	763	;# 
  6758   0002FC                     U5FIFO          equ	764	;# 
  6759   0002FD                     U5UIR           equ	765	;# 
  6760   0002FE                     U5ERRIR         equ	766	;# 
  6761   0002FF                     U5ERRIE         equ	767	;# 
  6762   000300                     SMT1TMR         equ	768	;# 
  6763   000300                     SMT1TMRL        equ	768	;# 
  6764   000301                     SMT1TMRH        equ	769	;# 
  6765   000302                     SMT1TMRU        equ	770	;# 
  6766   000303                     SMT1CPR         equ	771	;# 
  6767   000303                     SMT1CPRL        equ	771	;# 
  6768   000304                     SMT1CPRH        equ	772	;# 
  6769   000305                     SMT1CPRU        equ	773	;# 
  6770   000306                     SMT1CPW         equ	774	;# 
  6771   000306                     SMT1CPWL        equ	774	;# 
  6772   000307                     SMT1CPWH        equ	775	;# 
  6773   000308                     SMT1CPWU        equ	776	;# 
  6774   000309                     SMT1PR          equ	777	;# 
  6775   000309                     SMT1PRL         equ	777	;# 
  6776   00030A                     SMT1PRH         equ	778	;# 
  6777   00030B                     SMT1PRU         equ	779	;# 
  6778   00030C                     SMT1CON0        equ	780	;# 
  6779   00030D                     SMT1CON1        equ	781	;# 
  6780   00030E                     SMT1STAT        equ	782	;# 
  6781   00030F                     SMT1CLK         equ	783	;# 
  6782   000310                     SMT1SIG         equ	784	;# 
  6783   000311                     SMT1WIN         equ	785	;# 
  6784   000318                     TMR0L           equ	792	;# 
  6785   000318                     TMR0            equ	792	;# 
  6786   000319                     TMR0H           equ	793	;# 
  6787   000319                     PR0             equ	793	;# 
  6788   00031A                     T0CON0          equ	794	;# 
  6789   00031B                     T0CON1          equ	795	;# 
  6790   00031C                     TMR1            equ	796	;# 
  6791   00031C                     TMR1L           equ	796	;# 
  6792   00031D                     TMR1H           equ	797	;# 
  6793   00031E                     T1CON           equ	798	;# 
  6794   00031E                     TMR1CON         equ	798	;# 
  6795   00031F                     T1GCON          equ	799	;# 
  6796   00031F                     TMR1GCON        equ	799	;# 
  6797   000320                     T1GATE          equ	800	;# 
  6798   000320                     TMR1GATE        equ	800	;# 
  6799   000321                     T1CLK           equ	801	;# 
  6800   000321                     TMR1CLK         equ	801	;# 
  6801   000321                     PR1             equ	801	;# 
  6802   000322                     T2TMR           equ	802	;# 
  6803   000322                     TMR2            equ	802	;# 
  6804   000323                     T2PR            equ	803	;# 
  6805   000323                     PR2             equ	803	;# 
  6806   000324                     T2CON           equ	804	;# 
  6807   000325                     T2HLT           equ	805	;# 
  6808   000326                     T2CLKCON        equ	806	;# 
  6809   000326                     T2CLK           equ	806	;# 
  6810   000327                     T2RST           equ	807	;# 
  6811   000328                     TMR3            equ	808	;# 
  6812   000328                     TMR3L           equ	808	;# 
  6813   000329                     TMR3H           equ	809	;# 
  6814   00032A                     T3CON           equ	810	;# 
  6815   00032A                     TMR3CON         equ	810	;# 
  6816   00032B                     T3GCON          equ	811	;# 
  6817   00032B                     TMR3GCON        equ	811	;# 
  6818   00032C                     T3GATE          equ	812	;# 
  6819   00032C                     TMR3GATE        equ	812	;# 
  6820   00032D                     T3CLK           equ	813	;# 
  6821   00032D                     TMR3CLK         equ	813	;# 
  6822   00032D                     PR3             equ	813	;# 
  6823   00032E                     T4TMR           equ	814	;# 
  6824   00032E                     TMR4            equ	814	;# 
  6825   00032F                     T4PR            equ	815	;# 
  6826   00032F                     PR4             equ	815	;# 
  6827   000330                     T4CON           equ	816	;# 
  6828   000331                     T4HLT           equ	817	;# 
  6829   000332                     T4CLKCON        equ	818	;# 
  6830   000332                     T4CLK           equ	818	;# 
  6831   000333                     T4RST           equ	819	;# 
  6832   000334                     TMR5            equ	820	;# 
  6833   000334                     TMR5L           equ	820	;# 
  6834   000335                     TMR5H           equ	821	;# 
  6835   000336                     T5CON           equ	822	;# 
  6836   000336                     TMR5CON         equ	822	;# 
  6837   000337                     T5GCON          equ	823	;# 
  6838   000337                     TMR5GCON        equ	823	;# 
  6839   000338                     T5GATE          equ	824	;# 
  6840   000338                     TMR5GATE        equ	824	;# 
  6841   000339                     T5CLK           equ	825	;# 
  6842   000339                     TMR5CLK         equ	825	;# 
  6843   000339                     PR5             equ	825	;# 
  6844   00033A                     T6TMR           equ	826	;# 
  6845   00033A                     TMR6            equ	826	;# 
  6846   00033B                     T6PR            equ	827	;# 
  6847   00033B                     PR6             equ	827	;# 
  6848   00033C                     T6CON           equ	828	;# 
  6849   00033D                     T6HLT           equ	829	;# 
  6850   00033E                     T6CLKCON        equ	830	;# 
  6851   00033E                     T6CLK           equ	830	;# 
  6852   00033F                     T6RST           equ	831	;# 
  6853   000340                     CCPR1           equ	832	;# 
  6854   000340                     CCPR1L          equ	832	;# 
  6855   000341                     CCPR1H          equ	833	;# 
  6856   000342                     CCP1CON         equ	834	;# 
  6857   000343                     CCP1CAP         equ	835	;# 
  6858   000344                     CCPR2           equ	836	;# 
  6859   000344                     CCPR2L          equ	836	;# 
  6860   000345                     CCPR2H          equ	837	;# 
  6861   000346                     CCP2CON         equ	838	;# 
  6862   000347                     CCP2CAP         equ	839	;# 
  6863   000348                     CCPR3           equ	840	;# 
  6864   000348                     CCPR3L          equ	840	;# 
  6865   000349                     CCPR3H          equ	841	;# 
  6866   00034A                     CCP3CON         equ	842	;# 
  6867   00034B                     CCP3CAP         equ	843	;# 
  6868   00034C                     CCPTMRS0        equ	844	;# 
  6869   00034F                     CRCDATA         equ	847	;# 
  6870   00034F                     CRCDATAL        equ	847	;# 
  6871   000350                     CRCDATAH        equ	848	;# 
  6872   000351                     CRCDATAU        equ	849	;# 
  6873   000352                     CRCDATAT        equ	850	;# 
  6874   000353                     CRCOUT          equ	851	;# 
  6875   000353                     CRCSHFT         equ	851	;# 
  6876   000353                     CRCXOR          equ	851	;# 
  6877   000353                     CRCOUTL         equ	851	;# 
  6878   000353                     CRCSHFTL        equ	851	;# 
  6879   000353                     CRCSHIFTL       equ	851	;# 
  6880   000353                     CRCXORL         equ	851	;# 
  6881   000354                     CRCOUTH         equ	852	;# 
  6882   000354                     CRCSHFTH        equ	852	;# 
  6883   000354                     CRCSHIFTH       equ	852	;# 
  6884   000354                     CRCXORH         equ	852	;# 
  6885   000355                     CRCOUTU         equ	853	;# 
  6886   000355                     CRCSHFTU        equ	853	;# 
  6887   000355                     CRCSHIFTU       equ	853	;# 
  6888   000355                     CRCXORU         equ	853	;# 
  6889   000356                     CRCOUTT         equ	854	;# 
  6890   000356                     CRCSHFTT        equ	854	;# 
  6891   000356                     CRCSHIFTT       equ	854	;# 
  6892   000356                     CRCXORT         equ	854	;# 
  6893   000357                     CRCCON0         equ	855	;# 
  6894   000358                     CRCCON1         equ	856	;# 
  6895   000359                     CRCCON2         equ	857	;# 
  6896   00035A                     SCANLADR        equ	858	;# 
  6897   00035A                     SCANLADRL       equ	858	;# 
  6898   00035B                     SCANLADRH       equ	859	;# 
  6899   00035C                     SCANLADRU       equ	860	;# 
  6900   00035D                     SCANHADR        equ	861	;# 
  6901   00035D                     SCANHADRL       equ	861	;# 
  6902   00035E                     SCANHADRH       equ	862	;# 
  6903   00035F                     SCANHADRU       equ	863	;# 
  6904   000360                     SCANCON0        equ	864	;# 
  6905   000361                     SCANTRIG        equ	865	;# 
  6906   000362                     IPR0            equ	866	;# 
  6907   000363                     IPR1            equ	867	;# 
  6908   000364                     IPR2            equ	868	;# 
  6909   000365                     IPR3            equ	869	;# 
  6910   000366                     IPR4            equ	870	;# 
  6911   000367                     IPR5            equ	871	;# 
  6912   000368                     IPR6            equ	872	;# 
  6913   000369                     IPR7            equ	873	;# 
  6914   00036A                     IPR8            equ	874	;# 
  6915   00036B                     IPR9            equ	875	;# 
  6916   00036C                     IPR10           equ	876	;# 
  6917   00036D                     IPR11           equ	877	;# 
  6918   00036E                     IPR12           equ	878	;# 
  6919   00036F                     IPR13           equ	879	;# 
  6920   000370                     IPR14           equ	880	;# 
  6921   000371                     IPR15           equ	881	;# 
  6922   000373                     STATUS_CSHAD    equ	883	;# 
  6923   000374                     WREG_CSHAD      equ	884	;# 
  6924   000375                     BSR_CSHAD       equ	885	;# 
  6925   000376                     SHADCON         equ	886	;# 
  6926   000377                     STATUS_SHAD     equ	887	;# 
  6927   000378                     WREG_SHAD       equ	888	;# 
  6928   000379                     BSR_SHAD        equ	889	;# 
  6929   00037A                     PCLATH_SHAD     equ	890	;# 
  6930   00037B                     PCLATU_SHAD     equ	891	;# 
  6931   00037C                     FSR0SH          equ	892	;# 
  6932   00037C                     FSR0L_SHAD      equ	892	;# 
  6933   00037D                     FSR0H_SHAD      equ	893	;# 
  6934   00037E                     FSR1SH          equ	894	;# 
  6935   00037E                     FSR1L_SHAD      equ	894	;# 
  6936   00037F                     FSR1H_SHAD      equ	895	;# 
  6937   000380                     FSR2SH          equ	896	;# 
  6938   000380                     FSR2L_SHAD      equ	896	;# 
  6939   000381                     FSR2H_SHAD      equ	897	;# 
  6940   000382                     PRODSH          equ	898	;# 
  6941   000382                     PRODL_SHAD      equ	898	;# 
  6942   000383                     PRODH_SHAD      equ	899	;# 
  6943   000387                     TU16ACON0       equ	903	;# 
  6944   000388                     TU16ACON1       equ	904	;# 
  6945   000389                     TU16AHLT        equ	905	;# 
  6946   00038A                     TU16APS         equ	906	;# 
  6947   00038B                     TU16ATMR        equ	907	;# 
  6948   00038B                     TU16ACR         equ	907	;# 
  6949   00038B                     TU16ATMRL       equ	907	;# 
  6950   00038B                     TU16ACRL        equ	907	;# 
  6951   00038C                     TU16ATMRH       equ	908	;# 
  6952   00038C                     TU16ACRH        equ	908	;# 
  6953   00038D                     TU16APR         equ	909	;# 
  6954   00038D                     TU16APRL        equ	909	;# 
  6955   00038E                     TU16APRH        equ	910	;# 
  6956   00038F                     TU16ACLK        equ	911	;# 
  6957   000390                     TU16AERS        equ	912	;# 
  6958   000393                     TU16BCON0       equ	915	;# 
  6959   000394                     TU16BCON1       equ	916	;# 
  6960   000395                     TU16BHLT        equ	917	;# 
  6961   000396                     TU16BPS         equ	918	;# 
  6962   000397                     TU16BTMR        equ	919	;# 
  6963   000397                     TU16BCR         equ	919	;# 
  6964   000397                     TU16BTMRL       equ	919	;# 
  6965   000397                     TU16BCRL        equ	919	;# 
  6966   000398                     TU16BTMRH       equ	920	;# 
  6967   000398                     TU16BCRH        equ	920	;# 
  6968   000399                     TU16BPR         equ	921	;# 
  6969   000399                     TU16BPRL        equ	921	;# 
  6970   00039A                     TU16BPRH        equ	922	;# 
  6971   00039B                     TU16BCLK        equ	923	;# 
  6972   00039C                     TU16BERS        equ	924	;# 
  6973   0003BB                     TUCHAIN         equ	955	;# 
  6974   0003BC                     CWG1CLK         equ	956	;# 
  6975   0003BC                     CWG1CLKCON      equ	956	;# 
  6976   0003BD                     CWG1ISM         equ	957	;# 
  6977   0003BE                     CWG1DBR         equ	958	;# 
  6978   0003BF                     CWG1DBF         equ	959	;# 
  6979   0003C0                     CWG1CON0        equ	960	;# 
  6980   0003C1                     CWG1CON1        equ	961	;# 
  6981   0003C2                     CWG1AS0         equ	962	;# 
  6982   0003C3                     CWG1AS1         equ	963	;# 
  6983   0003C4                     CWG1STR         equ	964	;# 
  6984   0003C5                     CWG2CLK         equ	965	;# 
  6985   0003C5                     CWG2CLKCON      equ	965	;# 
  6986   0003C6                     CWG2ISM         equ	966	;# 
  6987   0003C7                     CWG2DBR         equ	967	;# 
  6988   0003C8                     CWG2DBF         equ	968	;# 
  6989   0003C9                     CWG2CON0        equ	969	;# 
  6990   0003CA                     CWG2CON1        equ	970	;# 
  6991   0003CB                     CWG2AS0         equ	971	;# 
  6992   0003CC                     CWG2AS1         equ	972	;# 
  6993   0003CD                     CWG2STR         equ	973	;# 
  6994   0003CE                     CWG3CLK         equ	974	;# 
  6995   0003CE                     CWG3CLKCON      equ	974	;# 
  6996   0003CF                     CWG3ISM         equ	975	;# 
  6997   0003D0                     CWG3DBR         equ	976	;# 
  6998   0003D1                     CWG3DBF         equ	977	;# 
  6999   0003D2                     CWG3CON0        equ	978	;# 
  7000   0003D3                     CWG3CON1        equ	979	;# 
  7001   0003D4                     CWG3AS0         equ	980	;# 
  7002   0003D5                     CWG3AS1         equ	981	;# 
  7003   0003D6                     CWG3STR         equ	982	;# 
  7004   0003D7                     FVRCON          equ	983	;# 
  7005   0003D8                     ADCPCON         equ	984	;# 
  7006   0003D8                     ADCP            equ	984	;# 
  7007   0003D9                     ADLTH           equ	985	;# 
  7008   0003D9                     ADLTHL          equ	985	;# 
  7009   0003DA                     ADLTHH          equ	986	;# 
  7010   0003DB                     ADUTH           equ	987	;# 
  7011   0003DB                     ADUTHL          equ	987	;# 
  7012   0003DC                     ADUTHH          equ	988	;# 
  7013   0003DD                     ADERR           equ	989	;# 
  7014   0003DD                     ADERRL          equ	989	;# 
  7015   0003DE                     ADERRH          equ	990	;# 
  7016   0003DF                     ADSTPT          equ	991	;# 
  7017   0003DF                     ADSTPTL         equ	991	;# 
  7018   0003E0                     ADSTPTH         equ	992	;# 
  7019   0003E1                     ADFLTR          equ	993	;# 
  7020   0003E1                     ADFLTRL         equ	993	;# 
  7021   0003E2                     ADFLTRH         equ	994	;# 
  7022   0003E3                     ADACC           equ	995	;# 
  7023   0003E3                     ADACCL          equ	995	;# 
  7024   0003E4                     ADACCH          equ	996	;# 
  7025   0003E5                     ADACCU          equ	997	;# 
  7026   0003E6                     ADCNT           equ	998	;# 
  7027   0003E7                     ADRPT           equ	999	;# 
  7028   0003E8                     ADPREV          equ	1000	;# 
  7029   0003E8                     ADPREVL         equ	1000	;# 
  7030   0003E9                     ADPREVH         equ	1001	;# 
  7031   0003EA                     ADRES           equ	1002	;# 
  7032   0003EA                     ADRESL          equ	1002	;# 
  7033   0003EB                     ADRESH          equ	1003	;# 
  7034   0003EC                     ADPCH           equ	1004	;# 
  7035   0003EE                     ADACQ           equ	1006	;# 
  7036   0003EE                     ADACQL          equ	1006	;# 
  7037   0003EF                     ADACQH          equ	1007	;# 
  7038   0003F0                     ADCAP           equ	1008	;# 
  7039   0003F1                     ADPRE           equ	1009	;# 
  7040   0003F1                     ADPREL          equ	1009	;# 
  7041   0003F2                     ADPREH          equ	1010	;# 
  7042   0003F3                     ADCON0          equ	1011	;# 
  7043   0003F4                     ADCON1          equ	1012	;# 
  7044   0003F5                     ADCON2          equ	1013	;# 
  7045   0003F6                     ADCON3          equ	1014	;# 
  7046   0003F7                     ADSTAT          equ	1015	;# 
  7047   0003F8                     ADREF           equ	1016	;# 
  7048   0003F9                     ADACT           equ	1017	;# 
  7049   0003FA                     ADCLK           equ	1018	;# 
  7050   0003FB                     ADCTX           equ	1019	;# 
  7051   0003FC                     ADCSEL1         equ	1020	;# 
  7052   0003FD                     ADCSEL2         equ	1021	;# 
  7053   0003FE                     ADCSEL3         equ	1022	;# 
  7054   0003FF                     ADCSEL4         equ	1023	;# 
  7055   000400                     ANSELA          equ	1024	;# 
  7056   000401                     WPUA            equ	1025	;# 
  7057   000402                     ODCONA          equ	1026	;# 
  7058   000403                     SLRCONA         equ	1027	;# 
  7059   000404                     INLVLA          equ	1028	;# 
  7060   000405                     IOCAP           equ	1029	;# 
  7061   000406                     IOCAN           equ	1030	;# 
  7062   000407                     IOCAF           equ	1031	;# 
  7063   000408                     ANSELB          equ	1032	;# 
  7064   000409                     WPUB            equ	1033	;# 
  7065   00040A                     ODCONB          equ	1034	;# 
  7066   00040B                     SLRCONB         equ	1035	;# 
  7067   00040C                     INLVLB          equ	1036	;# 
  7068   00040D                     IOCBP           equ	1037	;# 
  7069   00040E                     IOCBN           equ	1038	;# 
  7070   00040F                     IOCBF           equ	1039	;# 
  7071   000410                     ANSELC          equ	1040	;# 
  7072   000411                     WPUC            equ	1041	;# 
  7073   000412                     ODCONC          equ	1042	;# 
  7074   000413                     SLRCONC         equ	1043	;# 
  7075   000414                     INLVLC          equ	1044	;# 
  7076   000415                     IOCCP           equ	1045	;# 
  7077   000416                     IOCCN           equ	1046	;# 
  7078   000417                     IOCCF           equ	1047	;# 
  7079   000421                     WPUE            equ	1057	;# 
  7080   000424                     INLVLE          equ	1060	;# 
  7081   000425                     IOCEP           equ	1061	;# 
  7082   000426                     IOCEN           equ	1062	;# 
  7083   000427                     IOCEF           equ	1063	;# 
  7084   000440                     NCO1ACC         equ	1088	;# 
  7085   000440                     NCO1ACCL        equ	1088	;# 
  7086   000441                     NCO1ACCH        equ	1089	;# 
  7087   000442                     NCO1ACCU        equ	1090	;# 
  7088   000443                     NCO1INC         equ	1091	;# 
  7089   000443                     NCO1INCL        equ	1091	;# 
  7090   000444                     NCO1INCH        equ	1092	;# 
  7091   000445                     NCO1INCU        equ	1093	;# 
  7092   000446                     NCO1CON         equ	1094	;# 
  7093   000447                     NCO1CLK         equ	1095	;# 
  7094   000448                     NCO2ACC         equ	1096	;# 
  7095   000448                     NCO2ACCL        equ	1096	;# 
  7096   000449                     NCO2ACCH        equ	1097	;# 
  7097   00044A                     NCO2ACCU        equ	1098	;# 
  7098   00044B                     NCO2INC         equ	1099	;# 
  7099   00044B                     NCO2INCL        equ	1099	;# 
  7100   00044C                     NCO2INCH        equ	1100	;# 
  7101   00044D                     NCO2INCU        equ	1101	;# 
  7102   00044E                     NCO2CON         equ	1102	;# 
  7103   00044F                     NCO2CLK         equ	1103	;# 
  7104   000450                     NCO3ACC         equ	1104	;# 
  7105   000450                     NCO3ACCL        equ	1104	;# 
  7106   000451                     NCO3ACCH        equ	1105	;# 
  7107   000452                     NCO3ACCU        equ	1106	;# 
  7108   000453                     NCO3INC         equ	1107	;# 
  7109   000453                     NCO3INCL        equ	1107	;# 
  7110   000454                     NCO3INCH        equ	1108	;# 
  7111   000455                     NCO3INCU        equ	1109	;# 
  7112   000456                     NCO3CON         equ	1110	;# 
  7113   000457                     NCO3CLK         equ	1111	;# 
  7114   000458                     FSCMCON         equ	1112	;# 
  7115   000459                     IVTLOCK         equ	1113	;# 
  7116   00045A                     IVTAD           equ	1114	;# 
  7117   00045A                     IVTADL          equ	1114	;# 
  7118   00045B                     IVTADH          equ	1115	;# 
  7119   00045C                     IVTADU          equ	1116	;# 
  7120   00045D                     IVTBASE         equ	1117	;# 
  7121   00045D                     IVTBASEL        equ	1117	;# 
  7122   00045E                     IVTBASEH        equ	1118	;# 
  7123   00045F                     IVTBASEU        equ	1119	;# 
  7124   000460                     PWM1ERS         equ	1120	;# 
  7125   000461                     PWM1CLK         equ	1121	;# 
  7126   000462                     PWM1LDS         equ	1122	;# 
  7127   000463                     PWM1PR          equ	1123	;# 
  7128   000463                     PWM1PRL         equ	1123	;# 
  7129   000464                     PWM1PRH         equ	1124	;# 
  7130   000465                     PWM1CPRE        equ	1125	;# 
  7131   000466                     PWM1PIPOS       equ	1126	;# 
  7132   000467                     PWM1GIR         equ	1127	;# 
  7133   000468                     PWM1GIE         equ	1128	;# 
  7134   000469                     PWM1CON         equ	1129	;# 
  7135   00046A                     PWM1S1CFG       equ	1130	;# 
  7136   00046B                     PWM1S1P1        equ	1131	;# 
  7137   00046B                     PWM1S1P1L       equ	1131	;# 
  7138   00046C                     PWM1S1P1H       equ	1132	;# 
  7139   00046D                     PWM1S1P2        equ	1133	;# 
  7140   00046D                     PWM1S1P2L       equ	1133	;# 
  7141   00046E                     PWM1S1P2H       equ	1134	;# 
  7142   00046F                     PWM2ERS         equ	1135	;# 
  7143   000470                     PWM2CLK         equ	1136	;# 
  7144   000471                     PWM2LDS         equ	1137	;# 
  7145   000472                     PWM2PR          equ	1138	;# 
  7146   000472                     PWM2PRL         equ	1138	;# 
  7147   000473                     PWM2PRH         equ	1139	;# 
  7148   000474                     PWM2CPRE        equ	1140	;# 
  7149   000475                     PWM2PIPOS       equ	1141	;# 
  7150   000476                     PWM2GIR         equ	1142	;# 
  7151   000477                     PWM2GIE         equ	1143	;# 
  7152   000478                     PWM2CON         equ	1144	;# 
  7153   000479                     PWM2S1CFG       equ	1145	;# 
  7154   00047A                     PWM2S1P1        equ	1146	;# 
  7155   00047A                     PWM2S1P1L       equ	1146	;# 
  7156   00047B                     PWM2S1P1H       equ	1147	;# 
  7157   00047C                     PWM2S1P2        equ	1148	;# 
  7158   00047C                     PWM2S1P2L       equ	1148	;# 
  7159   00047D                     PWM2S1P2H       equ	1149	;# 
  7160   00047E                     PWM3ERS         equ	1150	;# 
  7161   00047F                     PWM3CLK         equ	1151	;# 
  7162   000480                     PWM3LDS         equ	1152	;# 
  7163   000481                     PWM3PR          equ	1153	;# 
  7164   000481                     PWM3PRL         equ	1153	;# 
  7165   000482                     PWM3PRH         equ	1154	;# 
  7166   000483                     PWM3CPRE        equ	1155	;# 
  7167   000484                     PWM3PIPOS       equ	1156	;# 
  7168   000485                     PWM3GIR         equ	1157	;# 
  7169   000486                     PWM3GIE         equ	1158	;# 
  7170   000487                     PWM3CON         equ	1159	;# 
  7171   000488                     PWM3S1CFG       equ	1160	;# 
  7172   000489                     PWM3S1P1        equ	1161	;# 
  7173   000489                     PWM3S1P1L       equ	1161	;# 
  7174   00048A                     PWM3S1P1H       equ	1162	;# 
  7175   00048B                     PWM3S1P2        equ	1163	;# 
  7176   00048B                     PWM3S1P2L       equ	1163	;# 
  7177   00048C                     PWM3S1P2H       equ	1164	;# 
  7178   00048D                     PWM4ERS         equ	1165	;# 
  7179   00048E                     PWM4CLK         equ	1166	;# 
  7180   00048F                     PWM4LDS         equ	1167	;# 
  7181   000490                     PWM4PR          equ	1168	;# 
  7182   000490                     PWM4PRL         equ	1168	;# 
  7183   000491                     PWM4PRH         equ	1169	;# 
  7184   000492                     PWM4CPRE        equ	1170	;# 
  7185   000493                     PWM4PIPOS       equ	1171	;# 
  7186   000494                     PWM4GIR         equ	1172	;# 
  7187   000495                     PWM4GIE         equ	1173	;# 
  7188   000496                     PWM4CON         equ	1174	;# 
  7189   000497                     PWM4S1CFG       equ	1175	;# 
  7190   000498                     PWM4S1P1        equ	1176	;# 
  7191   000498                     PWM4S1P1L       equ	1176	;# 
  7192   000499                     PWM4S1P1H       equ	1177	;# 
  7193   00049A                     PWM4S1P2        equ	1178	;# 
  7194   00049A                     PWM4S1P2L       equ	1178	;# 
  7195   00049B                     PWM4S1P2H       equ	1179	;# 
  7196   00049C                     PWMLOAD         equ	1180	;# 
  7197   00049D                     PWMEN           equ	1181	;# 
  7198   00049E                     PIE0            equ	1182	;# 
  7199   00049F                     PIE1            equ	1183	;# 
  7200   0004A0                     PIE2            equ	1184	;# 
  7201   0004A1                     PIE3            equ	1185	;# 
  7202   0004A2                     PIE4            equ	1186	;# 
  7203   0004A3                     PIE5            equ	1187	;# 
  7204   0004A4                     PIE6            equ	1188	;# 
  7205   0004A5                     PIE7            equ	1189	;# 
  7206   0004A6                     PIE8            equ	1190	;# 
  7207   0004A7                     PIE9            equ	1191	;# 
  7208   0004A8                     PIE10           equ	1192	;# 
  7209   0004A9                     PIE11           equ	1193	;# 
  7210   0004AA                     PIE12           equ	1194	;# 
  7211   0004AB                     PIE13           equ	1195	;# 
  7212   0004AC                     PIE14           equ	1196	;# 
  7213   0004AD                     PIE15           equ	1197	;# 
  7214   0004AE                     PIR0            equ	1198	;# 
  7215   0004AF                     PIR1            equ	1199	;# 
  7216   0004B0                     PIR2            equ	1200	;# 
  7217   0004B1                     PIR3            equ	1201	;# 
  7218   0004B2                     PIR4            equ	1202	;# 
  7219   0004B3                     PIR5            equ	1203	;# 
  7220   0004B4                     PIR6            equ	1204	;# 
  7221   0004B5                     PIR7            equ	1205	;# 
  7222   0004B6                     PIR8            equ	1206	;# 
  7223   0004B7                     PIR9            equ	1207	;# 
  7224   0004B8                     PIR10           equ	1208	;# 
  7225   0004B9                     PIR11           equ	1209	;# 
  7226   0004BA                     PIR12           equ	1210	;# 
  7227   0004BB                     PIR13           equ	1211	;# 
  7228   0004BC                     PIR14           equ	1212	;# 
  7229   0004BD                     PIR15           equ	1213	;# 
  7230   0004BE                     LATA            equ	1214	;# 
  7231   0004BF                     LATB            equ	1215	;# 
  7232   0004C0                     LATC            equ	1216	;# 
  7233   0004C6                     TRISA           equ	1222	;# 
  7234   0004C7                     TRISB           equ	1223	;# 
  7235   0004C8                     TRISC           equ	1224	;# 
  7236   0004CA                     TRISE           equ	1226	;# 
  7237   0004CE                     PORTA           equ	1230	;# 
  7238   0004CF                     PORTB           equ	1231	;# 
  7239   0004D0                     PORTC           equ	1232	;# 
  7240   0004D2                     PORTE           equ	1234	;# 
  7241   0004D6                     INTCON0         equ	1238	;# 
  7242   0004D7                     INTCON1         equ	1239	;# 
  7243   0004D8                     STATUS          equ	1240	;# 
  7244   0004D9                     FSR2            equ	1241	;# 
  7245   0004D9                     FSR2L           equ	1241	;# 
  7246   0004DA                     FSR2H           equ	1242	;# 
  7247   0004DB                     PLUSW2          equ	1243	;# 
  7248   0004DC                     PREINC2         equ	1244	;# 
  7249   0004DD                     POSTDEC2        equ	1245	;# 
  7250   0004DE                     POSTINC2        equ	1246	;# 
  7251   0004DF                     INDF2           equ	1247	;# 
  7252   0004E0                     BSR             equ	1248	;# 
  7253   0004E1                     FSR1            equ	1249	;# 
  7254   0004E1                     FSR1L           equ	1249	;# 
  7255   0004E2                     FSR1H           equ	1250	;# 
  7256   0004E3                     PLUSW1          equ	1251	;# 
  7257   0004E4                     PREINC1         equ	1252	;# 
  7258   0004E5                     POSTDEC1        equ	1253	;# 
  7259   0004E6                     POSTINC1        equ	1254	;# 
  7260   0004E7                     INDF1           equ	1255	;# 
  7261   0004E8                     WREG            equ	1256	;# 
  7262   0004E9                     FSR0            equ	1257	;# 
  7263   0004E9                     FSR0L           equ	1257	;# 
  7264   0004EA                     FSR0H           equ	1258	;# 
  7265   0004EB                     PLUSW0          equ	1259	;# 
  7266   0004EC                     PREINC0         equ	1260	;# 
  7267   0004ED                     POSTDEC0        equ	1261	;# 
  7268   0004EE                     POSTINC0        equ	1262	;# 
  7269   0004EF                     INDF0           equ	1263	;# 
  7270   0004F0                     PCON0           equ	1264	;# 
  7271   0004F1                     PCON1           equ	1265	;# 
  7272   0004F2                     CPUDOZE         equ	1266	;# 
  7273   0004F3                     PROD            equ	1267	;# 
  7274   0004F3                     PRODL           equ	1267	;# 
  7275   0004F4                     PRODH           equ	1268	;# 
  7276   0004F5                     TABLAT          equ	1269	;# 
  7277   0004F6                     TBLPTR          equ	1270	;# 
  7278   0004F6                     TBLPTRL         equ	1270	;# 
  7279   0004F7                     TBLPTRH         equ	1271	;# 
  7280   0004F8                     TBLPTRU         equ	1272	;# 
  7281   0004F9                     PCLAT           equ	1273	;# 
  7282   0004F9                     PCL             equ	1273	;# 
  7283   0004FA                     PCLATH          equ	1274	;# 
  7284   0004FB                     PCLATU          equ	1275	;# 
  7285   0004FC                     STKPTR          equ	1276	;# 
  7286   0004FD                     TOS             equ	1277	;# 
  7287   0004FD                     TOSL            equ	1277	;# 
  7288   0004FE                     TOSH            equ	1278	;# 
  7289   0004FF                     TOSU            equ	1279	;# 
  7290   000038                     BOOTREG         equ	56	;# 
  7291   000039                     CLKRCON         equ	57	;# 
  7292   00003A                     CLKRCLK         equ	58	;# 
  7293   000040                     NVMCON0         equ	64	;# 
  7294   000041                     NVMCON1         equ	65	;# 
  7295   000042                     NVMLOCK         equ	66	;# 
  7296   000043                     NVMADR          equ	67	;# 
  7297   000043                     NVMADRL         equ	67	;# 
  7298   000044                     NVMADRH         equ	68	;# 
  7299   000045                     NVMADRU         equ	69	;# 
  7300   000046                     NVMDAT          equ	70	;# 
  7301   000046                     NVMDATL         equ	70	;# 
  7302   000047                     NVMDATH         equ	71	;# 
  7303   000048                     VREGCON         equ	72	;# 
  7304   000049                     BORCON          equ	73	;# 
  7305   00004A                     HLVDCON0        equ	74	;# 
  7306   00004B                     HLVDCON1        equ	75	;# 
  7307   00004C                     ZCDCON          equ	76	;# 
  7308   000060                     PMD0            equ	96	;# 
  7309   000061                     PMD1            equ	97	;# 
  7310   000062                     PMD2            equ	98	;# 
  7311   000063                     PMD3            equ	99	;# 
  7312   000064                     PMD4            equ	100	;# 
  7313   000065                     PMD5            equ	101	;# 
  7314   000066                     PMD6            equ	102	;# 
  7315   000067                     PMD7            equ	103	;# 
  7316   000068                     PMD8            equ	104	;# 
  7317   00006A                     MD1CON0         equ	106	;# 
  7318   00006B                     MD1CON1         equ	107	;# 
  7319   00006C                     MD1SRC          equ	108	;# 
  7320   00006D                     MD1CARL         equ	109	;# 
  7321   00006E                     MD1CARH         equ	110	;# 
  7322   00006F                     CMOUT           equ	111	;# 
  7323   000070                     CM1CON0         equ	112	;# 
  7324   000071                     CM1CON1         equ	113	;# 
  7325   000072                     CM1NCH          equ	114	;# 
  7326   000073                     CM1PCH          equ	115	;# 
  7327   000074                     CM2CON0         equ	116	;# 
  7328   000075                     CM2CON1         equ	117	;# 
  7329   000076                     CM2NCH          equ	118	;# 
  7330   000077                     CM2PCH          equ	119	;# 
  7331   000078                     WDTCON0         equ	120	;# 
  7332   000079                     WDTCON1         equ	121	;# 
  7333   00007A                     WDTPSL          equ	122	;# 
  7334   00007B                     WDTPSH          equ	123	;# 
  7335   00007C                     WDTTMR          equ	124	;# 
  7336   00007D                     DAC1DAT         equ	125	;# 
  7337   00007D                     DAC1DATL        equ	125	;# 
  7338   00007F                     DAC1CON         equ	127	;# 
  7339   000080                     SPI1RXB         equ	128	;# 
  7340   000081                     SPI1TXB         equ	129	;# 
  7341   000082                     SPI1TCNT        equ	130	;# 
  7342   000082                     SPI1TCNTL       equ	130	;# 
  7343   000083                     SPI1TCNTH       equ	131	;# 
  7344   000084                     SPI1CON0        equ	132	;# 
  7345   000085                     SPI1CON1        equ	133	;# 
  7346   000086                     SPI1CON2        equ	134	;# 
  7347   000087                     SPI1STATUS      equ	135	;# 
  7348   000088                     SPI1TWIDTH      equ	136	;# 
  7349   000089                     SPI1BAUD        equ	137	;# 
  7350   00008A                     SPI1INTF        equ	138	;# 
  7351   00008B                     SPI1INTE        equ	139	;# 
  7352   00008C                     SPI1CLK         equ	140	;# 
  7353   00008D                     SPI2RXB         equ	141	;# 
  7354   00008E                     SPI2TXB         equ	142	;# 
  7355   00008F                     SPI2TCNT        equ	143	;# 
  7356   00008F                     SPI2TCNTL       equ	143	;# 
  7357   000090                     SPI2TCNTH       equ	144	;# 
  7358   000091                     SPI2CON0        equ	145	;# 
  7359   000092                     SPI2CON1        equ	146	;# 
  7360   000093                     SPI2CON2        equ	147	;# 
  7361   000094                     SPI2STATUS      equ	148	;# 
  7362   000095                     SPI2TWIDTH      equ	149	;# 
  7363   000096                     SPI2BAUD        equ	150	;# 
  7364   000097                     SPI2INTF        equ	151	;# 
  7365   000098                     SPI2INTE        equ	152	;# 
  7366   000099                     SPI2CLK         equ	153	;# 
  7367   0000AC                     ACTCON          equ	172	;# 
  7368   0000AD                     OSCCON1         equ	173	;# 
  7369   0000AE                     OSCCON2         equ	174	;# 
  7370   0000AF                     OSCCON3         equ	175	;# 
  7371   0000B0                     OSCTUNE         equ	176	;# 
  7372   0000B1                     OSCFRQ          equ	177	;# 
  7373   0000B1                     OSCFREQ         equ	177	;# 
  7374   0000B2                     OSCSTAT         equ	178	;# 
  7375   0000B2                     OSCSTAT1        equ	178	;# 
  7376   0000B3                     OSCEN           equ	179	;# 
  7377   0000B4                     PRLOCK          equ	180	;# 
  7378   0000B5                     SCANPR          equ	181	;# 
  7379   0000B6                     DMA1PR          equ	182	;# 
  7380   0000B7                     DMA2PR          equ	183	;# 
  7381   0000B8                     DMA3PR          equ	184	;# 
  7382   0000B9                     DMA4PR          equ	185	;# 
  7383   0000BA                     DMA5PR          equ	186	;# 
  7384   0000BB                     DMA6PR          equ	187	;# 
  7385   0000BC                     DMA7PR          equ	188	;# 
  7386   0000BD                     DMA8PR          equ	189	;# 
  7387   0000BE                     MAINPR          equ	190	;# 
  7388   0000BF                     ISRPR           equ	191	;# 
  7389   0000D4                     CLCDATA         equ	212	;# 
  7390   0000D5                     CLCSELECT       equ	213	;# 
  7391   0000D6                     CLCnCON         equ	214	;# 
  7392   0000D7                     CLCnPOL         equ	215	;# 
  7393   0000D8                     CLCnSEL0        equ	216	;# 
  7394   0000D9                     CLCnSEL1        equ	217	;# 
  7395   0000DA                     CLCnSEL2        equ	218	;# 
  7396   0000DB                     CLCnSEL3        equ	219	;# 
  7397   0000DC                     CLCnGLS0        equ	220	;# 
  7398   0000DD                     CLCnGLS1        equ	221	;# 
  7399   0000DE                     CLCnGLS2        equ	222	;# 
  7400   0000DF                     CLCnGLS3        equ	223	;# 
  7401   0000E8                     DMASELECT       equ	232	;# 
  7402   0000E9                     DMAnBUF         equ	233	;# 
  7403   0000EA                     DMAnDCNT        equ	234	;# 
  7404   0000EA                     DMAnDCNTL       equ	234	;# 
  7405   0000EB                     DMAnDCNTH       equ	235	;# 
  7406   0000EC                     DMAnDPTR        equ	236	;# 
  7407   0000EC                     DMAnDPTRL       equ	236	;# 
  7408   0000ED                     DMAnDPTRH       equ	237	;# 
  7409   0000EE                     DMAnDSZ         equ	238	;# 
  7410   0000EE                     DMAnDSZL        equ	238	;# 
  7411   0000EF                     DMAnDSZH        equ	239	;# 
  7412   0000F0                     DMAnDSA         equ	240	;# 
  7413   0000F0                     DMAnDSAL        equ	240	;# 
  7414   0000F1                     DMAnDSAH        equ	241	;# 
  7415   0000F2                     DMAnSCNT        equ	242	;# 
  7416   0000F2                     DMAnSCNTL       equ	242	;# 
  7417   0000F3                     DMAnSCNTH       equ	243	;# 
  7418   0000F4                     DMAnSPTR        equ	244	;# 
  7419   0000F4                     DMAnSPTRL       equ	244	;# 
  7420   0000F5                     DMAnSPTRH       equ	245	;# 
  7421   0000F6                     DMAnSPTRU       equ	246	;# 
  7422   0000F7                     DMAnSSZ         equ	247	;# 
  7423   0000F7                     DMAnSSZL        equ	247	;# 
  7424   0000F8                     DMAnSSZH        equ	248	;# 
  7425   0000F9                     DMAnSSA         equ	249	;# 
  7426   0000F9                     DMAnSSAL        equ	249	;# 
  7427   0000FA                     DMAnSSAH        equ	250	;# 
  7428   0000FB                     DMAnSSAU        equ	251	;# 
  7429   0000FC                     DMAnCON0        equ	252	;# 
  7430   0000FD                     DMAnCON1        equ	253	;# 
  7431   0000FE                     DMAnAIRQ        equ	254	;# 
  7432   0000FF                     DMAnSIRQ        equ	255	;# 
  7433   000100                     C1CONL          equ	256	;# 
  7434   000101                     C1CONH          equ	257	;# 
  7435   000102                     C1CONU          equ	258	;# 
  7436   000103                     C1CONT          equ	259	;# 
  7437   000104                     C1NBTCFGL       equ	260	;# 
  7438   000105                     C1NBTCFGH       equ	261	;# 
  7439   000106                     C1NBTCFGU       equ	262	;# 
  7440   000107                     C1NBTCFGT       equ	263	;# 
  7441   000108                     C1DBTCFGL       equ	264	;# 
  7442   000109                     C1DBTCFGH       equ	265	;# 
  7443   00010A                     C1DBTCFGU       equ	266	;# 
  7444   00010B                     C1DBTCFGT       equ	267	;# 
  7445   00010C                     C1TDCL          equ	268	;# 
  7446   00010D                     C1TDCH          equ	269	;# 
  7447   00010E                     C1TDCU          equ	270	;# 
  7448   000110                     C1TBC           equ	272	;# 
  7449   000110                     C1TBCL          equ	272	;# 
  7450   000111                     C1TBCH          equ	273	;# 
  7451   000112                     C1TBCU          equ	274	;# 
  7452   000113                     C1TBCT          equ	275	;# 
  7453   000114                     C1TSCONL        equ	276	;# 
  7454   000115                     C1TSCONH        equ	277	;# 
  7455   000116                     C1TSCONU        equ	278	;# 
  7456   000117                     C1TSCONT        equ	279	;# 
  7457   000118                     C1VECL          equ	280	;# 
  7458   000119                     C1VECH          equ	281	;# 
  7459   00011A                     C1VECU          equ	282	;# 
  7460   00011B                     C1VECT          equ	283	;# 
  7461   00011C                     C1INTL          equ	284	;# 
  7462   00011D                     C1INTH          equ	285	;# 
  7463   00011E                     C1INTU          equ	286	;# 
  7464   00011F                     C1INTT          equ	287	;# 
  7465   000120                     C1RXIF          equ	288	;# 
  7466   000120                     C1RXIFL         equ	288	;# 
  7467   000121                     C1RXIFH         equ	289	;# 
  7468   000122                     C1RXIFU         equ	290	;# 
  7469   000123                     C1RXIFT         equ	291	;# 
  7470   000124                     C1TXIF          equ	292	;# 
  7471   000124                     C1TXIFL         equ	292	;# 
  7472   000125                     C1TXIFH         equ	293	;# 
  7473   000126                     C1TXIFU         equ	294	;# 
  7474   000127                     C1TXIFT         equ	295	;# 
  7475   000128                     C1RXOVIF        equ	296	;# 
  7476   000128                     C1RXOVIFL       equ	296	;# 
  7477   000129                     C1RXOVIFH       equ	297	;# 
  7478   00012A                     C1RXOVIFU       equ	298	;# 
  7479   00012B                     C1RXOVIFT       equ	299	;# 
  7480   00012C                     C1TXATIF        equ	300	;# 
  7481   00012C                     C1TXATIFL       equ	300	;# 
  7482   00012D                     C1TXATIFH       equ	301	;# 
  7483   00012E                     C1TXATIFU       equ	302	;# 
  7484   00012F                     C1TXATIFT       equ	303	;# 
  7485   000130                     C1TXREQ         equ	304	;# 
  7486   000130                     C1TXREQL        equ	304	;# 
  7487   000131                     C1TXREQH        equ	305	;# 
  7488   000132                     C1TXREQU        equ	306	;# 
  7489   000133                     C1TXREQT        equ	307	;# 
  7490   000134                     C1TRECL         equ	308	;# 
  7491   000135                     C1TRECH         equ	309	;# 
  7492   000136                     C1TRECU         equ	310	;# 
  7493   000137                     C1TRECT         equ	311	;# 
  7494   000138                     C1BDIAG0L       equ	312	;# 
  7495   000139                     C1BDIAG0H       equ	313	;# 
  7496   00013C                     C1BDIAG1L       equ	316	;# 
  7497   00013D                     C1BDIAG1H       equ	317	;# 
  7498   00013E                     C1BDIAG1U       equ	318	;# 
  7499   00013F                     C1BDIAG1T       equ	319	;# 
  7500   000140                     C1TEFCONL       equ	320	;# 
  7501   000141                     C1TEFCONH       equ	321	;# 
  7502   000142                     C1TEFCONU       equ	322	;# 
  7503   000143                     C1TEFCONT       equ	323	;# 
  7504   000144                     C1TEFSTAL       equ	324	;# 
  7505   000145                     C1TEFSTAH       equ	325	;# 
  7506   000146                     C1TEFSTAU       equ	326	;# 
  7507   000147                     C1TEFSTAT       equ	327	;# 
  7508   000148                     C1TEFUA         equ	328	;# 
  7509   000148                     C1TEFUAL        equ	328	;# 
  7510   000149                     C1TEFUAH        equ	329	;# 
  7511   00014A                     C1TEFUAU        equ	330	;# 
  7512   00014B                     C1TEFUAT        equ	331	;# 
  7513   00014C                     C1FIFOBA        equ	332	;# 
  7514   00014C                     C1FIFOBAL       equ	332	;# 
  7515   00014D                     C1FIFOBAH       equ	333	;# 
  7516   00014E                     C1FIFOBAU       equ	334	;# 
  7517   00014F                     C1FIFOBAT       equ	335	;# 
  7518   000150                     C1TXQCONL       equ	336	;# 
  7519   000151                     C1TXQCONH       equ	337	;# 
  7520   000152                     C1TXQCONU       equ	338	;# 
  7521   000153                     C1TXQCONT       equ	339	;# 
  7522   000154                     C1TXQSTAL       equ	340	;# 
  7523   000155                     C1TXQSTAH       equ	341	;# 
  7524   000156                     C1TXQSTAU       equ	342	;# 
  7525   000157                     C1TXQSTAT       equ	343	;# 
  7526   000158                     C1TXQUA         equ	344	;# 
  7527   000158                     C1TXQUAL        equ	344	;# 
  7528   000159                     C1TXQUAH        equ	345	;# 
  7529   00015A                     C1TXQUAU        equ	346	;# 
  7530   00015B                     C1TXQUAT        equ	347	;# 
  7531   00015C                     C1FIFOCON1      equ	348	;# 
  7532   00015C                     C1FIFOCON1L     equ	348	;# 
  7533   00015D                     C1FIFOCON1H     equ	349	;# 
  7534   00015E                     C1FIFOCON1U     equ	350	;# 
  7535   00015F                     C1FIFOCON1T     equ	351	;# 
  7536   000160                     C1FIFOSTA1      equ	352	;# 
  7537   000160                     C1FIFOSTA1L     equ	352	;# 
  7538   000161                     C1FIFOSTA1H     equ	353	;# 
  7539   000162                     C1FIFOSTA1U     equ	354	;# 
  7540   000163                     C1FIFOSTA1T     equ	355	;# 
  7541   000164                     C1FIFOUA1       equ	356	;# 
  7542   000164                     C1FIFOUA1L      equ	356	;# 
  7543   000165                     C1FIFOUA1H      equ	357	;# 
  7544   000166                     C1FIFOUA1U      equ	358	;# 
  7545   000167                     C1FIFOUA1T      equ	359	;# 
  7546   000168                     C1FIFOCON2      equ	360	;# 
  7547   000168                     C1FIFOCON2L     equ	360	;# 
  7548   000169                     C1FIFOCON2H     equ	361	;# 
  7549   00016A                     C1FIFOCON2U     equ	362	;# 
  7550   00016B                     C1FIFOCON2T     equ	363	;# 
  7551   00016C                     C1FIFOSTA2      equ	364	;# 
  7552   00016C                     C1FIFOSTA2L     equ	364	;# 
  7553   00016D                     C1FIFOSTA2H     equ	365	;# 
  7554   00016E                     C1FIFOSTA2U     equ	366	;# 
  7555   00016F                     C1FIFOSTA2T     equ	367	;# 
  7556   000170                     C1FIFOUA2       equ	368	;# 
  7557   000170                     C1FIFOUA2L      equ	368	;# 
  7558   000171                     C1FIFOUA2H      equ	369	;# 
  7559   000172                     C1FIFOUA2U      equ	370	;# 
  7560   000173                     C1FIFOUA2T      equ	371	;# 
  7561   000174                     C1FIFOCON3      equ	372	;# 
  7562   000174                     C1FIFOCON3L     equ	372	;# 
  7563   000175                     C1FIFOCON3H     equ	373	;# 
  7564   000176                     C1FIFOCON3U     equ	374	;# 
  7565   000177                     C1FIFOCON3T     equ	375	;# 
  7566   000178                     C1FIFOSTA3      equ	376	;# 
  7567   000178                     C1FIFOSTA3L     equ	376	;# 
  7568   000179                     C1FIFOSTA3H     equ	377	;# 
  7569   00017A                     C1FIFOSTA3U     equ	378	;# 
  7570   00017B                     C1FIFOSTA3T     equ	379	;# 
  7571   00017C                     C1FIFOUA3       equ	380	;# 
  7572   00017C                     C1FIFOUA3L      equ	380	;# 
  7573   00017D                     C1FIFOUA3H      equ	381	;# 
  7574   00017E                     C1FIFOUA3U      equ	382	;# 
  7575   00017F                     C1FIFOUA3T      equ	383	;# 
  7576   000180                     C1FLTCON0L      equ	384	;# 
  7577   000181                     C1FLTCON0H      equ	385	;# 
  7578   000182                     C1FLTCON0U      equ	386	;# 
  7579   000183                     C1FLTCON0T      equ	387	;# 
  7580   000184                     C1FLTCON1L      equ	388	;# 
  7581   000185                     C1FLTCON1H      equ	389	;# 
  7582   000186                     C1FLTCON1U      equ	390	;# 
  7583   000187                     C1FLTCON1T      equ	391	;# 
  7584   000188                     C1FLTCON2L      equ	392	;# 
  7585   000189                     C1FLTCON2H      equ	393	;# 
  7586   00018A                     C1FLTCON2U      equ	394	;# 
  7587   00018B                     C1FLTCON2T      equ	395	;# 
  7588   00018C                     C1FLTOBJ0       equ	396	;# 
  7589   00018C                     C1FLTOBJ0L      equ	396	;# 
  7590   00018D                     C1FLTOBJ0H      equ	397	;# 
  7591   00018E                     C1FLTOBJ0U      equ	398	;# 
  7592   00018F                     C1FLTOBJ0T      equ	399	;# 
  7593   000190                     C1MASK0         equ	400	;# 
  7594   000190                     C1MASK0L        equ	400	;# 
  7595   000191                     C1MASK0H        equ	401	;# 
  7596   000192                     C1MASK0U        equ	402	;# 
  7597   000193                     C1MASK0T        equ	403	;# 
  7598   000194                     C1FLTOBJ1       equ	404	;# 
  7599   000194                     C1FLTOBJ1L      equ	404	;# 
  7600   000195                     C1FLTOBJ1H      equ	405	;# 
  7601   000196                     C1FLTOBJ1U      equ	406	;# 
  7602   000197                     C1FLTOBJ1T      equ	407	;# 
  7603   000198                     C1MASK1         equ	408	;# 
  7604   000198                     C1MASK1L        equ	408	;# 
  7605   000199                     C1MASK1H        equ	409	;# 
  7606   00019A                     C1MASK1U        equ	410	;# 
  7607   00019B                     C1MASK1T        equ	411	;# 
  7608   00019C                     C1FLTOBJ2       equ	412	;# 
  7609   00019C                     C1FLTOBJ2L      equ	412	;# 
  7610   00019D                     C1FLTOBJ2H      equ	413	;# 
  7611   00019E                     C1FLTOBJ2U      equ	414	;# 
  7612   00019F                     C1FLTOBJ2T      equ	415	;# 
  7613   0001A0                     C1MASK2         equ	416	;# 
  7614   0001A0                     C1MASK2L        equ	416	;# 
  7615   0001A1                     C1MASK2H        equ	417	;# 
  7616   0001A2                     C1MASK2U        equ	418	;# 
  7617   0001A3                     C1MASK2T        equ	419	;# 
  7618   0001A4                     C1FLTOBJ3       equ	420	;# 
  7619   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7620   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7621   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7622   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7623   0001A8                     C1MASK3         equ	424	;# 
  7624   0001A8                     C1MASK3L        equ	424	;# 
  7625   0001A9                     C1MASK3H        equ	425	;# 
  7626   0001AA                     C1MASK3U        equ	426	;# 
  7627   0001AB                     C1MASK3T        equ	427	;# 
  7628   0001AC                     C1FLTOBJ4       equ	428	;# 
  7629   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7630   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7631   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7632   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7633   0001B0                     C1MASK4         equ	432	;# 
  7634   0001B0                     C1MASK4L        equ	432	;# 
  7635   0001B1                     C1MASK4H        equ	433	;# 
  7636   0001B2                     C1MASK4U        equ	434	;# 
  7637   0001B3                     C1MASK4T        equ	435	;# 
  7638   0001B4                     C1FLTOBJ5       equ	436	;# 
  7639   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7640   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7641   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7642   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7643   0001B8                     C1MASK5         equ	440	;# 
  7644   0001B8                     C1MASK5L        equ	440	;# 
  7645   0001B9                     C1MASK5H        equ	441	;# 
  7646   0001BA                     C1MASK5U        equ	442	;# 
  7647   0001BB                     C1MASK5T        equ	443	;# 
  7648   0001BC                     C1FLTOBJ6       equ	444	;# 
  7649   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7650   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7651   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7652   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7653   0001C0                     C1MASK6         equ	448	;# 
  7654   0001C0                     C1MASK6L        equ	448	;# 
  7655   0001C1                     C1MASK6H        equ	449	;# 
  7656   0001C2                     C1MASK6U        equ	450	;# 
  7657   0001C3                     C1MASK6T        equ	451	;# 
  7658   0001C4                     C1FLTOBJ7       equ	452	;# 
  7659   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7660   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7661   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7662   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7663   0001C8                     C1MASK7         equ	456	;# 
  7664   0001C8                     C1MASK7L        equ	456	;# 
  7665   0001C9                     C1MASK7H        equ	457	;# 
  7666   0001CA                     C1MASK7U        equ	458	;# 
  7667   0001CB                     C1MASK7T        equ	459	;# 
  7668   0001CC                     C1FLTOBJ8       equ	460	;# 
  7669   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7670   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7671   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7672   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7673   0001D0                     C1MASK8         equ	464	;# 
  7674   0001D0                     C1MASK8L        equ	464	;# 
  7675   0001D1                     C1MASK8H        equ	465	;# 
  7676   0001D2                     C1MASK8U        equ	466	;# 
  7677   0001D3                     C1MASK8T        equ	467	;# 
  7678   0001D4                     C1FLTOBJ9       equ	468	;# 
  7679   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7680   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7681   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7682   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7683   0001D8                     C1MASK9         equ	472	;# 
  7684   0001D8                     C1MASK9L        equ	472	;# 
  7685   0001D9                     C1MASK9H        equ	473	;# 
  7686   0001DA                     C1MASK9U        equ	474	;# 
  7687   0001DB                     C1MASK9T        equ	475	;# 
  7688   0001DC                     C1FLTOBJ10      equ	476	;# 
  7689   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7690   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7691   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7692   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7693   0001E0                     C1MASK10        equ	480	;# 
  7694   0001E0                     C1MASK10L       equ	480	;# 
  7695   0001E1                     C1MASK10H       equ	481	;# 
  7696   0001E2                     C1MASK10U       equ	482	;# 
  7697   0001E3                     C1MASK10T       equ	483	;# 
  7698   0001E4                     C1FLTOBJ11      equ	484	;# 
  7699   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7700   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7701   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7702   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7703   0001E8                     C1MASK11        equ	488	;# 
  7704   0001E8                     C1MASK11L       equ	488	;# 
  7705   0001E9                     C1MASK11H       equ	489	;# 
  7706   0001EA                     C1MASK11U       equ	490	;# 
  7707   0001EB                     C1MASK11T       equ	491	;# 
  7708   000200                     PPSLOCK         equ	512	;# 
  7709   000201                     RA0PPS          equ	513	;# 
  7710   000202                     RA1PPS          equ	514	;# 
  7711   000203                     RA2PPS          equ	515	;# 
  7712   000204                     RA3PPS          equ	516	;# 
  7713   000205                     RA4PPS          equ	517	;# 
  7714   000206                     RA5PPS          equ	518	;# 
  7715   000207                     RA6PPS          equ	519	;# 
  7716   000208                     RA7PPS          equ	520	;# 
  7717   000209                     RB0PPS          equ	521	;# 
  7718   00020A                     RB1PPS          equ	522	;# 
  7719   00020B                     RB2PPS          equ	523	;# 
  7720   00020C                     RB3PPS          equ	524	;# 
  7721   00020D                     RB4PPS          equ	525	;# 
  7722   00020E                     RB5PPS          equ	526	;# 
  7723   00020F                     RB6PPS          equ	527	;# 
  7724   000210                     RB7PPS          equ	528	;# 
  7725   000211                     RC0PPS          equ	529	;# 
  7726   000212                     RC1PPS          equ	530	;# 
  7727   000213                     RC2PPS          equ	531	;# 
  7728   000214                     RC3PPS          equ	532	;# 
  7729   000215                     RC4PPS          equ	533	;# 
  7730   000216                     RC5PPS          equ	534	;# 
  7731   000217                     RC6PPS          equ	535	;# 
  7732   000218                     RC7PPS          equ	536	;# 
  7733   00023D                     CANRXPPS        equ	573	;# 
  7734   00023E                     INT0PPS         equ	574	;# 
  7735   00023F                     INT1PPS         equ	575	;# 
  7736   000240                     INT2PPS         equ	576	;# 
  7737   000241                     T0CKIPPS        equ	577	;# 
  7738   000242                     T1CKIPPS        equ	578	;# 
  7739   000243                     T1GPPS          equ	579	;# 
  7740   000244                     T3CKIPPS        equ	580	;# 
  7741   000245                     T3GPPS          equ	581	;# 
  7742   000246                     T5CKIPPS        equ	582	;# 
  7743   000247                     T5GPPS          equ	583	;# 
  7744   000248                     T2INPPS         equ	584	;# 
  7745   000249                     T4INPPS         equ	585	;# 
  7746   00024A                     T6INPPS         equ	586	;# 
  7747   00024B                     TUIN0PPS        equ	587	;# 
  7748   00024C                     TUIN1PPS        equ	588	;# 
  7749   00024F                     CCP1PPS         equ	591	;# 
  7750   000250                     CCP2PPS         equ	592	;# 
  7751   000251                     CCP3PPS         equ	593	;# 
  7752   000253                     PWM1ERSPPS      equ	595	;# 
  7753   000254                     PWM2ERSPPS      equ	596	;# 
  7754   000255                     PWM3ERSPPS      equ	597	;# 
  7755   000256                     PWM4ERSPPS      equ	598	;# 
  7756   000257                     PWMIN0PPS       equ	599	;# 
  7757   000258                     PWMIN1PPS       equ	600	;# 
  7758   000259                     SMT1WINPPS      equ	601	;# 
  7759   00025A                     SMT1SIGPPS      equ	602	;# 
  7760   00025B                     CWG1PPS         equ	603	;# 
  7761   00025B                     CWG1INPPS       equ	603	;# 
  7762   00025C                     CWG2PPS         equ	604	;# 
  7763   00025C                     CWG2INPPS       equ	604	;# 
  7764   00025D                     CWG3PPS         equ	605	;# 
  7765   00025D                     CWG3INPPS       equ	605	;# 
  7766   00025E                     MD1CARLPPS      equ	606	;# 
  7767   00025E                     MDCARLPPS       equ	606	;# 
  7768   00025F                     MD1CARHPPS      equ	607	;# 
  7769   00025F                     MDCARHPPS       equ	607	;# 
  7770   000260                     MD1SRCPPS       equ	608	;# 
  7771   000260                     MDSRCPPS        equ	608	;# 
  7772   000261                     CLCIN0PPS       equ	609	;# 
  7773   000262                     CLCIN1PPS       equ	610	;# 
  7774   000263                     CLCIN2PPS       equ	611	;# 
  7775   000264                     CLCIN3PPS       equ	612	;# 
  7776   000265                     CLCIN4PPS       equ	613	;# 
  7777   000266                     CLCIN5PPS       equ	614	;# 
  7778   000267                     CLCIN6PPS       equ	615	;# 
  7779   000268                     CLCIN7PPS       equ	616	;# 
  7780   000269                     ADACTPPS        equ	617	;# 
  7781   00026A                     SPI1SCKPPS      equ	618	;# 
  7782   00026B                     SPI1SDIPPS      equ	619	;# 
  7783   00026C                     SPI1SSPPS       equ	620	;# 
  7784   00026D                     SPI2SCKPPS      equ	621	;# 
  7785   00026E                     SPI2SDIPPS      equ	622	;# 
  7786   00026F                     SPI2SSPPS       equ	623	;# 
  7787   000270                     I2C1SDAPPS      equ	624	;# 
  7788   000271                     I2C1SCLPPS      equ	625	;# 
  7789   000272                     U1RXPPS         equ	626	;# 
  7790   000273                     U1CTSPPS        equ	627	;# 
  7791   000274                     U2RXPPS         equ	628	;# 
  7792   000275                     U2CTSPPS        equ	629	;# 
  7793   000276                     U3RXPPS         equ	630	;# 
  7794   000277                     U3CTSPPS        equ	631	;# 
  7795   000278                     U4RXPPS         equ	632	;# 
  7796   000279                     U4CTSPPS        equ	633	;# 
  7797   00027A                     U5RXPPS         equ	634	;# 
  7798   00027B                     U5CTSPPS        equ	635	;# 
  7799   000286                     RC4I2C          equ	646	;# 
  7800   000287                     RC3I2C          equ	647	;# 
  7801   000288                     RB2I2C          equ	648	;# 
  7802   000289                     RB1I2C          equ	649	;# 
  7803   00028A                     I2C1RXB         equ	650	;# 
  7804   00028B                     I2C1TXB         equ	651	;# 
  7805   00028C                     I2C1CNTL        equ	652	;# 
  7806   00028D                     I2C1CNTH        equ	653	;# 
  7807   00028E                     I2C1ADB0        equ	654	;# 
  7808   00028F                     I2C1ADB1        equ	655	;# 
  7809   000290                     I2C1ADR0        equ	656	;# 
  7810   000291                     I2C1ADR1        equ	657	;# 
  7811   000292                     I2C1ADR2        equ	658	;# 
  7812   000293                     I2C1ADR3        equ	659	;# 
  7813   000294                     I2C1CON0        equ	660	;# 
  7814   000295                     I2C1CON1        equ	661	;# 
  7815   000296                     I2C1CON2        equ	662	;# 
  7816   000297                     I2C1ERR         equ	663	;# 
  7817   000298                     I2C1STAT0       equ	664	;# 
  7818   000299                     I2C1STAT1       equ	665	;# 
  7819   00029A                     I2C1PIR         equ	666	;# 
  7820   00029B                     I2C1PIE         equ	667	;# 
  7821   00029C                     I2C1BTO         equ	668	;# 
  7822   00029D                     I2C1BAUD        equ	669	;# 
  7823   00029E                     I2C1CLK         equ	670	;# 
  7824   00029F                     I2C1BTOC        equ	671	;# 
  7825   0002A1                     U1RXB           equ	673	;# 
  7826   0002A1                     U1RXBL          equ	673	;# 
  7827   0002A2                     U1RXCHK         equ	674	;# 
  7828   0002A3                     U1TXB           equ	675	;# 
  7829   0002A3                     U1TXBL          equ	675	;# 
  7830   0002A4                     U1TXCHK         equ	676	;# 
  7831   0002A5                     U1P1            equ	677	;# 
  7832   0002A5                     U1P1L           equ	677	;# 
  7833   0002A6                     U1P1H           equ	678	;# 
  7834   0002A7                     U1P2            equ	679	;# 
  7835   0002A7                     U1P2L           equ	679	;# 
  7836   0002A8                     U1P2H           equ	680	;# 
  7837   0002A9                     U1P3            equ	681	;# 
  7838   0002A9                     U1P3L           equ	681	;# 
  7839   0002AA                     U1P3H           equ	682	;# 
  7840   0002AB                     U1CON0          equ	683	;# 
  7841   0002AC                     U1CON1          equ	684	;# 
  7842   0002AD                     U1CON2          equ	685	;# 
  7843   0002AE                     U1BRG           equ	686	;# 
  7844   0002AE                     U1BRGL          equ	686	;# 
  7845   0002AF                     U1BRGH          equ	687	;# 
  7846   0002B0                     U1FIFO          equ	688	;# 
  7847   0002B1                     U1UIR           equ	689	;# 
  7848   0002B2                     U1ERRIR         equ	690	;# 
  7849   0002B3                     U1ERRIE         equ	691	;# 
  7850   0002B4                     U2RXB           equ	692	;# 
  7851   0002B4                     U2RXBL          equ	692	;# 
  7852   0002B5                     U2RXCHK         equ	693	;# 
  7853   0002B6                     U2TXB           equ	694	;# 
  7854   0002B6                     U2TXBL          equ	694	;# 
  7855   0002B7                     U2TXCHK         equ	695	;# 
  7856   0002B8                     U2P1            equ	696	;# 
  7857   0002B8                     U2P1L           equ	696	;# 
  7858   0002B9                     U2P1H           equ	697	;# 
  7859   0002BA                     U2P2            equ	698	;# 
  7860   0002BA                     U2P2L           equ	698	;# 
  7861   0002BB                     U2P2H           equ	699	;# 
  7862   0002BC                     U2P3            equ	700	;# 
  7863   0002BC                     U2P3L           equ	700	;# 
  7864   0002BD                     U2P3H           equ	701	;# 
  7865   0002BE                     U2CON0          equ	702	;# 
  7866   0002BF                     U2CON1          equ	703	;# 
  7867   0002C0                     U2CON2          equ	704	;# 
  7868   0002C1                     U2BRG           equ	705	;# 
  7869   0002C1                     U2BRGL          equ	705	;# 
  7870   0002C2                     U2BRGH          equ	706	;# 
  7871   0002C3                     U2FIFO          equ	707	;# 
  7872   0002C4                     U2UIR           equ	708	;# 
  7873   0002C5                     U2ERRIR         equ	709	;# 
  7874   0002C6                     U2ERRIE         equ	710	;# 
  7875   0002C7                     U3RXB           equ	711	;# 
  7876   0002C7                     U3RXBL          equ	711	;# 
  7877   0002C9                     U3TXB           equ	713	;# 
  7878   0002C9                     U3TXBL          equ	713	;# 
  7879   0002CB                     U3P1            equ	715	;# 
  7880   0002CB                     U3P1L           equ	715	;# 
  7881   0002CD                     U3P2            equ	717	;# 
  7882   0002CD                     U3P2L           equ	717	;# 
  7883   0002CF                     U3P3            equ	719	;# 
  7884   0002CF                     U3P3L           equ	719	;# 
  7885   0002D1                     U3CON0          equ	721	;# 
  7886   0002D2                     U3CON1          equ	722	;# 
  7887   0002D3                     U3CON2          equ	723	;# 
  7888   0002D4                     U3BRG           equ	724	;# 
  7889   0002D4                     U3BRGL          equ	724	;# 
  7890   0002D5                     U3BRGH          equ	725	;# 
  7891   0002D6                     U3FIFO          equ	726	;# 
  7892   0002D7                     U3UIR           equ	727	;# 
  7893   0002D8                     U3ERRIR         equ	728	;# 
  7894   0002D9                     U3ERRIE         equ	729	;# 
  7895   0002DA                     U4RXB           equ	730	;# 
  7896   0002DA                     U4RXBL          equ	730	;# 
  7897   0002DC                     U4TXB           equ	732	;# 
  7898   0002DC                     U4TXBL          equ	732	;# 
  7899   0002DE                     U4P1            equ	734	;# 
  7900   0002DE                     U4P1L           equ	734	;# 
  7901   0002E0                     U4P2            equ	736	;# 
  7902   0002E0                     U4P2L           equ	736	;# 
  7903   0002E2                     U4P3            equ	738	;# 
  7904   0002E2                     U4P3L           equ	738	;# 
  7905   0002E4                     U4CON0          equ	740	;# 
  7906   0002E5                     U4CON1          equ	741	;# 
  7907   0002E6                     U4CON2          equ	742	;# 
  7908   0002E7                     U4BRG           equ	743	;# 
  7909   0002E7                     U4BRGL          equ	743	;# 
  7910   0002E8                     U4BRGH          equ	744	;# 
  7911   0002E9                     U4FIFO          equ	745	;# 
  7912   0002EA                     U4UIR           equ	746	;# 
  7913   0002EB                     U4ERRIR         equ	747	;# 
  7914   0002EC                     U4ERRIE         equ	748	;# 
  7915   0002ED                     U5RXB           equ	749	;# 
  7916   0002ED                     U5RXBL          equ	749	;# 
  7917   0002EF                     U5TXB           equ	751	;# 
  7918   0002EF                     U5TXBL          equ	751	;# 
  7919   0002F1                     U5P1            equ	753	;# 
  7920   0002F1                     U5P1L           equ	753	;# 
  7921   0002F3                     U5P2            equ	755	;# 
  7922   0002F3                     U5P2L           equ	755	;# 
  7923   0002F5                     U5P3            equ	757	;# 
  7924   0002F5                     U5P3L           equ	757	;# 
  7925   0002F7                     U5CON0          equ	759	;# 
  7926   0002F8                     U5CON1          equ	760	;# 
  7927   0002F9                     U5CON2          equ	761	;# 
  7928   0002FA                     U5BRG           equ	762	;# 
  7929   0002FA                     U5BRGL          equ	762	;# 
  7930   0002FB                     U5BRGH          equ	763	;# 
  7931   0002FC                     U5FIFO          equ	764	;# 
  7932   0002FD                     U5UIR           equ	765	;# 
  7933   0002FE                     U5ERRIR         equ	766	;# 
  7934   0002FF                     U5ERRIE         equ	767	;# 
  7935   000300                     SMT1TMR         equ	768	;# 
  7936   000300                     SMT1TMRL        equ	768	;# 
  7937   000301                     SMT1TMRH        equ	769	;# 
  7938   000302                     SMT1TMRU        equ	770	;# 
  7939   000303                     SMT1CPR         equ	771	;# 
  7940   000303                     SMT1CPRL        equ	771	;# 
  7941   000304                     SMT1CPRH        equ	772	;# 
  7942   000305                     SMT1CPRU        equ	773	;# 
  7943   000306                     SMT1CPW         equ	774	;# 
  7944   000306                     SMT1CPWL        equ	774	;# 
  7945   000307                     SMT1CPWH        equ	775	;# 
  7946   000308                     SMT1CPWU        equ	776	;# 
  7947   000309                     SMT1PR          equ	777	;# 
  7948   000309                     SMT1PRL         equ	777	;# 
  7949   00030A                     SMT1PRH         equ	778	;# 
  7950   00030B                     SMT1PRU         equ	779	;# 
  7951   00030C                     SMT1CON0        equ	780	;# 
  7952   00030D                     SMT1CON1        equ	781	;# 
  7953   00030E                     SMT1STAT        equ	782	;# 
  7954   00030F                     SMT1CLK         equ	783	;# 
  7955   000310                     SMT1SIG         equ	784	;# 
  7956   000311                     SMT1WIN         equ	785	;# 
  7957   000318                     TMR0L           equ	792	;# 
  7958   000318                     TMR0            equ	792	;# 
  7959   000319                     TMR0H           equ	793	;# 
  7960   000319                     PR0             equ	793	;# 
  7961   00031A                     T0CON0          equ	794	;# 
  7962   00031B                     T0CON1          equ	795	;# 
  7963   00031C                     TMR1            equ	796	;# 
  7964   00031C                     TMR1L           equ	796	;# 
  7965   00031D                     TMR1H           equ	797	;# 
  7966   00031E                     T1CON           equ	798	;# 
  7967   00031E                     TMR1CON         equ	798	;# 
  7968   00031F                     T1GCON          equ	799	;# 
  7969   00031F                     TMR1GCON        equ	799	;# 
  7970   000320                     T1GATE          equ	800	;# 
  7971   000320                     TMR1GATE        equ	800	;# 
  7972   000321                     T1CLK           equ	801	;# 
  7973   000321                     TMR1CLK         equ	801	;# 
  7974   000321                     PR1             equ	801	;# 
  7975   000322                     T2TMR           equ	802	;# 
  7976   000322                     TMR2            equ	802	;# 
  7977   000323                     T2PR            equ	803	;# 
  7978   000323                     PR2             equ	803	;# 
  7979   000324                     T2CON           equ	804	;# 
  7980   000325                     T2HLT           equ	805	;# 
  7981   000326                     T2CLKCON        equ	806	;# 
  7982   000326                     T2CLK           equ	806	;# 
  7983   000327                     T2RST           equ	807	;# 
  7984   000328                     TMR3            equ	808	;# 
  7985   000328                     TMR3L           equ	808	;# 
  7986   000329                     TMR3H           equ	809	;# 
  7987   00032A                     T3CON           equ	810	;# 
  7988   00032A                     TMR3CON         equ	810	;# 
  7989   00032B                     T3GCON          equ	811	;# 
  7990   00032B                     TMR3GCON        equ	811	;# 
  7991   00032C                     T3GATE          equ	812	;# 
  7992   00032C                     TMR3GATE        equ	812	;# 
  7993   00032D                     T3CLK           equ	813	;# 
  7994   00032D                     TMR3CLK         equ	813	;# 
  7995   00032D                     PR3             equ	813	;# 
  7996   00032E                     T4TMR           equ	814	;# 
  7997   00032E                     TMR4            equ	814	;# 
  7998   00032F                     T4PR            equ	815	;# 
  7999   00032F                     PR4             equ	815	;# 
  8000   000330                     T4CON           equ	816	;# 
  8001   000331                     T4HLT           equ	817	;# 
  8002   000332                     T4CLKCON        equ	818	;# 
  8003   000332                     T4CLK           equ	818	;# 
  8004   000333                     T4RST           equ	819	;# 
  8005   000334                     TMR5            equ	820	;# 
  8006   000334                     TMR5L           equ	820	;# 
  8007   000335                     TMR5H           equ	821	;# 
  8008   000336                     T5CON           equ	822	;# 
  8009   000336                     TMR5CON         equ	822	;# 
  8010   000337                     T5GCON          equ	823	;# 
  8011   000337                     TMR5GCON        equ	823	;# 
  8012   000338                     T5GATE          equ	824	;# 
  8013   000338                     TMR5GATE        equ	824	;# 
  8014   000339                     T5CLK           equ	825	;# 
  8015   000339                     TMR5CLK         equ	825	;# 
  8016   000339                     PR5             equ	825	;# 
  8017   00033A                     T6TMR           equ	826	;# 
  8018   00033A                     TMR6            equ	826	;# 
  8019   00033B                     T6PR            equ	827	;# 
  8020   00033B                     PR6             equ	827	;# 
  8021   00033C                     T6CON           equ	828	;# 
  8022   00033D                     T6HLT           equ	829	;# 
  8023   00033E                     T6CLKCON        equ	830	;# 
  8024   00033E                     T6CLK           equ	830	;# 
  8025   00033F                     T6RST           equ	831	;# 
  8026   000340                     CCPR1           equ	832	;# 
  8027   000340                     CCPR1L          equ	832	;# 
  8028   000341                     CCPR1H          equ	833	;# 
  8029   000342                     CCP1CON         equ	834	;# 
  8030   000343                     CCP1CAP         equ	835	;# 
  8031   000344                     CCPR2           equ	836	;# 
  8032   000344                     CCPR2L          equ	836	;# 
  8033   000345                     CCPR2H          equ	837	;# 
  8034   000346                     CCP2CON         equ	838	;# 
  8035   000347                     CCP2CAP         equ	839	;# 
  8036   000348                     CCPR3           equ	840	;# 
  8037   000348                     CCPR3L          equ	840	;# 
  8038   000349                     CCPR3H          equ	841	;# 
  8039   00034A                     CCP3CON         equ	842	;# 
  8040   00034B                     CCP3CAP         equ	843	;# 
  8041   00034C                     CCPTMRS0        equ	844	;# 
  8042   00034F                     CRCDATA         equ	847	;# 
  8043   00034F                     CRCDATAL        equ	847	;# 
  8044   000350                     CRCDATAH        equ	848	;# 
  8045   000351                     CRCDATAU        equ	849	;# 
  8046   000352                     CRCDATAT        equ	850	;# 
  8047   000353                     CRCOUT          equ	851	;# 
  8048   000353                     CRCSHFT         equ	851	;# 
  8049   000353                     CRCXOR          equ	851	;# 
  8050   000353                     CRCOUTL         equ	851	;# 
  8051   000353                     CRCSHFTL        equ	851	;# 
  8052   000353                     CRCSHIFTL       equ	851	;# 
  8053   000353                     CRCXORL         equ	851	;# 
  8054   000354                     CRCOUTH         equ	852	;# 
  8055   000354                     CRCSHFTH        equ	852	;# 
  8056   000354                     CRCSHIFTH       equ	852	;# 
  8057   000354                     CRCXORH         equ	852	;# 
  8058   000355                     CRCOUTU         equ	853	;# 
  8059   000355                     CRCSHFTU        equ	853	;# 
  8060   000355                     CRCSHIFTU       equ	853	;# 
  8061   000355                     CRCXORU         equ	853	;# 
  8062   000356                     CRCOUTT         equ	854	;# 
  8063   000356                     CRCSHFTT        equ	854	;# 
  8064   000356                     CRCSHIFTT       equ	854	;# 
  8065   000356                     CRCXORT         equ	854	;# 
  8066   000357                     CRCCON0         equ	855	;# 
  8067   000358                     CRCCON1         equ	856	;# 
  8068   000359                     CRCCON2         equ	857	;# 
  8069   00035A                     SCANLADR        equ	858	;# 
  8070   00035A                     SCANLADRL       equ	858	;# 
  8071   00035B                     SCANLADRH       equ	859	;# 
  8072   00035C                     SCANLADRU       equ	860	;# 
  8073   00035D                     SCANHADR        equ	861	;# 
  8074   00035D                     SCANHADRL       equ	861	;# 
  8075   00035E                     SCANHADRH       equ	862	;# 
  8076   00035F                     SCANHADRU       equ	863	;# 
  8077   000360                     SCANCON0        equ	864	;# 
  8078   000361                     SCANTRIG        equ	865	;# 
  8079   000362                     IPR0            equ	866	;# 
  8080   000363                     IPR1            equ	867	;# 
  8081   000364                     IPR2            equ	868	;# 
  8082   000365                     IPR3            equ	869	;# 
  8083   000366                     IPR4            equ	870	;# 
  8084   000367                     IPR5            equ	871	;# 
  8085   000368                     IPR6            equ	872	;# 
  8086   000369                     IPR7            equ	873	;# 
  8087   00036A                     IPR8            equ	874	;# 
  8088   00036B                     IPR9            equ	875	;# 
  8089   00036C                     IPR10           equ	876	;# 
  8090   00036D                     IPR11           equ	877	;# 
  8091   00036E                     IPR12           equ	878	;# 
  8092   00036F                     IPR13           equ	879	;# 
  8093   000370                     IPR14           equ	880	;# 
  8094   000371                     IPR15           equ	881	;# 
  8095   000373                     STATUS_CSHAD    equ	883	;# 
  8096   000374                     WREG_CSHAD      equ	884	;# 
  8097   000375                     BSR_CSHAD       equ	885	;# 
  8098   000376                     SHADCON         equ	886	;# 
  8099   000377                     STATUS_SHAD     equ	887	;# 
  8100   000378                     WREG_SHAD       equ	888	;# 
  8101   000379                     BSR_SHAD        equ	889	;# 
  8102   00037A                     PCLATH_SHAD     equ	890	;# 
  8103   00037B                     PCLATU_SHAD     equ	891	;# 
  8104   00037C                     FSR0SH          equ	892	;# 
  8105   00037C                     FSR0L_SHAD      equ	892	;# 
  8106   00037D                     FSR0H_SHAD      equ	893	;# 
  8107   00037E                     FSR1SH          equ	894	;# 
  8108   00037E                     FSR1L_SHAD      equ	894	;# 
  8109   00037F                     FSR1H_SHAD      equ	895	;# 
  8110   000380                     FSR2SH          equ	896	;# 
  8111   000380                     FSR2L_SHAD      equ	896	;# 
  8112   000381                     FSR2H_SHAD      equ	897	;# 
  8113   000382                     PRODSH          equ	898	;# 
  8114   000382                     PRODL_SHAD      equ	898	;# 
  8115   000383                     PRODH_SHAD      equ	899	;# 
  8116   000387                     TU16ACON0       equ	903	;# 
  8117   000388                     TU16ACON1       equ	904	;# 
  8118   000389                     TU16AHLT        equ	905	;# 
  8119   00038A                     TU16APS         equ	906	;# 
  8120   00038B                     TU16ATMR        equ	907	;# 
  8121   00038B                     TU16ACR         equ	907	;# 
  8122   00038B                     TU16ATMRL       equ	907	;# 
  8123   00038B                     TU16ACRL        equ	907	;# 
  8124   00038C                     TU16ATMRH       equ	908	;# 
  8125   00038C                     TU16ACRH        equ	908	;# 
  8126   00038D                     TU16APR         equ	909	;# 
  8127   00038D                     TU16APRL        equ	909	;# 
  8128   00038E                     TU16APRH        equ	910	;# 
  8129   00038F                     TU16ACLK        equ	911	;# 
  8130   000390                     TU16AERS        equ	912	;# 
  8131   000393                     TU16BCON0       equ	915	;# 
  8132   000394                     TU16BCON1       equ	916	;# 
  8133   000395                     TU16BHLT        equ	917	;# 
  8134   000396                     TU16BPS         equ	918	;# 
  8135   000397                     TU16BTMR        equ	919	;# 
  8136   000397                     TU16BCR         equ	919	;# 
  8137   000397                     TU16BTMRL       equ	919	;# 
  8138   000397                     TU16BCRL        equ	919	;# 
  8139   000398                     TU16BTMRH       equ	920	;# 
  8140   000398                     TU16BCRH        equ	920	;# 
  8141   000399                     TU16BPR         equ	921	;# 
  8142   000399                     TU16BPRL        equ	921	;# 
  8143   00039A                     TU16BPRH        equ	922	;# 
  8144   00039B                     TU16BCLK        equ	923	;# 
  8145   00039C                     TU16BERS        equ	924	;# 
  8146   0003BB                     TUCHAIN         equ	955	;# 
  8147   0003BC                     CWG1CLK         equ	956	;# 
  8148   0003BC                     CWG1CLKCON      equ	956	;# 
  8149   0003BD                     CWG1ISM         equ	957	;# 
  8150   0003BE                     CWG1DBR         equ	958	;# 
  8151   0003BF                     CWG1DBF         equ	959	;# 
  8152   0003C0                     CWG1CON0        equ	960	;# 
  8153   0003C1                     CWG1CON1        equ	961	;# 
  8154   0003C2                     CWG1AS0         equ	962	;# 
  8155   0003C3                     CWG1AS1         equ	963	;# 
  8156   0003C4                     CWG1STR         equ	964	;# 
  8157   0003C5                     CWG2CLK         equ	965	;# 
  8158   0003C5                     CWG2CLKCON      equ	965	;# 
  8159   0003C6                     CWG2ISM         equ	966	;# 
  8160   0003C7                     CWG2DBR         equ	967	;# 
  8161   0003C8                     CWG2DBF         equ	968	;# 
  8162   0003C9                     CWG2CON0        equ	969	;# 
  8163   0003CA                     CWG2CON1        equ	970	;# 
  8164   0003CB                     CWG2AS0         equ	971	;# 
  8165   0003CC                     CWG2AS1         equ	972	;# 
  8166   0003CD                     CWG2STR         equ	973	;# 
  8167   0003CE                     CWG3CLK         equ	974	;# 
  8168   0003CE                     CWG3CLKCON      equ	974	;# 
  8169   0003CF                     CWG3ISM         equ	975	;# 
  8170   0003D0                     CWG3DBR         equ	976	;# 
  8171   0003D1                     CWG3DBF         equ	977	;# 
  8172   0003D2                     CWG3CON0        equ	978	;# 
  8173   0003D3                     CWG3CON1        equ	979	;# 
  8174   0003D4                     CWG3AS0         equ	980	;# 
  8175   0003D5                     CWG3AS1         equ	981	;# 
  8176   0003D6                     CWG3STR         equ	982	;# 
  8177   0003D7                     FVRCON          equ	983	;# 
  8178   0003D8                     ADCPCON         equ	984	;# 
  8179   0003D8                     ADCP            equ	984	;# 
  8180   0003D9                     ADLTH           equ	985	;# 
  8181   0003D9                     ADLTHL          equ	985	;# 
  8182   0003DA                     ADLTHH          equ	986	;# 
  8183   0003DB                     ADUTH           equ	987	;# 
  8184   0003DB                     ADUTHL          equ	987	;# 
  8185   0003DC                     ADUTHH          equ	988	;# 
  8186   0003DD                     ADERR           equ	989	;# 
  8187   0003DD                     ADERRL          equ	989	;# 
  8188   0003DE                     ADERRH          equ	990	;# 
  8189   0003DF                     ADSTPT          equ	991	;# 
  8190   0003DF                     ADSTPTL         equ	991	;# 
  8191   0003E0                     ADSTPTH         equ	992	;# 
  8192   0003E1                     ADFLTR          equ	993	;# 
  8193   0003E1                     ADFLTRL         equ	993	;# 
  8194   0003E2                     ADFLTRH         equ	994	;# 
  8195   0003E3                     ADACC           equ	995	;# 
  8196   0003E3                     ADACCL          equ	995	;# 
  8197   0003E4                     ADACCH          equ	996	;# 
  8198   0003E5                     ADACCU          equ	997	;# 
  8199   0003E6                     ADCNT           equ	998	;# 
  8200   0003E7                     ADRPT           equ	999	;# 
  8201   0003E8                     ADPREV          equ	1000	;# 
  8202   0003E8                     ADPREVL         equ	1000	;# 
  8203   0003E9                     ADPREVH         equ	1001	;# 
  8204   0003EA                     ADRES           equ	1002	;# 
  8205   0003EA                     ADRESL          equ	1002	;# 
  8206   0003EB                     ADRESH          equ	1003	;# 
  8207   0003EC                     ADPCH           equ	1004	;# 
  8208   0003EE                     ADACQ           equ	1006	;# 
  8209   0003EE                     ADACQL          equ	1006	;# 
  8210   0003EF                     ADACQH          equ	1007	;# 
  8211   0003F0                     ADCAP           equ	1008	;# 
  8212   0003F1                     ADPRE           equ	1009	;# 
  8213   0003F1                     ADPREL          equ	1009	;# 
  8214   0003F2                     ADPREH          equ	1010	;# 
  8215   0003F3                     ADCON0          equ	1011	;# 
  8216   0003F4                     ADCON1          equ	1012	;# 
  8217   0003F5                     ADCON2          equ	1013	;# 
  8218   0003F6                     ADCON3          equ	1014	;# 
  8219   0003F7                     ADSTAT          equ	1015	;# 
  8220   0003F8                     ADREF           equ	1016	;# 
  8221   0003F9                     ADACT           equ	1017	;# 
  8222   0003FA                     ADCLK           equ	1018	;# 
  8223   0003FB                     ADCTX           equ	1019	;# 
  8224   0003FC                     ADCSEL1         equ	1020	;# 
  8225   0003FD                     ADCSEL2         equ	1021	;# 
  8226   0003FE                     ADCSEL3         equ	1022	;# 
  8227   0003FF                     ADCSEL4         equ	1023	;# 
  8228   000400                     ANSELA          equ	1024	;# 
  8229   000401                     WPUA            equ	1025	;# 
  8230   000402                     ODCONA          equ	1026	;# 
  8231   000403                     SLRCONA         equ	1027	;# 
  8232   000404                     INLVLA          equ	1028	;# 
  8233   000405                     IOCAP           equ	1029	;# 
  8234   000406                     IOCAN           equ	1030	;# 
  8235   000407                     IOCAF           equ	1031	;# 
  8236   000408                     ANSELB          equ	1032	;# 
  8237   000409                     WPUB            equ	1033	;# 
  8238   00040A                     ODCONB          equ	1034	;# 
  8239   00040B                     SLRCONB         equ	1035	;# 
  8240   00040C                     INLVLB          equ	1036	;# 
  8241   00040D                     IOCBP           equ	1037	;# 
  8242   00040E                     IOCBN           equ	1038	;# 
  8243   00040F                     IOCBF           equ	1039	;# 
  8244   000410                     ANSELC          equ	1040	;# 
  8245   000411                     WPUC            equ	1041	;# 
  8246   000412                     ODCONC          equ	1042	;# 
  8247   000413                     SLRCONC         equ	1043	;# 
  8248   000414                     INLVLC          equ	1044	;# 
  8249   000415                     IOCCP           equ	1045	;# 
  8250   000416                     IOCCN           equ	1046	;# 
  8251   000417                     IOCCF           equ	1047	;# 
  8252   000421                     WPUE            equ	1057	;# 
  8253   000424                     INLVLE          equ	1060	;# 
  8254   000425                     IOCEP           equ	1061	;# 
  8255   000426                     IOCEN           equ	1062	;# 
  8256   000427                     IOCEF           equ	1063	;# 
  8257   000440                     NCO1ACC         equ	1088	;# 
  8258   000440                     NCO1ACCL        equ	1088	;# 
  8259   000441                     NCO1ACCH        equ	1089	;# 
  8260   000442                     NCO1ACCU        equ	1090	;# 
  8261   000443                     NCO1INC         equ	1091	;# 
  8262   000443                     NCO1INCL        equ	1091	;# 
  8263   000444                     NCO1INCH        equ	1092	;# 
  8264   000445                     NCO1INCU        equ	1093	;# 
  8265   000446                     NCO1CON         equ	1094	;# 
  8266   000447                     NCO1CLK         equ	1095	;# 
  8267   000448                     NCO2ACC         equ	1096	;# 
  8268   000448                     NCO2ACCL        equ	1096	;# 
  8269   000449                     NCO2ACCH        equ	1097	;# 
  8270   00044A                     NCO2ACCU        equ	1098	;# 
  8271   00044B                     NCO2INC         equ	1099	;# 
  8272   00044B                     NCO2INCL        equ	1099	;# 
  8273   00044C                     NCO2INCH        equ	1100	;# 
  8274   00044D                     NCO2INCU        equ	1101	;# 
  8275   00044E                     NCO2CON         equ	1102	;# 
  8276   00044F                     NCO2CLK         equ	1103	;# 
  8277   000450                     NCO3ACC         equ	1104	;# 
  8278   000450                     NCO3ACCL        equ	1104	;# 
  8279   000451                     NCO3ACCH        equ	1105	;# 
  8280   000452                     NCO3ACCU        equ	1106	;# 
  8281   000453                     NCO3INC         equ	1107	;# 
  8282   000453                     NCO3INCL        equ	1107	;# 
  8283   000454                     NCO3INCH        equ	1108	;# 
  8284   000455                     NCO3INCU        equ	1109	;# 
  8285   000456                     NCO3CON         equ	1110	;# 
  8286   000457                     NCO3CLK         equ	1111	;# 
  8287   000458                     FSCMCON         equ	1112	;# 
  8288   000459                     IVTLOCK         equ	1113	;# 
  8289   00045A                     IVTAD           equ	1114	;# 
  8290   00045A                     IVTADL          equ	1114	;# 
  8291   00045B                     IVTADH          equ	1115	;# 
  8292   00045C                     IVTADU          equ	1116	;# 
  8293   00045D                     IVTBASE         equ	1117	;# 
  8294   00045D                     IVTBASEL        equ	1117	;# 
  8295   00045E                     IVTBASEH        equ	1118	;# 
  8296   00045F                     IVTBASEU        equ	1119	;# 
  8297   000460                     PWM1ERS         equ	1120	;# 
  8298   000461                     PWM1CLK         equ	1121	;# 
  8299   000462                     PWM1LDS         equ	1122	;# 
  8300   000463                     PWM1PR          equ	1123	;# 
  8301   000463                     PWM1PRL         equ	1123	;# 
  8302   000464                     PWM1PRH         equ	1124	;# 
  8303   000465                     PWM1CPRE        equ	1125	;# 
  8304   000466                     PWM1PIPOS       equ	1126	;# 
  8305   000467                     PWM1GIR         equ	1127	;# 
  8306   000468                     PWM1GIE         equ	1128	;# 
  8307   000469                     PWM1CON         equ	1129	;# 
  8308   00046A                     PWM1S1CFG       equ	1130	;# 
  8309   00046B                     PWM1S1P1        equ	1131	;# 
  8310   00046B                     PWM1S1P1L       equ	1131	;# 
  8311   00046C                     PWM1S1P1H       equ	1132	;# 
  8312   00046D                     PWM1S1P2        equ	1133	;# 
  8313   00046D                     PWM1S1P2L       equ	1133	;# 
  8314   00046E                     PWM1S1P2H       equ	1134	;# 
  8315   00046F                     PWM2ERS         equ	1135	;# 
  8316   000470                     PWM2CLK         equ	1136	;# 
  8317   000471                     PWM2LDS         equ	1137	;# 
  8318   000472                     PWM2PR          equ	1138	;# 
  8319   000472                     PWM2PRL         equ	1138	;# 
  8320   000473                     PWM2PRH         equ	1139	;# 
  8321   000474                     PWM2CPRE        equ	1140	;# 
  8322   000475                     PWM2PIPOS       equ	1141	;# 
  8323   000476                     PWM2GIR         equ	1142	;# 
  8324   000477                     PWM2GIE         equ	1143	;# 
  8325   000478                     PWM2CON         equ	1144	;# 
  8326   000479                     PWM2S1CFG       equ	1145	;# 
  8327   00047A                     PWM2S1P1        equ	1146	;# 
  8328   00047A                     PWM2S1P1L       equ	1146	;# 
  8329   00047B                     PWM2S1P1H       equ	1147	;# 
  8330   00047C                     PWM2S1P2        equ	1148	;# 
  8331   00047C                     PWM2S1P2L       equ	1148	;# 
  8332   00047D                     PWM2S1P2H       equ	1149	;# 
  8333   00047E                     PWM3ERS         equ	1150	;# 
  8334   00047F                     PWM3CLK         equ	1151	;# 
  8335   000480                     PWM3LDS         equ	1152	;# 
  8336   000481                     PWM3PR          equ	1153	;# 
  8337   000481                     PWM3PRL         equ	1153	;# 
  8338   000482                     PWM3PRH         equ	1154	;# 
  8339   000483                     PWM3CPRE        equ	1155	;# 
  8340   000484                     PWM3PIPOS       equ	1156	;# 
  8341   000485                     PWM3GIR         equ	1157	;# 
  8342   000486                     PWM3GIE         equ	1158	;# 
  8343   000487                     PWM3CON         equ	1159	;# 
  8344   000488                     PWM3S1CFG       equ	1160	;# 
  8345   000489                     PWM3S1P1        equ	1161	;# 
  8346   000489                     PWM3S1P1L       equ	1161	;# 
  8347   00048A                     PWM3S1P1H       equ	1162	;# 
  8348   00048B                     PWM3S1P2        equ	1163	;# 
  8349   00048B                     PWM3S1P2L       equ	1163	;# 
  8350   00048C                     PWM3S1P2H       equ	1164	;# 
  8351   00048D                     PWM4ERS         equ	1165	;# 
  8352   00048E                     PWM4CLK         equ	1166	;# 
  8353   00048F                     PWM4LDS         equ	1167	;# 
  8354   000490                     PWM4PR          equ	1168	;# 
  8355   000490                     PWM4PRL         equ	1168	;# 
  8356   000491                     PWM4PRH         equ	1169	;# 
  8357   000492                     PWM4CPRE        equ	1170	;# 
  8358   000493                     PWM4PIPOS       equ	1171	;# 
  8359   000494                     PWM4GIR         equ	1172	;# 
  8360   000495                     PWM4GIE         equ	1173	;# 
  8361   000496                     PWM4CON         equ	1174	;# 
  8362   000497                     PWM4S1CFG       equ	1175	;# 
  8363   000498                     PWM4S1P1        equ	1176	;# 
  8364   000498                     PWM4S1P1L       equ	1176	;# 
  8365   000499                     PWM4S1P1H       equ	1177	;# 
  8366   00049A                     PWM4S1P2        equ	1178	;# 
  8367   00049A                     PWM4S1P2L       equ	1178	;# 
  8368   00049B                     PWM4S1P2H       equ	1179	;# 
  8369   00049C                     PWMLOAD         equ	1180	;# 
  8370   00049D                     PWMEN           equ	1181	;# 
  8371   00049E                     PIE0            equ	1182	;# 
  8372   00049F                     PIE1            equ	1183	;# 
  8373   0004A0                     PIE2            equ	1184	;# 
  8374   0004A1                     PIE3            equ	1185	;# 
  8375   0004A2                     PIE4            equ	1186	;# 
  8376   0004A3                     PIE5            equ	1187	;# 
  8377   0004A4                     PIE6            equ	1188	;# 
  8378   0004A5                     PIE7            equ	1189	;# 
  8379   0004A6                     PIE8            equ	1190	;# 
  8380   0004A7                     PIE9            equ	1191	;# 
  8381   0004A8                     PIE10           equ	1192	;# 
  8382   0004A9                     PIE11           equ	1193	;# 
  8383   0004AA                     PIE12           equ	1194	;# 
  8384   0004AB                     PIE13           equ	1195	;# 
  8385   0004AC                     PIE14           equ	1196	;# 
  8386   0004AD                     PIE15           equ	1197	;# 
  8387   0004AE                     PIR0            equ	1198	;# 
  8388   0004AF                     PIR1            equ	1199	;# 
  8389   0004B0                     PIR2            equ	1200	;# 
  8390   0004B1                     PIR3            equ	1201	;# 
  8391   0004B2                     PIR4            equ	1202	;# 
  8392   0004B3                     PIR5            equ	1203	;# 
  8393   0004B4                     PIR6            equ	1204	;# 
  8394   0004B5                     PIR7            equ	1205	;# 
  8395   0004B6                     PIR8            equ	1206	;# 
  8396   0004B7                     PIR9            equ	1207	;# 
  8397   0004B8                     PIR10           equ	1208	;# 
  8398   0004B9                     PIR11           equ	1209	;# 
  8399   0004BA                     PIR12           equ	1210	;# 
  8400   0004BB                     PIR13           equ	1211	;# 
  8401   0004BC                     PIR14           equ	1212	;# 
  8402   0004BD                     PIR15           equ	1213	;# 
  8403   0004BE                     LATA            equ	1214	;# 
  8404   0004BF                     LATB            equ	1215	;# 
  8405   0004C0                     LATC            equ	1216	;# 
  8406   0004C6                     TRISA           equ	1222	;# 
  8407   0004C7                     TRISB           equ	1223	;# 
  8408   0004C8                     TRISC           equ	1224	;# 
  8409   0004CA                     TRISE           equ	1226	;# 
  8410   0004CE                     PORTA           equ	1230	;# 
  8411   0004CF                     PORTB           equ	1231	;# 
  8412   0004D0                     PORTC           equ	1232	;# 
  8413   0004D2                     PORTE           equ	1234	;# 
  8414   0004D6                     INTCON0         equ	1238	;# 
  8415   0004D7                     INTCON1         equ	1239	;# 
  8416   0004D8                     STATUS          equ	1240	;# 
  8417   0004D9                     FSR2            equ	1241	;# 
  8418   0004D9                     FSR2L           equ	1241	;# 
  8419   0004DA                     FSR2H           equ	1242	;# 
  8420   0004DB                     PLUSW2          equ	1243	;# 
  8421   0004DC                     PREINC2         equ	1244	;# 
  8422   0004DD                     POSTDEC2        equ	1245	;# 
  8423   0004DE                     POSTINC2        equ	1246	;# 
  8424   0004DF                     INDF2           equ	1247	;# 
  8425   0004E0                     BSR             equ	1248	;# 
  8426   0004E1                     FSR1            equ	1249	;# 
  8427   0004E1                     FSR1L           equ	1249	;# 
  8428   0004E2                     FSR1H           equ	1250	;# 
  8429   0004E3                     PLUSW1          equ	1251	;# 
  8430   0004E4                     PREINC1         equ	1252	;# 
  8431   0004E5                     POSTDEC1        equ	1253	;# 
  8432   0004E6                     POSTINC1        equ	1254	;# 
  8433   0004E7                     INDF1           equ	1255	;# 
  8434   0004E8                     WREG            equ	1256	;# 
  8435   0004E9                     FSR0            equ	1257	;# 
  8436   0004E9                     FSR0L           equ	1257	;# 
  8437   0004EA                     FSR0H           equ	1258	;# 
  8438   0004EB                     PLUSW0          equ	1259	;# 
  8439   0004EC                     PREINC0         equ	1260	;# 
  8440   0004ED                     POSTDEC0        equ	1261	;# 
  8441   0004EE                     POSTINC0        equ	1262	;# 
  8442   0004EF                     INDF0           equ	1263	;# 
  8443   0004F0                     PCON0           equ	1264	;# 
  8444   0004F1                     PCON1           equ	1265	;# 
  8445   0004F2                     CPUDOZE         equ	1266	;# 
  8446   0004F3                     PROD            equ	1267	;# 
  8447   0004F3                     PRODL           equ	1267	;# 
  8448   0004F4                     PRODH           equ	1268	;# 
  8449   0004F5                     TABLAT          equ	1269	;# 
  8450   0004F6                     TBLPTR          equ	1270	;# 
  8451   0004F6                     TBLPTRL         equ	1270	;# 
  8452   0004F7                     TBLPTRH         equ	1271	;# 
  8453   0004F8                     TBLPTRU         equ	1272	;# 
  8454   0004F9                     PCLAT           equ	1273	;# 
  8455   0004F9                     PCL             equ	1273	;# 
  8456   0004FA                     PCLATH          equ	1274	;# 
  8457   0004FB                     PCLATU          equ	1275	;# 
  8458   0004FC                     STKPTR          equ	1276	;# 
  8459   0004FD                     TOS             equ	1277	;# 
  8460   0004FD                     TOSL            equ	1277	;# 
  8461   0004FE                     TOSH            equ	1278	;# 
  8462   0004FF                     TOSU            equ	1279	;# 
  8463   000038                     BOOTREG         equ	56	;# 
  8464   000039                     CLKRCON         equ	57	;# 
  8465   00003A                     CLKRCLK         equ	58	;# 
  8466   000040                     NVMCON0         equ	64	;# 
  8467   000041                     NVMCON1         equ	65	;# 
  8468   000042                     NVMLOCK         equ	66	;# 
  8469   000043                     NVMADR          equ	67	;# 
  8470   000043                     NVMADRL         equ	67	;# 
  8471   000044                     NVMADRH         equ	68	;# 
  8472   000045                     NVMADRU         equ	69	;# 
  8473   000046                     NVMDAT          equ	70	;# 
  8474   000046                     NVMDATL         equ	70	;# 
  8475   000047                     NVMDATH         equ	71	;# 
  8476   000048                     VREGCON         equ	72	;# 
  8477   000049                     BORCON          equ	73	;# 
  8478   00004A                     HLVDCON0        equ	74	;# 
  8479   00004B                     HLVDCON1        equ	75	;# 
  8480   00004C                     ZCDCON          equ	76	;# 
  8481   000060                     PMD0            equ	96	;# 
  8482   000061                     PMD1            equ	97	;# 
  8483   000062                     PMD2            equ	98	;# 
  8484   000063                     PMD3            equ	99	;# 
  8485   000064                     PMD4            equ	100	;# 
  8486   000065                     PMD5            equ	101	;# 
  8487   000066                     PMD6            equ	102	;# 
  8488   000067                     PMD7            equ	103	;# 
  8489   000068                     PMD8            equ	104	;# 
  8490   00006A                     MD1CON0         equ	106	;# 
  8491   00006B                     MD1CON1         equ	107	;# 
  8492   00006C                     MD1SRC          equ	108	;# 
  8493   00006D                     MD1CARL         equ	109	;# 
  8494   00006E                     MD1CARH         equ	110	;# 
  8495   00006F                     CMOUT           equ	111	;# 
  8496   000070                     CM1CON0         equ	112	;# 
  8497   000071                     CM1CON1         equ	113	;# 
  8498   000072                     CM1NCH          equ	114	;# 
  8499   000073                     CM1PCH          equ	115	;# 
  8500   000074                     CM2CON0         equ	116	;# 
  8501   000075                     CM2CON1         equ	117	;# 
  8502   000076                     CM2NCH          equ	118	;# 
  8503   000077                     CM2PCH          equ	119	;# 
  8504   000078                     WDTCON0         equ	120	;# 
  8505   000079                     WDTCON1         equ	121	;# 
  8506   00007A                     WDTPSL          equ	122	;# 
  8507   00007B                     WDTPSH          equ	123	;# 
  8508   00007C                     WDTTMR          equ	124	;# 
  8509   00007D                     DAC1DAT         equ	125	;# 
  8510   00007D                     DAC1DATL        equ	125	;# 
  8511   00007F                     DAC1CON         equ	127	;# 
  8512   000080                     SPI1RXB         equ	128	;# 
  8513   000081                     SPI1TXB         equ	129	;# 
  8514   000082                     SPI1TCNT        equ	130	;# 
  8515   000082                     SPI1TCNTL       equ	130	;# 
  8516   000083                     SPI1TCNTH       equ	131	;# 
  8517   000084                     SPI1CON0        equ	132	;# 
  8518   000085                     SPI1CON1        equ	133	;# 
  8519   000086                     SPI1CON2        equ	134	;# 
  8520   000087                     SPI1STATUS      equ	135	;# 
  8521   000088                     SPI1TWIDTH      equ	136	;# 
  8522   000089                     SPI1BAUD        equ	137	;# 
  8523   00008A                     SPI1INTF        equ	138	;# 
  8524   00008B                     SPI1INTE        equ	139	;# 
  8525   00008C                     SPI1CLK         equ	140	;# 
  8526   00008D                     SPI2RXB         equ	141	;# 
  8527   00008E                     SPI2TXB         equ	142	;# 
  8528   00008F                     SPI2TCNT        equ	143	;# 
  8529   00008F                     SPI2TCNTL       equ	143	;# 
  8530   000090                     SPI2TCNTH       equ	144	;# 
  8531   000091                     SPI2CON0        equ	145	;# 
  8532   000092                     SPI2CON1        equ	146	;# 
  8533   000093                     SPI2CON2        equ	147	;# 
  8534   000094                     SPI2STATUS      equ	148	;# 
  8535   000095                     SPI2TWIDTH      equ	149	;# 
  8536   000096                     SPI2BAUD        equ	150	;# 
  8537   000097                     SPI2INTF        equ	151	;# 
  8538   000098                     SPI2INTE        equ	152	;# 
  8539   000099                     SPI2CLK         equ	153	;# 
  8540   0000AC                     ACTCON          equ	172	;# 
  8541   0000AD                     OSCCON1         equ	173	;# 
  8542   0000AE                     OSCCON2         equ	174	;# 
  8543   0000AF                     OSCCON3         equ	175	;# 
  8544   0000B0                     OSCTUNE         equ	176	;# 
  8545   0000B1                     OSCFRQ          equ	177	;# 
  8546   0000B1                     OSCFREQ         equ	177	;# 
  8547   0000B2                     OSCSTAT         equ	178	;# 
  8548   0000B2                     OSCSTAT1        equ	178	;# 
  8549   0000B3                     OSCEN           equ	179	;# 
  8550   0000B4                     PRLOCK          equ	180	;# 
  8551   0000B5                     SCANPR          equ	181	;# 
  8552   0000B6                     DMA1PR          equ	182	;# 
  8553   0000B7                     DMA2PR          equ	183	;# 
  8554   0000B8                     DMA3PR          equ	184	;# 
  8555   0000B9                     DMA4PR          equ	185	;# 
  8556   0000BA                     DMA5PR          equ	186	;# 
  8557   0000BB                     DMA6PR          equ	187	;# 
  8558   0000BC                     DMA7PR          equ	188	;# 
  8559   0000BD                     DMA8PR          equ	189	;# 
  8560   0000BE                     MAINPR          equ	190	;# 
  8561   0000BF                     ISRPR           equ	191	;# 
  8562   0000D4                     CLCDATA         equ	212	;# 
  8563   0000D5                     CLCSELECT       equ	213	;# 
  8564   0000D6                     CLCnCON         equ	214	;# 
  8565   0000D7                     CLCnPOL         equ	215	;# 
  8566   0000D8                     CLCnSEL0        equ	216	;# 
  8567   0000D9                     CLCnSEL1        equ	217	;# 
  8568   0000DA                     CLCnSEL2        equ	218	;# 
  8569   0000DB                     CLCnSEL3        equ	219	;# 
  8570   0000DC                     CLCnGLS0        equ	220	;# 
  8571   0000DD                     CLCnGLS1        equ	221	;# 
  8572   0000DE                     CLCnGLS2        equ	222	;# 
  8573   0000DF                     CLCnGLS3        equ	223	;# 
  8574   0000E8                     DMASELECT       equ	232	;# 
  8575   0000E9                     DMAnBUF         equ	233	;# 
  8576   0000EA                     DMAnDCNT        equ	234	;# 
  8577   0000EA                     DMAnDCNTL       equ	234	;# 
  8578   0000EB                     DMAnDCNTH       equ	235	;# 
  8579   0000EC                     DMAnDPTR        equ	236	;# 
  8580   0000EC                     DMAnDPTRL       equ	236	;# 
  8581   0000ED                     DMAnDPTRH       equ	237	;# 
  8582   0000EE                     DMAnDSZ         equ	238	;# 
  8583   0000EE                     DMAnDSZL        equ	238	;# 
  8584   0000EF                     DMAnDSZH        equ	239	;# 
  8585   0000F0                     DMAnDSA         equ	240	;# 
  8586   0000F0                     DMAnDSAL        equ	240	;# 
  8587   0000F1                     DMAnDSAH        equ	241	;# 
  8588   0000F2                     DMAnSCNT        equ	242	;# 
  8589   0000F2                     DMAnSCNTL       equ	242	;# 
  8590   0000F3                     DMAnSCNTH       equ	243	;# 
  8591   0000F4                     DMAnSPTR        equ	244	;# 
  8592   0000F4                     DMAnSPTRL       equ	244	;# 
  8593   0000F5                     DMAnSPTRH       equ	245	;# 
  8594   0000F6                     DMAnSPTRU       equ	246	;# 
  8595   0000F7                     DMAnSSZ         equ	247	;# 
  8596   0000F7                     DMAnSSZL        equ	247	;# 
  8597   0000F8                     DMAnSSZH        equ	248	;# 
  8598   0000F9                     DMAnSSA         equ	249	;# 
  8599   0000F9                     DMAnSSAL        equ	249	;# 
  8600   0000FA                     DMAnSSAH        equ	250	;# 
  8601   0000FB                     DMAnSSAU        equ	251	;# 
  8602   0000FC                     DMAnCON0        equ	252	;# 
  8603   0000FD                     DMAnCON1        equ	253	;# 
  8604   0000FE                     DMAnAIRQ        equ	254	;# 
  8605   0000FF                     DMAnSIRQ        equ	255	;# 
  8606   000100                     C1CONL          equ	256	;# 
  8607   000101                     C1CONH          equ	257	;# 
  8608   000102                     C1CONU          equ	258	;# 
  8609   000103                     C1CONT          equ	259	;# 
  8610   000104                     C1NBTCFGL       equ	260	;# 
  8611   000105                     C1NBTCFGH       equ	261	;# 
  8612   000106                     C1NBTCFGU       equ	262	;# 
  8613   000107                     C1NBTCFGT       equ	263	;# 
  8614   000108                     C1DBTCFGL       equ	264	;# 
  8615   000109                     C1DBTCFGH       equ	265	;# 
  8616   00010A                     C1DBTCFGU       equ	266	;# 
  8617   00010B                     C1DBTCFGT       equ	267	;# 
  8618   00010C                     C1TDCL          equ	268	;# 
  8619   00010D                     C1TDCH          equ	269	;# 
  8620   00010E                     C1TDCU          equ	270	;# 
  8621   000110                     C1TBC           equ	272	;# 
  8622   000110                     C1TBCL          equ	272	;# 
  8623   000111                     C1TBCH          equ	273	;# 
  8624   000112                     C1TBCU          equ	274	;# 
  8625   000113                     C1TBCT          equ	275	;# 
  8626   000114                     C1TSCONL        equ	276	;# 
  8627   000115                     C1TSCONH        equ	277	;# 
  8628   000116                     C1TSCONU        equ	278	;# 
  8629   000117                     C1TSCONT        equ	279	;# 
  8630   000118                     C1VECL          equ	280	;# 
  8631   000119                     C1VECH          equ	281	;# 
  8632   00011A                     C1VECU          equ	282	;# 
  8633   00011B                     C1VECT          equ	283	;# 
  8634   00011C                     C1INTL          equ	284	;# 
  8635   00011D                     C1INTH          equ	285	;# 
  8636   00011E                     C1INTU          equ	286	;# 
  8637   00011F                     C1INTT          equ	287	;# 
  8638   000120                     C1RXIF          equ	288	;# 
  8639   000120                     C1RXIFL         equ	288	;# 
  8640   000121                     C1RXIFH         equ	289	;# 
  8641   000122                     C1RXIFU         equ	290	;# 
  8642   000123                     C1RXIFT         equ	291	;# 
  8643   000124                     C1TXIF          equ	292	;# 
  8644   000124                     C1TXIFL         equ	292	;# 
  8645   000125                     C1TXIFH         equ	293	;# 
  8646   000126                     C1TXIFU         equ	294	;# 
  8647   000127                     C1TXIFT         equ	295	;# 
  8648   000128                     C1RXOVIF        equ	296	;# 
  8649   000128                     C1RXOVIFL       equ	296	;# 
  8650   000129                     C1RXOVIFH       equ	297	;# 
  8651   00012A                     C1RXOVIFU       equ	298	;# 
  8652   00012B                     C1RXOVIFT       equ	299	;# 
  8653   00012C                     C1TXATIF        equ	300	;# 
  8654   00012C                     C1TXATIFL       equ	300	;# 
  8655   00012D                     C1TXATIFH       equ	301	;# 
  8656   00012E                     C1TXATIFU       equ	302	;# 
  8657   00012F                     C1TXATIFT       equ	303	;# 
  8658   000130                     C1TXREQ         equ	304	;# 
  8659   000130                     C1TXREQL        equ	304	;# 
  8660   000131                     C1TXREQH        equ	305	;# 
  8661   000132                     C1TXREQU        equ	306	;# 
  8662   000133                     C1TXREQT        equ	307	;# 
  8663   000134                     C1TRECL         equ	308	;# 
  8664   000135                     C1TRECH         equ	309	;# 
  8665   000136                     C1TRECU         equ	310	;# 
  8666   000137                     C1TRECT         equ	311	;# 
  8667   000138                     C1BDIAG0L       equ	312	;# 
  8668   000139                     C1BDIAG0H       equ	313	;# 
  8669   00013C                     C1BDIAG1L       equ	316	;# 
  8670   00013D                     C1BDIAG1H       equ	317	;# 
  8671   00013E                     C1BDIAG1U       equ	318	;# 
  8672   00013F                     C1BDIAG1T       equ	319	;# 
  8673   000140                     C1TEFCONL       equ	320	;# 
  8674   000141                     C1TEFCONH       equ	321	;# 
  8675   000142                     C1TEFCONU       equ	322	;# 
  8676   000143                     C1TEFCONT       equ	323	;# 
  8677   000144                     C1TEFSTAL       equ	324	;# 
  8678   000145                     C1TEFSTAH       equ	325	;# 
  8679   000146                     C1TEFSTAU       equ	326	;# 
  8680   000147                     C1TEFSTAT       equ	327	;# 
  8681   000148                     C1TEFUA         equ	328	;# 
  8682   000148                     C1TEFUAL        equ	328	;# 
  8683   000149                     C1TEFUAH        equ	329	;# 
  8684   00014A                     C1TEFUAU        equ	330	;# 
  8685   00014B                     C1TEFUAT        equ	331	;# 
  8686   00014C                     C1FIFOBA        equ	332	;# 
  8687   00014C                     C1FIFOBAL       equ	332	;# 
  8688   00014D                     C1FIFOBAH       equ	333	;# 
  8689   00014E                     C1FIFOBAU       equ	334	;# 
  8690   00014F                     C1FIFOBAT       equ	335	;# 
  8691   000150                     C1TXQCONL       equ	336	;# 
  8692   000151                     C1TXQCONH       equ	337	;# 
  8693   000152                     C1TXQCONU       equ	338	;# 
  8694   000153                     C1TXQCONT       equ	339	;# 
  8695   000154                     C1TXQSTAL       equ	340	;# 
  8696   000155                     C1TXQSTAH       equ	341	;# 
  8697   000156                     C1TXQSTAU       equ	342	;# 
  8698   000157                     C1TXQSTAT       equ	343	;# 
  8699   000158                     C1TXQUA         equ	344	;# 
  8700   000158                     C1TXQUAL        equ	344	;# 
  8701   000159                     C1TXQUAH        equ	345	;# 
  8702   00015A                     C1TXQUAU        equ	346	;# 
  8703   00015B                     C1TXQUAT        equ	347	;# 
  8704   00015C                     C1FIFOCON1      equ	348	;# 
  8705   00015C                     C1FIFOCON1L     equ	348	;# 
  8706   00015D                     C1FIFOCON1H     equ	349	;# 
  8707   00015E                     C1FIFOCON1U     equ	350	;# 
  8708   00015F                     C1FIFOCON1T     equ	351	;# 
  8709   000160                     C1FIFOSTA1      equ	352	;# 
  8710   000160                     C1FIFOSTA1L     equ	352	;# 
  8711   000161                     C1FIFOSTA1H     equ	353	;# 
  8712   000162                     C1FIFOSTA1U     equ	354	;# 
  8713   000163                     C1FIFOSTA1T     equ	355	;# 
  8714   000164                     C1FIFOUA1       equ	356	;# 
  8715   000164                     C1FIFOUA1L      equ	356	;# 
  8716   000165                     C1FIFOUA1H      equ	357	;# 
  8717   000166                     C1FIFOUA1U      equ	358	;# 
  8718   000167                     C1FIFOUA1T      equ	359	;# 
  8719   000168                     C1FIFOCON2      equ	360	;# 
  8720   000168                     C1FIFOCON2L     equ	360	;# 
  8721   000169                     C1FIFOCON2H     equ	361	;# 
  8722   00016A                     C1FIFOCON2U     equ	362	;# 
  8723   00016B                     C1FIFOCON2T     equ	363	;# 
  8724   00016C                     C1FIFOSTA2      equ	364	;# 
  8725   00016C                     C1FIFOSTA2L     equ	364	;# 
  8726   00016D                     C1FIFOSTA2H     equ	365	;# 
  8727   00016E                     C1FIFOSTA2U     equ	366	;# 
  8728   00016F                     C1FIFOSTA2T     equ	367	;# 
  8729   000170                     C1FIFOUA2       equ	368	;# 
  8730   000170                     C1FIFOUA2L      equ	368	;# 
  8731   000171                     C1FIFOUA2H      equ	369	;# 
  8732   000172                     C1FIFOUA2U      equ	370	;# 
  8733   000173                     C1FIFOUA2T      equ	371	;# 
  8734   000174                     C1FIFOCON3      equ	372	;# 
  8735   000174                     C1FIFOCON3L     equ	372	;# 
  8736   000175                     C1FIFOCON3H     equ	373	;# 
  8737   000176                     C1FIFOCON3U     equ	374	;# 
  8738   000177                     C1FIFOCON3T     equ	375	;# 
  8739   000178                     C1FIFOSTA3      equ	376	;# 
  8740   000178                     C1FIFOSTA3L     equ	376	;# 
  8741   000179                     C1FIFOSTA3H     equ	377	;# 
  8742   00017A                     C1FIFOSTA3U     equ	378	;# 
  8743   00017B                     C1FIFOSTA3T     equ	379	;# 
  8744   00017C                     C1FIFOUA3       equ	380	;# 
  8745   00017C                     C1FIFOUA3L      equ	380	;# 
  8746   00017D                     C1FIFOUA3H      equ	381	;# 
  8747   00017E                     C1FIFOUA3U      equ	382	;# 
  8748   00017F                     C1FIFOUA3T      equ	383	;# 
  8749   000180                     C1FLTCON0L      equ	384	;# 
  8750   000181                     C1FLTCON0H      equ	385	;# 
  8751   000182                     C1FLTCON0U      equ	386	;# 
  8752   000183                     C1FLTCON0T      equ	387	;# 
  8753   000184                     C1FLTCON1L      equ	388	;# 
  8754   000185                     C1FLTCON1H      equ	389	;# 
  8755   000186                     C1FLTCON1U      equ	390	;# 
  8756   000187                     C1FLTCON1T      equ	391	;# 
  8757   000188                     C1FLTCON2L      equ	392	;# 
  8758   000189                     C1FLTCON2H      equ	393	;# 
  8759   00018A                     C1FLTCON2U      equ	394	;# 
  8760   00018B                     C1FLTCON2T      equ	395	;# 
  8761   00018C                     C1FLTOBJ0       equ	396	;# 
  8762   00018C                     C1FLTOBJ0L      equ	396	;# 
  8763   00018D                     C1FLTOBJ0H      equ	397	;# 
  8764   00018E                     C1FLTOBJ0U      equ	398	;# 
  8765   00018F                     C1FLTOBJ0T      equ	399	;# 
  8766   000190                     C1MASK0         equ	400	;# 
  8767   000190                     C1MASK0L        equ	400	;# 
  8768   000191                     C1MASK0H        equ	401	;# 
  8769   000192                     C1MASK0U        equ	402	;# 
  8770   000193                     C1MASK0T        equ	403	;# 
  8771   000194                     C1FLTOBJ1       equ	404	;# 
  8772   000194                     C1FLTOBJ1L      equ	404	;# 
  8773   000195                     C1FLTOBJ1H      equ	405	;# 
  8774   000196                     C1FLTOBJ1U      equ	406	;# 
  8775   000197                     C1FLTOBJ1T      equ	407	;# 
  8776   000198                     C1MASK1         equ	408	;# 
  8777   000198                     C1MASK1L        equ	408	;# 
  8778   000199                     C1MASK1H        equ	409	;# 
  8779   00019A                     C1MASK1U        equ	410	;# 
  8780   00019B                     C1MASK1T        equ	411	;# 
  8781   00019C                     C1FLTOBJ2       equ	412	;# 
  8782   00019C                     C1FLTOBJ2L      equ	412	;# 
  8783   00019D                     C1FLTOBJ2H      equ	413	;# 
  8784   00019E                     C1FLTOBJ2U      equ	414	;# 
  8785   00019F                     C1FLTOBJ2T      equ	415	;# 
  8786   0001A0                     C1MASK2         equ	416	;# 
  8787   0001A0                     C1MASK2L        equ	416	;# 
  8788   0001A1                     C1MASK2H        equ	417	;# 
  8789   0001A2                     C1MASK2U        equ	418	;# 
  8790   0001A3                     C1MASK2T        equ	419	;# 
  8791   0001A4                     C1FLTOBJ3       equ	420	;# 
  8792   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8793   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8794   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8795   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8796   0001A8                     C1MASK3         equ	424	;# 
  8797   0001A8                     C1MASK3L        equ	424	;# 
  8798   0001A9                     C1MASK3H        equ	425	;# 
  8799   0001AA                     C1MASK3U        equ	426	;# 
  8800   0001AB                     C1MASK3T        equ	427	;# 
  8801   0001AC                     C1FLTOBJ4       equ	428	;# 
  8802   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8803   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8804   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8805   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8806   0001B0                     C1MASK4         equ	432	;# 
  8807   0001B0                     C1MASK4L        equ	432	;# 
  8808   0001B1                     C1MASK4H        equ	433	;# 
  8809   0001B2                     C1MASK4U        equ	434	;# 
  8810   0001B3                     C1MASK4T        equ	435	;# 
  8811   0001B4                     C1FLTOBJ5       equ	436	;# 
  8812   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8813   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8814   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8815   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8816   0001B8                     C1MASK5         equ	440	;# 
  8817   0001B8                     C1MASK5L        equ	440	;# 
  8818   0001B9                     C1MASK5H        equ	441	;# 
  8819   0001BA                     C1MASK5U        equ	442	;# 
  8820   0001BB                     C1MASK5T        equ	443	;# 
  8821   0001BC                     C1FLTOBJ6       equ	444	;# 
  8822   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8823   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8824   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8825   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8826   0001C0                     C1MASK6         equ	448	;# 
  8827   0001C0                     C1MASK6L        equ	448	;# 
  8828   0001C1                     C1MASK6H        equ	449	;# 
  8829   0001C2                     C1MASK6U        equ	450	;# 
  8830   0001C3                     C1MASK6T        equ	451	;# 
  8831   0001C4                     C1FLTOBJ7       equ	452	;# 
  8832   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8833   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8834   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8835   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8836   0001C8                     C1MASK7         equ	456	;# 
  8837   0001C8                     C1MASK7L        equ	456	;# 
  8838   0001C9                     C1MASK7H        equ	457	;# 
  8839   0001CA                     C1MASK7U        equ	458	;# 
  8840   0001CB                     C1MASK7T        equ	459	;# 
  8841   0001CC                     C1FLTOBJ8       equ	460	;# 
  8842   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8843   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8844   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8845   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8846   0001D0                     C1MASK8         equ	464	;# 
  8847   0001D0                     C1MASK8L        equ	464	;# 
  8848   0001D1                     C1MASK8H        equ	465	;# 
  8849   0001D2                     C1MASK8U        equ	466	;# 
  8850   0001D3                     C1MASK8T        equ	467	;# 
  8851   0001D4                     C1FLTOBJ9       equ	468	;# 
  8852   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8853   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8854   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8855   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8856   0001D8                     C1MASK9         equ	472	;# 
  8857   0001D8                     C1MASK9L        equ	472	;# 
  8858   0001D9                     C1MASK9H        equ	473	;# 
  8859   0001DA                     C1MASK9U        equ	474	;# 
  8860   0001DB                     C1MASK9T        equ	475	;# 
  8861   0001DC                     C1FLTOBJ10      equ	476	;# 
  8862   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8863   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8864   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8865   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8866   0001E0                     C1MASK10        equ	480	;# 
  8867   0001E0                     C1MASK10L       equ	480	;# 
  8868   0001E1                     C1MASK10H       equ	481	;# 
  8869   0001E2                     C1MASK10U       equ	482	;# 
  8870   0001E3                     C1MASK10T       equ	483	;# 
  8871   0001E4                     C1FLTOBJ11      equ	484	;# 
  8872   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8873   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8874   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8875   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8876   0001E8                     C1MASK11        equ	488	;# 
  8877   0001E8                     C1MASK11L       equ	488	;# 
  8878   0001E9                     C1MASK11H       equ	489	;# 
  8879   0001EA                     C1MASK11U       equ	490	;# 
  8880   0001EB                     C1MASK11T       equ	491	;# 
  8881   000200                     PPSLOCK         equ	512	;# 
  8882   000201                     RA0PPS          equ	513	;# 
  8883   000202                     RA1PPS          equ	514	;# 
  8884   000203                     RA2PPS          equ	515	;# 
  8885   000204                     RA3PPS          equ	516	;# 
  8886   000205                     RA4PPS          equ	517	;# 
  8887   000206                     RA5PPS          equ	518	;# 
  8888   000207                     RA6PPS          equ	519	;# 
  8889   000208                     RA7PPS          equ	520	;# 
  8890   000209                     RB0PPS          equ	521	;# 
  8891   00020A                     RB1PPS          equ	522	;# 
  8892   00020B                     RB2PPS          equ	523	;# 
  8893   00020C                     RB3PPS          equ	524	;# 
  8894   00020D                     RB4PPS          equ	525	;# 
  8895   00020E                     RB5PPS          equ	526	;# 
  8896   00020F                     RB6PPS          equ	527	;# 
  8897   000210                     RB7PPS          equ	528	;# 
  8898   000211                     RC0PPS          equ	529	;# 
  8899   000212                     RC1PPS          equ	530	;# 
  8900   000213                     RC2PPS          equ	531	;# 
  8901   000214                     RC3PPS          equ	532	;# 
  8902   000215                     RC4PPS          equ	533	;# 
  8903   000216                     RC5PPS          equ	534	;# 
  8904   000217                     RC6PPS          equ	535	;# 
  8905   000218                     RC7PPS          equ	536	;# 
  8906   00023D                     CANRXPPS        equ	573	;# 
  8907   00023E                     INT0PPS         equ	574	;# 
  8908   00023F                     INT1PPS         equ	575	;# 
  8909   000240                     INT2PPS         equ	576	;# 
  8910   000241                     T0CKIPPS        equ	577	;# 
  8911   000242                     T1CKIPPS        equ	578	;# 
  8912   000243                     T1GPPS          equ	579	;# 
  8913   000244                     T3CKIPPS        equ	580	;# 
  8914   000245                     T3GPPS          equ	581	;# 
  8915   000246                     T5CKIPPS        equ	582	;# 
  8916   000247                     T5GPPS          equ	583	;# 
  8917   000248                     T2INPPS         equ	584	;# 
  8918   000249                     T4INPPS         equ	585	;# 
  8919   00024A                     T6INPPS         equ	586	;# 
  8920   00024B                     TUIN0PPS        equ	587	;# 
  8921   00024C                     TUIN1PPS        equ	588	;# 
  8922   00024F                     CCP1PPS         equ	591	;# 
  8923   000250                     CCP2PPS         equ	592	;# 
  8924   000251                     CCP3PPS         equ	593	;# 
  8925   000253                     PWM1ERSPPS      equ	595	;# 
  8926   000254                     PWM2ERSPPS      equ	596	;# 
  8927   000255                     PWM3ERSPPS      equ	597	;# 
  8928   000256                     PWM4ERSPPS      equ	598	;# 
  8929   000257                     PWMIN0PPS       equ	599	;# 
  8930   000258                     PWMIN1PPS       equ	600	;# 
  8931   000259                     SMT1WINPPS      equ	601	;# 
  8932   00025A                     SMT1SIGPPS      equ	602	;# 
  8933   00025B                     CWG1PPS         equ	603	;# 
  8934   00025B                     CWG1INPPS       equ	603	;# 
  8935   00025C                     CWG2PPS         equ	604	;# 
  8936   00025C                     CWG2INPPS       equ	604	;# 
  8937   00025D                     CWG3PPS         equ	605	;# 
  8938   00025D                     CWG3INPPS       equ	605	;# 
  8939   00025E                     MD1CARLPPS      equ	606	;# 
  8940   00025E                     MDCARLPPS       equ	606	;# 
  8941   00025F                     MD1CARHPPS      equ	607	;# 
  8942   00025F                     MDCARHPPS       equ	607	;# 
  8943   000260                     MD1SRCPPS       equ	608	;# 
  8944   000260                     MDSRCPPS        equ	608	;# 
  8945   000261                     CLCIN0PPS       equ	609	;# 
  8946   000262                     CLCIN1PPS       equ	610	;# 
  8947   000263                     CLCIN2PPS       equ	611	;# 
  8948   000264                     CLCIN3PPS       equ	612	;# 
  8949   000265                     CLCIN4PPS       equ	613	;# 
  8950   000266                     CLCIN5PPS       equ	614	;# 
  8951   000267                     CLCIN6PPS       equ	615	;# 
  8952   000268                     CLCIN7PPS       equ	616	;# 
  8953   000269                     ADACTPPS        equ	617	;# 
  8954   00026A                     SPI1SCKPPS      equ	618	;# 
  8955   00026B                     SPI1SDIPPS      equ	619	;# 
  8956   00026C                     SPI1SSPPS       equ	620	;# 
  8957   00026D                     SPI2SCKPPS      equ	621	;# 
  8958   00026E                     SPI2SDIPPS      equ	622	;# 
  8959   00026F                     SPI2SSPPS       equ	623	;# 
  8960   000270                     I2C1SDAPPS      equ	624	;# 
  8961   000271                     I2C1SCLPPS      equ	625	;# 
  8962   000272                     U1RXPPS         equ	626	;# 
  8963   000273                     U1CTSPPS        equ	627	;# 
  8964   000274                     U2RXPPS         equ	628	;# 
  8965   000275                     U2CTSPPS        equ	629	;# 
  8966   000276                     U3RXPPS         equ	630	;# 
  8967   000277                     U3CTSPPS        equ	631	;# 
  8968   000278                     U4RXPPS         equ	632	;# 
  8969   000279                     U4CTSPPS        equ	633	;# 
  8970   00027A                     U5RXPPS         equ	634	;# 
  8971   00027B                     U5CTSPPS        equ	635	;# 
  8972   000286                     RC4I2C          equ	646	;# 
  8973   000287                     RC3I2C          equ	647	;# 
  8974   000288                     RB2I2C          equ	648	;# 
  8975   000289                     RB1I2C          equ	649	;# 
  8976   00028A                     I2C1RXB         equ	650	;# 
  8977   00028B                     I2C1TXB         equ	651	;# 
  8978   00028C                     I2C1CNTL        equ	652	;# 
  8979   00028D                     I2C1CNTH        equ	653	;# 
  8980   00028E                     I2C1ADB0        equ	654	;# 
  8981   00028F                     I2C1ADB1        equ	655	;# 
  8982   000290                     I2C1ADR0        equ	656	;# 
  8983   000291                     I2C1ADR1        equ	657	;# 
  8984   000292                     I2C1ADR2        equ	658	;# 
  8985   000293                     I2C1ADR3        equ	659	;# 
  8986   000294                     I2C1CON0        equ	660	;# 
  8987   000295                     I2C1CON1        equ	661	;# 
  8988   000296                     I2C1CON2        equ	662	;# 
  8989   000297                     I2C1ERR         equ	663	;# 
  8990   000298                     I2C1STAT0       equ	664	;# 
  8991   000299                     I2C1STAT1       equ	665	;# 
  8992   00029A                     I2C1PIR         equ	666	;# 
  8993   00029B                     I2C1PIE         equ	667	;# 
  8994   00029C                     I2C1BTO         equ	668	;# 
  8995   00029D                     I2C1BAUD        equ	669	;# 
  8996   00029E                     I2C1CLK         equ	670	;# 
  8997   00029F                     I2C1BTOC        equ	671	;# 
  8998   0002A1                     U1RXB           equ	673	;# 
  8999   0002A1                     U1RXBL          equ	673	;# 
  9000   0002A2                     U1RXCHK         equ	674	;# 
  9001   0002A3                     U1TXB           equ	675	;# 
  9002   0002A3                     U1TXBL          equ	675	;# 
  9003   0002A4                     U1TXCHK         equ	676	;# 
  9004   0002A5                     U1P1            equ	677	;# 
  9005   0002A5                     U1P1L           equ	677	;# 
  9006   0002A6                     U1P1H           equ	678	;# 
  9007   0002A7                     U1P2            equ	679	;# 
  9008   0002A7                     U1P2L           equ	679	;# 
  9009   0002A8                     U1P2H           equ	680	;# 
  9010   0002A9                     U1P3            equ	681	;# 
  9011   0002A9                     U1P3L           equ	681	;# 
  9012   0002AA                     U1P3H           equ	682	;# 
  9013   0002AB                     U1CON0          equ	683	;# 
  9014   0002AC                     U1CON1          equ	684	;# 
  9015   0002AD                     U1CON2          equ	685	;# 
  9016   0002AE                     U1BRG           equ	686	;# 
  9017   0002AE                     U1BRGL          equ	686	;# 
  9018   0002AF                     U1BRGH          equ	687	;# 
  9019   0002B0                     U1FIFO          equ	688	;# 
  9020   0002B1                     U1UIR           equ	689	;# 
  9021   0002B2                     U1ERRIR         equ	690	;# 
  9022   0002B3                     U1ERRIE         equ	691	;# 
  9023   0002B4                     U2RXB           equ	692	;# 
  9024   0002B4                     U2RXBL          equ	692	;# 
  9025   0002B5                     U2RXCHK         equ	693	;# 
  9026   0002B6                     U2TXB           equ	694	;# 
  9027   0002B6                     U2TXBL          equ	694	;# 
  9028   0002B7                     U2TXCHK         equ	695	;# 
  9029   0002B8                     U2P1            equ	696	;# 
  9030   0002B8                     U2P1L           equ	696	;# 
  9031   0002B9                     U2P1H           equ	697	;# 
  9032   0002BA                     U2P2            equ	698	;# 
  9033   0002BA                     U2P2L           equ	698	;# 
  9034   0002BB                     U2P2H           equ	699	;# 
  9035   0002BC                     U2P3            equ	700	;# 
  9036   0002BC                     U2P3L           equ	700	;# 
  9037   0002BD                     U2P3H           equ	701	;# 
  9038   0002BE                     U2CON0          equ	702	;# 
  9039   0002BF                     U2CON1          equ	703	;# 
  9040   0002C0                     U2CON2          equ	704	;# 
  9041   0002C1                     U2BRG           equ	705	;# 
  9042   0002C1                     U2BRGL          equ	705	;# 
  9043   0002C2                     U2BRGH          equ	706	;# 
  9044   0002C3                     U2FIFO          equ	707	;# 
  9045   0002C4                     U2UIR           equ	708	;# 
  9046   0002C5                     U2ERRIR         equ	709	;# 
  9047   0002C6                     U2ERRIE         equ	710	;# 
  9048   0002C7                     U3RXB           equ	711	;# 
  9049   0002C7                     U3RXBL          equ	711	;# 
  9050   0002C9                     U3TXB           equ	713	;# 
  9051   0002C9                     U3TXBL          equ	713	;# 
  9052   0002CB                     U3P1            equ	715	;# 
  9053   0002CB                     U3P1L           equ	715	;# 
  9054   0002CD                     U3P2            equ	717	;# 
  9055   0002CD                     U3P2L           equ	717	;# 
  9056   0002CF                     U3P3            equ	719	;# 
  9057   0002CF                     U3P3L           equ	719	;# 
  9058   0002D1                     U3CON0          equ	721	;# 
  9059   0002D2                     U3CON1          equ	722	;# 
  9060   0002D3                     U3CON2          equ	723	;# 
  9061   0002D4                     U3BRG           equ	724	;# 
  9062   0002D4                     U3BRGL          equ	724	;# 
  9063   0002D5                     U3BRGH          equ	725	;# 
  9064   0002D6                     U3FIFO          equ	726	;# 
  9065   0002D7                     U3UIR           equ	727	;# 
  9066   0002D8                     U3ERRIR         equ	728	;# 
  9067   0002D9                     U3ERRIE         equ	729	;# 
  9068   0002DA                     U4RXB           equ	730	;# 
  9069   0002DA                     U4RXBL          equ	730	;# 
  9070   0002DC                     U4TXB           equ	732	;# 
  9071   0002DC                     U4TXBL          equ	732	;# 
  9072   0002DE                     U4P1            equ	734	;# 
  9073   0002DE                     U4P1L           equ	734	;# 
  9074   0002E0                     U4P2            equ	736	;# 
  9075   0002E0                     U4P2L           equ	736	;# 
  9076   0002E2                     U4P3            equ	738	;# 
  9077   0002E2                     U4P3L           equ	738	;# 
  9078   0002E4                     U4CON0          equ	740	;# 
  9079   0002E5                     U4CON1          equ	741	;# 
  9080   0002E6                     U4CON2          equ	742	;# 
  9081   0002E7                     U4BRG           equ	743	;# 
  9082   0002E7                     U4BRGL          equ	743	;# 
  9083   0002E8                     U4BRGH          equ	744	;# 
  9084   0002E9                     U4FIFO          equ	745	;# 
  9085   0002EA                     U4UIR           equ	746	;# 
  9086   0002EB                     U4ERRIR         equ	747	;# 
  9087   0002EC                     U4ERRIE         equ	748	;# 
  9088   0002ED                     U5RXB           equ	749	;# 
  9089   0002ED                     U5RXBL          equ	749	;# 
  9090   0002EF                     U5TXB           equ	751	;# 
  9091   0002EF                     U5TXBL          equ	751	;# 
  9092   0002F1                     U5P1            equ	753	;# 
  9093   0002F1                     U5P1L           equ	753	;# 
  9094   0002F3                     U5P2            equ	755	;# 
  9095   0002F3                     U5P2L           equ	755	;# 
  9096   0002F5                     U5P3            equ	757	;# 
  9097   0002F5                     U5P3L           equ	757	;# 
  9098   0002F7                     U5CON0          equ	759	;# 
  9099   0002F8                     U5CON1          equ	760	;# 
  9100   0002F9                     U5CON2          equ	761	;# 
  9101   0002FA                     U5BRG           equ	762	;# 
  9102   0002FA                     U5BRGL          equ	762	;# 
  9103   0002FB                     U5BRGH          equ	763	;# 
  9104   0002FC                     U5FIFO          equ	764	;# 
  9105   0002FD                     U5UIR           equ	765	;# 
  9106   0002FE                     U5ERRIR         equ	766	;# 
  9107   0002FF                     U5ERRIE         equ	767	;# 
  9108   000300                     SMT1TMR         equ	768	;# 
  9109   000300                     SMT1TMRL        equ	768	;# 
  9110   000301                     SMT1TMRH        equ	769	;# 
  9111   000302                     SMT1TMRU        equ	770	;# 
  9112   000303                     SMT1CPR         equ	771	;# 
  9113   000303                     SMT1CPRL        equ	771	;# 
  9114   000304                     SMT1CPRH        equ	772	;# 
  9115   000305                     SMT1CPRU        equ	773	;# 
  9116   000306                     SMT1CPW         equ	774	;# 
  9117   000306                     SMT1CPWL        equ	774	;# 
  9118   000307                     SMT1CPWH        equ	775	;# 
  9119   000308                     SMT1CPWU        equ	776	;# 
  9120   000309                     SMT1PR          equ	777	;# 
  9121   000309                     SMT1PRL         equ	777	;# 
  9122   00030A                     SMT1PRH         equ	778	;# 
  9123   00030B                     SMT1PRU         equ	779	;# 
  9124   00030C                     SMT1CON0        equ	780	;# 
  9125   00030D                     SMT1CON1        equ	781	;# 
  9126   00030E                     SMT1STAT        equ	782	;# 
  9127   00030F                     SMT1CLK         equ	783	;# 
  9128   000310                     SMT1SIG         equ	784	;# 
  9129   000311                     SMT1WIN         equ	785	;# 
  9130   000318                     TMR0L           equ	792	;# 
  9131   000318                     TMR0            equ	792	;# 
  9132   000319                     TMR0H           equ	793	;# 
  9133   000319                     PR0             equ	793	;# 
  9134   00031A                     T0CON0          equ	794	;# 
  9135   00031B                     T0CON1          equ	795	;# 
  9136   00031C                     TMR1            equ	796	;# 
  9137   00031C                     TMR1L           equ	796	;# 
  9138   00031D                     TMR1H           equ	797	;# 
  9139   00031E                     T1CON           equ	798	;# 
  9140   00031E                     TMR1CON         equ	798	;# 
  9141   00031F                     T1GCON          equ	799	;# 
  9142   00031F                     TMR1GCON        equ	799	;# 
  9143   000320                     T1GATE          equ	800	;# 
  9144   000320                     TMR1GATE        equ	800	;# 
  9145   000321                     T1CLK           equ	801	;# 
  9146   000321                     TMR1CLK         equ	801	;# 
  9147   000321                     PR1             equ	801	;# 
  9148   000322                     T2TMR           equ	802	;# 
  9149   000322                     TMR2            equ	802	;# 
  9150   000323                     T2PR            equ	803	;# 
  9151   000323                     PR2             equ	803	;# 
  9152   000324                     T2CON           equ	804	;# 
  9153   000325                     T2HLT           equ	805	;# 
  9154   000326                     T2CLKCON        equ	806	;# 
  9155   000326                     T2CLK           equ	806	;# 
  9156   000327                     T2RST           equ	807	;# 
  9157   000328                     TMR3            equ	808	;# 
  9158   000328                     TMR3L           equ	808	;# 
  9159   000329                     TMR3H           equ	809	;# 
  9160   00032A                     T3CON           equ	810	;# 
  9161   00032A                     TMR3CON         equ	810	;# 
  9162   00032B                     T3GCON          equ	811	;# 
  9163   00032B                     TMR3GCON        equ	811	;# 
  9164   00032C                     T3GATE          equ	812	;# 
  9165   00032C                     TMR3GATE        equ	812	;# 
  9166   00032D                     T3CLK           equ	813	;# 
  9167   00032D                     TMR3CLK         equ	813	;# 
  9168   00032D                     PR3             equ	813	;# 
  9169   00032E                     T4TMR           equ	814	;# 
  9170   00032E                     TMR4            equ	814	;# 
  9171   00032F                     T4PR            equ	815	;# 
  9172   00032F                     PR4             equ	815	;# 
  9173   000330                     T4CON           equ	816	;# 
  9174   000331                     T4HLT           equ	817	;# 
  9175   000332                     T4CLKCON        equ	818	;# 
  9176   000332                     T4CLK           equ	818	;# 
  9177   000333                     T4RST           equ	819	;# 
  9178   000334                     TMR5            equ	820	;# 
  9179   000334                     TMR5L           equ	820	;# 
  9180   000335                     TMR5H           equ	821	;# 
  9181   000336                     T5CON           equ	822	;# 
  9182   000336                     TMR5CON         equ	822	;# 
  9183   000337                     T5GCON          equ	823	;# 
  9184   000337                     TMR5GCON        equ	823	;# 
  9185   000338                     T5GATE          equ	824	;# 
  9186   000338                     TMR5GATE        equ	824	;# 
  9187   000339                     T5CLK           equ	825	;# 
  9188   000339                     TMR5CLK         equ	825	;# 
  9189   000339                     PR5             equ	825	;# 
  9190   00033A                     T6TMR           equ	826	;# 
  9191   00033A                     TMR6            equ	826	;# 
  9192   00033B                     T6PR            equ	827	;# 
  9193   00033B                     PR6             equ	827	;# 
  9194   00033C                     T6CON           equ	828	;# 
  9195   00033D                     T6HLT           equ	829	;# 
  9196   00033E                     T6CLKCON        equ	830	;# 
  9197   00033E                     T6CLK           equ	830	;# 
  9198   00033F                     T6RST           equ	831	;# 
  9199   000340                     CCPR1           equ	832	;# 
  9200   000340                     CCPR1L          equ	832	;# 
  9201   000341                     CCPR1H          equ	833	;# 
  9202   000342                     CCP1CON         equ	834	;# 
  9203   000343                     CCP1CAP         equ	835	;# 
  9204   000344                     CCPR2           equ	836	;# 
  9205   000344                     CCPR2L          equ	836	;# 
  9206   000345                     CCPR2H          equ	837	;# 
  9207   000346                     CCP2CON         equ	838	;# 
  9208   000347                     CCP2CAP         equ	839	;# 
  9209   000348                     CCPR3           equ	840	;# 
  9210   000348                     CCPR3L          equ	840	;# 
  9211   000349                     CCPR3H          equ	841	;# 
  9212   00034A                     CCP3CON         equ	842	;# 
  9213   00034B                     CCP3CAP         equ	843	;# 
  9214   00034C                     CCPTMRS0        equ	844	;# 
  9215   00034F                     CRCDATA         equ	847	;# 
  9216   00034F                     CRCDATAL        equ	847	;# 
  9217   000350                     CRCDATAH        equ	848	;# 
  9218   000351                     CRCDATAU        equ	849	;# 
  9219   000352                     CRCDATAT        equ	850	;# 
  9220   000353                     CRCOUT          equ	851	;# 
  9221   000353                     CRCSHFT         equ	851	;# 
  9222   000353                     CRCXOR          equ	851	;# 
  9223   000353                     CRCOUTL         equ	851	;# 
  9224   000353                     CRCSHFTL        equ	851	;# 
  9225   000353                     CRCSHIFTL       equ	851	;# 
  9226   000353                     CRCXORL         equ	851	;# 
  9227   000354                     CRCOUTH         equ	852	;# 
  9228   000354                     CRCSHFTH        equ	852	;# 
  9229   000354                     CRCSHIFTH       equ	852	;# 
  9230   000354                     CRCXORH         equ	852	;# 
  9231   000355                     CRCOUTU         equ	853	;# 
  9232   000355                     CRCSHFTU        equ	853	;# 
  9233   000355                     CRCSHIFTU       equ	853	;# 
  9234   000355                     CRCXORU         equ	853	;# 
  9235   000356                     CRCOUTT         equ	854	;# 
  9236   000356                     CRCSHFTT        equ	854	;# 
  9237   000356                     CRCSHIFTT       equ	854	;# 
  9238   000356                     CRCXORT         equ	854	;# 
  9239   000357                     CRCCON0         equ	855	;# 
  9240   000358                     CRCCON1         equ	856	;# 
  9241   000359                     CRCCON2         equ	857	;# 
  9242   00035A                     SCANLADR        equ	858	;# 
  9243   00035A                     SCANLADRL       equ	858	;# 
  9244   00035B                     SCANLADRH       equ	859	;# 
  9245   00035C                     SCANLADRU       equ	860	;# 
  9246   00035D                     SCANHADR        equ	861	;# 
  9247   00035D                     SCANHADRL       equ	861	;# 
  9248   00035E                     SCANHADRH       equ	862	;# 
  9249   00035F                     SCANHADRU       equ	863	;# 
  9250   000360                     SCANCON0        equ	864	;# 
  9251   000361                     SCANTRIG        equ	865	;# 
  9252   000362                     IPR0            equ	866	;# 
  9253   000363                     IPR1            equ	867	;# 
  9254   000364                     IPR2            equ	868	;# 
  9255   000365                     IPR3            equ	869	;# 
  9256   000366                     IPR4            equ	870	;# 
  9257   000367                     IPR5            equ	871	;# 
  9258   000368                     IPR6            equ	872	;# 
  9259   000369                     IPR7            equ	873	;# 
  9260   00036A                     IPR8            equ	874	;# 
  9261   00036B                     IPR9            equ	875	;# 
  9262   00036C                     IPR10           equ	876	;# 
  9263   00036D                     IPR11           equ	877	;# 
  9264   00036E                     IPR12           equ	878	;# 
  9265   00036F                     IPR13           equ	879	;# 
  9266   000370                     IPR14           equ	880	;# 
  9267   000371                     IPR15           equ	881	;# 
  9268   000373                     STATUS_CSHAD    equ	883	;# 
  9269   000374                     WREG_CSHAD      equ	884	;# 
  9270   000375                     BSR_CSHAD       equ	885	;# 
  9271   000376                     SHADCON         equ	886	;# 
  9272   000377                     STATUS_SHAD     equ	887	;# 
  9273   000378                     WREG_SHAD       equ	888	;# 
  9274   000379                     BSR_SHAD        equ	889	;# 
  9275   00037A                     PCLATH_SHAD     equ	890	;# 
  9276   00037B                     PCLATU_SHAD     equ	891	;# 
  9277   00037C                     FSR0SH          equ	892	;# 
  9278   00037C                     FSR0L_SHAD      equ	892	;# 
  9279   00037D                     FSR0H_SHAD      equ	893	;# 
  9280   00037E                     FSR1SH          equ	894	;# 
  9281   00037E                     FSR1L_SHAD      equ	894	;# 
  9282   00037F                     FSR1H_SHAD      equ	895	;# 
  9283   000380                     FSR2SH          equ	896	;# 
  9284   000380                     FSR2L_SHAD      equ	896	;# 
  9285   000381                     FSR2H_SHAD      equ	897	;# 
  9286   000382                     PRODSH          equ	898	;# 
  9287   000382                     PRODL_SHAD      equ	898	;# 
  9288   000383                     PRODH_SHAD      equ	899	;# 
  9289   000387                     TU16ACON0       equ	903	;# 
  9290   000388                     TU16ACON1       equ	904	;# 
  9291   000389                     TU16AHLT        equ	905	;# 
  9292   00038A                     TU16APS         equ	906	;# 
  9293   00038B                     TU16ATMR        equ	907	;# 
  9294   00038B                     TU16ACR         equ	907	;# 
  9295   00038B                     TU16ATMRL       equ	907	;# 
  9296   00038B                     TU16ACRL        equ	907	;# 
  9297   00038C                     TU16ATMRH       equ	908	;# 
  9298   00038C                     TU16ACRH        equ	908	;# 
  9299   00038D                     TU16APR         equ	909	;# 
  9300   00038D                     TU16APRL        equ	909	;# 
  9301   00038E                     TU16APRH        equ	910	;# 
  9302   00038F                     TU16ACLK        equ	911	;# 
  9303   000390                     TU16AERS        equ	912	;# 
  9304   000393                     TU16BCON0       equ	915	;# 
  9305   000394                     TU16BCON1       equ	916	;# 
  9306   000395                     TU16BHLT        equ	917	;# 
  9307   000396                     TU16BPS         equ	918	;# 
  9308   000397                     TU16BTMR        equ	919	;# 
  9309   000397                     TU16BCR         equ	919	;# 
  9310   000397                     TU16BTMRL       equ	919	;# 
  9311   000397                     TU16BCRL        equ	919	;# 
  9312   000398                     TU16BTMRH       equ	920	;# 
  9313   000398                     TU16BCRH        equ	920	;# 
  9314   000399                     TU16BPR         equ	921	;# 
  9315   000399                     TU16BPRL        equ	921	;# 
  9316   00039A                     TU16BPRH        equ	922	;# 
  9317   00039B                     TU16BCLK        equ	923	;# 
  9318   00039C                     TU16BERS        equ	924	;# 
  9319   0003BB                     TUCHAIN         equ	955	;# 
  9320   0003BC                     CWG1CLK         equ	956	;# 
  9321   0003BC                     CWG1CLKCON      equ	956	;# 
  9322   0003BD                     CWG1ISM         equ	957	;# 
  9323   0003BE                     CWG1DBR         equ	958	;# 
  9324   0003BF                     CWG1DBF         equ	959	;# 
  9325   0003C0                     CWG1CON0        equ	960	;# 
  9326   0003C1                     CWG1CON1        equ	961	;# 
  9327   0003C2                     CWG1AS0         equ	962	;# 
  9328   0003C3                     CWG1AS1         equ	963	;# 
  9329   0003C4                     CWG1STR         equ	964	;# 
  9330   0003C5                     CWG2CLK         equ	965	;# 
  9331   0003C5                     CWG2CLKCON      equ	965	;# 
  9332   0003C6                     CWG2ISM         equ	966	;# 
  9333   0003C7                     CWG2DBR         equ	967	;# 
  9334   0003C8                     CWG2DBF         equ	968	;# 
  9335   0003C9                     CWG2CON0        equ	969	;# 
  9336   0003CA                     CWG2CON1        equ	970	;# 
  9337   0003CB                     CWG2AS0         equ	971	;# 
  9338   0003CC                     CWG2AS1         equ	972	;# 
  9339   0003CD                     CWG2STR         equ	973	;# 
  9340   0003CE                     CWG3CLK         equ	974	;# 
  9341   0003CE                     CWG3CLKCON      equ	974	;# 
  9342   0003CF                     CWG3ISM         equ	975	;# 
  9343   0003D0                     CWG3DBR         equ	976	;# 
  9344   0003D1                     CWG3DBF         equ	977	;# 
  9345   0003D2                     CWG3CON0        equ	978	;# 
  9346   0003D3                     CWG3CON1        equ	979	;# 
  9347   0003D4                     CWG3AS0         equ	980	;# 
  9348   0003D5                     CWG3AS1         equ	981	;# 
  9349   0003D6                     CWG3STR         equ	982	;# 
  9350   0003D7                     FVRCON          equ	983	;# 
  9351   0003D8                     ADCPCON         equ	984	;# 
  9352   0003D8                     ADCP            equ	984	;# 
  9353   0003D9                     ADLTH           equ	985	;# 
  9354   0003D9                     ADLTHL          equ	985	;# 
  9355   0003DA                     ADLTHH          equ	986	;# 
  9356   0003DB                     ADUTH           equ	987	;# 
  9357   0003DB                     ADUTHL          equ	987	;# 
  9358   0003DC                     ADUTHH          equ	988	;# 
  9359   0003DD                     ADERR           equ	989	;# 
  9360   0003DD                     ADERRL          equ	989	;# 
  9361   0003DE                     ADERRH          equ	990	;# 
  9362   0003DF                     ADSTPT          equ	991	;# 
  9363   0003DF                     ADSTPTL         equ	991	;# 
  9364   0003E0                     ADSTPTH         equ	992	;# 
  9365   0003E1                     ADFLTR          equ	993	;# 
  9366   0003E1                     ADFLTRL         equ	993	;# 
  9367   0003E2                     ADFLTRH         equ	994	;# 
  9368   0003E3                     ADACC           equ	995	;# 
  9369   0003E3                     ADACCL          equ	995	;# 
  9370   0003E4                     ADACCH          equ	996	;# 
  9371   0003E5                     ADACCU          equ	997	;# 
  9372   0003E6                     ADCNT           equ	998	;# 
  9373   0003E7                     ADRPT           equ	999	;# 
  9374   0003E8                     ADPREV          equ	1000	;# 
  9375   0003E8                     ADPREVL         equ	1000	;# 
  9376   0003E9                     ADPREVH         equ	1001	;# 
  9377   0003EA                     ADRES           equ	1002	;# 
  9378   0003EA                     ADRESL          equ	1002	;# 
  9379   0003EB                     ADRESH          equ	1003	;# 
  9380   0003EC                     ADPCH           equ	1004	;# 
  9381   0003EE                     ADACQ           equ	1006	;# 
  9382   0003EE                     ADACQL          equ	1006	;# 
  9383   0003EF                     ADACQH          equ	1007	;# 
  9384   0003F0                     ADCAP           equ	1008	;# 
  9385   0003F1                     ADPRE           equ	1009	;# 
  9386   0003F1                     ADPREL          equ	1009	;# 
  9387   0003F2                     ADPREH          equ	1010	;# 
  9388   0003F3                     ADCON0          equ	1011	;# 
  9389   0003F4                     ADCON1          equ	1012	;# 
  9390   0003F5                     ADCON2          equ	1013	;# 
  9391   0003F6                     ADCON3          equ	1014	;# 
  9392   0003F7                     ADSTAT          equ	1015	;# 
  9393   0003F8                     ADREF           equ	1016	;# 
  9394   0003F9                     ADACT           equ	1017	;# 
  9395   0003FA                     ADCLK           equ	1018	;# 
  9396   0003FB                     ADCTX           equ	1019	;# 
  9397   0003FC                     ADCSEL1         equ	1020	;# 
  9398   0003FD                     ADCSEL2         equ	1021	;# 
  9399   0003FE                     ADCSEL3         equ	1022	;# 
  9400   0003FF                     ADCSEL4         equ	1023	;# 
  9401   000400                     ANSELA          equ	1024	;# 
  9402   000401                     WPUA            equ	1025	;# 
  9403   000402                     ODCONA          equ	1026	;# 
  9404   000403                     SLRCONA         equ	1027	;# 
  9405   000404                     INLVLA          equ	1028	;# 
  9406   000405                     IOCAP           equ	1029	;# 
  9407   000406                     IOCAN           equ	1030	;# 
  9408   000407                     IOCAF           equ	1031	;# 
  9409   000408                     ANSELB          equ	1032	;# 
  9410   000409                     WPUB            equ	1033	;# 
  9411   00040A                     ODCONB          equ	1034	;# 
  9412   00040B                     SLRCONB         equ	1035	;# 
  9413   00040C                     INLVLB          equ	1036	;# 
  9414   00040D                     IOCBP           equ	1037	;# 
  9415   00040E                     IOCBN           equ	1038	;# 
  9416   00040F                     IOCBF           equ	1039	;# 
  9417   000410                     ANSELC          equ	1040	;# 
  9418   000411                     WPUC            equ	1041	;# 
  9419   000412                     ODCONC          equ	1042	;# 
  9420   000413                     SLRCONC         equ	1043	;# 
  9421   000414                     INLVLC          equ	1044	;# 
  9422   000415                     IOCCP           equ	1045	;# 
  9423   000416                     IOCCN           equ	1046	;# 
  9424   000417                     IOCCF           equ	1047	;# 
  9425   000421                     WPUE            equ	1057	;# 
  9426   000424                     INLVLE          equ	1060	;# 
  9427   000425                     IOCEP           equ	1061	;# 
  9428   000426                     IOCEN           equ	1062	;# 
  9429   000427                     IOCEF           equ	1063	;# 
  9430   000440                     NCO1ACC         equ	1088	;# 
  9431   000440                     NCO1ACCL        equ	1088	;# 
  9432   000441                     NCO1ACCH        equ	1089	;# 
  9433   000442                     NCO1ACCU        equ	1090	;# 
  9434   000443                     NCO1INC         equ	1091	;# 
  9435   000443                     NCO1INCL        equ	1091	;# 
  9436   000444                     NCO1INCH        equ	1092	;# 
  9437   000445                     NCO1INCU        equ	1093	;# 
  9438   000446                     NCO1CON         equ	1094	;# 
  9439   000447                     NCO1CLK         equ	1095	;# 
  9440   000448                     NCO2ACC         equ	1096	;# 
  9441   000448                     NCO2ACCL        equ	1096	;# 
  9442   000449                     NCO2ACCH        equ	1097	;# 
  9443   00044A                     NCO2ACCU        equ	1098	;# 
  9444   00044B                     NCO2INC         equ	1099	;# 
  9445   00044B                     NCO2INCL        equ	1099	;# 
  9446   00044C                     NCO2INCH        equ	1100	;# 
  9447   00044D                     NCO2INCU        equ	1101	;# 
  9448   00044E                     NCO2CON         equ	1102	;# 
  9449   00044F                     NCO2CLK         equ	1103	;# 
  9450   000450                     NCO3ACC         equ	1104	;# 
  9451   000450                     NCO3ACCL        equ	1104	;# 
  9452   000451                     NCO3ACCH        equ	1105	;# 
  9453   000452                     NCO3ACCU        equ	1106	;# 
  9454   000453                     NCO3INC         equ	1107	;# 
  9455   000453                     NCO3INCL        equ	1107	;# 
  9456   000454                     NCO3INCH        equ	1108	;# 
  9457   000455                     NCO3INCU        equ	1109	;# 
  9458   000456                     NCO3CON         equ	1110	;# 
  9459   000457                     NCO3CLK         equ	1111	;# 
  9460   000458                     FSCMCON         equ	1112	;# 
  9461   000459                     IVTLOCK         equ	1113	;# 
  9462   00045A                     IVTAD           equ	1114	;# 
  9463   00045A                     IVTADL          equ	1114	;# 
  9464   00045B                     IVTADH          equ	1115	;# 
  9465   00045C                     IVTADU          equ	1116	;# 
  9466   00045D                     IVTBASE         equ	1117	;# 
  9467   00045D                     IVTBASEL        equ	1117	;# 
  9468   00045E                     IVTBASEH        equ	1118	;# 
  9469   00045F                     IVTBASEU        equ	1119	;# 
  9470   000460                     PWM1ERS         equ	1120	;# 
  9471   000461                     PWM1CLK         equ	1121	;# 
  9472   000462                     PWM1LDS         equ	1122	;# 
  9473   000463                     PWM1PR          equ	1123	;# 
  9474   000463                     PWM1PRL         equ	1123	;# 
  9475   000464                     PWM1PRH         equ	1124	;# 
  9476   000465                     PWM1CPRE        equ	1125	;# 
  9477   000466                     PWM1PIPOS       equ	1126	;# 
  9478   000467                     PWM1GIR         equ	1127	;# 
  9479   000468                     PWM1GIE         equ	1128	;# 
  9480   000469                     PWM1CON         equ	1129	;# 
  9481   00046A                     PWM1S1CFG       equ	1130	;# 
  9482   00046B                     PWM1S1P1        equ	1131	;# 
  9483   00046B                     PWM1S1P1L       equ	1131	;# 
  9484   00046C                     PWM1S1P1H       equ	1132	;# 
  9485   00046D                     PWM1S1P2        equ	1133	;# 
  9486   00046D                     PWM1S1P2L       equ	1133	;# 
  9487   00046E                     PWM1S1P2H       equ	1134	;# 
  9488   00046F                     PWM2ERS         equ	1135	;# 
  9489   000470                     PWM2CLK         equ	1136	;# 
  9490   000471                     PWM2LDS         equ	1137	;# 
  9491   000472                     PWM2PR          equ	1138	;# 
  9492   000472                     PWM2PRL         equ	1138	;# 
  9493   000473                     PWM2PRH         equ	1139	;# 
  9494   000474                     PWM2CPRE        equ	1140	;# 
  9495   000475                     PWM2PIPOS       equ	1141	;# 
  9496   000476                     PWM2GIR         equ	1142	;# 
  9497   000477                     PWM2GIE         equ	1143	;# 
  9498   000478                     PWM2CON         equ	1144	;# 
  9499   000479                     PWM2S1CFG       equ	1145	;# 
  9500   00047A                     PWM2S1P1        equ	1146	;# 
  9501   00047A                     PWM2S1P1L       equ	1146	;# 
  9502   00047B                     PWM2S1P1H       equ	1147	;# 
  9503   00047C                     PWM2S1P2        equ	1148	;# 
  9504   00047C                     PWM2S1P2L       equ	1148	;# 
  9505   00047D                     PWM2S1P2H       equ	1149	;# 
  9506   00047E                     PWM3ERS         equ	1150	;# 
  9507   00047F                     PWM3CLK         equ	1151	;# 
  9508   000480                     PWM3LDS         equ	1152	;# 
  9509   000481                     PWM3PR          equ	1153	;# 
  9510   000481                     PWM3PRL         equ	1153	;# 
  9511   000482                     PWM3PRH         equ	1154	;# 
  9512   000483                     PWM3CPRE        equ	1155	;# 
  9513   000484                     PWM3PIPOS       equ	1156	;# 
  9514   000485                     PWM3GIR         equ	1157	;# 
  9515   000486                     PWM3GIE         equ	1158	;# 
  9516   000487                     PWM3CON         equ	1159	;# 
  9517   000488                     PWM3S1CFG       equ	1160	;# 
  9518   000489                     PWM3S1P1        equ	1161	;# 
  9519   000489                     PWM3S1P1L       equ	1161	;# 
  9520   00048A                     PWM3S1P1H       equ	1162	;# 
  9521   00048B                     PWM3S1P2        equ	1163	;# 
  9522   00048B                     PWM3S1P2L       equ	1163	;# 
  9523   00048C                     PWM3S1P2H       equ	1164	;# 
  9524   00048D                     PWM4ERS         equ	1165	;# 
  9525   00048E                     PWM4CLK         equ	1166	;# 
  9526   00048F                     PWM4LDS         equ	1167	;# 
  9527   000490                     PWM4PR          equ	1168	;# 
  9528   000490                     PWM4PRL         equ	1168	;# 
  9529   000491                     PWM4PRH         equ	1169	;# 
  9530   000492                     PWM4CPRE        equ	1170	;# 
  9531   000493                     PWM4PIPOS       equ	1171	;# 
  9532   000494                     PWM4GIR         equ	1172	;# 
  9533   000495                     PWM4GIE         equ	1173	;# 
  9534   000496                     PWM4CON         equ	1174	;# 
  9535   000497                     PWM4S1CFG       equ	1175	;# 
  9536   000498                     PWM4S1P1        equ	1176	;# 
  9537   000498                     PWM4S1P1L       equ	1176	;# 
  9538   000499                     PWM4S1P1H       equ	1177	;# 
  9539   00049A                     PWM4S1P2        equ	1178	;# 
  9540   00049A                     PWM4S1P2L       equ	1178	;# 
  9541   00049B                     PWM4S1P2H       equ	1179	;# 
  9542   00049C                     PWMLOAD         equ	1180	;# 
  9543   00049D                     PWMEN           equ	1181	;# 
  9544   00049E                     PIE0            equ	1182	;# 
  9545   00049F                     PIE1            equ	1183	;# 
  9546   0004A0                     PIE2            equ	1184	;# 
  9547   0004A1                     PIE3            equ	1185	;# 
  9548   0004A2                     PIE4            equ	1186	;# 
  9549   0004A3                     PIE5            equ	1187	;# 
  9550   0004A4                     PIE6            equ	1188	;# 
  9551   0004A5                     PIE7            equ	1189	;# 
  9552   0004A6                     PIE8            equ	1190	;# 
  9553   0004A7                     PIE9            equ	1191	;# 
  9554   0004A8                     PIE10           equ	1192	;# 
  9555   0004A9                     PIE11           equ	1193	;# 
  9556   0004AA                     PIE12           equ	1194	;# 
  9557   0004AB                     PIE13           equ	1195	;# 
  9558   0004AC                     PIE14           equ	1196	;# 
  9559   0004AD                     PIE15           equ	1197	;# 
  9560   0004AE                     PIR0            equ	1198	;# 
  9561   0004AF                     PIR1            equ	1199	;# 
  9562   0004B0                     PIR2            equ	1200	;# 
  9563   0004B1                     PIR3            equ	1201	;# 
  9564   0004B2                     PIR4            equ	1202	;# 
  9565   0004B3                     PIR5            equ	1203	;# 
  9566   0004B4                     PIR6            equ	1204	;# 
  9567   0004B5                     PIR7            equ	1205	;# 
  9568   0004B6                     PIR8            equ	1206	;# 
  9569   0004B7                     PIR9            equ	1207	;# 
  9570   0004B8                     PIR10           equ	1208	;# 
  9571   0004B9                     PIR11           equ	1209	;# 
  9572   0004BA                     PIR12           equ	1210	;# 
  9573   0004BB                     PIR13           equ	1211	;# 
  9574   0004BC                     PIR14           equ	1212	;# 
  9575   0004BD                     PIR15           equ	1213	;# 
  9576   0004BE                     LATA            equ	1214	;# 
  9577   0004BF                     LATB            equ	1215	;# 
  9578   0004C0                     LATC            equ	1216	;# 
  9579   0004C6                     TRISA           equ	1222	;# 
  9580   0004C7                     TRISB           equ	1223	;# 
  9581   0004C8                     TRISC           equ	1224	;# 
  9582   0004CA                     TRISE           equ	1226	;# 
  9583   0004CE                     PORTA           equ	1230	;# 
  9584   0004CF                     PORTB           equ	1231	;# 
  9585   0004D0                     PORTC           equ	1232	;# 
  9586   0004D2                     PORTE           equ	1234	;# 
  9587   0004D6                     INTCON0         equ	1238	;# 
  9588   0004D7                     INTCON1         equ	1239	;# 
  9589   0004D8                     STATUS          equ	1240	;# 
  9590   0004D9                     FSR2            equ	1241	;# 
  9591   0004D9                     FSR2L           equ	1241	;# 
  9592   0004DA                     FSR2H           equ	1242	;# 
  9593   0004DB                     PLUSW2          equ	1243	;# 
  9594   0004DC                     PREINC2         equ	1244	;# 
  9595   0004DD                     POSTDEC2        equ	1245	;# 
  9596   0004DE                     POSTINC2        equ	1246	;# 
  9597   0004DF                     INDF2           equ	1247	;# 
  9598   0004E0                     BSR             equ	1248	;# 
  9599   0004E1                     FSR1            equ	1249	;# 
  9600   0004E1                     FSR1L           equ	1249	;# 
  9601   0004E2                     FSR1H           equ	1250	;# 
  9602   0004E3                     PLUSW1          equ	1251	;# 
  9603   0004E4                     PREINC1         equ	1252	;# 
  9604   0004E5                     POSTDEC1        equ	1253	;# 
  9605   0004E6                     POSTINC1        equ	1254	;# 
  9606   0004E7                     INDF1           equ	1255	;# 
  9607   0004E8                     WREG            equ	1256	;# 
  9608   0004E9                     FSR0            equ	1257	;# 
  9609   0004E9                     FSR0L           equ	1257	;# 
  9610   0004EA                     FSR0H           equ	1258	;# 
  9611   0004EB                     PLUSW0          equ	1259	;# 
  9612   0004EC                     PREINC0         equ	1260	;# 
  9613   0004ED                     POSTDEC0        equ	1261	;# 
  9614   0004EE                     POSTINC0        equ	1262	;# 
  9615   0004EF                     INDF0           equ	1263	;# 
  9616   0004F0                     PCON0           equ	1264	;# 
  9617   0004F1                     PCON1           equ	1265	;# 
  9618   0004F2                     CPUDOZE         equ	1266	;# 
  9619   0004F3                     PROD            equ	1267	;# 
  9620   0004F3                     PRODL           equ	1267	;# 
  9621   0004F4                     PRODH           equ	1268	;# 
  9622   0004F5                     TABLAT          equ	1269	;# 
  9623   0004F6                     TBLPTR          equ	1270	;# 
  9624   0004F6                     TBLPTRL         equ	1270	;# 
  9625   0004F7                     TBLPTRH         equ	1271	;# 
  9626   0004F8                     TBLPTRU         equ	1272	;# 
  9627   0004F9                     PCLAT           equ	1273	;# 
  9628   0004F9                     PCL             equ	1273	;# 
  9629   0004FA                     PCLATH          equ	1274	;# 
  9630   0004FB                     PCLATU          equ	1275	;# 
  9631   0004FC                     STKPTR          equ	1276	;# 
  9632   0004FD                     TOS             equ	1277	;# 
  9633   0004FD                     TOSL            equ	1277	;# 
  9634   0004FE                     TOSH            equ	1278	;# 
  9635   0004FF                     TOSU            equ	1279	;# 
  9636   000038                     BOOTREG         equ	56	;# 
  9637   000039                     CLKRCON         equ	57	;# 
  9638   00003A                     CLKRCLK         equ	58	;# 
  9639   000040                     NVMCON0         equ	64	;# 
  9640   000041                     NVMCON1         equ	65	;# 
  9641   000042                     NVMLOCK         equ	66	;# 
  9642   000043                     NVMADR          equ	67	;# 
  9643   000043                     NVMADRL         equ	67	;# 
  9644   000044                     NVMADRH         equ	68	;# 
  9645   000045                     NVMADRU         equ	69	;# 
  9646   000046                     NVMDAT          equ	70	;# 
  9647   000046                     NVMDATL         equ	70	;# 
  9648   000047                     NVMDATH         equ	71	;# 
  9649   000048                     VREGCON         equ	72	;# 
  9650   000049                     BORCON          equ	73	;# 
  9651   00004A                     HLVDCON0        equ	74	;# 
  9652   00004B                     HLVDCON1        equ	75	;# 
  9653   00004C                     ZCDCON          equ	76	;# 
  9654   000060                     PMD0            equ	96	;# 
  9655   000061                     PMD1            equ	97	;# 
  9656   000062                     PMD2            equ	98	;# 
  9657   000063                     PMD3            equ	99	;# 
  9658   000064                     PMD4            equ	100	;# 
  9659   000065                     PMD5            equ	101	;# 
  9660   000066                     PMD6            equ	102	;# 
  9661   000067                     PMD7            equ	103	;# 
  9662   000068                     PMD8            equ	104	;# 
  9663   00006A                     MD1CON0         equ	106	;# 
  9664   00006B                     MD1CON1         equ	107	;# 
  9665   00006C                     MD1SRC          equ	108	;# 
  9666   00006D                     MD1CARL         equ	109	;# 
  9667   00006E                     MD1CARH         equ	110	;# 
  9668   00006F                     CMOUT           equ	111	;# 
  9669   000070                     CM1CON0         equ	112	;# 
  9670   000071                     CM1CON1         equ	113	;# 
  9671   000072                     CM1NCH          equ	114	;# 
  9672   000073                     CM1PCH          equ	115	;# 
  9673   000074                     CM2CON0         equ	116	;# 
  9674   000075                     CM2CON1         equ	117	;# 
  9675   000076                     CM2NCH          equ	118	;# 
  9676   000077                     CM2PCH          equ	119	;# 
  9677   000078                     WDTCON0         equ	120	;# 
  9678   000079                     WDTCON1         equ	121	;# 
  9679   00007A                     WDTPSL          equ	122	;# 
  9680   00007B                     WDTPSH          equ	123	;# 
  9681   00007C                     WDTTMR          equ	124	;# 
  9682   00007D                     DAC1DAT         equ	125	;# 
  9683   00007D                     DAC1DATL        equ	125	;# 
  9684   00007F                     DAC1CON         equ	127	;# 
  9685   000080                     SPI1RXB         equ	128	;# 
  9686   000081                     SPI1TXB         equ	129	;# 
  9687   000082                     SPI1TCNT        equ	130	;# 
  9688   000082                     SPI1TCNTL       equ	130	;# 
  9689   000083                     SPI1TCNTH       equ	131	;# 
  9690   000084                     SPI1CON0        equ	132	;# 
  9691   000085                     SPI1CON1        equ	133	;# 
  9692   000086                     SPI1CON2        equ	134	;# 
  9693   000087                     SPI1STATUS      equ	135	;# 
  9694   000088                     SPI1TWIDTH      equ	136	;# 
  9695   000089                     SPI1BAUD        equ	137	;# 
  9696   00008A                     SPI1INTF        equ	138	;# 
  9697   00008B                     SPI1INTE        equ	139	;# 
  9698   00008C                     SPI1CLK         equ	140	;# 
  9699   00008D                     SPI2RXB         equ	141	;# 
  9700   00008E                     SPI2TXB         equ	142	;# 
  9701   00008F                     SPI2TCNT        equ	143	;# 
  9702   00008F                     SPI2TCNTL       equ	143	;# 
  9703   000090                     SPI2TCNTH       equ	144	;# 
  9704   000091                     SPI2CON0        equ	145	;# 
  9705   000092                     SPI2CON1        equ	146	;# 
  9706   000093                     SPI2CON2        equ	147	;# 
  9707   000094                     SPI2STATUS      equ	148	;# 
  9708   000095                     SPI2TWIDTH      equ	149	;# 
  9709   000096                     SPI2BAUD        equ	150	;# 
  9710   000097                     SPI2INTF        equ	151	;# 
  9711   000098                     SPI2INTE        equ	152	;# 
  9712   000099                     SPI2CLK         equ	153	;# 
  9713   0000AC                     ACTCON          equ	172	;# 
  9714   0000AD                     OSCCON1         equ	173	;# 
  9715   0000AE                     OSCCON2         equ	174	;# 
  9716   0000AF                     OSCCON3         equ	175	;# 
  9717   0000B0                     OSCTUNE         equ	176	;# 
  9718   0000B1                     OSCFRQ          equ	177	;# 
  9719   0000B1                     OSCFREQ         equ	177	;# 
  9720   0000B2                     OSCSTAT         equ	178	;# 
  9721   0000B2                     OSCSTAT1        equ	178	;# 
  9722   0000B3                     OSCEN           equ	179	;# 
  9723   0000B4                     PRLOCK          equ	180	;# 
  9724   0000B5                     SCANPR          equ	181	;# 
  9725   0000B6                     DMA1PR          equ	182	;# 
  9726   0000B7                     DMA2PR          equ	183	;# 
  9727   0000B8                     DMA3PR          equ	184	;# 
  9728   0000B9                     DMA4PR          equ	185	;# 
  9729   0000BA                     DMA5PR          equ	186	;# 
  9730   0000BB                     DMA6PR          equ	187	;# 
  9731   0000BC                     DMA7PR          equ	188	;# 
  9732   0000BD                     DMA8PR          equ	189	;# 
  9733   0000BE                     MAINPR          equ	190	;# 
  9734   0000BF                     ISRPR           equ	191	;# 
  9735   0000D4                     CLCDATA         equ	212	;# 
  9736   0000D5                     CLCSELECT       equ	213	;# 
  9737   0000D6                     CLCnCON         equ	214	;# 
  9738   0000D7                     CLCnPOL         equ	215	;# 
  9739   0000D8                     CLCnSEL0        equ	216	;# 
  9740   0000D9                     CLCnSEL1        equ	217	;# 
  9741   0000DA                     CLCnSEL2        equ	218	;# 
  9742   0000DB                     CLCnSEL3        equ	219	;# 
  9743   0000DC                     CLCnGLS0        equ	220	;# 
  9744   0000DD                     CLCnGLS1        equ	221	;# 
  9745   0000DE                     CLCnGLS2        equ	222	;# 
  9746   0000DF                     CLCnGLS3        equ	223	;# 
  9747   0000E8                     DMASELECT       equ	232	;# 
  9748   0000E9                     DMAnBUF         equ	233	;# 
  9749   0000EA                     DMAnDCNT        equ	234	;# 
  9750   0000EA                     DMAnDCNTL       equ	234	;# 
  9751   0000EB                     DMAnDCNTH       equ	235	;# 
  9752   0000EC                     DMAnDPTR        equ	236	;# 
  9753   0000EC                     DMAnDPTRL       equ	236	;# 
  9754   0000ED                     DMAnDPTRH       equ	237	;# 
  9755   0000EE                     DMAnDSZ         equ	238	;# 
  9756   0000EE                     DMAnDSZL        equ	238	;# 
  9757   0000EF                     DMAnDSZH        equ	239	;# 
  9758   0000F0                     DMAnDSA         equ	240	;# 
  9759   0000F0                     DMAnDSAL        equ	240	;# 
  9760   0000F1                     DMAnDSAH        equ	241	;# 
  9761   0000F2                     DMAnSCNT        equ	242	;# 
  9762   0000F2                     DMAnSCNTL       equ	242	;# 
  9763   0000F3                     DMAnSCNTH       equ	243	;# 
  9764   0000F4                     DMAnSPTR        equ	244	;# 
  9765   0000F4                     DMAnSPTRL       equ	244	;# 
  9766   0000F5                     DMAnSPTRH       equ	245	;# 
  9767   0000F6                     DMAnSPTRU       equ	246	;# 
  9768   0000F7                     DMAnSSZ         equ	247	;# 
  9769   0000F7                     DMAnSSZL        equ	247	;# 
  9770   0000F8                     DMAnSSZH        equ	248	;# 
  9771   0000F9                     DMAnSSA         equ	249	;# 
  9772   0000F9                     DMAnSSAL        equ	249	;# 
  9773   0000FA                     DMAnSSAH        equ	250	;# 
  9774   0000FB                     DMAnSSAU        equ	251	;# 
  9775   0000FC                     DMAnCON0        equ	252	;# 
  9776   0000FD                     DMAnCON1        equ	253	;# 
  9777   0000FE                     DMAnAIRQ        equ	254	;# 
  9778   0000FF                     DMAnSIRQ        equ	255	;# 
  9779   000100                     C1CONL          equ	256	;# 
  9780   000101                     C1CONH          equ	257	;# 
  9781   000102                     C1CONU          equ	258	;# 
  9782   000103                     C1CONT          equ	259	;# 
  9783   000104                     C1NBTCFGL       equ	260	;# 
  9784   000105                     C1NBTCFGH       equ	261	;# 
  9785   000106                     C1NBTCFGU       equ	262	;# 
  9786   000107                     C1NBTCFGT       equ	263	;# 
  9787   000108                     C1DBTCFGL       equ	264	;# 
  9788   000109                     C1DBTCFGH       equ	265	;# 
  9789   00010A                     C1DBTCFGU       equ	266	;# 
  9790   00010B                     C1DBTCFGT       equ	267	;# 
  9791   00010C                     C1TDCL          equ	268	;# 
  9792   00010D                     C1TDCH          equ	269	;# 
  9793   00010E                     C1TDCU          equ	270	;# 
  9794   000110                     C1TBC           equ	272	;# 
  9795   000110                     C1TBCL          equ	272	;# 
  9796   000111                     C1TBCH          equ	273	;# 
  9797   000112                     C1TBCU          equ	274	;# 
  9798   000113                     C1TBCT          equ	275	;# 
  9799   000114                     C1TSCONL        equ	276	;# 
  9800   000115                     C1TSCONH        equ	277	;# 
  9801   000116                     C1TSCONU        equ	278	;# 
  9802   000117                     C1TSCONT        equ	279	;# 
  9803   000118                     C1VECL          equ	280	;# 
  9804   000119                     C1VECH          equ	281	;# 
  9805   00011A                     C1VECU          equ	282	;# 
  9806   00011B                     C1VECT          equ	283	;# 
  9807   00011C                     C1INTL          equ	284	;# 
  9808   00011D                     C1INTH          equ	285	;# 
  9809   00011E                     C1INTU          equ	286	;# 
  9810   00011F                     C1INTT          equ	287	;# 
  9811   000120                     C1RXIF          equ	288	;# 
  9812   000120                     C1RXIFL         equ	288	;# 
  9813   000121                     C1RXIFH         equ	289	;# 
  9814   000122                     C1RXIFU         equ	290	;# 
  9815   000123                     C1RXIFT         equ	291	;# 
  9816   000124                     C1TXIF          equ	292	;# 
  9817   000124                     C1TXIFL         equ	292	;# 
  9818   000125                     C1TXIFH         equ	293	;# 
  9819   000126                     C1TXIFU         equ	294	;# 
  9820   000127                     C1TXIFT         equ	295	;# 
  9821   000128                     C1RXOVIF        equ	296	;# 
  9822   000128                     C1RXOVIFL       equ	296	;# 
  9823   000129                     C1RXOVIFH       equ	297	;# 
  9824   00012A                     C1RXOVIFU       equ	298	;# 
  9825   00012B                     C1RXOVIFT       equ	299	;# 
  9826   00012C                     C1TXATIF        equ	300	;# 
  9827   00012C                     C1TXATIFL       equ	300	;# 
  9828   00012D                     C1TXATIFH       equ	301	;# 
  9829   00012E                     C1TXATIFU       equ	302	;# 
  9830   00012F                     C1TXATIFT       equ	303	;# 
  9831   000130                     C1TXREQ         equ	304	;# 
  9832   000130                     C1TXREQL        equ	304	;# 
  9833   000131                     C1TXREQH        equ	305	;# 
  9834   000132                     C1TXREQU        equ	306	;# 
  9835   000133                     C1TXREQT        equ	307	;# 
  9836   000134                     C1TRECL         equ	308	;# 
  9837   000135                     C1TRECH         equ	309	;# 
  9838   000136                     C1TRECU         equ	310	;# 
  9839   000137                     C1TRECT         equ	311	;# 
  9840   000138                     C1BDIAG0L       equ	312	;# 
  9841   000139                     C1BDIAG0H       equ	313	;# 
  9842   00013C                     C1BDIAG1L       equ	316	;# 
  9843   00013D                     C1BDIAG1H       equ	317	;# 
  9844   00013E                     C1BDIAG1U       equ	318	;# 
  9845   00013F                     C1BDIAG1T       equ	319	;# 
  9846   000140                     C1TEFCONL       equ	320	;# 
  9847   000141                     C1TEFCONH       equ	321	;# 
  9848   000142                     C1TEFCONU       equ	322	;# 
  9849   000143                     C1TEFCONT       equ	323	;# 
  9850   000144                     C1TEFSTAL       equ	324	;# 
  9851   000145                     C1TEFSTAH       equ	325	;# 
  9852   000146                     C1TEFSTAU       equ	326	;# 
  9853   000147                     C1TEFSTAT       equ	327	;# 
  9854   000148                     C1TEFUA         equ	328	;# 
  9855   000148                     C1TEFUAL        equ	328	;# 
  9856   000149                     C1TEFUAH        equ	329	;# 
  9857   00014A                     C1TEFUAU        equ	330	;# 
  9858   00014B                     C1TEFUAT        equ	331	;# 
  9859   00014C                     C1FIFOBA        equ	332	;# 
  9860   00014C                     C1FIFOBAL       equ	332	;# 
  9861   00014D                     C1FIFOBAH       equ	333	;# 
  9862   00014E                     C1FIFOBAU       equ	334	;# 
  9863   00014F                     C1FIFOBAT       equ	335	;# 
  9864   000150                     C1TXQCONL       equ	336	;# 
  9865   000151                     C1TXQCONH       equ	337	;# 
  9866   000152                     C1TXQCONU       equ	338	;# 
  9867   000153                     C1TXQCONT       equ	339	;# 
  9868   000154                     C1TXQSTAL       equ	340	;# 
  9869   000155                     C1TXQSTAH       equ	341	;# 
  9870   000156                     C1TXQSTAU       equ	342	;# 
  9871   000157                     C1TXQSTAT       equ	343	;# 
  9872   000158                     C1TXQUA         equ	344	;# 
  9873   000158                     C1TXQUAL        equ	344	;# 
  9874   000159                     C1TXQUAH        equ	345	;# 
  9875   00015A                     C1TXQUAU        equ	346	;# 
  9876   00015B                     C1TXQUAT        equ	347	;# 
  9877   00015C                     C1FIFOCON1      equ	348	;# 
  9878   00015C                     C1FIFOCON1L     equ	348	;# 
  9879   00015D                     C1FIFOCON1H     equ	349	;# 
  9880   00015E                     C1FIFOCON1U     equ	350	;# 
  9881   00015F                     C1FIFOCON1T     equ	351	;# 
  9882   000160                     C1FIFOSTA1      equ	352	;# 
  9883   000160                     C1FIFOSTA1L     equ	352	;# 
  9884   000161                     C1FIFOSTA1H     equ	353	;# 
  9885   000162                     C1FIFOSTA1U     equ	354	;# 
  9886   000163                     C1FIFOSTA1T     equ	355	;# 
  9887   000164                     C1FIFOUA1       equ	356	;# 
  9888   000164                     C1FIFOUA1L      equ	356	;# 
  9889   000165                     C1FIFOUA1H      equ	357	;# 
  9890   000166                     C1FIFOUA1U      equ	358	;# 
  9891   000167                     C1FIFOUA1T      equ	359	;# 
  9892   000168                     C1FIFOCON2      equ	360	;# 
  9893   000168                     C1FIFOCON2L     equ	360	;# 
  9894   000169                     C1FIFOCON2H     equ	361	;# 
  9895   00016A                     C1FIFOCON2U     equ	362	;# 
  9896   00016B                     C1FIFOCON2T     equ	363	;# 
  9897   00016C                     C1FIFOSTA2      equ	364	;# 
  9898   00016C                     C1FIFOSTA2L     equ	364	;# 
  9899   00016D                     C1FIFOSTA2H     equ	365	;# 
  9900   00016E                     C1FIFOSTA2U     equ	366	;# 
  9901   00016F                     C1FIFOSTA2T     equ	367	;# 
  9902   000170                     C1FIFOUA2       equ	368	;# 
  9903   000170                     C1FIFOUA2L      equ	368	;# 
  9904   000171                     C1FIFOUA2H      equ	369	;# 
  9905   000172                     C1FIFOUA2U      equ	370	;# 
  9906   000173                     C1FIFOUA2T      equ	371	;# 
  9907   000174                     C1FIFOCON3      equ	372	;# 
  9908   000174                     C1FIFOCON3L     equ	372	;# 
  9909   000175                     C1FIFOCON3H     equ	373	;# 
  9910   000176                     C1FIFOCON3U     equ	374	;# 
  9911   000177                     C1FIFOCON3T     equ	375	;# 
  9912   000178                     C1FIFOSTA3      equ	376	;# 
  9913   000178                     C1FIFOSTA3L     equ	376	;# 
  9914   000179                     C1FIFOSTA3H     equ	377	;# 
  9915   00017A                     C1FIFOSTA3U     equ	378	;# 
  9916   00017B                     C1FIFOSTA3T     equ	379	;# 
  9917   00017C                     C1FIFOUA3       equ	380	;# 
  9918   00017C                     C1FIFOUA3L      equ	380	;# 
  9919   00017D                     C1FIFOUA3H      equ	381	;# 
  9920   00017E                     C1FIFOUA3U      equ	382	;# 
  9921   00017F                     C1FIFOUA3T      equ	383	;# 
  9922   000180                     C1FLTCON0L      equ	384	;# 
  9923   000181                     C1FLTCON0H      equ	385	;# 
  9924   000182                     C1FLTCON0U      equ	386	;# 
  9925   000183                     C1FLTCON0T      equ	387	;# 
  9926   000184                     C1FLTCON1L      equ	388	;# 
  9927   000185                     C1FLTCON1H      equ	389	;# 
  9928   000186                     C1FLTCON1U      equ	390	;# 
  9929   000187                     C1FLTCON1T      equ	391	;# 
  9930   000188                     C1FLTCON2L      equ	392	;# 
  9931   000189                     C1FLTCON2H      equ	393	;# 
  9932   00018A                     C1FLTCON2U      equ	394	;# 
  9933   00018B                     C1FLTCON2T      equ	395	;# 
  9934   00018C                     C1FLTOBJ0       equ	396	;# 
  9935   00018C                     C1FLTOBJ0L      equ	396	;# 
  9936   00018D                     C1FLTOBJ0H      equ	397	;# 
  9937   00018E                     C1FLTOBJ0U      equ	398	;# 
  9938   00018F                     C1FLTOBJ0T      equ	399	;# 
  9939   000190                     C1MASK0         equ	400	;# 
  9940   000190                     C1MASK0L        equ	400	;# 
  9941   000191                     C1MASK0H        equ	401	;# 
  9942   000192                     C1MASK0U        equ	402	;# 
  9943   000193                     C1MASK0T        equ	403	;# 
  9944   000194                     C1FLTOBJ1       equ	404	;# 
  9945   000194                     C1FLTOBJ1L      equ	404	;# 
  9946   000195                     C1FLTOBJ1H      equ	405	;# 
  9947   000196                     C1FLTOBJ1U      equ	406	;# 
  9948   000197                     C1FLTOBJ1T      equ	407	;# 
  9949   000198                     C1MASK1         equ	408	;# 
  9950   000198                     C1MASK1L        equ	408	;# 
  9951   000199                     C1MASK1H        equ	409	;# 
  9952   00019A                     C1MASK1U        equ	410	;# 
  9953   00019B                     C1MASK1T        equ	411	;# 
  9954   00019C                     C1FLTOBJ2       equ	412	;# 
  9955   00019C                     C1FLTOBJ2L      equ	412	;# 
  9956   00019D                     C1FLTOBJ2H      equ	413	;# 
  9957   00019E                     C1FLTOBJ2U      equ	414	;# 
  9958   00019F                     C1FLTOBJ2T      equ	415	;# 
  9959   0001A0                     C1MASK2         equ	416	;# 
  9960   0001A0                     C1MASK2L        equ	416	;# 
  9961   0001A1                     C1MASK2H        equ	417	;# 
  9962   0001A2                     C1MASK2U        equ	418	;# 
  9963   0001A3                     C1MASK2T        equ	419	;# 
  9964   0001A4                     C1FLTOBJ3       equ	420	;# 
  9965   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9966   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9967   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9968   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9969   0001A8                     C1MASK3         equ	424	;# 
  9970   0001A8                     C1MASK3L        equ	424	;# 
  9971   0001A9                     C1MASK3H        equ	425	;# 
  9972   0001AA                     C1MASK3U        equ	426	;# 
  9973   0001AB                     C1MASK3T        equ	427	;# 
  9974   0001AC                     C1FLTOBJ4       equ	428	;# 
  9975   0001AC                     C1FLTOBJ4L      equ	428	;# 
  9976   0001AD                     C1FLTOBJ4H      equ	429	;# 
  9977   0001AE                     C1FLTOBJ4U      equ	430	;# 
  9978   0001AF                     C1FLTOBJ4T      equ	431	;# 
  9979   0001B0                     C1MASK4         equ	432	;# 
  9980   0001B0                     C1MASK4L        equ	432	;# 
  9981   0001B1                     C1MASK4H        equ	433	;# 
  9982   0001B2                     C1MASK4U        equ	434	;# 
  9983   0001B3                     C1MASK4T        equ	435	;# 
  9984   0001B4                     C1FLTOBJ5       equ	436	;# 
  9985   0001B4                     C1FLTOBJ5L      equ	436	;# 
  9986   0001B5                     C1FLTOBJ5H      equ	437	;# 
  9987   0001B6                     C1FLTOBJ5U      equ	438	;# 
  9988   0001B7                     C1FLTOBJ5T      equ	439	;# 
  9989   0001B8                     C1MASK5         equ	440	;# 
  9990   0001B8                     C1MASK5L        equ	440	;# 
  9991   0001B9                     C1MASK5H        equ	441	;# 
  9992   0001BA                     C1MASK5U        equ	442	;# 
  9993   0001BB                     C1MASK5T        equ	443	;# 
  9994   0001BC                     C1FLTOBJ6       equ	444	;# 
  9995   0001BC                     C1FLTOBJ6L      equ	444	;# 
  9996   0001BD                     C1FLTOBJ6H      equ	445	;# 
  9997   0001BE                     C1FLTOBJ6U      equ	446	;# 
  9998   0001BF                     C1FLTOBJ6T      equ	447	;# 
  9999   0001C0                     C1MASK6         equ	448	;# 
 10000   0001C0                     C1MASK6L        equ	448	;# 
 10001   0001C1                     C1MASK6H        equ	449	;# 
 10002   0001C2                     C1MASK6U        equ	450	;# 
 10003   0001C3                     C1MASK6T        equ	451	;# 
 10004   0001C4                     C1FLTOBJ7       equ	452	;# 
 10005   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10006   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10007   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10008   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10009   0001C8                     C1MASK7         equ	456	;# 
 10010   0001C8                     C1MASK7L        equ	456	;# 
 10011   0001C9                     C1MASK7H        equ	457	;# 
 10012   0001CA                     C1MASK7U        equ	458	;# 
 10013   0001CB                     C1MASK7T        equ	459	;# 
 10014   0001CC                     C1FLTOBJ8       equ	460	;# 
 10015   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10016   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10017   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10018   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10019   0001D0                     C1MASK8         equ	464	;# 
 10020   0001D0                     C1MASK8L        equ	464	;# 
 10021   0001D1                     C1MASK8H        equ	465	;# 
 10022   0001D2                     C1MASK8U        equ	466	;# 
 10023   0001D3                     C1MASK8T        equ	467	;# 
 10024   0001D4                     C1FLTOBJ9       equ	468	;# 
 10025   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10026   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10027   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10028   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10029   0001D8                     C1MASK9         equ	472	;# 
 10030   0001D8                     C1MASK9L        equ	472	;# 
 10031   0001D9                     C1MASK9H        equ	473	;# 
 10032   0001DA                     C1MASK9U        equ	474	;# 
 10033   0001DB                     C1MASK9T        equ	475	;# 
 10034   0001DC                     C1FLTOBJ10      equ	476	;# 
 10035   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10036   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10037   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10038   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10039   0001E0                     C1MASK10        equ	480	;# 
 10040   0001E0                     C1MASK10L       equ	480	;# 
 10041   0001E1                     C1MASK10H       equ	481	;# 
 10042   0001E2                     C1MASK10U       equ	482	;# 
 10043   0001E3                     C1MASK10T       equ	483	;# 
 10044   0001E4                     C1FLTOBJ11      equ	484	;# 
 10045   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10046   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10047   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10048   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10049   0001E8                     C1MASK11        equ	488	;# 
 10050   0001E8                     C1MASK11L       equ	488	;# 
 10051   0001E9                     C1MASK11H       equ	489	;# 
 10052   0001EA                     C1MASK11U       equ	490	;# 
 10053   0001EB                     C1MASK11T       equ	491	;# 
 10054   000200                     PPSLOCK         equ	512	;# 
 10055   000201                     RA0PPS          equ	513	;# 
 10056   000202                     RA1PPS          equ	514	;# 
 10057   000203                     RA2PPS          equ	515	;# 
 10058   000204                     RA3PPS          equ	516	;# 
 10059   000205                     RA4PPS          equ	517	;# 
 10060   000206                     RA5PPS          equ	518	;# 
 10061   000207                     RA6PPS          equ	519	;# 
 10062   000208                     RA7PPS          equ	520	;# 
 10063   000209                     RB0PPS          equ	521	;# 
 10064   00020A                     RB1PPS          equ	522	;# 
 10065   00020B                     RB2PPS          equ	523	;# 
 10066   00020C                     RB3PPS          equ	524	;# 
 10067   00020D                     RB4PPS          equ	525	;# 
 10068   00020E                     RB5PPS          equ	526	;# 
 10069   00020F                     RB6PPS          equ	527	;# 
 10070   000210                     RB7PPS          equ	528	;# 
 10071   000211                     RC0PPS          equ	529	;# 
 10072   000212                     RC1PPS          equ	530	;# 
 10073   000213                     RC2PPS          equ	531	;# 
 10074   000214                     RC3PPS          equ	532	;# 
 10075   000215                     RC4PPS          equ	533	;# 
 10076   000216                     RC5PPS          equ	534	;# 
 10077   000217                     RC6PPS          equ	535	;# 
 10078   000218                     RC7PPS          equ	536	;# 
 10079   00023D                     CANRXPPS        equ	573	;# 
 10080   00023E                     INT0PPS         equ	574	;# 
 10081   00023F                     INT1PPS         equ	575	;# 
 10082   000240                     INT2PPS         equ	576	;# 
 10083   000241                     T0CKIPPS        equ	577	;# 
 10084   000242                     T1CKIPPS        equ	578	;# 
 10085   000243                     T1GPPS          equ	579	;# 
 10086   000244                     T3CKIPPS        equ	580	;# 
 10087   000245                     T3GPPS          equ	581	;# 
 10088   000246                     T5CKIPPS        equ	582	;# 
 10089   000247                     T5GPPS          equ	583	;# 
 10090   000248                     T2INPPS         equ	584	;# 
 10091   000249                     T4INPPS         equ	585	;# 
 10092   00024A                     T6INPPS         equ	586	;# 
 10093   00024B                     TUIN0PPS        equ	587	;# 
 10094   00024C                     TUIN1PPS        equ	588	;# 
 10095   00024F                     CCP1PPS         equ	591	;# 
 10096   000250                     CCP2PPS         equ	592	;# 
 10097   000251                     CCP3PPS         equ	593	;# 
 10098   000253                     PWM1ERSPPS      equ	595	;# 
 10099   000254                     PWM2ERSPPS      equ	596	;# 
 10100   000255                     PWM3ERSPPS      equ	597	;# 
 10101   000256                     PWM4ERSPPS      equ	598	;# 
 10102   000257                     PWMIN0PPS       equ	599	;# 
 10103   000258                     PWMIN1PPS       equ	600	;# 
 10104   000259                     SMT1WINPPS      equ	601	;# 
 10105   00025A                     SMT1SIGPPS      equ	602	;# 
 10106   00025B                     CWG1PPS         equ	603	;# 
 10107   00025B                     CWG1INPPS       equ	603	;# 
 10108   00025C                     CWG2PPS         equ	604	;# 
 10109   00025C                     CWG2INPPS       equ	604	;# 
 10110   00025D                     CWG3PPS         equ	605	;# 
 10111   00025D                     CWG3INPPS       equ	605	;# 
 10112   00025E                     MD1CARLPPS      equ	606	;# 
 10113   00025E                     MDCARLPPS       equ	606	;# 
 10114   00025F                     MD1CARHPPS      equ	607	;# 
 10115   00025F                     MDCARHPPS       equ	607	;# 
 10116   000260                     MD1SRCPPS       equ	608	;# 
 10117   000260                     MDSRCPPS        equ	608	;# 
 10118   000261                     CLCIN0PPS       equ	609	;# 
 10119   000262                     CLCIN1PPS       equ	610	;# 
 10120   000263                     CLCIN2PPS       equ	611	;# 
 10121   000264                     CLCIN3PPS       equ	612	;# 
 10122   000265                     CLCIN4PPS       equ	613	;# 
 10123   000266                     CLCIN5PPS       equ	614	;# 
 10124   000267                     CLCIN6PPS       equ	615	;# 
 10125   000268                     CLCIN7PPS       equ	616	;# 
 10126   000269                     ADACTPPS        equ	617	;# 
 10127   00026A                     SPI1SCKPPS      equ	618	;# 
 10128   00026B                     SPI1SDIPPS      equ	619	;# 
 10129   00026C                     SPI1SSPPS       equ	620	;# 
 10130   00026D                     SPI2SCKPPS      equ	621	;# 
 10131   00026E                     SPI2SDIPPS      equ	622	;# 
 10132   00026F                     SPI2SSPPS       equ	623	;# 
 10133   000270                     I2C1SDAPPS      equ	624	;# 
 10134   000271                     I2C1SCLPPS      equ	625	;# 
 10135   000272                     U1RXPPS         equ	626	;# 
 10136   000273                     U1CTSPPS        equ	627	;# 
 10137   000274                     U2RXPPS         equ	628	;# 
 10138   000275                     U2CTSPPS        equ	629	;# 
 10139   000276                     U3RXPPS         equ	630	;# 
 10140   000277                     U3CTSPPS        equ	631	;# 
 10141   000278                     U4RXPPS         equ	632	;# 
 10142   000279                     U4CTSPPS        equ	633	;# 
 10143   00027A                     U5RXPPS         equ	634	;# 
 10144   00027B                     U5CTSPPS        equ	635	;# 
 10145   000286                     RC4I2C          equ	646	;# 
 10146   000287                     RC3I2C          equ	647	;# 
 10147   000288                     RB2I2C          equ	648	;# 
 10148   000289                     RB1I2C          equ	649	;# 
 10149   00028A                     I2C1RXB         equ	650	;# 
 10150   00028B                     I2C1TXB         equ	651	;# 
 10151   00028C                     I2C1CNTL        equ	652	;# 
 10152   00028D                     I2C1CNTH        equ	653	;# 
 10153   00028E                     I2C1ADB0        equ	654	;# 
 10154   00028F                     I2C1ADB1        equ	655	;# 
 10155   000290                     I2C1ADR0        equ	656	;# 
 10156   000291                     I2C1ADR1        equ	657	;# 
 10157   000292                     I2C1ADR2        equ	658	;# 
 10158   000293                     I2C1ADR3        equ	659	;# 
 10159   000294                     I2C1CON0        equ	660	;# 
 10160   000295                     I2C1CON1        equ	661	;# 
 10161   000296                     I2C1CON2        equ	662	;# 
 10162   000297                     I2C1ERR         equ	663	;# 
 10163   000298                     I2C1STAT0       equ	664	;# 
 10164   000299                     I2C1STAT1       equ	665	;# 
 10165   00029A                     I2C1PIR         equ	666	;# 
 10166   00029B                     I2C1PIE         equ	667	;# 
 10167   00029C                     I2C1BTO         equ	668	;# 
 10168   00029D                     I2C1BAUD        equ	669	;# 
 10169   00029E                     I2C1CLK         equ	670	;# 
 10170   00029F                     I2C1BTOC        equ	671	;# 
 10171   0002A1                     U1RXB           equ	673	;# 
 10172   0002A1                     U1RXBL          equ	673	;# 
 10173   0002A2                     U1RXCHK         equ	674	;# 
 10174   0002A3                     U1TXB           equ	675	;# 
 10175   0002A3                     U1TXBL          equ	675	;# 
 10176   0002A4                     U1TXCHK         equ	676	;# 
 10177   0002A5                     U1P1            equ	677	;# 
 10178   0002A5                     U1P1L           equ	677	;# 
 10179   0002A6                     U1P1H           equ	678	;# 
 10180   0002A7                     U1P2            equ	679	;# 
 10181   0002A7                     U1P2L           equ	679	;# 
 10182   0002A8                     U1P2H           equ	680	;# 
 10183   0002A9                     U1P3            equ	681	;# 
 10184   0002A9                     U1P3L           equ	681	;# 
 10185   0002AA                     U1P3H           equ	682	;# 
 10186   0002AB                     U1CON0          equ	683	;# 
 10187   0002AC                     U1CON1          equ	684	;# 
 10188   0002AD                     U1CON2          equ	685	;# 
 10189   0002AE                     U1BRG           equ	686	;# 
 10190   0002AE                     U1BRGL          equ	686	;# 
 10191   0002AF                     U1BRGH          equ	687	;# 
 10192   0002B0                     U1FIFO          equ	688	;# 
 10193   0002B1                     U1UIR           equ	689	;# 
 10194   0002B2                     U1ERRIR         equ	690	;# 
 10195   0002B3                     U1ERRIE         equ	691	;# 
 10196   0002B4                     U2RXB           equ	692	;# 
 10197   0002B4                     U2RXBL          equ	692	;# 
 10198   0002B5                     U2RXCHK         equ	693	;# 
 10199   0002B6                     U2TXB           equ	694	;# 
 10200   0002B6                     U2TXBL          equ	694	;# 
 10201   0002B7                     U2TXCHK         equ	695	;# 
 10202   0002B8                     U2P1            equ	696	;# 
 10203   0002B8                     U2P1L           equ	696	;# 
 10204   0002B9                     U2P1H           equ	697	;# 
 10205   0002BA                     U2P2            equ	698	;# 
 10206   0002BA                     U2P2L           equ	698	;# 
 10207   0002BB                     U2P2H           equ	699	;# 
 10208   0002BC                     U2P3            equ	700	;# 
 10209   0002BC                     U2P3L           equ	700	;# 
 10210   0002BD                     U2P3H           equ	701	;# 
 10211   0002BE                     U2CON0          equ	702	;# 
 10212   0002BF                     U2CON1          equ	703	;# 
 10213   0002C0                     U2CON2          equ	704	;# 
 10214   0002C1                     U2BRG           equ	705	;# 
 10215   0002C1                     U2BRGL          equ	705	;# 
 10216   0002C2                     U2BRGH          equ	706	;# 
 10217   0002C3                     U2FIFO          equ	707	;# 
 10218   0002C4                     U2UIR           equ	708	;# 
 10219   0002C5                     U2ERRIR         equ	709	;# 
 10220   0002C6                     U2ERRIE         equ	710	;# 
 10221   0002C7                     U3RXB           equ	711	;# 
 10222   0002C7                     U3RXBL          equ	711	;# 
 10223   0002C9                     U3TXB           equ	713	;# 
 10224   0002C9                     U3TXBL          equ	713	;# 
 10225   0002CB                     U3P1            equ	715	;# 
 10226   0002CB                     U3P1L           equ	715	;# 
 10227   0002CD                     U3P2            equ	717	;# 
 10228   0002CD                     U3P2L           equ	717	;# 
 10229   0002CF                     U3P3            equ	719	;# 
 10230   0002CF                     U3P3L           equ	719	;# 
 10231   0002D1                     U3CON0          equ	721	;# 
 10232   0002D2                     U3CON1          equ	722	;# 
 10233   0002D3                     U3CON2          equ	723	;# 
 10234   0002D4                     U3BRG           equ	724	;# 
 10235   0002D4                     U3BRGL          equ	724	;# 
 10236   0002D5                     U3BRGH          equ	725	;# 
 10237   0002D6                     U3FIFO          equ	726	;# 
 10238   0002D7                     U3UIR           equ	727	;# 
 10239   0002D8                     U3ERRIR         equ	728	;# 
 10240   0002D9                     U3ERRIE         equ	729	;# 
 10241   0002DA                     U4RXB           equ	730	;# 
 10242   0002DA                     U4RXBL          equ	730	;# 
 10243   0002DC                     U4TXB           equ	732	;# 
 10244   0002DC                     U4TXBL          equ	732	;# 
 10245   0002DE                     U4P1            equ	734	;# 
 10246   0002DE                     U4P1L           equ	734	;# 
 10247   0002E0                     U4P2            equ	736	;# 
 10248   0002E0                     U4P2L           equ	736	;# 
 10249   0002E2                     U4P3            equ	738	;# 
 10250   0002E2                     U4P3L           equ	738	;# 
 10251   0002E4                     U4CON0          equ	740	;# 
 10252   0002E5                     U4CON1          equ	741	;# 
 10253   0002E6                     U4CON2          equ	742	;# 
 10254   0002E7                     U4BRG           equ	743	;# 
 10255   0002E7                     U4BRGL          equ	743	;# 
 10256   0002E8                     U4BRGH          equ	744	;# 
 10257   0002E9                     U4FIFO          equ	745	;# 
 10258   0002EA                     U4UIR           equ	746	;# 
 10259   0002EB                     U4ERRIR         equ	747	;# 
 10260   0002EC                     U4ERRIE         equ	748	;# 
 10261   0002ED                     U5RXB           equ	749	;# 
 10262   0002ED                     U5RXBL          equ	749	;# 
 10263   0002EF                     U5TXB           equ	751	;# 
 10264   0002EF                     U5TXBL          equ	751	;# 
 10265   0002F1                     U5P1            equ	753	;# 
 10266   0002F1                     U5P1L           equ	753	;# 
 10267   0002F3                     U5P2            equ	755	;# 
 10268   0002F3                     U5P2L           equ	755	;# 
 10269   0002F5                     U5P3            equ	757	;# 
 10270   0002F5                     U5P3L           equ	757	;# 
 10271   0002F7                     U5CON0          equ	759	;# 
 10272   0002F8                     U5CON1          equ	760	;# 
 10273   0002F9                     U5CON2          equ	761	;# 
 10274   0002FA                     U5BRG           equ	762	;# 
 10275   0002FA                     U5BRGL          equ	762	;# 
 10276   0002FB                     U5BRGH          equ	763	;# 
 10277   0002FC                     U5FIFO          equ	764	;# 
 10278   0002FD                     U5UIR           equ	765	;# 
 10279   0002FE                     U5ERRIR         equ	766	;# 
 10280   0002FF                     U5ERRIE         equ	767	;# 
 10281   000300                     SMT1TMR         equ	768	;# 
 10282   000300                     SMT1TMRL        equ	768	;# 
 10283   000301                     SMT1TMRH        equ	769	;# 
 10284   000302                     SMT1TMRU        equ	770	;# 
 10285   000303                     SMT1CPR         equ	771	;# 
 10286   000303                     SMT1CPRL        equ	771	;# 
 10287   000304                     SMT1CPRH        equ	772	;# 
 10288   000305                     SMT1CPRU        equ	773	;# 
 10289   000306                     SMT1CPW         equ	774	;# 
 10290   000306                     SMT1CPWL        equ	774	;# 
 10291   000307                     SMT1CPWH        equ	775	;# 
 10292   000308                     SMT1CPWU        equ	776	;# 
 10293   000309                     SMT1PR          equ	777	;# 
 10294   000309                     SMT1PRL         equ	777	;# 
 10295   00030A                     SMT1PRH         equ	778	;# 
 10296   00030B                     SMT1PRU         equ	779	;# 
 10297   00030C                     SMT1CON0        equ	780	;# 
 10298   00030D                     SMT1CON1        equ	781	;# 
 10299   00030E                     SMT1STAT        equ	782	;# 
 10300   00030F                     SMT1CLK         equ	783	;# 
 10301   000310                     SMT1SIG         equ	784	;# 
 10302   000311                     SMT1WIN         equ	785	;# 
 10303   000318                     TMR0L           equ	792	;# 
 10304   000318                     TMR0            equ	792	;# 
 10305   000319                     TMR0H           equ	793	;# 
 10306   000319                     PR0             equ	793	;# 
 10307   00031A                     T0CON0          equ	794	;# 
 10308   00031B                     T0CON1          equ	795	;# 
 10309   00031C                     TMR1            equ	796	;# 
 10310   00031C                     TMR1L           equ	796	;# 
 10311   00031D                     TMR1H           equ	797	;# 
 10312   00031E                     T1CON           equ	798	;# 
 10313   00031E                     TMR1CON         equ	798	;# 
 10314   00031F                     T1GCON          equ	799	;# 
 10315   00031F                     TMR1GCON        equ	799	;# 
 10316   000320                     T1GATE          equ	800	;# 
 10317   000320                     TMR1GATE        equ	800	;# 
 10318   000321                     T1CLK           equ	801	;# 
 10319   000321                     TMR1CLK         equ	801	;# 
 10320   000321                     PR1             equ	801	;# 
 10321   000322                     T2TMR           equ	802	;# 
 10322   000322                     TMR2            equ	802	;# 
 10323   000323                     T2PR            equ	803	;# 
 10324   000323                     PR2             equ	803	;# 
 10325   000324                     T2CON           equ	804	;# 
 10326   000325                     T2HLT           equ	805	;# 
 10327   000326                     T2CLKCON        equ	806	;# 
 10328   000326                     T2CLK           equ	806	;# 
 10329   000327                     T2RST           equ	807	;# 
 10330   000328                     TMR3            equ	808	;# 
 10331   000328                     TMR3L           equ	808	;# 
 10332   000329                     TMR3H           equ	809	;# 
 10333   00032A                     T3CON           equ	810	;# 
 10334   00032A                     TMR3CON         equ	810	;# 
 10335   00032B                     T3GCON          equ	811	;# 
 10336   00032B                     TMR3GCON        equ	811	;# 
 10337   00032C                     T3GATE          equ	812	;# 
 10338   00032C                     TMR3GATE        equ	812	;# 
 10339   00032D                     T3CLK           equ	813	;# 
 10340   00032D                     TMR3CLK         equ	813	;# 
 10341   00032D                     PR3             equ	813	;# 
 10342   00032E                     T4TMR           equ	814	;# 
 10343   00032E                     TMR4            equ	814	;# 
 10344   00032F                     T4PR            equ	815	;# 
 10345   00032F                     PR4             equ	815	;# 
 10346   000330                     T4CON           equ	816	;# 
 10347   000331                     T4HLT           equ	817	;# 
 10348   000332                     T4CLKCON        equ	818	;# 
 10349   000332                     T4CLK           equ	818	;# 
 10350   000333                     T4RST           equ	819	;# 
 10351   000334                     TMR5            equ	820	;# 
 10352   000334                     TMR5L           equ	820	;# 
 10353   000335                     TMR5H           equ	821	;# 
 10354   000336                     T5CON           equ	822	;# 
 10355   000336                     TMR5CON         equ	822	;# 
 10356   000337                     T5GCON          equ	823	;# 
 10357   000337                     TMR5GCON        equ	823	;# 
 10358   000338                     T5GATE          equ	824	;# 
 10359   000338                     TMR5GATE        equ	824	;# 
 10360   000339                     T5CLK           equ	825	;# 
 10361   000339                     TMR5CLK         equ	825	;# 
 10362   000339                     PR5             equ	825	;# 
 10363   00033A                     T6TMR           equ	826	;# 
 10364   00033A                     TMR6            equ	826	;# 
 10365   00033B                     T6PR            equ	827	;# 
 10366   00033B                     PR6             equ	827	;# 
 10367   00033C                     T6CON           equ	828	;# 
 10368   00033D                     T6HLT           equ	829	;# 
 10369   00033E                     T6CLKCON        equ	830	;# 
 10370   00033E                     T6CLK           equ	830	;# 
 10371   00033F                     T6RST           equ	831	;# 
 10372   000340                     CCPR1           equ	832	;# 
 10373   000340                     CCPR1L          equ	832	;# 
 10374   000341                     CCPR1H          equ	833	;# 
 10375   000342                     CCP1CON         equ	834	;# 
 10376   000343                     CCP1CAP         equ	835	;# 
 10377   000344                     CCPR2           equ	836	;# 
 10378   000344                     CCPR2L          equ	836	;# 
 10379   000345                     CCPR2H          equ	837	;# 
 10380   000346                     CCP2CON         equ	838	;# 
 10381   000347                     CCP2CAP         equ	839	;# 
 10382   000348                     CCPR3           equ	840	;# 
 10383   000348                     CCPR3L          equ	840	;# 
 10384   000349                     CCPR3H          equ	841	;# 
 10385   00034A                     CCP3CON         equ	842	;# 
 10386   00034B                     CCP3CAP         equ	843	;# 
 10387   00034C                     CCPTMRS0        equ	844	;# 
 10388   00034F                     CRCDATA         equ	847	;# 
 10389   00034F                     CRCDATAL        equ	847	;# 
 10390   000350                     CRCDATAH        equ	848	;# 
 10391   000351                     CRCDATAU        equ	849	;# 
 10392   000352                     CRCDATAT        equ	850	;# 
 10393   000353                     CRCOUT          equ	851	;# 
 10394   000353                     CRCSHFT         equ	851	;# 
 10395   000353                     CRCXOR          equ	851	;# 
 10396   000353                     CRCOUTL         equ	851	;# 
 10397   000353                     CRCSHFTL        equ	851	;# 
 10398   000353                     CRCSHIFTL       equ	851	;# 
 10399   000353                     CRCXORL         equ	851	;# 
 10400   000354                     CRCOUTH         equ	852	;# 
 10401   000354                     CRCSHFTH        equ	852	;# 
 10402   000354                     CRCSHIFTH       equ	852	;# 
 10403   000354                     CRCXORH         equ	852	;# 
 10404   000355                     CRCOUTU         equ	853	;# 
 10405   000355                     CRCSHFTU        equ	853	;# 
 10406   000355                     CRCSHIFTU       equ	853	;# 
 10407   000355                     CRCXORU         equ	853	;# 
 10408   000356                     CRCOUTT         equ	854	;# 
 10409   000356                     CRCSHFTT        equ	854	;# 
 10410   000356                     CRCSHIFTT       equ	854	;# 
 10411   000356                     CRCXORT         equ	854	;# 
 10412   000357                     CRCCON0         equ	855	;# 
 10413   000358                     CRCCON1         equ	856	;# 
 10414   000359                     CRCCON2         equ	857	;# 
 10415   00035A                     SCANLADR        equ	858	;# 
 10416   00035A                     SCANLADRL       equ	858	;# 
 10417   00035B                     SCANLADRH       equ	859	;# 
 10418   00035C                     SCANLADRU       equ	860	;# 
 10419   00035D                     SCANHADR        equ	861	;# 
 10420   00035D                     SCANHADRL       equ	861	;# 
 10421   00035E                     SCANHADRH       equ	862	;# 
 10422   00035F                     SCANHADRU       equ	863	;# 
 10423   000360                     SCANCON0        equ	864	;# 
 10424   000361                     SCANTRIG        equ	865	;# 
 10425   000362                     IPR0            equ	866	;# 
 10426   000363                     IPR1            equ	867	;# 
 10427   000364                     IPR2            equ	868	;# 
 10428   000365                     IPR3            equ	869	;# 
 10429   000366                     IPR4            equ	870	;# 
 10430   000367                     IPR5            equ	871	;# 
 10431   000368                     IPR6            equ	872	;# 
 10432   000369                     IPR7            equ	873	;# 
 10433   00036A                     IPR8            equ	874	;# 
 10434   00036B                     IPR9            equ	875	;# 
 10435   00036C                     IPR10           equ	876	;# 
 10436   00036D                     IPR11           equ	877	;# 
 10437   00036E                     IPR12           equ	878	;# 
 10438   00036F                     IPR13           equ	879	;# 
 10439   000370                     IPR14           equ	880	;# 
 10440   000371                     IPR15           equ	881	;# 
 10441   000373                     STATUS_CSHAD    equ	883	;# 
 10442   000374                     WREG_CSHAD      equ	884	;# 
 10443   000375                     BSR_CSHAD       equ	885	;# 
 10444   000376                     SHADCON         equ	886	;# 
 10445   000377                     STATUS_SHAD     equ	887	;# 
 10446   000378                     WREG_SHAD       equ	888	;# 
 10447   000379                     BSR_SHAD        equ	889	;# 
 10448   00037A                     PCLATH_SHAD     equ	890	;# 
 10449   00037B                     PCLATU_SHAD     equ	891	;# 
 10450   00037C                     FSR0SH          equ	892	;# 
 10451   00037C                     FSR0L_SHAD      equ	892	;# 
 10452   00037D                     FSR0H_SHAD      equ	893	;# 
 10453   00037E                     FSR1SH          equ	894	;# 
 10454   00037E                     FSR1L_SHAD      equ	894	;# 
 10455   00037F                     FSR1H_SHAD      equ	895	;# 
 10456   000380                     FSR2SH          equ	896	;# 
 10457   000380                     FSR2L_SHAD      equ	896	;# 
 10458   000381                     FSR2H_SHAD      equ	897	;# 
 10459   000382                     PRODSH          equ	898	;# 
 10460   000382                     PRODL_SHAD      equ	898	;# 
 10461   000383                     PRODH_SHAD      equ	899	;# 
 10462   000387                     TU16ACON0       equ	903	;# 
 10463   000388                     TU16ACON1       equ	904	;# 
 10464   000389                     TU16AHLT        equ	905	;# 
 10465   00038A                     TU16APS         equ	906	;# 
 10466   00038B                     TU16ATMR        equ	907	;# 
 10467   00038B                     TU16ACR         equ	907	;# 
 10468   00038B                     TU16ATMRL       equ	907	;# 
 10469   00038B                     TU16ACRL        equ	907	;# 
 10470   00038C                     TU16ATMRH       equ	908	;# 
 10471   00038C                     TU16ACRH        equ	908	;# 
 10472   00038D                     TU16APR         equ	909	;# 
 10473   00038D                     TU16APRL        equ	909	;# 
 10474   00038E                     TU16APRH        equ	910	;# 
 10475   00038F                     TU16ACLK        equ	911	;# 
 10476   000390                     TU16AERS        equ	912	;# 
 10477   000393                     TU16BCON0       equ	915	;# 
 10478   000394                     TU16BCON1       equ	916	;# 
 10479   000395                     TU16BHLT        equ	917	;# 
 10480   000396                     TU16BPS         equ	918	;# 
 10481   000397                     TU16BTMR        equ	919	;# 
 10482   000397                     TU16BCR         equ	919	;# 
 10483   000397                     TU16BTMRL       equ	919	;# 
 10484   000397                     TU16BCRL        equ	919	;# 
 10485   000398                     TU16BTMRH       equ	920	;# 
 10486   000398                     TU16BCRH        equ	920	;# 
 10487   000399                     TU16BPR         equ	921	;# 
 10488   000399                     TU16BPRL        equ	921	;# 
 10489   00039A                     TU16BPRH        equ	922	;# 
 10490   00039B                     TU16BCLK        equ	923	;# 
 10491   00039C                     TU16BERS        equ	924	;# 
 10492   0003BB                     TUCHAIN         equ	955	;# 
 10493   0003BC                     CWG1CLK         equ	956	;# 
 10494   0003BC                     CWG1CLKCON      equ	956	;# 
 10495   0003BD                     CWG1ISM         equ	957	;# 
 10496   0003BE                     CWG1DBR         equ	958	;# 
 10497   0003BF                     CWG1DBF         equ	959	;# 
 10498   0003C0                     CWG1CON0        equ	960	;# 
 10499   0003C1                     CWG1CON1        equ	961	;# 
 10500   0003C2                     CWG1AS0         equ	962	;# 
 10501   0003C3                     CWG1AS1         equ	963	;# 
 10502   0003C4                     CWG1STR         equ	964	;# 
 10503   0003C5                     CWG2CLK         equ	965	;# 
 10504   0003C5                     CWG2CLKCON      equ	965	;# 
 10505   0003C6                     CWG2ISM         equ	966	;# 
 10506   0003C7                     CWG2DBR         equ	967	;# 
 10507   0003C8                     CWG2DBF         equ	968	;# 
 10508   0003C9                     CWG2CON0        equ	969	;# 
 10509   0003CA                     CWG2CON1        equ	970	;# 
 10510   0003CB                     CWG2AS0         equ	971	;# 
 10511   0003CC                     CWG2AS1         equ	972	;# 
 10512   0003CD                     CWG2STR         equ	973	;# 
 10513   0003CE                     CWG3CLK         equ	974	;# 
 10514   0003CE                     CWG3CLKCON      equ	974	;# 
 10515   0003CF                     CWG3ISM         equ	975	;# 
 10516   0003D0                     CWG3DBR         equ	976	;# 
 10517   0003D1                     CWG3DBF         equ	977	;# 
 10518   0003D2                     CWG3CON0        equ	978	;# 
 10519   0003D3                     CWG3CON1        equ	979	;# 
 10520   0003D4                     CWG3AS0         equ	980	;# 
 10521   0003D5                     CWG3AS1         equ	981	;# 
 10522   0003D6                     CWG3STR         equ	982	;# 
 10523   0003D7                     FVRCON          equ	983	;# 
 10524   0003D8                     ADCPCON         equ	984	;# 
 10525   0003D8                     ADCP            equ	984	;# 
 10526   0003D9                     ADLTH           equ	985	;# 
 10527   0003D9                     ADLTHL          equ	985	;# 
 10528   0003DA                     ADLTHH          equ	986	;# 
 10529   0003DB                     ADUTH           equ	987	;# 
 10530   0003DB                     ADUTHL          equ	987	;# 
 10531   0003DC                     ADUTHH          equ	988	;# 
 10532   0003DD                     ADERR           equ	989	;# 
 10533   0003DD                     ADERRL          equ	989	;# 
 10534   0003DE                     ADERRH          equ	990	;# 
 10535   0003DF                     ADSTPT          equ	991	;# 
 10536   0003DF                     ADSTPTL         equ	991	;# 
 10537   0003E0                     ADSTPTH         equ	992	;# 
 10538   0003E1                     ADFLTR          equ	993	;# 
 10539   0003E1                     ADFLTRL         equ	993	;# 
 10540   0003E2                     ADFLTRH         equ	994	;# 
 10541   0003E3                     ADACC           equ	995	;# 
 10542   0003E3                     ADACCL          equ	995	;# 
 10543   0003E4                     ADACCH          equ	996	;# 
 10544   0003E5                     ADACCU          equ	997	;# 
 10545   0003E6                     ADCNT           equ	998	;# 
 10546   0003E7                     ADRPT           equ	999	;# 
 10547   0003E8                     ADPREV          equ	1000	;# 
 10548   0003E8                     ADPREVL         equ	1000	;# 
 10549   0003E9                     ADPREVH         equ	1001	;# 
 10550   0003EA                     ADRES           equ	1002	;# 
 10551   0003EA                     ADRESL          equ	1002	;# 
 10552   0003EB                     ADRESH          equ	1003	;# 
 10553   0003EC                     ADPCH           equ	1004	;# 
 10554   0003EE                     ADACQ           equ	1006	;# 
 10555   0003EE                     ADACQL          equ	1006	;# 
 10556   0003EF                     ADACQH          equ	1007	;# 
 10557   0003F0                     ADCAP           equ	1008	;# 
 10558   0003F1                     ADPRE           equ	1009	;# 
 10559   0003F1                     ADPREL          equ	1009	;# 
 10560   0003F2                     ADPREH          equ	1010	;# 
 10561   0003F3                     ADCON0          equ	1011	;# 
 10562   0003F4                     ADCON1          equ	1012	;# 
 10563   0003F5                     ADCON2          equ	1013	;# 
 10564   0003F6                     ADCON3          equ	1014	;# 
 10565   0003F7                     ADSTAT          equ	1015	;# 
 10566   0003F8                     ADREF           equ	1016	;# 
 10567   0003F9                     ADACT           equ	1017	;# 
 10568   0003FA                     ADCLK           equ	1018	;# 
 10569   0003FB                     ADCTX           equ	1019	;# 
 10570   0003FC                     ADCSEL1         equ	1020	;# 
 10571   0003FD                     ADCSEL2         equ	1021	;# 
 10572   0003FE                     ADCSEL3         equ	1022	;# 
 10573   0003FF                     ADCSEL4         equ	1023	;# 
 10574   000400                     ANSELA          equ	1024	;# 
 10575   000401                     WPUA            equ	1025	;# 
 10576   000402                     ODCONA          equ	1026	;# 
 10577   000403                     SLRCONA         equ	1027	;# 
 10578   000404                     INLVLA          equ	1028	;# 
 10579   000405                     IOCAP           equ	1029	;# 
 10580   000406                     IOCAN           equ	1030	;# 
 10581   000407                     IOCAF           equ	1031	;# 
 10582   000408                     ANSELB          equ	1032	;# 
 10583   000409                     WPUB            equ	1033	;# 
 10584   00040A                     ODCONB          equ	1034	;# 
 10585   00040B                     SLRCONB         equ	1035	;# 
 10586   00040C                     INLVLB          equ	1036	;# 
 10587   00040D                     IOCBP           equ	1037	;# 
 10588   00040E                     IOCBN           equ	1038	;# 
 10589   00040F                     IOCBF           equ	1039	;# 
 10590   000410                     ANSELC          equ	1040	;# 
 10591   000411                     WPUC            equ	1041	;# 
 10592   000412                     ODCONC          equ	1042	;# 
 10593   000413                     SLRCONC         equ	1043	;# 
 10594   000414                     INLVLC          equ	1044	;# 
 10595   000415                     IOCCP           equ	1045	;# 
 10596   000416                     IOCCN           equ	1046	;# 
 10597   000417                     IOCCF           equ	1047	;# 
 10598   000421                     WPUE            equ	1057	;# 
 10599   000424                     INLVLE          equ	1060	;# 
 10600   000425                     IOCEP           equ	1061	;# 
 10601   000426                     IOCEN           equ	1062	;# 
 10602   000427                     IOCEF           equ	1063	;# 
 10603   000440                     NCO1ACC         equ	1088	;# 
 10604   000440                     NCO1ACCL        equ	1088	;# 
 10605   000441                     NCO1ACCH        equ	1089	;# 
 10606   000442                     NCO1ACCU        equ	1090	;# 
 10607   000443                     NCO1INC         equ	1091	;# 
 10608   000443                     NCO1INCL        equ	1091	;# 
 10609   000444                     NCO1INCH        equ	1092	;# 
 10610   000445                     NCO1INCU        equ	1093	;# 
 10611   000446                     NCO1CON         equ	1094	;# 
 10612   000447                     NCO1CLK         equ	1095	;# 
 10613   000448                     NCO2ACC         equ	1096	;# 
 10614   000448                     NCO2ACCL        equ	1096	;# 
 10615   000449                     NCO2ACCH        equ	1097	;# 
 10616   00044A                     NCO2ACCU        equ	1098	;# 
 10617   00044B                     NCO2INC         equ	1099	;# 
 10618   00044B                     NCO2INCL        equ	1099	;# 
 10619   00044C                     NCO2INCH        equ	1100	;# 
 10620   00044D                     NCO2INCU        equ	1101	;# 
 10621   00044E                     NCO2CON         equ	1102	;# 
 10622   00044F                     NCO2CLK         equ	1103	;# 
 10623   000450                     NCO3ACC         equ	1104	;# 
 10624   000450                     NCO3ACCL        equ	1104	;# 
 10625   000451                     NCO3ACCH        equ	1105	;# 
 10626   000452                     NCO3ACCU        equ	1106	;# 
 10627   000453                     NCO3INC         equ	1107	;# 
 10628   000453                     NCO3INCL        equ	1107	;# 
 10629   000454                     NCO3INCH        equ	1108	;# 
 10630   000455                     NCO3INCU        equ	1109	;# 
 10631   000456                     NCO3CON         equ	1110	;# 
 10632   000457                     NCO3CLK         equ	1111	;# 
 10633   000458                     FSCMCON         equ	1112	;# 
 10634   000459                     IVTLOCK         equ	1113	;# 
 10635   00045A                     IVTAD           equ	1114	;# 
 10636   00045A                     IVTADL          equ	1114	;# 
 10637   00045B                     IVTADH          equ	1115	;# 
 10638   00045C                     IVTADU          equ	1116	;# 
 10639   00045D                     IVTBASE         equ	1117	;# 
 10640   00045D                     IVTBASEL        equ	1117	;# 
 10641   00045E                     IVTBASEH        equ	1118	;# 
 10642   00045F                     IVTBASEU        equ	1119	;# 
 10643   000460                     PWM1ERS         equ	1120	;# 
 10644   000461                     PWM1CLK         equ	1121	;# 
 10645   000462                     PWM1LDS         equ	1122	;# 
 10646   000463                     PWM1PR          equ	1123	;# 
 10647   000463                     PWM1PRL         equ	1123	;# 
 10648   000464                     PWM1PRH         equ	1124	;# 
 10649   000465                     PWM1CPRE        equ	1125	;# 
 10650   000466                     PWM1PIPOS       equ	1126	;# 
 10651   000467                     PWM1GIR         equ	1127	;# 
 10652   000468                     PWM1GIE         equ	1128	;# 
 10653   000469                     PWM1CON         equ	1129	;# 
 10654   00046A                     PWM1S1CFG       equ	1130	;# 
 10655   00046B                     PWM1S1P1        equ	1131	;# 
 10656   00046B                     PWM1S1P1L       equ	1131	;# 
 10657   00046C                     PWM1S1P1H       equ	1132	;# 
 10658   00046D                     PWM1S1P2        equ	1133	;# 
 10659   00046D                     PWM1S1P2L       equ	1133	;# 
 10660   00046E                     PWM1S1P2H       equ	1134	;# 
 10661   00046F                     PWM2ERS         equ	1135	;# 
 10662   000470                     PWM2CLK         equ	1136	;# 
 10663   000471                     PWM2LDS         equ	1137	;# 
 10664   000472                     PWM2PR          equ	1138	;# 
 10665   000472                     PWM2PRL         equ	1138	;# 
 10666   000473                     PWM2PRH         equ	1139	;# 
 10667   000474                     PWM2CPRE        equ	1140	;# 
 10668   000475                     PWM2PIPOS       equ	1141	;# 
 10669   000476                     PWM2GIR         equ	1142	;# 
 10670   000477                     PWM2GIE         equ	1143	;# 
 10671   000478                     PWM2CON         equ	1144	;# 
 10672   000479                     PWM2S1CFG       equ	1145	;# 
 10673   00047A                     PWM2S1P1        equ	1146	;# 
 10674   00047A                     PWM2S1P1L       equ	1146	;# 
 10675   00047B                     PWM2S1P1H       equ	1147	;# 
 10676   00047C                     PWM2S1P2        equ	1148	;# 
 10677   00047C                     PWM2S1P2L       equ	1148	;# 
 10678   00047D                     PWM2S1P2H       equ	1149	;# 
 10679   00047E                     PWM3ERS         equ	1150	;# 
 10680   00047F                     PWM3CLK         equ	1151	;# 
 10681   000480                     PWM3LDS         equ	1152	;# 
 10682   000481                     PWM3PR          equ	1153	;# 
 10683   000481                     PWM3PRL         equ	1153	;# 
 10684   000482                     PWM3PRH         equ	1154	;# 
 10685   000483                     PWM3CPRE        equ	1155	;# 
 10686   000484                     PWM3PIPOS       equ	1156	;# 
 10687   000485                     PWM3GIR         equ	1157	;# 
 10688   000486                     PWM3GIE         equ	1158	;# 
 10689   000487                     PWM3CON         equ	1159	;# 
 10690   000488                     PWM3S1CFG       equ	1160	;# 
 10691   000489                     PWM3S1P1        equ	1161	;# 
 10692   000489                     PWM3S1P1L       equ	1161	;# 
 10693   00048A                     PWM3S1P1H       equ	1162	;# 
 10694   00048B                     PWM3S1P2        equ	1163	;# 
 10695   00048B                     PWM3S1P2L       equ	1163	;# 
 10696   00048C                     PWM3S1P2H       equ	1164	;# 
 10697   00048D                     PWM4ERS         equ	1165	;# 
 10698   00048E                     PWM4CLK         equ	1166	;# 
 10699   00048F                     PWM4LDS         equ	1167	;# 
 10700   000490                     PWM4PR          equ	1168	;# 
 10701   000490                     PWM4PRL         equ	1168	;# 
 10702   000491                     PWM4PRH         equ	1169	;# 
 10703   000492                     PWM4CPRE        equ	1170	;# 
 10704   000493                     PWM4PIPOS       equ	1171	;# 
 10705   000494                     PWM4GIR         equ	1172	;# 
 10706   000495                     PWM4GIE         equ	1173	;# 
 10707   000496                     PWM4CON         equ	1174	;# 
 10708   000497                     PWM4S1CFG       equ	1175	;# 
 10709   000498                     PWM4S1P1        equ	1176	;# 
 10710   000498                     PWM4S1P1L       equ	1176	;# 
 10711   000499                     PWM4S1P1H       equ	1177	;# 
 10712   00049A                     PWM4S1P2        equ	1178	;# 
 10713   00049A                     PWM4S1P2L       equ	1178	;# 
 10714   00049B                     PWM4S1P2H       equ	1179	;# 
 10715   00049C                     PWMLOAD         equ	1180	;# 
 10716   00049D                     PWMEN           equ	1181	;# 
 10717   00049E                     PIE0            equ	1182	;# 
 10718   00049F                     PIE1            equ	1183	;# 
 10719   0004A0                     PIE2            equ	1184	;# 
 10720   0004A1                     PIE3            equ	1185	;# 
 10721   0004A2                     PIE4            equ	1186	;# 
 10722   0004A3                     PIE5            equ	1187	;# 
 10723   0004A4                     PIE6            equ	1188	;# 
 10724   0004A5                     PIE7            equ	1189	;# 
 10725   0004A6                     PIE8            equ	1190	;# 
 10726   0004A7                     PIE9            equ	1191	;# 
 10727   0004A8                     PIE10           equ	1192	;# 
 10728   0004A9                     PIE11           equ	1193	;# 
 10729   0004AA                     PIE12           equ	1194	;# 
 10730   0004AB                     PIE13           equ	1195	;# 
 10731   0004AC                     PIE14           equ	1196	;# 
 10732   0004AD                     PIE15           equ	1197	;# 
 10733   0004AE                     PIR0            equ	1198	;# 
 10734   0004AF                     PIR1            equ	1199	;# 
 10735   0004B0                     PIR2            equ	1200	;# 
 10736   0004B1                     PIR3            equ	1201	;# 
 10737   0004B2                     PIR4            equ	1202	;# 
 10738   0004B3                     PIR5            equ	1203	;# 
 10739   0004B4                     PIR6            equ	1204	;# 
 10740   0004B5                     PIR7            equ	1205	;# 
 10741   0004B6                     PIR8            equ	1206	;# 
 10742   0004B7                     PIR9            equ	1207	;# 
 10743   0004B8                     PIR10           equ	1208	;# 
 10744   0004B9                     PIR11           equ	1209	;# 
 10745   0004BA                     PIR12           equ	1210	;# 
 10746   0004BB                     PIR13           equ	1211	;# 
 10747   0004BC                     PIR14           equ	1212	;# 
 10748   0004BD                     PIR15           equ	1213	;# 
 10749   0004BE                     LATA            equ	1214	;# 
 10750   0004BF                     LATB            equ	1215	;# 
 10751   0004C0                     LATC            equ	1216	;# 
 10752   0004C6                     TRISA           equ	1222	;# 
 10753   0004C7                     TRISB           equ	1223	;# 
 10754   0004C8                     TRISC           equ	1224	;# 
 10755   0004CA                     TRISE           equ	1226	;# 
 10756   0004CE                     PORTA           equ	1230	;# 
 10757   0004CF                     PORTB           equ	1231	;# 
 10758   0004D0                     PORTC           equ	1232	;# 
 10759   0004D2                     PORTE           equ	1234	;# 
 10760   0004D6                     INTCON0         equ	1238	;# 
 10761   0004D7                     INTCON1         equ	1239	;# 
 10762   0004D8                     STATUS          equ	1240	;# 
 10763   0004D9                     FSR2            equ	1241	;# 
 10764   0004D9                     FSR2L           equ	1241	;# 
 10765   0004DA                     FSR2H           equ	1242	;# 
 10766   0004DB                     PLUSW2          equ	1243	;# 
 10767   0004DC                     PREINC2         equ	1244	;# 
 10768   0004DD                     POSTDEC2        equ	1245	;# 
 10769   0004DE                     POSTINC2        equ	1246	;# 
 10770   0004DF                     INDF2           equ	1247	;# 
 10771   0004E0                     BSR             equ	1248	;# 
 10772   0004E1                     FSR1            equ	1249	;# 
 10773   0004E1                     FSR1L           equ	1249	;# 
 10774   0004E2                     FSR1H           equ	1250	;# 
 10775   0004E3                     PLUSW1          equ	1251	;# 
 10776   0004E4                     PREINC1         equ	1252	;# 
 10777   0004E5                     POSTDEC1        equ	1253	;# 
 10778   0004E6                     POSTINC1        equ	1254	;# 
 10779   0004E7                     INDF1           equ	1255	;# 
 10780   0004E8                     WREG            equ	1256	;# 
 10781   0004E9                     FSR0            equ	1257	;# 
 10782   0004E9                     FSR0L           equ	1257	;# 
 10783   0004EA                     FSR0H           equ	1258	;# 
 10784   0004EB                     PLUSW0          equ	1259	;# 
 10785   0004EC                     PREINC0         equ	1260	;# 
 10786   0004ED                     POSTDEC0        equ	1261	;# 
 10787   0004EE                     POSTINC0        equ	1262	;# 
 10788   0004EF                     INDF0           equ	1263	;# 
 10789   0004F0                     PCON0           equ	1264	;# 
 10790   0004F1                     PCON1           equ	1265	;# 
 10791   0004F2                     CPUDOZE         equ	1266	;# 
 10792   0004F3                     PROD            equ	1267	;# 
 10793   0004F3                     PRODL           equ	1267	;# 
 10794   0004F4                     PRODH           equ	1268	;# 
 10795   0004F5                     TABLAT          equ	1269	;# 
 10796   0004F6                     TBLPTR          equ	1270	;# 
 10797   0004F6                     TBLPTRL         equ	1270	;# 
 10798   0004F7                     TBLPTRH         equ	1271	;# 
 10799   0004F8                     TBLPTRU         equ	1272	;# 
 10800   0004F9                     PCLAT           equ	1273	;# 
 10801   0004F9                     PCL             equ	1273	;# 
 10802   0004FA                     PCLATH          equ	1274	;# 
 10803   0004FB                     PCLATU          equ	1275	;# 
 10804   0004FC                     STKPTR          equ	1276	;# 
 10805   0004FD                     TOS             equ	1277	;# 
 10806   0004FD                     TOSL            equ	1277	;# 
 10807   0004FE                     TOSH            equ	1278	;# 
 10808   0004FF                     TOSU            equ	1279	;# 
 10809   000038                     BOOTREG         equ	56	;# 
 10810   000039                     CLKRCON         equ	57	;# 
 10811   00003A                     CLKRCLK         equ	58	;# 
 10812   000040                     NVMCON0         equ	64	;# 
 10813   000041                     NVMCON1         equ	65	;# 
 10814   000042                     NVMLOCK         equ	66	;# 
 10815   000043                     NVMADR          equ	67	;# 
 10816   000043                     NVMADRL         equ	67	;# 
 10817   000044                     NVMADRH         equ	68	;# 
 10818   000045                     NVMADRU         equ	69	;# 
 10819   000046                     NVMDAT          equ	70	;# 
 10820   000046                     NVMDATL         equ	70	;# 
 10821   000047                     NVMDATH         equ	71	;# 
 10822   000048                     VREGCON         equ	72	;# 
 10823   000049                     BORCON          equ	73	;# 
 10824   00004A                     HLVDCON0        equ	74	;# 
 10825   00004B                     HLVDCON1        equ	75	;# 
 10826   00004C                     ZCDCON          equ	76	;# 
 10827   000060                     PMD0            equ	96	;# 
 10828   000061                     PMD1            equ	97	;# 
 10829   000062                     PMD2            equ	98	;# 
 10830   000063                     PMD3            equ	99	;# 
 10831   000064                     PMD4            equ	100	;# 
 10832   000065                     PMD5            equ	101	;# 
 10833   000066                     PMD6            equ	102	;# 
 10834   000067                     PMD7            equ	103	;# 
 10835   000068                     PMD8            equ	104	;# 
 10836   00006A                     MD1CON0         equ	106	;# 
 10837   00006B                     MD1CON1         equ	107	;# 
 10838   00006C                     MD1SRC          equ	108	;# 
 10839   00006D                     MD1CARL         equ	109	;# 
 10840   00006E                     MD1CARH         equ	110	;# 
 10841   00006F                     CMOUT           equ	111	;# 
 10842   000070                     CM1CON0         equ	112	;# 
 10843   000071                     CM1CON1         equ	113	;# 
 10844   000072                     CM1NCH          equ	114	;# 
 10845   000073                     CM1PCH          equ	115	;# 
 10846   000074                     CM2CON0         equ	116	;# 
 10847   000075                     CM2CON1         equ	117	;# 
 10848   000076                     CM2NCH          equ	118	;# 
 10849   000077                     CM2PCH          equ	119	;# 
 10850   000078                     WDTCON0         equ	120	;# 
 10851   000079                     WDTCON1         equ	121	;# 
 10852   00007A                     WDTPSL          equ	122	;# 
 10853   00007B                     WDTPSH          equ	123	;# 
 10854   00007C                     WDTTMR          equ	124	;# 
 10855   00007D                     DAC1DAT         equ	125	;# 
 10856   00007D                     DAC1DATL        equ	125	;# 
 10857   00007F                     DAC1CON         equ	127	;# 
 10858   000080                     SPI1RXB         equ	128	;# 
 10859   000081                     SPI1TXB         equ	129	;# 
 10860   000082                     SPI1TCNT        equ	130	;# 
 10861   000082                     SPI1TCNTL       equ	130	;# 
 10862   000083                     SPI1TCNTH       equ	131	;# 
 10863   000084                     SPI1CON0        equ	132	;# 
 10864   000085                     SPI1CON1        equ	133	;# 
 10865   000086                     SPI1CON2        equ	134	;# 
 10866   000087                     SPI1STATUS      equ	135	;# 
 10867   000088                     SPI1TWIDTH      equ	136	;# 
 10868   000089                     SPI1BAUD        equ	137	;# 
 10869   00008A                     SPI1INTF        equ	138	;# 
 10870   00008B                     SPI1INTE        equ	139	;# 
 10871   00008C                     SPI1CLK         equ	140	;# 
 10872   00008D                     SPI2RXB         equ	141	;# 
 10873   00008E                     SPI2TXB         equ	142	;# 
 10874   00008F                     SPI2TCNT        equ	143	;# 
 10875   00008F                     SPI2TCNTL       equ	143	;# 
 10876   000090                     SPI2TCNTH       equ	144	;# 
 10877   000091                     SPI2CON0        equ	145	;# 
 10878   000092                     SPI2CON1        equ	146	;# 
 10879   000093                     SPI2CON2        equ	147	;# 
 10880   000094                     SPI2STATUS      equ	148	;# 
 10881   000095                     SPI2TWIDTH      equ	149	;# 
 10882   000096                     SPI2BAUD        equ	150	;# 
 10883   000097                     SPI2INTF        equ	151	;# 
 10884   000098                     SPI2INTE        equ	152	;# 
 10885   000099                     SPI2CLK         equ	153	;# 
 10886   0000AC                     ACTCON          equ	172	;# 
 10887   0000AD                     OSCCON1         equ	173	;# 
 10888   0000AE                     OSCCON2         equ	174	;# 
 10889   0000AF                     OSCCON3         equ	175	;# 
 10890   0000B0                     OSCTUNE         equ	176	;# 
 10891   0000B1                     OSCFRQ          equ	177	;# 
 10892   0000B1                     OSCFREQ         equ	177	;# 
 10893   0000B2                     OSCSTAT         equ	178	;# 
 10894   0000B2                     OSCSTAT1        equ	178	;# 
 10895   0000B3                     OSCEN           equ	179	;# 
 10896   0000B4                     PRLOCK          equ	180	;# 
 10897   0000B5                     SCANPR          equ	181	;# 
 10898   0000B6                     DMA1PR          equ	182	;# 
 10899   0000B7                     DMA2PR          equ	183	;# 
 10900   0000B8                     DMA3PR          equ	184	;# 
 10901   0000B9                     DMA4PR          equ	185	;# 
 10902   0000BA                     DMA5PR          equ	186	;# 
 10903   0000BB                     DMA6PR          equ	187	;# 
 10904   0000BC                     DMA7PR          equ	188	;# 
 10905   0000BD                     DMA8PR          equ	189	;# 
 10906   0000BE                     MAINPR          equ	190	;# 
 10907   0000BF                     ISRPR           equ	191	;# 
 10908   0000D4                     CLCDATA         equ	212	;# 
 10909   0000D5                     CLCSELECT       equ	213	;# 
 10910   0000D6                     CLCnCON         equ	214	;# 
 10911   0000D7                     CLCnPOL         equ	215	;# 
 10912   0000D8                     CLCnSEL0        equ	216	;# 
 10913   0000D9                     CLCnSEL1        equ	217	;# 
 10914   0000DA                     CLCnSEL2        equ	218	;# 
 10915   0000DB                     CLCnSEL3        equ	219	;# 
 10916   0000DC                     CLCnGLS0        equ	220	;# 
 10917   0000DD                     CLCnGLS1        equ	221	;# 
 10918   0000DE                     CLCnGLS2        equ	222	;# 
 10919   0000DF                     CLCnGLS3        equ	223	;# 
 10920   0000E8                     DMASELECT       equ	232	;# 
 10921   0000E9                     DMAnBUF         equ	233	;# 
 10922   0000EA                     DMAnDCNT        equ	234	;# 
 10923   0000EA                     DMAnDCNTL       equ	234	;# 
 10924   0000EB                     DMAnDCNTH       equ	235	;# 
 10925   0000EC                     DMAnDPTR        equ	236	;# 
 10926   0000EC                     DMAnDPTRL       equ	236	;# 
 10927   0000ED                     DMAnDPTRH       equ	237	;# 
 10928   0000EE                     DMAnDSZ         equ	238	;# 
 10929   0000EE                     DMAnDSZL        equ	238	;# 
 10930   0000EF                     DMAnDSZH        equ	239	;# 
 10931   0000F0                     DMAnDSA         equ	240	;# 
 10932   0000F0                     DMAnDSAL        equ	240	;# 
 10933   0000F1                     DMAnDSAH        equ	241	;# 
 10934   0000F2                     DMAnSCNT        equ	242	;# 
 10935   0000F2                     DMAnSCNTL       equ	242	;# 
 10936   0000F3                     DMAnSCNTH       equ	243	;# 
 10937   0000F4                     DMAnSPTR        equ	244	;# 
 10938   0000F4                     DMAnSPTRL       equ	244	;# 
 10939   0000F5                     DMAnSPTRH       equ	245	;# 
 10940   0000F6                     DMAnSPTRU       equ	246	;# 
 10941   0000F7                     DMAnSSZ         equ	247	;# 
 10942   0000F7                     DMAnSSZL        equ	247	;# 
 10943   0000F8                     DMAnSSZH        equ	248	;# 
 10944   0000F9                     DMAnSSA         equ	249	;# 
 10945   0000F9                     DMAnSSAL        equ	249	;# 
 10946   0000FA                     DMAnSSAH        equ	250	;# 
 10947   0000FB                     DMAnSSAU        equ	251	;# 
 10948   0000FC                     DMAnCON0        equ	252	;# 
 10949   0000FD                     DMAnCON1        equ	253	;# 
 10950   0000FE                     DMAnAIRQ        equ	254	;# 
 10951   0000FF                     DMAnSIRQ        equ	255	;# 
 10952   000100                     C1CONL          equ	256	;# 
 10953   000101                     C1CONH          equ	257	;# 
 10954   000102                     C1CONU          equ	258	;# 
 10955   000103                     C1CONT          equ	259	;# 
 10956   000104                     C1NBTCFGL       equ	260	;# 
 10957   000105                     C1NBTCFGH       equ	261	;# 
 10958   000106                     C1NBTCFGU       equ	262	;# 
 10959   000107                     C1NBTCFGT       equ	263	;# 
 10960   000108                     C1DBTCFGL       equ	264	;# 
 10961   000109                     C1DBTCFGH       equ	265	;# 
 10962   00010A                     C1DBTCFGU       equ	266	;# 
 10963   00010B                     C1DBTCFGT       equ	267	;# 
 10964   00010C                     C1TDCL          equ	268	;# 
 10965   00010D                     C1TDCH          equ	269	;# 
 10966   00010E                     C1TDCU          equ	270	;# 
 10967   000110                     C1TBC           equ	272	;# 
 10968   000110                     C1TBCL          equ	272	;# 
 10969   000111                     C1TBCH          equ	273	;# 
 10970   000112                     C1TBCU          equ	274	;# 
 10971   000113                     C1TBCT          equ	275	;# 
 10972   000114                     C1TSCONL        equ	276	;# 
 10973   000115                     C1TSCONH        equ	277	;# 
 10974   000116                     C1TSCONU        equ	278	;# 
 10975   000117                     C1TSCONT        equ	279	;# 
 10976   000118                     C1VECL          equ	280	;# 
 10977   000119                     C1VECH          equ	281	;# 
 10978   00011A                     C1VECU          equ	282	;# 
 10979   00011B                     C1VECT          equ	283	;# 
 10980   00011C                     C1INTL          equ	284	;# 
 10981   00011D                     C1INTH          equ	285	;# 
 10982   00011E                     C1INTU          equ	286	;# 
 10983   00011F                     C1INTT          equ	287	;# 
 10984   000120                     C1RXIF          equ	288	;# 
 10985   000120                     C1RXIFL         equ	288	;# 
 10986   000121                     C1RXIFH         equ	289	;# 
 10987   000122                     C1RXIFU         equ	290	;# 
 10988   000123                     C1RXIFT         equ	291	;# 
 10989   000124                     C1TXIF          equ	292	;# 
 10990   000124                     C1TXIFL         equ	292	;# 
 10991   000125                     C1TXIFH         equ	293	;# 
 10992   000126                     C1TXIFU         equ	294	;# 
 10993   000127                     C1TXIFT         equ	295	;# 
 10994   000128                     C1RXOVIF        equ	296	;# 
 10995   000128                     C1RXOVIFL       equ	296	;# 
 10996   000129                     C1RXOVIFH       equ	297	;# 
 10997   00012A                     C1RXOVIFU       equ	298	;# 
 10998   00012B                     C1RXOVIFT       equ	299	;# 
 10999   00012C                     C1TXATIF        equ	300	;# 
 11000   00012C                     C1TXATIFL       equ	300	;# 
 11001   00012D                     C1TXATIFH       equ	301	;# 
 11002   00012E                     C1TXATIFU       equ	302	;# 
 11003   00012F                     C1TXATIFT       equ	303	;# 
 11004   000130                     C1TXREQ         equ	304	;# 
 11005   000130                     C1TXREQL        equ	304	;# 
 11006   000131                     C1TXREQH        equ	305	;# 
 11007   000132                     C1TXREQU        equ	306	;# 
 11008   000133                     C1TXREQT        equ	307	;# 
 11009   000134                     C1TRECL         equ	308	;# 
 11010   000135                     C1TRECH         equ	309	;# 
 11011   000136                     C1TRECU         equ	310	;# 
 11012   000137                     C1TRECT         equ	311	;# 
 11013   000138                     C1BDIAG0L       equ	312	;# 
 11014   000139                     C1BDIAG0H       equ	313	;# 
 11015   00013C                     C1BDIAG1L       equ	316	;# 
 11016   00013D                     C1BDIAG1H       equ	317	;# 
 11017   00013E                     C1BDIAG1U       equ	318	;# 
 11018   00013F                     C1BDIAG1T       equ	319	;# 
 11019   000140                     C1TEFCONL       equ	320	;# 
 11020   000141                     C1TEFCONH       equ	321	;# 
 11021   000142                     C1TEFCONU       equ	322	;# 
 11022   000143                     C1TEFCONT       equ	323	;# 
 11023   000144                     C1TEFSTAL       equ	324	;# 
 11024   000145                     C1TEFSTAH       equ	325	;# 
 11025   000146                     C1TEFSTAU       equ	326	;# 
 11026   000147                     C1TEFSTAT       equ	327	;# 
 11027   000148                     C1TEFUA         equ	328	;# 
 11028   000148                     C1TEFUAL        equ	328	;# 
 11029   000149                     C1TEFUAH        equ	329	;# 
 11030   00014A                     C1TEFUAU        equ	330	;# 
 11031   00014B                     C1TEFUAT        equ	331	;# 
 11032   00014C                     C1FIFOBA        equ	332	;# 
 11033   00014C                     C1FIFOBAL       equ	332	;# 
 11034   00014D                     C1FIFOBAH       equ	333	;# 
 11035   00014E                     C1FIFOBAU       equ	334	;# 
 11036   00014F                     C1FIFOBAT       equ	335	;# 
 11037   000150                     C1TXQCONL       equ	336	;# 
 11038   000151                     C1TXQCONH       equ	337	;# 
 11039   000152                     C1TXQCONU       equ	338	;# 
 11040   000153                     C1TXQCONT       equ	339	;# 
 11041   000154                     C1TXQSTAL       equ	340	;# 
 11042   000155                     C1TXQSTAH       equ	341	;# 
 11043   000156                     C1TXQSTAU       equ	342	;# 
 11044   000157                     C1TXQSTAT       equ	343	;# 
 11045   000158                     C1TXQUA         equ	344	;# 
 11046   000158                     C1TXQUAL        equ	344	;# 
 11047   000159                     C1TXQUAH        equ	345	;# 
 11048   00015A                     C1TXQUAU        equ	346	;# 
 11049   00015B                     C1TXQUAT        equ	347	;# 
 11050   00015C                     C1FIFOCON1      equ	348	;# 
 11051   00015C                     C1FIFOCON1L     equ	348	;# 
 11052   00015D                     C1FIFOCON1H     equ	349	;# 
 11053   00015E                     C1FIFOCON1U     equ	350	;# 
 11054   00015F                     C1FIFOCON1T     equ	351	;# 
 11055   000160                     C1FIFOSTA1      equ	352	;# 
 11056   000160                     C1FIFOSTA1L     equ	352	;# 
 11057   000161                     C1FIFOSTA1H     equ	353	;# 
 11058   000162                     C1FIFOSTA1U     equ	354	;# 
 11059   000163                     C1FIFOSTA1T     equ	355	;# 
 11060   000164                     C1FIFOUA1       equ	356	;# 
 11061   000164                     C1FIFOUA1L      equ	356	;# 
 11062   000165                     C1FIFOUA1H      equ	357	;# 
 11063   000166                     C1FIFOUA1U      equ	358	;# 
 11064   000167                     C1FIFOUA1T      equ	359	;# 
 11065   000168                     C1FIFOCON2      equ	360	;# 
 11066   000168                     C1FIFOCON2L     equ	360	;# 
 11067   000169                     C1FIFOCON2H     equ	361	;# 
 11068   00016A                     C1FIFOCON2U     equ	362	;# 
 11069   00016B                     C1FIFOCON2T     equ	363	;# 
 11070   00016C                     C1FIFOSTA2      equ	364	;# 
 11071   00016C                     C1FIFOSTA2L     equ	364	;# 
 11072   00016D                     C1FIFOSTA2H     equ	365	;# 
 11073   00016E                     C1FIFOSTA2U     equ	366	;# 
 11074   00016F                     C1FIFOSTA2T     equ	367	;# 
 11075   000170                     C1FIFOUA2       equ	368	;# 
 11076   000170                     C1FIFOUA2L      equ	368	;# 
 11077   000171                     C1FIFOUA2H      equ	369	;# 
 11078   000172                     C1FIFOUA2U      equ	370	;# 
 11079   000173                     C1FIFOUA2T      equ	371	;# 
 11080   000174                     C1FIFOCON3      equ	372	;# 
 11081   000174                     C1FIFOCON3L     equ	372	;# 
 11082   000175                     C1FIFOCON3H     equ	373	;# 
 11083   000176                     C1FIFOCON3U     equ	374	;# 
 11084   000177                     C1FIFOCON3T     equ	375	;# 
 11085   000178                     C1FIFOSTA3      equ	376	;# 
 11086   000178                     C1FIFOSTA3L     equ	376	;# 
 11087   000179                     C1FIFOSTA3H     equ	377	;# 
 11088   00017A                     C1FIFOSTA3U     equ	378	;# 
 11089   00017B                     C1FIFOSTA3T     equ	379	;# 
 11090   00017C                     C1FIFOUA3       equ	380	;# 
 11091   00017C                     C1FIFOUA3L      equ	380	;# 
 11092   00017D                     C1FIFOUA3H      equ	381	;# 
 11093   00017E                     C1FIFOUA3U      equ	382	;# 
 11094   00017F                     C1FIFOUA3T      equ	383	;# 
 11095   000180                     C1FLTCON0L      equ	384	;# 
 11096   000181                     C1FLTCON0H      equ	385	;# 
 11097   000182                     C1FLTCON0U      equ	386	;# 
 11098   000183                     C1FLTCON0T      equ	387	;# 
 11099   000184                     C1FLTCON1L      equ	388	;# 
 11100   000185                     C1FLTCON1H      equ	389	;# 
 11101   000186                     C1FLTCON1U      equ	390	;# 
 11102   000187                     C1FLTCON1T      equ	391	;# 
 11103   000188                     C1FLTCON2L      equ	392	;# 
 11104   000189                     C1FLTCON2H      equ	393	;# 
 11105   00018A                     C1FLTCON2U      equ	394	;# 
 11106   00018B                     C1FLTCON2T      equ	395	;# 
 11107   00018C                     C1FLTOBJ0       equ	396	;# 
 11108   00018C                     C1FLTOBJ0L      equ	396	;# 
 11109   00018D                     C1FLTOBJ0H      equ	397	;# 
 11110   00018E                     C1FLTOBJ0U      equ	398	;# 
 11111   00018F                     C1FLTOBJ0T      equ	399	;# 
 11112   000190                     C1MASK0         equ	400	;# 
 11113   000190                     C1MASK0L        equ	400	;# 
 11114   000191                     C1MASK0H        equ	401	;# 
 11115   000192                     C1MASK0U        equ	402	;# 
 11116   000193                     C1MASK0T        equ	403	;# 
 11117   000194                     C1FLTOBJ1       equ	404	;# 
 11118   000194                     C1FLTOBJ1L      equ	404	;# 
 11119   000195                     C1FLTOBJ1H      equ	405	;# 
 11120   000196                     C1FLTOBJ1U      equ	406	;# 
 11121   000197                     C1FLTOBJ1T      equ	407	;# 
 11122   000198                     C1MASK1         equ	408	;# 
 11123   000198                     C1MASK1L        equ	408	;# 
 11124   000199                     C1MASK1H        equ	409	;# 
 11125   00019A                     C1MASK1U        equ	410	;# 
 11126   00019B                     C1MASK1T        equ	411	;# 
 11127   00019C                     C1FLTOBJ2       equ	412	;# 
 11128   00019C                     C1FLTOBJ2L      equ	412	;# 
 11129   00019D                     C1FLTOBJ2H      equ	413	;# 
 11130   00019E                     C1FLTOBJ2U      equ	414	;# 
 11131   00019F                     C1FLTOBJ2T      equ	415	;# 
 11132   0001A0                     C1MASK2         equ	416	;# 
 11133   0001A0                     C1MASK2L        equ	416	;# 
 11134   0001A1                     C1MASK2H        equ	417	;# 
 11135   0001A2                     C1MASK2U        equ	418	;# 
 11136   0001A3                     C1MASK2T        equ	419	;# 
 11137   0001A4                     C1FLTOBJ3       equ	420	;# 
 11138   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11139   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11140   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11141   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11142   0001A8                     C1MASK3         equ	424	;# 
 11143   0001A8                     C1MASK3L        equ	424	;# 
 11144   0001A9                     C1MASK3H        equ	425	;# 
 11145   0001AA                     C1MASK3U        equ	426	;# 
 11146   0001AB                     C1MASK3T        equ	427	;# 
 11147   0001AC                     C1FLTOBJ4       equ	428	;# 
 11148   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11149   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11150   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11151   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11152   0001B0                     C1MASK4         equ	432	;# 
 11153   0001B0                     C1MASK4L        equ	432	;# 
 11154   0001B1                     C1MASK4H        equ	433	;# 
 11155   0001B2                     C1MASK4U        equ	434	;# 
 11156   0001B3                     C1MASK4T        equ	435	;# 
 11157   0001B4                     C1FLTOBJ5       equ	436	;# 
 11158   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11159   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11160   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11161   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11162   0001B8                     C1MASK5         equ	440	;# 
 11163   0001B8                     C1MASK5L        equ	440	;# 
 11164   0001B9                     C1MASK5H        equ	441	;# 
 11165   0001BA                     C1MASK5U        equ	442	;# 
 11166   0001BB                     C1MASK5T        equ	443	;# 
 11167   0001BC                     C1FLTOBJ6       equ	444	;# 
 11168   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11169   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11170   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11171   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11172   0001C0                     C1MASK6         equ	448	;# 
 11173   0001C0                     C1MASK6L        equ	448	;# 
 11174   0001C1                     C1MASK6H        equ	449	;# 
 11175   0001C2                     C1MASK6U        equ	450	;# 
 11176   0001C3                     C1MASK6T        equ	451	;# 
 11177   0001C4                     C1FLTOBJ7       equ	452	;# 
 11178   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11179   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11180   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11181   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11182   0001C8                     C1MASK7         equ	456	;# 
 11183   0001C8                     C1MASK7L        equ	456	;# 
 11184   0001C9                     C1MASK7H        equ	457	;# 
 11185   0001CA                     C1MASK7U        equ	458	;# 
 11186   0001CB                     C1MASK7T        equ	459	;# 
 11187   0001CC                     C1FLTOBJ8       equ	460	;# 
 11188   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11189   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11190   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11191   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11192   0001D0                     C1MASK8         equ	464	;# 
 11193   0001D0                     C1MASK8L        equ	464	;# 
 11194   0001D1                     C1MASK8H        equ	465	;# 
 11195   0001D2                     C1MASK8U        equ	466	;# 
 11196   0001D3                     C1MASK8T        equ	467	;# 
 11197   0001D4                     C1FLTOBJ9       equ	468	;# 
 11198   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11199   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11200   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11201   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11202   0001D8                     C1MASK9         equ	472	;# 
 11203   0001D8                     C1MASK9L        equ	472	;# 
 11204   0001D9                     C1MASK9H        equ	473	;# 
 11205   0001DA                     C1MASK9U        equ	474	;# 
 11206   0001DB                     C1MASK9T        equ	475	;# 
 11207   0001DC                     C1FLTOBJ10      equ	476	;# 
 11208   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11209   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11210   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11211   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11212   0001E0                     C1MASK10        equ	480	;# 
 11213   0001E0                     C1MASK10L       equ	480	;# 
 11214   0001E1                     C1MASK10H       equ	481	;# 
 11215   0001E2                     C1MASK10U       equ	482	;# 
 11216   0001E3                     C1MASK10T       equ	483	;# 
 11217   0001E4                     C1FLTOBJ11      equ	484	;# 
 11218   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11219   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11220   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11221   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11222   0001E8                     C1MASK11        equ	488	;# 
 11223   0001E8                     C1MASK11L       equ	488	;# 
 11224   0001E9                     C1MASK11H       equ	489	;# 
 11225   0001EA                     C1MASK11U       equ	490	;# 
 11226   0001EB                     C1MASK11T       equ	491	;# 
 11227   000200                     PPSLOCK         equ	512	;# 
 11228   000201                     RA0PPS          equ	513	;# 
 11229   000202                     RA1PPS          equ	514	;# 
 11230   000203                     RA2PPS          equ	515	;# 
 11231   000204                     RA3PPS          equ	516	;# 
 11232   000205                     RA4PPS          equ	517	;# 
 11233   000206                     RA5PPS          equ	518	;# 
 11234   000207                     RA6PPS          equ	519	;# 
 11235   000208                     RA7PPS          equ	520	;# 
 11236   000209                     RB0PPS          equ	521	;# 
 11237   00020A                     RB1PPS          equ	522	;# 
 11238   00020B                     RB2PPS          equ	523	;# 
 11239   00020C                     RB3PPS          equ	524	;# 
 11240   00020D                     RB4PPS          equ	525	;# 
 11241   00020E                     RB5PPS          equ	526	;# 
 11242   00020F                     RB6PPS          equ	527	;# 
 11243   000210                     RB7PPS          equ	528	;# 
 11244   000211                     RC0PPS          equ	529	;# 
 11245   000212                     RC1PPS          equ	530	;# 
 11246   000213                     RC2PPS          equ	531	;# 
 11247   000214                     RC3PPS          equ	532	;# 
 11248   000215                     RC4PPS          equ	533	;# 
 11249   000216                     RC5PPS          equ	534	;# 
 11250   000217                     RC6PPS          equ	535	;# 
 11251   000218                     RC7PPS          equ	536	;# 
 11252   00023D                     CANRXPPS        equ	573	;# 
 11253   00023E                     INT0PPS         equ	574	;# 
 11254   00023F                     INT1PPS         equ	575	;# 
 11255   000240                     INT2PPS         equ	576	;# 
 11256   000241                     T0CKIPPS        equ	577	;# 
 11257   000242                     T1CKIPPS        equ	578	;# 
 11258   000243                     T1GPPS          equ	579	;# 
 11259   000244                     T3CKIPPS        equ	580	;# 
 11260   000245                     T3GPPS          equ	581	;# 
 11261   000246                     T5CKIPPS        equ	582	;# 
 11262   000247                     T5GPPS          equ	583	;# 
 11263   000248                     T2INPPS         equ	584	;# 
 11264   000249                     T4INPPS         equ	585	;# 
 11265   00024A                     T6INPPS         equ	586	;# 
 11266   00024B                     TUIN0PPS        equ	587	;# 
 11267   00024C                     TUIN1PPS        equ	588	;# 
 11268   00024F                     CCP1PPS         equ	591	;# 
 11269   000250                     CCP2PPS         equ	592	;# 
 11270   000251                     CCP3PPS         equ	593	;# 
 11271   000253                     PWM1ERSPPS      equ	595	;# 
 11272   000254                     PWM2ERSPPS      equ	596	;# 
 11273   000255                     PWM3ERSPPS      equ	597	;# 
 11274   000256                     PWM4ERSPPS      equ	598	;# 
 11275   000257                     PWMIN0PPS       equ	599	;# 
 11276   000258                     PWMIN1PPS       equ	600	;# 
 11277   000259                     SMT1WINPPS      equ	601	;# 
 11278   00025A                     SMT1SIGPPS      equ	602	;# 
 11279   00025B                     CWG1PPS         equ	603	;# 
 11280   00025B                     CWG1INPPS       equ	603	;# 
 11281   00025C                     CWG2PPS         equ	604	;# 
 11282   00025C                     CWG2INPPS       equ	604	;# 
 11283   00025D                     CWG3PPS         equ	605	;# 
 11284   00025D                     CWG3INPPS       equ	605	;# 
 11285   00025E                     MD1CARLPPS      equ	606	;# 
 11286   00025E                     MDCARLPPS       equ	606	;# 
 11287   00025F                     MD1CARHPPS      equ	607	;# 
 11288   00025F                     MDCARHPPS       equ	607	;# 
 11289   000260                     MD1SRCPPS       equ	608	;# 
 11290   000260                     MDSRCPPS        equ	608	;# 
 11291   000261                     CLCIN0PPS       equ	609	;# 
 11292   000262                     CLCIN1PPS       equ	610	;# 
 11293   000263                     CLCIN2PPS       equ	611	;# 
 11294   000264                     CLCIN3PPS       equ	612	;# 
 11295   000265                     CLCIN4PPS       equ	613	;# 
 11296   000266                     CLCIN5PPS       equ	614	;# 
 11297   000267                     CLCIN6PPS       equ	615	;# 
 11298   000268                     CLCIN7PPS       equ	616	;# 
 11299   000269                     ADACTPPS        equ	617	;# 
 11300   00026A                     SPI1SCKPPS      equ	618	;# 
 11301   00026B                     SPI1SDIPPS      equ	619	;# 
 11302   00026C                     SPI1SSPPS       equ	620	;# 
 11303   00026D                     SPI2SCKPPS      equ	621	;# 
 11304   00026E                     SPI2SDIPPS      equ	622	;# 
 11305   00026F                     SPI2SSPPS       equ	623	;# 
 11306   000270                     I2C1SDAPPS      equ	624	;# 
 11307   000271                     I2C1SCLPPS      equ	625	;# 
 11308   000272                     U1RXPPS         equ	626	;# 
 11309   000273                     U1CTSPPS        equ	627	;# 
 11310   000274                     U2RXPPS         equ	628	;# 
 11311   000275                     U2CTSPPS        equ	629	;# 
 11312   000276                     U3RXPPS         equ	630	;# 
 11313   000277                     U3CTSPPS        equ	631	;# 
 11314   000278                     U4RXPPS         equ	632	;# 
 11315   000279                     U4CTSPPS        equ	633	;# 
 11316   00027A                     U5RXPPS         equ	634	;# 
 11317   00027B                     U5CTSPPS        equ	635	;# 
 11318   000286                     RC4I2C          equ	646	;# 
 11319   000287                     RC3I2C          equ	647	;# 
 11320   000288                     RB2I2C          equ	648	;# 
 11321   000289                     RB1I2C          equ	649	;# 
 11322   00028A                     I2C1RXB         equ	650	;# 
 11323   00028B                     I2C1TXB         equ	651	;# 
 11324   00028C                     I2C1CNTL        equ	652	;# 
 11325   00028D                     I2C1CNTH        equ	653	;# 
 11326   00028E                     I2C1ADB0        equ	654	;# 
 11327   00028F                     I2C1ADB1        equ	655	;# 
 11328   000290                     I2C1ADR0        equ	656	;# 
 11329   000291                     I2C1ADR1        equ	657	;# 
 11330   000292                     I2C1ADR2        equ	658	;# 
 11331   000293                     I2C1ADR3        equ	659	;# 
 11332   000294                     I2C1CON0        equ	660	;# 
 11333   000295                     I2C1CON1        equ	661	;# 
 11334   000296                     I2C1CON2        equ	662	;# 
 11335   000297                     I2C1ERR         equ	663	;# 
 11336   000298                     I2C1STAT0       equ	664	;# 
 11337   000299                     I2C1STAT1       equ	665	;# 
 11338   00029A                     I2C1PIR         equ	666	;# 
 11339   00029B                     I2C1PIE         equ	667	;# 
 11340   00029C                     I2C1BTO         equ	668	;# 
 11341   00029D                     I2C1BAUD        equ	669	;# 
 11342   00029E                     I2C1CLK         equ	670	;# 
 11343   00029F                     I2C1BTOC        equ	671	;# 
 11344   0002A1                     U1RXB           equ	673	;# 
 11345   0002A1                     U1RXBL          equ	673	;# 
 11346   0002A2                     U1RXCHK         equ	674	;# 
 11347   0002A3                     U1TXB           equ	675	;# 
 11348   0002A3                     U1TXBL          equ	675	;# 
 11349   0002A4                     U1TXCHK         equ	676	;# 
 11350   0002A5                     U1P1            equ	677	;# 
 11351   0002A5                     U1P1L           equ	677	;# 
 11352   0002A6                     U1P1H           equ	678	;# 
 11353   0002A7                     U1P2            equ	679	;# 
 11354   0002A7                     U1P2L           equ	679	;# 
 11355   0002A8                     U1P2H           equ	680	;# 
 11356   0002A9                     U1P3            equ	681	;# 
 11357   0002A9                     U1P3L           equ	681	;# 
 11358   0002AA                     U1P3H           equ	682	;# 
 11359   0002AB                     U1CON0          equ	683	;# 
 11360   0002AC                     U1CON1          equ	684	;# 
 11361   0002AD                     U1CON2          equ	685	;# 
 11362   0002AE                     U1BRG           equ	686	;# 
 11363   0002AE                     U1BRGL          equ	686	;# 
 11364   0002AF                     U1BRGH          equ	687	;# 
 11365   0002B0                     U1FIFO          equ	688	;# 
 11366   0002B1                     U1UIR           equ	689	;# 
 11367   0002B2                     U1ERRIR         equ	690	;# 
 11368   0002B3                     U1ERRIE         equ	691	;# 
 11369   0002B4                     U2RXB           equ	692	;# 
 11370   0002B4                     U2RXBL          equ	692	;# 
 11371   0002B5                     U2RXCHK         equ	693	;# 
 11372   0002B6                     U2TXB           equ	694	;# 
 11373   0002B6                     U2TXBL          equ	694	;# 
 11374   0002B7                     U2TXCHK         equ	695	;# 
 11375   0002B8                     U2P1            equ	696	;# 
 11376   0002B8                     U2P1L           equ	696	;# 
 11377   0002B9                     U2P1H           equ	697	;# 
 11378   0002BA                     U2P2            equ	698	;# 
 11379   0002BA                     U2P2L           equ	698	;# 
 11380   0002BB                     U2P2H           equ	699	;# 
 11381   0002BC                     U2P3            equ	700	;# 
 11382   0002BC                     U2P3L           equ	700	;# 
 11383   0002BD                     U2P3H           equ	701	;# 
 11384   0002BE                     U2CON0          equ	702	;# 
 11385   0002BF                     U2CON1          equ	703	;# 
 11386   0002C0                     U2CON2          equ	704	;# 
 11387   0002C1                     U2BRG           equ	705	;# 
 11388   0002C1                     U2BRGL          equ	705	;# 
 11389   0002C2                     U2BRGH          equ	706	;# 
 11390   0002C3                     U2FIFO          equ	707	;# 
 11391   0002C4                     U2UIR           equ	708	;# 
 11392   0002C5                     U2ERRIR         equ	709	;# 
 11393   0002C6                     U2ERRIE         equ	710	;# 
 11394   0002C7                     U3RXB           equ	711	;# 
 11395   0002C7                     U3RXBL          equ	711	;# 
 11396   0002C9                     U3TXB           equ	713	;# 
 11397   0002C9                     U3TXBL          equ	713	;# 
 11398   0002CB                     U3P1            equ	715	;# 
 11399   0002CB                     U3P1L           equ	715	;# 
 11400   0002CD                     U3P2            equ	717	;# 
 11401   0002CD                     U3P2L           equ	717	;# 
 11402   0002CF                     U3P3            equ	719	;# 
 11403   0002CF                     U3P3L           equ	719	;# 
 11404   0002D1                     U3CON0          equ	721	;# 
 11405   0002D2                     U3CON1          equ	722	;# 
 11406   0002D3                     U3CON2          equ	723	;# 
 11407   0002D4                     U3BRG           equ	724	;# 
 11408   0002D4                     U3BRGL          equ	724	;# 
 11409   0002D5                     U3BRGH          equ	725	;# 
 11410   0002D6                     U3FIFO          equ	726	;# 
 11411   0002D7                     U3UIR           equ	727	;# 
 11412   0002D8                     U3ERRIR         equ	728	;# 
 11413   0002D9                     U3ERRIE         equ	729	;# 
 11414   0002DA                     U4RXB           equ	730	;# 
 11415   0002DA                     U4RXBL          equ	730	;# 
 11416   0002DC                     U4TXB           equ	732	;# 
 11417   0002DC                     U4TXBL          equ	732	;# 
 11418   0002DE                     U4P1            equ	734	;# 
 11419   0002DE                     U4P1L           equ	734	;# 
 11420   0002E0                     U4P2            equ	736	;# 
 11421   0002E0                     U4P2L           equ	736	;# 
 11422   0002E2                     U4P3            equ	738	;# 
 11423   0002E2                     U4P3L           equ	738	;# 
 11424   0002E4                     U4CON0          equ	740	;# 
 11425   0002E5                     U4CON1          equ	741	;# 
 11426   0002E6                     U4CON2          equ	742	;# 
 11427   0002E7                     U4BRG           equ	743	;# 
 11428   0002E7                     U4BRGL          equ	743	;# 
 11429   0002E8                     U4BRGH          equ	744	;# 
 11430   0002E9                     U4FIFO          equ	745	;# 
 11431   0002EA                     U4UIR           equ	746	;# 
 11432   0002EB                     U4ERRIR         equ	747	;# 
 11433   0002EC                     U4ERRIE         equ	748	;# 
 11434   0002ED                     U5RXB           equ	749	;# 
 11435   0002ED                     U5RXBL          equ	749	;# 
 11436   0002EF                     U5TXB           equ	751	;# 
 11437   0002EF                     U5TXBL          equ	751	;# 
 11438   0002F1                     U5P1            equ	753	;# 
 11439   0002F1                     U5P1L           equ	753	;# 
 11440   0002F3                     U5P2            equ	755	;# 
 11441   0002F3                     U5P2L           equ	755	;# 
 11442   0002F5                     U5P3            equ	757	;# 
 11443   0002F5                     U5P3L           equ	757	;# 
 11444   0002F7                     U5CON0          equ	759	;# 
 11445   0002F8                     U5CON1          equ	760	;# 
 11446   0002F9                     U5CON2          equ	761	;# 
 11447   0002FA                     U5BRG           equ	762	;# 
 11448   0002FA                     U5BRGL          equ	762	;# 
 11449   0002FB                     U5BRGH          equ	763	;# 
 11450   0002FC                     U5FIFO          equ	764	;# 
 11451   0002FD                     U5UIR           equ	765	;# 
 11452   0002FE                     U5ERRIR         equ	766	;# 
 11453   0002FF                     U5ERRIE         equ	767	;# 
 11454   000300                     SMT1TMR         equ	768	;# 
 11455   000300                     SMT1TMRL        equ	768	;# 
 11456   000301                     SMT1TMRH        equ	769	;# 
 11457   000302                     SMT1TMRU        equ	770	;# 
 11458   000303                     SMT1CPR         equ	771	;# 
 11459   000303                     SMT1CPRL        equ	771	;# 
 11460   000304                     SMT1CPRH        equ	772	;# 
 11461   000305                     SMT1CPRU        equ	773	;# 
 11462   000306                     SMT1CPW         equ	774	;# 
 11463   000306                     SMT1CPWL        equ	774	;# 
 11464   000307                     SMT1CPWH        equ	775	;# 
 11465   000308                     SMT1CPWU        equ	776	;# 
 11466   000309                     SMT1PR          equ	777	;# 
 11467   000309                     SMT1PRL         equ	777	;# 
 11468   00030A                     SMT1PRH         equ	778	;# 
 11469   00030B                     SMT1PRU         equ	779	;# 
 11470   00030C                     SMT1CON0        equ	780	;# 
 11471   00030D                     SMT1CON1        equ	781	;# 
 11472   00030E                     SMT1STAT        equ	782	;# 
 11473   00030F                     SMT1CLK         equ	783	;# 
 11474   000310                     SMT1SIG         equ	784	;# 
 11475   000311                     SMT1WIN         equ	785	;# 
 11476   000318                     TMR0L           equ	792	;# 
 11477   000318                     TMR0            equ	792	;# 
 11478   000319                     TMR0H           equ	793	;# 
 11479   000319                     PR0             equ	793	;# 
 11480   00031A                     T0CON0          equ	794	;# 
 11481   00031B                     T0CON1          equ	795	;# 
 11482   00031C                     TMR1            equ	796	;# 
 11483   00031C                     TMR1L           equ	796	;# 
 11484   00031D                     TMR1H           equ	797	;# 
 11485   00031E                     T1CON           equ	798	;# 
 11486   00031E                     TMR1CON         equ	798	;# 
 11487   00031F                     T1GCON          equ	799	;# 
 11488   00031F                     TMR1GCON        equ	799	;# 
 11489   000320                     T1GATE          equ	800	;# 
 11490   000320                     TMR1GATE        equ	800	;# 
 11491   000321                     T1CLK           equ	801	;# 
 11492   000321                     TMR1CLK         equ	801	;# 
 11493   000321                     PR1             equ	801	;# 
 11494   000322                     T2TMR           equ	802	;# 
 11495   000322                     TMR2            equ	802	;# 
 11496   000323                     T2PR            equ	803	;# 
 11497   000323                     PR2             equ	803	;# 
 11498   000324                     T2CON           equ	804	;# 
 11499   000325                     T2HLT           equ	805	;# 
 11500   000326                     T2CLKCON        equ	806	;# 
 11501   000326                     T2CLK           equ	806	;# 
 11502   000327                     T2RST           equ	807	;# 
 11503   000328                     TMR3            equ	808	;# 
 11504   000328                     TMR3L           equ	808	;# 
 11505   000329                     TMR3H           equ	809	;# 
 11506   00032A                     T3CON           equ	810	;# 
 11507   00032A                     TMR3CON         equ	810	;# 
 11508   00032B                     T3GCON          equ	811	;# 
 11509   00032B                     TMR3GCON        equ	811	;# 
 11510   00032C                     T3GATE          equ	812	;# 
 11511   00032C                     TMR3GATE        equ	812	;# 
 11512   00032D                     T3CLK           equ	813	;# 
 11513   00032D                     TMR3CLK         equ	813	;# 
 11514   00032D                     PR3             equ	813	;# 
 11515   00032E                     T4TMR           equ	814	;# 
 11516   00032E                     TMR4            equ	814	;# 
 11517   00032F                     T4PR            equ	815	;# 
 11518   00032F                     PR4             equ	815	;# 
 11519   000330                     T4CON           equ	816	;# 
 11520   000331                     T4HLT           equ	817	;# 
 11521   000332                     T4CLKCON        equ	818	;# 
 11522   000332                     T4CLK           equ	818	;# 
 11523   000333                     T4RST           equ	819	;# 
 11524   000334                     TMR5            equ	820	;# 
 11525   000334                     TMR5L           equ	820	;# 
 11526   000335                     TMR5H           equ	821	;# 
 11527   000336                     T5CON           equ	822	;# 
 11528   000336                     TMR5CON         equ	822	;# 
 11529   000337                     T5GCON          equ	823	;# 
 11530   000337                     TMR5GCON        equ	823	;# 
 11531   000338                     T5GATE          equ	824	;# 
 11532   000338                     TMR5GATE        equ	824	;# 
 11533   000339                     T5CLK           equ	825	;# 
 11534   000339                     TMR5CLK         equ	825	;# 
 11535   000339                     PR5             equ	825	;# 
 11536   00033A                     T6TMR           equ	826	;# 
 11537   00033A                     TMR6            equ	826	;# 
 11538   00033B                     T6PR            equ	827	;# 
 11539   00033B                     PR6             equ	827	;# 
 11540   00033C                     T6CON           equ	828	;# 
 11541   00033D                     T6HLT           equ	829	;# 
 11542   00033E                     T6CLKCON        equ	830	;# 
 11543   00033E                     T6CLK           equ	830	;# 
 11544   00033F                     T6RST           equ	831	;# 
 11545   000340                     CCPR1           equ	832	;# 
 11546   000340                     CCPR1L          equ	832	;# 
 11547   000341                     CCPR1H          equ	833	;# 
 11548   000342                     CCP1CON         equ	834	;# 
 11549   000343                     CCP1CAP         equ	835	;# 
 11550   000344                     CCPR2           equ	836	;# 
 11551   000344                     CCPR2L          equ	836	;# 
 11552   000345                     CCPR2H          equ	837	;# 
 11553   000346                     CCP2CON         equ	838	;# 
 11554   000347                     CCP2CAP         equ	839	;# 
 11555   000348                     CCPR3           equ	840	;# 
 11556   000348                     CCPR3L          equ	840	;# 
 11557   000349                     CCPR3H          equ	841	;# 
 11558   00034A                     CCP3CON         equ	842	;# 
 11559   00034B                     CCP3CAP         equ	843	;# 
 11560   00034C                     CCPTMRS0        equ	844	;# 
 11561   00034F                     CRCDATA         equ	847	;# 
 11562   00034F                     CRCDATAL        equ	847	;# 
 11563   000350                     CRCDATAH        equ	848	;# 
 11564   000351                     CRCDATAU        equ	849	;# 
 11565   000352                     CRCDATAT        equ	850	;# 
 11566   000353                     CRCOUT          equ	851	;# 
 11567   000353                     CRCSHFT         equ	851	;# 
 11568   000353                     CRCXOR          equ	851	;# 
 11569   000353                     CRCOUTL         equ	851	;# 
 11570   000353                     CRCSHFTL        equ	851	;# 
 11571   000353                     CRCSHIFTL       equ	851	;# 
 11572   000353                     CRCXORL         equ	851	;# 
 11573   000354                     CRCOUTH         equ	852	;# 
 11574   000354                     CRCSHFTH        equ	852	;# 
 11575   000354                     CRCSHIFTH       equ	852	;# 
 11576   000354                     CRCXORH         equ	852	;# 
 11577   000355                     CRCOUTU         equ	853	;# 
 11578   000355                     CRCSHFTU        equ	853	;# 
 11579   000355                     CRCSHIFTU       equ	853	;# 
 11580   000355                     CRCXORU         equ	853	;# 
 11581   000356                     CRCOUTT         equ	854	;# 
 11582   000356                     CRCSHFTT        equ	854	;# 
 11583   000356                     CRCSHIFTT       equ	854	;# 
 11584   000356                     CRCXORT         equ	854	;# 
 11585   000357                     CRCCON0         equ	855	;# 
 11586   000358                     CRCCON1         equ	856	;# 
 11587   000359                     CRCCON2         equ	857	;# 
 11588   00035A                     SCANLADR        equ	858	;# 
 11589   00035A                     SCANLADRL       equ	858	;# 
 11590   00035B                     SCANLADRH       equ	859	;# 
 11591   00035C                     SCANLADRU       equ	860	;# 
 11592   00035D                     SCANHADR        equ	861	;# 
 11593   00035D                     SCANHADRL       equ	861	;# 
 11594   00035E                     SCANHADRH       equ	862	;# 
 11595   00035F                     SCANHADRU       equ	863	;# 
 11596   000360                     SCANCON0        equ	864	;# 
 11597   000361                     SCANTRIG        equ	865	;# 
 11598   000362                     IPR0            equ	866	;# 
 11599   000363                     IPR1            equ	867	;# 
 11600   000364                     IPR2            equ	868	;# 
 11601   000365                     IPR3            equ	869	;# 
 11602   000366                     IPR4            equ	870	;# 
 11603   000367                     IPR5            equ	871	;# 
 11604   000368                     IPR6            equ	872	;# 
 11605   000369                     IPR7            equ	873	;# 
 11606   00036A                     IPR8            equ	874	;# 
 11607   00036B                     IPR9            equ	875	;# 
 11608   00036C                     IPR10           equ	876	;# 
 11609   00036D                     IPR11           equ	877	;# 
 11610   00036E                     IPR12           equ	878	;# 
 11611   00036F                     IPR13           equ	879	;# 
 11612   000370                     IPR14           equ	880	;# 
 11613   000371                     IPR15           equ	881	;# 
 11614   000373                     STATUS_CSHAD    equ	883	;# 
 11615   000374                     WREG_CSHAD      equ	884	;# 
 11616   000375                     BSR_CSHAD       equ	885	;# 
 11617   000376                     SHADCON         equ	886	;# 
 11618   000377                     STATUS_SHAD     equ	887	;# 
 11619   000378                     WREG_SHAD       equ	888	;# 
 11620   000379                     BSR_SHAD        equ	889	;# 
 11621   00037A                     PCLATH_SHAD     equ	890	;# 
 11622   00037B                     PCLATU_SHAD     equ	891	;# 
 11623   00037C                     FSR0SH          equ	892	;# 
 11624   00037C                     FSR0L_SHAD      equ	892	;# 
 11625   00037D                     FSR0H_SHAD      equ	893	;# 
 11626   00037E                     FSR1SH          equ	894	;# 
 11627   00037E                     FSR1L_SHAD      equ	894	;# 
 11628   00037F                     FSR1H_SHAD      equ	895	;# 
 11629   000380                     FSR2SH          equ	896	;# 
 11630   000380                     FSR2L_SHAD      equ	896	;# 
 11631   000381                     FSR2H_SHAD      equ	897	;# 
 11632   000382                     PRODSH          equ	898	;# 
 11633   000382                     PRODL_SHAD      equ	898	;# 
 11634   000383                     PRODH_SHAD      equ	899	;# 
 11635   000387                     TU16ACON0       equ	903	;# 
 11636   000388                     TU16ACON1       equ	904	;# 
 11637   000389                     TU16AHLT        equ	905	;# 
 11638   00038A                     TU16APS         equ	906	;# 
 11639   00038B                     TU16ATMR        equ	907	;# 
 11640   00038B                     TU16ACR         equ	907	;# 
 11641   00038B                     TU16ATMRL       equ	907	;# 
 11642   00038B                     TU16ACRL        equ	907	;# 
 11643   00038C                     TU16ATMRH       equ	908	;# 
 11644   00038C                     TU16ACRH        equ	908	;# 
 11645   00038D                     TU16APR         equ	909	;# 
 11646   00038D                     TU16APRL        equ	909	;# 
 11647   00038E                     TU16APRH        equ	910	;# 
 11648   00038F                     TU16ACLK        equ	911	;# 
 11649   000390                     TU16AERS        equ	912	;# 
 11650   000393                     TU16BCON0       equ	915	;# 
 11651   000394                     TU16BCON1       equ	916	;# 
 11652   000395                     TU16BHLT        equ	917	;# 
 11653   000396                     TU16BPS         equ	918	;# 
 11654   000397                     TU16BTMR        equ	919	;# 
 11655   000397                     TU16BCR         equ	919	;# 
 11656   000397                     TU16BTMRL       equ	919	;# 
 11657   000397                     TU16BCRL        equ	919	;# 
 11658   000398                     TU16BTMRH       equ	920	;# 
 11659   000398                     TU16BCRH        equ	920	;# 
 11660   000399                     TU16BPR         equ	921	;# 
 11661   000399                     TU16BPRL        equ	921	;# 
 11662   00039A                     TU16BPRH        equ	922	;# 
 11663   00039B                     TU16BCLK        equ	923	;# 
 11664   00039C                     TU16BERS        equ	924	;# 
 11665   0003BB                     TUCHAIN         equ	955	;# 
 11666   0003BC                     CWG1CLK         equ	956	;# 
 11667   0003BC                     CWG1CLKCON      equ	956	;# 
 11668   0003BD                     CWG1ISM         equ	957	;# 
 11669   0003BE                     CWG1DBR         equ	958	;# 
 11670   0003BF                     CWG1DBF         equ	959	;# 
 11671   0003C0                     CWG1CON0        equ	960	;# 
 11672   0003C1                     CWG1CON1        equ	961	;# 
 11673   0003C2                     CWG1AS0         equ	962	;# 
 11674   0003C3                     CWG1AS1         equ	963	;# 
 11675   0003C4                     CWG1STR         equ	964	;# 
 11676   0003C5                     CWG2CLK         equ	965	;# 
 11677   0003C5                     CWG2CLKCON      equ	965	;# 
 11678   0003C6                     CWG2ISM         equ	966	;# 
 11679   0003C7                     CWG2DBR         equ	967	;# 
 11680   0003C8                     CWG2DBF         equ	968	;# 
 11681   0003C9                     CWG2CON0        equ	969	;# 
 11682   0003CA                     CWG2CON1        equ	970	;# 
 11683   0003CB                     CWG2AS0         equ	971	;# 
 11684   0003CC                     CWG2AS1         equ	972	;# 
 11685   0003CD                     CWG2STR         equ	973	;# 
 11686   0003CE                     CWG3CLK         equ	974	;# 
 11687   0003CE                     CWG3CLKCON      equ	974	;# 
 11688   0003CF                     CWG3ISM         equ	975	;# 
 11689   0003D0                     CWG3DBR         equ	976	;# 
 11690   0003D1                     CWG3DBF         equ	977	;# 
 11691   0003D2                     CWG3CON0        equ	978	;# 
 11692   0003D3                     CWG3CON1        equ	979	;# 
 11693   0003D4                     CWG3AS0         equ	980	;# 
 11694   0003D5                     CWG3AS1         equ	981	;# 
 11695   0003D6                     CWG3STR         equ	982	;# 
 11696   0003D7                     FVRCON          equ	983	;# 
 11697   0003D8                     ADCPCON         equ	984	;# 
 11698   0003D8                     ADCP            equ	984	;# 
 11699   0003D9                     ADLTH           equ	985	;# 
 11700   0003D9                     ADLTHL          equ	985	;# 
 11701   0003DA                     ADLTHH          equ	986	;# 
 11702   0003DB                     ADUTH           equ	987	;# 
 11703   0003DB                     ADUTHL          equ	987	;# 
 11704   0003DC                     ADUTHH          equ	988	;# 
 11705   0003DD                     ADERR           equ	989	;# 
 11706   0003DD                     ADERRL          equ	989	;# 
 11707   0003DE                     ADERRH          equ	990	;# 
 11708   0003DF                     ADSTPT          equ	991	;# 
 11709   0003DF                     ADSTPTL         equ	991	;# 
 11710   0003E0                     ADSTPTH         equ	992	;# 
 11711   0003E1                     ADFLTR          equ	993	;# 
 11712   0003E1                     ADFLTRL         equ	993	;# 
 11713   0003E2                     ADFLTRH         equ	994	;# 
 11714   0003E3                     ADACC           equ	995	;# 
 11715   0003E3                     ADACCL          equ	995	;# 
 11716   0003E4                     ADACCH          equ	996	;# 
 11717   0003E5                     ADACCU          equ	997	;# 
 11718   0003E6                     ADCNT           equ	998	;# 
 11719   0003E7                     ADRPT           equ	999	;# 
 11720   0003E8                     ADPREV          equ	1000	;# 
 11721   0003E8                     ADPREVL         equ	1000	;# 
 11722   0003E9                     ADPREVH         equ	1001	;# 
 11723   0003EA                     ADRES           equ	1002	;# 
 11724   0003EA                     ADRESL          equ	1002	;# 
 11725   0003EB                     ADRESH          equ	1003	;# 
 11726   0003EC                     ADPCH           equ	1004	;# 
 11727   0003EE                     ADACQ           equ	1006	;# 
 11728   0003EE                     ADACQL          equ	1006	;# 
 11729   0003EF                     ADACQH          equ	1007	;# 
 11730   0003F0                     ADCAP           equ	1008	;# 
 11731   0003F1                     ADPRE           equ	1009	;# 
 11732   0003F1                     ADPREL          equ	1009	;# 
 11733   0003F2                     ADPREH          equ	1010	;# 
 11734   0003F3                     ADCON0          equ	1011	;# 
 11735   0003F4                     ADCON1          equ	1012	;# 
 11736   0003F5                     ADCON2          equ	1013	;# 
 11737   0003F6                     ADCON3          equ	1014	;# 
 11738   0003F7                     ADSTAT          equ	1015	;# 
 11739   0003F8                     ADREF           equ	1016	;# 
 11740   0003F9                     ADACT           equ	1017	;# 
 11741   0003FA                     ADCLK           equ	1018	;# 
 11742   0003FB                     ADCTX           equ	1019	;# 
 11743   0003FC                     ADCSEL1         equ	1020	;# 
 11744   0003FD                     ADCSEL2         equ	1021	;# 
 11745   0003FE                     ADCSEL3         equ	1022	;# 
 11746   0003FF                     ADCSEL4         equ	1023	;# 
 11747   000400                     ANSELA          equ	1024	;# 
 11748   000401                     WPUA            equ	1025	;# 
 11749   000402                     ODCONA          equ	1026	;# 
 11750   000403                     SLRCONA         equ	1027	;# 
 11751   000404                     INLVLA          equ	1028	;# 
 11752   000405                     IOCAP           equ	1029	;# 
 11753   000406                     IOCAN           equ	1030	;# 
 11754   000407                     IOCAF           equ	1031	;# 
 11755   000408                     ANSELB          equ	1032	;# 
 11756   000409                     WPUB            equ	1033	;# 
 11757   00040A                     ODCONB          equ	1034	;# 
 11758   00040B                     SLRCONB         equ	1035	;# 
 11759   00040C                     INLVLB          equ	1036	;# 
 11760   00040D                     IOCBP           equ	1037	;# 
 11761   00040E                     IOCBN           equ	1038	;# 
 11762   00040F                     IOCBF           equ	1039	;# 
 11763   000410                     ANSELC          equ	1040	;# 
 11764   000411                     WPUC            equ	1041	;# 
 11765   000412                     ODCONC          equ	1042	;# 
 11766   000413                     SLRCONC         equ	1043	;# 
 11767   000414                     INLVLC          equ	1044	;# 
 11768   000415                     IOCCP           equ	1045	;# 
 11769   000416                     IOCCN           equ	1046	;# 
 11770   000417                     IOCCF           equ	1047	;# 
 11771   000421                     WPUE            equ	1057	;# 
 11772   000424                     INLVLE          equ	1060	;# 
 11773   000425                     IOCEP           equ	1061	;# 
 11774   000426                     IOCEN           equ	1062	;# 
 11775   000427                     IOCEF           equ	1063	;# 
 11776   000440                     NCO1ACC         equ	1088	;# 
 11777   000440                     NCO1ACCL        equ	1088	;# 
 11778   000441                     NCO1ACCH        equ	1089	;# 
 11779   000442                     NCO1ACCU        equ	1090	;# 
 11780   000443                     NCO1INC         equ	1091	;# 
 11781   000443                     NCO1INCL        equ	1091	;# 
 11782   000444                     NCO1INCH        equ	1092	;# 
 11783   000445                     NCO1INCU        equ	1093	;# 
 11784   000446                     NCO1CON         equ	1094	;# 
 11785   000447                     NCO1CLK         equ	1095	;# 
 11786   000448                     NCO2ACC         equ	1096	;# 
 11787   000448                     NCO2ACCL        equ	1096	;# 
 11788   000449                     NCO2ACCH        equ	1097	;# 
 11789   00044A                     NCO2ACCU        equ	1098	;# 
 11790   00044B                     NCO2INC         equ	1099	;# 
 11791   00044B                     NCO2INCL        equ	1099	;# 
 11792   00044C                     NCO2INCH        equ	1100	;# 
 11793   00044D                     NCO2INCU        equ	1101	;# 
 11794   00044E                     NCO2CON         equ	1102	;# 
 11795   00044F                     NCO2CLK         equ	1103	;# 
 11796   000450                     NCO3ACC         equ	1104	;# 
 11797   000450                     NCO3ACCL        equ	1104	;# 
 11798   000451                     NCO3ACCH        equ	1105	;# 
 11799   000452                     NCO3ACCU        equ	1106	;# 
 11800   000453                     NCO3INC         equ	1107	;# 
 11801   000453                     NCO3INCL        equ	1107	;# 
 11802   000454                     NCO3INCH        equ	1108	;# 
 11803   000455                     NCO3INCU        equ	1109	;# 
 11804   000456                     NCO3CON         equ	1110	;# 
 11805   000457                     NCO3CLK         equ	1111	;# 
 11806   000458                     FSCMCON         equ	1112	;# 
 11807   000459                     IVTLOCK         equ	1113	;# 
 11808   00045A                     IVTAD           equ	1114	;# 
 11809   00045A                     IVTADL          equ	1114	;# 
 11810   00045B                     IVTADH          equ	1115	;# 
 11811   00045C                     IVTADU          equ	1116	;# 
 11812   00045D                     IVTBASE         equ	1117	;# 
 11813   00045D                     IVTBASEL        equ	1117	;# 
 11814   00045E                     IVTBASEH        equ	1118	;# 
 11815   00045F                     IVTBASEU        equ	1119	;# 
 11816   000460                     PWM1ERS         equ	1120	;# 
 11817   000461                     PWM1CLK         equ	1121	;# 
 11818   000462                     PWM1LDS         equ	1122	;# 
 11819   000463                     PWM1PR          equ	1123	;# 
 11820   000463                     PWM1PRL         equ	1123	;# 
 11821   000464                     PWM1PRH         equ	1124	;# 
 11822   000465                     PWM1CPRE        equ	1125	;# 
 11823   000466                     PWM1PIPOS       equ	1126	;# 
 11824   000467                     PWM1GIR         equ	1127	;# 
 11825   000468                     PWM1GIE         equ	1128	;# 
 11826   000469                     PWM1CON         equ	1129	;# 
 11827   00046A                     PWM1S1CFG       equ	1130	;# 
 11828   00046B                     PWM1S1P1        equ	1131	;# 
 11829   00046B                     PWM1S1P1L       equ	1131	;# 
 11830   00046C                     PWM1S1P1H       equ	1132	;# 
 11831   00046D                     PWM1S1P2        equ	1133	;# 
 11832   00046D                     PWM1S1P2L       equ	1133	;# 
 11833   00046E                     PWM1S1P2H       equ	1134	;# 
 11834   00046F                     PWM2ERS         equ	1135	;# 
 11835   000470                     PWM2CLK         equ	1136	;# 
 11836   000471                     PWM2LDS         equ	1137	;# 
 11837   000472                     PWM2PR          equ	1138	;# 
 11838   000472                     PWM2PRL         equ	1138	;# 
 11839   000473                     PWM2PRH         equ	1139	;# 
 11840   000474                     PWM2CPRE        equ	1140	;# 
 11841   000475                     PWM2PIPOS       equ	1141	;# 
 11842   000476                     PWM2GIR         equ	1142	;# 
 11843   000477                     PWM2GIE         equ	1143	;# 
 11844   000478                     PWM2CON         equ	1144	;# 
 11845   000479                     PWM2S1CFG       equ	1145	;# 
 11846   00047A                     PWM2S1P1        equ	1146	;# 
 11847   00047A                     PWM2S1P1L       equ	1146	;# 
 11848   00047B                     PWM2S1P1H       equ	1147	;# 
 11849   00047C                     PWM2S1P2        equ	1148	;# 
 11850   00047C                     PWM2S1P2L       equ	1148	;# 
 11851   00047D                     PWM2S1P2H       equ	1149	;# 
 11852   00047E                     PWM3ERS         equ	1150	;# 
 11853   00047F                     PWM3CLK         equ	1151	;# 
 11854   000480                     PWM3LDS         equ	1152	;# 
 11855   000481                     PWM3PR          equ	1153	;# 
 11856   000481                     PWM3PRL         equ	1153	;# 
 11857   000482                     PWM3PRH         equ	1154	;# 
 11858   000483                     PWM3CPRE        equ	1155	;# 
 11859   000484                     PWM3PIPOS       equ	1156	;# 
 11860   000485                     PWM3GIR         equ	1157	;# 
 11861   000486                     PWM3GIE         equ	1158	;# 
 11862   000487                     PWM3CON         equ	1159	;# 
 11863   000488                     PWM3S1CFG       equ	1160	;# 
 11864   000489                     PWM3S1P1        equ	1161	;# 
 11865   000489                     PWM3S1P1L       equ	1161	;# 
 11866   00048A                     PWM3S1P1H       equ	1162	;# 
 11867   00048B                     PWM3S1P2        equ	1163	;# 
 11868   00048B                     PWM3S1P2L       equ	1163	;# 
 11869   00048C                     PWM3S1P2H       equ	1164	;# 
 11870   00048D                     PWM4ERS         equ	1165	;# 
 11871   00048E                     PWM4CLK         equ	1166	;# 
 11872   00048F                     PWM4LDS         equ	1167	;# 
 11873   000490                     PWM4PR          equ	1168	;# 
 11874   000490                     PWM4PRL         equ	1168	;# 
 11875   000491                     PWM4PRH         equ	1169	;# 
 11876   000492                     PWM4CPRE        equ	1170	;# 
 11877   000493                     PWM4PIPOS       equ	1171	;# 
 11878   000494                     PWM4GIR         equ	1172	;# 
 11879   000495                     PWM4GIE         equ	1173	;# 
 11880   000496                     PWM4CON         equ	1174	;# 
 11881   000497                     PWM4S1CFG       equ	1175	;# 
 11882   000498                     PWM4S1P1        equ	1176	;# 
 11883   000498                     PWM4S1P1L       equ	1176	;# 
 11884   000499                     PWM4S1P1H       equ	1177	;# 
 11885   00049A                     PWM4S1P2        equ	1178	;# 
 11886   00049A                     PWM4S1P2L       equ	1178	;# 
 11887   00049B                     PWM4S1P2H       equ	1179	;# 
 11888   00049C                     PWMLOAD         equ	1180	;# 
 11889   00049D                     PWMEN           equ	1181	;# 
 11890   00049E                     PIE0            equ	1182	;# 
 11891   00049F                     PIE1            equ	1183	;# 
 11892   0004A0                     PIE2            equ	1184	;# 
 11893   0004A1                     PIE3            equ	1185	;# 
 11894   0004A2                     PIE4            equ	1186	;# 
 11895   0004A3                     PIE5            equ	1187	;# 
 11896   0004A4                     PIE6            equ	1188	;# 
 11897   0004A5                     PIE7            equ	1189	;# 
 11898   0004A6                     PIE8            equ	1190	;# 
 11899   0004A7                     PIE9            equ	1191	;# 
 11900   0004A8                     PIE10           equ	1192	;# 
 11901   0004A9                     PIE11           equ	1193	;# 
 11902   0004AA                     PIE12           equ	1194	;# 
 11903   0004AB                     PIE13           equ	1195	;# 
 11904   0004AC                     PIE14           equ	1196	;# 
 11905   0004AD                     PIE15           equ	1197	;# 
 11906   0004AE                     PIR0            equ	1198	;# 
 11907   0004AF                     PIR1            equ	1199	;# 
 11908   0004B0                     PIR2            equ	1200	;# 
 11909   0004B1                     PIR3            equ	1201	;# 
 11910   0004B2                     PIR4            equ	1202	;# 
 11911   0004B3                     PIR5            equ	1203	;# 
 11912   0004B4                     PIR6            equ	1204	;# 
 11913   0004B5                     PIR7            equ	1205	;# 
 11914   0004B6                     PIR8            equ	1206	;# 
 11915   0004B7                     PIR9            equ	1207	;# 
 11916   0004B8                     PIR10           equ	1208	;# 
 11917   0004B9                     PIR11           equ	1209	;# 
 11918   0004BA                     PIR12           equ	1210	;# 
 11919   0004BB                     PIR13           equ	1211	;# 
 11920   0004BC                     PIR14           equ	1212	;# 
 11921   0004BD                     PIR15           equ	1213	;# 
 11922   0004BE                     LATA            equ	1214	;# 
 11923   0004BF                     LATB            equ	1215	;# 
 11924   0004C0                     LATC            equ	1216	;# 
 11925   0004C6                     TRISA           equ	1222	;# 
 11926   0004C7                     TRISB           equ	1223	;# 
 11927   0004C8                     TRISC           equ	1224	;# 
 11928   0004CA                     TRISE           equ	1226	;# 
 11929   0004CE                     PORTA           equ	1230	;# 
 11930   0004CF                     PORTB           equ	1231	;# 
 11931   0004D0                     PORTC           equ	1232	;# 
 11932   0004D2                     PORTE           equ	1234	;# 
 11933   0004D6                     INTCON0         equ	1238	;# 
 11934   0004D7                     INTCON1         equ	1239	;# 
 11935   0004D8                     STATUS          equ	1240	;# 
 11936   0004D9                     FSR2            equ	1241	;# 
 11937   0004D9                     FSR2L           equ	1241	;# 
 11938   0004DA                     FSR2H           equ	1242	;# 
 11939   0004DB                     PLUSW2          equ	1243	;# 
 11940   0004DC                     PREINC2         equ	1244	;# 
 11941   0004DD                     POSTDEC2        equ	1245	;# 
 11942   0004DE                     POSTINC2        equ	1246	;# 
 11943   0004DF                     INDF2           equ	1247	;# 
 11944   0004E0                     BSR             equ	1248	;# 
 11945   0004E1                     FSR1            equ	1249	;# 
 11946   0004E1                     FSR1L           equ	1249	;# 
 11947   0004E2                     FSR1H           equ	1250	;# 
 11948   0004E3                     PLUSW1          equ	1251	;# 
 11949   0004E4                     PREINC1         equ	1252	;# 
 11950   0004E5                     POSTDEC1        equ	1253	;# 
 11951   0004E6                     POSTINC1        equ	1254	;# 
 11952   0004E7                     INDF1           equ	1255	;# 
 11953   0004E8                     WREG            equ	1256	;# 
 11954   0004E9                     FSR0            equ	1257	;# 
 11955   0004E9                     FSR0L           equ	1257	;# 
 11956   0004EA                     FSR0H           equ	1258	;# 
 11957   0004EB                     PLUSW0          equ	1259	;# 
 11958   0004EC                     PREINC0         equ	1260	;# 
 11959   0004ED                     POSTDEC0        equ	1261	;# 
 11960   0004EE                     POSTINC0        equ	1262	;# 
 11961   0004EF                     INDF0           equ	1263	;# 
 11962   0004F0                     PCON0           equ	1264	;# 
 11963   0004F1                     PCON1           equ	1265	;# 
 11964   0004F2                     CPUDOZE         equ	1266	;# 
 11965   0004F3                     PROD            equ	1267	;# 
 11966   0004F3                     PRODL           equ	1267	;# 
 11967   0004F4                     PRODH           equ	1268	;# 
 11968   0004F5                     TABLAT          equ	1269	;# 
 11969   0004F6                     TBLPTR          equ	1270	;# 
 11970   0004F6                     TBLPTRL         equ	1270	;# 
 11971   0004F7                     TBLPTRH         equ	1271	;# 
 11972   0004F8                     TBLPTRU         equ	1272	;# 
 11973   0004F9                     PCLAT           equ	1273	;# 
 11974   0004F9                     PCL             equ	1273	;# 
 11975   0004FA                     PCLATH          equ	1274	;# 
 11976   0004FB                     PCLATU          equ	1275	;# 
 11977   0004FC                     STKPTR          equ	1276	;# 
 11978   0004FD                     TOS             equ	1277	;# 
 11979   0004FD                     TOSL            equ	1277	;# 
 11980   0004FE                     TOSH            equ	1278	;# 
 11981   0004FF                     TOSU            equ	1279	;# 
 11982   000038                     BOOTREG         equ	56	;# 
 11983   000039                     CLKRCON         equ	57	;# 
 11984   00003A                     CLKRCLK         equ	58	;# 
 11985   000040                     NVMCON0         equ	64	;# 
 11986   000041                     NVMCON1         equ	65	;# 
 11987   000042                     NVMLOCK         equ	66	;# 
 11988   000043                     NVMADR          equ	67	;# 
 11989   000043                     NVMADRL         equ	67	;# 
 11990   000044                     NVMADRH         equ	68	;# 
 11991   000045                     NVMADRU         equ	69	;# 
 11992   000046                     NVMDAT          equ	70	;# 
 11993   000046                     NVMDATL         equ	70	;# 
 11994   000047                     NVMDATH         equ	71	;# 
 11995   000048                     VREGCON         equ	72	;# 
 11996   000049                     BORCON          equ	73	;# 
 11997   00004A                     HLVDCON0        equ	74	;# 
 11998   00004B                     HLVDCON1        equ	75	;# 
 11999   00004C                     ZCDCON          equ	76	;# 
 12000   000060                     PMD0            equ	96	;# 
 12001   000061                     PMD1            equ	97	;# 
 12002   000062                     PMD2            equ	98	;# 
 12003   000063                     PMD3            equ	99	;# 
 12004   000064                     PMD4            equ	100	;# 
 12005   000065                     PMD5            equ	101	;# 
 12006   000066                     PMD6            equ	102	;# 
 12007   000067                     PMD7            equ	103	;# 
 12008   000068                     PMD8            equ	104	;# 
 12009   00006A                     MD1CON0         equ	106	;# 
 12010   00006B                     MD1CON1         equ	107	;# 
 12011   00006C                     MD1SRC          equ	108	;# 
 12012   00006D                     MD1CARL         equ	109	;# 
 12013   00006E                     MD1CARH         equ	110	;# 
 12014   00006F                     CMOUT           equ	111	;# 
 12015   000070                     CM1CON0         equ	112	;# 
 12016   000071                     CM1CON1         equ	113	;# 
 12017   000072                     CM1NCH          equ	114	;# 
 12018   000073                     CM1PCH          equ	115	;# 
 12019   000074                     CM2CON0         equ	116	;# 
 12020   000075                     CM2CON1         equ	117	;# 
 12021   000076                     CM2NCH          equ	118	;# 
 12022   000077                     CM2PCH          equ	119	;# 
 12023   000078                     WDTCON0         equ	120	;# 
 12024   000079                     WDTCON1         equ	121	;# 
 12025   00007A                     WDTPSL          equ	122	;# 
 12026   00007B                     WDTPSH          equ	123	;# 
 12027   00007C                     WDTTMR          equ	124	;# 
 12028   00007D                     DAC1DAT         equ	125	;# 
 12029   00007D                     DAC1DATL        equ	125	;# 
 12030   00007F                     DAC1CON         equ	127	;# 
 12031   000080                     SPI1RXB         equ	128	;# 
 12032   000081                     SPI1TXB         equ	129	;# 
 12033   000082                     SPI1TCNT        equ	130	;# 
 12034   000082                     SPI1TCNTL       equ	130	;# 
 12035   000083                     SPI1TCNTH       equ	131	;# 
 12036   000084                     SPI1CON0        equ	132	;# 
 12037   000085                     SPI1CON1        equ	133	;# 
 12038   000086                     SPI1CON2        equ	134	;# 
 12039   000087                     SPI1STATUS      equ	135	;# 
 12040   000088                     SPI1TWIDTH      equ	136	;# 
 12041   000089                     SPI1BAUD        equ	137	;# 
 12042   00008A                     SPI1INTF        equ	138	;# 
 12043   00008B                     SPI1INTE        equ	139	;# 
 12044   00008C                     SPI1CLK         equ	140	;# 
 12045   00008D                     SPI2RXB         equ	141	;# 
 12046   00008E                     SPI2TXB         equ	142	;# 
 12047   00008F                     SPI2TCNT        equ	143	;# 
 12048   00008F                     SPI2TCNTL       equ	143	;# 
 12049   000090                     SPI2TCNTH       equ	144	;# 
 12050   000091                     SPI2CON0        equ	145	;# 
 12051   000092                     SPI2CON1        equ	146	;# 
 12052   000093                     SPI2CON2        equ	147	;# 
 12053   000094                     SPI2STATUS      equ	148	;# 
 12054   000095                     SPI2TWIDTH      equ	149	;# 
 12055   000096                     SPI2BAUD        equ	150	;# 
 12056   000097                     SPI2INTF        equ	151	;# 
 12057   000098                     SPI2INTE        equ	152	;# 
 12058   000099                     SPI2CLK         equ	153	;# 
 12059   0000AC                     ACTCON          equ	172	;# 
 12060   0000AD                     OSCCON1         equ	173	;# 
 12061   0000AE                     OSCCON2         equ	174	;# 
 12062   0000AF                     OSCCON3         equ	175	;# 
 12063   0000B0                     OSCTUNE         equ	176	;# 
 12064   0000B1                     OSCFRQ          equ	177	;# 
 12065   0000B1                     OSCFREQ         equ	177	;# 
 12066   0000B2                     OSCSTAT         equ	178	;# 
 12067   0000B2                     OSCSTAT1        equ	178	;# 
 12068   0000B3                     OSCEN           equ	179	;# 
 12069   0000B4                     PRLOCK          equ	180	;# 
 12070   0000B5                     SCANPR          equ	181	;# 
 12071   0000B6                     DMA1PR          equ	182	;# 
 12072   0000B7                     DMA2PR          equ	183	;# 
 12073   0000B8                     DMA3PR          equ	184	;# 
 12074   0000B9                     DMA4PR          equ	185	;# 
 12075   0000BA                     DMA5PR          equ	186	;# 
 12076   0000BB                     DMA6PR          equ	187	;# 
 12077   0000BC                     DMA7PR          equ	188	;# 
 12078   0000BD                     DMA8PR          equ	189	;# 
 12079   0000BE                     MAINPR          equ	190	;# 
 12080   0000BF                     ISRPR           equ	191	;# 
 12081   0000D4                     CLCDATA         equ	212	;# 
 12082   0000D5                     CLCSELECT       equ	213	;# 
 12083   0000D6                     CLCnCON         equ	214	;# 
 12084   0000D7                     CLCnPOL         equ	215	;# 
 12085   0000D8                     CLCnSEL0        equ	216	;# 
 12086   0000D9                     CLCnSEL1        equ	217	;# 
 12087   0000DA                     CLCnSEL2        equ	218	;# 
 12088   0000DB                     CLCnSEL3        equ	219	;# 
 12089   0000DC                     CLCnGLS0        equ	220	;# 
 12090   0000DD                     CLCnGLS1        equ	221	;# 
 12091   0000DE                     CLCnGLS2        equ	222	;# 
 12092   0000DF                     CLCnGLS3        equ	223	;# 
 12093   0000E8                     DMASELECT       equ	232	;# 
 12094   0000E9                     DMAnBUF         equ	233	;# 
 12095   0000EA                     DMAnDCNT        equ	234	;# 
 12096   0000EA                     DMAnDCNTL       equ	234	;# 
 12097   0000EB                     DMAnDCNTH       equ	235	;# 
 12098   0000EC                     DMAnDPTR        equ	236	;# 
 12099   0000EC                     DMAnDPTRL       equ	236	;# 
 12100   0000ED                     DMAnDPTRH       equ	237	;# 
 12101   0000EE                     DMAnDSZ         equ	238	;# 
 12102   0000EE                     DMAnDSZL        equ	238	;# 
 12103   0000EF                     DMAnDSZH        equ	239	;# 
 12104   0000F0                     DMAnDSA         equ	240	;# 
 12105   0000F0                     DMAnDSAL        equ	240	;# 
 12106   0000F1                     DMAnDSAH        equ	241	;# 
 12107   0000F2                     DMAnSCNT        equ	242	;# 
 12108   0000F2                     DMAnSCNTL       equ	242	;# 
 12109   0000F3                     DMAnSCNTH       equ	243	;# 
 12110   0000F4                     DMAnSPTR        equ	244	;# 
 12111   0000F4                     DMAnSPTRL       equ	244	;# 
 12112   0000F5                     DMAnSPTRH       equ	245	;# 
 12113   0000F6                     DMAnSPTRU       equ	246	;# 
 12114   0000F7                     DMAnSSZ         equ	247	;# 
 12115   0000F7                     DMAnSSZL        equ	247	;# 
 12116   0000F8                     DMAnSSZH        equ	248	;# 
 12117   0000F9                     DMAnSSA         equ	249	;# 
 12118   0000F9                     DMAnSSAL        equ	249	;# 
 12119   0000FA                     DMAnSSAH        equ	250	;# 
 12120   0000FB                     DMAnSSAU        equ	251	;# 
 12121   0000FC                     DMAnCON0        equ	252	;# 
 12122   0000FD                     DMAnCON1        equ	253	;# 
 12123   0000FE                     DMAnAIRQ        equ	254	;# 
 12124   0000FF                     DMAnSIRQ        equ	255	;# 
 12125   000100                     C1CONL          equ	256	;# 
 12126   000101                     C1CONH          equ	257	;# 
 12127   000102                     C1CONU          equ	258	;# 
 12128   000103                     C1CONT          equ	259	;# 
 12129   000104                     C1NBTCFGL       equ	260	;# 
 12130   000105                     C1NBTCFGH       equ	261	;# 
 12131   000106                     C1NBTCFGU       equ	262	;# 
 12132   000107                     C1NBTCFGT       equ	263	;# 
 12133   000108                     C1DBTCFGL       equ	264	;# 
 12134   000109                     C1DBTCFGH       equ	265	;# 
 12135   00010A                     C1DBTCFGU       equ	266	;# 
 12136   00010B                     C1DBTCFGT       equ	267	;# 
 12137   00010C                     C1TDCL          equ	268	;# 
 12138   00010D                     C1TDCH          equ	269	;# 
 12139   00010E                     C1TDCU          equ	270	;# 
 12140   000110                     C1TBC           equ	272	;# 
 12141   000110                     C1TBCL          equ	272	;# 
 12142   000111                     C1TBCH          equ	273	;# 
 12143   000112                     C1TBCU          equ	274	;# 
 12144   000113                     C1TBCT          equ	275	;# 
 12145   000114                     C1TSCONL        equ	276	;# 
 12146   000115                     C1TSCONH        equ	277	;# 
 12147   000116                     C1TSCONU        equ	278	;# 
 12148   000117                     C1TSCONT        equ	279	;# 
 12149   000118                     C1VECL          equ	280	;# 
 12150   000119                     C1VECH          equ	281	;# 
 12151   00011A                     C1VECU          equ	282	;# 
 12152   00011B                     C1VECT          equ	283	;# 
 12153   00011C                     C1INTL          equ	284	;# 
 12154   00011D                     C1INTH          equ	285	;# 
 12155   00011E                     C1INTU          equ	286	;# 
 12156   00011F                     C1INTT          equ	287	;# 
 12157   000120                     C1RXIF          equ	288	;# 
 12158   000120                     C1RXIFL         equ	288	;# 
 12159   000121                     C1RXIFH         equ	289	;# 
 12160   000122                     C1RXIFU         equ	290	;# 
 12161   000123                     C1RXIFT         equ	291	;# 
 12162   000124                     C1TXIF          equ	292	;# 
 12163   000124                     C1TXIFL         equ	292	;# 
 12164   000125                     C1TXIFH         equ	293	;# 
 12165   000126                     C1TXIFU         equ	294	;# 
 12166   000127                     C1TXIFT         equ	295	;# 
 12167   000128                     C1RXOVIF        equ	296	;# 
 12168   000128                     C1RXOVIFL       equ	296	;# 
 12169   000129                     C1RXOVIFH       equ	297	;# 
 12170   00012A                     C1RXOVIFU       equ	298	;# 
 12171   00012B                     C1RXOVIFT       equ	299	;# 
 12172   00012C                     C1TXATIF        equ	300	;# 
 12173   00012C                     C1TXATIFL       equ	300	;# 
 12174   00012D                     C1TXATIFH       equ	301	;# 
 12175   00012E                     C1TXATIFU       equ	302	;# 
 12176   00012F                     C1TXATIFT       equ	303	;# 
 12177   000130                     C1TXREQ         equ	304	;# 
 12178   000130                     C1TXREQL        equ	304	;# 
 12179   000131                     C1TXREQH        equ	305	;# 
 12180   000132                     C1TXREQU        equ	306	;# 
 12181   000133                     C1TXREQT        equ	307	;# 
 12182   000134                     C1TRECL         equ	308	;# 
 12183   000135                     C1TRECH         equ	309	;# 
 12184   000136                     C1TRECU         equ	310	;# 
 12185   000137                     C1TRECT         equ	311	;# 
 12186   000138                     C1BDIAG0L       equ	312	;# 
 12187   000139                     C1BDIAG0H       equ	313	;# 
 12188   00013C                     C1BDIAG1L       equ	316	;# 
 12189   00013D                     C1BDIAG1H       equ	317	;# 
 12190   00013E                     C1BDIAG1U       equ	318	;# 
 12191   00013F                     C1BDIAG1T       equ	319	;# 
 12192   000140                     C1TEFCONL       equ	320	;# 
 12193   000141                     C1TEFCONH       equ	321	;# 
 12194   000142                     C1TEFCONU       equ	322	;# 
 12195   000143                     C1TEFCONT       equ	323	;# 
 12196   000144                     C1TEFSTAL       equ	324	;# 
 12197   000145                     C1TEFSTAH       equ	325	;# 
 12198   000146                     C1TEFSTAU       equ	326	;# 
 12199   000147                     C1TEFSTAT       equ	327	;# 
 12200   000148                     C1TEFUA         equ	328	;# 
 12201   000148                     C1TEFUAL        equ	328	;# 
 12202   000149                     C1TEFUAH        equ	329	;# 
 12203   00014A                     C1TEFUAU        equ	330	;# 
 12204   00014B                     C1TEFUAT        equ	331	;# 
 12205   00014C                     C1FIFOBA        equ	332	;# 
 12206   00014C                     C1FIFOBAL       equ	332	;# 
 12207   00014D                     C1FIFOBAH       equ	333	;# 
 12208   00014E                     C1FIFOBAU       equ	334	;# 
 12209   00014F                     C1FIFOBAT       equ	335	;# 
 12210   000150                     C1TXQCONL       equ	336	;# 
 12211   000151                     C1TXQCONH       equ	337	;# 
 12212   000152                     C1TXQCONU       equ	338	;# 
 12213   000153                     C1TXQCONT       equ	339	;# 
 12214   000154                     C1TXQSTAL       equ	340	;# 
 12215   000155                     C1TXQSTAH       equ	341	;# 
 12216   000156                     C1TXQSTAU       equ	342	;# 
 12217   000157                     C1TXQSTAT       equ	343	;# 
 12218   000158                     C1TXQUA         equ	344	;# 
 12219   000158                     C1TXQUAL        equ	344	;# 
 12220   000159                     C1TXQUAH        equ	345	;# 
 12221   00015A                     C1TXQUAU        equ	346	;# 
 12222   00015B                     C1TXQUAT        equ	347	;# 
 12223   00015C                     C1FIFOCON1      equ	348	;# 
 12224   00015C                     C1FIFOCON1L     equ	348	;# 
 12225   00015D                     C1FIFOCON1H     equ	349	;# 
 12226   00015E                     C1FIFOCON1U     equ	350	;# 
 12227   00015F                     C1FIFOCON1T     equ	351	;# 
 12228   000160                     C1FIFOSTA1      equ	352	;# 
 12229   000160                     C1FIFOSTA1L     equ	352	;# 
 12230   000161                     C1FIFOSTA1H     equ	353	;# 
 12231   000162                     C1FIFOSTA1U     equ	354	;# 
 12232   000163                     C1FIFOSTA1T     equ	355	;# 
 12233   000164                     C1FIFOUA1       equ	356	;# 
 12234   000164                     C1FIFOUA1L      equ	356	;# 
 12235   000165                     C1FIFOUA1H      equ	357	;# 
 12236   000166                     C1FIFOUA1U      equ	358	;# 
 12237   000167                     C1FIFOUA1T      equ	359	;# 
 12238   000168                     C1FIFOCON2      equ	360	;# 
 12239   000168                     C1FIFOCON2L     equ	360	;# 
 12240   000169                     C1FIFOCON2H     equ	361	;# 
 12241   00016A                     C1FIFOCON2U     equ	362	;# 
 12242   00016B                     C1FIFOCON2T     equ	363	;# 
 12243   00016C                     C1FIFOSTA2      equ	364	;# 
 12244   00016C                     C1FIFOSTA2L     equ	364	;# 
 12245   00016D                     C1FIFOSTA2H     equ	365	;# 
 12246   00016E                     C1FIFOSTA2U     equ	366	;# 
 12247   00016F                     C1FIFOSTA2T     equ	367	;# 
 12248   000170                     C1FIFOUA2       equ	368	;# 
 12249   000170                     C1FIFOUA2L      equ	368	;# 
 12250   000171                     C1FIFOUA2H      equ	369	;# 
 12251   000172                     C1FIFOUA2U      equ	370	;# 
 12252   000173                     C1FIFOUA2T      equ	371	;# 
 12253   000174                     C1FIFOCON3      equ	372	;# 
 12254   000174                     C1FIFOCON3L     equ	372	;# 
 12255   000175                     C1FIFOCON3H     equ	373	;# 
 12256   000176                     C1FIFOCON3U     equ	374	;# 
 12257   000177                     C1FIFOCON3T     equ	375	;# 
 12258   000178                     C1FIFOSTA3      equ	376	;# 
 12259   000178                     C1FIFOSTA3L     equ	376	;# 
 12260   000179                     C1FIFOSTA3H     equ	377	;# 
 12261   00017A                     C1FIFOSTA3U     equ	378	;# 
 12262   00017B                     C1FIFOSTA3T     equ	379	;# 
 12263   00017C                     C1FIFOUA3       equ	380	;# 
 12264   00017C                     C1FIFOUA3L      equ	380	;# 
 12265   00017D                     C1FIFOUA3H      equ	381	;# 
 12266   00017E                     C1FIFOUA3U      equ	382	;# 
 12267   00017F                     C1FIFOUA3T      equ	383	;# 
 12268   000180                     C1FLTCON0L      equ	384	;# 
 12269   000181                     C1FLTCON0H      equ	385	;# 
 12270   000182                     C1FLTCON0U      equ	386	;# 
 12271   000183                     C1FLTCON0T      equ	387	;# 
 12272   000184                     C1FLTCON1L      equ	388	;# 
 12273   000185                     C1FLTCON1H      equ	389	;# 
 12274   000186                     C1FLTCON1U      equ	390	;# 
 12275   000187                     C1FLTCON1T      equ	391	;# 
 12276   000188                     C1FLTCON2L      equ	392	;# 
 12277   000189                     C1FLTCON2H      equ	393	;# 
 12278   00018A                     C1FLTCON2U      equ	394	;# 
 12279   00018B                     C1FLTCON2T      equ	395	;# 
 12280   00018C                     C1FLTOBJ0       equ	396	;# 
 12281   00018C                     C1FLTOBJ0L      equ	396	;# 
 12282   00018D                     C1FLTOBJ0H      equ	397	;# 
 12283   00018E                     C1FLTOBJ0U      equ	398	;# 
 12284   00018F                     C1FLTOBJ0T      equ	399	;# 
 12285   000190                     C1MASK0         equ	400	;# 
 12286   000190                     C1MASK0L        equ	400	;# 
 12287   000191                     C1MASK0H        equ	401	;# 
 12288   000192                     C1MASK0U        equ	402	;# 
 12289   000193                     C1MASK0T        equ	403	;# 
 12290   000194                     C1FLTOBJ1       equ	404	;# 
 12291   000194                     C1FLTOBJ1L      equ	404	;# 
 12292   000195                     C1FLTOBJ1H      equ	405	;# 
 12293   000196                     C1FLTOBJ1U      equ	406	;# 
 12294   000197                     C1FLTOBJ1T      equ	407	;# 
 12295   000198                     C1MASK1         equ	408	;# 
 12296   000198                     C1MASK1L        equ	408	;# 
 12297   000199                     C1MASK1H        equ	409	;# 
 12298   00019A                     C1MASK1U        equ	410	;# 
 12299   00019B                     C1MASK1T        equ	411	;# 
 12300   00019C                     C1FLTOBJ2       equ	412	;# 
 12301   00019C                     C1FLTOBJ2L      equ	412	;# 
 12302   00019D                     C1FLTOBJ2H      equ	413	;# 
 12303   00019E                     C1FLTOBJ2U      equ	414	;# 
 12304   00019F                     C1FLTOBJ2T      equ	415	;# 
 12305   0001A0                     C1MASK2         equ	416	;# 
 12306   0001A0                     C1MASK2L        equ	416	;# 
 12307   0001A1                     C1MASK2H        equ	417	;# 
 12308   0001A2                     C1MASK2U        equ	418	;# 
 12309   0001A3                     C1MASK2T        equ	419	;# 
 12310   0001A4                     C1FLTOBJ3       equ	420	;# 
 12311   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12312   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12313   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12314   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12315   0001A8                     C1MASK3         equ	424	;# 
 12316   0001A8                     C1MASK3L        equ	424	;# 
 12317   0001A9                     C1MASK3H        equ	425	;# 
 12318   0001AA                     C1MASK3U        equ	426	;# 
 12319   0001AB                     C1MASK3T        equ	427	;# 
 12320   0001AC                     C1FLTOBJ4       equ	428	;# 
 12321   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12322   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12323   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12324   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12325   0001B0                     C1MASK4         equ	432	;# 
 12326   0001B0                     C1MASK4L        equ	432	;# 
 12327   0001B1                     C1MASK4H        equ	433	;# 
 12328   0001B2                     C1MASK4U        equ	434	;# 
 12329   0001B3                     C1MASK4T        equ	435	;# 
 12330   0001B4                     C1FLTOBJ5       equ	436	;# 
 12331   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12332   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12333   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12334   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12335   0001B8                     C1MASK5         equ	440	;# 
 12336   0001B8                     C1MASK5L        equ	440	;# 
 12337   0001B9                     C1MASK5H        equ	441	;# 
 12338   0001BA                     C1MASK5U        equ	442	;# 
 12339   0001BB                     C1MASK5T        equ	443	;# 
 12340   0001BC                     C1FLTOBJ6       equ	444	;# 
 12341   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12342   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12343   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12344   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12345   0001C0                     C1MASK6         equ	448	;# 
 12346   0001C0                     C1MASK6L        equ	448	;# 
 12347   0001C1                     C1MASK6H        equ	449	;# 
 12348   0001C2                     C1MASK6U        equ	450	;# 
 12349   0001C3                     C1MASK6T        equ	451	;# 
 12350   0001C4                     C1FLTOBJ7       equ	452	;# 
 12351   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12352   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12353   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12354   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12355   0001C8                     C1MASK7         equ	456	;# 
 12356   0001C8                     C1MASK7L        equ	456	;# 
 12357   0001C9                     C1MASK7H        equ	457	;# 
 12358   0001CA                     C1MASK7U        equ	458	;# 
 12359   0001CB                     C1MASK7T        equ	459	;# 
 12360   0001CC                     C1FLTOBJ8       equ	460	;# 
 12361   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12362   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12363   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12364   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12365   0001D0                     C1MASK8         equ	464	;# 
 12366   0001D0                     C1MASK8L        equ	464	;# 
 12367   0001D1                     C1MASK8H        equ	465	;# 
 12368   0001D2                     C1MASK8U        equ	466	;# 
 12369   0001D3                     C1MASK8T        equ	467	;# 
 12370   0001D4                     C1FLTOBJ9       equ	468	;# 
 12371   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12372   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12373   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12374   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12375   0001D8                     C1MASK9         equ	472	;# 
 12376   0001D8                     C1MASK9L        equ	472	;# 
 12377   0001D9                     C1MASK9H        equ	473	;# 
 12378   0001DA                     C1MASK9U        equ	474	;# 
 12379   0001DB                     C1MASK9T        equ	475	;# 
 12380   0001DC                     C1FLTOBJ10      equ	476	;# 
 12381   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12382   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12383   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12384   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12385   0001E0                     C1MASK10        equ	480	;# 
 12386   0001E0                     C1MASK10L       equ	480	;# 
 12387   0001E1                     C1MASK10H       equ	481	;# 
 12388   0001E2                     C1MASK10U       equ	482	;# 
 12389   0001E3                     C1MASK10T       equ	483	;# 
 12390   0001E4                     C1FLTOBJ11      equ	484	;# 
 12391   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12392   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12393   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12394   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12395   0001E8                     C1MASK11        equ	488	;# 
 12396   0001E8                     C1MASK11L       equ	488	;# 
 12397   0001E9                     C1MASK11H       equ	489	;# 
 12398   0001EA                     C1MASK11U       equ	490	;# 
 12399   0001EB                     C1MASK11T       equ	491	;# 
 12400   000200                     PPSLOCK         equ	512	;# 
 12401   000201                     RA0PPS          equ	513	;# 
 12402   000202                     RA1PPS          equ	514	;# 
 12403   000203                     RA2PPS          equ	515	;# 
 12404   000204                     RA3PPS          equ	516	;# 
 12405   000205                     RA4PPS          equ	517	;# 
 12406   000206                     RA5PPS          equ	518	;# 
 12407   000207                     RA6PPS          equ	519	;# 
 12408   000208                     RA7PPS          equ	520	;# 
 12409   000209                     RB0PPS          equ	521	;# 
 12410   00020A                     RB1PPS          equ	522	;# 
 12411   00020B                     RB2PPS          equ	523	;# 
 12412   00020C                     RB3PPS          equ	524	;# 
 12413   00020D                     RB4PPS          equ	525	;# 
 12414   00020E                     RB5PPS          equ	526	;# 
 12415   00020F                     RB6PPS          equ	527	;# 
 12416   000210                     RB7PPS          equ	528	;# 
 12417   000211                     RC0PPS          equ	529	;# 
 12418   000212                     RC1PPS          equ	530	;# 
 12419   000213                     RC2PPS          equ	531	;# 
 12420   000214                     RC3PPS          equ	532	;# 
 12421   000215                     RC4PPS          equ	533	;# 
 12422   000216                     RC5PPS          equ	534	;# 
 12423   000217                     RC6PPS          equ	535	;# 
 12424   000218                     RC7PPS          equ	536	;# 
 12425   00023D                     CANRXPPS        equ	573	;# 
 12426   00023E                     INT0PPS         equ	574	;# 
 12427   00023F                     INT1PPS         equ	575	;# 
 12428   000240                     INT2PPS         equ	576	;# 
 12429   000241                     T0CKIPPS        equ	577	;# 
 12430   000242                     T1CKIPPS        equ	578	;# 
 12431   000243                     T1GPPS          equ	579	;# 
 12432   000244                     T3CKIPPS        equ	580	;# 
 12433   000245                     T3GPPS          equ	581	;# 
 12434   000246                     T5CKIPPS        equ	582	;# 
 12435   000247                     T5GPPS          equ	583	;# 
 12436   000248                     T2INPPS         equ	584	;# 
 12437   000249                     T4INPPS         equ	585	;# 
 12438   00024A                     T6INPPS         equ	586	;# 
 12439   00024B                     TUIN0PPS        equ	587	;# 
 12440   00024C                     TUIN1PPS        equ	588	;# 
 12441   00024F                     CCP1PPS         equ	591	;# 
 12442   000250                     CCP2PPS         equ	592	;# 
 12443   000251                     CCP3PPS         equ	593	;# 
 12444   000253                     PWM1ERSPPS      equ	595	;# 
 12445   000254                     PWM2ERSPPS      equ	596	;# 
 12446   000255                     PWM3ERSPPS      equ	597	;# 
 12447   000256                     PWM4ERSPPS      equ	598	;# 
 12448   000257                     PWMIN0PPS       equ	599	;# 
 12449   000258                     PWMIN1PPS       equ	600	;# 
 12450   000259                     SMT1WINPPS      equ	601	;# 
 12451   00025A                     SMT1SIGPPS      equ	602	;# 
 12452   00025B                     CWG1PPS         equ	603	;# 
 12453   00025B                     CWG1INPPS       equ	603	;# 
 12454   00025C                     CWG2PPS         equ	604	;# 
 12455   00025C                     CWG2INPPS       equ	604	;# 
 12456   00025D                     CWG3PPS         equ	605	;# 
 12457   00025D                     CWG3INPPS       equ	605	;# 
 12458   00025E                     MD1CARLPPS      equ	606	;# 
 12459   00025E                     MDCARLPPS       equ	606	;# 
 12460   00025F                     MD1CARHPPS      equ	607	;# 
 12461   00025F                     MDCARHPPS       equ	607	;# 
 12462   000260                     MD1SRCPPS       equ	608	;# 
 12463   000260                     MDSRCPPS        equ	608	;# 
 12464   000261                     CLCIN0PPS       equ	609	;# 
 12465   000262                     CLCIN1PPS       equ	610	;# 
 12466   000263                     CLCIN2PPS       equ	611	;# 
 12467   000264                     CLCIN3PPS       equ	612	;# 
 12468   000265                     CLCIN4PPS       equ	613	;# 
 12469   000266                     CLCIN5PPS       equ	614	;# 
 12470   000267                     CLCIN6PPS       equ	615	;# 
 12471   000268                     CLCIN7PPS       equ	616	;# 
 12472   000269                     ADACTPPS        equ	617	;# 
 12473   00026A                     SPI1SCKPPS      equ	618	;# 
 12474   00026B                     SPI1SDIPPS      equ	619	;# 
 12475   00026C                     SPI1SSPPS       equ	620	;# 
 12476   00026D                     SPI2SCKPPS      equ	621	;# 
 12477   00026E                     SPI2SDIPPS      equ	622	;# 
 12478   00026F                     SPI2SSPPS       equ	623	;# 
 12479   000270                     I2C1SDAPPS      equ	624	;# 
 12480   000271                     I2C1SCLPPS      equ	625	;# 
 12481   000272                     U1RXPPS         equ	626	;# 
 12482   000273                     U1CTSPPS        equ	627	;# 
 12483   000274                     U2RXPPS         equ	628	;# 
 12484   000275                     U2CTSPPS        equ	629	;# 
 12485   000276                     U3RXPPS         equ	630	;# 
 12486   000277                     U3CTSPPS        equ	631	;# 
 12487   000278                     U4RXPPS         equ	632	;# 
 12488   000279                     U4CTSPPS        equ	633	;# 
 12489   00027A                     U5RXPPS         equ	634	;# 
 12490   00027B                     U5CTSPPS        equ	635	;# 
 12491   000286                     RC4I2C          equ	646	;# 
 12492   000287                     RC3I2C          equ	647	;# 
 12493   000288                     RB2I2C          equ	648	;# 
 12494   000289                     RB1I2C          equ	649	;# 
 12495   00028A                     I2C1RXB         equ	650	;# 
 12496   00028B                     I2C1TXB         equ	651	;# 
 12497   00028C                     I2C1CNTL        equ	652	;# 
 12498   00028D                     I2C1CNTH        equ	653	;# 
 12499   00028E                     I2C1ADB0        equ	654	;# 
 12500   00028F                     I2C1ADB1        equ	655	;# 
 12501   000290                     I2C1ADR0        equ	656	;# 
 12502   000291                     I2C1ADR1        equ	657	;# 
 12503   000292                     I2C1ADR2        equ	658	;# 
 12504   000293                     I2C1ADR3        equ	659	;# 
 12505   000294                     I2C1CON0        equ	660	;# 
 12506   000295                     I2C1CON1        equ	661	;# 
 12507   000296                     I2C1CON2        equ	662	;# 
 12508   000297                     I2C1ERR         equ	663	;# 
 12509   000298                     I2C1STAT0       equ	664	;# 
 12510   000299                     I2C1STAT1       equ	665	;# 
 12511   00029A                     I2C1PIR         equ	666	;# 
 12512   00029B                     I2C1PIE         equ	667	;# 
 12513   00029C                     I2C1BTO         equ	668	;# 
 12514   00029D                     I2C1BAUD        equ	669	;# 
 12515   00029E                     I2C1CLK         equ	670	;# 
 12516   00029F                     I2C1BTOC        equ	671	;# 
 12517   0002A1                     U1RXB           equ	673	;# 
 12518   0002A1                     U1RXBL          equ	673	;# 
 12519   0002A2                     U1RXCHK         equ	674	;# 
 12520   0002A3                     U1TXB           equ	675	;# 
 12521   0002A3                     U1TXBL          equ	675	;# 
 12522   0002A4                     U1TXCHK         equ	676	;# 
 12523   0002A5                     U1P1            equ	677	;# 
 12524   0002A5                     U1P1L           equ	677	;# 
 12525   0002A6                     U1P1H           equ	678	;# 
 12526   0002A7                     U1P2            equ	679	;# 
 12527   0002A7                     U1P2L           equ	679	;# 
 12528   0002A8                     U1P2H           equ	680	;# 
 12529   0002A9                     U1P3            equ	681	;# 
 12530   0002A9                     U1P3L           equ	681	;# 
 12531   0002AA                     U1P3H           equ	682	;# 
 12532   0002AB                     U1CON0          equ	683	;# 
 12533   0002AC                     U1CON1          equ	684	;# 
 12534   0002AD                     U1CON2          equ	685	;# 
 12535   0002AE                     U1BRG           equ	686	;# 
 12536   0002AE                     U1BRGL          equ	686	;# 
 12537   0002AF                     U1BRGH          equ	687	;# 
 12538   0002B0                     U1FIFO          equ	688	;# 
 12539   0002B1                     U1UIR           equ	689	;# 
 12540   0002B2                     U1ERRIR         equ	690	;# 
 12541   0002B3                     U1ERRIE         equ	691	;# 
 12542   0002B4                     U2RXB           equ	692	;# 
 12543   0002B4                     U2RXBL          equ	692	;# 
 12544   0002B5                     U2RXCHK         equ	693	;# 
 12545   0002B6                     U2TXB           equ	694	;# 
 12546   0002B6                     U2TXBL          equ	694	;# 
 12547   0002B7                     U2TXCHK         equ	695	;# 
 12548   0002B8                     U2P1            equ	696	;# 
 12549   0002B8                     U2P1L           equ	696	;# 
 12550   0002B9                     U2P1H           equ	697	;# 
 12551   0002BA                     U2P2            equ	698	;# 
 12552   0002BA                     U2P2L           equ	698	;# 
 12553   0002BB                     U2P2H           equ	699	;# 
 12554   0002BC                     U2P3            equ	700	;# 
 12555   0002BC                     U2P3L           equ	700	;# 
 12556   0002BD                     U2P3H           equ	701	;# 
 12557   0002BE                     U2CON0          equ	702	;# 
 12558   0002BF                     U2CON1          equ	703	;# 
 12559   0002C0                     U2CON2          equ	704	;# 
 12560   0002C1                     U2BRG           equ	705	;# 
 12561   0002C1                     U2BRGL          equ	705	;# 
 12562   0002C2                     U2BRGH          equ	706	;# 
 12563   0002C3                     U2FIFO          equ	707	;# 
 12564   0002C4                     U2UIR           equ	708	;# 
 12565   0002C5                     U2ERRIR         equ	709	;# 
 12566   0002C6                     U2ERRIE         equ	710	;# 
 12567   0002C7                     U3RXB           equ	711	;# 
 12568   0002C7                     U3RXBL          equ	711	;# 
 12569   0002C9                     U3TXB           equ	713	;# 
 12570   0002C9                     U3TXBL          equ	713	;# 
 12571   0002CB                     U3P1            equ	715	;# 
 12572   0002CB                     U3P1L           equ	715	;# 
 12573   0002CD                     U3P2            equ	717	;# 
 12574   0002CD                     U3P2L           equ	717	;# 
 12575   0002CF                     U3P3            equ	719	;# 
 12576   0002CF                     U3P3L           equ	719	;# 
 12577   0002D1                     U3CON0          equ	721	;# 
 12578   0002D2                     U3CON1          equ	722	;# 
 12579   0002D3                     U3CON2          equ	723	;# 
 12580   0002D4                     U3BRG           equ	724	;# 
 12581   0002D4                     U3BRGL          equ	724	;# 
 12582   0002D5                     U3BRGH          equ	725	;# 
 12583   0002D6                     U3FIFO          equ	726	;# 
 12584   0002D7                     U3UIR           equ	727	;# 
 12585   0002D8                     U3ERRIR         equ	728	;# 
 12586   0002D9                     U3ERRIE         equ	729	;# 
 12587   0002DA                     U4RXB           equ	730	;# 
 12588   0002DA                     U4RXBL          equ	730	;# 
 12589   0002DC                     U4TXB           equ	732	;# 
 12590   0002DC                     U4TXBL          equ	732	;# 
 12591   0002DE                     U4P1            equ	734	;# 
 12592   0002DE                     U4P1L           equ	734	;# 
 12593   0002E0                     U4P2            equ	736	;# 
 12594   0002E0                     U4P2L           equ	736	;# 
 12595   0002E2                     U4P3            equ	738	;# 
 12596   0002E2                     U4P3L           equ	738	;# 
 12597   0002E4                     U4CON0          equ	740	;# 
 12598   0002E5                     U4CON1          equ	741	;# 
 12599   0002E6                     U4CON2          equ	742	;# 
 12600   0002E7                     U4BRG           equ	743	;# 
 12601   0002E7                     U4BRGL          equ	743	;# 
 12602   0002E8                     U4BRGH          equ	744	;# 
 12603   0002E9                     U4FIFO          equ	745	;# 
 12604   0002EA                     U4UIR           equ	746	;# 
 12605   0002EB                     U4ERRIR         equ	747	;# 
 12606   0002EC                     U4ERRIE         equ	748	;# 
 12607   0002ED                     U5RXB           equ	749	;# 
 12608   0002ED                     U5RXBL          equ	749	;# 
 12609   0002EF                     U5TXB           equ	751	;# 
 12610   0002EF                     U5TXBL          equ	751	;# 
 12611   0002F1                     U5P1            equ	753	;# 
 12612   0002F1                     U5P1L           equ	753	;# 
 12613   0002F3                     U5P2            equ	755	;# 
 12614   0002F3                     U5P2L           equ	755	;# 
 12615   0002F5                     U5P3            equ	757	;# 
 12616   0002F5                     U5P3L           equ	757	;# 
 12617   0002F7                     U5CON0          equ	759	;# 
 12618   0002F8                     U5CON1          equ	760	;# 
 12619   0002F9                     U5CON2          equ	761	;# 
 12620   0002FA                     U5BRG           equ	762	;# 
 12621   0002FA                     U5BRGL          equ	762	;# 
 12622   0002FB                     U5BRGH          equ	763	;# 
 12623   0002FC                     U5FIFO          equ	764	;# 
 12624   0002FD                     U5UIR           equ	765	;# 
 12625   0002FE                     U5ERRIR         equ	766	;# 
 12626   0002FF                     U5ERRIE         equ	767	;# 
 12627   000300                     SMT1TMR         equ	768	;# 
 12628   000300                     SMT1TMRL        equ	768	;# 
 12629   000301                     SMT1TMRH        equ	769	;# 
 12630   000302                     SMT1TMRU        equ	770	;# 
 12631   000303                     SMT1CPR         equ	771	;# 
 12632   000303                     SMT1CPRL        equ	771	;# 
 12633   000304                     SMT1CPRH        equ	772	;# 
 12634   000305                     SMT1CPRU        equ	773	;# 
 12635   000306                     SMT1CPW         equ	774	;# 
 12636   000306                     SMT1CPWL        equ	774	;# 
 12637   000307                     SMT1CPWH        equ	775	;# 
 12638   000308                     SMT1CPWU        equ	776	;# 
 12639   000309                     SMT1PR          equ	777	;# 
 12640   000309                     SMT1PRL         equ	777	;# 
 12641   00030A                     SMT1PRH         equ	778	;# 
 12642   00030B                     SMT1PRU         equ	779	;# 
 12643   00030C                     SMT1CON0        equ	780	;# 
 12644   00030D                     SMT1CON1        equ	781	;# 
 12645   00030E                     SMT1STAT        equ	782	;# 
 12646   00030F                     SMT1CLK         equ	783	;# 
 12647   000310                     SMT1SIG         equ	784	;# 
 12648   000311                     SMT1WIN         equ	785	;# 
 12649   000318                     TMR0L           equ	792	;# 
 12650   000318                     TMR0            equ	792	;# 
 12651   000319                     TMR0H           equ	793	;# 
 12652   000319                     PR0             equ	793	;# 
 12653   00031A                     T0CON0          equ	794	;# 
 12654   00031B                     T0CON1          equ	795	;# 
 12655   00031C                     TMR1            equ	796	;# 
 12656   00031C                     TMR1L           equ	796	;# 
 12657   00031D                     TMR1H           equ	797	;# 
 12658   00031E                     T1CON           equ	798	;# 
 12659   00031E                     TMR1CON         equ	798	;# 
 12660   00031F                     T1GCON          equ	799	;# 
 12661   00031F                     TMR1GCON        equ	799	;# 
 12662   000320                     T1GATE          equ	800	;# 
 12663   000320                     TMR1GATE        equ	800	;# 
 12664   000321                     T1CLK           equ	801	;# 
 12665   000321                     TMR1CLK         equ	801	;# 
 12666   000321                     PR1             equ	801	;# 
 12667   000322                     T2TMR           equ	802	;# 
 12668   000322                     TMR2            equ	802	;# 
 12669   000323                     T2PR            equ	803	;# 
 12670   000323                     PR2             equ	803	;# 
 12671   000324                     T2CON           equ	804	;# 
 12672   000325                     T2HLT           equ	805	;# 
 12673   000326                     T2CLKCON        equ	806	;# 
 12674   000326                     T2CLK           equ	806	;# 
 12675   000327                     T2RST           equ	807	;# 
 12676   000328                     TMR3            equ	808	;# 
 12677   000328                     TMR3L           equ	808	;# 
 12678   000329                     TMR3H           equ	809	;# 
 12679   00032A                     T3CON           equ	810	;# 
 12680   00032A                     TMR3CON         equ	810	;# 
 12681   00032B                     T3GCON          equ	811	;# 
 12682   00032B                     TMR3GCON        equ	811	;# 
 12683   00032C                     T3GATE          equ	812	;# 
 12684   00032C                     TMR3GATE        equ	812	;# 
 12685   00032D                     T3CLK           equ	813	;# 
 12686   00032D                     TMR3CLK         equ	813	;# 
 12687   00032D                     PR3             equ	813	;# 
 12688   00032E                     T4TMR           equ	814	;# 
 12689   00032E                     TMR4            equ	814	;# 
 12690   00032F                     T4PR            equ	815	;# 
 12691   00032F                     PR4             equ	815	;# 
 12692   000330                     T4CON           equ	816	;# 
 12693   000331                     T4HLT           equ	817	;# 
 12694   000332                     T4CLKCON        equ	818	;# 
 12695   000332                     T4CLK           equ	818	;# 
 12696   000333                     T4RST           equ	819	;# 
 12697   000334                     TMR5            equ	820	;# 
 12698   000334                     TMR5L           equ	820	;# 
 12699   000335                     TMR5H           equ	821	;# 
 12700   000336                     T5CON           equ	822	;# 
 12701   000336                     TMR5CON         equ	822	;# 
 12702   000337                     T5GCON          equ	823	;# 
 12703   000337                     TMR5GCON        equ	823	;# 
 12704   000338                     T5GATE          equ	824	;# 
 12705   000338                     TMR5GATE        equ	824	;# 
 12706   000339                     T5CLK           equ	825	;# 
 12707   000339                     TMR5CLK         equ	825	;# 
 12708   000339                     PR5             equ	825	;# 
 12709   00033A                     T6TMR           equ	826	;# 
 12710   00033A                     TMR6            equ	826	;# 
 12711   00033B                     T6PR            equ	827	;# 
 12712   00033B                     PR6             equ	827	;# 
 12713   00033C                     T6CON           equ	828	;# 
 12714   00033D                     T6HLT           equ	829	;# 
 12715   00033E                     T6CLKCON        equ	830	;# 
 12716   00033E                     T6CLK           equ	830	;# 
 12717   00033F                     T6RST           equ	831	;# 
 12718   000340                     CCPR1           equ	832	;# 
 12719   000340                     CCPR1L          equ	832	;# 
 12720   000341                     CCPR1H          equ	833	;# 
 12721   000342                     CCP1CON         equ	834	;# 
 12722   000343                     CCP1CAP         equ	835	;# 
 12723   000344                     CCPR2           equ	836	;# 
 12724   000344                     CCPR2L          equ	836	;# 
 12725   000345                     CCPR2H          equ	837	;# 
 12726   000346                     CCP2CON         equ	838	;# 
 12727   000347                     CCP2CAP         equ	839	;# 
 12728   000348                     CCPR3           equ	840	;# 
 12729   000348                     CCPR3L          equ	840	;# 
 12730   000349                     CCPR3H          equ	841	;# 
 12731   00034A                     CCP3CON         equ	842	;# 
 12732   00034B                     CCP3CAP         equ	843	;# 
 12733   00034C                     CCPTMRS0        equ	844	;# 
 12734   00034F                     CRCDATA         equ	847	;# 
 12735   00034F                     CRCDATAL        equ	847	;# 
 12736   000350                     CRCDATAH        equ	848	;# 
 12737   000351                     CRCDATAU        equ	849	;# 
 12738   000352                     CRCDATAT        equ	850	;# 
 12739   000353                     CRCOUT          equ	851	;# 
 12740   000353                     CRCSHFT         equ	851	;# 
 12741   000353                     CRCXOR          equ	851	;# 
 12742   000353                     CRCOUTL         equ	851	;# 
 12743   000353                     CRCSHFTL        equ	851	;# 
 12744   000353                     CRCSHIFTL       equ	851	;# 
 12745   000353                     CRCXORL         equ	851	;# 
 12746   000354                     CRCOUTH         equ	852	;# 
 12747   000354                     CRCSHFTH        equ	852	;# 
 12748   000354                     CRCSHIFTH       equ	852	;# 
 12749   000354                     CRCXORH         equ	852	;# 
 12750   000355                     CRCOUTU         equ	853	;# 
 12751   000355                     CRCSHFTU        equ	853	;# 
 12752   000355                     CRCSHIFTU       equ	853	;# 
 12753   000355                     CRCXORU         equ	853	;# 
 12754   000356                     CRCOUTT         equ	854	;# 
 12755   000356                     CRCSHFTT        equ	854	;# 
 12756   000356                     CRCSHIFTT       equ	854	;# 
 12757   000356                     CRCXORT         equ	854	;# 
 12758   000357                     CRCCON0         equ	855	;# 
 12759   000358                     CRCCON1         equ	856	;# 
 12760   000359                     CRCCON2         equ	857	;# 
 12761   00035A                     SCANLADR        equ	858	;# 
 12762   00035A                     SCANLADRL       equ	858	;# 
 12763   00035B                     SCANLADRH       equ	859	;# 
 12764   00035C                     SCANLADRU       equ	860	;# 
 12765   00035D                     SCANHADR        equ	861	;# 
 12766   00035D                     SCANHADRL       equ	861	;# 
 12767   00035E                     SCANHADRH       equ	862	;# 
 12768   00035F                     SCANHADRU       equ	863	;# 
 12769   000360                     SCANCON0        equ	864	;# 
 12770   000361                     SCANTRIG        equ	865	;# 
 12771   000362                     IPR0            equ	866	;# 
 12772   000363                     IPR1            equ	867	;# 
 12773   000364                     IPR2            equ	868	;# 
 12774   000365                     IPR3            equ	869	;# 
 12775   000366                     IPR4            equ	870	;# 
 12776   000367                     IPR5            equ	871	;# 
 12777   000368                     IPR6            equ	872	;# 
 12778   000369                     IPR7            equ	873	;# 
 12779   00036A                     IPR8            equ	874	;# 
 12780   00036B                     IPR9            equ	875	;# 
 12781   00036C                     IPR10           equ	876	;# 
 12782   00036D                     IPR11           equ	877	;# 
 12783   00036E                     IPR12           equ	878	;# 
 12784   00036F                     IPR13           equ	879	;# 
 12785   000370                     IPR14           equ	880	;# 
 12786   000371                     IPR15           equ	881	;# 
 12787   000373                     STATUS_CSHAD    equ	883	;# 
 12788   000374                     WREG_CSHAD      equ	884	;# 
 12789   000375                     BSR_CSHAD       equ	885	;# 
 12790   000376                     SHADCON         equ	886	;# 
 12791   000377                     STATUS_SHAD     equ	887	;# 
 12792   000378                     WREG_SHAD       equ	888	;# 
 12793   000379                     BSR_SHAD        equ	889	;# 
 12794   00037A                     PCLATH_SHAD     equ	890	;# 
 12795   00037B                     PCLATU_SHAD     equ	891	;# 
 12796   00037C                     FSR0SH          equ	892	;# 
 12797   00037C                     FSR0L_SHAD      equ	892	;# 
 12798   00037D                     FSR0H_SHAD      equ	893	;# 
 12799   00037E                     FSR1SH          equ	894	;# 
 12800   00037E                     FSR1L_SHAD      equ	894	;# 
 12801   00037F                     FSR1H_SHAD      equ	895	;# 
 12802   000380                     FSR2SH          equ	896	;# 
 12803   000380                     FSR2L_SHAD      equ	896	;# 
 12804   000381                     FSR2H_SHAD      equ	897	;# 
 12805   000382                     PRODSH          equ	898	;# 
 12806   000382                     PRODL_SHAD      equ	898	;# 
 12807   000383                     PRODH_SHAD      equ	899	;# 
 12808   000387                     TU16ACON0       equ	903	;# 
 12809   000388                     TU16ACON1       equ	904	;# 
 12810   000389                     TU16AHLT        equ	905	;# 
 12811   00038A                     TU16APS         equ	906	;# 
 12812   00038B                     TU16ATMR        equ	907	;# 
 12813   00038B                     TU16ACR         equ	907	;# 
 12814   00038B                     TU16ATMRL       equ	907	;# 
 12815   00038B                     TU16ACRL        equ	907	;# 
 12816   00038C                     TU16ATMRH       equ	908	;# 
 12817   00038C                     TU16ACRH        equ	908	;# 
 12818   00038D                     TU16APR         equ	909	;# 
 12819   00038D                     TU16APRL        equ	909	;# 
 12820   00038E                     TU16APRH        equ	910	;# 
 12821   00038F                     TU16ACLK        equ	911	;# 
 12822   000390                     TU16AERS        equ	912	;# 
 12823   000393                     TU16BCON0       equ	915	;# 
 12824   000394                     TU16BCON1       equ	916	;# 
 12825   000395                     TU16BHLT        equ	917	;# 
 12826   000396                     TU16BPS         equ	918	;# 
 12827   000397                     TU16BTMR        equ	919	;# 
 12828   000397                     TU16BCR         equ	919	;# 
 12829   000397                     TU16BTMRL       equ	919	;# 
 12830   000397                     TU16BCRL        equ	919	;# 
 12831   000398                     TU16BTMRH       equ	920	;# 
 12832   000398                     TU16BCRH        equ	920	;# 
 12833   000399                     TU16BPR         equ	921	;# 
 12834   000399                     TU16BPRL        equ	921	;# 
 12835   00039A                     TU16BPRH        equ	922	;# 
 12836   00039B                     TU16BCLK        equ	923	;# 
 12837   00039C                     TU16BERS        equ	924	;# 
 12838   0003BB                     TUCHAIN         equ	955	;# 
 12839   0003BC                     CWG1CLK         equ	956	;# 
 12840   0003BC                     CWG1CLKCON      equ	956	;# 
 12841   0003BD                     CWG1ISM         equ	957	;# 
 12842   0003BE                     CWG1DBR         equ	958	;# 
 12843   0003BF                     CWG1DBF         equ	959	;# 
 12844   0003C0                     CWG1CON0        equ	960	;# 
 12845   0003C1                     CWG1CON1        equ	961	;# 
 12846   0003C2                     CWG1AS0         equ	962	;# 
 12847   0003C3                     CWG1AS1         equ	963	;# 
 12848   0003C4                     CWG1STR         equ	964	;# 
 12849   0003C5                     CWG2CLK         equ	965	;# 
 12850   0003C5                     CWG2CLKCON      equ	965	;# 
 12851   0003C6                     CWG2ISM         equ	966	;# 
 12852   0003C7                     CWG2DBR         equ	967	;# 
 12853   0003C8                     CWG2DBF         equ	968	;# 
 12854   0003C9                     CWG2CON0        equ	969	;# 
 12855   0003CA                     CWG2CON1        equ	970	;# 
 12856   0003CB                     CWG2AS0         equ	971	;# 
 12857   0003CC                     CWG2AS1         equ	972	;# 
 12858   0003CD                     CWG2STR         equ	973	;# 
 12859   0003CE                     CWG3CLK         equ	974	;# 
 12860   0003CE                     CWG3CLKCON      equ	974	;# 
 12861   0003CF                     CWG3ISM         equ	975	;# 
 12862   0003D0                     CWG3DBR         equ	976	;# 
 12863   0003D1                     CWG3DBF         equ	977	;# 
 12864   0003D2                     CWG3CON0        equ	978	;# 
 12865   0003D3                     CWG3CON1        equ	979	;# 
 12866   0003D4                     CWG3AS0         equ	980	;# 
 12867   0003D5                     CWG3AS1         equ	981	;# 
 12868   0003D6                     CWG3STR         equ	982	;# 
 12869   0003D7                     FVRCON          equ	983	;# 
 12870   0003D8                     ADCPCON         equ	984	;# 
 12871   0003D8                     ADCP            equ	984	;# 
 12872   0003D9                     ADLTH           equ	985	;# 
 12873   0003D9                     ADLTHL          equ	985	;# 
 12874   0003DA                     ADLTHH          equ	986	;# 
 12875   0003DB                     ADUTH           equ	987	;# 
 12876   0003DB                     ADUTHL          equ	987	;# 
 12877   0003DC                     ADUTHH          equ	988	;# 
 12878   0003DD                     ADERR           equ	989	;# 
 12879   0003DD                     ADERRL          equ	989	;# 
 12880   0003DE                     ADERRH          equ	990	;# 
 12881   0003DF                     ADSTPT          equ	991	;# 
 12882   0003DF                     ADSTPTL         equ	991	;# 
 12883   0003E0                     ADSTPTH         equ	992	;# 
 12884   0003E1                     ADFLTR          equ	993	;# 
 12885   0003E1                     ADFLTRL         equ	993	;# 
 12886   0003E2                     ADFLTRH         equ	994	;# 
 12887   0003E3                     ADACC           equ	995	;# 
 12888   0003E3                     ADACCL          equ	995	;# 
 12889   0003E4                     ADACCH          equ	996	;# 
 12890   0003E5                     ADACCU          equ	997	;# 
 12891   0003E6                     ADCNT           equ	998	;# 
 12892   0003E7                     ADRPT           equ	999	;# 
 12893   0003E8                     ADPREV          equ	1000	;# 
 12894   0003E8                     ADPREVL         equ	1000	;# 
 12895   0003E9                     ADPREVH         equ	1001	;# 
 12896   0003EA                     ADRES           equ	1002	;# 
 12897   0003EA                     ADRESL          equ	1002	;# 
 12898   0003EB                     ADRESH          equ	1003	;# 
 12899   0003EC                     ADPCH           equ	1004	;# 
 12900   0003EE                     ADACQ           equ	1006	;# 
 12901   0003EE                     ADACQL          equ	1006	;# 
 12902   0003EF                     ADACQH          equ	1007	;# 
 12903   0003F0                     ADCAP           equ	1008	;# 
 12904   0003F1                     ADPRE           equ	1009	;# 
 12905   0003F1                     ADPREL          equ	1009	;# 
 12906   0003F2                     ADPREH          equ	1010	;# 
 12907   0003F3                     ADCON0          equ	1011	;# 
 12908   0003F4                     ADCON1          equ	1012	;# 
 12909   0003F5                     ADCON2          equ	1013	;# 
 12910   0003F6                     ADCON3          equ	1014	;# 
 12911   0003F7                     ADSTAT          equ	1015	;# 
 12912   0003F8                     ADREF           equ	1016	;# 
 12913   0003F9                     ADACT           equ	1017	;# 
 12914   0003FA                     ADCLK           equ	1018	;# 
 12915   0003FB                     ADCTX           equ	1019	;# 
 12916   0003FC                     ADCSEL1         equ	1020	;# 
 12917   0003FD                     ADCSEL2         equ	1021	;# 
 12918   0003FE                     ADCSEL3         equ	1022	;# 
 12919   0003FF                     ADCSEL4         equ	1023	;# 
 12920   000400                     ANSELA          equ	1024	;# 
 12921   000401                     WPUA            equ	1025	;# 
 12922   000402                     ODCONA          equ	1026	;# 
 12923   000403                     SLRCONA         equ	1027	;# 
 12924   000404                     INLVLA          equ	1028	;# 
 12925   000405                     IOCAP           equ	1029	;# 
 12926   000406                     IOCAN           equ	1030	;# 
 12927   000407                     IOCAF           equ	1031	;# 
 12928   000408                     ANSELB          equ	1032	;# 
 12929   000409                     WPUB            equ	1033	;# 
 12930   00040A                     ODCONB          equ	1034	;# 
 12931   00040B                     SLRCONB         equ	1035	;# 
 12932   00040C                     INLVLB          equ	1036	;# 
 12933   00040D                     IOCBP           equ	1037	;# 
 12934   00040E                     IOCBN           equ	1038	;# 
 12935   00040F                     IOCBF           equ	1039	;# 
 12936   000410                     ANSELC          equ	1040	;# 
 12937   000411                     WPUC            equ	1041	;# 
 12938   000412                     ODCONC          equ	1042	;# 
 12939   000413                     SLRCONC         equ	1043	;# 
 12940   000414                     INLVLC          equ	1044	;# 
 12941   000415                     IOCCP           equ	1045	;# 
 12942   000416                     IOCCN           equ	1046	;# 
 12943   000417                     IOCCF           equ	1047	;# 
 12944   000421                     WPUE            equ	1057	;# 
 12945   000424                     INLVLE          equ	1060	;# 
 12946   000425                     IOCEP           equ	1061	;# 
 12947   000426                     IOCEN           equ	1062	;# 
 12948   000427                     IOCEF           equ	1063	;# 
 12949   000440                     NCO1ACC         equ	1088	;# 
 12950   000440                     NCO1ACCL        equ	1088	;# 
 12951   000441                     NCO1ACCH        equ	1089	;# 
 12952   000442                     NCO1ACCU        equ	1090	;# 
 12953   000443                     NCO1INC         equ	1091	;# 
 12954   000443                     NCO1INCL        equ	1091	;# 
 12955   000444                     NCO1INCH        equ	1092	;# 
 12956   000445                     NCO1INCU        equ	1093	;# 
 12957   000446                     NCO1CON         equ	1094	;# 
 12958   000447                     NCO1CLK         equ	1095	;# 
 12959   000448                     NCO2ACC         equ	1096	;# 
 12960   000448                     NCO2ACCL        equ	1096	;# 
 12961   000449                     NCO2ACCH        equ	1097	;# 
 12962   00044A                     NCO2ACCU        equ	1098	;# 
 12963   00044B                     NCO2INC         equ	1099	;# 
 12964   00044B                     NCO2INCL        equ	1099	;# 
 12965   00044C                     NCO2INCH        equ	1100	;# 
 12966   00044D                     NCO2INCU        equ	1101	;# 
 12967   00044E                     NCO2CON         equ	1102	;# 
 12968   00044F                     NCO2CLK         equ	1103	;# 
 12969   000450                     NCO3ACC         equ	1104	;# 
 12970   000450                     NCO3ACCL        equ	1104	;# 
 12971   000451                     NCO3ACCH        equ	1105	;# 
 12972   000452                     NCO3ACCU        equ	1106	;# 
 12973   000453                     NCO3INC         equ	1107	;# 
 12974   000453                     NCO3INCL        equ	1107	;# 
 12975   000454                     NCO3INCH        equ	1108	;# 
 12976   000455                     NCO3INCU        equ	1109	;# 
 12977   000456                     NCO3CON         equ	1110	;# 
 12978   000457                     NCO3CLK         equ	1111	;# 
 12979   000458                     FSCMCON         equ	1112	;# 
 12980   000459                     IVTLOCK         equ	1113	;# 
 12981   00045A                     IVTAD           equ	1114	;# 
 12982   00045A                     IVTADL          equ	1114	;# 
 12983   00045B                     IVTADH          equ	1115	;# 
 12984   00045C                     IVTADU          equ	1116	;# 
 12985   00045D                     IVTBASE         equ	1117	;# 
 12986   00045D                     IVTBASEL        equ	1117	;# 
 12987   00045E                     IVTBASEH        equ	1118	;# 
 12988   00045F                     IVTBASEU        equ	1119	;# 
 12989   000460                     PWM1ERS         equ	1120	;# 
 12990   000461                     PWM1CLK         equ	1121	;# 
 12991   000462                     PWM1LDS         equ	1122	;# 
 12992   000463                     PWM1PR          equ	1123	;# 
 12993   000463                     PWM1PRL         equ	1123	;# 
 12994   000464                     PWM1PRH         equ	1124	;# 
 12995   000465                     PWM1CPRE        equ	1125	;# 
 12996   000466                     PWM1PIPOS       equ	1126	;# 
 12997   000467                     PWM1GIR         equ	1127	;# 
 12998   000468                     PWM1GIE         equ	1128	;# 
 12999   000469                     PWM1CON         equ	1129	;# 
 13000   00046A                     PWM1S1CFG       equ	1130	;# 
 13001   00046B                     PWM1S1P1        equ	1131	;# 
 13002   00046B                     PWM1S1P1L       equ	1131	;# 
 13003   00046C                     PWM1S1P1H       equ	1132	;# 
 13004   00046D                     PWM1S1P2        equ	1133	;# 
 13005   00046D                     PWM1S1P2L       equ	1133	;# 
 13006   00046E                     PWM1S1P2H       equ	1134	;# 
 13007   00046F                     PWM2ERS         equ	1135	;# 
 13008   000470                     PWM2CLK         equ	1136	;# 
 13009   000471                     PWM2LDS         equ	1137	;# 
 13010   000472                     PWM2PR          equ	1138	;# 
 13011   000472                     PWM2PRL         equ	1138	;# 
 13012   000473                     PWM2PRH         equ	1139	;# 
 13013   000474                     PWM2CPRE        equ	1140	;# 
 13014   000475                     PWM2PIPOS       equ	1141	;# 
 13015   000476                     PWM2GIR         equ	1142	;# 
 13016   000477                     PWM2GIE         equ	1143	;# 
 13017   000478                     PWM2CON         equ	1144	;# 
 13018   000479                     PWM2S1CFG       equ	1145	;# 
 13019   00047A                     PWM2S1P1        equ	1146	;# 
 13020   00047A                     PWM2S1P1L       equ	1146	;# 
 13021   00047B                     PWM2S1P1H       equ	1147	;# 
 13022   00047C                     PWM2S1P2        equ	1148	;# 
 13023   00047C                     PWM2S1P2L       equ	1148	;# 
 13024   00047D                     PWM2S1P2H       equ	1149	;# 
 13025   00047E                     PWM3ERS         equ	1150	;# 
 13026   00047F                     PWM3CLK         equ	1151	;# 
 13027   000480                     PWM3LDS         equ	1152	;# 
 13028   000481                     PWM3PR          equ	1153	;# 
 13029   000481                     PWM3PRL         equ	1153	;# 
 13030   000482                     PWM3PRH         equ	1154	;# 
 13031   000483                     PWM3CPRE        equ	1155	;# 
 13032   000484                     PWM3PIPOS       equ	1156	;# 
 13033   000485                     PWM3GIR         equ	1157	;# 
 13034   000486                     PWM3GIE         equ	1158	;# 
 13035   000487                     PWM3CON         equ	1159	;# 
 13036   000488                     PWM3S1CFG       equ	1160	;# 
 13037   000489                     PWM3S1P1        equ	1161	;# 
 13038   000489                     PWM3S1P1L       equ	1161	;# 
 13039   00048A                     PWM3S1P1H       equ	1162	;# 
 13040   00048B                     PWM3S1P2        equ	1163	;# 
 13041   00048B                     PWM3S1P2L       equ	1163	;# 
 13042   00048C                     PWM3S1P2H       equ	1164	;# 
 13043   00048D                     PWM4ERS         equ	1165	;# 
 13044   00048E                     PWM4CLK         equ	1166	;# 
 13045   00048F                     PWM4LDS         equ	1167	;# 
 13046   000490                     PWM4PR          equ	1168	;# 
 13047   000490                     PWM4PRL         equ	1168	;# 
 13048   000491                     PWM4PRH         equ	1169	;# 
 13049   000492                     PWM4CPRE        equ	1170	;# 
 13050   000493                     PWM4PIPOS       equ	1171	;# 
 13051   000494                     PWM4GIR         equ	1172	;# 
 13052   000495                     PWM4GIE         equ	1173	;# 
 13053   000496                     PWM4CON         equ	1174	;# 
 13054   000497                     PWM4S1CFG       equ	1175	;# 
 13055   000498                     PWM4S1P1        equ	1176	;# 
 13056   000498                     PWM4S1P1L       equ	1176	;# 
 13057   000499                     PWM4S1P1H       equ	1177	;# 
 13058   00049A                     PWM4S1P2        equ	1178	;# 
 13059   00049A                     PWM4S1P2L       equ	1178	;# 
 13060   00049B                     PWM4S1P2H       equ	1179	;# 
 13061   00049C                     PWMLOAD         equ	1180	;# 
 13062   00049D                     PWMEN           equ	1181	;# 
 13063   00049E                     PIE0            equ	1182	;# 
 13064   00049F                     PIE1            equ	1183	;# 
 13065   0004A0                     PIE2            equ	1184	;# 
 13066   0004A1                     PIE3            equ	1185	;# 
 13067   0004A2                     PIE4            equ	1186	;# 
 13068   0004A3                     PIE5            equ	1187	;# 
 13069   0004A4                     PIE6            equ	1188	;# 
 13070   0004A5                     PIE7            equ	1189	;# 
 13071   0004A6                     PIE8            equ	1190	;# 
 13072   0004A7                     PIE9            equ	1191	;# 
 13073   0004A8                     PIE10           equ	1192	;# 
 13074   0004A9                     PIE11           equ	1193	;# 
 13075   0004AA                     PIE12           equ	1194	;# 
 13076   0004AB                     PIE13           equ	1195	;# 
 13077   0004AC                     PIE14           equ	1196	;# 
 13078   0004AD                     PIE15           equ	1197	;# 
 13079   0004AE                     PIR0            equ	1198	;# 
 13080   0004AF                     PIR1            equ	1199	;# 
 13081   0004B0                     PIR2            equ	1200	;# 
 13082   0004B1                     PIR3            equ	1201	;# 
 13083   0004B2                     PIR4            equ	1202	;# 
 13084   0004B3                     PIR5            equ	1203	;# 
 13085   0004B4                     PIR6            equ	1204	;# 
 13086   0004B5                     PIR7            equ	1205	;# 
 13087   0004B6                     PIR8            equ	1206	;# 
 13088   0004B7                     PIR9            equ	1207	;# 
 13089   0004B8                     PIR10           equ	1208	;# 
 13090   0004B9                     PIR11           equ	1209	;# 
 13091   0004BA                     PIR12           equ	1210	;# 
 13092   0004BB                     PIR13           equ	1211	;# 
 13093   0004BC                     PIR14           equ	1212	;# 
 13094   0004BD                     PIR15           equ	1213	;# 
 13095   0004BE                     LATA            equ	1214	;# 
 13096   0004BF                     LATB            equ	1215	;# 
 13097   0004C0                     LATC            equ	1216	;# 
 13098   0004C6                     TRISA           equ	1222	;# 
 13099   0004C7                     TRISB           equ	1223	;# 
 13100   0004C8                     TRISC           equ	1224	;# 
 13101   0004CA                     TRISE           equ	1226	;# 
 13102   0004CE                     PORTA           equ	1230	;# 
 13103   0004CF                     PORTB           equ	1231	;# 
 13104   0004D0                     PORTC           equ	1232	;# 
 13105   0004D2                     PORTE           equ	1234	;# 
 13106   0004D6                     INTCON0         equ	1238	;# 
 13107   0004D7                     INTCON1         equ	1239	;# 
 13108   0004D8                     STATUS          equ	1240	;# 
 13109   0004D9                     FSR2            equ	1241	;# 
 13110   0004D9                     FSR2L           equ	1241	;# 
 13111   0004DA                     FSR2H           equ	1242	;# 
 13112   0004DB                     PLUSW2          equ	1243	;# 
 13113   0004DC                     PREINC2         equ	1244	;# 
 13114   0004DD                     POSTDEC2        equ	1245	;# 
 13115   0004DE                     POSTINC2        equ	1246	;# 
 13116   0004DF                     INDF2           equ	1247	;# 
 13117   0004E0                     BSR             equ	1248	;# 
 13118   0004E1                     FSR1            equ	1249	;# 
 13119   0004E1                     FSR1L           equ	1249	;# 
 13120   0004E2                     FSR1H           equ	1250	;# 
 13121   0004E3                     PLUSW1          equ	1251	;# 
 13122   0004E4                     PREINC1         equ	1252	;# 
 13123   0004E5                     POSTDEC1        equ	1253	;# 
 13124   0004E6                     POSTINC1        equ	1254	;# 
 13125   0004E7                     INDF1           equ	1255	;# 
 13126   0004E8                     WREG            equ	1256	;# 
 13127   0004E9                     FSR0            equ	1257	;# 
 13128   0004E9                     FSR0L           equ	1257	;# 
 13129   0004EA                     FSR0H           equ	1258	;# 
 13130   0004EB                     PLUSW0          equ	1259	;# 
 13131   0004EC                     PREINC0         equ	1260	;# 
 13132   0004ED                     POSTDEC0        equ	1261	;# 
 13133   0004EE                     POSTINC0        equ	1262	;# 
 13134   0004EF                     INDF0           equ	1263	;# 
 13135   0004F0                     PCON0           equ	1264	;# 
 13136   0004F1                     PCON1           equ	1265	;# 
 13137   0004F2                     CPUDOZE         equ	1266	;# 
 13138   0004F3                     PROD            equ	1267	;# 
 13139   0004F3                     PRODL           equ	1267	;# 
 13140   0004F4                     PRODH           equ	1268	;# 
 13141   0004F5                     TABLAT          equ	1269	;# 
 13142   0004F6                     TBLPTR          equ	1270	;# 
 13143   0004F6                     TBLPTRL         equ	1270	;# 
 13144   0004F7                     TBLPTRH         equ	1271	;# 
 13145   0004F8                     TBLPTRU         equ	1272	;# 
 13146   0004F9                     PCLAT           equ	1273	;# 
 13147   0004F9                     PCL             equ	1273	;# 
 13148   0004FA                     PCLATH          equ	1274	;# 
 13149   0004FB                     PCLATU          equ	1275	;# 
 13150   0004FC                     STKPTR          equ	1276	;# 
 13151   0004FD                     TOS             equ	1277	;# 
 13152   0004FD                     TOSL            equ	1277	;# 
 13153   0004FE                     TOSH            equ	1278	;# 
 13154   0004FF                     TOSU            equ	1279	;# 
 13155   000038                     BOOTREG         equ	56	;# 
 13156   000039                     CLKRCON         equ	57	;# 
 13157   00003A                     CLKRCLK         equ	58	;# 
 13158   000040                     NVMCON0         equ	64	;# 
 13159   000041                     NVMCON1         equ	65	;# 
 13160   000042                     NVMLOCK         equ	66	;# 
 13161   000043                     NVMADR          equ	67	;# 
 13162   000043                     NVMADRL         equ	67	;# 
 13163   000044                     NVMADRH         equ	68	;# 
 13164   000045                     NVMADRU         equ	69	;# 
 13165   000046                     NVMDAT          equ	70	;# 
 13166   000046                     NVMDATL         equ	70	;# 
 13167   000047                     NVMDATH         equ	71	;# 
 13168   000048                     VREGCON         equ	72	;# 
 13169   000049                     BORCON          equ	73	;# 
 13170   00004A                     HLVDCON0        equ	74	;# 
 13171   00004B                     HLVDCON1        equ	75	;# 
 13172   00004C                     ZCDCON          equ	76	;# 
 13173   000060                     PMD0            equ	96	;# 
 13174   000061                     PMD1            equ	97	;# 
 13175   000062                     PMD2            equ	98	;# 
 13176   000063                     PMD3            equ	99	;# 
 13177   000064                     PMD4            equ	100	;# 
 13178   000065                     PMD5            equ	101	;# 
 13179   000066                     PMD6            equ	102	;# 
 13180   000067                     PMD7            equ	103	;# 
 13181   000068                     PMD8            equ	104	;# 
 13182   00006A                     MD1CON0         equ	106	;# 
 13183   00006B                     MD1CON1         equ	107	;# 
 13184   00006C                     MD1SRC          equ	108	;# 
 13185   00006D                     MD1CARL         equ	109	;# 
 13186   00006E                     MD1CARH         equ	110	;# 
 13187   00006F                     CMOUT           equ	111	;# 
 13188   000070                     CM1CON0         equ	112	;# 
 13189   000071                     CM1CON1         equ	113	;# 
 13190   000072                     CM1NCH          equ	114	;# 
 13191   000073                     CM1PCH          equ	115	;# 
 13192   000074                     CM2CON0         equ	116	;# 
 13193   000075                     CM2CON1         equ	117	;# 
 13194   000076                     CM2NCH          equ	118	;# 
 13195   000077                     CM2PCH          equ	119	;# 
 13196   000078                     WDTCON0         equ	120	;# 
 13197   000079                     WDTCON1         equ	121	;# 
 13198   00007A                     WDTPSL          equ	122	;# 
 13199   00007B                     WDTPSH          equ	123	;# 
 13200   00007C                     WDTTMR          equ	124	;# 
 13201   00007D                     DAC1DAT         equ	125	;# 
 13202   00007D                     DAC1DATL        equ	125	;# 
 13203   00007F                     DAC1CON         equ	127	;# 
 13204   000080                     SPI1RXB         equ	128	;# 
 13205   000081                     SPI1TXB         equ	129	;# 
 13206   000082                     SPI1TCNT        equ	130	;# 
 13207   000082                     SPI1TCNTL       equ	130	;# 
 13208   000083                     SPI1TCNTH       equ	131	;# 
 13209   000084                     SPI1CON0        equ	132	;# 
 13210   000085                     SPI1CON1        equ	133	;# 
 13211   000086                     SPI1CON2        equ	134	;# 
 13212   000087                     SPI1STATUS      equ	135	;# 
 13213   000088                     SPI1TWIDTH      equ	136	;# 
 13214   000089                     SPI1BAUD        equ	137	;# 
 13215   00008A                     SPI1INTF        equ	138	;# 
 13216   00008B                     SPI1INTE        equ	139	;# 
 13217   00008C                     SPI1CLK         equ	140	;# 
 13218   00008D                     SPI2RXB         equ	141	;# 
 13219   00008E                     SPI2TXB         equ	142	;# 
 13220   00008F                     SPI2TCNT        equ	143	;# 
 13221   00008F                     SPI2TCNTL       equ	143	;# 
 13222   000090                     SPI2TCNTH       equ	144	;# 
 13223   000091                     SPI2CON0        equ	145	;# 
 13224   000092                     SPI2CON1        equ	146	;# 
 13225   000093                     SPI2CON2        equ	147	;# 
 13226   000094                     SPI2STATUS      equ	148	;# 
 13227   000095                     SPI2TWIDTH      equ	149	;# 
 13228   000096                     SPI2BAUD        equ	150	;# 
 13229   000097                     SPI2INTF        equ	151	;# 
 13230   000098                     SPI2INTE        equ	152	;# 
 13231   000099                     SPI2CLK         equ	153	;# 
 13232   0000AC                     ACTCON          equ	172	;# 
 13233   0000AD                     OSCCON1         equ	173	;# 
 13234   0000AE                     OSCCON2         equ	174	;# 
 13235   0000AF                     OSCCON3         equ	175	;# 
 13236   0000B0                     OSCTUNE         equ	176	;# 
 13237   0000B1                     OSCFRQ          equ	177	;# 
 13238   0000B1                     OSCFREQ         equ	177	;# 
 13239   0000B2                     OSCSTAT         equ	178	;# 
 13240   0000B2                     OSCSTAT1        equ	178	;# 
 13241   0000B3                     OSCEN           equ	179	;# 
 13242   0000B4                     PRLOCK          equ	180	;# 
 13243   0000B5                     SCANPR          equ	181	;# 
 13244   0000B6                     DMA1PR          equ	182	;# 
 13245   0000B7                     DMA2PR          equ	183	;# 
 13246   0000B8                     DMA3PR          equ	184	;# 
 13247   0000B9                     DMA4PR          equ	185	;# 
 13248   0000BA                     DMA5PR          equ	186	;# 
 13249   0000BB                     DMA6PR          equ	187	;# 
 13250   0000BC                     DMA7PR          equ	188	;# 
 13251   0000BD                     DMA8PR          equ	189	;# 
 13252   0000BE                     MAINPR          equ	190	;# 
 13253   0000BF                     ISRPR           equ	191	;# 
 13254   0000D4                     CLCDATA         equ	212	;# 
 13255   0000D5                     CLCSELECT       equ	213	;# 
 13256   0000D6                     CLCnCON         equ	214	;# 
 13257   0000D7                     CLCnPOL         equ	215	;# 
 13258   0000D8                     CLCnSEL0        equ	216	;# 
 13259   0000D9                     CLCnSEL1        equ	217	;# 
 13260   0000DA                     CLCnSEL2        equ	218	;# 
 13261   0000DB                     CLCnSEL3        equ	219	;# 
 13262   0000DC                     CLCnGLS0        equ	220	;# 
 13263   0000DD                     CLCnGLS1        equ	221	;# 
 13264   0000DE                     CLCnGLS2        equ	222	;# 
 13265   0000DF                     CLCnGLS3        equ	223	;# 
 13266   0000E8                     DMASELECT       equ	232	;# 
 13267   0000E9                     DMAnBUF         equ	233	;# 
 13268   0000EA                     DMAnDCNT        equ	234	;# 
 13269   0000EA                     DMAnDCNTL       equ	234	;# 
 13270   0000EB                     DMAnDCNTH       equ	235	;# 
 13271   0000EC                     DMAnDPTR        equ	236	;# 
 13272   0000EC                     DMAnDPTRL       equ	236	;# 
 13273   0000ED                     DMAnDPTRH       equ	237	;# 
 13274   0000EE                     DMAnDSZ         equ	238	;# 
 13275   0000EE                     DMAnDSZL        equ	238	;# 
 13276   0000EF                     DMAnDSZH        equ	239	;# 
 13277   0000F0                     DMAnDSA         equ	240	;# 
 13278   0000F0                     DMAnDSAL        equ	240	;# 
 13279   0000F1                     DMAnDSAH        equ	241	;# 
 13280   0000F2                     DMAnSCNT        equ	242	;# 
 13281   0000F2                     DMAnSCNTL       equ	242	;# 
 13282   0000F3                     DMAnSCNTH       equ	243	;# 
 13283   0000F4                     DMAnSPTR        equ	244	;# 
 13284   0000F4                     DMAnSPTRL       equ	244	;# 
 13285   0000F5                     DMAnSPTRH       equ	245	;# 
 13286   0000F6                     DMAnSPTRU       equ	246	;# 
 13287   0000F7                     DMAnSSZ         equ	247	;# 
 13288   0000F7                     DMAnSSZL        equ	247	;# 
 13289   0000F8                     DMAnSSZH        equ	248	;# 
 13290   0000F9                     DMAnSSA         equ	249	;# 
 13291   0000F9                     DMAnSSAL        equ	249	;# 
 13292   0000FA                     DMAnSSAH        equ	250	;# 
 13293   0000FB                     DMAnSSAU        equ	251	;# 
 13294   0000FC                     DMAnCON0        equ	252	;# 
 13295   0000FD                     DMAnCON1        equ	253	;# 
 13296   0000FE                     DMAnAIRQ        equ	254	;# 
 13297   0000FF                     DMAnSIRQ        equ	255	;# 
 13298   000100                     C1CONL          equ	256	;# 
 13299   000101                     C1CONH          equ	257	;# 
 13300   000102                     C1CONU          equ	258	;# 
 13301   000103                     C1CONT          equ	259	;# 
 13302   000104                     C1NBTCFGL       equ	260	;# 
 13303   000105                     C1NBTCFGH       equ	261	;# 
 13304   000106                     C1NBTCFGU       equ	262	;# 
 13305   000107                     C1NBTCFGT       equ	263	;# 
 13306   000108                     C1DBTCFGL       equ	264	;# 
 13307   000109                     C1DBTCFGH       equ	265	;# 
 13308   00010A                     C1DBTCFGU       equ	266	;# 
 13309   00010B                     C1DBTCFGT       equ	267	;# 
 13310   00010C                     C1TDCL          equ	268	;# 
 13311   00010D                     C1TDCH          equ	269	;# 
 13312   00010E                     C1TDCU          equ	270	;# 
 13313   000110                     C1TBC           equ	272	;# 
 13314   000110                     C1TBCL          equ	272	;# 
 13315   000111                     C1TBCH          equ	273	;# 
 13316   000112                     C1TBCU          equ	274	;# 
 13317   000113                     C1TBCT          equ	275	;# 
 13318   000114                     C1TSCONL        equ	276	;# 
 13319   000115                     C1TSCONH        equ	277	;# 
 13320   000116                     C1TSCONU        equ	278	;# 
 13321   000117                     C1TSCONT        equ	279	;# 
 13322   000118                     C1VECL          equ	280	;# 
 13323   000119                     C1VECH          equ	281	;# 
 13324   00011A                     C1VECU          equ	282	;# 
 13325   00011B                     C1VECT          equ	283	;# 
 13326   00011C                     C1INTL          equ	284	;# 
 13327   00011D                     C1INTH          equ	285	;# 
 13328   00011E                     C1INTU          equ	286	;# 
 13329   00011F                     C1INTT          equ	287	;# 
 13330   000120                     C1RXIF          equ	288	;# 
 13331   000120                     C1RXIFL         equ	288	;# 
 13332   000121                     C1RXIFH         equ	289	;# 
 13333   000122                     C1RXIFU         equ	290	;# 
 13334   000123                     C1RXIFT         equ	291	;# 
 13335   000124                     C1TXIF          equ	292	;# 
 13336   000124                     C1TXIFL         equ	292	;# 
 13337   000125                     C1TXIFH         equ	293	;# 
 13338   000126                     C1TXIFU         equ	294	;# 
 13339   000127                     C1TXIFT         equ	295	;# 
 13340   000128                     C1RXOVIF        equ	296	;# 
 13341   000128                     C1RXOVIFL       equ	296	;# 
 13342   000129                     C1RXOVIFH       equ	297	;# 
 13343   00012A                     C1RXOVIFU       equ	298	;# 
 13344   00012B                     C1RXOVIFT       equ	299	;# 
 13345   00012C                     C1TXATIF        equ	300	;# 
 13346   00012C                     C1TXATIFL       equ	300	;# 
 13347   00012D                     C1TXATIFH       equ	301	;# 
 13348   00012E                     C1TXATIFU       equ	302	;# 
 13349   00012F                     C1TXATIFT       equ	303	;# 
 13350   000130                     C1TXREQ         equ	304	;# 
 13351   000130                     C1TXREQL        equ	304	;# 
 13352   000131                     C1TXREQH        equ	305	;# 
 13353   000132                     C1TXREQU        equ	306	;# 
 13354   000133                     C1TXREQT        equ	307	;# 
 13355   000134                     C1TRECL         equ	308	;# 
 13356   000135                     C1TRECH         equ	309	;# 
 13357   000136                     C1TRECU         equ	310	;# 
 13358   000137                     C1TRECT         equ	311	;# 
 13359   000138                     C1BDIAG0L       equ	312	;# 
 13360   000139                     C1BDIAG0H       equ	313	;# 
 13361   00013C                     C1BDIAG1L       equ	316	;# 
 13362   00013D                     C1BDIAG1H       equ	317	;# 
 13363   00013E                     C1BDIAG1U       equ	318	;# 
 13364   00013F                     C1BDIAG1T       equ	319	;# 
 13365   000140                     C1TEFCONL       equ	320	;# 
 13366   000141                     C1TEFCONH       equ	321	;# 
 13367   000142                     C1TEFCONU       equ	322	;# 
 13368   000143                     C1TEFCONT       equ	323	;# 
 13369   000144                     C1TEFSTAL       equ	324	;# 
 13370   000145                     C1TEFSTAH       equ	325	;# 
 13371   000146                     C1TEFSTAU       equ	326	;# 
 13372   000147                     C1TEFSTAT       equ	327	;# 
 13373   000148                     C1TEFUA         equ	328	;# 
 13374   000148                     C1TEFUAL        equ	328	;# 
 13375   000149                     C1TEFUAH        equ	329	;# 
 13376   00014A                     C1TEFUAU        equ	330	;# 
 13377   00014B                     C1TEFUAT        equ	331	;# 
 13378   00014C                     C1FIFOBA        equ	332	;# 
 13379   00014C                     C1FIFOBAL       equ	332	;# 
 13380   00014D                     C1FIFOBAH       equ	333	;# 
 13381   00014E                     C1FIFOBAU       equ	334	;# 
 13382   00014F                     C1FIFOBAT       equ	335	;# 
 13383   000150                     C1TXQCONL       equ	336	;# 
 13384   000151                     C1TXQCONH       equ	337	;# 
 13385   000152                     C1TXQCONU       equ	338	;# 
 13386   000153                     C1TXQCONT       equ	339	;# 
 13387   000154                     C1TXQSTAL       equ	340	;# 
 13388   000155                     C1TXQSTAH       equ	341	;# 
 13389   000156                     C1TXQSTAU       equ	342	;# 
 13390   000157                     C1TXQSTAT       equ	343	;# 
 13391   000158                     C1TXQUA         equ	344	;# 
 13392   000158                     C1TXQUAL        equ	344	;# 
 13393   000159                     C1TXQUAH        equ	345	;# 
 13394   00015A                     C1TXQUAU        equ	346	;# 
 13395   00015B                     C1TXQUAT        equ	347	;# 
 13396   00015C                     C1FIFOCON1      equ	348	;# 
 13397   00015C                     C1FIFOCON1L     equ	348	;# 
 13398   00015D                     C1FIFOCON1H     equ	349	;# 
 13399   00015E                     C1FIFOCON1U     equ	350	;# 
 13400   00015F                     C1FIFOCON1T     equ	351	;# 
 13401   000160                     C1FIFOSTA1      equ	352	;# 
 13402   000160                     C1FIFOSTA1L     equ	352	;# 
 13403   000161                     C1FIFOSTA1H     equ	353	;# 
 13404   000162                     C1FIFOSTA1U     equ	354	;# 
 13405   000163                     C1FIFOSTA1T     equ	355	;# 
 13406   000164                     C1FIFOUA1       equ	356	;# 
 13407   000164                     C1FIFOUA1L      equ	356	;# 
 13408   000165                     C1FIFOUA1H      equ	357	;# 
 13409   000166                     C1FIFOUA1U      equ	358	;# 
 13410   000167                     C1FIFOUA1T      equ	359	;# 
 13411   000168                     C1FIFOCON2      equ	360	;# 
 13412   000168                     C1FIFOCON2L     equ	360	;# 
 13413   000169                     C1FIFOCON2H     equ	361	;# 
 13414   00016A                     C1FIFOCON2U     equ	362	;# 
 13415   00016B                     C1FIFOCON2T     equ	363	;# 
 13416   00016C                     C1FIFOSTA2      equ	364	;# 
 13417   00016C                     C1FIFOSTA2L     equ	364	;# 
 13418   00016D                     C1FIFOSTA2H     equ	365	;# 
 13419   00016E                     C1FIFOSTA2U     equ	366	;# 
 13420   00016F                     C1FIFOSTA2T     equ	367	;# 
 13421   000170                     C1FIFOUA2       equ	368	;# 
 13422   000170                     C1FIFOUA2L      equ	368	;# 
 13423   000171                     C1FIFOUA2H      equ	369	;# 
 13424   000172                     C1FIFOUA2U      equ	370	;# 
 13425   000173                     C1FIFOUA2T      equ	371	;# 
 13426   000174                     C1FIFOCON3      equ	372	;# 
 13427   000174                     C1FIFOCON3L     equ	372	;# 
 13428   000175                     C1FIFOCON3H     equ	373	;# 
 13429   000176                     C1FIFOCON3U     equ	374	;# 
 13430   000177                     C1FIFOCON3T     equ	375	;# 
 13431   000178                     C1FIFOSTA3      equ	376	;# 
 13432   000178                     C1FIFOSTA3L     equ	376	;# 
 13433   000179                     C1FIFOSTA3H     equ	377	;# 
 13434   00017A                     C1FIFOSTA3U     equ	378	;# 
 13435   00017B                     C1FIFOSTA3T     equ	379	;# 
 13436   00017C                     C1FIFOUA3       equ	380	;# 
 13437   00017C                     C1FIFOUA3L      equ	380	;# 
 13438   00017D                     C1FIFOUA3H      equ	381	;# 
 13439   00017E                     C1FIFOUA3U      equ	382	;# 
 13440   00017F                     C1FIFOUA3T      equ	383	;# 
 13441   000180                     C1FLTCON0L      equ	384	;# 
 13442   000181                     C1FLTCON0H      equ	385	;# 
 13443   000182                     C1FLTCON0U      equ	386	;# 
 13444   000183                     C1FLTCON0T      equ	387	;# 
 13445   000184                     C1FLTCON1L      equ	388	;# 
 13446   000185                     C1FLTCON1H      equ	389	;# 
 13447   000186                     C1FLTCON1U      equ	390	;# 
 13448   000187                     C1FLTCON1T      equ	391	;# 
 13449   000188                     C1FLTCON2L      equ	392	;# 
 13450   000189                     C1FLTCON2H      equ	393	;# 
 13451   00018A                     C1FLTCON2U      equ	394	;# 
 13452   00018B                     C1FLTCON2T      equ	395	;# 
 13453   00018C                     C1FLTOBJ0       equ	396	;# 
 13454   00018C                     C1FLTOBJ0L      equ	396	;# 
 13455   00018D                     C1FLTOBJ0H      equ	397	;# 
 13456   00018E                     C1FLTOBJ0U      equ	398	;# 
 13457   00018F                     C1FLTOBJ0T      equ	399	;# 
 13458   000190                     C1MASK0         equ	400	;# 
 13459   000190                     C1MASK0L        equ	400	;# 
 13460   000191                     C1MASK0H        equ	401	;# 
 13461   000192                     C1MASK0U        equ	402	;# 
 13462   000193                     C1MASK0T        equ	403	;# 
 13463   000194                     C1FLTOBJ1       equ	404	;# 
 13464   000194                     C1FLTOBJ1L      equ	404	;# 
 13465   000195                     C1FLTOBJ1H      equ	405	;# 
 13466   000196                     C1FLTOBJ1U      equ	406	;# 
 13467   000197                     C1FLTOBJ1T      equ	407	;# 
 13468   000198                     C1MASK1         equ	408	;# 
 13469   000198                     C1MASK1L        equ	408	;# 
 13470   000199                     C1MASK1H        equ	409	;# 
 13471   00019A                     C1MASK1U        equ	410	;# 
 13472   00019B                     C1MASK1T        equ	411	;# 
 13473   00019C                     C1FLTOBJ2       equ	412	;# 
 13474   00019C                     C1FLTOBJ2L      equ	412	;# 
 13475   00019D                     C1FLTOBJ2H      equ	413	;# 
 13476   00019E                     C1FLTOBJ2U      equ	414	;# 
 13477   00019F                     C1FLTOBJ2T      equ	415	;# 
 13478   0001A0                     C1MASK2         equ	416	;# 
 13479   0001A0                     C1MASK2L        equ	416	;# 
 13480   0001A1                     C1MASK2H        equ	417	;# 
 13481   0001A2                     C1MASK2U        equ	418	;# 
 13482   0001A3                     C1MASK2T        equ	419	;# 
 13483   0001A4                     C1FLTOBJ3       equ	420	;# 
 13484   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13485   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13486   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13487   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13488   0001A8                     C1MASK3         equ	424	;# 
 13489   0001A8                     C1MASK3L        equ	424	;# 
 13490   0001A9                     C1MASK3H        equ	425	;# 
 13491   0001AA                     C1MASK3U        equ	426	;# 
 13492   0001AB                     C1MASK3T        equ	427	;# 
 13493   0001AC                     C1FLTOBJ4       equ	428	;# 
 13494   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13495   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13496   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13497   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13498   0001B0                     C1MASK4         equ	432	;# 
 13499   0001B0                     C1MASK4L        equ	432	;# 
 13500   0001B1                     C1MASK4H        equ	433	;# 
 13501   0001B2                     C1MASK4U        equ	434	;# 
 13502   0001B3                     C1MASK4T        equ	435	;# 
 13503   0001B4                     C1FLTOBJ5       equ	436	;# 
 13504   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13505   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13506   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13507   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13508   0001B8                     C1MASK5         equ	440	;# 
 13509   0001B8                     C1MASK5L        equ	440	;# 
 13510   0001B9                     C1MASK5H        equ	441	;# 
 13511   0001BA                     C1MASK5U        equ	442	;# 
 13512   0001BB                     C1MASK5T        equ	443	;# 
 13513   0001BC                     C1FLTOBJ6       equ	444	;# 
 13514   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13515   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13516   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13517   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13518   0001C0                     C1MASK6         equ	448	;# 
 13519   0001C0                     C1MASK6L        equ	448	;# 
 13520   0001C1                     C1MASK6H        equ	449	;# 
 13521   0001C2                     C1MASK6U        equ	450	;# 
 13522   0001C3                     C1MASK6T        equ	451	;# 
 13523   0001C4                     C1FLTOBJ7       equ	452	;# 
 13524   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13525   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13526   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13527   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13528   0001C8                     C1MASK7         equ	456	;# 
 13529   0001C8                     C1MASK7L        equ	456	;# 
 13530   0001C9                     C1MASK7H        equ	457	;# 
 13531   0001CA                     C1MASK7U        equ	458	;# 
 13532   0001CB                     C1MASK7T        equ	459	;# 
 13533   0001CC                     C1FLTOBJ8       equ	460	;# 
 13534   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13535   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13536   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13537   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13538   0001D0                     C1MASK8         equ	464	;# 
 13539   0001D0                     C1MASK8L        equ	464	;# 
 13540   0001D1                     C1MASK8H        equ	465	;# 
 13541   0001D2                     C1MASK8U        equ	466	;# 
 13542   0001D3                     C1MASK8T        equ	467	;# 
 13543   0001D4                     C1FLTOBJ9       equ	468	;# 
 13544   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13545   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13546   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13547   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13548   0001D8                     C1MASK9         equ	472	;# 
 13549   0001D8                     C1MASK9L        equ	472	;# 
 13550   0001D9                     C1MASK9H        equ	473	;# 
 13551   0001DA                     C1MASK9U        equ	474	;# 
 13552   0001DB                     C1MASK9T        equ	475	;# 
 13553   0001DC                     C1FLTOBJ10      equ	476	;# 
 13554   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13555   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13556   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13557   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13558   0001E0                     C1MASK10        equ	480	;# 
 13559   0001E0                     C1MASK10L       equ	480	;# 
 13560   0001E1                     C1MASK10H       equ	481	;# 
 13561   0001E2                     C1MASK10U       equ	482	;# 
 13562   0001E3                     C1MASK10T       equ	483	;# 
 13563   0001E4                     C1FLTOBJ11      equ	484	;# 
 13564   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13565   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13566   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13567   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13568   0001E8                     C1MASK11        equ	488	;# 
 13569   0001E8                     C1MASK11L       equ	488	;# 
 13570   0001E9                     C1MASK11H       equ	489	;# 
 13571   0001EA                     C1MASK11U       equ	490	;# 
 13572   0001EB                     C1MASK11T       equ	491	;# 
 13573   000200                     PPSLOCK         equ	512	;# 
 13574   000201                     RA0PPS          equ	513	;# 
 13575   000202                     RA1PPS          equ	514	;# 
 13576   000203                     RA2PPS          equ	515	;# 
 13577   000204                     RA3PPS          equ	516	;# 
 13578   000205                     RA4PPS          equ	517	;# 
 13579   000206                     RA5PPS          equ	518	;# 
 13580   000207                     RA6PPS          equ	519	;# 
 13581   000208                     RA7PPS          equ	520	;# 
 13582   000209                     RB0PPS          equ	521	;# 
 13583   00020A                     RB1PPS          equ	522	;# 
 13584   00020B                     RB2PPS          equ	523	;# 
 13585   00020C                     RB3PPS          equ	524	;# 
 13586   00020D                     RB4PPS          equ	525	;# 
 13587   00020E                     RB5PPS          equ	526	;# 
 13588   00020F                     RB6PPS          equ	527	;# 
 13589   000210                     RB7PPS          equ	528	;# 
 13590   000211                     RC0PPS          equ	529	;# 
 13591   000212                     RC1PPS          equ	530	;# 
 13592   000213                     RC2PPS          equ	531	;# 
 13593   000214                     RC3PPS          equ	532	;# 
 13594   000215                     RC4PPS          equ	533	;# 
 13595   000216                     RC5PPS          equ	534	;# 
 13596   000217                     RC6PPS          equ	535	;# 
 13597   000218                     RC7PPS          equ	536	;# 
 13598   00023D                     CANRXPPS        equ	573	;# 
 13599   00023E                     INT0PPS         equ	574	;# 
 13600   00023F                     INT1PPS         equ	575	;# 
 13601   000240                     INT2PPS         equ	576	;# 
 13602   000241                     T0CKIPPS        equ	577	;# 
 13603   000242                     T1CKIPPS        equ	578	;# 
 13604   000243                     T1GPPS          equ	579	;# 
 13605   000244                     T3CKIPPS        equ	580	;# 
 13606   000245                     T3GPPS          equ	581	;# 
 13607   000246                     T5CKIPPS        equ	582	;# 
 13608   000247                     T5GPPS          equ	583	;# 
 13609   000248                     T2INPPS         equ	584	;# 
 13610   000249                     T4INPPS         equ	585	;# 
 13611   00024A                     T6INPPS         equ	586	;# 
 13612   00024B                     TUIN0PPS        equ	587	;# 
 13613   00024C                     TUIN1PPS        equ	588	;# 
 13614   00024F                     CCP1PPS         equ	591	;# 
 13615   000250                     CCP2PPS         equ	592	;# 
 13616   000251                     CCP3PPS         equ	593	;# 
 13617   000253                     PWM1ERSPPS      equ	595	;# 
 13618   000254                     PWM2ERSPPS      equ	596	;# 
 13619   000255                     PWM3ERSPPS      equ	597	;# 
 13620   000256                     PWM4ERSPPS      equ	598	;# 
 13621   000257                     PWMIN0PPS       equ	599	;# 
 13622   000258                     PWMIN1PPS       equ	600	;# 
 13623   000259                     SMT1WINPPS      equ	601	;# 
 13624   00025A                     SMT1SIGPPS      equ	602	;# 
 13625   00025B                     CWG1PPS         equ	603	;# 
 13626   00025B                     CWG1INPPS       equ	603	;# 
 13627   00025C                     CWG2PPS         equ	604	;# 
 13628   00025C                     CWG2INPPS       equ	604	;# 
 13629   00025D                     CWG3PPS         equ	605	;# 
 13630   00025D                     CWG3INPPS       equ	605	;# 
 13631   00025E                     MD1CARLPPS      equ	606	;# 
 13632   00025E                     MDCARLPPS       equ	606	;# 
 13633   00025F                     MD1CARHPPS      equ	607	;# 
 13634   00025F                     MDCARHPPS       equ	607	;# 
 13635   000260                     MD1SRCPPS       equ	608	;# 
 13636   000260                     MDSRCPPS        equ	608	;# 
 13637   000261                     CLCIN0PPS       equ	609	;# 
 13638   000262                     CLCIN1PPS       equ	610	;# 
 13639   000263                     CLCIN2PPS       equ	611	;# 
 13640   000264                     CLCIN3PPS       equ	612	;# 
 13641   000265                     CLCIN4PPS       equ	613	;# 
 13642   000266                     CLCIN5PPS       equ	614	;# 
 13643   000267                     CLCIN6PPS       equ	615	;# 
 13644   000268                     CLCIN7PPS       equ	616	;# 
 13645   000269                     ADACTPPS        equ	617	;# 
 13646   00026A                     SPI1SCKPPS      equ	618	;# 
 13647   00026B                     SPI1SDIPPS      equ	619	;# 
 13648   00026C                     SPI1SSPPS       equ	620	;# 
 13649   00026D                     SPI2SCKPPS      equ	621	;# 
 13650   00026E                     SPI2SDIPPS      equ	622	;# 
 13651   00026F                     SPI2SSPPS       equ	623	;# 
 13652   000270                     I2C1SDAPPS      equ	624	;# 
 13653   000271                     I2C1SCLPPS      equ	625	;# 
 13654   000272                     U1RXPPS         equ	626	;# 
 13655   000273                     U1CTSPPS        equ	627	;# 
 13656   000274                     U2RXPPS         equ	628	;# 
 13657   000275                     U2CTSPPS        equ	629	;# 
 13658   000276                     U3RXPPS         equ	630	;# 
 13659   000277                     U3CTSPPS        equ	631	;# 
 13660   000278                     U4RXPPS         equ	632	;# 
 13661   000279                     U4CTSPPS        equ	633	;# 
 13662   00027A                     U5RXPPS         equ	634	;# 
 13663   00027B                     U5CTSPPS        equ	635	;# 
 13664   000286                     RC4I2C          equ	646	;# 
 13665   000287                     RC3I2C          equ	647	;# 
 13666   000288                     RB2I2C          equ	648	;# 
 13667   000289                     RB1I2C          equ	649	;# 
 13668   00028A                     I2C1RXB         equ	650	;# 
 13669   00028B                     I2C1TXB         equ	651	;# 
 13670   00028C                     I2C1CNTL        equ	652	;# 
 13671   00028D                     I2C1CNTH        equ	653	;# 
 13672   00028E                     I2C1ADB0        equ	654	;# 
 13673   00028F                     I2C1ADB1        equ	655	;# 
 13674   000290                     I2C1ADR0        equ	656	;# 
 13675   000291                     I2C1ADR1        equ	657	;# 
 13676   000292                     I2C1ADR2        equ	658	;# 
 13677   000293                     I2C1ADR3        equ	659	;# 
 13678   000294                     I2C1CON0        equ	660	;# 
 13679   000295                     I2C1CON1        equ	661	;# 
 13680   000296                     I2C1CON2        equ	662	;# 
 13681   000297                     I2C1ERR         equ	663	;# 
 13682   000298                     I2C1STAT0       equ	664	;# 
 13683   000299                     I2C1STAT1       equ	665	;# 
 13684   00029A                     I2C1PIR         equ	666	;# 
 13685   00029B                     I2C1PIE         equ	667	;# 
 13686   00029C                     I2C1BTO         equ	668	;# 
 13687   00029D                     I2C1BAUD        equ	669	;# 
 13688   00029E                     I2C1CLK         equ	670	;# 
 13689   00029F                     I2C1BTOC        equ	671	;# 
 13690   0002A1                     U1RXB           equ	673	;# 
 13691   0002A1                     U1RXBL          equ	673	;# 
 13692   0002A2                     U1RXCHK         equ	674	;# 
 13693   0002A3                     U1TXB           equ	675	;# 
 13694   0002A3                     U1TXBL          equ	675	;# 
 13695   0002A4                     U1TXCHK         equ	676	;# 
 13696   0002A5                     U1P1            equ	677	;# 
 13697   0002A5                     U1P1L           equ	677	;# 
 13698   0002A6                     U1P1H           equ	678	;# 
 13699   0002A7                     U1P2            equ	679	;# 
 13700   0002A7                     U1P2L           equ	679	;# 
 13701   0002A8                     U1P2H           equ	680	;# 
 13702   0002A9                     U1P3            equ	681	;# 
 13703   0002A9                     U1P3L           equ	681	;# 
 13704   0002AA                     U1P3H           equ	682	;# 
 13705   0002AB                     U1CON0          equ	683	;# 
 13706   0002AC                     U1CON1          equ	684	;# 
 13707   0002AD                     U1CON2          equ	685	;# 
 13708   0002AE                     U1BRG           equ	686	;# 
 13709   0002AE                     U1BRGL          equ	686	;# 
 13710   0002AF                     U1BRGH          equ	687	;# 
 13711   0002B0                     U1FIFO          equ	688	;# 
 13712   0002B1                     U1UIR           equ	689	;# 
 13713   0002B2                     U1ERRIR         equ	690	;# 
 13714   0002B3                     U1ERRIE         equ	691	;# 
 13715   0002B4                     U2RXB           equ	692	;# 
 13716   0002B4                     U2RXBL          equ	692	;# 
 13717   0002B5                     U2RXCHK         equ	693	;# 
 13718   0002B6                     U2TXB           equ	694	;# 
 13719   0002B6                     U2TXBL          equ	694	;# 
 13720   0002B7                     U2TXCHK         equ	695	;# 
 13721   0002B8                     U2P1            equ	696	;# 
 13722   0002B8                     U2P1L           equ	696	;# 
 13723   0002B9                     U2P1H           equ	697	;# 
 13724   0002BA                     U2P2            equ	698	;# 
 13725   0002BA                     U2P2L           equ	698	;# 
 13726   0002BB                     U2P2H           equ	699	;# 
 13727   0002BC                     U2P3            equ	700	;# 
 13728   0002BC                     U2P3L           equ	700	;# 
 13729   0002BD                     U2P3H           equ	701	;# 
 13730   0002BE                     U2CON0          equ	702	;# 
 13731   0002BF                     U2CON1          equ	703	;# 
 13732   0002C0                     U2CON2          equ	704	;# 
 13733   0002C1                     U2BRG           equ	705	;# 
 13734   0002C1                     U2BRGL          equ	705	;# 
 13735   0002C2                     U2BRGH          equ	706	;# 
 13736   0002C3                     U2FIFO          equ	707	;# 
 13737   0002C4                     U2UIR           equ	708	;# 
 13738   0002C5                     U2ERRIR         equ	709	;# 
 13739   0002C6                     U2ERRIE         equ	710	;# 
 13740   0002C7                     U3RXB           equ	711	;# 
 13741   0002C7                     U3RXBL          equ	711	;# 
 13742   0002C9                     U3TXB           equ	713	;# 
 13743   0002C9                     U3TXBL          equ	713	;# 
 13744   0002CB                     U3P1            equ	715	;# 
 13745   0002CB                     U3P1L           equ	715	;# 
 13746   0002CD                     U3P2            equ	717	;# 
 13747   0002CD                     U3P2L           equ	717	;# 
 13748   0002CF                     U3P3            equ	719	;# 
 13749   0002CF                     U3P3L           equ	719	;# 
 13750   0002D1                     U3CON0          equ	721	;# 
 13751   0002D2                     U3CON1          equ	722	;# 
 13752   0002D3                     U3CON2          equ	723	;# 
 13753   0002D4                     U3BRG           equ	724	;# 
 13754   0002D4                     U3BRGL          equ	724	;# 
 13755   0002D5                     U3BRGH          equ	725	;# 
 13756   0002D6                     U3FIFO          equ	726	;# 
 13757   0002D7                     U3UIR           equ	727	;# 
 13758   0002D8                     U3ERRIR         equ	728	;# 
 13759   0002D9                     U3ERRIE         equ	729	;# 
 13760   0002DA                     U4RXB           equ	730	;# 
 13761   0002DA                     U4RXBL          equ	730	;# 
 13762   0002DC                     U4TXB           equ	732	;# 
 13763   0002DC                     U4TXBL          equ	732	;# 
 13764   0002DE                     U4P1            equ	734	;# 
 13765   0002DE                     U4P1L           equ	734	;# 
 13766   0002E0                     U4P2            equ	736	;# 
 13767   0002E0                     U4P2L           equ	736	;# 
 13768   0002E2                     U4P3            equ	738	;# 
 13769   0002E2                     U4P3L           equ	738	;# 
 13770   0002E4                     U4CON0          equ	740	;# 
 13771   0002E5                     U4CON1          equ	741	;# 
 13772   0002E6                     U4CON2          equ	742	;# 
 13773   0002E7                     U4BRG           equ	743	;# 
 13774   0002E7                     U4BRGL          equ	743	;# 
 13775   0002E8                     U4BRGH          equ	744	;# 
 13776   0002E9                     U4FIFO          equ	745	;# 
 13777   0002EA                     U4UIR           equ	746	;# 
 13778   0002EB                     U4ERRIR         equ	747	;# 
 13779   0002EC                     U4ERRIE         equ	748	;# 
 13780   0002ED                     U5RXB           equ	749	;# 
 13781   0002ED                     U5RXBL          equ	749	;# 
 13782   0002EF                     U5TXB           equ	751	;# 
 13783   0002EF                     U5TXBL          equ	751	;# 
 13784   0002F1                     U5P1            equ	753	;# 
 13785   0002F1                     U5P1L           equ	753	;# 
 13786   0002F3                     U5P2            equ	755	;# 
 13787   0002F3                     U5P2L           equ	755	;# 
 13788   0002F5                     U5P3            equ	757	;# 
 13789   0002F5                     U5P3L           equ	757	;# 
 13790   0002F7                     U5CON0          equ	759	;# 
 13791   0002F8                     U5CON1          equ	760	;# 
 13792   0002F9                     U5CON2          equ	761	;# 
 13793   0002FA                     U5BRG           equ	762	;# 
 13794   0002FA                     U5BRGL          equ	762	;# 
 13795   0002FB                     U5BRGH          equ	763	;# 
 13796   0002FC                     U5FIFO          equ	764	;# 
 13797   0002FD                     U5UIR           equ	765	;# 
 13798   0002FE                     U5ERRIR         equ	766	;# 
 13799   0002FF                     U5ERRIE         equ	767	;# 
 13800   000300                     SMT1TMR         equ	768	;# 
 13801   000300                     SMT1TMRL        equ	768	;# 
 13802   000301                     SMT1TMRH        equ	769	;# 
 13803   000302                     SMT1TMRU        equ	770	;# 
 13804   000303                     SMT1CPR         equ	771	;# 
 13805   000303                     SMT1CPRL        equ	771	;# 
 13806   000304                     SMT1CPRH        equ	772	;# 
 13807   000305                     SMT1CPRU        equ	773	;# 
 13808   000306                     SMT1CPW         equ	774	;# 
 13809   000306                     SMT1CPWL        equ	774	;# 
 13810   000307                     SMT1CPWH        equ	775	;# 
 13811   000308                     SMT1CPWU        equ	776	;# 
 13812   000309                     SMT1PR          equ	777	;# 
 13813   000309                     SMT1PRL         equ	777	;# 
 13814   00030A                     SMT1PRH         equ	778	;# 
 13815   00030B                     SMT1PRU         equ	779	;# 
 13816   00030C                     SMT1CON0        equ	780	;# 
 13817   00030D                     SMT1CON1        equ	781	;# 
 13818   00030E                     SMT1STAT        equ	782	;# 
 13819   00030F                     SMT1CLK         equ	783	;# 
 13820   000310                     SMT1SIG         equ	784	;# 
 13821   000311                     SMT1WIN         equ	785	;# 
 13822   000318                     TMR0L           equ	792	;# 
 13823   000318                     TMR0            equ	792	;# 
 13824   000319                     TMR0H           equ	793	;# 
 13825   000319                     PR0             equ	793	;# 
 13826   00031A                     T0CON0          equ	794	;# 
 13827   00031B                     T0CON1          equ	795	;# 
 13828   00031C                     TMR1            equ	796	;# 
 13829   00031C                     TMR1L           equ	796	;# 
 13830   00031D                     TMR1H           equ	797	;# 
 13831   00031E                     T1CON           equ	798	;# 
 13832   00031E                     TMR1CON         equ	798	;# 
 13833   00031F                     T1GCON          equ	799	;# 
 13834   00031F                     TMR1GCON        equ	799	;# 
 13835   000320                     T1GATE          equ	800	;# 
 13836   000320                     TMR1GATE        equ	800	;# 
 13837   000321                     T1CLK           equ	801	;# 
 13838   000321                     TMR1CLK         equ	801	;# 
 13839   000321                     PR1             equ	801	;# 
 13840   000322                     T2TMR           equ	802	;# 
 13841   000322                     TMR2            equ	802	;# 
 13842   000323                     T2PR            equ	803	;# 
 13843   000323                     PR2             equ	803	;# 
 13844   000324                     T2CON           equ	804	;# 
 13845   000325                     T2HLT           equ	805	;# 
 13846   000326                     T2CLKCON        equ	806	;# 
 13847   000326                     T2CLK           equ	806	;# 
 13848   000327                     T2RST           equ	807	;# 
 13849   000328                     TMR3            equ	808	;# 
 13850   000328                     TMR3L           equ	808	;# 
 13851   000329                     TMR3H           equ	809	;# 
 13852   00032A                     T3CON           equ	810	;# 
 13853   00032A                     TMR3CON         equ	810	;# 
 13854   00032B                     T3GCON          equ	811	;# 
 13855   00032B                     TMR3GCON        equ	811	;# 
 13856   00032C                     T3GATE          equ	812	;# 
 13857   00032C                     TMR3GATE        equ	812	;# 
 13858   00032D                     T3CLK           equ	813	;# 
 13859   00032D                     TMR3CLK         equ	813	;# 
 13860   00032D                     PR3             equ	813	;# 
 13861   00032E                     T4TMR           equ	814	;# 
 13862   00032E                     TMR4            equ	814	;# 
 13863   00032F                     T4PR            equ	815	;# 
 13864   00032F                     PR4             equ	815	;# 
 13865   000330                     T4CON           equ	816	;# 
 13866   000331                     T4HLT           equ	817	;# 
 13867   000332                     T4CLKCON        equ	818	;# 
 13868   000332                     T4CLK           equ	818	;# 
 13869   000333                     T4RST           equ	819	;# 
 13870   000334                     TMR5            equ	820	;# 
 13871   000334                     TMR5L           equ	820	;# 
 13872   000335                     TMR5H           equ	821	;# 
 13873   000336                     T5CON           equ	822	;# 
 13874   000336                     TMR5CON         equ	822	;# 
 13875   000337                     T5GCON          equ	823	;# 
 13876   000337                     TMR5GCON        equ	823	;# 
 13877   000338                     T5GATE          equ	824	;# 
 13878   000338                     TMR5GATE        equ	824	;# 
 13879   000339                     T5CLK           equ	825	;# 
 13880   000339                     TMR5CLK         equ	825	;# 
 13881   000339                     PR5             equ	825	;# 
 13882   00033A                     T6TMR           equ	826	;# 
 13883   00033A                     TMR6            equ	826	;# 
 13884   00033B                     T6PR            equ	827	;# 
 13885   00033B                     PR6             equ	827	;# 
 13886   00033C                     T6CON           equ	828	;# 
 13887   00033D                     T6HLT           equ	829	;# 
 13888   00033E                     T6CLKCON        equ	830	;# 
 13889   00033E                     T6CLK           equ	830	;# 
 13890   00033F                     T6RST           equ	831	;# 
 13891   000340                     CCPR1           equ	832	;# 
 13892   000340                     CCPR1L          equ	832	;# 
 13893   000341                     CCPR1H          equ	833	;# 
 13894   000342                     CCP1CON         equ	834	;# 
 13895   000343                     CCP1CAP         equ	835	;# 
 13896   000344                     CCPR2           equ	836	;# 
 13897   000344                     CCPR2L          equ	836	;# 
 13898   000345                     CCPR2H          equ	837	;# 
 13899   000346                     CCP2CON         equ	838	;# 
 13900   000347                     CCP2CAP         equ	839	;# 
 13901   000348                     CCPR3           equ	840	;# 
 13902   000348                     CCPR3L          equ	840	;# 
 13903   000349                     CCPR3H          equ	841	;# 
 13904   00034A                     CCP3CON         equ	842	;# 
 13905   00034B                     CCP3CAP         equ	843	;# 
 13906   00034C                     CCPTMRS0        equ	844	;# 
 13907   00034F                     CRCDATA         equ	847	;# 
 13908   00034F                     CRCDATAL        equ	847	;# 
 13909   000350                     CRCDATAH        equ	848	;# 
 13910   000351                     CRCDATAU        equ	849	;# 
 13911   000352                     CRCDATAT        equ	850	;# 
 13912   000353                     CRCOUT          equ	851	;# 
 13913   000353                     CRCSHFT         equ	851	;# 
 13914   000353                     CRCXOR          equ	851	;# 
 13915   000353                     CRCOUTL         equ	851	;# 
 13916   000353                     CRCSHFTL        equ	851	;# 
 13917   000353                     CRCSHIFTL       equ	851	;# 
 13918   000353                     CRCXORL         equ	851	;# 
 13919   000354                     CRCOUTH         equ	852	;# 
 13920   000354                     CRCSHFTH        equ	852	;# 
 13921   000354                     CRCSHIFTH       equ	852	;# 
 13922   000354                     CRCXORH         equ	852	;# 
 13923   000355                     CRCOUTU         equ	853	;# 
 13924   000355                     CRCSHFTU        equ	853	;# 
 13925   000355                     CRCSHIFTU       equ	853	;# 
 13926   000355                     CRCXORU         equ	853	;# 
 13927   000356                     CRCOUTT         equ	854	;# 
 13928   000356                     CRCSHFTT        equ	854	;# 
 13929   000356                     CRCSHIFTT       equ	854	;# 
 13930   000356                     CRCXORT         equ	854	;# 
 13931   000357                     CRCCON0         equ	855	;# 
 13932   000358                     CRCCON1         equ	856	;# 
 13933   000359                     CRCCON2         equ	857	;# 
 13934   00035A                     SCANLADR        equ	858	;# 
 13935   00035A                     SCANLADRL       equ	858	;# 
 13936   00035B                     SCANLADRH       equ	859	;# 
 13937   00035C                     SCANLADRU       equ	860	;# 
 13938   00035D                     SCANHADR        equ	861	;# 
 13939   00035D                     SCANHADRL       equ	861	;# 
 13940   00035E                     SCANHADRH       equ	862	;# 
 13941   00035F                     SCANHADRU       equ	863	;# 
 13942   000360                     SCANCON0        equ	864	;# 
 13943   000361                     SCANTRIG        equ	865	;# 
 13944   000362                     IPR0            equ	866	;# 
 13945   000363                     IPR1            equ	867	;# 
 13946   000364                     IPR2            equ	868	;# 
 13947   000365                     IPR3            equ	869	;# 
 13948   000366                     IPR4            equ	870	;# 
 13949   000367                     IPR5            equ	871	;# 
 13950   000368                     IPR6            equ	872	;# 
 13951   000369                     IPR7            equ	873	;# 
 13952   00036A                     IPR8            equ	874	;# 
 13953   00036B                     IPR9            equ	875	;# 
 13954   00036C                     IPR10           equ	876	;# 
 13955   00036D                     IPR11           equ	877	;# 
 13956   00036E                     IPR12           equ	878	;# 
 13957   00036F                     IPR13           equ	879	;# 
 13958   000370                     IPR14           equ	880	;# 
 13959   000371                     IPR15           equ	881	;# 
 13960   000373                     STATUS_CSHAD    equ	883	;# 
 13961   000374                     WREG_CSHAD      equ	884	;# 
 13962   000375                     BSR_CSHAD       equ	885	;# 
 13963   000376                     SHADCON         equ	886	;# 
 13964   000377                     STATUS_SHAD     equ	887	;# 
 13965   000378                     WREG_SHAD       equ	888	;# 
 13966   000379                     BSR_SHAD        equ	889	;# 
 13967   00037A                     PCLATH_SHAD     equ	890	;# 
 13968   00037B                     PCLATU_SHAD     equ	891	;# 
 13969   00037C                     FSR0SH          equ	892	;# 
 13970   00037C                     FSR0L_SHAD      equ	892	;# 
 13971   00037D                     FSR0H_SHAD      equ	893	;# 
 13972   00037E                     FSR1SH          equ	894	;# 
 13973   00037E                     FSR1L_SHAD      equ	894	;# 
 13974   00037F                     FSR1H_SHAD      equ	895	;# 
 13975   000380                     FSR2SH          equ	896	;# 
 13976   000380                     FSR2L_SHAD      equ	896	;# 
 13977   000381                     FSR2H_SHAD      equ	897	;# 
 13978   000382                     PRODSH          equ	898	;# 
 13979   000382                     PRODL_SHAD      equ	898	;# 
 13980   000383                     PRODH_SHAD      equ	899	;# 
 13981   000387                     TU16ACON0       equ	903	;# 
 13982   000388                     TU16ACON1       equ	904	;# 
 13983   000389                     TU16AHLT        equ	905	;# 
 13984   00038A                     TU16APS         equ	906	;# 
 13985   00038B                     TU16ATMR        equ	907	;# 
 13986   00038B                     TU16ACR         equ	907	;# 
 13987   00038B                     TU16ATMRL       equ	907	;# 
 13988   00038B                     TU16ACRL        equ	907	;# 
 13989   00038C                     TU16ATMRH       equ	908	;# 
 13990   00038C                     TU16ACRH        equ	908	;# 
 13991   00038D                     TU16APR         equ	909	;# 
 13992   00038D                     TU16APRL        equ	909	;# 
 13993   00038E                     TU16APRH        equ	910	;# 
 13994   00038F                     TU16ACLK        equ	911	;# 
 13995   000390                     TU16AERS        equ	912	;# 
 13996   000393                     TU16BCON0       equ	915	;# 
 13997   000394                     TU16BCON1       equ	916	;# 
 13998   000395                     TU16BHLT        equ	917	;# 
 13999   000396                     TU16BPS         equ	918	;# 
 14000   000397                     TU16BTMR        equ	919	;# 
 14001   000397                     TU16BCR         equ	919	;# 
 14002   000397                     TU16BTMRL       equ	919	;# 
 14003   000397                     TU16BCRL        equ	919	;# 
 14004   000398                     TU16BTMRH       equ	920	;# 
 14005   000398                     TU16BCRH        equ	920	;# 
 14006   000399                     TU16BPR         equ	921	;# 
 14007   000399                     TU16BPRL        equ	921	;# 
 14008   00039A                     TU16BPRH        equ	922	;# 
 14009   00039B                     TU16BCLK        equ	923	;# 
 14010   00039C                     TU16BERS        equ	924	;# 
 14011   0003BB                     TUCHAIN         equ	955	;# 
 14012   0003BC                     CWG1CLK         equ	956	;# 
 14013   0003BC                     CWG1CLKCON      equ	956	;# 
 14014   0003BD                     CWG1ISM         equ	957	;# 
 14015   0003BE                     CWG1DBR         equ	958	;# 
 14016   0003BF                     CWG1DBF         equ	959	;# 
 14017   0003C0                     CWG1CON0        equ	960	;# 
 14018   0003C1                     CWG1CON1        equ	961	;# 
 14019   0003C2                     CWG1AS0         equ	962	;# 
 14020   0003C3                     CWG1AS1         equ	963	;# 
 14021   0003C4                     CWG1STR         equ	964	;# 
 14022   0003C5                     CWG2CLK         equ	965	;# 
 14023   0003C5                     CWG2CLKCON      equ	965	;# 
 14024   0003C6                     CWG2ISM         equ	966	;# 
 14025   0003C7                     CWG2DBR         equ	967	;# 
 14026   0003C8                     CWG2DBF         equ	968	;# 
 14027   0003C9                     CWG2CON0        equ	969	;# 
 14028   0003CA                     CWG2CON1        equ	970	;# 
 14029   0003CB                     CWG2AS0         equ	971	;# 
 14030   0003CC                     CWG2AS1         equ	972	;# 
 14031   0003CD                     CWG2STR         equ	973	;# 
 14032   0003CE                     CWG3CLK         equ	974	;# 
 14033   0003CE                     CWG3CLKCON      equ	974	;# 
 14034   0003CF                     CWG3ISM         equ	975	;# 
 14035   0003D0                     CWG3DBR         equ	976	;# 
 14036   0003D1                     CWG3DBF         equ	977	;# 
 14037   0003D2                     CWG3CON0        equ	978	;# 
 14038   0003D3                     CWG3CON1        equ	979	;# 
 14039   0003D4                     CWG3AS0         equ	980	;# 
 14040   0003D5                     CWG3AS1         equ	981	;# 
 14041   0003D6                     CWG3STR         equ	982	;# 
 14042   0003D7                     FVRCON          equ	983	;# 
 14043   0003D8                     ADCPCON         equ	984	;# 
 14044   0003D8                     ADCP            equ	984	;# 
 14045   0003D9                     ADLTH           equ	985	;# 
 14046   0003D9                     ADLTHL          equ	985	;# 
 14047   0003DA                     ADLTHH          equ	986	;# 
 14048   0003DB                     ADUTH           equ	987	;# 
 14049   0003DB                     ADUTHL          equ	987	;# 
 14050   0003DC                     ADUTHH          equ	988	;# 
 14051   0003DD                     ADERR           equ	989	;# 
 14052   0003DD                     ADERRL          equ	989	;# 
 14053   0003DE                     ADERRH          equ	990	;# 
 14054   0003DF                     ADSTPT          equ	991	;# 
 14055   0003DF                     ADSTPTL         equ	991	;# 
 14056   0003E0                     ADSTPTH         equ	992	;# 
 14057   0003E1                     ADFLTR          equ	993	;# 
 14058   0003E1                     ADFLTRL         equ	993	;# 
 14059   0003E2                     ADFLTRH         equ	994	;# 
 14060   0003E3                     ADACC           equ	995	;# 
 14061   0003E3                     ADACCL          equ	995	;# 
 14062   0003E4                     ADACCH          equ	996	;# 
 14063   0003E5                     ADACCU          equ	997	;# 
 14064   0003E6                     ADCNT           equ	998	;# 
 14065   0003E7                     ADRPT           equ	999	;# 
 14066   0003E8                     ADPREV          equ	1000	;# 
 14067   0003E8                     ADPREVL         equ	1000	;# 
 14068   0003E9                     ADPREVH         equ	1001	;# 
 14069   0003EA                     ADRES           equ	1002	;# 
 14070   0003EA                     ADRESL          equ	1002	;# 
 14071   0003EB                     ADRESH          equ	1003	;# 
 14072   0003EC                     ADPCH           equ	1004	;# 
 14073   0003EE                     ADACQ           equ	1006	;# 
 14074   0003EE                     ADACQL          equ	1006	;# 
 14075   0003EF                     ADACQH          equ	1007	;# 
 14076   0003F0                     ADCAP           equ	1008	;# 
 14077   0003F1                     ADPRE           equ	1009	;# 
 14078   0003F1                     ADPREL          equ	1009	;# 
 14079   0003F2                     ADPREH          equ	1010	;# 
 14080   0003F3                     ADCON0          equ	1011	;# 
 14081   0003F4                     ADCON1          equ	1012	;# 
 14082   0003F5                     ADCON2          equ	1013	;# 
 14083   0003F6                     ADCON3          equ	1014	;# 
 14084   0003F7                     ADSTAT          equ	1015	;# 
 14085   0003F8                     ADREF           equ	1016	;# 
 14086   0003F9                     ADACT           equ	1017	;# 
 14087   0003FA                     ADCLK           equ	1018	;# 
 14088   0003FB                     ADCTX           equ	1019	;# 
 14089   0003FC                     ADCSEL1         equ	1020	;# 
 14090   0003FD                     ADCSEL2         equ	1021	;# 
 14091   0003FE                     ADCSEL3         equ	1022	;# 
 14092   0003FF                     ADCSEL4         equ	1023	;# 
 14093   000400                     ANSELA          equ	1024	;# 
 14094   000401                     WPUA            equ	1025	;# 
 14095   000402                     ODCONA          equ	1026	;# 
 14096   000403                     SLRCONA         equ	1027	;# 
 14097   000404                     INLVLA          equ	1028	;# 
 14098   000405                     IOCAP           equ	1029	;# 
 14099   000406                     IOCAN           equ	1030	;# 
 14100   000407                     IOCAF           equ	1031	;# 
 14101   000408                     ANSELB          equ	1032	;# 
 14102   000409                     WPUB            equ	1033	;# 
 14103   00040A                     ODCONB          equ	1034	;# 
 14104   00040B                     SLRCONB         equ	1035	;# 
 14105   00040C                     INLVLB          equ	1036	;# 
 14106   00040D                     IOCBP           equ	1037	;# 
 14107   00040E                     IOCBN           equ	1038	;# 
 14108   00040F                     IOCBF           equ	1039	;# 
 14109   000410                     ANSELC          equ	1040	;# 
 14110   000411                     WPUC            equ	1041	;# 
 14111   000412                     ODCONC          equ	1042	;# 
 14112   000413                     SLRCONC         equ	1043	;# 
 14113   000414                     INLVLC          equ	1044	;# 
 14114   000415                     IOCCP           equ	1045	;# 
 14115   000416                     IOCCN           equ	1046	;# 
 14116   000417                     IOCCF           equ	1047	;# 
 14117   000421                     WPUE            equ	1057	;# 
 14118   000424                     INLVLE          equ	1060	;# 
 14119   000425                     IOCEP           equ	1061	;# 
 14120   000426                     IOCEN           equ	1062	;# 
 14121   000427                     IOCEF           equ	1063	;# 
 14122   000440                     NCO1ACC         equ	1088	;# 
 14123   000440                     NCO1ACCL        equ	1088	;# 
 14124   000441                     NCO1ACCH        equ	1089	;# 
 14125   000442                     NCO1ACCU        equ	1090	;# 
 14126   000443                     NCO1INC         equ	1091	;# 
 14127   000443                     NCO1INCL        equ	1091	;# 
 14128   000444                     NCO1INCH        equ	1092	;# 
 14129   000445                     NCO1INCU        equ	1093	;# 
 14130   000446                     NCO1CON         equ	1094	;# 
 14131   000447                     NCO1CLK         equ	1095	;# 
 14132   000448                     NCO2ACC         equ	1096	;# 
 14133   000448                     NCO2ACCL        equ	1096	;# 
 14134   000449                     NCO2ACCH        equ	1097	;# 
 14135   00044A                     NCO2ACCU        equ	1098	;# 
 14136   00044B                     NCO2INC         equ	1099	;# 
 14137   00044B                     NCO2INCL        equ	1099	;# 
 14138   00044C                     NCO2INCH        equ	1100	;# 
 14139   00044D                     NCO2INCU        equ	1101	;# 
 14140   00044E                     NCO2CON         equ	1102	;# 
 14141   00044F                     NCO2CLK         equ	1103	;# 
 14142   000450                     NCO3ACC         equ	1104	;# 
 14143   000450                     NCO3ACCL        equ	1104	;# 
 14144   000451                     NCO3ACCH        equ	1105	;# 
 14145   000452                     NCO3ACCU        equ	1106	;# 
 14146   000453                     NCO3INC         equ	1107	;# 
 14147   000453                     NCO3INCL        equ	1107	;# 
 14148   000454                     NCO3INCH        equ	1108	;# 
 14149   000455                     NCO3INCU        equ	1109	;# 
 14150   000456                     NCO3CON         equ	1110	;# 
 14151   000457                     NCO3CLK         equ	1111	;# 
 14152   000458                     FSCMCON         equ	1112	;# 
 14153   000459                     IVTLOCK         equ	1113	;# 
 14154   00045A                     IVTAD           equ	1114	;# 
 14155   00045A                     IVTADL          equ	1114	;# 
 14156   00045B                     IVTADH          equ	1115	;# 
 14157   00045C                     IVTADU          equ	1116	;# 
 14158   00045D                     IVTBASE         equ	1117	;# 
 14159   00045D                     IVTBASEL        equ	1117	;# 
 14160   00045E                     IVTBASEH        equ	1118	;# 
 14161   00045F                     IVTBASEU        equ	1119	;# 
 14162   000460                     PWM1ERS         equ	1120	;# 
 14163   000461                     PWM1CLK         equ	1121	;# 
 14164   000462                     PWM1LDS         equ	1122	;# 
 14165   000463                     PWM1PR          equ	1123	;# 
 14166   000463                     PWM1PRL         equ	1123	;# 
 14167   000464                     PWM1PRH         equ	1124	;# 
 14168   000465                     PWM1CPRE        equ	1125	;# 
 14169   000466                     PWM1PIPOS       equ	1126	;# 
 14170   000467                     PWM1GIR         equ	1127	;# 
 14171   000468                     PWM1GIE         equ	1128	;# 
 14172   000469                     PWM1CON         equ	1129	;# 
 14173   00046A                     PWM1S1CFG       equ	1130	;# 
 14174   00046B                     PWM1S1P1        equ	1131	;# 
 14175   00046B                     PWM1S1P1L       equ	1131	;# 
 14176   00046C                     PWM1S1P1H       equ	1132	;# 
 14177   00046D                     PWM1S1P2        equ	1133	;# 
 14178   00046D                     PWM1S1P2L       equ	1133	;# 
 14179   00046E                     PWM1S1P2H       equ	1134	;# 
 14180   00046F                     PWM2ERS         equ	1135	;# 
 14181   000470                     PWM2CLK         equ	1136	;# 
 14182   000471                     PWM2LDS         equ	1137	;# 
 14183   000472                     PWM2PR          equ	1138	;# 
 14184   000472                     PWM2PRL         equ	1138	;# 
 14185   000473                     PWM2PRH         equ	1139	;# 
 14186   000474                     PWM2CPRE        equ	1140	;# 
 14187   000475                     PWM2PIPOS       equ	1141	;# 
 14188   000476                     PWM2GIR         equ	1142	;# 
 14189   000477                     PWM2GIE         equ	1143	;# 
 14190   000478                     PWM2CON         equ	1144	;# 
 14191   000479                     PWM2S1CFG       equ	1145	;# 
 14192   00047A                     PWM2S1P1        equ	1146	;# 
 14193   00047A                     PWM2S1P1L       equ	1146	;# 
 14194   00047B                     PWM2S1P1H       equ	1147	;# 
 14195   00047C                     PWM2S1P2        equ	1148	;# 
 14196   00047C                     PWM2S1P2L       equ	1148	;# 
 14197   00047D                     PWM2S1P2H       equ	1149	;# 
 14198   00047E                     PWM3ERS         equ	1150	;# 
 14199   00047F                     PWM3CLK         equ	1151	;# 
 14200   000480                     PWM3LDS         equ	1152	;# 
 14201   000481                     PWM3PR          equ	1153	;# 
 14202   000481                     PWM3PRL         equ	1153	;# 
 14203   000482                     PWM3PRH         equ	1154	;# 
 14204   000483                     PWM3CPRE        equ	1155	;# 
 14205   000484                     PWM3PIPOS       equ	1156	;# 
 14206   000485                     PWM3GIR         equ	1157	;# 
 14207   000486                     PWM3GIE         equ	1158	;# 
 14208   000487                     PWM3CON         equ	1159	;# 
 14209   000488                     PWM3S1CFG       equ	1160	;# 
 14210   000489                     PWM3S1P1        equ	1161	;# 
 14211   000489                     PWM3S1P1L       equ	1161	;# 
 14212   00048A                     PWM3S1P1H       equ	1162	;# 
 14213   00048B                     PWM3S1P2        equ	1163	;# 
 14214   00048B                     PWM3S1P2L       equ	1163	;# 
 14215   00048C                     PWM3S1P2H       equ	1164	;# 
 14216   00048D                     PWM4ERS         equ	1165	;# 
 14217   00048E                     PWM4CLK         equ	1166	;# 
 14218   00048F                     PWM4LDS         equ	1167	;# 
 14219   000490                     PWM4PR          equ	1168	;# 
 14220   000490                     PWM4PRL         equ	1168	;# 
 14221   000491                     PWM4PRH         equ	1169	;# 
 14222   000492                     PWM4CPRE        equ	1170	;# 
 14223   000493                     PWM4PIPOS       equ	1171	;# 
 14224   000494                     PWM4GIR         equ	1172	;# 
 14225   000495                     PWM4GIE         equ	1173	;# 
 14226   000496                     PWM4CON         equ	1174	;# 
 14227   000497                     PWM4S1CFG       equ	1175	;# 
 14228   000498                     PWM4S1P1        equ	1176	;# 
 14229   000498                     PWM4S1P1L       equ	1176	;# 
 14230   000499                     PWM4S1P1H       equ	1177	;# 
 14231   00049A                     PWM4S1P2        equ	1178	;# 
 14232   00049A                     PWM4S1P2L       equ	1178	;# 
 14233   00049B                     PWM4S1P2H       equ	1179	;# 
 14234   00049C                     PWMLOAD         equ	1180	;# 
 14235   00049D                     PWMEN           equ	1181	;# 
 14236   00049E                     PIE0            equ	1182	;# 
 14237   00049F                     PIE1            equ	1183	;# 
 14238   0004A0                     PIE2            equ	1184	;# 
 14239   0004A1                     PIE3            equ	1185	;# 
 14240   0004A2                     PIE4            equ	1186	;# 
 14241   0004A3                     PIE5            equ	1187	;# 
 14242   0004A4                     PIE6            equ	1188	;# 
 14243   0004A5                     PIE7            equ	1189	;# 
 14244   0004A6                     PIE8            equ	1190	;# 
 14245   0004A7                     PIE9            equ	1191	;# 
 14246   0004A8                     PIE10           equ	1192	;# 
 14247   0004A9                     PIE11           equ	1193	;# 
 14248   0004AA                     PIE12           equ	1194	;# 
 14249   0004AB                     PIE13           equ	1195	;# 
 14250   0004AC                     PIE14           equ	1196	;# 
 14251   0004AD                     PIE15           equ	1197	;# 
 14252   0004AE                     PIR0            equ	1198	;# 
 14253   0004AF                     PIR1            equ	1199	;# 
 14254   0004B0                     PIR2            equ	1200	;# 
 14255   0004B1                     PIR3            equ	1201	;# 
 14256   0004B2                     PIR4            equ	1202	;# 
 14257   0004B3                     PIR5            equ	1203	;# 
 14258   0004B4                     PIR6            equ	1204	;# 
 14259   0004B5                     PIR7            equ	1205	;# 
 14260   0004B6                     PIR8            equ	1206	;# 
 14261   0004B7                     PIR9            equ	1207	;# 
 14262   0004B8                     PIR10           equ	1208	;# 
 14263   0004B9                     PIR11           equ	1209	;# 
 14264   0004BA                     PIR12           equ	1210	;# 
 14265   0004BB                     PIR13           equ	1211	;# 
 14266   0004BC                     PIR14           equ	1212	;# 
 14267   0004BD                     PIR15           equ	1213	;# 
 14268   0004BE                     LATA            equ	1214	;# 
 14269   0004BF                     LATB            equ	1215	;# 
 14270   0004C0                     LATC            equ	1216	;# 
 14271   0004C6                     TRISA           equ	1222	;# 
 14272   0004C7                     TRISB           equ	1223	;# 
 14273   0004C8                     TRISC           equ	1224	;# 
 14274   0004CA                     TRISE           equ	1226	;# 
 14275   0004CE                     PORTA           equ	1230	;# 
 14276   0004CF                     PORTB           equ	1231	;# 
 14277   0004D0                     PORTC           equ	1232	;# 
 14278   0004D2                     PORTE           equ	1234	;# 
 14279   0004D6                     INTCON0         equ	1238	;# 
 14280   0004D7                     INTCON1         equ	1239	;# 
 14281   0004D8                     STATUS          equ	1240	;# 
 14282   0004D9                     FSR2            equ	1241	;# 
 14283   0004D9                     FSR2L           equ	1241	;# 
 14284   0004DA                     FSR2H           equ	1242	;# 
 14285   0004DB                     PLUSW2          equ	1243	;# 
 14286   0004DC                     PREINC2         equ	1244	;# 
 14287   0004DD                     POSTDEC2        equ	1245	;# 
 14288   0004DE                     POSTINC2        equ	1246	;# 
 14289   0004DF                     INDF2           equ	1247	;# 
 14290   0004E0                     BSR             equ	1248	;# 
 14291   0004E1                     FSR1            equ	1249	;# 
 14292   0004E1                     FSR1L           equ	1249	;# 
 14293   0004E2                     FSR1H           equ	1250	;# 
 14294   0004E3                     PLUSW1          equ	1251	;# 
 14295   0004E4                     PREINC1         equ	1252	;# 
 14296   0004E5                     POSTDEC1        equ	1253	;# 
 14297   0004E6                     POSTINC1        equ	1254	;# 
 14298   0004E7                     INDF1           equ	1255	;# 
 14299   0004E8                     WREG            equ	1256	;# 
 14300   0004E9                     FSR0            equ	1257	;# 
 14301   0004E9                     FSR0L           equ	1257	;# 
 14302   0004EA                     FSR0H           equ	1258	;# 
 14303   0004EB                     PLUSW0          equ	1259	;# 
 14304   0004EC                     PREINC0         equ	1260	;# 
 14305   0004ED                     POSTDEC0        equ	1261	;# 
 14306   0004EE                     POSTINC0        equ	1262	;# 
 14307   0004EF                     INDF0           equ	1263	;# 
 14308   0004F0                     PCON0           equ	1264	;# 
 14309   0004F1                     PCON1           equ	1265	;# 
 14310   0004F2                     CPUDOZE         equ	1266	;# 
 14311   0004F3                     PROD            equ	1267	;# 
 14312   0004F3                     PRODL           equ	1267	;# 
 14313   0004F4                     PRODH           equ	1268	;# 
 14314   0004F5                     TABLAT          equ	1269	;# 
 14315   0004F6                     TBLPTR          equ	1270	;# 
 14316   0004F6                     TBLPTRL         equ	1270	;# 
 14317   0004F7                     TBLPTRH         equ	1271	;# 
 14318   0004F8                     TBLPTRU         equ	1272	;# 
 14319   0004F9                     PCLAT           equ	1273	;# 
 14320   0004F9                     PCL             equ	1273	;# 
 14321   0004FA                     PCLATH          equ	1274	;# 
 14322   0004FB                     PCLATU          equ	1275	;# 
 14323   0004FC                     STKPTR          equ	1276	;# 
 14324   0004FD                     TOS             equ	1277	;# 
 14325   0004FD                     TOSL            equ	1277	;# 
 14326   0004FE                     TOSH            equ	1278	;# 
 14327   0004FF                     TOSU            equ	1279	;# 
 14328   000038                     BOOTREG         equ	56	;# 
 14329   000039                     CLKRCON         equ	57	;# 
 14330   00003A                     CLKRCLK         equ	58	;# 
 14331   000040                     NVMCON0         equ	64	;# 
 14332   000041                     NVMCON1         equ	65	;# 
 14333   000042                     NVMLOCK         equ	66	;# 
 14334   000043                     NVMADR          equ	67	;# 
 14335   000043                     NVMADRL         equ	67	;# 
 14336   000044                     NVMADRH         equ	68	;# 
 14337   000045                     NVMADRU         equ	69	;# 
 14338   000046                     NVMDAT          equ	70	;# 
 14339   000046                     NVMDATL         equ	70	;# 
 14340   000047                     NVMDATH         equ	71	;# 
 14341   000048                     VREGCON         equ	72	;# 
 14342   000049                     BORCON          equ	73	;# 
 14343   00004A                     HLVDCON0        equ	74	;# 
 14344   00004B                     HLVDCON1        equ	75	;# 
 14345   00004C                     ZCDCON          equ	76	;# 
 14346   000060                     PMD0            equ	96	;# 
 14347   000061                     PMD1            equ	97	;# 
 14348   000062                     PMD2            equ	98	;# 
 14349   000063                     PMD3            equ	99	;# 
 14350   000064                     PMD4            equ	100	;# 
 14351   000065                     PMD5            equ	101	;# 
 14352   000066                     PMD6            equ	102	;# 
 14353   000067                     PMD7            equ	103	;# 
 14354   000068                     PMD8            equ	104	;# 
 14355   00006A                     MD1CON0         equ	106	;# 
 14356   00006B                     MD1CON1         equ	107	;# 
 14357   00006C                     MD1SRC          equ	108	;# 
 14358   00006D                     MD1CARL         equ	109	;# 
 14359   00006E                     MD1CARH         equ	110	;# 
 14360   00006F                     CMOUT           equ	111	;# 
 14361   000070                     CM1CON0         equ	112	;# 
 14362   000071                     CM1CON1         equ	113	;# 
 14363   000072                     CM1NCH          equ	114	;# 
 14364   000073                     CM1PCH          equ	115	;# 
 14365   000074                     CM2CON0         equ	116	;# 
 14366   000075                     CM2CON1         equ	117	;# 
 14367   000076                     CM2NCH          equ	118	;# 
 14368   000077                     CM2PCH          equ	119	;# 
 14369   000078                     WDTCON0         equ	120	;# 
 14370   000079                     WDTCON1         equ	121	;# 
 14371   00007A                     WDTPSL          equ	122	;# 
 14372   00007B                     WDTPSH          equ	123	;# 
 14373   00007C                     WDTTMR          equ	124	;# 
 14374   00007D                     DAC1DAT         equ	125	;# 
 14375   00007D                     DAC1DATL        equ	125	;# 
 14376   00007F                     DAC1CON         equ	127	;# 
 14377   000080                     SPI1RXB         equ	128	;# 
 14378   000081                     SPI1TXB         equ	129	;# 
 14379   000082                     SPI1TCNT        equ	130	;# 
 14380   000082                     SPI1TCNTL       equ	130	;# 
 14381   000083                     SPI1TCNTH       equ	131	;# 
 14382   000084                     SPI1CON0        equ	132	;# 
 14383   000085                     SPI1CON1        equ	133	;# 
 14384   000086                     SPI1CON2        equ	134	;# 
 14385   000087                     SPI1STATUS      equ	135	;# 
 14386   000088                     SPI1TWIDTH      equ	136	;# 
 14387   000089                     SPI1BAUD        equ	137	;# 
 14388   00008A                     SPI1INTF        equ	138	;# 
 14389   00008B                     SPI1INTE        equ	139	;# 
 14390   00008C                     SPI1CLK         equ	140	;# 
 14391   00008D                     SPI2RXB         equ	141	;# 
 14392   00008E                     SPI2TXB         equ	142	;# 
 14393   00008F                     SPI2TCNT        equ	143	;# 
 14394   00008F                     SPI2TCNTL       equ	143	;# 
 14395   000090                     SPI2TCNTH       equ	144	;# 
 14396   000091                     SPI2CON0        equ	145	;# 
 14397   000092                     SPI2CON1        equ	146	;# 
 14398   000093                     SPI2CON2        equ	147	;# 
 14399   000094                     SPI2STATUS      equ	148	;# 
 14400   000095                     SPI2TWIDTH      equ	149	;# 
 14401   000096                     SPI2BAUD        equ	150	;# 
 14402   000097                     SPI2INTF        equ	151	;# 
 14403   000098                     SPI2INTE        equ	152	;# 
 14404   000099                     SPI2CLK         equ	153	;# 
 14405   0000AC                     ACTCON          equ	172	;# 
 14406   0000AD                     OSCCON1         equ	173	;# 
 14407   0000AE                     OSCCON2         equ	174	;# 
 14408   0000AF                     OSCCON3         equ	175	;# 
 14409   0000B0                     OSCTUNE         equ	176	;# 
 14410   0000B1                     OSCFRQ          equ	177	;# 
 14411   0000B1                     OSCFREQ         equ	177	;# 
 14412   0000B2                     OSCSTAT         equ	178	;# 
 14413   0000B2                     OSCSTAT1        equ	178	;# 
 14414   0000B3                     OSCEN           equ	179	;# 
 14415   0000B4                     PRLOCK          equ	180	;# 
 14416   0000B5                     SCANPR          equ	181	;# 
 14417   0000B6                     DMA1PR          equ	182	;# 
 14418   0000B7                     DMA2PR          equ	183	;# 
 14419   0000B8                     DMA3PR          equ	184	;# 
 14420   0000B9                     DMA4PR          equ	185	;# 
 14421   0000BA                     DMA5PR          equ	186	;# 
 14422   0000BB                     DMA6PR          equ	187	;# 
 14423   0000BC                     DMA7PR          equ	188	;# 
 14424   0000BD                     DMA8PR          equ	189	;# 
 14425   0000BE                     MAINPR          equ	190	;# 
 14426   0000BF                     ISRPR           equ	191	;# 
 14427   0000D4                     CLCDATA         equ	212	;# 
 14428   0000D5                     CLCSELECT       equ	213	;# 
 14429   0000D6                     CLCnCON         equ	214	;# 
 14430   0000D7                     CLCnPOL         equ	215	;# 
 14431   0000D8                     CLCnSEL0        equ	216	;# 
 14432   0000D9                     CLCnSEL1        equ	217	;# 
 14433   0000DA                     CLCnSEL2        equ	218	;# 
 14434   0000DB                     CLCnSEL3        equ	219	;# 
 14435   0000DC                     CLCnGLS0        equ	220	;# 
 14436   0000DD                     CLCnGLS1        equ	221	;# 
 14437   0000DE                     CLCnGLS2        equ	222	;# 
 14438   0000DF                     CLCnGLS3        equ	223	;# 
 14439   0000E8                     DMASELECT       equ	232	;# 
 14440   0000E9                     DMAnBUF         equ	233	;# 
 14441   0000EA                     DMAnDCNT        equ	234	;# 
 14442   0000EA                     DMAnDCNTL       equ	234	;# 
 14443   0000EB                     DMAnDCNTH       equ	235	;# 
 14444   0000EC                     DMAnDPTR        equ	236	;# 
 14445   0000EC                     DMAnDPTRL       equ	236	;# 
 14446   0000ED                     DMAnDPTRH       equ	237	;# 
 14447   0000EE                     DMAnDSZ         equ	238	;# 
 14448   0000EE                     DMAnDSZL        equ	238	;# 
 14449   0000EF                     DMAnDSZH        equ	239	;# 
 14450   0000F0                     DMAnDSA         equ	240	;# 
 14451   0000F0                     DMAnDSAL        equ	240	;# 
 14452   0000F1                     DMAnDSAH        equ	241	;# 
 14453   0000F2                     DMAnSCNT        equ	242	;# 
 14454   0000F2                     DMAnSCNTL       equ	242	;# 
 14455   0000F3                     DMAnSCNTH       equ	243	;# 
 14456   0000F4                     DMAnSPTR        equ	244	;# 
 14457   0000F4                     DMAnSPTRL       equ	244	;# 
 14458   0000F5                     DMAnSPTRH       equ	245	;# 
 14459   0000F6                     DMAnSPTRU       equ	246	;# 
 14460   0000F7                     DMAnSSZ         equ	247	;# 
 14461   0000F7                     DMAnSSZL        equ	247	;# 
 14462   0000F8                     DMAnSSZH        equ	248	;# 
 14463   0000F9                     DMAnSSA         equ	249	;# 
 14464   0000F9                     DMAnSSAL        equ	249	;# 
 14465   0000FA                     DMAnSSAH        equ	250	;# 
 14466   0000FB                     DMAnSSAU        equ	251	;# 
 14467   0000FC                     DMAnCON0        equ	252	;# 
 14468   0000FD                     DMAnCON1        equ	253	;# 
 14469   0000FE                     DMAnAIRQ        equ	254	;# 
 14470   0000FF                     DMAnSIRQ        equ	255	;# 
 14471   000100                     C1CONL          equ	256	;# 
 14472   000101                     C1CONH          equ	257	;# 
 14473   000102                     C1CONU          equ	258	;# 
 14474   000103                     C1CONT          equ	259	;# 
 14475   000104                     C1NBTCFGL       equ	260	;# 
 14476   000105                     C1NBTCFGH       equ	261	;# 
 14477   000106                     C1NBTCFGU       equ	262	;# 
 14478   000107                     C1NBTCFGT       equ	263	;# 
 14479   000108                     C1DBTCFGL       equ	264	;# 
 14480   000109                     C1DBTCFGH       equ	265	;# 
 14481   00010A                     C1DBTCFGU       equ	266	;# 
 14482   00010B                     C1DBTCFGT       equ	267	;# 
 14483   00010C                     C1TDCL          equ	268	;# 
 14484   00010D                     C1TDCH          equ	269	;# 
 14485   00010E                     C1TDCU          equ	270	;# 
 14486   000110                     C1TBC           equ	272	;# 
 14487   000110                     C1TBCL          equ	272	;# 
 14488   000111                     C1TBCH          equ	273	;# 
 14489   000112                     C1TBCU          equ	274	;# 
 14490   000113                     C1TBCT          equ	275	;# 
 14491   000114                     C1TSCONL        equ	276	;# 
 14492   000115                     C1TSCONH        equ	277	;# 
 14493   000116                     C1TSCONU        equ	278	;# 
 14494   000117                     C1TSCONT        equ	279	;# 
 14495   000118                     C1VECL          equ	280	;# 
 14496   000119                     C1VECH          equ	281	;# 
 14497   00011A                     C1VECU          equ	282	;# 
 14498   00011B                     C1VECT          equ	283	;# 
 14499   00011C                     C1INTL          equ	284	;# 
 14500   00011D                     C1INTH          equ	285	;# 
 14501   00011E                     C1INTU          equ	286	;# 
 14502   00011F                     C1INTT          equ	287	;# 
 14503   000120                     C1RXIF          equ	288	;# 
 14504   000120                     C1RXIFL         equ	288	;# 
 14505   000121                     C1RXIFH         equ	289	;# 
 14506   000122                     C1RXIFU         equ	290	;# 
 14507   000123                     C1RXIFT         equ	291	;# 
 14508   000124                     C1TXIF          equ	292	;# 
 14509   000124                     C1TXIFL         equ	292	;# 
 14510   000125                     C1TXIFH         equ	293	;# 
 14511   000126                     C1TXIFU         equ	294	;# 
 14512   000127                     C1TXIFT         equ	295	;# 
 14513   000128                     C1RXOVIF        equ	296	;# 
 14514   000128                     C1RXOVIFL       equ	296	;# 
 14515   000129                     C1RXOVIFH       equ	297	;# 
 14516   00012A                     C1RXOVIFU       equ	298	;# 
 14517   00012B                     C1RXOVIFT       equ	299	;# 
 14518   00012C                     C1TXATIF        equ	300	;# 
 14519   00012C                     C1TXATIFL       equ	300	;# 
 14520   00012D                     C1TXATIFH       equ	301	;# 
 14521   00012E                     C1TXATIFU       equ	302	;# 
 14522   00012F                     C1TXATIFT       equ	303	;# 
 14523   000130                     C1TXREQ         equ	304	;# 
 14524   000130                     C1TXREQL        equ	304	;# 
 14525   000131                     C1TXREQH        equ	305	;# 
 14526   000132                     C1TXREQU        equ	306	;# 
 14527   000133                     C1TXREQT        equ	307	;# 
 14528   000134                     C1TRECL         equ	308	;# 
 14529   000135                     C1TRECH         equ	309	;# 
 14530   000136                     C1TRECU         equ	310	;# 
 14531   000137                     C1TRECT         equ	311	;# 
 14532   000138                     C1BDIAG0L       equ	312	;# 
 14533   000139                     C1BDIAG0H       equ	313	;# 
 14534   00013C                     C1BDIAG1L       equ	316	;# 
 14535   00013D                     C1BDIAG1H       equ	317	;# 
 14536   00013E                     C1BDIAG1U       equ	318	;# 
 14537   00013F                     C1BDIAG1T       equ	319	;# 
 14538   000140                     C1TEFCONL       equ	320	;# 
 14539   000141                     C1TEFCONH       equ	321	;# 
 14540   000142                     C1TEFCONU       equ	322	;# 
 14541   000143                     C1TEFCONT       equ	323	;# 
 14542   000144                     C1TEFSTAL       equ	324	;# 
 14543   000145                     C1TEFSTAH       equ	325	;# 
 14544   000146                     C1TEFSTAU       equ	326	;# 
 14545   000147                     C1TEFSTAT       equ	327	;# 
 14546   000148                     C1TEFUA         equ	328	;# 
 14547   000148                     C1TEFUAL        equ	328	;# 
 14548   000149                     C1TEFUAH        equ	329	;# 
 14549   00014A                     C1TEFUAU        equ	330	;# 
 14550   00014B                     C1TEFUAT        equ	331	;# 
 14551   00014C                     C1FIFOBA        equ	332	;# 
 14552   00014C                     C1FIFOBAL       equ	332	;# 
 14553   00014D                     C1FIFOBAH       equ	333	;# 
 14554   00014E                     C1FIFOBAU       equ	334	;# 
 14555   00014F                     C1FIFOBAT       equ	335	;# 
 14556   000150                     C1TXQCONL       equ	336	;# 
 14557   000151                     C1TXQCONH       equ	337	;# 
 14558   000152                     C1TXQCONU       equ	338	;# 
 14559   000153                     C1TXQCONT       equ	339	;# 
 14560   000154                     C1TXQSTAL       equ	340	;# 
 14561   000155                     C1TXQSTAH       equ	341	;# 
 14562   000156                     C1TXQSTAU       equ	342	;# 
 14563   000157                     C1TXQSTAT       equ	343	;# 
 14564   000158                     C1TXQUA         equ	344	;# 
 14565   000158                     C1TXQUAL        equ	344	;# 
 14566   000159                     C1TXQUAH        equ	345	;# 
 14567   00015A                     C1TXQUAU        equ	346	;# 
 14568   00015B                     C1TXQUAT        equ	347	;# 
 14569   00015C                     C1FIFOCON1      equ	348	;# 
 14570   00015C                     C1FIFOCON1L     equ	348	;# 
 14571   00015D                     C1FIFOCON1H     equ	349	;# 
 14572   00015E                     C1FIFOCON1U     equ	350	;# 
 14573   00015F                     C1FIFOCON1T     equ	351	;# 
 14574   000160                     C1FIFOSTA1      equ	352	;# 
 14575   000160                     C1FIFOSTA1L     equ	352	;# 
 14576   000161                     C1FIFOSTA1H     equ	353	;# 
 14577   000162                     C1FIFOSTA1U     equ	354	;# 
 14578   000163                     C1FIFOSTA1T     equ	355	;# 
 14579   000164                     C1FIFOUA1       equ	356	;# 
 14580   000164                     C1FIFOUA1L      equ	356	;# 
 14581   000165                     C1FIFOUA1H      equ	357	;# 
 14582   000166                     C1FIFOUA1U      equ	358	;# 
 14583   000167                     C1FIFOUA1T      equ	359	;# 
 14584   000168                     C1FIFOCON2      equ	360	;# 
 14585   000168                     C1FIFOCON2L     equ	360	;# 
 14586   000169                     C1FIFOCON2H     equ	361	;# 
 14587   00016A                     C1FIFOCON2U     equ	362	;# 
 14588   00016B                     C1FIFOCON2T     equ	363	;# 
 14589   00016C                     C1FIFOSTA2      equ	364	;# 
 14590   00016C                     C1FIFOSTA2L     equ	364	;# 
 14591   00016D                     C1FIFOSTA2H     equ	365	;# 
 14592   00016E                     C1FIFOSTA2U     equ	366	;# 
 14593   00016F                     C1FIFOSTA2T     equ	367	;# 
 14594   000170                     C1FIFOUA2       equ	368	;# 
 14595   000170                     C1FIFOUA2L      equ	368	;# 
 14596   000171                     C1FIFOUA2H      equ	369	;# 
 14597   000172                     C1FIFOUA2U      equ	370	;# 
 14598   000173                     C1FIFOUA2T      equ	371	;# 
 14599   000174                     C1FIFOCON3      equ	372	;# 
 14600   000174                     C1FIFOCON3L     equ	372	;# 
 14601   000175                     C1FIFOCON3H     equ	373	;# 
 14602   000176                     C1FIFOCON3U     equ	374	;# 
 14603   000177                     C1FIFOCON3T     equ	375	;# 
 14604   000178                     C1FIFOSTA3      equ	376	;# 
 14605   000178                     C1FIFOSTA3L     equ	376	;# 
 14606   000179                     C1FIFOSTA3H     equ	377	;# 
 14607   00017A                     C1FIFOSTA3U     equ	378	;# 
 14608   00017B                     C1FIFOSTA3T     equ	379	;# 
 14609   00017C                     C1FIFOUA3       equ	380	;# 
 14610   00017C                     C1FIFOUA3L      equ	380	;# 
 14611   00017D                     C1FIFOUA3H      equ	381	;# 
 14612   00017E                     C1FIFOUA3U      equ	382	;# 
 14613   00017F                     C1FIFOUA3T      equ	383	;# 
 14614   000180                     C1FLTCON0L      equ	384	;# 
 14615   000181                     C1FLTCON0H      equ	385	;# 
 14616   000182                     C1FLTCON0U      equ	386	;# 
 14617   000183                     C1FLTCON0T      equ	387	;# 
 14618   000184                     C1FLTCON1L      equ	388	;# 
 14619   000185                     C1FLTCON1H      equ	389	;# 
 14620   000186                     C1FLTCON1U      equ	390	;# 
 14621   000187                     C1FLTCON1T      equ	391	;# 
 14622   000188                     C1FLTCON2L      equ	392	;# 
 14623   000189                     C1FLTCON2H      equ	393	;# 
 14624   00018A                     C1FLTCON2U      equ	394	;# 
 14625   00018B                     C1FLTCON2T      equ	395	;# 
 14626   00018C                     C1FLTOBJ0       equ	396	;# 
 14627   00018C                     C1FLTOBJ0L      equ	396	;# 
 14628   00018D                     C1FLTOBJ0H      equ	397	;# 
 14629   00018E                     C1FLTOBJ0U      equ	398	;# 
 14630   00018F                     C1FLTOBJ0T      equ	399	;# 
 14631   000190                     C1MASK0         equ	400	;# 
 14632   000190                     C1MASK0L        equ	400	;# 
 14633   000191                     C1MASK0H        equ	401	;# 
 14634   000192                     C1MASK0U        equ	402	;# 
 14635   000193                     C1MASK0T        equ	403	;# 
 14636   000194                     C1FLTOBJ1       equ	404	;# 
 14637   000194                     C1FLTOBJ1L      equ	404	;# 
 14638   000195                     C1FLTOBJ1H      equ	405	;# 
 14639   000196                     C1FLTOBJ1U      equ	406	;# 
 14640   000197                     C1FLTOBJ1T      equ	407	;# 
 14641   000198                     C1MASK1         equ	408	;# 
 14642   000198                     C1MASK1L        equ	408	;# 
 14643   000199                     C1MASK1H        equ	409	;# 
 14644   00019A                     C1MASK1U        equ	410	;# 
 14645   00019B                     C1MASK1T        equ	411	;# 
 14646   00019C                     C1FLTOBJ2       equ	412	;# 
 14647   00019C                     C1FLTOBJ2L      equ	412	;# 
 14648   00019D                     C1FLTOBJ2H      equ	413	;# 
 14649   00019E                     C1FLTOBJ2U      equ	414	;# 
 14650   00019F                     C1FLTOBJ2T      equ	415	;# 
 14651   0001A0                     C1MASK2         equ	416	;# 
 14652   0001A0                     C1MASK2L        equ	416	;# 
 14653   0001A1                     C1MASK2H        equ	417	;# 
 14654   0001A2                     C1MASK2U        equ	418	;# 
 14655   0001A3                     C1MASK2T        equ	419	;# 
 14656   0001A4                     C1FLTOBJ3       equ	420	;# 
 14657   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14658   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14659   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14660   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14661   0001A8                     C1MASK3         equ	424	;# 
 14662   0001A8                     C1MASK3L        equ	424	;# 
 14663   0001A9                     C1MASK3H        equ	425	;# 
 14664   0001AA                     C1MASK3U        equ	426	;# 
 14665   0001AB                     C1MASK3T        equ	427	;# 
 14666   0001AC                     C1FLTOBJ4       equ	428	;# 
 14667   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14668   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14669   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14670   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14671   0001B0                     C1MASK4         equ	432	;# 
 14672   0001B0                     C1MASK4L        equ	432	;# 
 14673   0001B1                     C1MASK4H        equ	433	;# 
 14674   0001B2                     C1MASK4U        equ	434	;# 
 14675   0001B3                     C1MASK4T        equ	435	;# 
 14676   0001B4                     C1FLTOBJ5       equ	436	;# 
 14677   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14678   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14679   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14680   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14681   0001B8                     C1MASK5         equ	440	;# 
 14682   0001B8                     C1MASK5L        equ	440	;# 
 14683   0001B9                     C1MASK5H        equ	441	;# 
 14684   0001BA                     C1MASK5U        equ	442	;# 
 14685   0001BB                     C1MASK5T        equ	443	;# 
 14686   0001BC                     C1FLTOBJ6       equ	444	;# 
 14687   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14688   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14689   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14690   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14691   0001C0                     C1MASK6         equ	448	;# 
 14692   0001C0                     C1MASK6L        equ	448	;# 
 14693   0001C1                     C1MASK6H        equ	449	;# 
 14694   0001C2                     C1MASK6U        equ	450	;# 
 14695   0001C3                     C1MASK6T        equ	451	;# 
 14696   0001C4                     C1FLTOBJ7       equ	452	;# 
 14697   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14698   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14699   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14700   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14701   0001C8                     C1MASK7         equ	456	;# 
 14702   0001C8                     C1MASK7L        equ	456	;# 
 14703   0001C9                     C1MASK7H        equ	457	;# 
 14704   0001CA                     C1MASK7U        equ	458	;# 
 14705   0001CB                     C1MASK7T        equ	459	;# 
 14706   0001CC                     C1FLTOBJ8       equ	460	;# 
 14707   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14708   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14709   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14710   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14711   0001D0                     C1MASK8         equ	464	;# 
 14712   0001D0                     C1MASK8L        equ	464	;# 
 14713   0001D1                     C1MASK8H        equ	465	;# 
 14714   0001D2                     C1MASK8U        equ	466	;# 
 14715   0001D3                     C1MASK8T        equ	467	;# 
 14716   0001D4                     C1FLTOBJ9       equ	468	;# 
 14717   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14718   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14719   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14720   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14721   0001D8                     C1MASK9         equ	472	;# 
 14722   0001D8                     C1MASK9L        equ	472	;# 
 14723   0001D9                     C1MASK9H        equ	473	;# 
 14724   0001DA                     C1MASK9U        equ	474	;# 
 14725   0001DB                     C1MASK9T        equ	475	;# 
 14726   0001DC                     C1FLTOBJ10      equ	476	;# 
 14727   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14728   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14729   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14730   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14731   0001E0                     C1MASK10        equ	480	;# 
 14732   0001E0                     C1MASK10L       equ	480	;# 
 14733   0001E1                     C1MASK10H       equ	481	;# 
 14734   0001E2                     C1MASK10U       equ	482	;# 
 14735   0001E3                     C1MASK10T       equ	483	;# 
 14736   0001E4                     C1FLTOBJ11      equ	484	;# 
 14737   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14738   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14739   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14740   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14741   0001E8                     C1MASK11        equ	488	;# 
 14742   0001E8                     C1MASK11L       equ	488	;# 
 14743   0001E9                     C1MASK11H       equ	489	;# 
 14744   0001EA                     C1MASK11U       equ	490	;# 
 14745   0001EB                     C1MASK11T       equ	491	;# 
 14746   000200                     PPSLOCK         equ	512	;# 
 14747   000201                     RA0PPS          equ	513	;# 
 14748   000202                     RA1PPS          equ	514	;# 
 14749   000203                     RA2PPS          equ	515	;# 
 14750   000204                     RA3PPS          equ	516	;# 
 14751   000205                     RA4PPS          equ	517	;# 
 14752   000206                     RA5PPS          equ	518	;# 
 14753   000207                     RA6PPS          equ	519	;# 
 14754   000208                     RA7PPS          equ	520	;# 
 14755   000209                     RB0PPS          equ	521	;# 
 14756   00020A                     RB1PPS          equ	522	;# 
 14757   00020B                     RB2PPS          equ	523	;# 
 14758   00020C                     RB3PPS          equ	524	;# 
 14759   00020D                     RB4PPS          equ	525	;# 
 14760   00020E                     RB5PPS          equ	526	;# 
 14761   00020F                     RB6PPS          equ	527	;# 
 14762   000210                     RB7PPS          equ	528	;# 
 14763   000211                     RC0PPS          equ	529	;# 
 14764   000212                     RC1PPS          equ	530	;# 
 14765   000213                     RC2PPS          equ	531	;# 
 14766   000214                     RC3PPS          equ	532	;# 
 14767   000215                     RC4PPS          equ	533	;# 
 14768   000216                     RC5PPS          equ	534	;# 
 14769   000217                     RC6PPS          equ	535	;# 
 14770   000218                     RC7PPS          equ	536	;# 
 14771   00023D                     CANRXPPS        equ	573	;# 
 14772   00023E                     INT0PPS         equ	574	;# 
 14773   00023F                     INT1PPS         equ	575	;# 
 14774   000240                     INT2PPS         equ	576	;# 
 14775   000241                     T0CKIPPS        equ	577	;# 
 14776   000242                     T1CKIPPS        equ	578	;# 
 14777   000243                     T1GPPS          equ	579	;# 
 14778   000244                     T3CKIPPS        equ	580	;# 
 14779   000245                     T3GPPS          equ	581	;# 
 14780   000246                     T5CKIPPS        equ	582	;# 
 14781   000247                     T5GPPS          equ	583	;# 
 14782   000248                     T2INPPS         equ	584	;# 
 14783   000249                     T4INPPS         equ	585	;# 
 14784   00024A                     T6INPPS         equ	586	;# 
 14785   00024B                     TUIN0PPS        equ	587	;# 
 14786   00024C                     TUIN1PPS        equ	588	;# 
 14787   00024F                     CCP1PPS         equ	591	;# 
 14788   000250                     CCP2PPS         equ	592	;# 
 14789   000251                     CCP3PPS         equ	593	;# 
 14790   000253                     PWM1ERSPPS      equ	595	;# 
 14791   000254                     PWM2ERSPPS      equ	596	;# 
 14792   000255                     PWM3ERSPPS      equ	597	;# 
 14793   000256                     PWM4ERSPPS      equ	598	;# 
 14794   000257                     PWMIN0PPS       equ	599	;# 
 14795   000258                     PWMIN1PPS       equ	600	;# 
 14796   000259                     SMT1WINPPS      equ	601	;# 
 14797   00025A                     SMT1SIGPPS      equ	602	;# 
 14798   00025B                     CWG1PPS         equ	603	;# 
 14799   00025B                     CWG1INPPS       equ	603	;# 
 14800   00025C                     CWG2PPS         equ	604	;# 
 14801   00025C                     CWG2INPPS       equ	604	;# 
 14802   00025D                     CWG3PPS         equ	605	;# 
 14803   00025D                     CWG3INPPS       equ	605	;# 
 14804   00025E                     MD1CARLPPS      equ	606	;# 
 14805   00025E                     MDCARLPPS       equ	606	;# 
 14806   00025F                     MD1CARHPPS      equ	607	;# 
 14807   00025F                     MDCARHPPS       equ	607	;# 
 14808   000260                     MD1SRCPPS       equ	608	;# 
 14809   000260                     MDSRCPPS        equ	608	;# 
 14810   000261                     CLCIN0PPS       equ	609	;# 
 14811   000262                     CLCIN1PPS       equ	610	;# 
 14812   000263                     CLCIN2PPS       equ	611	;# 
 14813   000264                     CLCIN3PPS       equ	612	;# 
 14814   000265                     CLCIN4PPS       equ	613	;# 
 14815   000266                     CLCIN5PPS       equ	614	;# 
 14816   000267                     CLCIN6PPS       equ	615	;# 
 14817   000268                     CLCIN7PPS       equ	616	;# 
 14818   000269                     ADACTPPS        equ	617	;# 
 14819   00026A                     SPI1SCKPPS      equ	618	;# 
 14820   00026B                     SPI1SDIPPS      equ	619	;# 
 14821   00026C                     SPI1SSPPS       equ	620	;# 
 14822   00026D                     SPI2SCKPPS      equ	621	;# 
 14823   00026E                     SPI2SDIPPS      equ	622	;# 
 14824   00026F                     SPI2SSPPS       equ	623	;# 
 14825   000270                     I2C1SDAPPS      equ	624	;# 
 14826   000271                     I2C1SCLPPS      equ	625	;# 
 14827   000272                     U1RXPPS         equ	626	;# 
 14828   000273                     U1CTSPPS        equ	627	;# 
 14829   000274                     U2RXPPS         equ	628	;# 
 14830   000275                     U2CTSPPS        equ	629	;# 
 14831   000276                     U3RXPPS         equ	630	;# 
 14832   000277                     U3CTSPPS        equ	631	;# 
 14833   000278                     U4RXPPS         equ	632	;# 
 14834   000279                     U4CTSPPS        equ	633	;# 
 14835   00027A                     U5RXPPS         equ	634	;# 
 14836   00027B                     U5CTSPPS        equ	635	;# 
 14837   000286                     RC4I2C          equ	646	;# 
 14838   000287                     RC3I2C          equ	647	;# 
 14839   000288                     RB2I2C          equ	648	;# 
 14840   000289                     RB1I2C          equ	649	;# 
 14841   00028A                     I2C1RXB         equ	650	;# 
 14842   00028B                     I2C1TXB         equ	651	;# 
 14843   00028C                     I2C1CNTL        equ	652	;# 
 14844   00028D                     I2C1CNTH        equ	653	;# 
 14845   00028E                     I2C1ADB0        equ	654	;# 
 14846   00028F                     I2C1ADB1        equ	655	;# 
 14847   000290                     I2C1ADR0        equ	656	;# 
 14848   000291                     I2C1ADR1        equ	657	;# 
 14849   000292                     I2C1ADR2        equ	658	;# 
 14850   000293                     I2C1ADR3        equ	659	;# 
 14851   000294                     I2C1CON0        equ	660	;# 
 14852   000295                     I2C1CON1        equ	661	;# 
 14853   000296                     I2C1CON2        equ	662	;# 
 14854   000297                     I2C1ERR         equ	663	;# 
 14855   000298                     I2C1STAT0       equ	664	;# 
 14856   000299                     I2C1STAT1       equ	665	;# 
 14857   00029A                     I2C1PIR         equ	666	;# 
 14858   00029B                     I2C1PIE         equ	667	;# 
 14859   00029C                     I2C1BTO         equ	668	;# 
 14860   00029D                     I2C1BAUD        equ	669	;# 
 14861   00029E                     I2C1CLK         equ	670	;# 
 14862   00029F                     I2C1BTOC        equ	671	;# 
 14863   0002A1                     U1RXB           equ	673	;# 
 14864   0002A1                     U1RXBL          equ	673	;# 
 14865   0002A2                     U1RXCHK         equ	674	;# 
 14866   0002A3                     U1TXB           equ	675	;# 
 14867   0002A3                     U1TXBL          equ	675	;# 
 14868   0002A4                     U1TXCHK         equ	676	;# 
 14869   0002A5                     U1P1            equ	677	;# 
 14870   0002A5                     U1P1L           equ	677	;# 
 14871   0002A6                     U1P1H           equ	678	;# 
 14872   0002A7                     U1P2            equ	679	;# 
 14873   0002A7                     U1P2L           equ	679	;# 
 14874   0002A8                     U1P2H           equ	680	;# 
 14875   0002A9                     U1P3            equ	681	;# 
 14876   0002A9                     U1P3L           equ	681	;# 
 14877   0002AA                     U1P3H           equ	682	;# 
 14878   0002AB                     U1CON0          equ	683	;# 
 14879   0002AC                     U1CON1          equ	684	;# 
 14880   0002AD                     U1CON2          equ	685	;# 
 14881   0002AE                     U1BRG           equ	686	;# 
 14882   0002AE                     U1BRGL          equ	686	;# 
 14883   0002AF                     U1BRGH          equ	687	;# 
 14884   0002B0                     U1FIFO          equ	688	;# 
 14885   0002B1                     U1UIR           equ	689	;# 
 14886   0002B2                     U1ERRIR         equ	690	;# 
 14887   0002B3                     U1ERRIE         equ	691	;# 
 14888   0002B4                     U2RXB           equ	692	;# 
 14889   0002B4                     U2RXBL          equ	692	;# 
 14890   0002B5                     U2RXCHK         equ	693	;# 
 14891   0002B6                     U2TXB           equ	694	;# 
 14892   0002B6                     U2TXBL          equ	694	;# 
 14893   0002B7                     U2TXCHK         equ	695	;# 
 14894   0002B8                     U2P1            equ	696	;# 
 14895   0002B8                     U2P1L           equ	696	;# 
 14896   0002B9                     U2P1H           equ	697	;# 
 14897   0002BA                     U2P2            equ	698	;# 
 14898   0002BA                     U2P2L           equ	698	;# 
 14899   0002BB                     U2P2H           equ	699	;# 
 14900   0002BC                     U2P3            equ	700	;# 
 14901   0002BC                     U2P3L           equ	700	;# 
 14902   0002BD                     U2P3H           equ	701	;# 
 14903   0002BE                     U2CON0          equ	702	;# 
 14904   0002BF                     U2CON1          equ	703	;# 
 14905   0002C0                     U2CON2          equ	704	;# 
 14906   0002C1                     U2BRG           equ	705	;# 
 14907   0002C1                     U2BRGL          equ	705	;# 
 14908   0002C2                     U2BRGH          equ	706	;# 
 14909   0002C3                     U2FIFO          equ	707	;# 
 14910   0002C4                     U2UIR           equ	708	;# 
 14911   0002C5                     U2ERRIR         equ	709	;# 
 14912   0002C6                     U2ERRIE         equ	710	;# 
 14913   0002C7                     U3RXB           equ	711	;# 
 14914   0002C7                     U3RXBL          equ	711	;# 
 14915   0002C9                     U3TXB           equ	713	;# 
 14916   0002C9                     U3TXBL          equ	713	;# 
 14917   0002CB                     U3P1            equ	715	;# 
 14918   0002CB                     U3P1L           equ	715	;# 
 14919   0002CD                     U3P2            equ	717	;# 
 14920   0002CD                     U3P2L           equ	717	;# 
 14921   0002CF                     U3P3            equ	719	;# 
 14922   0002CF                     U3P3L           equ	719	;# 
 14923   0002D1                     U3CON0          equ	721	;# 
 14924   0002D2                     U3CON1          equ	722	;# 
 14925   0002D3                     U3CON2          equ	723	;# 
 14926   0002D4                     U3BRG           equ	724	;# 
 14927   0002D4                     U3BRGL          equ	724	;# 
 14928   0002D5                     U3BRGH          equ	725	;# 
 14929   0002D6                     U3FIFO          equ	726	;# 
 14930   0002D7                     U3UIR           equ	727	;# 
 14931   0002D8                     U3ERRIR         equ	728	;# 
 14932   0002D9                     U3ERRIE         equ	729	;# 
 14933   0002DA                     U4RXB           equ	730	;# 
 14934   0002DA                     U4RXBL          equ	730	;# 
 14935   0002DC                     U4TXB           equ	732	;# 
 14936   0002DC                     U4TXBL          equ	732	;# 
 14937   0002DE                     U4P1            equ	734	;# 
 14938   0002DE                     U4P1L           equ	734	;# 
 14939   0002E0                     U4P2            equ	736	;# 
 14940   0002E0                     U4P2L           equ	736	;# 
 14941   0002E2                     U4P3            equ	738	;# 
 14942   0002E2                     U4P3L           equ	738	;# 
 14943   0002E4                     U4CON0          equ	740	;# 
 14944   0002E5                     U4CON1          equ	741	;# 
 14945   0002E6                     U4CON2          equ	742	;# 
 14946   0002E7                     U4BRG           equ	743	;# 
 14947   0002E7                     U4BRGL          equ	743	;# 
 14948   0002E8                     U4BRGH          equ	744	;# 
 14949   0002E9                     U4FIFO          equ	745	;# 
 14950   0002EA                     U4UIR           equ	746	;# 
 14951   0002EB                     U4ERRIR         equ	747	;# 
 14952   0002EC                     U4ERRIE         equ	748	;# 
 14953   0002ED                     U5RXB           equ	749	;# 
 14954   0002ED                     U5RXBL          equ	749	;# 
 14955   0002EF                     U5TXB           equ	751	;# 
 14956   0002EF                     U5TXBL          equ	751	;# 
 14957   0002F1                     U5P1            equ	753	;# 
 14958   0002F1                     U5P1L           equ	753	;# 
 14959   0002F3                     U5P2            equ	755	;# 
 14960   0002F3                     U5P2L           equ	755	;# 
 14961   0002F5                     U5P3            equ	757	;# 
 14962   0002F5                     U5P3L           equ	757	;# 
 14963   0002F7                     U5CON0          equ	759	;# 
 14964   0002F8                     U5CON1          equ	760	;# 
 14965   0002F9                     U5CON2          equ	761	;# 
 14966   0002FA                     U5BRG           equ	762	;# 
 14967   0002FA                     U5BRGL          equ	762	;# 
 14968   0002FB                     U5BRGH          equ	763	;# 
 14969   0002FC                     U5FIFO          equ	764	;# 
 14970   0002FD                     U5UIR           equ	765	;# 
 14971   0002FE                     U5ERRIR         equ	766	;# 
 14972   0002FF                     U5ERRIE         equ	767	;# 
 14973   000300                     SMT1TMR         equ	768	;# 
 14974   000300                     SMT1TMRL        equ	768	;# 
 14975   000301                     SMT1TMRH        equ	769	;# 
 14976   000302                     SMT1TMRU        equ	770	;# 
 14977   000303                     SMT1CPR         equ	771	;# 
 14978   000303                     SMT1CPRL        equ	771	;# 
 14979   000304                     SMT1CPRH        equ	772	;# 
 14980   000305                     SMT1CPRU        equ	773	;# 
 14981   000306                     SMT1CPW         equ	774	;# 
 14982   000306                     SMT1CPWL        equ	774	;# 
 14983   000307                     SMT1CPWH        equ	775	;# 
 14984   000308                     SMT1CPWU        equ	776	;# 
 14985   000309                     SMT1PR          equ	777	;# 
 14986   000309                     SMT1PRL         equ	777	;# 
 14987   00030A                     SMT1PRH         equ	778	;# 
 14988   00030B                     SMT1PRU         equ	779	;# 
 14989   00030C                     SMT1CON0        equ	780	;# 
 14990   00030D                     SMT1CON1        equ	781	;# 
 14991   00030E                     SMT1STAT        equ	782	;# 
 14992   00030F                     SMT1CLK         equ	783	;# 
 14993   000310                     SMT1SIG         equ	784	;# 
 14994   000311                     SMT1WIN         equ	785	;# 
 14995   000318                     TMR0L           equ	792	;# 
 14996   000318                     TMR0            equ	792	;# 
 14997   000319                     TMR0H           equ	793	;# 
 14998   000319                     PR0             equ	793	;# 
 14999   00031A                     T0CON0          equ	794	;# 
 15000   00031B                     T0CON1          equ	795	;# 
 15001   00031C                     TMR1            equ	796	;# 
 15002   00031C                     TMR1L           equ	796	;# 
 15003   00031D                     TMR1H           equ	797	;# 
 15004   00031E                     T1CON           equ	798	;# 
 15005   00031E                     TMR1CON         equ	798	;# 
 15006   00031F                     T1GCON          equ	799	;# 
 15007   00031F                     TMR1GCON        equ	799	;# 
 15008   000320                     T1GATE          equ	800	;# 
 15009   000320                     TMR1GATE        equ	800	;# 
 15010   000321                     T1CLK           equ	801	;# 
 15011   000321                     TMR1CLK         equ	801	;# 
 15012   000321                     PR1             equ	801	;# 
 15013   000322                     T2TMR           equ	802	;# 
 15014   000322                     TMR2            equ	802	;# 
 15015   000323                     T2PR            equ	803	;# 
 15016   000323                     PR2             equ	803	;# 
 15017   000324                     T2CON           equ	804	;# 
 15018   000325                     T2HLT           equ	805	;# 
 15019   000326                     T2CLKCON        equ	806	;# 
 15020   000326                     T2CLK           equ	806	;# 
 15021   000327                     T2RST           equ	807	;# 
 15022   000328                     TMR3            equ	808	;# 
 15023   000328                     TMR3L           equ	808	;# 
 15024   000329                     TMR3H           equ	809	;# 
 15025   00032A                     T3CON           equ	810	;# 
 15026   00032A                     TMR3CON         equ	810	;# 
 15027   00032B                     T3GCON          equ	811	;# 
 15028   00032B                     TMR3GCON        equ	811	;# 
 15029   00032C                     T3GATE          equ	812	;# 
 15030   00032C                     TMR3GATE        equ	812	;# 
 15031   00032D                     T3CLK           equ	813	;# 
 15032   00032D                     TMR3CLK         equ	813	;# 
 15033   00032D                     PR3             equ	813	;# 
 15034   00032E                     T4TMR           equ	814	;# 
 15035   00032E                     TMR4            equ	814	;# 
 15036   00032F                     T4PR            equ	815	;# 
 15037   00032F                     PR4             equ	815	;# 
 15038   000330                     T4CON           equ	816	;# 
 15039   000331                     T4HLT           equ	817	;# 
 15040   000332                     T4CLKCON        equ	818	;# 
 15041   000332                     T4CLK           equ	818	;# 
 15042   000333                     T4RST           equ	819	;# 
 15043   000334                     TMR5            equ	820	;# 
 15044   000334                     TMR5L           equ	820	;# 
 15045   000335                     TMR5H           equ	821	;# 
 15046   000336                     T5CON           equ	822	;# 
 15047   000336                     TMR5CON         equ	822	;# 
 15048   000337                     T5GCON          equ	823	;# 
 15049   000337                     TMR5GCON        equ	823	;# 
 15050   000338                     T5GATE          equ	824	;# 
 15051   000338                     TMR5GATE        equ	824	;# 
 15052   000339                     T5CLK           equ	825	;# 
 15053   000339                     TMR5CLK         equ	825	;# 
 15054   000339                     PR5             equ	825	;# 
 15055   00033A                     T6TMR           equ	826	;# 
 15056   00033A                     TMR6            equ	826	;# 
 15057   00033B                     T6PR            equ	827	;# 
 15058   00033B                     PR6             equ	827	;# 
 15059   00033C                     T6CON           equ	828	;# 
 15060   00033D                     T6HLT           equ	829	;# 
 15061   00033E                     T6CLKCON        equ	830	;# 
 15062   00033E                     T6CLK           equ	830	;# 
 15063   00033F                     T6RST           equ	831	;# 
 15064   000340                     CCPR1           equ	832	;# 
 15065   000340                     CCPR1L          equ	832	;# 
 15066   000341                     CCPR1H          equ	833	;# 
 15067   000342                     CCP1CON         equ	834	;# 
 15068   000343                     CCP1CAP         equ	835	;# 
 15069   000344                     CCPR2           equ	836	;# 
 15070   000344                     CCPR2L          equ	836	;# 
 15071   000345                     CCPR2H          equ	837	;# 
 15072   000346                     CCP2CON         equ	838	;# 
 15073   000347                     CCP2CAP         equ	839	;# 
 15074   000348                     CCPR3           equ	840	;# 
 15075   000348                     CCPR3L          equ	840	;# 
 15076   000349                     CCPR3H          equ	841	;# 
 15077   00034A                     CCP3CON         equ	842	;# 
 15078   00034B                     CCP3CAP         equ	843	;# 
 15079   00034C                     CCPTMRS0        equ	844	;# 
 15080   00034F                     CRCDATA         equ	847	;# 
 15081   00034F                     CRCDATAL        equ	847	;# 
 15082   000350                     CRCDATAH        equ	848	;# 
 15083   000351                     CRCDATAU        equ	849	;# 
 15084   000352                     CRCDATAT        equ	850	;# 
 15085   000353                     CRCOUT          equ	851	;# 
 15086   000353                     CRCSHFT         equ	851	;# 
 15087   000353                     CRCXOR          equ	851	;# 
 15088   000353                     CRCOUTL         equ	851	;# 
 15089   000353                     CRCSHFTL        equ	851	;# 
 15090   000353                     CRCSHIFTL       equ	851	;# 
 15091   000353                     CRCXORL         equ	851	;# 
 15092   000354                     CRCOUTH         equ	852	;# 
 15093   000354                     CRCSHFTH        equ	852	;# 
 15094   000354                     CRCSHIFTH       equ	852	;# 
 15095   000354                     CRCXORH         equ	852	;# 
 15096   000355                     CRCOUTU         equ	853	;# 
 15097   000355                     CRCSHFTU        equ	853	;# 
 15098   000355                     CRCSHIFTU       equ	853	;# 
 15099   000355                     CRCXORU         equ	853	;# 
 15100   000356                     CRCOUTT         equ	854	;# 
 15101   000356                     CRCSHFTT        equ	854	;# 
 15102   000356                     CRCSHIFTT       equ	854	;# 
 15103   000356                     CRCXORT         equ	854	;# 
 15104   000357                     CRCCON0         equ	855	;# 
 15105   000358                     CRCCON1         equ	856	;# 
 15106   000359                     CRCCON2         equ	857	;# 
 15107   00035A                     SCANLADR        equ	858	;# 
 15108   00035A                     SCANLADRL       equ	858	;# 
 15109   00035B                     SCANLADRH       equ	859	;# 
 15110   00035C                     SCANLADRU       equ	860	;# 
 15111   00035D                     SCANHADR        equ	861	;# 
 15112   00035D                     SCANHADRL       equ	861	;# 
 15113   00035E                     SCANHADRH       equ	862	;# 
 15114   00035F                     SCANHADRU       equ	863	;# 
 15115   000360                     SCANCON0        equ	864	;# 
 15116   000361                     SCANTRIG        equ	865	;# 
 15117   000362                     IPR0            equ	866	;# 
 15118   000363                     IPR1            equ	867	;# 
 15119   000364                     IPR2            equ	868	;# 
 15120   000365                     IPR3            equ	869	;# 
 15121   000366                     IPR4            equ	870	;# 
 15122   000367                     IPR5            equ	871	;# 
 15123   000368                     IPR6            equ	872	;# 
 15124   000369                     IPR7            equ	873	;# 
 15125   00036A                     IPR8            equ	874	;# 
 15126   00036B                     IPR9            equ	875	;# 
 15127   00036C                     IPR10           equ	876	;# 
 15128   00036D                     IPR11           equ	877	;# 
 15129   00036E                     IPR12           equ	878	;# 
 15130   00036F                     IPR13           equ	879	;# 
 15131   000370                     IPR14           equ	880	;# 
 15132   000371                     IPR15           equ	881	;# 
 15133   000373                     STATUS_CSHAD    equ	883	;# 
 15134   000374                     WREG_CSHAD      equ	884	;# 
 15135   000375                     BSR_CSHAD       equ	885	;# 
 15136   000376                     SHADCON         equ	886	;# 
 15137   000377                     STATUS_SHAD     equ	887	;# 
 15138   000378                     WREG_SHAD       equ	888	;# 
 15139   000379                     BSR_SHAD        equ	889	;# 
 15140   00037A                     PCLATH_SHAD     equ	890	;# 
 15141   00037B                     PCLATU_SHAD     equ	891	;# 
 15142   00037C                     FSR0SH          equ	892	;# 
 15143   00037C                     FSR0L_SHAD      equ	892	;# 
 15144   00037D                     FSR0H_SHAD      equ	893	;# 
 15145   00037E                     FSR1SH          equ	894	;# 
 15146   00037E                     FSR1L_SHAD      equ	894	;# 
 15147   00037F                     FSR1H_SHAD      equ	895	;# 
 15148   000380                     FSR2SH          equ	896	;# 
 15149   000380                     FSR2L_SHAD      equ	896	;# 
 15150   000381                     FSR2H_SHAD      equ	897	;# 
 15151   000382                     PRODSH          equ	898	;# 
 15152   000382                     PRODL_SHAD      equ	898	;# 
 15153   000383                     PRODH_SHAD      equ	899	;# 
 15154   000387                     TU16ACON0       equ	903	;# 
 15155   000388                     TU16ACON1       equ	904	;# 
 15156   000389                     TU16AHLT        equ	905	;# 
 15157   00038A                     TU16APS         equ	906	;# 
 15158   00038B                     TU16ATMR        equ	907	;# 
 15159   00038B                     TU16ACR         equ	907	;# 
 15160   00038B                     TU16ATMRL       equ	907	;# 
 15161   00038B                     TU16ACRL        equ	907	;# 
 15162   00038C                     TU16ATMRH       equ	908	;# 
 15163   00038C                     TU16ACRH        equ	908	;# 
 15164   00038D                     TU16APR         equ	909	;# 
 15165   00038D                     TU16APRL        equ	909	;# 
 15166   00038E                     TU16APRH        equ	910	;# 
 15167   00038F                     TU16ACLK        equ	911	;# 
 15168   000390                     TU16AERS        equ	912	;# 
 15169   000393                     TU16BCON0       equ	915	;# 
 15170   000394                     TU16BCON1       equ	916	;# 
 15171   000395                     TU16BHLT        equ	917	;# 
 15172   000396                     TU16BPS         equ	918	;# 
 15173   000397                     TU16BTMR        equ	919	;# 
 15174   000397                     TU16BCR         equ	919	;# 
 15175   000397                     TU16BTMRL       equ	919	;# 
 15176   000397                     TU16BCRL        equ	919	;# 
 15177   000398                     TU16BTMRH       equ	920	;# 
 15178   000398                     TU16BCRH        equ	920	;# 
 15179   000399                     TU16BPR         equ	921	;# 
 15180   000399                     TU16BPRL        equ	921	;# 
 15181   00039A                     TU16BPRH        equ	922	;# 
 15182   00039B                     TU16BCLK        equ	923	;# 
 15183   00039C                     TU16BERS        equ	924	;# 
 15184   0003BB                     TUCHAIN         equ	955	;# 
 15185   0003BC                     CWG1CLK         equ	956	;# 
 15186   0003BC                     CWG1CLKCON      equ	956	;# 
 15187   0003BD                     CWG1ISM         equ	957	;# 
 15188   0003BE                     CWG1DBR         equ	958	;# 
 15189   0003BF                     CWG1DBF         equ	959	;# 
 15190   0003C0                     CWG1CON0        equ	960	;# 
 15191   0003C1                     CWG1CON1        equ	961	;# 
 15192   0003C2                     CWG1AS0         equ	962	;# 
 15193   0003C3                     CWG1AS1         equ	963	;# 
 15194   0003C4                     CWG1STR         equ	964	;# 
 15195   0003C5                     CWG2CLK         equ	965	;# 
 15196   0003C5                     CWG2CLKCON      equ	965	;# 
 15197   0003C6                     CWG2ISM         equ	966	;# 
 15198   0003C7                     CWG2DBR         equ	967	;# 
 15199   0003C8                     CWG2DBF         equ	968	;# 
 15200   0003C9                     CWG2CON0        equ	969	;# 
 15201   0003CA                     CWG2CON1        equ	970	;# 
 15202   0003CB                     CWG2AS0         equ	971	;# 
 15203   0003CC                     CWG2AS1         equ	972	;# 
 15204   0003CD                     CWG2STR         equ	973	;# 
 15205   0003CE                     CWG3CLK         equ	974	;# 
 15206   0003CE                     CWG3CLKCON      equ	974	;# 
 15207   0003CF                     CWG3ISM         equ	975	;# 
 15208   0003D0                     CWG3DBR         equ	976	;# 
 15209   0003D1                     CWG3DBF         equ	977	;# 
 15210   0003D2                     CWG3CON0        equ	978	;# 
 15211   0003D3                     CWG3CON1        equ	979	;# 
 15212   0003D4                     CWG3AS0         equ	980	;# 
 15213   0003D5                     CWG3AS1         equ	981	;# 
 15214   0003D6                     CWG3STR         equ	982	;# 
 15215   0003D7                     FVRCON          equ	983	;# 
 15216   0003D8                     ADCPCON         equ	984	;# 
 15217   0003D8                     ADCP            equ	984	;# 
 15218   0003D9                     ADLTH           equ	985	;# 
 15219   0003D9                     ADLTHL          equ	985	;# 
 15220   0003DA                     ADLTHH          equ	986	;# 
 15221   0003DB                     ADUTH           equ	987	;# 
 15222   0003DB                     ADUTHL          equ	987	;# 
 15223   0003DC                     ADUTHH          equ	988	;# 
 15224   0003DD                     ADERR           equ	989	;# 
 15225   0003DD                     ADERRL          equ	989	;# 
 15226   0003DE                     ADERRH          equ	990	;# 
 15227   0003DF                     ADSTPT          equ	991	;# 
 15228   0003DF                     ADSTPTL         equ	991	;# 
 15229   0003E0                     ADSTPTH         equ	992	;# 
 15230   0003E1                     ADFLTR          equ	993	;# 
 15231   0003E1                     ADFLTRL         equ	993	;# 
 15232   0003E2                     ADFLTRH         equ	994	;# 
 15233   0003E3                     ADACC           equ	995	;# 
 15234   0003E3                     ADACCL          equ	995	;# 
 15235   0003E4                     ADACCH          equ	996	;# 
 15236   0003E5                     ADACCU          equ	997	;# 
 15237   0003E6                     ADCNT           equ	998	;# 
 15238   0003E7                     ADRPT           equ	999	;# 
 15239   0003E8                     ADPREV          equ	1000	;# 
 15240   0003E8                     ADPREVL         equ	1000	;# 
 15241   0003E9                     ADPREVH         equ	1001	;# 
 15242   0003EA                     ADRES           equ	1002	;# 
 15243   0003EA                     ADRESL          equ	1002	;# 
 15244   0003EB                     ADRESH          equ	1003	;# 
 15245   0003EC                     ADPCH           equ	1004	;# 
 15246   0003EE                     ADACQ           equ	1006	;# 
 15247   0003EE                     ADACQL          equ	1006	;# 
 15248   0003EF                     ADACQH          equ	1007	;# 
 15249   0003F0                     ADCAP           equ	1008	;# 
 15250   0003F1                     ADPRE           equ	1009	;# 
 15251   0003F1                     ADPREL          equ	1009	;# 
 15252   0003F2                     ADPREH          equ	1010	;# 
 15253   0003F3                     ADCON0          equ	1011	;# 
 15254   0003F4                     ADCON1          equ	1012	;# 
 15255   0003F5                     ADCON2          equ	1013	;# 
 15256   0003F6                     ADCON3          equ	1014	;# 
 15257   0003F7                     ADSTAT          equ	1015	;# 
 15258   0003F8                     ADREF           equ	1016	;# 
 15259   0003F9                     ADACT           equ	1017	;# 
 15260   0003FA                     ADCLK           equ	1018	;# 
 15261   0003FB                     ADCTX           equ	1019	;# 
 15262   0003FC                     ADCSEL1         equ	1020	;# 
 15263   0003FD                     ADCSEL2         equ	1021	;# 
 15264   0003FE                     ADCSEL3         equ	1022	;# 
 15265   0003FF                     ADCSEL4         equ	1023	;# 
 15266   000400                     ANSELA          equ	1024	;# 
 15267   000401                     WPUA            equ	1025	;# 
 15268   000402                     ODCONA          equ	1026	;# 
 15269   000403                     SLRCONA         equ	1027	;# 
 15270   000404                     INLVLA          equ	1028	;# 
 15271   000405                     IOCAP           equ	1029	;# 
 15272   000406                     IOCAN           equ	1030	;# 
 15273   000407                     IOCAF           equ	1031	;# 
 15274   000408                     ANSELB          equ	1032	;# 
 15275   000409                     WPUB            equ	1033	;# 
 15276   00040A                     ODCONB          equ	1034	;# 
 15277   00040B                     SLRCONB         equ	1035	;# 
 15278   00040C                     INLVLB          equ	1036	;# 
 15279   00040D                     IOCBP           equ	1037	;# 
 15280   00040E                     IOCBN           equ	1038	;# 
 15281   00040F                     IOCBF           equ	1039	;# 
 15282   000410                     ANSELC          equ	1040	;# 
 15283   000411                     WPUC            equ	1041	;# 
 15284   000412                     ODCONC          equ	1042	;# 
 15285   000413                     SLRCONC         equ	1043	;# 
 15286   000414                     INLVLC          equ	1044	;# 
 15287   000415                     IOCCP           equ	1045	;# 
 15288   000416                     IOCCN           equ	1046	;# 
 15289   000417                     IOCCF           equ	1047	;# 
 15290   000421                     WPUE            equ	1057	;# 
 15291   000424                     INLVLE          equ	1060	;# 
 15292   000425                     IOCEP           equ	1061	;# 
 15293   000426                     IOCEN           equ	1062	;# 
 15294   000427                     IOCEF           equ	1063	;# 
 15295   000440                     NCO1ACC         equ	1088	;# 
 15296   000440                     NCO1ACCL        equ	1088	;# 
 15297   000441                     NCO1ACCH        equ	1089	;# 
 15298   000442                     NCO1ACCU        equ	1090	;# 
 15299   000443                     NCO1INC         equ	1091	;# 
 15300   000443                     NCO1INCL        equ	1091	;# 
 15301   000444                     NCO1INCH        equ	1092	;# 
 15302   000445                     NCO1INCU        equ	1093	;# 
 15303   000446                     NCO1CON         equ	1094	;# 
 15304   000447                     NCO1CLK         equ	1095	;# 
 15305   000448                     NCO2ACC         equ	1096	;# 
 15306   000448                     NCO2ACCL        equ	1096	;# 
 15307   000449                     NCO2ACCH        equ	1097	;# 
 15308   00044A                     NCO2ACCU        equ	1098	;# 
 15309   00044B                     NCO2INC         equ	1099	;# 
 15310   00044B                     NCO2INCL        equ	1099	;# 
 15311   00044C                     NCO2INCH        equ	1100	;# 
 15312   00044D                     NCO2INCU        equ	1101	;# 
 15313   00044E                     NCO2CON         equ	1102	;# 
 15314   00044F                     NCO2CLK         equ	1103	;# 
 15315   000450                     NCO3ACC         equ	1104	;# 
 15316   000450                     NCO3ACCL        equ	1104	;# 
 15317   000451                     NCO3ACCH        equ	1105	;# 
 15318   000452                     NCO3ACCU        equ	1106	;# 
 15319   000453                     NCO3INC         equ	1107	;# 
 15320   000453                     NCO3INCL        equ	1107	;# 
 15321   000454                     NCO3INCH        equ	1108	;# 
 15322   000455                     NCO3INCU        equ	1109	;# 
 15323   000456                     NCO3CON         equ	1110	;# 
 15324   000457                     NCO3CLK         equ	1111	;# 
 15325   000458                     FSCMCON         equ	1112	;# 
 15326   000459                     IVTLOCK         equ	1113	;# 
 15327   00045A                     IVTAD           equ	1114	;# 
 15328   00045A                     IVTADL          equ	1114	;# 
 15329   00045B                     IVTADH          equ	1115	;# 
 15330   00045C                     IVTADU          equ	1116	;# 
 15331   00045D                     IVTBASE         equ	1117	;# 
 15332   00045D                     IVTBASEL        equ	1117	;# 
 15333   00045E                     IVTBASEH        equ	1118	;# 
 15334   00045F                     IVTBASEU        equ	1119	;# 
 15335   000460                     PWM1ERS         equ	1120	;# 
 15336   000461                     PWM1CLK         equ	1121	;# 
 15337   000462                     PWM1LDS         equ	1122	;# 
 15338   000463                     PWM1PR          equ	1123	;# 
 15339   000463                     PWM1PRL         equ	1123	;# 
 15340   000464                     PWM1PRH         equ	1124	;# 
 15341   000465                     PWM1CPRE        equ	1125	;# 
 15342   000466                     PWM1PIPOS       equ	1126	;# 
 15343   000467                     PWM1GIR         equ	1127	;# 
 15344   000468                     PWM1GIE         equ	1128	;# 
 15345   000469                     PWM1CON         equ	1129	;# 
 15346   00046A                     PWM1S1CFG       equ	1130	;# 
 15347   00046B                     PWM1S1P1        equ	1131	;# 
 15348   00046B                     PWM1S1P1L       equ	1131	;# 
 15349   00046C                     PWM1S1P1H       equ	1132	;# 
 15350   00046D                     PWM1S1P2        equ	1133	;# 
 15351   00046D                     PWM1S1P2L       equ	1133	;# 
 15352   00046E                     PWM1S1P2H       equ	1134	;# 
 15353   00046F                     PWM2ERS         equ	1135	;# 
 15354   000470                     PWM2CLK         equ	1136	;# 
 15355   000471                     PWM2LDS         equ	1137	;# 
 15356   000472                     PWM2PR          equ	1138	;# 
 15357   000472                     PWM2PRL         equ	1138	;# 
 15358   000473                     PWM2PRH         equ	1139	;# 
 15359   000474                     PWM2CPRE        equ	1140	;# 
 15360   000475                     PWM2PIPOS       equ	1141	;# 
 15361   000476                     PWM2GIR         equ	1142	;# 
 15362   000477                     PWM2GIE         equ	1143	;# 
 15363   000478                     PWM2CON         equ	1144	;# 
 15364   000479                     PWM2S1CFG       equ	1145	;# 
 15365   00047A                     PWM2S1P1        equ	1146	;# 
 15366   00047A                     PWM2S1P1L       equ	1146	;# 
 15367   00047B                     PWM2S1P1H       equ	1147	;# 
 15368   00047C                     PWM2S1P2        equ	1148	;# 
 15369   00047C                     PWM2S1P2L       equ	1148	;# 
 15370   00047D                     PWM2S1P2H       equ	1149	;# 
 15371   00047E                     PWM3ERS         equ	1150	;# 
 15372   00047F                     PWM3CLK         equ	1151	;# 
 15373   000480                     PWM3LDS         equ	1152	;# 
 15374   000481                     PWM3PR          equ	1153	;# 
 15375   000481                     PWM3PRL         equ	1153	;# 
 15376   000482                     PWM3PRH         equ	1154	;# 
 15377   000483                     PWM3CPRE        equ	1155	;# 
 15378   000484                     PWM3PIPOS       equ	1156	;# 
 15379   000485                     PWM3GIR         equ	1157	;# 
 15380   000486                     PWM3GIE         equ	1158	;# 
 15381   000487                     PWM3CON         equ	1159	;# 
 15382   000488                     PWM3S1CFG       equ	1160	;# 
 15383   000489                     PWM3S1P1        equ	1161	;# 
 15384   000489                     PWM3S1P1L       equ	1161	;# 
 15385   00048A                     PWM3S1P1H       equ	1162	;# 
 15386   00048B                     PWM3S1P2        equ	1163	;# 
 15387   00048B                     PWM3S1P2L       equ	1163	;# 
 15388   00048C                     PWM3S1P2H       equ	1164	;# 
 15389   00048D                     PWM4ERS         equ	1165	;# 
 15390   00048E                     PWM4CLK         equ	1166	;# 
 15391   00048F                     PWM4LDS         equ	1167	;# 
 15392   000490                     PWM4PR          equ	1168	;# 
 15393   000490                     PWM4PRL         equ	1168	;# 
 15394   000491                     PWM4PRH         equ	1169	;# 
 15395   000492                     PWM4CPRE        equ	1170	;# 
 15396   000493                     PWM4PIPOS       equ	1171	;# 
 15397   000494                     PWM4GIR         equ	1172	;# 
 15398   000495                     PWM4GIE         equ	1173	;# 
 15399   000496                     PWM4CON         equ	1174	;# 
 15400   000497                     PWM4S1CFG       equ	1175	;# 
 15401   000498                     PWM4S1P1        equ	1176	;# 
 15402   000498                     PWM4S1P1L       equ	1176	;# 
 15403   000499                     PWM4S1P1H       equ	1177	;# 
 15404   00049A                     PWM4S1P2        equ	1178	;# 
 15405   00049A                     PWM4S1P2L       equ	1178	;# 
 15406   00049B                     PWM4S1P2H       equ	1179	;# 
 15407   00049C                     PWMLOAD         equ	1180	;# 
 15408   00049D                     PWMEN           equ	1181	;# 
 15409   00049E                     PIE0            equ	1182	;# 
 15410   00049F                     PIE1            equ	1183	;# 
 15411   0004A0                     PIE2            equ	1184	;# 
 15412   0004A1                     PIE3            equ	1185	;# 
 15413   0004A2                     PIE4            equ	1186	;# 
 15414   0004A3                     PIE5            equ	1187	;# 
 15415   0004A4                     PIE6            equ	1188	;# 
 15416   0004A5                     PIE7            equ	1189	;# 
 15417   0004A6                     PIE8            equ	1190	;# 
 15418   0004A7                     PIE9            equ	1191	;# 
 15419   0004A8                     PIE10           equ	1192	;# 
 15420   0004A9                     PIE11           equ	1193	;# 
 15421   0004AA                     PIE12           equ	1194	;# 
 15422   0004AB                     PIE13           equ	1195	;# 
 15423   0004AC                     PIE14           equ	1196	;# 
 15424   0004AD                     PIE15           equ	1197	;# 
 15425   0004AE                     PIR0            equ	1198	;# 
 15426   0004AF                     PIR1            equ	1199	;# 
 15427   0004B0                     PIR2            equ	1200	;# 
 15428   0004B1                     PIR3            equ	1201	;# 
 15429   0004B2                     PIR4            equ	1202	;# 
 15430   0004B3                     PIR5            equ	1203	;# 
 15431   0004B4                     PIR6            equ	1204	;# 
 15432   0004B5                     PIR7            equ	1205	;# 
 15433   0004B6                     PIR8            equ	1206	;# 
 15434   0004B7                     PIR9            equ	1207	;# 
 15435   0004B8                     PIR10           equ	1208	;# 
 15436   0004B9                     PIR11           equ	1209	;# 
 15437   0004BA                     PIR12           equ	1210	;# 
 15438   0004BB                     PIR13           equ	1211	;# 
 15439   0004BC                     PIR14           equ	1212	;# 
 15440   0004BD                     PIR15           equ	1213	;# 
 15441   0004BE                     LATA            equ	1214	;# 
 15442   0004BF                     LATB            equ	1215	;# 
 15443   0004C0                     LATC            equ	1216	;# 
 15444   0004C6                     TRISA           equ	1222	;# 
 15445   0004C7                     TRISB           equ	1223	;# 
 15446   0004C8                     TRISC           equ	1224	;# 
 15447   0004CA                     TRISE           equ	1226	;# 
 15448   0004CE                     PORTA           equ	1230	;# 
 15449   0004CF                     PORTB           equ	1231	;# 
 15450   0004D0                     PORTC           equ	1232	;# 
 15451   0004D2                     PORTE           equ	1234	;# 
 15452   0004D6                     INTCON0         equ	1238	;# 
 15453   0004D7                     INTCON1         equ	1239	;# 
 15454   0004D8                     STATUS          equ	1240	;# 
 15455   0004D9                     FSR2            equ	1241	;# 
 15456   0004D9                     FSR2L           equ	1241	;# 
 15457   0004DA                     FSR2H           equ	1242	;# 
 15458   0004DB                     PLUSW2          equ	1243	;# 
 15459   0004DC                     PREINC2         equ	1244	;# 
 15460   0004DD                     POSTDEC2        equ	1245	;# 
 15461   0004DE                     POSTINC2        equ	1246	;# 
 15462   0004DF                     INDF2           equ	1247	;# 
 15463   0004E0                     BSR             equ	1248	;# 
 15464   0004E1                     FSR1            equ	1249	;# 
 15465   0004E1                     FSR1L           equ	1249	;# 
 15466   0004E2                     FSR1H           equ	1250	;# 
 15467   0004E3                     PLUSW1          equ	1251	;# 
 15468   0004E4                     PREINC1         equ	1252	;# 
 15469   0004E5                     POSTDEC1        equ	1253	;# 
 15470   0004E6                     POSTINC1        equ	1254	;# 
 15471   0004E7                     INDF1           equ	1255	;# 
 15472   0004E8                     WREG            equ	1256	;# 
 15473   0004E9                     FSR0            equ	1257	;# 
 15474   0004E9                     FSR0L           equ	1257	;# 
 15475   0004EA                     FSR0H           equ	1258	;# 
 15476   0004EB                     PLUSW0          equ	1259	;# 
 15477   0004EC                     PREINC0         equ	1260	;# 
 15478   0004ED                     POSTDEC0        equ	1261	;# 
 15479   0004EE                     POSTINC0        equ	1262	;# 
 15480   0004EF                     INDF0           equ	1263	;# 
 15481   0004F0                     PCON0           equ	1264	;# 
 15482   0004F1                     PCON1           equ	1265	;# 
 15483   0004F2                     CPUDOZE         equ	1266	;# 
 15484   0004F3                     PROD            equ	1267	;# 
 15485   0004F3                     PRODL           equ	1267	;# 
 15486   0004F4                     PRODH           equ	1268	;# 
 15487   0004F5                     TABLAT          equ	1269	;# 
 15488   0004F6                     TBLPTR          equ	1270	;# 
 15489   0004F6                     TBLPTRL         equ	1270	;# 
 15490   0004F7                     TBLPTRH         equ	1271	;# 
 15491   0004F8                     TBLPTRU         equ	1272	;# 
 15492   0004F9                     PCLAT           equ	1273	;# 
 15493   0004F9                     PCL             equ	1273	;# 
 15494   0004FA                     PCLATH          equ	1274	;# 
 15495   0004FB                     PCLATU          equ	1275	;# 
 15496   0004FC                     STKPTR          equ	1276	;# 
 15497   0004FD                     TOS             equ	1277	;# 
 15498   0004FD                     TOSL            equ	1277	;# 
 15499   0004FE                     TOSH            equ	1278	;# 
 15500   0004FF                     TOSU            equ	1279	;# 
 15501   3803FA                     	org	1018	;# 
 15502   3803FA  FF                 	db	255	;# 
 15503   000038                     BOOTREG         equ	56	;# 
 15504   000039                     CLKRCON         equ	57	;# 
 15505   00003A                     CLKRCLK         equ	58	;# 
 15506   000040                     NVMCON0         equ	64	;# 
 15507   000041                     NVMCON1         equ	65	;# 
 15508   000042                     NVMLOCK         equ	66	;# 
 15509   000043                     NVMADR          equ	67	;# 
 15510   000043                     NVMADRL         equ	67	;# 
 15511   000044                     NVMADRH         equ	68	;# 
 15512   000045                     NVMADRU         equ	69	;# 
 15513   000046                     NVMDAT          equ	70	;# 
 15514   000046                     NVMDATL         equ	70	;# 
 15515   000047                     NVMDATH         equ	71	;# 
 15516   000048                     VREGCON         equ	72	;# 
 15517   000049                     BORCON          equ	73	;# 
 15518   00004A                     HLVDCON0        equ	74	;# 
 15519   00004B                     HLVDCON1        equ	75	;# 
 15520   00004C                     ZCDCON          equ	76	;# 
 15521   000060                     PMD0            equ	96	;# 
 15522   000061                     PMD1            equ	97	;# 
 15523   000062                     PMD2            equ	98	;# 
 15524   000063                     PMD3            equ	99	;# 
 15525   000064                     PMD4            equ	100	;# 
 15526   000065                     PMD5            equ	101	;# 
 15527   000066                     PMD6            equ	102	;# 
 15528   000067                     PMD7            equ	103	;# 
 15529   000068                     PMD8            equ	104	;# 
 15530   00006A                     MD1CON0         equ	106	;# 
 15531   00006B                     MD1CON1         equ	107	;# 
 15532   00006C                     MD1SRC          equ	108	;# 
 15533   00006D                     MD1CARL         equ	109	;# 
 15534   00006E                     MD1CARH         equ	110	;# 
 15535   00006F                     CMOUT           equ	111	;# 
 15536   000070                     CM1CON0         equ	112	;# 
 15537   000071                     CM1CON1         equ	113	;# 
 15538   000072                     CM1NCH          equ	114	;# 
 15539   000073                     CM1PCH          equ	115	;# 
 15540   000074                     CM2CON0         equ	116	;# 
 15541   000075                     CM2CON1         equ	117	;# 
 15542   000076                     CM2NCH          equ	118	;# 
 15543   000077                     CM2PCH          equ	119	;# 
 15544   000078                     WDTCON0         equ	120	;# 
 15545   000079                     WDTCON1         equ	121	;# 
 15546   00007A                     WDTPSL          equ	122	;# 
 15547   00007B                     WDTPSH          equ	123	;# 
 15548   00007C                     WDTTMR          equ	124	;# 
 15549   00007D                     DAC1DAT         equ	125	;# 
 15550   00007D                     DAC1DATL        equ	125	;# 
 15551   00007F                     DAC1CON         equ	127	;# 
 15552   000080                     SPI1RXB         equ	128	;# 
 15553   000081                     SPI1TXB         equ	129	;# 
 15554   000082                     SPI1TCNT        equ	130	;# 
 15555   000082                     SPI1TCNTL       equ	130	;# 
 15556   000083                     SPI1TCNTH       equ	131	;# 
 15557   000084                     SPI1CON0        equ	132	;# 
 15558   000085                     SPI1CON1        equ	133	;# 
 15559   000086                     SPI1CON2        equ	134	;# 
 15560   000087                     SPI1STATUS      equ	135	;# 
 15561   000088                     SPI1TWIDTH      equ	136	;# 
 15562   000089                     SPI1BAUD        equ	137	;# 
 15563   00008A                     SPI1INTF        equ	138	;# 
 15564   00008B                     SPI1INTE        equ	139	;# 
 15565   00008C                     SPI1CLK         equ	140	;# 
 15566   00008D                     SPI2RXB         equ	141	;# 
 15567   00008E                     SPI2TXB         equ	142	;# 
 15568   00008F                     SPI2TCNT        equ	143	;# 
 15569   00008F                     SPI2TCNTL       equ	143	;# 
 15570   000090                     SPI2TCNTH       equ	144	;# 
 15571   000091                     SPI2CON0        equ	145	;# 
 15572   000092                     SPI2CON1        equ	146	;# 
 15573   000093                     SPI2CON2        equ	147	;# 
 15574   000094                     SPI2STATUS      equ	148	;# 
 15575   000095                     SPI2TWIDTH      equ	149	;# 
 15576   000096                     SPI2BAUD        equ	150	;# 
 15577   000097                     SPI2INTF        equ	151	;# 
 15578   000098                     SPI2INTE        equ	152	;# 
 15579   000099                     SPI2CLK         equ	153	;# 
 15580   0000AC                     ACTCON          equ	172	;# 
 15581   0000AD                     OSCCON1         equ	173	;# 
 15582   0000AE                     OSCCON2         equ	174	;# 
 15583   0000AF                     OSCCON3         equ	175	;# 
 15584   0000B0                     OSCTUNE         equ	176	;# 
 15585   0000B1                     OSCFRQ          equ	177	;# 
 15586   0000B1                     OSCFREQ         equ	177	;# 
 15587   0000B2                     OSCSTAT         equ	178	;# 
 15588   0000B2                     OSCSTAT1        equ	178	;# 
 15589   0000B3                     OSCEN           equ	179	;# 
 15590   0000B4                     PRLOCK          equ	180	;# 
 15591   0000B5                     SCANPR          equ	181	;# 
 15592   0000B6                     DMA1PR          equ	182	;# 
 15593   0000B7                     DMA2PR          equ	183	;# 
 15594   0000B8                     DMA3PR          equ	184	;# 
 15595   0000B9                     DMA4PR          equ	185	;# 
 15596   0000BA                     DMA5PR          equ	186	;# 
 15597   0000BB                     DMA6PR          equ	187	;# 
 15598   0000BC                     DMA7PR          equ	188	;# 
 15599   0000BD                     DMA8PR          equ	189	;# 
 15600   0000BE                     MAINPR          equ	190	;# 
 15601   0000BF                     ISRPR           equ	191	;# 
 15602   0000D4                     CLCDATA         equ	212	;# 
 15603   0000D5                     CLCSELECT       equ	213	;# 
 15604   0000D6                     CLCnCON         equ	214	;# 
 15605   0000D7                     CLCnPOL         equ	215	;# 
 15606   0000D8                     CLCnSEL0        equ	216	;# 
 15607   0000D9                     CLCnSEL1        equ	217	;# 
 15608   0000DA                     CLCnSEL2        equ	218	;# 
 15609   0000DB                     CLCnSEL3        equ	219	;# 
 15610   0000DC                     CLCnGLS0        equ	220	;# 
 15611   0000DD                     CLCnGLS1        equ	221	;# 
 15612   0000DE                     CLCnGLS2        equ	222	;# 
 15613   0000DF                     CLCnGLS3        equ	223	;# 
 15614   0000E8                     DMASELECT       equ	232	;# 
 15615   0000E9                     DMAnBUF         equ	233	;# 
 15616   0000EA                     DMAnDCNT        equ	234	;# 
 15617   0000EA                     DMAnDCNTL       equ	234	;# 
 15618   0000EB                     DMAnDCNTH       equ	235	;# 
 15619   0000EC                     DMAnDPTR        equ	236	;# 
 15620   0000EC                     DMAnDPTRL       equ	236	;# 
 15621   0000ED                     DMAnDPTRH       equ	237	;# 
 15622   0000EE                     DMAnDSZ         equ	238	;# 
 15623   0000EE                     DMAnDSZL        equ	238	;# 
 15624   0000EF                     DMAnDSZH        equ	239	;# 
 15625   0000F0                     DMAnDSA         equ	240	;# 
 15626   0000F0                     DMAnDSAL        equ	240	;# 
 15627   0000F1                     DMAnDSAH        equ	241	;# 
 15628   0000F2                     DMAnSCNT        equ	242	;# 
 15629   0000F2                     DMAnSCNTL       equ	242	;# 
 15630   0000F3                     DMAnSCNTH       equ	243	;# 
 15631   0000F4                     DMAnSPTR        equ	244	;# 
 15632   0000F4                     DMAnSPTRL       equ	244	;# 
 15633   0000F5                     DMAnSPTRH       equ	245	;# 
 15634   0000F6                     DMAnSPTRU       equ	246	;# 
 15635   0000F7                     DMAnSSZ         equ	247	;# 
 15636   0000F7                     DMAnSSZL        equ	247	;# 
 15637   0000F8                     DMAnSSZH        equ	248	;# 
 15638   0000F9                     DMAnSSA         equ	249	;# 
 15639   0000F9                     DMAnSSAL        equ	249	;# 
 15640   0000FA                     DMAnSSAH        equ	250	;# 
 15641   0000FB                     DMAnSSAU        equ	251	;# 
 15642   0000FC                     DMAnCON0        equ	252	;# 
 15643   0000FD                     DMAnCON1        equ	253	;# 
 15644   0000FE                     DMAnAIRQ        equ	254	;# 
 15645   0000FF                     DMAnSIRQ        equ	255	;# 
 15646   000100                     C1CONL          equ	256	;# 
 15647   000101                     C1CONH          equ	257	;# 
 15648   000102                     C1CONU          equ	258	;# 
 15649   000103                     C1CONT          equ	259	;# 
 15650   000104                     C1NBTCFGL       equ	260	;# 
 15651   000105                     C1NBTCFGH       equ	261	;# 
 15652   000106                     C1NBTCFGU       equ	262	;# 
 15653   000107                     C1NBTCFGT       equ	263	;# 
 15654   000108                     C1DBTCFGL       equ	264	;# 
 15655   000109                     C1DBTCFGH       equ	265	;# 
 15656   00010A                     C1DBTCFGU       equ	266	;# 
 15657   00010B                     C1DBTCFGT       equ	267	;# 
 15658   00010C                     C1TDCL          equ	268	;# 
 15659   00010D                     C1TDCH          equ	269	;# 
 15660   00010E                     C1TDCU          equ	270	;# 
 15661   000110                     C1TBC           equ	272	;# 
 15662   000110                     C1TBCL          equ	272	;# 
 15663   000111                     C1TBCH          equ	273	;# 
 15664   000112                     C1TBCU          equ	274	;# 
 15665   000113                     C1TBCT          equ	275	;# 
 15666   000114                     C1TSCONL        equ	276	;# 
 15667   000115                     C1TSCONH        equ	277	;# 
 15668   000116                     C1TSCONU        equ	278	;# 
 15669   000117                     C1TSCONT        equ	279	;# 
 15670   000118                     C1VECL          equ	280	;# 
 15671   000119                     C1VECH          equ	281	;# 
 15672   00011A                     C1VECU          equ	282	;# 
 15673   00011B                     C1VECT          equ	283	;# 
 15674   00011C                     C1INTL          equ	284	;# 
 15675   00011D                     C1INTH          equ	285	;# 
 15676   00011E                     C1INTU          equ	286	;# 
 15677   00011F                     C1INTT          equ	287	;# 
 15678   000120                     C1RXIF          equ	288	;# 
 15679   000120                     C1RXIFL         equ	288	;# 
 15680   000121                     C1RXIFH         equ	289	;# 
 15681   000122                     C1RXIFU         equ	290	;# 
 15682   000123                     C1RXIFT         equ	291	;# 
 15683   000124                     C1TXIF          equ	292	;# 
 15684   000124                     C1TXIFL         equ	292	;# 
 15685   000125                     C1TXIFH         equ	293	;# 
 15686   000126                     C1TXIFU         equ	294	;# 
 15687   000127                     C1TXIFT         equ	295	;# 
 15688   000128                     C1RXOVIF        equ	296	;# 
 15689   000128                     C1RXOVIFL       equ	296	;# 
 15690   000129                     C1RXOVIFH       equ	297	;# 
 15691   00012A                     C1RXOVIFU       equ	298	;# 
 15692   00012B                     C1RXOVIFT       equ	299	;# 
 15693   00012C                     C1TXATIF        equ	300	;# 
 15694   00012C                     C1TXATIFL       equ	300	;# 
 15695   00012D                     C1TXATIFH       equ	301	;# 
 15696   00012E                     C1TXATIFU       equ	302	;# 
 15697   00012F                     C1TXATIFT       equ	303	;# 
 15698   000130                     C1TXREQ         equ	304	;# 
 15699   000130                     C1TXREQL        equ	304	;# 
 15700   000131                     C1TXREQH        equ	305	;# 
 15701   000132                     C1TXREQU        equ	306	;# 
 15702   000133                     C1TXREQT        equ	307	;# 
 15703   000134                     C1TRECL         equ	308	;# 
 15704   000135                     C1TRECH         equ	309	;# 
 15705   000136                     C1TRECU         equ	310	;# 
 15706   000137                     C1TRECT         equ	311	;# 
 15707   000138                     C1BDIAG0L       equ	312	;# 
 15708   000139                     C1BDIAG0H       equ	313	;# 
 15709   00013C                     C1BDIAG1L       equ	316	;# 
 15710   00013D                     C1BDIAG1H       equ	317	;# 
 15711   00013E                     C1BDIAG1U       equ	318	;# 
 15712   00013F                     C1BDIAG1T       equ	319	;# 
 15713   000140                     C1TEFCONL       equ	320	;# 
 15714   000141                     C1TEFCONH       equ	321	;# 
 15715   000142                     C1TEFCONU       equ	322	;# 
 15716   000143                     C1TEFCONT       equ	323	;# 
 15717   000144                     C1TEFSTAL       equ	324	;# 
 15718   000145                     C1TEFSTAH       equ	325	;# 
 15719   000146                     C1TEFSTAU       equ	326	;# 
 15720   000147                     C1TEFSTAT       equ	327	;# 
 15721   000148                     C1TEFUA         equ	328	;# 
 15722   000148                     C1TEFUAL        equ	328	;# 
 15723   000149                     C1TEFUAH        equ	329	;# 
 15724   00014A                     C1TEFUAU        equ	330	;# 
 15725   00014B                     C1TEFUAT        equ	331	;# 
 15726   00014C                     C1FIFOBA        equ	332	;# 
 15727   00014C                     C1FIFOBAL       equ	332	;# 
 15728   00014D                     C1FIFOBAH       equ	333	;# 
 15729   00014E                     C1FIFOBAU       equ	334	;# 
 15730   00014F                     C1FIFOBAT       equ	335	;# 
 15731   000150                     C1TXQCONL       equ	336	;# 
 15732   000151                     C1TXQCONH       equ	337	;# 
 15733   000152                     C1TXQCONU       equ	338	;# 
 15734   000153                     C1TXQCONT       equ	339	;# 
 15735   000154                     C1TXQSTAL       equ	340	;# 
 15736   000155                     C1TXQSTAH       equ	341	;# 
 15737   000156                     C1TXQSTAU       equ	342	;# 
 15738   000157                     C1TXQSTAT       equ	343	;# 
 15739   000158                     C1TXQUA         equ	344	;# 
 15740   000158                     C1TXQUAL        equ	344	;# 
 15741   000159                     C1TXQUAH        equ	345	;# 
 15742   00015A                     C1TXQUAU        equ	346	;# 
 15743   00015B                     C1TXQUAT        equ	347	;# 
 15744   00015C                     C1FIFOCON1      equ	348	;# 
 15745   00015C                     C1FIFOCON1L     equ	348	;# 
 15746   00015D                     C1FIFOCON1H     equ	349	;# 
 15747   00015E                     C1FIFOCON1U     equ	350	;# 
 15748   00015F                     C1FIFOCON1T     equ	351	;# 
 15749   000160                     C1FIFOSTA1      equ	352	;# 
 15750   000160                     C1FIFOSTA1L     equ	352	;# 
 15751   000161                     C1FIFOSTA1H     equ	353	;# 
 15752   000162                     C1FIFOSTA1U     equ	354	;# 
 15753   000163                     C1FIFOSTA1T     equ	355	;# 
 15754   000164                     C1FIFOUA1       equ	356	;# 
 15755   000164                     C1FIFOUA1L      equ	356	;# 
 15756   000165                     C1FIFOUA1H      equ	357	;# 
 15757   000166                     C1FIFOUA1U      equ	358	;# 
 15758   000167                     C1FIFOUA1T      equ	359	;# 
 15759   000168                     C1FIFOCON2      equ	360	;# 
 15760   000168                     C1FIFOCON2L     equ	360	;# 
 15761   000169                     C1FIFOCON2H     equ	361	;# 
 15762   00016A                     C1FIFOCON2U     equ	362	;# 
 15763   00016B                     C1FIFOCON2T     equ	363	;# 
 15764   00016C                     C1FIFOSTA2      equ	364	;# 
 15765   00016C                     C1FIFOSTA2L     equ	364	;# 
 15766   00016D                     C1FIFOSTA2H     equ	365	;# 
 15767   00016E                     C1FIFOSTA2U     equ	366	;# 
 15768   00016F                     C1FIFOSTA2T     equ	367	;# 
 15769   000170                     C1FIFOUA2       equ	368	;# 
 15770   000170                     C1FIFOUA2L      equ	368	;# 
 15771   000171                     C1FIFOUA2H      equ	369	;# 
 15772   000172                     C1FIFOUA2U      equ	370	;# 
 15773   000173                     C1FIFOUA2T      equ	371	;# 
 15774   000174                     C1FIFOCON3      equ	372	;# 
 15775   000174                     C1FIFOCON3L     equ	372	;# 
 15776   000175                     C1FIFOCON3H     equ	373	;# 
 15777   000176                     C1FIFOCON3U     equ	374	;# 
 15778   000177                     C1FIFOCON3T     equ	375	;# 
 15779   000178                     C1FIFOSTA3      equ	376	;# 
 15780   000178                     C1FIFOSTA3L     equ	376	;# 
 15781   000179                     C1FIFOSTA3H     equ	377	;# 
 15782   00017A                     C1FIFOSTA3U     equ	378	;# 
 15783   00017B                     C1FIFOSTA3T     equ	379	;# 
 15784   00017C                     C1FIFOUA3       equ	380	;# 
 15785   00017C                     C1FIFOUA3L      equ	380	;# 
 15786   00017D                     C1FIFOUA3H      equ	381	;# 
 15787   00017E                     C1FIFOUA3U      equ	382	;# 
 15788   00017F                     C1FIFOUA3T      equ	383	;# 
 15789   000180                     C1FLTCON0L      equ	384	;# 
 15790   000181                     C1FLTCON0H      equ	385	;# 
 15791   000182                     C1FLTCON0U      equ	386	;# 
 15792   000183                     C1FLTCON0T      equ	387	;# 
 15793   000184                     C1FLTCON1L      equ	388	;# 
 15794   000185                     C1FLTCON1H      equ	389	;# 
 15795   000186                     C1FLTCON1U      equ	390	;# 
 15796   000187                     C1FLTCON1T      equ	391	;# 
 15797   000188                     C1FLTCON2L      equ	392	;# 
 15798   000189                     C1FLTCON2H      equ	393	;# 
 15799   00018A                     C1FLTCON2U      equ	394	;# 
 15800   00018B                     C1FLTCON2T      equ	395	;# 
 15801   00018C                     C1FLTOBJ0       equ	396	;# 
 15802   00018C                     C1FLTOBJ0L      equ	396	;# 
 15803   00018D                     C1FLTOBJ0H      equ	397	;# 
 15804   00018E                     C1FLTOBJ0U      equ	398	;# 
 15805   00018F                     C1FLTOBJ0T      equ	399	;# 
 15806   000190                     C1MASK0         equ	400	;# 
 15807   000190                     C1MASK0L        equ	400	;# 
 15808   000191                     C1MASK0H        equ	401	;# 
 15809   000192                     C1MASK0U        equ	402	;# 
 15810   000193                     C1MASK0T        equ	403	;# 
 15811   000194                     C1FLTOBJ1       equ	404	;# 
 15812   000194                     C1FLTOBJ1L      equ	404	;# 
 15813   000195                     C1FLTOBJ1H      equ	405	;# 
 15814   000196                     C1FLTOBJ1U      equ	406	;# 
 15815   000197                     C1FLTOBJ1T      equ	407	;# 
 15816   000198                     C1MASK1         equ	408	;# 
 15817   000198                     C1MASK1L        equ	408	;# 
 15818   000199                     C1MASK1H        equ	409	;# 
 15819   00019A                     C1MASK1U        equ	410	;# 
 15820   00019B                     C1MASK1T        equ	411	;# 
 15821   00019C                     C1FLTOBJ2       equ	412	;# 
 15822   00019C                     C1FLTOBJ2L      equ	412	;# 
 15823   00019D                     C1FLTOBJ2H      equ	413	;# 
 15824   00019E                     C1FLTOBJ2U      equ	414	;# 
 15825   00019F                     C1FLTOBJ2T      equ	415	;# 
 15826   0001A0                     C1MASK2         equ	416	;# 
 15827   0001A0                     C1MASK2L        equ	416	;# 
 15828   0001A1                     C1MASK2H        equ	417	;# 
 15829   0001A2                     C1MASK2U        equ	418	;# 
 15830   0001A3                     C1MASK2T        equ	419	;# 
 15831   0001A4                     C1FLTOBJ3       equ	420	;# 
 15832   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15833   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15834   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15835   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15836   0001A8                     C1MASK3         equ	424	;# 
 15837   0001A8                     C1MASK3L        equ	424	;# 
 15838   0001A9                     C1MASK3H        equ	425	;# 
 15839   0001AA                     C1MASK3U        equ	426	;# 
 15840   0001AB                     C1MASK3T        equ	427	;# 
 15841   0001AC                     C1FLTOBJ4       equ	428	;# 
 15842   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15843   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15844   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15845   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15846   0001B0                     C1MASK4         equ	432	;# 
 15847   0001B0                     C1MASK4L        equ	432	;# 
 15848   0001B1                     C1MASK4H        equ	433	;# 
 15849   0001B2                     C1MASK4U        equ	434	;# 
 15850   0001B3                     C1MASK4T        equ	435	;# 
 15851   0001B4                     C1FLTOBJ5       equ	436	;# 
 15852   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15853   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15854   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15855   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15856   0001B8                     C1MASK5         equ	440	;# 
 15857   0001B8                     C1MASK5L        equ	440	;# 
 15858   0001B9                     C1MASK5H        equ	441	;# 
 15859   0001BA                     C1MASK5U        equ	442	;# 
 15860   0001BB                     C1MASK5T        equ	443	;# 
 15861   0001BC                     C1FLTOBJ6       equ	444	;# 
 15862   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15863   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15864   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15865   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15866   0001C0                     C1MASK6         equ	448	;# 
 15867   0001C0                     C1MASK6L        equ	448	;# 
 15868   0001C1                     C1MASK6H        equ	449	;# 
 15869   0001C2                     C1MASK6U        equ	450	;# 
 15870   0001C3                     C1MASK6T        equ	451	;# 
 15871   0001C4                     C1FLTOBJ7       equ	452	;# 
 15872   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15873   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15874   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15875   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15876   0001C8                     C1MASK7         equ	456	;# 
 15877   0001C8                     C1MASK7L        equ	456	;# 
 15878   0001C9                     C1MASK7H        equ	457	;# 
 15879   0001CA                     C1MASK7U        equ	458	;# 
 15880   0001CB                     C1MASK7T        equ	459	;# 
 15881   0001CC                     C1FLTOBJ8       equ	460	;# 
 15882   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15883   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15884   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15885   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15886   0001D0                     C1MASK8         equ	464	;# 
 15887   0001D0                     C1MASK8L        equ	464	;# 
 15888   0001D1                     C1MASK8H        equ	465	;# 
 15889   0001D2                     C1MASK8U        equ	466	;# 
 15890   0001D3                     C1MASK8T        equ	467	;# 
 15891   0001D4                     C1FLTOBJ9       equ	468	;# 
 15892   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15893   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15894   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15895   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15896   0001D8                     C1MASK9         equ	472	;# 
 15897   0001D8                     C1MASK9L        equ	472	;# 
 15898   0001D9                     C1MASK9H        equ	473	;# 
 15899   0001DA                     C1MASK9U        equ	474	;# 
 15900   0001DB                     C1MASK9T        equ	475	;# 
 15901   0001DC                     C1FLTOBJ10      equ	476	;# 
 15902   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15903   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15904   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15905   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15906   0001E0                     C1MASK10        equ	480	;# 
 15907   0001E0                     C1MASK10L       equ	480	;# 
 15908   0001E1                     C1MASK10H       equ	481	;# 
 15909   0001E2                     C1MASK10U       equ	482	;# 
 15910   0001E3                     C1MASK10T       equ	483	;# 
 15911   0001E4                     C1FLTOBJ11      equ	484	;# 
 15912   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15913   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15914   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15915   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15916   0001E8                     C1MASK11        equ	488	;# 
 15917   0001E8                     C1MASK11L       equ	488	;# 
 15918   0001E9                     C1MASK11H       equ	489	;# 
 15919   0001EA                     C1MASK11U       equ	490	;# 
 15920   0001EB                     C1MASK11T       equ	491	;# 
 15921   000200                     PPSLOCK         equ	512	;# 
 15922   000201                     RA0PPS          equ	513	;# 
 15923   000202                     RA1PPS          equ	514	;# 
 15924   000203                     RA2PPS          equ	515	;# 
 15925   000204                     RA3PPS          equ	516	;# 
 15926   000205                     RA4PPS          equ	517	;# 
 15927   000206                     RA5PPS          equ	518	;# 
 15928   000207                     RA6PPS          equ	519	;# 
 15929   000208                     RA7PPS          equ	520	;# 
 15930   000209                     RB0PPS          equ	521	;# 
 15931   00020A                     RB1PPS          equ	522	;# 
 15932   00020B                     RB2PPS          equ	523	;# 
 15933   00020C                     RB3PPS          equ	524	;# 
 15934   00020D                     RB4PPS          equ	525	;# 
 15935   00020E                     RB5PPS          equ	526	;# 
 15936   00020F                     RB6PPS          equ	527	;# 
 15937   000210                     RB7PPS          equ	528	;# 
 15938   000211                     RC0PPS          equ	529	;# 
 15939   000212                     RC1PPS          equ	530	;# 
 15940   000213                     RC2PPS          equ	531	;# 
 15941   000214                     RC3PPS          equ	532	;# 
 15942   000215                     RC4PPS          equ	533	;# 
 15943   000216                     RC5PPS          equ	534	;# 
 15944   000217                     RC6PPS          equ	535	;# 
 15945   000218                     RC7PPS          equ	536	;# 
 15946   00023D                     CANRXPPS        equ	573	;# 
 15947   00023E                     INT0PPS         equ	574	;# 
 15948   00023F                     INT1PPS         equ	575	;# 
 15949   000240                     INT2PPS         equ	576	;# 
 15950   000241                     T0CKIPPS        equ	577	;# 
 15951   000242                     T1CKIPPS        equ	578	;# 
 15952   000243                     T1GPPS          equ	579	;# 
 15953   000244                     T3CKIPPS        equ	580	;# 
 15954   000245                     T3GPPS          equ	581	;# 
 15955   000246                     T5CKIPPS        equ	582	;# 
 15956   000247                     T5GPPS          equ	583	;# 
 15957   000248                     T2INPPS         equ	584	;# 
 15958   000249                     T4INPPS         equ	585	;# 
 15959   00024A                     T6INPPS         equ	586	;# 
 15960   00024B                     TUIN0PPS        equ	587	;# 
 15961   00024C                     TUIN1PPS        equ	588	;# 
 15962   00024F                     CCP1PPS         equ	591	;# 
 15963   000250                     CCP2PPS         equ	592	;# 
 15964   000251                     CCP3PPS         equ	593	;# 
 15965   000253                     PWM1ERSPPS      equ	595	;# 
 15966   000254                     PWM2ERSPPS      equ	596	;# 
 15967   000255                     PWM3ERSPPS      equ	597	;# 
 15968   000256                     PWM4ERSPPS      equ	598	;# 
 15969   000257                     PWMIN0PPS       equ	599	;# 
 15970   000258                     PWMIN1PPS       equ	600	;# 
 15971   000259                     SMT1WINPPS      equ	601	;# 
 15972   00025A                     SMT1SIGPPS      equ	602	;# 
 15973   00025B                     CWG1PPS         equ	603	;# 
 15974   00025B                     CWG1INPPS       equ	603	;# 
 15975   00025C                     CWG2PPS         equ	604	;# 
 15976   00025C                     CWG2INPPS       equ	604	;# 
 15977   00025D                     CWG3PPS         equ	605	;# 
 15978   00025D                     CWG3INPPS       equ	605	;# 
 15979   00025E                     MD1CARLPPS      equ	606	;# 
 15980   00025E                     MDCARLPPS       equ	606	;# 
 15981   00025F                     MD1CARHPPS      equ	607	;# 
 15982   00025F                     MDCARHPPS       equ	607	;# 
 15983   000260                     MD1SRCPPS       equ	608	;# 
 15984   000260                     MDSRCPPS        equ	608	;# 
 15985   000261                     CLCIN0PPS       equ	609	;# 
 15986   000262                     CLCIN1PPS       equ	610	;# 
 15987   000263                     CLCIN2PPS       equ	611	;# 
 15988   000264                     CLCIN3PPS       equ	612	;# 
 15989   000265                     CLCIN4PPS       equ	613	;# 
 15990   000266                     CLCIN5PPS       equ	614	;# 
 15991   000267                     CLCIN6PPS       equ	615	;# 
 15992   000268                     CLCIN7PPS       equ	616	;# 
 15993   000269                     ADACTPPS        equ	617	;# 
 15994   00026A                     SPI1SCKPPS      equ	618	;# 
 15995   00026B                     SPI1SDIPPS      equ	619	;# 
 15996   00026C                     SPI1SSPPS       equ	620	;# 
 15997   00026D                     SPI2SCKPPS      equ	621	;# 
 15998   00026E                     SPI2SDIPPS      equ	622	;# 
 15999   00026F                     SPI2SSPPS       equ	623	;# 
 16000   000270                     I2C1SDAPPS      equ	624	;# 
 16001   000271                     I2C1SCLPPS      equ	625	;# 
 16002   000272                     U1RXPPS         equ	626	;# 
 16003   000273                     U1CTSPPS        equ	627	;# 
 16004   000274                     U2RXPPS         equ	628	;# 
 16005   000275                     U2CTSPPS        equ	629	;# 
 16006   000276                     U3RXPPS         equ	630	;# 
 16007   000277                     U3CTSPPS        equ	631	;# 
 16008   000278                     U4RXPPS         equ	632	;# 
 16009   000279                     U4CTSPPS        equ	633	;# 
 16010   00027A                     U5RXPPS         equ	634	;# 
 16011   00027B                     U5CTSPPS        equ	635	;# 
 16012   000286                     RC4I2C          equ	646	;# 
 16013   000287                     RC3I2C          equ	647	;# 
 16014   000288                     RB2I2C          equ	648	;# 
 16015   000289                     RB1I2C          equ	649	;# 
 16016   00028A                     I2C1RXB         equ	650	;# 
 16017   00028B                     I2C1TXB         equ	651	;# 
 16018   00028C                     I2C1CNTL        equ	652	;# 
 16019   00028D                     I2C1CNTH        equ	653	;# 
 16020   00028E                     I2C1ADB0        equ	654	;# 
 16021   00028F                     I2C1ADB1        equ	655	;# 
 16022   000290                     I2C1ADR0        equ	656	;# 
 16023   000291                     I2C1ADR1        equ	657	;# 
 16024   000292                     I2C1ADR2        equ	658	;# 
 16025   000293                     I2C1ADR3        equ	659	;# 
 16026   000294                     I2C1CON0        equ	660	;# 
 16027   000295                     I2C1CON1        equ	661	;# 
 16028   000296                     I2C1CON2        equ	662	;# 
 16029   000297                     I2C1ERR         equ	663	;# 
 16030   000298                     I2C1STAT0       equ	664	;# 
 16031   000299                     I2C1STAT1       equ	665	;# 
 16032   00029A                     I2C1PIR         equ	666	;# 
 16033   00029B                     I2C1PIE         equ	667	;# 
 16034   00029C                     I2C1BTO         equ	668	;# 
 16035   00029D                     I2C1BAUD        equ	669	;# 
 16036   00029E                     I2C1CLK         equ	670	;# 
 16037   00029F                     I2C1BTOC        equ	671	;# 
 16038   0002A1                     U1RXB           equ	673	;# 
 16039   0002A1                     U1RXBL          equ	673	;# 
 16040   0002A2                     U1RXCHK         equ	674	;# 
 16041   0002A3                     U1TXB           equ	675	;# 
 16042   0002A3                     U1TXBL          equ	675	;# 
 16043   0002A4                     U1TXCHK         equ	676	;# 
 16044   0002A5                     U1P1            equ	677	;# 
 16045   0002A5                     U1P1L           equ	677	;# 
 16046   0002A6                     U1P1H           equ	678	;# 
 16047   0002A7                     U1P2            equ	679	;# 
 16048   0002A7                     U1P2L           equ	679	;# 
 16049   0002A8                     U1P2H           equ	680	;# 
 16050   0002A9                     U1P3            equ	681	;# 
 16051   0002A9                     U1P3L           equ	681	;# 
 16052   0002AA                     U1P3H           equ	682	;# 
 16053   0002AB                     U1CON0          equ	683	;# 
 16054   0002AC                     U1CON1          equ	684	;# 
 16055   0002AD                     U1CON2          equ	685	;# 
 16056   0002AE                     U1BRG           equ	686	;# 
 16057   0002AE                     U1BRGL          equ	686	;# 
 16058   0002AF                     U1BRGH          equ	687	;# 
 16059   0002B0                     U1FIFO          equ	688	;# 
 16060   0002B1                     U1UIR           equ	689	;# 
 16061   0002B2                     U1ERRIR         equ	690	;# 
 16062   0002B3                     U1ERRIE         equ	691	;# 
 16063   0002B4                     U2RXB           equ	692	;# 
 16064   0002B4                     U2RXBL          equ	692	;# 
 16065   0002B5                     U2RXCHK         equ	693	;# 
 16066   0002B6                     U2TXB           equ	694	;# 
 16067   0002B6                     U2TXBL          equ	694	;# 
 16068   0002B7                     U2TXCHK         equ	695	;# 
 16069   0002B8                     U2P1            equ	696	;# 
 16070   0002B8                     U2P1L           equ	696	;# 
 16071   0002B9                     U2P1H           equ	697	;# 
 16072   0002BA                     U2P2            equ	698	;# 
 16073   0002BA                     U2P2L           equ	698	;# 
 16074   0002BB                     U2P2H           equ	699	;# 
 16075   0002BC                     U2P3            equ	700	;# 
 16076   0002BC                     U2P3L           equ	700	;# 
 16077   0002BD                     U2P3H           equ	701	;# 
 16078   0002BE                     U2CON0          equ	702	;# 
 16079   0002BF                     U2CON1          equ	703	;# 
 16080   0002C0                     U2CON2          equ	704	;# 
 16081   0002C1                     U2BRG           equ	705	;# 
 16082   0002C1                     U2BRGL          equ	705	;# 
 16083   0002C2                     U2BRGH          equ	706	;# 
 16084   0002C3                     U2FIFO          equ	707	;# 
 16085   0002C4                     U2UIR           equ	708	;# 
 16086   0002C5                     U2ERRIR         equ	709	;# 
 16087   0002C6                     U2ERRIE         equ	710	;# 
 16088   0002C7                     U3RXB           equ	711	;# 
 16089   0002C7                     U3RXBL          equ	711	;# 
 16090   0002C9                     U3TXB           equ	713	;# 
 16091   0002C9                     U3TXBL          equ	713	;# 
 16092   0002CB                     U3P1            equ	715	;# 
 16093   0002CB                     U3P1L           equ	715	;# 
 16094   0002CD                     U3P2            equ	717	;# 
 16095   0002CD                     U3P2L           equ	717	;# 
 16096   0002CF                     U3P3            equ	719	;# 
 16097   0002CF                     U3P3L           equ	719	;# 
 16098   0002D1                     U3CON0          equ	721	;# 
 16099   0002D2                     U3CON1          equ	722	;# 
 16100   0002D3                     U3CON2          equ	723	;# 
 16101   0002D4                     U3BRG           equ	724	;# 
 16102   0002D4                     U3BRGL          equ	724	;# 
 16103   0002D5                     U3BRGH          equ	725	;# 
 16104   0002D6                     U3FIFO          equ	726	;# 
 16105   0002D7                     U3UIR           equ	727	;# 
 16106   0002D8                     U3ERRIR         equ	728	;# 
 16107   0002D9                     U3ERRIE         equ	729	;# 
 16108   0002DA                     U4RXB           equ	730	;# 
 16109   0002DA                     U4RXBL          equ	730	;# 
 16110   0002DC                     U4TXB           equ	732	;# 
 16111   0002DC                     U4TXBL          equ	732	;# 
 16112   0002DE                     U4P1            equ	734	;# 
 16113   0002DE                     U4P1L           equ	734	;# 
 16114   0002E0                     U4P2            equ	736	;# 
 16115   0002E0                     U4P2L           equ	736	;# 
 16116   0002E2                     U4P3            equ	738	;# 
 16117   0002E2                     U4P3L           equ	738	;# 
 16118   0002E4                     U4CON0          equ	740	;# 
 16119   0002E5                     U4CON1          equ	741	;# 
 16120   0002E6                     U4CON2          equ	742	;# 
 16121   0002E7                     U4BRG           equ	743	;# 
 16122   0002E7                     U4BRGL          equ	743	;# 
 16123   0002E8                     U4BRGH          equ	744	;# 
 16124   0002E9                     U4FIFO          equ	745	;# 
 16125   0002EA                     U4UIR           equ	746	;# 
 16126   0002EB                     U4ERRIR         equ	747	;# 
 16127   0002EC                     U4ERRIE         equ	748	;# 
 16128   0002ED                     U5RXB           equ	749	;# 
 16129   0002ED                     U5RXBL          equ	749	;# 
 16130   0002EF                     U5TXB           equ	751	;# 
 16131   0002EF                     U5TXBL          equ	751	;# 
 16132   0002F1                     U5P1            equ	753	;# 
 16133   0002F1                     U5P1L           equ	753	;# 
 16134   0002F3                     U5P2            equ	755	;# 
 16135   0002F3                     U5P2L           equ	755	;# 
 16136   0002F5                     U5P3            equ	757	;# 
 16137   0002F5                     U5P3L           equ	757	;# 
 16138   0002F7                     U5CON0          equ	759	;# 
 16139   0002F8                     U5CON1          equ	760	;# 
 16140   0002F9                     U5CON2          equ	761	;# 
 16141   0002FA                     U5BRG           equ	762	;# 
 16142   0002FA                     U5BRGL          equ	762	;# 
 16143   0002FB                     U5BRGH          equ	763	;# 
 16144   0002FC                     U5FIFO          equ	764	;# 
 16145   0002FD                     U5UIR           equ	765	;# 
 16146   0002FE                     U5ERRIR         equ	766	;# 
 16147   0002FF                     U5ERRIE         equ	767	;# 
 16148   000300                     SMT1TMR         equ	768	;# 
 16149   000300                     SMT1TMRL        equ	768	;# 
 16150   000301                     SMT1TMRH        equ	769	;# 
 16151   000302                     SMT1TMRU        equ	770	;# 
 16152   000303                     SMT1CPR         equ	771	;# 
 16153   000303                     SMT1CPRL        equ	771	;# 
 16154   000304                     SMT1CPRH        equ	772	;# 
 16155   000305                     SMT1CPRU        equ	773	;# 
 16156   000306                     SMT1CPW         equ	774	;# 
 16157   000306                     SMT1CPWL        equ	774	;# 
 16158   000307                     SMT1CPWH        equ	775	;# 
 16159   000308                     SMT1CPWU        equ	776	;# 
 16160   000309                     SMT1PR          equ	777	;# 
 16161   000309                     SMT1PRL         equ	777	;# 
 16162   00030A                     SMT1PRH         equ	778	;# 
 16163   00030B                     SMT1PRU         equ	779	;# 
 16164   00030C                     SMT1CON0        equ	780	;# 
 16165   00030D                     SMT1CON1        equ	781	;# 
 16166   00030E                     SMT1STAT        equ	782	;# 
 16167   00030F                     SMT1CLK         equ	783	;# 
 16168   000310                     SMT1SIG         equ	784	;# 
 16169   000311                     SMT1WIN         equ	785	;# 
 16170   000318                     TMR0L           equ	792	;# 
 16171   000318                     TMR0            equ	792	;# 
 16172   000319                     TMR0H           equ	793	;# 
 16173   000319                     PR0             equ	793	;# 
 16174   00031A                     T0CON0          equ	794	;# 
 16175   00031B                     T0CON1          equ	795	;# 
 16176   00031C                     TMR1            equ	796	;# 
 16177   00031C                     TMR1L           equ	796	;# 
 16178   00031D                     TMR1H           equ	797	;# 
 16179   00031E                     T1CON           equ	798	;# 
 16180   00031E                     TMR1CON         equ	798	;# 
 16181   00031F                     T1GCON          equ	799	;# 
 16182   00031F                     TMR1GCON        equ	799	;# 
 16183   000320                     T1GATE          equ	800	;# 
 16184   000320                     TMR1GATE        equ	800	;# 
 16185   000321                     T1CLK           equ	801	;# 
 16186   000321                     TMR1CLK         equ	801	;# 
 16187   000321                     PR1             equ	801	;# 
 16188   000322                     T2TMR           equ	802	;# 
 16189   000322                     TMR2            equ	802	;# 
 16190   000323                     T2PR            equ	803	;# 
 16191   000323                     PR2             equ	803	;# 
 16192   000324                     T2CON           equ	804	;# 
 16193   000325                     T2HLT           equ	805	;# 
 16194   000326                     T2CLKCON        equ	806	;# 
 16195   000326                     T2CLK           equ	806	;# 
 16196   000327                     T2RST           equ	807	;# 
 16197   000328                     TMR3            equ	808	;# 
 16198   000328                     TMR3L           equ	808	;# 
 16199   000329                     TMR3H           equ	809	;# 
 16200   00032A                     T3CON           equ	810	;# 
 16201   00032A                     TMR3CON         equ	810	;# 
 16202   00032B                     T3GCON          equ	811	;# 
 16203   00032B                     TMR3GCON        equ	811	;# 
 16204   00032C                     T3GATE          equ	812	;# 
 16205   00032C                     TMR3GATE        equ	812	;# 
 16206   00032D                     T3CLK           equ	813	;# 
 16207   00032D                     TMR3CLK         equ	813	;# 
 16208   00032D                     PR3             equ	813	;# 
 16209   00032E                     T4TMR           equ	814	;# 
 16210   00032E                     TMR4            equ	814	;# 
 16211   00032F                     T4PR            equ	815	;# 
 16212   00032F                     PR4             equ	815	;# 
 16213   000330                     T4CON           equ	816	;# 
 16214   000331                     T4HLT           equ	817	;# 
 16215   000332                     T4CLKCON        equ	818	;# 
 16216   000332                     T4CLK           equ	818	;# 
 16217   000333                     T4RST           equ	819	;# 
 16218   000334                     TMR5            equ	820	;# 
 16219   000334                     TMR5L           equ	820	;# 
 16220   000335                     TMR5H           equ	821	;# 
 16221   000336                     T5CON           equ	822	;# 
 16222   000336                     TMR5CON         equ	822	;# 
 16223   000337                     T5GCON          equ	823	;# 
 16224   000337                     TMR5GCON        equ	823	;# 
 16225   000338                     T5GATE          equ	824	;# 
 16226   000338                     TMR5GATE        equ	824	;# 
 16227   000339                     T5CLK           equ	825	;# 
 16228   000339                     TMR5CLK         equ	825	;# 
 16229   000339                     PR5             equ	825	;# 
 16230   00033A                     T6TMR           equ	826	;# 
 16231   00033A                     TMR6            equ	826	;# 
 16232   00033B                     T6PR            equ	827	;# 
 16233   00033B                     PR6             equ	827	;# 
 16234   00033C                     T6CON           equ	828	;# 
 16235   00033D                     T6HLT           equ	829	;# 
 16236   00033E                     T6CLKCON        equ	830	;# 
 16237   00033E                     T6CLK           equ	830	;# 
 16238   00033F                     T6RST           equ	831	;# 
 16239   000340                     CCPR1           equ	832	;# 
 16240   000340                     CCPR1L          equ	832	;# 
 16241   000341                     CCPR1H          equ	833	;# 
 16242   000342                     CCP1CON         equ	834	;# 
 16243   000343                     CCP1CAP         equ	835	;# 
 16244   000344                     CCPR2           equ	836	;# 
 16245   000344                     CCPR2L          equ	836	;# 
 16246   000345                     CCPR2H          equ	837	;# 
 16247   000346                     CCP2CON         equ	838	;# 
 16248   000347                     CCP2CAP         equ	839	;# 
 16249   000348                     CCPR3           equ	840	;# 
 16250   000348                     CCPR3L          equ	840	;# 
 16251   000349                     CCPR3H          equ	841	;# 
 16252   00034A                     CCP3CON         equ	842	;# 
 16253   00034B                     CCP3CAP         equ	843	;# 
 16254   00034C                     CCPTMRS0        equ	844	;# 
 16255   00034F                     CRCDATA         equ	847	;# 
 16256   00034F                     CRCDATAL        equ	847	;# 
 16257   000350                     CRCDATAH        equ	848	;# 
 16258   000351                     CRCDATAU        equ	849	;# 
 16259   000352                     CRCDATAT        equ	850	;# 
 16260   000353                     CRCOUT          equ	851	;# 
 16261   000353                     CRCSHFT         equ	851	;# 
 16262   000353                     CRCXOR          equ	851	;# 
 16263   000353                     CRCOUTL         equ	851	;# 
 16264   000353                     CRCSHFTL        equ	851	;# 
 16265   000353                     CRCSHIFTL       equ	851	;# 
 16266   000353                     CRCXORL         equ	851	;# 
 16267   000354                     CRCOUTH         equ	852	;# 
 16268   000354                     CRCSHFTH        equ	852	;# 
 16269   000354                     CRCSHIFTH       equ	852	;# 
 16270   000354                     CRCXORH         equ	852	;# 
 16271   000355                     CRCOUTU         equ	853	;# 
 16272   000355                     CRCSHFTU        equ	853	;# 
 16273   000355                     CRCSHIFTU       equ	853	;# 
 16274   000355                     CRCXORU         equ	853	;# 
 16275   000356                     CRCOUTT         equ	854	;# 
 16276   000356                     CRCSHFTT        equ	854	;# 
 16277   000356                     CRCSHIFTT       equ	854	;# 
 16278   000356                     CRCXORT         equ	854	;# 
 16279   000357                     CRCCON0         equ	855	;# 
 16280   000358                     CRCCON1         equ	856	;# 
 16281   000359                     CRCCON2         equ	857	;# 
 16282   00035A                     SCANLADR        equ	858	;# 
 16283   00035A                     SCANLADRL       equ	858	;# 
 16284   00035B                     SCANLADRH       equ	859	;# 
 16285   00035C                     SCANLADRU       equ	860	;# 
 16286   00035D                     SCANHADR        equ	861	;# 
 16287   00035D                     SCANHADRL       equ	861	;# 
 16288   00035E                     SCANHADRH       equ	862	;# 
 16289   00035F                     SCANHADRU       equ	863	;# 
 16290   000360                     SCANCON0        equ	864	;# 
 16291   000361                     SCANTRIG        equ	865	;# 
 16292   000362                     IPR0            equ	866	;# 
 16293   000363                     IPR1            equ	867	;# 
 16294   000364                     IPR2            equ	868	;# 
 16295   000365                     IPR3            equ	869	;# 
 16296   000366                     IPR4            equ	870	;# 
 16297   000367                     IPR5            equ	871	;# 
 16298   000368                     IPR6            equ	872	;# 
 16299   000369                     IPR7            equ	873	;# 
 16300   00036A                     IPR8            equ	874	;# 
 16301   00036B                     IPR9            equ	875	;# 
 16302   00036C                     IPR10           equ	876	;# 
 16303   00036D                     IPR11           equ	877	;# 
 16304   00036E                     IPR12           equ	878	;# 
 16305   00036F                     IPR13           equ	879	;# 
 16306   000370                     IPR14           equ	880	;# 
 16307   000371                     IPR15           equ	881	;# 
 16308   000373                     STATUS_CSHAD    equ	883	;# 
 16309   000374                     WREG_CSHAD      equ	884	;# 
 16310   000375                     BSR_CSHAD       equ	885	;# 
 16311   000376                     SHADCON         equ	886	;# 
 16312   000377                     STATUS_SHAD     equ	887	;# 
 16313   000378                     WREG_SHAD       equ	888	;# 
 16314   000379                     BSR_SHAD        equ	889	;# 
 16315   00037A                     PCLATH_SHAD     equ	890	;# 
 16316   00037B                     PCLATU_SHAD     equ	891	;# 
 16317   00037C                     FSR0SH          equ	892	;# 
 16318   00037C                     FSR0L_SHAD      equ	892	;# 
 16319   00037D                     FSR0H_SHAD      equ	893	;# 
 16320   00037E                     FSR1SH          equ	894	;# 
 16321   00037E                     FSR1L_SHAD      equ	894	;# 
 16322   00037F                     FSR1H_SHAD      equ	895	;# 
 16323   000380                     FSR2SH          equ	896	;# 
 16324   000380                     FSR2L_SHAD      equ	896	;# 
 16325   000381                     FSR2H_SHAD      equ	897	;# 
 16326   000382                     PRODSH          equ	898	;# 
 16327   000382                     PRODL_SHAD      equ	898	;# 
 16328   000383                     PRODH_SHAD      equ	899	;# 
 16329   000387                     TU16ACON0       equ	903	;# 
 16330   000388                     TU16ACON1       equ	904	;# 
 16331   000389                     TU16AHLT        equ	905	;# 
 16332   00038A                     TU16APS         equ	906	;# 
 16333   00038B                     TU16ATMR        equ	907	;# 
 16334   00038B                     TU16ACR         equ	907	;# 
 16335   00038B                     TU16ATMRL       equ	907	;# 
 16336   00038B                     TU16ACRL        equ	907	;# 
 16337   00038C                     TU16ATMRH       equ	908	;# 
 16338   00038C                     TU16ACRH        equ	908	;# 
 16339   00038D                     TU16APR         equ	909	;# 
 16340   00038D                     TU16APRL        equ	909	;# 
 16341   00038E                     TU16APRH        equ	910	;# 
 16342   00038F                     TU16ACLK        equ	911	;# 
 16343   000390                     TU16AERS        equ	912	;# 
 16344   000393                     TU16BCON0       equ	915	;# 
 16345   000394                     TU16BCON1       equ	916	;# 
 16346   000395                     TU16BHLT        equ	917	;# 
 16347   000396                     TU16BPS         equ	918	;# 
 16348   000397                     TU16BTMR        equ	919	;# 
 16349   000397                     TU16BCR         equ	919	;# 
 16350   000397                     TU16BTMRL       equ	919	;# 
 16351   000397                     TU16BCRL        equ	919	;# 
 16352   000398                     TU16BTMRH       equ	920	;# 
 16353   000398                     TU16BCRH        equ	920	;# 
 16354   000399                     TU16BPR         equ	921	;# 
 16355   000399                     TU16BPRL        equ	921	;# 
 16356   00039A                     TU16BPRH        equ	922	;# 
 16357   00039B                     TU16BCLK        equ	923	;# 
 16358   00039C                     TU16BERS        equ	924	;# 
 16359   0003BB                     TUCHAIN         equ	955	;# 
 16360   0003BC                     CWG1CLK         equ	956	;# 
 16361   0003BC                     CWG1CLKCON      equ	956	;# 
 16362   0003BD                     CWG1ISM         equ	957	;# 
 16363   0003BE                     CWG1DBR         equ	958	;# 
 16364   0003BF                     CWG1DBF         equ	959	;# 
 16365   0003C0                     CWG1CON0        equ	960	;# 
 16366   0003C1                     CWG1CON1        equ	961	;# 
 16367   0003C2                     CWG1AS0         equ	962	;# 
 16368   0003C3                     CWG1AS1         equ	963	;# 
 16369   0003C4                     CWG1STR         equ	964	;# 
 16370   0003C5                     CWG2CLK         equ	965	;# 
 16371   0003C5                     CWG2CLKCON      equ	965	;# 
 16372   0003C6                     CWG2ISM         equ	966	;# 
 16373   0003C7                     CWG2DBR         equ	967	;# 
 16374   0003C8                     CWG2DBF         equ	968	;# 
 16375   0003C9                     CWG2CON0        equ	969	;# 
 16376   0003CA                     CWG2CON1        equ	970	;# 
 16377   0003CB                     CWG2AS0         equ	971	;# 
 16378   0003CC                     CWG2AS1         equ	972	;# 
 16379   0003CD                     CWG2STR         equ	973	;# 
 16380   0003CE                     CWG3CLK         equ	974	;# 
 16381   0003CE                     CWG3CLKCON      equ	974	;# 
 16382   0003CF                     CWG3ISM         equ	975	;# 
 16383   0003D0                     CWG3DBR         equ	976	;# 
 16384   0003D1                     CWG3DBF         equ	977	;# 
 16385   0003D2                     CWG3CON0        equ	978	;# 
 16386   0003D3                     CWG3CON1        equ	979	;# 
 16387   0003D4                     CWG3AS0         equ	980	;# 
 16388   0003D5                     CWG3AS1         equ	981	;# 
 16389   0003D6                     CWG3STR         equ	982	;# 
 16390   0003D7                     FVRCON          equ	983	;# 
 16391   0003D8                     ADCPCON         equ	984	;# 
 16392   0003D8                     ADCP            equ	984	;# 
 16393   0003D9                     ADLTH           equ	985	;# 
 16394   0003D9                     ADLTHL          equ	985	;# 
 16395   0003DA                     ADLTHH          equ	986	;# 
 16396   0003DB                     ADUTH           equ	987	;# 
 16397   0003DB                     ADUTHL          equ	987	;# 
 16398   0003DC                     ADUTHH          equ	988	;# 
 16399   0003DD                     ADERR           equ	989	;# 
 16400   0003DD                     ADERRL          equ	989	;# 
 16401   0003DE                     ADERRH          equ	990	;# 
 16402   0003DF                     ADSTPT          equ	991	;# 
 16403   0003DF                     ADSTPTL         equ	991	;# 
 16404   0003E0                     ADSTPTH         equ	992	;# 
 16405   0003E1                     ADFLTR          equ	993	;# 
 16406   0003E1                     ADFLTRL         equ	993	;# 
 16407   0003E2                     ADFLTRH         equ	994	;# 
 16408   0003E3                     ADACC           equ	995	;# 
 16409   0003E3                     ADACCL          equ	995	;# 
 16410   0003E4                     ADACCH          equ	996	;# 
 16411   0003E5                     ADACCU          equ	997	;# 
 16412   0003E6                     ADCNT           equ	998	;# 
 16413   0003E7                     ADRPT           equ	999	;# 
 16414   0003E8                     ADPREV          equ	1000	;# 
 16415   0003E8                     ADPREVL         equ	1000	;# 
 16416   0003E9                     ADPREVH         equ	1001	;# 
 16417   0003EA                     ADRES           equ	1002	;# 
 16418   0003EA                     ADRESL          equ	1002	;# 
 16419   0003EB                     ADRESH          equ	1003	;# 
 16420   0003EC                     ADPCH           equ	1004	;# 
 16421   0003EE                     ADACQ           equ	1006	;# 
 16422   0003EE                     ADACQL          equ	1006	;# 
 16423   0003EF                     ADACQH          equ	1007	;# 
 16424   0003F0                     ADCAP           equ	1008	;# 
 16425   0003F1                     ADPRE           equ	1009	;# 
 16426   0003F1                     ADPREL          equ	1009	;# 
 16427   0003F2                     ADPREH          equ	1010	;# 
 16428   0003F3                     ADCON0          equ	1011	;# 
 16429   0003F4                     ADCON1          equ	1012	;# 
 16430   0003F5                     ADCON2          equ	1013	;# 
 16431   0003F6                     ADCON3          equ	1014	;# 
 16432   0003F7                     ADSTAT          equ	1015	;# 
 16433   0003F8                     ADREF           equ	1016	;# 
 16434   0003F9                     ADACT           equ	1017	;# 
 16435   0003FA                     ADCLK           equ	1018	;# 
 16436   0003FB                     ADCTX           equ	1019	;# 
 16437   0003FC                     ADCSEL1         equ	1020	;# 
 16438   0003FD                     ADCSEL2         equ	1021	;# 
 16439   0003FE                     ADCSEL3         equ	1022	;# 
 16440   0003FF                     ADCSEL4         equ	1023	;# 
 16441   000400                     ANSELA          equ	1024	;# 
 16442   000401                     WPUA            equ	1025	;# 
 16443   000402                     ODCONA          equ	1026	;# 
 16444   000403                     SLRCONA         equ	1027	;# 
 16445   000404                     INLVLA          equ	1028	;# 
 16446   000405                     IOCAP           equ	1029	;# 
 16447   000406                     IOCAN           equ	1030	;# 
 16448   000407                     IOCAF           equ	1031	;# 
 16449   000408                     ANSELB          equ	1032	;# 
 16450   000409                     WPUB            equ	1033	;# 
 16451   00040A                     ODCONB          equ	1034	;# 
 16452   00040B                     SLRCONB         equ	1035	;# 
 16453   00040C                     INLVLB          equ	1036	;# 
 16454   00040D                     IOCBP           equ	1037	;# 
 16455   00040E                     IOCBN           equ	1038	;# 
 16456   00040F                     IOCBF           equ	1039	;# 
 16457   000410                     ANSELC          equ	1040	;# 
 16458   000411                     WPUC            equ	1041	;# 
 16459   000412                     ODCONC          equ	1042	;# 
 16460   000413                     SLRCONC         equ	1043	;# 
 16461   000414                     INLVLC          equ	1044	;# 
 16462   000415                     IOCCP           equ	1045	;# 
 16463   000416                     IOCCN           equ	1046	;# 
 16464   000417                     IOCCF           equ	1047	;# 
 16465   000421                     WPUE            equ	1057	;# 
 16466   000424                     INLVLE          equ	1060	;# 
 16467   000425                     IOCEP           equ	1061	;# 
 16468   000426                     IOCEN           equ	1062	;# 
 16469   000427                     IOCEF           equ	1063	;# 
 16470   000440                     NCO1ACC         equ	1088	;# 
 16471   000440                     NCO1ACCL        equ	1088	;# 
 16472   000441                     NCO1ACCH        equ	1089	;# 
 16473   000442                     NCO1ACCU        equ	1090	;# 
 16474   000443                     NCO1INC         equ	1091	;# 
 16475   000443                     NCO1INCL        equ	1091	;# 
 16476   000444                     NCO1INCH        equ	1092	;# 
 16477   000445                     NCO1INCU        equ	1093	;# 
 16478   000446                     NCO1CON         equ	1094	;# 
 16479   000447                     NCO1CLK         equ	1095	;# 
 16480   000448                     NCO2ACC         equ	1096	;# 
 16481   000448                     NCO2ACCL        equ	1096	;# 
 16482   000449                     NCO2ACCH        equ	1097	;# 
 16483   00044A                     NCO2ACCU        equ	1098	;# 
 16484   00044B                     NCO2INC         equ	1099	;# 
 16485   00044B                     NCO2INCL        equ	1099	;# 
 16486   00044C                     NCO2INCH        equ	1100	;# 
 16487   00044D                     NCO2INCU        equ	1101	;# 
 16488   00044E                     NCO2CON         equ	1102	;# 
 16489   00044F                     NCO2CLK         equ	1103	;# 
 16490   000450                     NCO3ACC         equ	1104	;# 
 16491   000450                     NCO3ACCL        equ	1104	;# 
 16492   000451                     NCO3ACCH        equ	1105	;# 
 16493   000452                     NCO3ACCU        equ	1106	;# 
 16494   000453                     NCO3INC         equ	1107	;# 
 16495   000453                     NCO3INCL        equ	1107	;# 
 16496   000454                     NCO3INCH        equ	1108	;# 
 16497   000455                     NCO3INCU        equ	1109	;# 
 16498   000456                     NCO3CON         equ	1110	;# 
 16499   000457                     NCO3CLK         equ	1111	;# 
 16500   000458                     FSCMCON         equ	1112	;# 
 16501   000459                     IVTLOCK         equ	1113	;# 
 16502   00045A                     IVTAD           equ	1114	;# 
 16503   00045A                     IVTADL          equ	1114	;# 
 16504   00045B                     IVTADH          equ	1115	;# 
 16505   00045C                     IVTADU          equ	1116	;# 
 16506   00045D                     IVTBASE         equ	1117	;# 
 16507   00045D                     IVTBASEL        equ	1117	;# 
 16508   00045E                     IVTBASEH        equ	1118	;# 
 16509   00045F                     IVTBASEU        equ	1119	;# 
 16510   000460                     PWM1ERS         equ	1120	;# 
 16511   000461                     PWM1CLK         equ	1121	;# 
 16512   000462                     PWM1LDS         equ	1122	;# 
 16513   000463                     PWM1PR          equ	1123	;# 
 16514   000463                     PWM1PRL         equ	1123	;# 
 16515   000464                     PWM1PRH         equ	1124	;# 
 16516   000465                     PWM1CPRE        equ	1125	;# 
 16517   000466                     PWM1PIPOS       equ	1126	;# 
 16518   000467                     PWM1GIR         equ	1127	;# 
 16519   000468                     PWM1GIE         equ	1128	;# 
 16520   000469                     PWM1CON         equ	1129	;# 
 16521   00046A                     PWM1S1CFG       equ	1130	;# 
 16522   00046B                     PWM1S1P1        equ	1131	;# 
 16523   00046B                     PWM1S1P1L       equ	1131	;# 
 16524   00046C                     PWM1S1P1H       equ	1132	;# 
 16525   00046D                     PWM1S1P2        equ	1133	;# 
 16526   00046D                     PWM1S1P2L       equ	1133	;# 
 16527   00046E                     PWM1S1P2H       equ	1134	;# 
 16528   00046F                     PWM2ERS         equ	1135	;# 
 16529   000470                     PWM2CLK         equ	1136	;# 
 16530   000471                     PWM2LDS         equ	1137	;# 
 16531   000472                     PWM2PR          equ	1138	;# 
 16532   000472                     PWM2PRL         equ	1138	;# 
 16533   000473                     PWM2PRH         equ	1139	;# 
 16534   000474                     PWM2CPRE        equ	1140	;# 
 16535   000475                     PWM2PIPOS       equ	1141	;# 
 16536   000476                     PWM2GIR         equ	1142	;# 
 16537   000477                     PWM2GIE         equ	1143	;# 
 16538   000478                     PWM2CON         equ	1144	;# 
 16539   000479                     PWM2S1CFG       equ	1145	;# 
 16540   00047A                     PWM2S1P1        equ	1146	;# 
 16541   00047A                     PWM2S1P1L       equ	1146	;# 
 16542   00047B                     PWM2S1P1H       equ	1147	;# 
 16543   00047C                     PWM2S1P2        equ	1148	;# 
 16544   00047C                     PWM2S1P2L       equ	1148	;# 
 16545   00047D                     PWM2S1P2H       equ	1149	;# 
 16546   00047E                     PWM3ERS         equ	1150	;# 
 16547   00047F                     PWM3CLK         equ	1151	;# 
 16548   000480                     PWM3LDS         equ	1152	;# 
 16549   000481                     PWM3PR          equ	1153	;# 
 16550   000481                     PWM3PRL         equ	1153	;# 
 16551   000482                     PWM3PRH         equ	1154	;# 
 16552   000483                     PWM3CPRE        equ	1155	;# 
 16553   000484                     PWM3PIPOS       equ	1156	;# 
 16554   000485                     PWM3GIR         equ	1157	;# 
 16555   000486                     PWM3GIE         equ	1158	;# 
 16556   000487                     PWM3CON         equ	1159	;# 
 16557   000488                     PWM3S1CFG       equ	1160	;# 
 16558   000489                     PWM3S1P1        equ	1161	;# 
 16559   000489                     PWM3S1P1L       equ	1161	;# 
 16560   00048A                     PWM3S1P1H       equ	1162	;# 
 16561   00048B                     PWM3S1P2        equ	1163	;# 
 16562   00048B                     PWM3S1P2L       equ	1163	;# 
 16563   00048C                     PWM3S1P2H       equ	1164	;# 
 16564   00048D                     PWM4ERS         equ	1165	;# 
 16565   00048E                     PWM4CLK         equ	1166	;# 
 16566   00048F                     PWM4LDS         equ	1167	;# 
 16567   000490                     PWM4PR          equ	1168	;# 
 16568   000490                     PWM4PRL         equ	1168	;# 
 16569   000491                     PWM4PRH         equ	1169	;# 
 16570   000492                     PWM4CPRE        equ	1170	;# 
 16571   000493                     PWM4PIPOS       equ	1171	;# 
 16572   000494                     PWM4GIR         equ	1172	;# 
 16573   000495                     PWM4GIE         equ	1173	;# 
 16574   000496                     PWM4CON         equ	1174	;# 
 16575   000497                     PWM4S1CFG       equ	1175	;# 
 16576   000498                     PWM4S1P1        equ	1176	;# 
 16577   000498                     PWM4S1P1L       equ	1176	;# 
 16578   000499                     PWM4S1P1H       equ	1177	;# 
 16579   00049A                     PWM4S1P2        equ	1178	;# 
 16580   00049A                     PWM4S1P2L       equ	1178	;# 
 16581   00049B                     PWM4S1P2H       equ	1179	;# 
 16582   00049C                     PWMLOAD         equ	1180	;# 
 16583   00049D                     PWMEN           equ	1181	;# 
 16584   00049E                     PIE0            equ	1182	;# 
 16585   00049F                     PIE1            equ	1183	;# 
 16586   0004A0                     PIE2            equ	1184	;# 
 16587   0004A1                     PIE3            equ	1185	;# 
 16588   0004A2                     PIE4            equ	1186	;# 
 16589   0004A3                     PIE5            equ	1187	;# 
 16590   0004A4                     PIE6            equ	1188	;# 
 16591   0004A5                     PIE7            equ	1189	;# 
 16592   0004A6                     PIE8            equ	1190	;# 
 16593   0004A7                     PIE9            equ	1191	;# 
 16594   0004A8                     PIE10           equ	1192	;# 
 16595   0004A9                     PIE11           equ	1193	;# 
 16596   0004AA                     PIE12           equ	1194	;# 
 16597   0004AB                     PIE13           equ	1195	;# 
 16598   0004AC                     PIE14           equ	1196	;# 
 16599   0004AD                     PIE15           equ	1197	;# 
 16600   0004AE                     PIR0            equ	1198	;# 
 16601   0004AF                     PIR1            equ	1199	;# 
 16602   0004B0                     PIR2            equ	1200	;# 
 16603   0004B1                     PIR3            equ	1201	;# 
 16604   0004B2                     PIR4            equ	1202	;# 
 16605   0004B3                     PIR5            equ	1203	;# 
 16606   0004B4                     PIR6            equ	1204	;# 
 16607   0004B5                     PIR7            equ	1205	;# 
 16608   0004B6                     PIR8            equ	1206	;# 
 16609   0004B7                     PIR9            equ	1207	;# 
 16610   0004B8                     PIR10           equ	1208	;# 
 16611   0004B9                     PIR11           equ	1209	;# 
 16612   0004BA                     PIR12           equ	1210	;# 
 16613   0004BB                     PIR13           equ	1211	;# 
 16614   0004BC                     PIR14           equ	1212	;# 
 16615   0004BD                     PIR15           equ	1213	;# 
 16616   0004BE                     LATA            equ	1214	;# 
 16617   0004BF                     LATB            equ	1215	;# 
 16618   0004C0                     LATC            equ	1216	;# 
 16619   0004C6                     TRISA           equ	1222	;# 
 16620   0004C7                     TRISB           equ	1223	;# 
 16621   0004C8                     TRISC           equ	1224	;# 
 16622   0004CA                     TRISE           equ	1226	;# 
 16623   0004CE                     PORTA           equ	1230	;# 
 16624   0004CF                     PORTB           equ	1231	;# 
 16625   0004D0                     PORTC           equ	1232	;# 
 16626   0004D2                     PORTE           equ	1234	;# 
 16627   0004D6                     INTCON0         equ	1238	;# 
 16628   0004D7                     INTCON1         equ	1239	;# 
 16629   0004D8                     STATUS          equ	1240	;# 
 16630   0004D9                     FSR2            equ	1241	;# 
 16631   0004D9                     FSR2L           equ	1241	;# 
 16632   0004DA                     FSR2H           equ	1242	;# 
 16633   0004DB                     PLUSW2          equ	1243	;# 
 16634   0004DC                     PREINC2         equ	1244	;# 
 16635   0004DD                     POSTDEC2        equ	1245	;# 
 16636   0004DE                     POSTINC2        equ	1246	;# 
 16637   0004DF                     INDF2           equ	1247	;# 
 16638   0004E0                     BSR             equ	1248	;# 
 16639   0004E1                     FSR1            equ	1249	;# 
 16640   0004E1                     FSR1L           equ	1249	;# 
 16641   0004E2                     FSR1H           equ	1250	;# 
 16642   0004E3                     PLUSW1          equ	1251	;# 
 16643   0004E4                     PREINC1         equ	1252	;# 
 16644   0004E5                     POSTDEC1        equ	1253	;# 
 16645   0004E6                     POSTINC1        equ	1254	;# 
 16646   0004E7                     INDF1           equ	1255	;# 
 16647   0004E8                     WREG            equ	1256	;# 
 16648   0004E9                     FSR0            equ	1257	;# 
 16649   0004E9                     FSR0L           equ	1257	;# 
 16650   0004EA                     FSR0H           equ	1258	;# 
 16651   0004EB                     PLUSW0          equ	1259	;# 
 16652   0004EC                     PREINC0         equ	1260	;# 
 16653   0004ED                     POSTDEC0        equ	1261	;# 
 16654   0004EE                     POSTINC0        equ	1262	;# 
 16655   0004EF                     INDF0           equ	1263	;# 
 16656   0004F0                     PCON0           equ	1264	;# 
 16657   0004F1                     PCON1           equ	1265	;# 
 16658   0004F2                     CPUDOZE         equ	1266	;# 
 16659   0004F3                     PROD            equ	1267	;# 
 16660   0004F3                     PRODL           equ	1267	;# 
 16661   0004F4                     PRODH           equ	1268	;# 
 16662   0004F5                     TABLAT          equ	1269	;# 
 16663   0004F6                     TBLPTR          equ	1270	;# 
 16664   0004F6                     TBLPTRL         equ	1270	;# 
 16665   0004F7                     TBLPTRH         equ	1271	;# 
 16666   0004F8                     TBLPTRU         equ	1272	;# 
 16667   0004F9                     PCLAT           equ	1273	;# 
 16668   0004F9                     PCL             equ	1273	;# 
 16669   0004FA                     PCLATH          equ	1274	;# 
 16670   0004FB                     PCLATU          equ	1275	;# 
 16671   0004FC                     STKPTR          equ	1276	;# 
 16672   0004FD                     TOS             equ	1277	;# 
 16673   0004FD                     TOSL            equ	1277	;# 
 16674   0004FE                     TOSH            equ	1278	;# 
 16675   0004FF                     TOSU            equ	1279	;# 
 16676   000038                     BOOTREG         equ	56	;# 
 16677   000039                     CLKRCON         equ	57	;# 
 16678   00003A                     CLKRCLK         equ	58	;# 
 16679   000040                     NVMCON0         equ	64	;# 
 16680   000041                     NVMCON1         equ	65	;# 
 16681   000042                     NVMLOCK         equ	66	;# 
 16682   000043                     NVMADR          equ	67	;# 
 16683   000043                     NVMADRL         equ	67	;# 
 16684   000044                     NVMADRH         equ	68	;# 
 16685   000045                     NVMADRU         equ	69	;# 
 16686   000046                     NVMDAT          equ	70	;# 
 16687   000046                     NVMDATL         equ	70	;# 
 16688   000047                     NVMDATH         equ	71	;# 
 16689   000048                     VREGCON         equ	72	;# 
 16690   000049                     BORCON          equ	73	;# 
 16691   00004A                     HLVDCON0        equ	74	;# 
 16692   00004B                     HLVDCON1        equ	75	;# 
 16693   00004C                     ZCDCON          equ	76	;# 
 16694   000060                     PMD0            equ	96	;# 
 16695   000061                     PMD1            equ	97	;# 
 16696   000062                     PMD2            equ	98	;# 
 16697   000063                     PMD3            equ	99	;# 
 16698   000064                     PMD4            equ	100	;# 
 16699   000065                     PMD5            equ	101	;# 
 16700   000066                     PMD6            equ	102	;# 
 16701   000067                     PMD7            equ	103	;# 
 16702   000068                     PMD8            equ	104	;# 
 16703   00006A                     MD1CON0         equ	106	;# 
 16704   00006B                     MD1CON1         equ	107	;# 
 16705   00006C                     MD1SRC          equ	108	;# 
 16706   00006D                     MD1CARL         equ	109	;# 
 16707   00006E                     MD1CARH         equ	110	;# 
 16708   00006F                     CMOUT           equ	111	;# 
 16709   000070                     CM1CON0         equ	112	;# 
 16710   000071                     CM1CON1         equ	113	;# 
 16711   000072                     CM1NCH          equ	114	;# 
 16712   000073                     CM1PCH          equ	115	;# 
 16713   000074                     CM2CON0         equ	116	;# 
 16714   000075                     CM2CON1         equ	117	;# 
 16715   000076                     CM2NCH          equ	118	;# 
 16716   000077                     CM2PCH          equ	119	;# 
 16717   000078                     WDTCON0         equ	120	;# 
 16718   000079                     WDTCON1         equ	121	;# 
 16719   00007A                     WDTPSL          equ	122	;# 
 16720   00007B                     WDTPSH          equ	123	;# 
 16721   00007C                     WDTTMR          equ	124	;# 
 16722   00007D                     DAC1DAT         equ	125	;# 
 16723   00007D                     DAC1DATL        equ	125	;# 
 16724   00007F                     DAC1CON         equ	127	;# 
 16725   000080                     SPI1RXB         equ	128	;# 
 16726   000081                     SPI1TXB         equ	129	;# 
 16727   000082                     SPI1TCNT        equ	130	;# 
 16728   000082                     SPI1TCNTL       equ	130	;# 
 16729   000083                     SPI1TCNTH       equ	131	;# 
 16730   000084                     SPI1CON0        equ	132	;# 
 16731   000085                     SPI1CON1        equ	133	;# 
 16732   000086                     SPI1CON2        equ	134	;# 
 16733   000087                     SPI1STATUS      equ	135	;# 
 16734   000088                     SPI1TWIDTH      equ	136	;# 
 16735   000089                     SPI1BAUD        equ	137	;# 
 16736   00008A                     SPI1INTF        equ	138	;# 
 16737   00008B                     SPI1INTE        equ	139	;# 
 16738   00008C                     SPI1CLK         equ	140	;# 
 16739   00008D                     SPI2RXB         equ	141	;# 
 16740   00008E                     SPI2TXB         equ	142	;# 
 16741   00008F                     SPI2TCNT        equ	143	;# 
 16742   00008F                     SPI2TCNTL       equ	143	;# 
 16743   000090                     SPI2TCNTH       equ	144	;# 
 16744   000091                     SPI2CON0        equ	145	;# 
 16745   000092                     SPI2CON1        equ	146	;# 
 16746   000093                     SPI2CON2        equ	147	;# 
 16747   000094                     SPI2STATUS      equ	148	;# 
 16748   000095                     SPI2TWIDTH      equ	149	;# 
 16749   000096                     SPI2BAUD        equ	150	;# 
 16750   000097                     SPI2INTF        equ	151	;# 
 16751   000098                     SPI2INTE        equ	152	;# 
 16752   000099                     SPI2CLK         equ	153	;# 
 16753   0000AC                     ACTCON          equ	172	;# 
 16754   0000AD                     OSCCON1         equ	173	;# 
 16755   0000AE                     OSCCON2         equ	174	;# 
 16756   0000AF                     OSCCON3         equ	175	;# 
 16757   0000B0                     OSCTUNE         equ	176	;# 
 16758   0000B1                     OSCFRQ          equ	177	;# 
 16759   0000B1                     OSCFREQ         equ	177	;# 
 16760   0000B2                     OSCSTAT         equ	178	;# 
 16761   0000B2                     OSCSTAT1        equ	178	;# 
 16762   0000B3                     OSCEN           equ	179	;# 
 16763   0000B4                     PRLOCK          equ	180	;# 
 16764   0000B5                     SCANPR          equ	181	;# 
 16765   0000B6                     DMA1PR          equ	182	;# 
 16766   0000B7                     DMA2PR          equ	183	;# 
 16767   0000B8                     DMA3PR          equ	184	;# 
 16768   0000B9                     DMA4PR          equ	185	;# 
 16769   0000BA                     DMA5PR          equ	186	;# 
 16770   0000BB                     DMA6PR          equ	187	;# 
 16771   0000BC                     DMA7PR          equ	188	;# 
 16772   0000BD                     DMA8PR          equ	189	;# 
 16773   0000BE                     MAINPR          equ	190	;# 
 16774   0000BF                     ISRPR           equ	191	;# 
 16775   0000D4                     CLCDATA         equ	212	;# 
 16776   0000D5                     CLCSELECT       equ	213	;# 
 16777   0000D6                     CLCnCON         equ	214	;# 
 16778   0000D7                     CLCnPOL         equ	215	;# 
 16779   0000D8                     CLCnSEL0        equ	216	;# 
 16780   0000D9                     CLCnSEL1        equ	217	;# 
 16781   0000DA                     CLCnSEL2        equ	218	;# 
 16782   0000DB                     CLCnSEL3        equ	219	;# 
 16783   0000DC                     CLCnGLS0        equ	220	;# 
 16784   0000DD                     CLCnGLS1        equ	221	;# 
 16785   0000DE                     CLCnGLS2        equ	222	;# 
 16786   0000DF                     CLCnGLS3        equ	223	;# 
 16787   0000E8                     DMASELECT       equ	232	;# 
 16788   0000E9                     DMAnBUF         equ	233	;# 
 16789   0000EA                     DMAnDCNT        equ	234	;# 
 16790   0000EA                     DMAnDCNTL       equ	234	;# 
 16791   0000EB                     DMAnDCNTH       equ	235	;# 
 16792   0000EC                     DMAnDPTR        equ	236	;# 
 16793   0000EC                     DMAnDPTRL       equ	236	;# 
 16794   0000ED                     DMAnDPTRH       equ	237	;# 
 16795   0000EE                     DMAnDSZ         equ	238	;# 
 16796   0000EE                     DMAnDSZL        equ	238	;# 
 16797   0000EF                     DMAnDSZH        equ	239	;# 
 16798   0000F0                     DMAnDSA         equ	240	;# 
 16799   0000F0                     DMAnDSAL        equ	240	;# 
 16800   0000F1                     DMAnDSAH        equ	241	;# 
 16801   0000F2                     DMAnSCNT        equ	242	;# 
 16802   0000F2                     DMAnSCNTL       equ	242	;# 
 16803   0000F3                     DMAnSCNTH       equ	243	;# 
 16804   0000F4                     DMAnSPTR        equ	244	;# 
 16805   0000F4                     DMAnSPTRL       equ	244	;# 
 16806   0000F5                     DMAnSPTRH       equ	245	;# 
 16807   0000F6                     DMAnSPTRU       equ	246	;# 
 16808   0000F7                     DMAnSSZ         equ	247	;# 
 16809   0000F7                     DMAnSSZL        equ	247	;# 
 16810   0000F8                     DMAnSSZH        equ	248	;# 
 16811   0000F9                     DMAnSSA         equ	249	;# 
 16812   0000F9                     DMAnSSAL        equ	249	;# 
 16813   0000FA                     DMAnSSAH        equ	250	;# 
 16814   0000FB                     DMAnSSAU        equ	251	;# 
 16815   0000FC                     DMAnCON0        equ	252	;# 
 16816   0000FD                     DMAnCON1        equ	253	;# 
 16817   0000FE                     DMAnAIRQ        equ	254	;# 
 16818   0000FF                     DMAnSIRQ        equ	255	;# 
 16819   000100                     C1CONL          equ	256	;# 
 16820   000101                     C1CONH          equ	257	;# 
 16821   000102                     C1CONU          equ	258	;# 
 16822   000103                     C1CONT          equ	259	;# 
 16823   000104                     C1NBTCFGL       equ	260	;# 
 16824   000105                     C1NBTCFGH       equ	261	;# 
 16825   000106                     C1NBTCFGU       equ	262	;# 
 16826   000107                     C1NBTCFGT       equ	263	;# 
 16827   000108                     C1DBTCFGL       equ	264	;# 
 16828   000109                     C1DBTCFGH       equ	265	;# 
 16829   00010A                     C1DBTCFGU       equ	266	;# 
 16830   00010B                     C1DBTCFGT       equ	267	;# 
 16831   00010C                     C1TDCL          equ	268	;# 
 16832   00010D                     C1TDCH          equ	269	;# 
 16833   00010E                     C1TDCU          equ	270	;# 
 16834   000110                     C1TBC           equ	272	;# 
 16835   000110                     C1TBCL          equ	272	;# 
 16836   000111                     C1TBCH          equ	273	;# 
 16837   000112                     C1TBCU          equ	274	;# 
 16838   000113                     C1TBCT          equ	275	;# 
 16839   000114                     C1TSCONL        equ	276	;# 
 16840   000115                     C1TSCONH        equ	277	;# 
 16841   000116                     C1TSCONU        equ	278	;# 
 16842   000117                     C1TSCONT        equ	279	;# 
 16843   000118                     C1VECL          equ	280	;# 
 16844   000119                     C1VECH          equ	281	;# 
 16845   00011A                     C1VECU          equ	282	;# 
 16846   00011B                     C1VECT          equ	283	;# 
 16847   00011C                     C1INTL          equ	284	;# 
 16848   00011D                     C1INTH          equ	285	;# 
 16849   00011E                     C1INTU          equ	286	;# 
 16850   00011F                     C1INTT          equ	287	;# 
 16851   000120                     C1RXIF          equ	288	;# 
 16852   000120                     C1RXIFL         equ	288	;# 
 16853   000121                     C1RXIFH         equ	289	;# 
 16854   000122                     C1RXIFU         equ	290	;# 
 16855   000123                     C1RXIFT         equ	291	;# 
 16856   000124                     C1TXIF          equ	292	;# 
 16857   000124                     C1TXIFL         equ	292	;# 
 16858   000125                     C1TXIFH         equ	293	;# 
 16859   000126                     C1TXIFU         equ	294	;# 
 16860   000127                     C1TXIFT         equ	295	;# 
 16861   000128                     C1RXOVIF        equ	296	;# 
 16862   000128                     C1RXOVIFL       equ	296	;# 
 16863   000129                     C1RXOVIFH       equ	297	;# 
 16864   00012A                     C1RXOVIFU       equ	298	;# 
 16865   00012B                     C1RXOVIFT       equ	299	;# 
 16866   00012C                     C1TXATIF        equ	300	;# 
 16867   00012C                     C1TXATIFL       equ	300	;# 
 16868   00012D                     C1TXATIFH       equ	301	;# 
 16869   00012E                     C1TXATIFU       equ	302	;# 
 16870   00012F                     C1TXATIFT       equ	303	;# 
 16871   000130                     C1TXREQ         equ	304	;# 
 16872   000130                     C1TXREQL        equ	304	;# 
 16873   000131                     C1TXREQH        equ	305	;# 
 16874   000132                     C1TXREQU        equ	306	;# 
 16875   000133                     C1TXREQT        equ	307	;# 
 16876   000134                     C1TRECL         equ	308	;# 
 16877   000135                     C1TRECH         equ	309	;# 
 16878   000136                     C1TRECU         equ	310	;# 
 16879   000137                     C1TRECT         equ	311	;# 
 16880   000138                     C1BDIAG0L       equ	312	;# 
 16881   000139                     C1BDIAG0H       equ	313	;# 
 16882   00013C                     C1BDIAG1L       equ	316	;# 
 16883   00013D                     C1BDIAG1H       equ	317	;# 
 16884   00013E                     C1BDIAG1U       equ	318	;# 
 16885   00013F                     C1BDIAG1T       equ	319	;# 
 16886   000140                     C1TEFCONL       equ	320	;# 
 16887   000141                     C1TEFCONH       equ	321	;# 
 16888   000142                     C1TEFCONU       equ	322	;# 
 16889   000143                     C1TEFCONT       equ	323	;# 
 16890   000144                     C1TEFSTAL       equ	324	;# 
 16891   000145                     C1TEFSTAH       equ	325	;# 
 16892   000146                     C1TEFSTAU       equ	326	;# 
 16893   000147                     C1TEFSTAT       equ	327	;# 
 16894   000148                     C1TEFUA         equ	328	;# 
 16895   000148                     C1TEFUAL        equ	328	;# 
 16896   000149                     C1TEFUAH        equ	329	;# 
 16897   00014A                     C1TEFUAU        equ	330	;# 
 16898   00014B                     C1TEFUAT        equ	331	;# 
 16899   00014C                     C1FIFOBA        equ	332	;# 
 16900   00014C                     C1FIFOBAL       equ	332	;# 
 16901   00014D                     C1FIFOBAH       equ	333	;# 
 16902   00014E                     C1FIFOBAU       equ	334	;# 
 16903   00014F                     C1FIFOBAT       equ	335	;# 
 16904   000150                     C1TXQCONL       equ	336	;# 
 16905   000151                     C1TXQCONH       equ	337	;# 
 16906   000152                     C1TXQCONU       equ	338	;# 
 16907   000153                     C1TXQCONT       equ	339	;# 
 16908   000154                     C1TXQSTAL       equ	340	;# 
 16909   000155                     C1TXQSTAH       equ	341	;# 
 16910   000156                     C1TXQSTAU       equ	342	;# 
 16911   000157                     C1TXQSTAT       equ	343	;# 
 16912   000158                     C1TXQUA         equ	344	;# 
 16913   000158                     C1TXQUAL        equ	344	;# 
 16914   000159                     C1TXQUAH        equ	345	;# 
 16915   00015A                     C1TXQUAU        equ	346	;# 
 16916   00015B                     C1TXQUAT        equ	347	;# 
 16917   00015C                     C1FIFOCON1      equ	348	;# 
 16918   00015C                     C1FIFOCON1L     equ	348	;# 
 16919   00015D                     C1FIFOCON1H     equ	349	;# 
 16920   00015E                     C1FIFOCON1U     equ	350	;# 
 16921   00015F                     C1FIFOCON1T     equ	351	;# 
 16922   000160                     C1FIFOSTA1      equ	352	;# 
 16923   000160                     C1FIFOSTA1L     equ	352	;# 
 16924   000161                     C1FIFOSTA1H     equ	353	;# 
 16925   000162                     C1FIFOSTA1U     equ	354	;# 
 16926   000163                     C1FIFOSTA1T     equ	355	;# 
 16927   000164                     C1FIFOUA1       equ	356	;# 
 16928   000164                     C1FIFOUA1L      equ	356	;# 
 16929   000165                     C1FIFOUA1H      equ	357	;# 
 16930   000166                     C1FIFOUA1U      equ	358	;# 
 16931   000167                     C1FIFOUA1T      equ	359	;# 
 16932   000168                     C1FIFOCON2      equ	360	;# 
 16933   000168                     C1FIFOCON2L     equ	360	;# 
 16934   000169                     C1FIFOCON2H     equ	361	;# 
 16935   00016A                     C1FIFOCON2U     equ	362	;# 
 16936   00016B                     C1FIFOCON2T     equ	363	;# 
 16937   00016C                     C1FIFOSTA2      equ	364	;# 
 16938   00016C                     C1FIFOSTA2L     equ	364	;# 
 16939   00016D                     C1FIFOSTA2H     equ	365	;# 
 16940   00016E                     C1FIFOSTA2U     equ	366	;# 
 16941   00016F                     C1FIFOSTA2T     equ	367	;# 
 16942   000170                     C1FIFOUA2       equ	368	;# 
 16943   000170                     C1FIFOUA2L      equ	368	;# 
 16944   000171                     C1FIFOUA2H      equ	369	;# 
 16945   000172                     C1FIFOUA2U      equ	370	;# 
 16946   000173                     C1FIFOUA2T      equ	371	;# 
 16947   000174                     C1FIFOCON3      equ	372	;# 
 16948   000174                     C1FIFOCON3L     equ	372	;# 
 16949   000175                     C1FIFOCON3H     equ	373	;# 
 16950   000176                     C1FIFOCON3U     equ	374	;# 
 16951   000177                     C1FIFOCON3T     equ	375	;# 
 16952   000178                     C1FIFOSTA3      equ	376	;# 
 16953   000178                     C1FIFOSTA3L     equ	376	;# 
 16954   000179                     C1FIFOSTA3H     equ	377	;# 
 16955   00017A                     C1FIFOSTA3U     equ	378	;# 
 16956   00017B                     C1FIFOSTA3T     equ	379	;# 
 16957   00017C                     C1FIFOUA3       equ	380	;# 
 16958   00017C                     C1FIFOUA3L      equ	380	;# 
 16959   00017D                     C1FIFOUA3H      equ	381	;# 
 16960   00017E                     C1FIFOUA3U      equ	382	;# 
 16961   00017F                     C1FIFOUA3T      equ	383	;# 
 16962   000180                     C1FLTCON0L      equ	384	;# 
 16963   000181                     C1FLTCON0H      equ	385	;# 
 16964   000182                     C1FLTCON0U      equ	386	;# 
 16965   000183                     C1FLTCON0T      equ	387	;# 
 16966   000184                     C1FLTCON1L      equ	388	;# 
 16967   000185                     C1FLTCON1H      equ	389	;# 
 16968   000186                     C1FLTCON1U      equ	390	;# 
 16969   000187                     C1FLTCON1T      equ	391	;# 
 16970   000188                     C1FLTCON2L      equ	392	;# 
 16971   000189                     C1FLTCON2H      equ	393	;# 
 16972   00018A                     C1FLTCON2U      equ	394	;# 
 16973   00018B                     C1FLTCON2T      equ	395	;# 
 16974   00018C                     C1FLTOBJ0       equ	396	;# 
 16975   00018C                     C1FLTOBJ0L      equ	396	;# 
 16976   00018D                     C1FLTOBJ0H      equ	397	;# 
 16977   00018E                     C1FLTOBJ0U      equ	398	;# 
 16978   00018F                     C1FLTOBJ0T      equ	399	;# 
 16979   000190                     C1MASK0         equ	400	;# 
 16980   000190                     C1MASK0L        equ	400	;# 
 16981   000191                     C1MASK0H        equ	401	;# 
 16982   000192                     C1MASK0U        equ	402	;# 
 16983   000193                     C1MASK0T        equ	403	;# 
 16984   000194                     C1FLTOBJ1       equ	404	;# 
 16985   000194                     C1FLTOBJ1L      equ	404	;# 
 16986   000195                     C1FLTOBJ1H      equ	405	;# 
 16987   000196                     C1FLTOBJ1U      equ	406	;# 
 16988   000197                     C1FLTOBJ1T      equ	407	;# 
 16989   000198                     C1MASK1         equ	408	;# 
 16990   000198                     C1MASK1L        equ	408	;# 
 16991   000199                     C1MASK1H        equ	409	;# 
 16992   00019A                     C1MASK1U        equ	410	;# 
 16993   00019B                     C1MASK1T        equ	411	;# 
 16994   00019C                     C1FLTOBJ2       equ	412	;# 
 16995   00019C                     C1FLTOBJ2L      equ	412	;# 
 16996   00019D                     C1FLTOBJ2H      equ	413	;# 
 16997   00019E                     C1FLTOBJ2U      equ	414	;# 
 16998   00019F                     C1FLTOBJ2T      equ	415	;# 
 16999   0001A0                     C1MASK2         equ	416	;# 
 17000   0001A0                     C1MASK2L        equ	416	;# 
 17001   0001A1                     C1MASK2H        equ	417	;# 
 17002   0001A2                     C1MASK2U        equ	418	;# 
 17003   0001A3                     C1MASK2T        equ	419	;# 
 17004   0001A4                     C1FLTOBJ3       equ	420	;# 
 17005   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17006   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17007   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17008   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17009   0001A8                     C1MASK3         equ	424	;# 
 17010   0001A8                     C1MASK3L        equ	424	;# 
 17011   0001A9                     C1MASK3H        equ	425	;# 
 17012   0001AA                     C1MASK3U        equ	426	;# 
 17013   0001AB                     C1MASK3T        equ	427	;# 
 17014   0001AC                     C1FLTOBJ4       equ	428	;# 
 17015   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17016   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17017   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17018   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17019   0001B0                     C1MASK4         equ	432	;# 
 17020   0001B0                     C1MASK4L        equ	432	;# 
 17021   0001B1                     C1MASK4H        equ	433	;# 
 17022   0001B2                     C1MASK4U        equ	434	;# 
 17023   0001B3                     C1MASK4T        equ	435	;# 
 17024   0001B4                     C1FLTOBJ5       equ	436	;# 
 17025   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17026   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17027   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17028   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17029   0001B8                     C1MASK5         equ	440	;# 
 17030   0001B8                     C1MASK5L        equ	440	;# 
 17031   0001B9                     C1MASK5H        equ	441	;# 
 17032   0001BA                     C1MASK5U        equ	442	;# 
 17033   0001BB                     C1MASK5T        equ	443	;# 
 17034   0001BC                     C1FLTOBJ6       equ	444	;# 
 17035   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17036   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17037   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17038   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17039   0001C0                     C1MASK6         equ	448	;# 
 17040   0001C0                     C1MASK6L        equ	448	;# 
 17041   0001C1                     C1MASK6H        equ	449	;# 
 17042   0001C2                     C1MASK6U        equ	450	;# 
 17043   0001C3                     C1MASK6T        equ	451	;# 
 17044   0001C4                     C1FLTOBJ7       equ	452	;# 
 17045   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17046   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17047   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17048   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17049   0001C8                     C1MASK7         equ	456	;# 
 17050   0001C8                     C1MASK7L        equ	456	;# 
 17051   0001C9                     C1MASK7H        equ	457	;# 
 17052   0001CA                     C1MASK7U        equ	458	;# 
 17053   0001CB                     C1MASK7T        equ	459	;# 
 17054   0001CC                     C1FLTOBJ8       equ	460	;# 
 17055   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17056   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17057   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17058   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17059   0001D0                     C1MASK8         equ	464	;# 
 17060   0001D0                     C1MASK8L        equ	464	;# 
 17061   0001D1                     C1MASK8H        equ	465	;# 
 17062   0001D2                     C1MASK8U        equ	466	;# 
 17063   0001D3                     C1MASK8T        equ	467	;# 
 17064   0001D4                     C1FLTOBJ9       equ	468	;# 
 17065   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17066   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17067   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17068   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17069   0001D8                     C1MASK9         equ	472	;# 
 17070   0001D8                     C1MASK9L        equ	472	;# 
 17071   0001D9                     C1MASK9H        equ	473	;# 
 17072   0001DA                     C1MASK9U        equ	474	;# 
 17073   0001DB                     C1MASK9T        equ	475	;# 
 17074   0001DC                     C1FLTOBJ10      equ	476	;# 
 17075   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17076   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17077   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17078   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17079   0001E0                     C1MASK10        equ	480	;# 
 17080   0001E0                     C1MASK10L       equ	480	;# 
 17081   0001E1                     C1MASK10H       equ	481	;# 
 17082   0001E2                     C1MASK10U       equ	482	;# 
 17083   0001E3                     C1MASK10T       equ	483	;# 
 17084   0001E4                     C1FLTOBJ11      equ	484	;# 
 17085   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17086   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17087   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17088   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17089   0001E8                     C1MASK11        equ	488	;# 
 17090   0001E8                     C1MASK11L       equ	488	;# 
 17091   0001E9                     C1MASK11H       equ	489	;# 
 17092   0001EA                     C1MASK11U       equ	490	;# 
 17093   0001EB                     C1MASK11T       equ	491	;# 
 17094   000200                     PPSLOCK         equ	512	;# 
 17095   000201                     RA0PPS          equ	513	;# 
 17096   000202                     RA1PPS          equ	514	;# 
 17097   000203                     RA2PPS          equ	515	;# 
 17098   000204                     RA3PPS          equ	516	;# 
 17099   000205                     RA4PPS          equ	517	;# 
 17100   000206                     RA5PPS          equ	518	;# 
 17101   000207                     RA6PPS          equ	519	;# 
 17102   000208                     RA7PPS          equ	520	;# 
 17103   000209                     RB0PPS          equ	521	;# 
 17104   00020A                     RB1PPS          equ	522	;# 
 17105   00020B                     RB2PPS          equ	523	;# 
 17106   00020C                     RB3PPS          equ	524	;# 
 17107   00020D                     RB4PPS          equ	525	;# 
 17108   00020E                     RB5PPS          equ	526	;# 
 17109   00020F                     RB6PPS          equ	527	;# 
 17110   000210                     RB7PPS          equ	528	;# 
 17111   000211                     RC0PPS          equ	529	;# 
 17112   000212                     RC1PPS          equ	530	;# 
 17113   000213                     RC2PPS          equ	531	;# 
 17114   000214                     RC3PPS          equ	532	;# 
 17115   000215                     RC4PPS          equ	533	;# 
 17116   000216                     RC5PPS          equ	534	;# 
 17117   000217                     RC6PPS          equ	535	;# 
 17118   000218                     RC7PPS          equ	536	;# 
 17119   00023D                     CANRXPPS        equ	573	;# 
 17120   00023E                     INT0PPS         equ	574	;# 
 17121   00023F                     INT1PPS         equ	575	;# 
 17122   000240                     INT2PPS         equ	576	;# 
 17123   000241                     T0CKIPPS        equ	577	;# 
 17124   000242                     T1CKIPPS        equ	578	;# 
 17125   000243                     T1GPPS          equ	579	;# 
 17126   000244                     T3CKIPPS        equ	580	;# 
 17127   000245                     T3GPPS          equ	581	;# 
 17128   000246                     T5CKIPPS        equ	582	;# 
 17129   000247                     T5GPPS          equ	583	;# 
 17130   000248                     T2INPPS         equ	584	;# 
 17131   000249                     T4INPPS         equ	585	;# 
 17132   00024A                     T6INPPS         equ	586	;# 
 17133   00024B                     TUIN0PPS        equ	587	;# 
 17134   00024C                     TUIN1PPS        equ	588	;# 
 17135   00024F                     CCP1PPS         equ	591	;# 
 17136   000250                     CCP2PPS         equ	592	;# 
 17137   000251                     CCP3PPS         equ	593	;# 
 17138   000253                     PWM1ERSPPS      equ	595	;# 
 17139   000254                     PWM2ERSPPS      equ	596	;# 
 17140   000255                     PWM3ERSPPS      equ	597	;# 
 17141   000256                     PWM4ERSPPS      equ	598	;# 
 17142   000257                     PWMIN0PPS       equ	599	;# 
 17143   000258                     PWMIN1PPS       equ	600	;# 
 17144   000259                     SMT1WINPPS      equ	601	;# 
 17145   00025A                     SMT1SIGPPS      equ	602	;# 
 17146   00025B                     CWG1PPS         equ	603	;# 
 17147   00025B                     CWG1INPPS       equ	603	;# 
 17148   00025C                     CWG2PPS         equ	604	;# 
 17149   00025C                     CWG2INPPS       equ	604	;# 
 17150   00025D                     CWG3PPS         equ	605	;# 
 17151   00025D                     CWG3INPPS       equ	605	;# 
 17152   00025E                     MD1CARLPPS      equ	606	;# 
 17153   00025E                     MDCARLPPS       equ	606	;# 
 17154   00025F                     MD1CARHPPS      equ	607	;# 
 17155   00025F                     MDCARHPPS       equ	607	;# 
 17156   000260                     MD1SRCPPS       equ	608	;# 
 17157   000260                     MDSRCPPS        equ	608	;# 
 17158   000261                     CLCIN0PPS       equ	609	;# 
 17159   000262                     CLCIN1PPS       equ	610	;# 
 17160   000263                     CLCIN2PPS       equ	611	;# 
 17161   000264                     CLCIN3PPS       equ	612	;# 
 17162   000265                     CLCIN4PPS       equ	613	;# 
 17163   000266                     CLCIN5PPS       equ	614	;# 
 17164   000267                     CLCIN6PPS       equ	615	;# 
 17165   000268                     CLCIN7PPS       equ	616	;# 
 17166   000269                     ADACTPPS        equ	617	;# 
 17167   00026A                     SPI1SCKPPS      equ	618	;# 
 17168   00026B                     SPI1SDIPPS      equ	619	;# 
 17169   00026C                     SPI1SSPPS       equ	620	;# 
 17170   00026D                     SPI2SCKPPS      equ	621	;# 
 17171   00026E                     SPI2SDIPPS      equ	622	;# 
 17172   00026F                     SPI2SSPPS       equ	623	;# 
 17173   000270                     I2C1SDAPPS      equ	624	;# 
 17174   000271                     I2C1SCLPPS      equ	625	;# 
 17175   000272                     U1RXPPS         equ	626	;# 
 17176   000273                     U1CTSPPS        equ	627	;# 
 17177   000274                     U2RXPPS         equ	628	;# 
 17178   000275                     U2CTSPPS        equ	629	;# 
 17179   000276                     U3RXPPS         equ	630	;# 
 17180   000277                     U3CTSPPS        equ	631	;# 
 17181   000278                     U4RXPPS         equ	632	;# 
 17182   000279                     U4CTSPPS        equ	633	;# 
 17183   00027A                     U5RXPPS         equ	634	;# 
 17184   00027B                     U5CTSPPS        equ	635	;# 
 17185   000286                     RC4I2C          equ	646	;# 
 17186   000287                     RC3I2C          equ	647	;# 
 17187   000288                     RB2I2C          equ	648	;# 
 17188   000289                     RB1I2C          equ	649	;# 
 17189   00028A                     I2C1RXB         equ	650	;# 
 17190   00028B                     I2C1TXB         equ	651	;# 
 17191   00028C                     I2C1CNTL        equ	652	;# 
 17192   00028D                     I2C1CNTH        equ	653	;# 
 17193   00028E                     I2C1ADB0        equ	654	;# 
 17194   00028F                     I2C1ADB1        equ	655	;# 
 17195   000290                     I2C1ADR0        equ	656	;# 
 17196   000291                     I2C1ADR1        equ	657	;# 
 17197   000292                     I2C1ADR2        equ	658	;# 
 17198   000293                     I2C1ADR3        equ	659	;# 
 17199   000294                     I2C1CON0        equ	660	;# 
 17200   000295                     I2C1CON1        equ	661	;# 
 17201   000296                     I2C1CON2        equ	662	;# 
 17202   000297                     I2C1ERR         equ	663	;# 
 17203   000298                     I2C1STAT0       equ	664	;# 
 17204   000299                     I2C1STAT1       equ	665	;# 
 17205   00029A                     I2C1PIR         equ	666	;# 
 17206   00029B                     I2C1PIE         equ	667	;# 
 17207   00029C                     I2C1BTO         equ	668	;# 
 17208   00029D                     I2C1BAUD        equ	669	;# 
 17209   00029E                     I2C1CLK         equ	670	;# 
 17210   00029F                     I2C1BTOC        equ	671	;# 
 17211   0002A1                     U1RXB           equ	673	;# 
 17212   0002A1                     U1RXBL          equ	673	;# 
 17213   0002A2                     U1RXCHK         equ	674	;# 
 17214   0002A3                     U1TXB           equ	675	;# 
 17215   0002A3                     U1TXBL          equ	675	;# 
 17216   0002A4                     U1TXCHK         equ	676	;# 
 17217   0002A5                     U1P1            equ	677	;# 
 17218   0002A5                     U1P1L           equ	677	;# 
 17219   0002A6                     U1P1H           equ	678	;# 
 17220   0002A7                     U1P2            equ	679	;# 
 17221   0002A7                     U1P2L           equ	679	;# 
 17222   0002A8                     U1P2H           equ	680	;# 
 17223   0002A9                     U1P3            equ	681	;# 
 17224   0002A9                     U1P3L           equ	681	;# 
 17225   0002AA                     U1P3H           equ	682	;# 
 17226   0002AB                     U1CON0          equ	683	;# 
 17227   0002AC                     U1CON1          equ	684	;# 
 17228   0002AD                     U1CON2          equ	685	;# 
 17229   0002AE                     U1BRG           equ	686	;# 
 17230   0002AE                     U1BRGL          equ	686	;# 
 17231   0002AF                     U1BRGH          equ	687	;# 
 17232   0002B0                     U1FIFO          equ	688	;# 
 17233   0002B1                     U1UIR           equ	689	;# 
 17234   0002B2                     U1ERRIR         equ	690	;# 
 17235   0002B3                     U1ERRIE         equ	691	;# 
 17236   0002B4                     U2RXB           equ	692	;# 
 17237   0002B4                     U2RXBL          equ	692	;# 
 17238   0002B5                     U2RXCHK         equ	693	;# 
 17239   0002B6                     U2TXB           equ	694	;# 
 17240   0002B6                     U2TXBL          equ	694	;# 
 17241   0002B7                     U2TXCHK         equ	695	;# 
 17242   0002B8                     U2P1            equ	696	;# 
 17243   0002B8                     U2P1L           equ	696	;# 
 17244   0002B9                     U2P1H           equ	697	;# 
 17245   0002BA                     U2P2            equ	698	;# 
 17246   0002BA                     U2P2L           equ	698	;# 
 17247   0002BB                     U2P2H           equ	699	;# 
 17248   0002BC                     U2P3            equ	700	;# 
 17249   0002BC                     U2P3L           equ	700	;# 
 17250   0002BD                     U2P3H           equ	701	;# 
 17251   0002BE                     U2CON0          equ	702	;# 
 17252   0002BF                     U2CON1          equ	703	;# 
 17253   0002C0                     U2CON2          equ	704	;# 
 17254   0002C1                     U2BRG           equ	705	;# 
 17255   0002C1                     U2BRGL          equ	705	;# 
 17256   0002C2                     U2BRGH          equ	706	;# 
 17257   0002C3                     U2FIFO          equ	707	;# 
 17258   0002C4                     U2UIR           equ	708	;# 
 17259   0002C5                     U2ERRIR         equ	709	;# 
 17260   0002C6                     U2ERRIE         equ	710	;# 
 17261   0002C7                     U3RXB           equ	711	;# 
 17262   0002C7                     U3RXBL          equ	711	;# 
 17263   0002C9                     U3TXB           equ	713	;# 
 17264   0002C9                     U3TXBL          equ	713	;# 
 17265   0002CB                     U3P1            equ	715	;# 
 17266   0002CB                     U3P1L           equ	715	;# 
 17267   0002CD                     U3P2            equ	717	;# 
 17268   0002CD                     U3P2L           equ	717	;# 
 17269   0002CF                     U3P3            equ	719	;# 
 17270   0002CF                     U3P3L           equ	719	;# 
 17271   0002D1                     U3CON0          equ	721	;# 
 17272   0002D2                     U3CON1          equ	722	;# 
 17273   0002D3                     U3CON2          equ	723	;# 
 17274   0002D4                     U3BRG           equ	724	;# 
 17275   0002D4                     U3BRGL          equ	724	;# 
 17276   0002D5                     U3BRGH          equ	725	;# 
 17277   0002D6                     U3FIFO          equ	726	;# 
 17278   0002D7                     U3UIR           equ	727	;# 
 17279   0002D8                     U3ERRIR         equ	728	;# 
 17280   0002D9                     U3ERRIE         equ	729	;# 
 17281   0002DA                     U4RXB           equ	730	;# 
 17282   0002DA                     U4RXBL          equ	730	;# 
 17283   0002DC                     U4TXB           equ	732	;# 
 17284   0002DC                     U4TXBL          equ	732	;# 
 17285   0002DE                     U4P1            equ	734	;# 
 17286   0002DE                     U4P1L           equ	734	;# 
 17287   0002E0                     U4P2            equ	736	;# 
 17288   0002E0                     U4P2L           equ	736	;# 
 17289   0002E2                     U4P3            equ	738	;# 
 17290   0002E2                     U4P3L           equ	738	;# 
 17291   0002E4                     U4CON0          equ	740	;# 
 17292   0002E5                     U4CON1          equ	741	;# 
 17293   0002E6                     U4CON2          equ	742	;# 
 17294   0002E7                     U4BRG           equ	743	;# 
 17295   0002E7                     U4BRGL          equ	743	;# 
 17296   0002E8                     U4BRGH          equ	744	;# 
 17297   0002E9                     U4FIFO          equ	745	;# 
 17298   0002EA                     U4UIR           equ	746	;# 
 17299   0002EB                     U4ERRIR         equ	747	;# 
 17300   0002EC                     U4ERRIE         equ	748	;# 
 17301   0002ED                     U5RXB           equ	749	;# 
 17302   0002ED                     U5RXBL          equ	749	;# 
 17303   0002EF                     U5TXB           equ	751	;# 
 17304   0002EF                     U5TXBL          equ	751	;# 
 17305   0002F1                     U5P1            equ	753	;# 
 17306   0002F1                     U5P1L           equ	753	;# 
 17307   0002F3                     U5P2            equ	755	;# 
 17308   0002F3                     U5P2L           equ	755	;# 
 17309   0002F5                     U5P3            equ	757	;# 
 17310   0002F5                     U5P3L           equ	757	;# 
 17311   0002F7                     U5CON0          equ	759	;# 
 17312   0002F8                     U5CON1          equ	760	;# 
 17313   0002F9                     U5CON2          equ	761	;# 
 17314   0002FA                     U5BRG           equ	762	;# 
 17315   0002FA                     U5BRGL          equ	762	;# 
 17316   0002FB                     U5BRGH          equ	763	;# 
 17317   0002FC                     U5FIFO          equ	764	;# 
 17318   0002FD                     U5UIR           equ	765	;# 
 17319   0002FE                     U5ERRIR         equ	766	;# 
 17320   0002FF                     U5ERRIE         equ	767	;# 
 17321   000300                     SMT1TMR         equ	768	;# 
 17322   000300                     SMT1TMRL        equ	768	;# 
 17323   000301                     SMT1TMRH        equ	769	;# 
 17324   000302                     SMT1TMRU        equ	770	;# 
 17325   000303                     SMT1CPR         equ	771	;# 
 17326   000303                     SMT1CPRL        equ	771	;# 
 17327   000304                     SMT1CPRH        equ	772	;# 
 17328   000305                     SMT1CPRU        equ	773	;# 
 17329   000306                     SMT1CPW         equ	774	;# 
 17330   000306                     SMT1CPWL        equ	774	;# 
 17331   000307                     SMT1CPWH        equ	775	;# 
 17332   000308                     SMT1CPWU        equ	776	;# 
 17333   000309                     SMT1PR          equ	777	;# 
 17334   000309                     SMT1PRL         equ	777	;# 
 17335   00030A                     SMT1PRH         equ	778	;# 
 17336   00030B                     SMT1PRU         equ	779	;# 
 17337   00030C                     SMT1CON0        equ	780	;# 
 17338   00030D                     SMT1CON1        equ	781	;# 
 17339   00030E                     SMT1STAT        equ	782	;# 
 17340   00030F                     SMT1CLK         equ	783	;# 
 17341   000310                     SMT1SIG         equ	784	;# 
 17342   000311                     SMT1WIN         equ	785	;# 
 17343   000318                     TMR0L           equ	792	;# 
 17344   000318                     TMR0            equ	792	;# 
 17345   000319                     TMR0H           equ	793	;# 
 17346   000319                     PR0             equ	793	;# 
 17347   00031A                     T0CON0          equ	794	;# 
 17348   00031B                     T0CON1          equ	795	;# 
 17349   00031C                     TMR1            equ	796	;# 
 17350   00031C                     TMR1L           equ	796	;# 
 17351   00031D                     TMR1H           equ	797	;# 
 17352   00031E                     T1CON           equ	798	;# 
 17353   00031E                     TMR1CON         equ	798	;# 
 17354   00031F                     T1GCON          equ	799	;# 
 17355   00031F                     TMR1GCON        equ	799	;# 
 17356   000320                     T1GATE          equ	800	;# 
 17357   000320                     TMR1GATE        equ	800	;# 
 17358   000321                     T1CLK           equ	801	;# 
 17359   000321                     TMR1CLK         equ	801	;# 
 17360   000321                     PR1             equ	801	;# 
 17361   000322                     T2TMR           equ	802	;# 
 17362   000322                     TMR2            equ	802	;# 
 17363   000323                     T2PR            equ	803	;# 
 17364   000323                     PR2             equ	803	;# 
 17365   000324                     T2CON           equ	804	;# 
 17366   000325                     T2HLT           equ	805	;# 
 17367   000326                     T2CLKCON        equ	806	;# 
 17368   000326                     T2CLK           equ	806	;# 
 17369   000327                     T2RST           equ	807	;# 
 17370   000328                     TMR3            equ	808	;# 
 17371   000328                     TMR3L           equ	808	;# 
 17372   000329                     TMR3H           equ	809	;# 
 17373   00032A                     T3CON           equ	810	;# 
 17374   00032A                     TMR3CON         equ	810	;# 
 17375   00032B                     T3GCON          equ	811	;# 
 17376   00032B                     TMR3GCON        equ	811	;# 
 17377   00032C                     T3GATE          equ	812	;# 
 17378   00032C                     TMR3GATE        equ	812	;# 
 17379   00032D                     T3CLK           equ	813	;# 
 17380   00032D                     TMR3CLK         equ	813	;# 
 17381   00032D                     PR3             equ	813	;# 
 17382   00032E                     T4TMR           equ	814	;# 
 17383   00032E                     TMR4            equ	814	;# 
 17384   00032F                     T4PR            equ	815	;# 
 17385   00032F                     PR4             equ	815	;# 
 17386   000330                     T4CON           equ	816	;# 
 17387   000331                     T4HLT           equ	817	;# 
 17388   000332                     T4CLKCON        equ	818	;# 
 17389   000332                     T4CLK           equ	818	;# 
 17390   000333                     T4RST           equ	819	;# 
 17391   000334                     TMR5            equ	820	;# 
 17392   000334                     TMR5L           equ	820	;# 
 17393   000335                     TMR5H           equ	821	;# 
 17394   000336                     T5CON           equ	822	;# 
 17395   000336                     TMR5CON         equ	822	;# 
 17396   000337                     T5GCON          equ	823	;# 
 17397   000337                     TMR5GCON        equ	823	;# 
 17398   000338                     T5GATE          equ	824	;# 
 17399   000338                     TMR5GATE        equ	824	;# 
 17400   000339                     T5CLK           equ	825	;# 
 17401   000339                     TMR5CLK         equ	825	;# 
 17402   000339                     PR5             equ	825	;# 
 17403   00033A                     T6TMR           equ	826	;# 
 17404   00033A                     TMR6            equ	826	;# 
 17405   00033B                     T6PR            equ	827	;# 
 17406   00033B                     PR6             equ	827	;# 
 17407   00033C                     T6CON           equ	828	;# 
 17408   00033D                     T6HLT           equ	829	;# 
 17409   00033E                     T6CLKCON        equ	830	;# 
 17410   00033E                     T6CLK           equ	830	;# 
 17411   00033F                     T6RST           equ	831	;# 
 17412   000340                     CCPR1           equ	832	;# 
 17413   000340                     CCPR1L          equ	832	;# 
 17414   000341                     CCPR1H          equ	833	;# 
 17415   000342                     CCP1CON         equ	834	;# 
 17416   000343                     CCP1CAP         equ	835	;# 
 17417   000344                     CCPR2           equ	836	;# 
 17418   000344                     CCPR2L          equ	836	;# 
 17419   000345                     CCPR2H          equ	837	;# 
 17420   000346                     CCP2CON         equ	838	;# 
 17421   000347                     CCP2CAP         equ	839	;# 
 17422   000348                     CCPR3           equ	840	;# 
 17423   000348                     CCPR3L          equ	840	;# 
 17424   000349                     CCPR3H          equ	841	;# 
 17425   00034A                     CCP3CON         equ	842	;# 
 17426   00034B                     CCP3CAP         equ	843	;# 
 17427   00034C                     CCPTMRS0        equ	844	;# 
 17428   00034F                     CRCDATA         equ	847	;# 
 17429   00034F                     CRCDATAL        equ	847	;# 
 17430   000350                     CRCDATAH        equ	848	;# 
 17431   000351                     CRCDATAU        equ	849	;# 
 17432   000352                     CRCDATAT        equ	850	;# 
 17433   000353                     CRCOUT          equ	851	;# 
 17434   000353                     CRCSHFT         equ	851	;# 
 17435   000353                     CRCXOR          equ	851	;# 
 17436   000353                     CRCOUTL         equ	851	;# 
 17437   000353                     CRCSHFTL        equ	851	;# 
 17438   000353                     CRCSHIFTL       equ	851	;# 
 17439   000353                     CRCXORL         equ	851	;# 
 17440   000354                     CRCOUTH         equ	852	;# 
 17441   000354                     CRCSHFTH        equ	852	;# 
 17442   000354                     CRCSHIFTH       equ	852	;# 
 17443   000354                     CRCXORH         equ	852	;# 
 17444   000355                     CRCOUTU         equ	853	;# 
 17445   000355                     CRCSHFTU        equ	853	;# 
 17446   000355                     CRCSHIFTU       equ	853	;# 
 17447   000355                     CRCXORU         equ	853	;# 
 17448   000356                     CRCOUTT         equ	854	;# 
 17449   000356                     CRCSHFTT        equ	854	;# 
 17450   000356                     CRCSHIFTT       equ	854	;# 
 17451   000356                     CRCXORT         equ	854	;# 
 17452   000357                     CRCCON0         equ	855	;# 
 17453   000358                     CRCCON1         equ	856	;# 
 17454   000359                     CRCCON2         equ	857	;# 
 17455   00035A                     SCANLADR        equ	858	;# 
 17456   00035A                     SCANLADRL       equ	858	;# 
 17457   00035B                     SCANLADRH       equ	859	;# 
 17458   00035C                     SCANLADRU       equ	860	;# 
 17459   00035D                     SCANHADR        equ	861	;# 
 17460   00035D                     SCANHADRL       equ	861	;# 
 17461   00035E                     SCANHADRH       equ	862	;# 
 17462   00035F                     SCANHADRU       equ	863	;# 
 17463   000360                     SCANCON0        equ	864	;# 
 17464   000361                     SCANTRIG        equ	865	;# 
 17465   000362                     IPR0            equ	866	;# 
 17466   000363                     IPR1            equ	867	;# 
 17467   000364                     IPR2            equ	868	;# 
 17468   000365                     IPR3            equ	869	;# 
 17469   000366                     IPR4            equ	870	;# 
 17470   000367                     IPR5            equ	871	;# 
 17471   000368                     IPR6            equ	872	;# 
 17472   000369                     IPR7            equ	873	;# 
 17473   00036A                     IPR8            equ	874	;# 
 17474   00036B                     IPR9            equ	875	;# 
 17475   00036C                     IPR10           equ	876	;# 
 17476   00036D                     IPR11           equ	877	;# 
 17477   00036E                     IPR12           equ	878	;# 
 17478   00036F                     IPR13           equ	879	;# 
 17479   000370                     IPR14           equ	880	;# 
 17480   000371                     IPR15           equ	881	;# 
 17481   000373                     STATUS_CSHAD    equ	883	;# 
 17482   000374                     WREG_CSHAD      equ	884	;# 
 17483   000375                     BSR_CSHAD       equ	885	;# 
 17484   000376                     SHADCON         equ	886	;# 
 17485   000377                     STATUS_SHAD     equ	887	;# 
 17486   000378                     WREG_SHAD       equ	888	;# 
 17487   000379                     BSR_SHAD        equ	889	;# 
 17488   00037A                     PCLATH_SHAD     equ	890	;# 
 17489   00037B                     PCLATU_SHAD     equ	891	;# 
 17490   00037C                     FSR0SH          equ	892	;# 
 17491   00037C                     FSR0L_SHAD      equ	892	;# 
 17492   00037D                     FSR0H_SHAD      equ	893	;# 
 17493   00037E                     FSR1SH          equ	894	;# 
 17494   00037E                     FSR1L_SHAD      equ	894	;# 
 17495   00037F                     FSR1H_SHAD      equ	895	;# 
 17496   000380                     FSR2SH          equ	896	;# 
 17497   000380                     FSR2L_SHAD      equ	896	;# 
 17498   000381                     FSR2H_SHAD      equ	897	;# 
 17499   000382                     PRODSH          equ	898	;# 
 17500   000382                     PRODL_SHAD      equ	898	;# 
 17501   000383                     PRODH_SHAD      equ	899	;# 
 17502   000387                     TU16ACON0       equ	903	;# 
 17503   000388                     TU16ACON1       equ	904	;# 
 17504   000389                     TU16AHLT        equ	905	;# 
 17505   00038A                     TU16APS         equ	906	;# 
 17506   00038B                     TU16ATMR        equ	907	;# 
 17507   00038B                     TU16ACR         equ	907	;# 
 17508   00038B                     TU16ATMRL       equ	907	;# 
 17509   00038B                     TU16ACRL        equ	907	;# 
 17510   00038C                     TU16ATMRH       equ	908	;# 
 17511   00038C                     TU16ACRH        equ	908	;# 
 17512   00038D                     TU16APR         equ	909	;# 
 17513   00038D                     TU16APRL        equ	909	;# 
 17514   00038E                     TU16APRH        equ	910	;# 
 17515   00038F                     TU16ACLK        equ	911	;# 
 17516   000390                     TU16AERS        equ	912	;# 
 17517   000393                     TU16BCON0       equ	915	;# 
 17518   000394                     TU16BCON1       equ	916	;# 
 17519   000395                     TU16BHLT        equ	917	;# 
 17520   000396                     TU16BPS         equ	918	;# 
 17521   000397                     TU16BTMR        equ	919	;# 
 17522   000397                     TU16BCR         equ	919	;# 
 17523   000397                     TU16BTMRL       equ	919	;# 
 17524   000397                     TU16BCRL        equ	919	;# 
 17525   000398                     TU16BTMRH       equ	920	;# 
 17526   000398                     TU16BCRH        equ	920	;# 
 17527   000399                     TU16BPR         equ	921	;# 
 17528   000399                     TU16BPRL        equ	921	;# 
 17529   00039A                     TU16BPRH        equ	922	;# 
 17530   00039B                     TU16BCLK        equ	923	;# 
 17531   00039C                     TU16BERS        equ	924	;# 
 17532   0003BB                     TUCHAIN         equ	955	;# 
 17533   0003BC                     CWG1CLK         equ	956	;# 
 17534   0003BC                     CWG1CLKCON      equ	956	;# 
 17535   0003BD                     CWG1ISM         equ	957	;# 
 17536   0003BE                     CWG1DBR         equ	958	;# 
 17537   0003BF                     CWG1DBF         equ	959	;# 
 17538   0003C0                     CWG1CON0        equ	960	;# 
 17539   0003C1                     CWG1CON1        equ	961	;# 
 17540   0003C2                     CWG1AS0         equ	962	;# 
 17541   0003C3                     CWG1AS1         equ	963	;# 
 17542   0003C4                     CWG1STR         equ	964	;# 
 17543   0003C5                     CWG2CLK         equ	965	;# 
 17544   0003C5                     CWG2CLKCON      equ	965	;# 
 17545   0003C6                     CWG2ISM         equ	966	;# 
 17546   0003C7                     CWG2DBR         equ	967	;# 
 17547   0003C8                     CWG2DBF         equ	968	;# 
 17548   0003C9                     CWG2CON0        equ	969	;# 
 17549   0003CA                     CWG2CON1        equ	970	;# 
 17550   0003CB                     CWG2AS0         equ	971	;# 
 17551   0003CC                     CWG2AS1         equ	972	;# 
 17552   0003CD                     CWG2STR         equ	973	;# 
 17553   0003CE                     CWG3CLK         equ	974	;# 
 17554   0003CE                     CWG3CLKCON      equ	974	;# 
 17555   0003CF                     CWG3ISM         equ	975	;# 
 17556   0003D0                     CWG3DBR         equ	976	;# 
 17557   0003D1                     CWG3DBF         equ	977	;# 
 17558   0003D2                     CWG3CON0        equ	978	;# 
 17559   0003D3                     CWG3CON1        equ	979	;# 
 17560   0003D4                     CWG3AS0         equ	980	;# 
 17561   0003D5                     CWG3AS1         equ	981	;# 
 17562   0003D6                     CWG3STR         equ	982	;# 
 17563   0003D7                     FVRCON          equ	983	;# 
 17564   0003D8                     ADCPCON         equ	984	;# 
 17565   0003D8                     ADCP            equ	984	;# 
 17566   0003D9                     ADLTH           equ	985	;# 
 17567   0003D9                     ADLTHL          equ	985	;# 
 17568   0003DA                     ADLTHH          equ	986	;# 
 17569   0003DB                     ADUTH           equ	987	;# 
 17570   0003DB                     ADUTHL          equ	987	;# 
 17571   0003DC                     ADUTHH          equ	988	;# 
 17572   0003DD                     ADERR           equ	989	;# 
 17573   0003DD                     ADERRL          equ	989	;# 
 17574   0003DE                     ADERRH          equ	990	;# 
 17575   0003DF                     ADSTPT          equ	991	;# 
 17576   0003DF                     ADSTPTL         equ	991	;# 
 17577   0003E0                     ADSTPTH         equ	992	;# 
 17578   0003E1                     ADFLTR          equ	993	;# 
 17579   0003E1                     ADFLTRL         equ	993	;# 
 17580   0003E2                     ADFLTRH         equ	994	;# 
 17581   0003E3                     ADACC           equ	995	;# 
 17582   0003E3                     ADACCL          equ	995	;# 
 17583   0003E4                     ADACCH          equ	996	;# 
 17584   0003E5                     ADACCU          equ	997	;# 
 17585   0003E6                     ADCNT           equ	998	;# 
 17586   0003E7                     ADRPT           equ	999	;# 
 17587   0003E8                     ADPREV          equ	1000	;# 
 17588   0003E8                     ADPREVL         equ	1000	;# 
 17589   0003E9                     ADPREVH         equ	1001	;# 
 17590   0003EA                     ADRES           equ	1002	;# 
 17591   0003EA                     ADRESL          equ	1002	;# 
 17592   0003EB                     ADRESH          equ	1003	;# 
 17593   0003EC                     ADPCH           equ	1004	;# 
 17594   0003EE                     ADACQ           equ	1006	;# 
 17595   0003EE                     ADACQL          equ	1006	;# 
 17596   0003EF                     ADACQH          equ	1007	;# 
 17597   0003F0                     ADCAP           equ	1008	;# 
 17598   0003F1                     ADPRE           equ	1009	;# 
 17599   0003F1                     ADPREL          equ	1009	;# 
 17600   0003F2                     ADPREH          equ	1010	;# 
 17601   0003F3                     ADCON0          equ	1011	;# 
 17602   0003F4                     ADCON1          equ	1012	;# 
 17603   0003F5                     ADCON2          equ	1013	;# 
 17604   0003F6                     ADCON3          equ	1014	;# 
 17605   0003F7                     ADSTAT          equ	1015	;# 
 17606   0003F8                     ADREF           equ	1016	;# 
 17607   0003F9                     ADACT           equ	1017	;# 
 17608   0003FA                     ADCLK           equ	1018	;# 
 17609   0003FB                     ADCTX           equ	1019	;# 
 17610   0003FC                     ADCSEL1         equ	1020	;# 
 17611   0003FD                     ADCSEL2         equ	1021	;# 
 17612   0003FE                     ADCSEL3         equ	1022	;# 
 17613   0003FF                     ADCSEL4         equ	1023	;# 
 17614   000400                     ANSELA          equ	1024	;# 
 17615   000401                     WPUA            equ	1025	;# 
 17616   000402                     ODCONA          equ	1026	;# 
 17617   000403                     SLRCONA         equ	1027	;# 
 17618   000404                     INLVLA          equ	1028	;# 
 17619   000405                     IOCAP           equ	1029	;# 
 17620   000406                     IOCAN           equ	1030	;# 
 17621   000407                     IOCAF           equ	1031	;# 
 17622   000408                     ANSELB          equ	1032	;# 
 17623   000409                     WPUB            equ	1033	;# 
 17624   00040A                     ODCONB          equ	1034	;# 
 17625   00040B                     SLRCONB         equ	1035	;# 
 17626   00040C                     INLVLB          equ	1036	;# 
 17627   00040D                     IOCBP           equ	1037	;# 
 17628   00040E                     IOCBN           equ	1038	;# 
 17629   00040F                     IOCBF           equ	1039	;# 
 17630   000410                     ANSELC          equ	1040	;# 
 17631   000411                     WPUC            equ	1041	;# 
 17632   000412                     ODCONC          equ	1042	;# 
 17633   000413                     SLRCONC         equ	1043	;# 
 17634   000414                     INLVLC          equ	1044	;# 
 17635   000415                     IOCCP           equ	1045	;# 
 17636   000416                     IOCCN           equ	1046	;# 
 17637   000417                     IOCCF           equ	1047	;# 
 17638   000421                     WPUE            equ	1057	;# 
 17639   000424                     INLVLE          equ	1060	;# 
 17640   000425                     IOCEP           equ	1061	;# 
 17641   000426                     IOCEN           equ	1062	;# 
 17642   000427                     IOCEF           equ	1063	;# 
 17643   000440                     NCO1ACC         equ	1088	;# 
 17644   000440                     NCO1ACCL        equ	1088	;# 
 17645   000441                     NCO1ACCH        equ	1089	;# 
 17646   000442                     NCO1ACCU        equ	1090	;# 
 17647   000443                     NCO1INC         equ	1091	;# 
 17648   000443                     NCO1INCL        equ	1091	;# 
 17649   000444                     NCO1INCH        equ	1092	;# 
 17650   000445                     NCO1INCU        equ	1093	;# 
 17651   000446                     NCO1CON         equ	1094	;# 
 17652   000447                     NCO1CLK         equ	1095	;# 
 17653   000448                     NCO2ACC         equ	1096	;# 
 17654   000448                     NCO2ACCL        equ	1096	;# 
 17655   000449                     NCO2ACCH        equ	1097	;# 
 17656   00044A                     NCO2ACCU        equ	1098	;# 
 17657   00044B                     NCO2INC         equ	1099	;# 
 17658   00044B                     NCO2INCL        equ	1099	;# 
 17659   00044C                     NCO2INCH        equ	1100	;# 
 17660   00044D                     NCO2INCU        equ	1101	;# 
 17661   00044E                     NCO2CON         equ	1102	;# 
 17662   00044F                     NCO2CLK         equ	1103	;# 
 17663   000450                     NCO3ACC         equ	1104	;# 
 17664   000450                     NCO3ACCL        equ	1104	;# 
 17665   000451                     NCO3ACCH        equ	1105	;# 
 17666   000452                     NCO3ACCU        equ	1106	;# 
 17667   000453                     NCO3INC         equ	1107	;# 
 17668   000453                     NCO3INCL        equ	1107	;# 
 17669   000454                     NCO3INCH        equ	1108	;# 
 17670   000455                     NCO3INCU        equ	1109	;# 
 17671   000456                     NCO3CON         equ	1110	;# 
 17672   000457                     NCO3CLK         equ	1111	;# 
 17673   000458                     FSCMCON         equ	1112	;# 
 17674   000459                     IVTLOCK         equ	1113	;# 
 17675   00045A                     IVTAD           equ	1114	;# 
 17676   00045A                     IVTADL          equ	1114	;# 
 17677   00045B                     IVTADH          equ	1115	;# 
 17678   00045C                     IVTADU          equ	1116	;# 
 17679   00045D                     IVTBASE         equ	1117	;# 
 17680   00045D                     IVTBASEL        equ	1117	;# 
 17681   00045E                     IVTBASEH        equ	1118	;# 
 17682   00045F                     IVTBASEU        equ	1119	;# 
 17683   000460                     PWM1ERS         equ	1120	;# 
 17684   000461                     PWM1CLK         equ	1121	;# 
 17685   000462                     PWM1LDS         equ	1122	;# 
 17686   000463                     PWM1PR          equ	1123	;# 
 17687   000463                     PWM1PRL         equ	1123	;# 
 17688   000464                     PWM1PRH         equ	1124	;# 
 17689   000465                     PWM1CPRE        equ	1125	;# 
 17690   000466                     PWM1PIPOS       equ	1126	;# 
 17691   000467                     PWM1GIR         equ	1127	;# 
 17692   000468                     PWM1GIE         equ	1128	;# 
 17693   000469                     PWM1CON         equ	1129	;# 
 17694   00046A                     PWM1S1CFG       equ	1130	;# 
 17695   00046B                     PWM1S1P1        equ	1131	;# 
 17696   00046B                     PWM1S1P1L       equ	1131	;# 
 17697   00046C                     PWM1S1P1H       equ	1132	;# 
 17698   00046D                     PWM1S1P2        equ	1133	;# 
 17699   00046D                     PWM1S1P2L       equ	1133	;# 
 17700   00046E                     PWM1S1P2H       equ	1134	;# 
 17701   00046F                     PWM2ERS         equ	1135	;# 
 17702   000470                     PWM2CLK         equ	1136	;# 
 17703   000471                     PWM2LDS         equ	1137	;# 
 17704   000472                     PWM2PR          equ	1138	;# 
 17705   000472                     PWM2PRL         equ	1138	;# 
 17706   000473                     PWM2PRH         equ	1139	;# 
 17707   000474                     PWM2CPRE        equ	1140	;# 
 17708   000475                     PWM2PIPOS       equ	1141	;# 
 17709   000476                     PWM2GIR         equ	1142	;# 
 17710   000477                     PWM2GIE         equ	1143	;# 
 17711   000478                     PWM2CON         equ	1144	;# 
 17712   000479                     PWM2S1CFG       equ	1145	;# 
 17713   00047A                     PWM2S1P1        equ	1146	;# 
 17714   00047A                     PWM2S1P1L       equ	1146	;# 
 17715   00047B                     PWM2S1P1H       equ	1147	;# 
 17716   00047C                     PWM2S1P2        equ	1148	;# 
 17717   00047C                     PWM2S1P2L       equ	1148	;# 
 17718   00047D                     PWM2S1P2H       equ	1149	;# 
 17719   00047E                     PWM3ERS         equ	1150	;# 
 17720   00047F                     PWM3CLK         equ	1151	;# 
 17721   000480                     PWM3LDS         equ	1152	;# 
 17722   000481                     PWM3PR          equ	1153	;# 
 17723   000481                     PWM3PRL         equ	1153	;# 
 17724   000482                     PWM3PRH         equ	1154	;# 
 17725   000483                     PWM3CPRE        equ	1155	;# 
 17726   000484                     PWM3PIPOS       equ	1156	;# 
 17727   000485                     PWM3GIR         equ	1157	;# 
 17728   000486                     PWM3GIE         equ	1158	;# 
 17729   000487                     PWM3CON         equ	1159	;# 
 17730   000488                     PWM3S1CFG       equ	1160	;# 
 17731   000489                     PWM3S1P1        equ	1161	;# 
 17732   000489                     PWM3S1P1L       equ	1161	;# 
 17733   00048A                     PWM3S1P1H       equ	1162	;# 
 17734   00048B                     PWM3S1P2        equ	1163	;# 
 17735   00048B                     PWM3S1P2L       equ	1163	;# 
 17736   00048C                     PWM3S1P2H       equ	1164	;# 
 17737   00048D                     PWM4ERS         equ	1165	;# 
 17738   00048E                     PWM4CLK         equ	1166	;# 
 17739   00048F                     PWM4LDS         equ	1167	;# 
 17740   000490                     PWM4PR          equ	1168	;# 
 17741   000490                     PWM4PRL         equ	1168	;# 
 17742   000491                     PWM4PRH         equ	1169	;# 
 17743   000492                     PWM4CPRE        equ	1170	;# 
 17744   000493                     PWM4PIPOS       equ	1171	;# 
 17745   000494                     PWM4GIR         equ	1172	;# 
 17746   000495                     PWM4GIE         equ	1173	;# 
 17747   000496                     PWM4CON         equ	1174	;# 
 17748   000497                     PWM4S1CFG       equ	1175	;# 
 17749   000498                     PWM4S1P1        equ	1176	;# 
 17750   000498                     PWM4S1P1L       equ	1176	;# 
 17751   000499                     PWM4S1P1H       equ	1177	;# 
 17752   00049A                     PWM4S1P2        equ	1178	;# 
 17753   00049A                     PWM4S1P2L       equ	1178	;# 
 17754   00049B                     PWM4S1P2H       equ	1179	;# 
 17755   00049C                     PWMLOAD         equ	1180	;# 
 17756   00049D                     PWMEN           equ	1181	;# 
 17757   00049E                     PIE0            equ	1182	;# 
 17758   00049F                     PIE1            equ	1183	;# 
 17759   0004A0                     PIE2            equ	1184	;# 
 17760   0004A1                     PIE3            equ	1185	;# 
 17761   0004A2                     PIE4            equ	1186	;# 
 17762   0004A3                     PIE5            equ	1187	;# 
 17763   0004A4                     PIE6            equ	1188	;# 
 17764   0004A5                     PIE7            equ	1189	;# 
 17765   0004A6                     PIE8            equ	1190	;# 
 17766   0004A7                     PIE9            equ	1191	;# 
 17767   0004A8                     PIE10           equ	1192	;# 
 17768   0004A9                     PIE11           equ	1193	;# 
 17769   0004AA                     PIE12           equ	1194	;# 
 17770   0004AB                     PIE13           equ	1195	;# 
 17771   0004AC                     PIE14           equ	1196	;# 
 17772   0004AD                     PIE15           equ	1197	;# 
 17773   0004AE                     PIR0            equ	1198	;# 
 17774   0004AF                     PIR1            equ	1199	;# 
 17775   0004B0                     PIR2            equ	1200	;# 
 17776   0004B1                     PIR3            equ	1201	;# 
 17777   0004B2                     PIR4            equ	1202	;# 
 17778   0004B3                     PIR5            equ	1203	;# 
 17779   0004B4                     PIR6            equ	1204	;# 
 17780   0004B5                     PIR7            equ	1205	;# 
 17781   0004B6                     PIR8            equ	1206	;# 
 17782   0004B7                     PIR9            equ	1207	;# 
 17783   0004B8                     PIR10           equ	1208	;# 
 17784   0004B9                     PIR11           equ	1209	;# 
 17785   0004BA                     PIR12           equ	1210	;# 
 17786   0004BB                     PIR13           equ	1211	;# 
 17787   0004BC                     PIR14           equ	1212	;# 
 17788   0004BD                     PIR15           equ	1213	;# 
 17789   0004BE                     LATA            equ	1214	;# 
 17790   0004BF                     LATB            equ	1215	;# 
 17791   0004C0                     LATC            equ	1216	;# 
 17792   0004C6                     TRISA           equ	1222	;# 
 17793   0004C7                     TRISB           equ	1223	;# 
 17794   0004C8                     TRISC           equ	1224	;# 
 17795   0004CA                     TRISE           equ	1226	;# 
 17796   0004CE                     PORTA           equ	1230	;# 
 17797   0004CF                     PORTB           equ	1231	;# 
 17798   0004D0                     PORTC           equ	1232	;# 
 17799   0004D2                     PORTE           equ	1234	;# 
 17800   0004D6                     INTCON0         equ	1238	;# 
 17801   0004D7                     INTCON1         equ	1239	;# 
 17802   0004D8                     STATUS          equ	1240	;# 
 17803   0004D9                     FSR2            equ	1241	;# 
 17804   0004D9                     FSR2L           equ	1241	;# 
 17805   0004DA                     FSR2H           equ	1242	;# 
 17806   0004DB                     PLUSW2          equ	1243	;# 
 17807   0004DC                     PREINC2         equ	1244	;# 
 17808   0004DD                     POSTDEC2        equ	1245	;# 
 17809   0004DE                     POSTINC2        equ	1246	;# 
 17810   0004DF                     INDF2           equ	1247	;# 
 17811   0004E0                     BSR             equ	1248	;# 
 17812   0004E1                     FSR1            equ	1249	;# 
 17813   0004E1                     FSR1L           equ	1249	;# 
 17814   0004E2                     FSR1H           equ	1250	;# 
 17815   0004E3                     PLUSW1          equ	1251	;# 
 17816   0004E4                     PREINC1         equ	1252	;# 
 17817   0004E5                     POSTDEC1        equ	1253	;# 
 17818   0004E6                     POSTINC1        equ	1254	;# 
 17819   0004E7                     INDF1           equ	1255	;# 
 17820   0004E8                     WREG            equ	1256	;# 
 17821   0004E9                     FSR0            equ	1257	;# 
 17822   0004E9                     FSR0L           equ	1257	;# 
 17823   0004EA                     FSR0H           equ	1258	;# 
 17824   0004EB                     PLUSW0          equ	1259	;# 
 17825   0004EC                     PREINC0         equ	1260	;# 
 17826   0004ED                     POSTDEC0        equ	1261	;# 
 17827   0004EE                     POSTINC0        equ	1262	;# 
 17828   0004EF                     INDF0           equ	1263	;# 
 17829   0004F0                     PCON0           equ	1264	;# 
 17830   0004F1                     PCON1           equ	1265	;# 
 17831   0004F2                     CPUDOZE         equ	1266	;# 
 17832   0004F3                     PROD            equ	1267	;# 
 17833   0004F3                     PRODL           equ	1267	;# 
 17834   0004F4                     PRODH           equ	1268	;# 
 17835   0004F5                     TABLAT          equ	1269	;# 
 17836   0004F6                     TBLPTR          equ	1270	;# 
 17837   0004F6                     TBLPTRL         equ	1270	;# 
 17838   0004F7                     TBLPTRH         equ	1271	;# 
 17839   0004F8                     TBLPTRU         equ	1272	;# 
 17840   0004F9                     PCLAT           equ	1273	;# 
 17841   0004F9                     PCL             equ	1273	;# 
 17842   0004FA                     PCLATH          equ	1274	;# 
 17843   0004FB                     PCLATU          equ	1275	;# 
 17844   0004FC                     STKPTR          equ	1276	;# 
 17845   0004FD                     TOS             equ	1277	;# 
 17846   0004FD                     TOSL            equ	1277	;# 
 17847   0004FE                     TOSH            equ	1278	;# 
 17848   0004FF                     TOSU            equ	1279	;# 
 17849   000038                     BOOTREG         equ	56	;# 
 17850   000039                     CLKRCON         equ	57	;# 
 17851   00003A                     CLKRCLK         equ	58	;# 
 17852   000040                     NVMCON0         equ	64	;# 
 17853   000041                     NVMCON1         equ	65	;# 
 17854   000042                     NVMLOCK         equ	66	;# 
 17855   000043                     NVMADR          equ	67	;# 
 17856   000043                     NVMADRL         equ	67	;# 
 17857   000044                     NVMADRH         equ	68	;# 
 17858   000045                     NVMADRU         equ	69	;# 
 17859   000046                     NVMDAT          equ	70	;# 
 17860   000046                     NVMDATL         equ	70	;# 
 17861   000047                     NVMDATH         equ	71	;# 
 17862   000048                     VREGCON         equ	72	;# 
 17863   000049                     BORCON          equ	73	;# 
 17864   00004A                     HLVDCON0        equ	74	;# 
 17865   00004B                     HLVDCON1        equ	75	;# 
 17866   00004C                     ZCDCON          equ	76	;# 
 17867   000060                     PMD0            equ	96	;# 
 17868   000061                     PMD1            equ	97	;# 
 17869   000062                     PMD2            equ	98	;# 
 17870   000063                     PMD3            equ	99	;# 
 17871   000064                     PMD4            equ	100	;# 
 17872   000065                     PMD5            equ	101	;# 
 17873   000066                     PMD6            equ	102	;# 
 17874   000067                     PMD7            equ	103	;# 
 17875   000068                     PMD8            equ	104	;# 
 17876   00006A                     MD1CON0         equ	106	;# 
 17877   00006B                     MD1CON1         equ	107	;# 
 17878   00006C                     MD1SRC          equ	108	;# 
 17879   00006D                     MD1CARL         equ	109	;# 
 17880   00006E                     MD1CARH         equ	110	;# 
 17881   00006F                     CMOUT           equ	111	;# 
 17882   000070                     CM1CON0         equ	112	;# 
 17883   000071                     CM1CON1         equ	113	;# 
 17884   000072                     CM1NCH          equ	114	;# 
 17885   000073                     CM1PCH          equ	115	;# 
 17886   000074                     CM2CON0         equ	116	;# 
 17887   000075                     CM2CON1         equ	117	;# 
 17888   000076                     CM2NCH          equ	118	;# 
 17889   000077                     CM2PCH          equ	119	;# 
 17890   000078                     WDTCON0         equ	120	;# 
 17891   000079                     WDTCON1         equ	121	;# 
 17892   00007A                     WDTPSL          equ	122	;# 
 17893   00007B                     WDTPSH          equ	123	;# 
 17894   00007C                     WDTTMR          equ	124	;# 
 17895   00007D                     DAC1DAT         equ	125	;# 
 17896   00007D                     DAC1DATL        equ	125	;# 
 17897   00007F                     DAC1CON         equ	127	;# 
 17898   000080                     SPI1RXB         equ	128	;# 
 17899   000081                     SPI1TXB         equ	129	;# 
 17900   000082                     SPI1TCNT        equ	130	;# 
 17901   000082                     SPI1TCNTL       equ	130	;# 
 17902   000083                     SPI1TCNTH       equ	131	;# 
 17903   000084                     SPI1CON0        equ	132	;# 
 17904   000085                     SPI1CON1        equ	133	;# 
 17905   000086                     SPI1CON2        equ	134	;# 
 17906   000087                     SPI1STATUS      equ	135	;# 
 17907   000088                     SPI1TWIDTH      equ	136	;# 
 17908   000089                     SPI1BAUD        equ	137	;# 
 17909   00008A                     SPI1INTF        equ	138	;# 
 17910   00008B                     SPI1INTE        equ	139	;# 
 17911   00008C                     SPI1CLK         equ	140	;# 
 17912   00008D                     SPI2RXB         equ	141	;# 
 17913   00008E                     SPI2TXB         equ	142	;# 
 17914   00008F                     SPI2TCNT        equ	143	;# 
 17915   00008F                     SPI2TCNTL       equ	143	;# 
 17916   000090                     SPI2TCNTH       equ	144	;# 
 17917   000091                     SPI2CON0        equ	145	;# 
 17918   000092                     SPI2CON1        equ	146	;# 
 17919   000093                     SPI2CON2        equ	147	;# 
 17920   000094                     SPI2STATUS      equ	148	;# 
 17921   000095                     SPI2TWIDTH      equ	149	;# 
 17922   000096                     SPI2BAUD        equ	150	;# 
 17923   000097                     SPI2INTF        equ	151	;# 
 17924   000098                     SPI2INTE        equ	152	;# 
 17925   000099                     SPI2CLK         equ	153	;# 
 17926   0000AC                     ACTCON          equ	172	;# 
 17927   0000AD                     OSCCON1         equ	173	;# 
 17928   0000AE                     OSCCON2         equ	174	;# 
 17929   0000AF                     OSCCON3         equ	175	;# 
 17930   0000B0                     OSCTUNE         equ	176	;# 
 17931   0000B1                     OSCFRQ          equ	177	;# 
 17932   0000B1                     OSCFREQ         equ	177	;# 
 17933   0000B2                     OSCSTAT         equ	178	;# 
 17934   0000B2                     OSCSTAT1        equ	178	;# 
 17935   0000B3                     OSCEN           equ	179	;# 
 17936   0000B4                     PRLOCK          equ	180	;# 
 17937   0000B5                     SCANPR          equ	181	;# 
 17938   0000B6                     DMA1PR          equ	182	;# 
 17939   0000B7                     DMA2PR          equ	183	;# 
 17940   0000B8                     DMA3PR          equ	184	;# 
 17941   0000B9                     DMA4PR          equ	185	;# 
 17942   0000BA                     DMA5PR          equ	186	;# 
 17943   0000BB                     DMA6PR          equ	187	;# 
 17944   0000BC                     DMA7PR          equ	188	;# 
 17945   0000BD                     DMA8PR          equ	189	;# 
 17946   0000BE                     MAINPR          equ	190	;# 
 17947   0000BF                     ISRPR           equ	191	;# 
 17948   0000D4                     CLCDATA         equ	212	;# 
 17949   0000D5                     CLCSELECT       equ	213	;# 
 17950   0000D6                     CLCnCON         equ	214	;# 
 17951   0000D7                     CLCnPOL         equ	215	;# 
 17952   0000D8                     CLCnSEL0        equ	216	;# 
 17953   0000D9                     CLCnSEL1        equ	217	;# 
 17954   0000DA                     CLCnSEL2        equ	218	;# 
 17955   0000DB                     CLCnSEL3        equ	219	;# 
 17956   0000DC                     CLCnGLS0        equ	220	;# 
 17957   0000DD                     CLCnGLS1        equ	221	;# 
 17958   0000DE                     CLCnGLS2        equ	222	;# 
 17959   0000DF                     CLCnGLS3        equ	223	;# 
 17960   0000E8                     DMASELECT       equ	232	;# 
 17961   0000E9                     DMAnBUF         equ	233	;# 
 17962   0000EA                     DMAnDCNT        equ	234	;# 
 17963   0000EA                     DMAnDCNTL       equ	234	;# 
 17964   0000EB                     DMAnDCNTH       equ	235	;# 
 17965   0000EC                     DMAnDPTR        equ	236	;# 
 17966   0000EC                     DMAnDPTRL       equ	236	;# 
 17967   0000ED                     DMAnDPTRH       equ	237	;# 
 17968   0000EE                     DMAnDSZ         equ	238	;# 
 17969   0000EE                     DMAnDSZL        equ	238	;# 
 17970   0000EF                     DMAnDSZH        equ	239	;# 
 17971   0000F0                     DMAnDSA         equ	240	;# 
 17972   0000F0                     DMAnDSAL        equ	240	;# 
 17973   0000F1                     DMAnDSAH        equ	241	;# 
 17974   0000F2                     DMAnSCNT        equ	242	;# 
 17975   0000F2                     DMAnSCNTL       equ	242	;# 
 17976   0000F3                     DMAnSCNTH       equ	243	;# 
 17977   0000F4                     DMAnSPTR        equ	244	;# 
 17978   0000F4                     DMAnSPTRL       equ	244	;# 
 17979   0000F5                     DMAnSPTRH       equ	245	;# 
 17980   0000F6                     DMAnSPTRU       equ	246	;# 
 17981   0000F7                     DMAnSSZ         equ	247	;# 
 17982   0000F7                     DMAnSSZL        equ	247	;# 
 17983   0000F8                     DMAnSSZH        equ	248	;# 
 17984   0000F9                     DMAnSSA         equ	249	;# 
 17985   0000F9                     DMAnSSAL        equ	249	;# 
 17986   0000FA                     DMAnSSAH        equ	250	;# 
 17987   0000FB                     DMAnSSAU        equ	251	;# 
 17988   0000FC                     DMAnCON0        equ	252	;# 
 17989   0000FD                     DMAnCON1        equ	253	;# 
 17990   0000FE                     DMAnAIRQ        equ	254	;# 
 17991   0000FF                     DMAnSIRQ        equ	255	;# 
 17992   000100                     C1CONL          equ	256	;# 
 17993   000101                     C1CONH          equ	257	;# 
 17994   000102                     C1CONU          equ	258	;# 
 17995   000103                     C1CONT          equ	259	;# 
 17996   000104                     C1NBTCFGL       equ	260	;# 
 17997   000105                     C1NBTCFGH       equ	261	;# 
 17998   000106                     C1NBTCFGU       equ	262	;# 
 17999   000107                     C1NBTCFGT       equ	263	;# 
 18000   000108                     C1DBTCFGL       equ	264	;# 
 18001   000109                     C1DBTCFGH       equ	265	;# 
 18002   00010A                     C1DBTCFGU       equ	266	;# 
 18003   00010B                     C1DBTCFGT       equ	267	;# 
 18004   00010C                     C1TDCL          equ	268	;# 
 18005   00010D                     C1TDCH          equ	269	;# 
 18006   00010E                     C1TDCU          equ	270	;# 
 18007   000110                     C1TBC           equ	272	;# 
 18008   000110                     C1TBCL          equ	272	;# 
 18009   000111                     C1TBCH          equ	273	;# 
 18010   000112                     C1TBCU          equ	274	;# 
 18011   000113                     C1TBCT          equ	275	;# 
 18012   000114                     C1TSCONL        equ	276	;# 
 18013   000115                     C1TSCONH        equ	277	;# 
 18014   000116                     C1TSCONU        equ	278	;# 
 18015   000117                     C1TSCONT        equ	279	;# 
 18016   000118                     C1VECL          equ	280	;# 
 18017   000119                     C1VECH          equ	281	;# 
 18018   00011A                     C1VECU          equ	282	;# 
 18019   00011B                     C1VECT          equ	283	;# 
 18020   00011C                     C1INTL          equ	284	;# 
 18021   00011D                     C1INTH          equ	285	;# 
 18022   00011E                     C1INTU          equ	286	;# 
 18023   00011F                     C1INTT          equ	287	;# 
 18024   000120                     C1RXIF          equ	288	;# 
 18025   000120                     C1RXIFL         equ	288	;# 
 18026   000121                     C1RXIFH         equ	289	;# 
 18027   000122                     C1RXIFU         equ	290	;# 
 18028   000123                     C1RXIFT         equ	291	;# 
 18029   000124                     C1TXIF          equ	292	;# 
 18030   000124                     C1TXIFL         equ	292	;# 
 18031   000125                     C1TXIFH         equ	293	;# 
 18032   000126                     C1TXIFU         equ	294	;# 
 18033   000127                     C1TXIFT         equ	295	;# 
 18034   000128                     C1RXOVIF        equ	296	;# 
 18035   000128                     C1RXOVIFL       equ	296	;# 
 18036   000129                     C1RXOVIFH       equ	297	;# 
 18037   00012A                     C1RXOVIFU       equ	298	;# 
 18038   00012B                     C1RXOVIFT       equ	299	;# 
 18039   00012C                     C1TXATIF        equ	300	;# 
 18040   00012C                     C1TXATIFL       equ	300	;# 
 18041   00012D                     C1TXATIFH       equ	301	;# 
 18042   00012E                     C1TXATIFU       equ	302	;# 
 18043   00012F                     C1TXATIFT       equ	303	;# 
 18044   000130                     C1TXREQ         equ	304	;# 
 18045   000130                     C1TXREQL        equ	304	;# 
 18046   000131                     C1TXREQH        equ	305	;# 
 18047   000132                     C1TXREQU        equ	306	;# 
 18048   000133                     C1TXREQT        equ	307	;# 
 18049   000134                     C1TRECL         equ	308	;# 
 18050   000135                     C1TRECH         equ	309	;# 
 18051   000136                     C1TRECU         equ	310	;# 
 18052   000137                     C1TRECT         equ	311	;# 
 18053   000138                     C1BDIAG0L       equ	312	;# 
 18054   000139                     C1BDIAG0H       equ	313	;# 
 18055   00013C                     C1BDIAG1L       equ	316	;# 
 18056   00013D                     C1BDIAG1H       equ	317	;# 
 18057   00013E                     C1BDIAG1U       equ	318	;# 
 18058   00013F                     C1BDIAG1T       equ	319	;# 
 18059   000140                     C1TEFCONL       equ	320	;# 
 18060   000141                     C1TEFCONH       equ	321	;# 
 18061   000142                     C1TEFCONU       equ	322	;# 
 18062   000143                     C1TEFCONT       equ	323	;# 
 18063   000144                     C1TEFSTAL       equ	324	;# 
 18064   000145                     C1TEFSTAH       equ	325	;# 
 18065   000146                     C1TEFSTAU       equ	326	;# 
 18066   000147                     C1TEFSTAT       equ	327	;# 
 18067   000148                     C1TEFUA         equ	328	;# 
 18068   000148                     C1TEFUAL        equ	328	;# 
 18069   000149                     C1TEFUAH        equ	329	;# 
 18070   00014A                     C1TEFUAU        equ	330	;# 
 18071   00014B                     C1TEFUAT        equ	331	;# 
 18072   00014C                     C1FIFOBA        equ	332	;# 
 18073   00014C                     C1FIFOBAL       equ	332	;# 
 18074   00014D                     C1FIFOBAH       equ	333	;# 
 18075   00014E                     C1FIFOBAU       equ	334	;# 
 18076   00014F                     C1FIFOBAT       equ	335	;# 
 18077   000150                     C1TXQCONL       equ	336	;# 
 18078   000151                     C1TXQCONH       equ	337	;# 
 18079   000152                     C1TXQCONU       equ	338	;# 
 18080   000153                     C1TXQCONT       equ	339	;# 
 18081   000154                     C1TXQSTAL       equ	340	;# 
 18082   000155                     C1TXQSTAH       equ	341	;# 
 18083   000156                     C1TXQSTAU       equ	342	;# 
 18084   000157                     C1TXQSTAT       equ	343	;# 
 18085   000158                     C1TXQUA         equ	344	;# 
 18086   000158                     C1TXQUAL        equ	344	;# 
 18087   000159                     C1TXQUAH        equ	345	;# 
 18088   00015A                     C1TXQUAU        equ	346	;# 
 18089   00015B                     C1TXQUAT        equ	347	;# 
 18090   00015C                     C1FIFOCON1      equ	348	;# 
 18091   00015C                     C1FIFOCON1L     equ	348	;# 
 18092   00015D                     C1FIFOCON1H     equ	349	;# 
 18093   00015E                     C1FIFOCON1U     equ	350	;# 
 18094   00015F                     C1FIFOCON1T     equ	351	;# 
 18095   000160                     C1FIFOSTA1      equ	352	;# 
 18096   000160                     C1FIFOSTA1L     equ	352	;# 
 18097   000161                     C1FIFOSTA1H     equ	353	;# 
 18098   000162                     C1FIFOSTA1U     equ	354	;# 
 18099   000163                     C1FIFOSTA1T     equ	355	;# 
 18100   000164                     C1FIFOUA1       equ	356	;# 
 18101   000164                     C1FIFOUA1L      equ	356	;# 
 18102   000165                     C1FIFOUA1H      equ	357	;# 
 18103   000166                     C1FIFOUA1U      equ	358	;# 
 18104   000167                     C1FIFOUA1T      equ	359	;# 
 18105   000168                     C1FIFOCON2      equ	360	;# 
 18106   000168                     C1FIFOCON2L     equ	360	;# 
 18107   000169                     C1FIFOCON2H     equ	361	;# 
 18108   00016A                     C1FIFOCON2U     equ	362	;# 
 18109   00016B                     C1FIFOCON2T     equ	363	;# 
 18110   00016C                     C1FIFOSTA2      equ	364	;# 
 18111   00016C                     C1FIFOSTA2L     equ	364	;# 
 18112   00016D                     C1FIFOSTA2H     equ	365	;# 
 18113   00016E                     C1FIFOSTA2U     equ	366	;# 
 18114   00016F                     C1FIFOSTA2T     equ	367	;# 
 18115   000170                     C1FIFOUA2       equ	368	;# 
 18116   000170                     C1FIFOUA2L      equ	368	;# 
 18117   000171                     C1FIFOUA2H      equ	369	;# 
 18118   000172                     C1FIFOUA2U      equ	370	;# 
 18119   000173                     C1FIFOUA2T      equ	371	;# 
 18120   000174                     C1FIFOCON3      equ	372	;# 
 18121   000174                     C1FIFOCON3L     equ	372	;# 
 18122   000175                     C1FIFOCON3H     equ	373	;# 
 18123   000176                     C1FIFOCON3U     equ	374	;# 
 18124   000177                     C1FIFOCON3T     equ	375	;# 
 18125   000178                     C1FIFOSTA3      equ	376	;# 
 18126   000178                     C1FIFOSTA3L     equ	376	;# 
 18127   000179                     C1FIFOSTA3H     equ	377	;# 
 18128   00017A                     C1FIFOSTA3U     equ	378	;# 
 18129   00017B                     C1FIFOSTA3T     equ	379	;# 
 18130   00017C                     C1FIFOUA3       equ	380	;# 
 18131   00017C                     C1FIFOUA3L      equ	380	;# 
 18132   00017D                     C1FIFOUA3H      equ	381	;# 
 18133   00017E                     C1FIFOUA3U      equ	382	;# 
 18134   00017F                     C1FIFOUA3T      equ	383	;# 
 18135   000180                     C1FLTCON0L      equ	384	;# 
 18136   000181                     C1FLTCON0H      equ	385	;# 
 18137   000182                     C1FLTCON0U      equ	386	;# 
 18138   000183                     C1FLTCON0T      equ	387	;# 
 18139   000184                     C1FLTCON1L      equ	388	;# 
 18140   000185                     C1FLTCON1H      equ	389	;# 
 18141   000186                     C1FLTCON1U      equ	390	;# 
 18142   000187                     C1FLTCON1T      equ	391	;# 
 18143   000188                     C1FLTCON2L      equ	392	;# 
 18144   000189                     C1FLTCON2H      equ	393	;# 
 18145   00018A                     C1FLTCON2U      equ	394	;# 
 18146   00018B                     C1FLTCON2T      equ	395	;# 
 18147   00018C                     C1FLTOBJ0       equ	396	;# 
 18148   00018C                     C1FLTOBJ0L      equ	396	;# 
 18149   00018D                     C1FLTOBJ0H      equ	397	;# 
 18150   00018E                     C1FLTOBJ0U      equ	398	;# 
 18151   00018F                     C1FLTOBJ0T      equ	399	;# 
 18152   000190                     C1MASK0         equ	400	;# 
 18153   000190                     C1MASK0L        equ	400	;# 
 18154   000191                     C1MASK0H        equ	401	;# 
 18155   000192                     C1MASK0U        equ	402	;# 
 18156   000193                     C1MASK0T        equ	403	;# 
 18157   000194                     C1FLTOBJ1       equ	404	;# 
 18158   000194                     C1FLTOBJ1L      equ	404	;# 
 18159   000195                     C1FLTOBJ1H      equ	405	;# 
 18160   000196                     C1FLTOBJ1U      equ	406	;# 
 18161   000197                     C1FLTOBJ1T      equ	407	;# 
 18162   000198                     C1MASK1         equ	408	;# 
 18163   000198                     C1MASK1L        equ	408	;# 
 18164   000199                     C1MASK1H        equ	409	;# 
 18165   00019A                     C1MASK1U        equ	410	;# 
 18166   00019B                     C1MASK1T        equ	411	;# 
 18167   00019C                     C1FLTOBJ2       equ	412	;# 
 18168   00019C                     C1FLTOBJ2L      equ	412	;# 
 18169   00019D                     C1FLTOBJ2H      equ	413	;# 
 18170   00019E                     C1FLTOBJ2U      equ	414	;# 
 18171   00019F                     C1FLTOBJ2T      equ	415	;# 
 18172   0001A0                     C1MASK2         equ	416	;# 
 18173   0001A0                     C1MASK2L        equ	416	;# 
 18174   0001A1                     C1MASK2H        equ	417	;# 
 18175   0001A2                     C1MASK2U        equ	418	;# 
 18176   0001A3                     C1MASK2T        equ	419	;# 
 18177   0001A4                     C1FLTOBJ3       equ	420	;# 
 18178   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18179   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18180   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18181   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18182   0001A8                     C1MASK3         equ	424	;# 
 18183   0001A8                     C1MASK3L        equ	424	;# 
 18184   0001A9                     C1MASK3H        equ	425	;# 
 18185   0001AA                     C1MASK3U        equ	426	;# 
 18186   0001AB                     C1MASK3T        equ	427	;# 
 18187   0001AC                     C1FLTOBJ4       equ	428	;# 
 18188   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18189   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18190   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18191   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18192   0001B0                     C1MASK4         equ	432	;# 
 18193   0001B0                     C1MASK4L        equ	432	;# 
 18194   0001B1                     C1MASK4H        equ	433	;# 
 18195   0001B2                     C1MASK4U        equ	434	;# 
 18196   0001B3                     C1MASK4T        equ	435	;# 
 18197   0001B4                     C1FLTOBJ5       equ	436	;# 
 18198   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18199   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18200   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18201   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18202   0001B8                     C1MASK5         equ	440	;# 
 18203   0001B8                     C1MASK5L        equ	440	;# 
 18204   0001B9                     C1MASK5H        equ	441	;# 
 18205   0001BA                     C1MASK5U        equ	442	;# 
 18206   0001BB                     C1MASK5T        equ	443	;# 
 18207   0001BC                     C1FLTOBJ6       equ	444	;# 
 18208   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18209   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18210   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18211   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18212   0001C0                     C1MASK6         equ	448	;# 
 18213   0001C0                     C1MASK6L        equ	448	;# 
 18214   0001C1                     C1MASK6H        equ	449	;# 
 18215   0001C2                     C1MASK6U        equ	450	;# 
 18216   0001C3                     C1MASK6T        equ	451	;# 
 18217   0001C4                     C1FLTOBJ7       equ	452	;# 
 18218   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18219   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18220   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18221   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18222   0001C8                     C1MASK7         equ	456	;# 
 18223   0001C8                     C1MASK7L        equ	456	;# 
 18224   0001C9                     C1MASK7H        equ	457	;# 
 18225   0001CA                     C1MASK7U        equ	458	;# 
 18226   0001CB                     C1MASK7T        equ	459	;# 
 18227   0001CC                     C1FLTOBJ8       equ	460	;# 
 18228   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18229   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18230   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18231   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18232   0001D0                     C1MASK8         equ	464	;# 
 18233   0001D0                     C1MASK8L        equ	464	;# 
 18234   0001D1                     C1MASK8H        equ	465	;# 
 18235   0001D2                     C1MASK8U        equ	466	;# 
 18236   0001D3                     C1MASK8T        equ	467	;# 
 18237   0001D4                     C1FLTOBJ9       equ	468	;# 
 18238   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18239   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18240   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18241   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18242   0001D8                     C1MASK9         equ	472	;# 
 18243   0001D8                     C1MASK9L        equ	472	;# 
 18244   0001D9                     C1MASK9H        equ	473	;# 
 18245   0001DA                     C1MASK9U        equ	474	;# 
 18246   0001DB                     C1MASK9T        equ	475	;# 
 18247   0001DC                     C1FLTOBJ10      equ	476	;# 
 18248   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18249   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18250   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18251   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18252   0001E0                     C1MASK10        equ	480	;# 
 18253   0001E0                     C1MASK10L       equ	480	;# 
 18254   0001E1                     C1MASK10H       equ	481	;# 
 18255   0001E2                     C1MASK10U       equ	482	;# 
 18256   0001E3                     C1MASK10T       equ	483	;# 
 18257   0001E4                     C1FLTOBJ11      equ	484	;# 
 18258   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18259   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18260   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18261   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18262   0001E8                     C1MASK11        equ	488	;# 
 18263   0001E8                     C1MASK11L       equ	488	;# 
 18264   0001E9                     C1MASK11H       equ	489	;# 
 18265   0001EA                     C1MASK11U       equ	490	;# 
 18266   0001EB                     C1MASK11T       equ	491	;# 
 18267   000200                     PPSLOCK         equ	512	;# 
 18268   000201                     RA0PPS          equ	513	;# 
 18269   000202                     RA1PPS          equ	514	;# 
 18270   000203                     RA2PPS          equ	515	;# 
 18271   000204                     RA3PPS          equ	516	;# 
 18272   000205                     RA4PPS          equ	517	;# 
 18273   000206                     RA5PPS          equ	518	;# 
 18274   000207                     RA6PPS          equ	519	;# 
 18275   000208                     RA7PPS          equ	520	;# 
 18276   000209                     RB0PPS          equ	521	;# 
 18277   00020A                     RB1PPS          equ	522	;# 
 18278   00020B                     RB2PPS          equ	523	;# 
 18279   00020C                     RB3PPS          equ	524	;# 
 18280   00020D                     RB4PPS          equ	525	;# 
 18281   00020E                     RB5PPS          equ	526	;# 
 18282   00020F                     RB6PPS          equ	527	;# 
 18283   000210                     RB7PPS          equ	528	;# 
 18284   000211                     RC0PPS          equ	529	;# 
 18285   000212                     RC1PPS          equ	530	;# 
 18286   000213                     RC2PPS          equ	531	;# 
 18287   000214                     RC3PPS          equ	532	;# 
 18288   000215                     RC4PPS          equ	533	;# 
 18289   000216                     RC5PPS          equ	534	;# 
 18290   000217                     RC6PPS          equ	535	;# 
 18291   000218                     RC7PPS          equ	536	;# 
 18292   00023D                     CANRXPPS        equ	573	;# 
 18293   00023E                     INT0PPS         equ	574	;# 
 18294   00023F                     INT1PPS         equ	575	;# 
 18295   000240                     INT2PPS         equ	576	;# 
 18296   000241                     T0CKIPPS        equ	577	;# 
 18297   000242                     T1CKIPPS        equ	578	;# 
 18298   000243                     T1GPPS          equ	579	;# 
 18299   000244                     T3CKIPPS        equ	580	;# 
 18300   000245                     T3GPPS          equ	581	;# 
 18301   000246                     T5CKIPPS        equ	582	;# 
 18302   000247                     T5GPPS          equ	583	;# 
 18303   000248                     T2INPPS         equ	584	;# 
 18304   000249                     T4INPPS         equ	585	;# 
 18305   00024A                     T6INPPS         equ	586	;# 
 18306   00024B                     TUIN0PPS        equ	587	;# 
 18307   00024C                     TUIN1PPS        equ	588	;# 
 18308   00024F                     CCP1PPS         equ	591	;# 
 18309   000250                     CCP2PPS         equ	592	;# 
 18310   000251                     CCP3PPS         equ	593	;# 
 18311   000253                     PWM1ERSPPS      equ	595	;# 
 18312   000254                     PWM2ERSPPS      equ	596	;# 
 18313   000255                     PWM3ERSPPS      equ	597	;# 
 18314   000256                     PWM4ERSPPS      equ	598	;# 
 18315   000257                     PWMIN0PPS       equ	599	;# 
 18316   000258                     PWMIN1PPS       equ	600	;# 
 18317   000259                     SMT1WINPPS      equ	601	;# 
 18318   00025A                     SMT1SIGPPS      equ	602	;# 
 18319   00025B                     CWG1PPS         equ	603	;# 
 18320   00025B                     CWG1INPPS       equ	603	;# 
 18321   00025C                     CWG2PPS         equ	604	;# 
 18322   00025C                     CWG2INPPS       equ	604	;# 
 18323   00025D                     CWG3PPS         equ	605	;# 
 18324   00025D                     CWG3INPPS       equ	605	;# 
 18325   00025E                     MD1CARLPPS      equ	606	;# 
 18326   00025E                     MDCARLPPS       equ	606	;# 
 18327   00025F                     MD1CARHPPS      equ	607	;# 
 18328   00025F                     MDCARHPPS       equ	607	;# 
 18329   000260                     MD1SRCPPS       equ	608	;# 
 18330   000260                     MDSRCPPS        equ	608	;# 
 18331   000261                     CLCIN0PPS       equ	609	;# 
 18332   000262                     CLCIN1PPS       equ	610	;# 
 18333   000263                     CLCIN2PPS       equ	611	;# 
 18334   000264                     CLCIN3PPS       equ	612	;# 
 18335   000265                     CLCIN4PPS       equ	613	;# 
 18336   000266                     CLCIN5PPS       equ	614	;# 
 18337   000267                     CLCIN6PPS       equ	615	;# 
 18338   000268                     CLCIN7PPS       equ	616	;# 
 18339   000269                     ADACTPPS        equ	617	;# 
 18340   00026A                     SPI1SCKPPS      equ	618	;# 
 18341   00026B                     SPI1SDIPPS      equ	619	;# 
 18342   00026C                     SPI1SSPPS       equ	620	;# 
 18343   00026D                     SPI2SCKPPS      equ	621	;# 
 18344   00026E                     SPI2SDIPPS      equ	622	;# 
 18345   00026F                     SPI2SSPPS       equ	623	;# 
 18346   000270                     I2C1SDAPPS      equ	624	;# 
 18347   000271                     I2C1SCLPPS      equ	625	;# 
 18348   000272                     U1RXPPS         equ	626	;# 
 18349   000273                     U1CTSPPS        equ	627	;# 
 18350   000274                     U2RXPPS         equ	628	;# 
 18351   000275                     U2CTSPPS        equ	629	;# 
 18352   000276                     U3RXPPS         equ	630	;# 
 18353   000277                     U3CTSPPS        equ	631	;# 
 18354   000278                     U4RXPPS         equ	632	;# 
 18355   000279                     U4CTSPPS        equ	633	;# 
 18356   00027A                     U5RXPPS         equ	634	;# 
 18357   00027B                     U5CTSPPS        equ	635	;# 
 18358   000286                     RC4I2C          equ	646	;# 
 18359   000287                     RC3I2C          equ	647	;# 
 18360   000288                     RB2I2C          equ	648	;# 
 18361   000289                     RB1I2C          equ	649	;# 
 18362   00028A                     I2C1RXB         equ	650	;# 
 18363   00028B                     I2C1TXB         equ	651	;# 
 18364   00028C                     I2C1CNTL        equ	652	;# 
 18365   00028D                     I2C1CNTH        equ	653	;# 
 18366   00028E                     I2C1ADB0        equ	654	;# 
 18367   00028F                     I2C1ADB1        equ	655	;# 
 18368   000290                     I2C1ADR0        equ	656	;# 
 18369   000291                     I2C1ADR1        equ	657	;# 
 18370   000292                     I2C1ADR2        equ	658	;# 
 18371   000293                     I2C1ADR3        equ	659	;# 
 18372   000294                     I2C1CON0        equ	660	;# 
 18373   000295                     I2C1CON1        equ	661	;# 
 18374   000296                     I2C1CON2        equ	662	;# 
 18375   000297                     I2C1ERR         equ	663	;# 
 18376   000298                     I2C1STAT0       equ	664	;# 
 18377   000299                     I2C1STAT1       equ	665	;# 
 18378   00029A                     I2C1PIR         equ	666	;# 
 18379   00029B                     I2C1PIE         equ	667	;# 
 18380   00029C                     I2C1BTO         equ	668	;# 
 18381   00029D                     I2C1BAUD        equ	669	;# 
 18382   00029E                     I2C1CLK         equ	670	;# 
 18383   00029F                     I2C1BTOC        equ	671	;# 
 18384   0002A1                     U1RXB           equ	673	;# 
 18385   0002A1                     U1RXBL          equ	673	;# 
 18386   0002A2                     U1RXCHK         equ	674	;# 
 18387   0002A3                     U1TXB           equ	675	;# 
 18388   0002A3                     U1TXBL          equ	675	;# 
 18389   0002A4                     U1TXCHK         equ	676	;# 
 18390   0002A5                     U1P1            equ	677	;# 
 18391   0002A5                     U1P1L           equ	677	;# 
 18392   0002A6                     U1P1H           equ	678	;# 
 18393   0002A7                     U1P2            equ	679	;# 
 18394   0002A7                     U1P2L           equ	679	;# 
 18395   0002A8                     U1P2H           equ	680	;# 
 18396   0002A9                     U1P3            equ	681	;# 
 18397   0002A9                     U1P3L           equ	681	;# 
 18398   0002AA                     U1P3H           equ	682	;# 
 18399   0002AB                     U1CON0          equ	683	;# 
 18400   0002AC                     U1CON1          equ	684	;# 
 18401   0002AD                     U1CON2          equ	685	;# 
 18402   0002AE                     U1BRG           equ	686	;# 
 18403   0002AE                     U1BRGL          equ	686	;# 
 18404   0002AF                     U1BRGH          equ	687	;# 
 18405   0002B0                     U1FIFO          equ	688	;# 
 18406   0002B1                     U1UIR           equ	689	;# 
 18407   0002B2                     U1ERRIR         equ	690	;# 
 18408   0002B3                     U1ERRIE         equ	691	;# 
 18409   0002B4                     U2RXB           equ	692	;# 
 18410   0002B4                     U2RXBL          equ	692	;# 
 18411   0002B5                     U2RXCHK         equ	693	;# 
 18412   0002B6                     U2TXB           equ	694	;# 
 18413   0002B6                     U2TXBL          equ	694	;# 
 18414   0002B7                     U2TXCHK         equ	695	;# 
 18415   0002B8                     U2P1            equ	696	;# 
 18416   0002B8                     U2P1L           equ	696	;# 
 18417   0002B9                     U2P1H           equ	697	;# 
 18418   0002BA                     U2P2            equ	698	;# 
 18419   0002BA                     U2P2L           equ	698	;# 
 18420   0002BB                     U2P2H           equ	699	;# 
 18421   0002BC                     U2P3            equ	700	;# 
 18422   0002BC                     U2P3L           equ	700	;# 
 18423   0002BD                     U2P3H           equ	701	;# 
 18424   0002BE                     U2CON0          equ	702	;# 
 18425   0002BF                     U2CON1          equ	703	;# 
 18426   0002C0                     U2CON2          equ	704	;# 
 18427   0002C1                     U2BRG           equ	705	;# 
 18428   0002C1                     U2BRGL          equ	705	;# 
 18429   0002C2                     U2BRGH          equ	706	;# 
 18430   0002C3                     U2FIFO          equ	707	;# 
 18431   0002C4                     U2UIR           equ	708	;# 
 18432   0002C5                     U2ERRIR         equ	709	;# 
 18433   0002C6                     U2ERRIE         equ	710	;# 
 18434   0002C7                     U3RXB           equ	711	;# 
 18435   0002C7                     U3RXBL          equ	711	;# 
 18436   0002C9                     U3TXB           equ	713	;# 
 18437   0002C9                     U3TXBL          equ	713	;# 
 18438   0002CB                     U3P1            equ	715	;# 
 18439   0002CB                     U3P1L           equ	715	;# 
 18440   0002CD                     U3P2            equ	717	;# 
 18441   0002CD                     U3P2L           equ	717	;# 
 18442   0002CF                     U3P3            equ	719	;# 
 18443   0002CF                     U3P3L           equ	719	;# 
 18444   0002D1                     U3CON0          equ	721	;# 
 18445   0002D2                     U3CON1          equ	722	;# 
 18446   0002D3                     U3CON2          equ	723	;# 
 18447   0002D4                     U3BRG           equ	724	;# 
 18448   0002D4                     U3BRGL          equ	724	;# 
 18449   0002D5                     U3BRGH          equ	725	;# 
 18450   0002D6                     U3FIFO          equ	726	;# 
 18451   0002D7                     U3UIR           equ	727	;# 
 18452   0002D8                     U3ERRIR         equ	728	;# 
 18453   0002D9                     U3ERRIE         equ	729	;# 
 18454   0002DA                     U4RXB           equ	730	;# 
 18455   0002DA                     U4RXBL          equ	730	;# 
 18456   0002DC                     U4TXB           equ	732	;# 
 18457   0002DC                     U4TXBL          equ	732	;# 
 18458   0002DE                     U4P1            equ	734	;# 
 18459   0002DE                     U4P1L           equ	734	;# 
 18460   0002E0                     U4P2            equ	736	;# 
 18461   0002E0                     U4P2L           equ	736	;# 
 18462   0002E2                     U4P3            equ	738	;# 
 18463   0002E2                     U4P3L           equ	738	;# 
 18464   0002E4                     U4CON0          equ	740	;# 
 18465   0002E5                     U4CON1          equ	741	;# 
 18466   0002E6                     U4CON2          equ	742	;# 
 18467   0002E7                     U4BRG           equ	743	;# 
 18468   0002E7                     U4BRGL          equ	743	;# 
 18469   0002E8                     U4BRGH          equ	744	;# 
 18470   0002E9                     U4FIFO          equ	745	;# 
 18471   0002EA                     U4UIR           equ	746	;# 
 18472   0002EB                     U4ERRIR         equ	747	;# 
 18473   0002EC                     U4ERRIE         equ	748	;# 
 18474   0002ED                     U5RXB           equ	749	;# 
 18475   0002ED                     U5RXBL          equ	749	;# 
 18476   0002EF                     U5TXB           equ	751	;# 
 18477   0002EF                     U5TXBL          equ	751	;# 
 18478   0002F1                     U5P1            equ	753	;# 
 18479   0002F1                     U5P1L           equ	753	;# 
 18480   0002F3                     U5P2            equ	755	;# 
 18481   0002F3                     U5P2L           equ	755	;# 
 18482   0002F5                     U5P3            equ	757	;# 
 18483   0002F5                     U5P3L           equ	757	;# 
 18484   0002F7                     U5CON0          equ	759	;# 
 18485   0002F8                     U5CON1          equ	760	;# 
 18486   0002F9                     U5CON2          equ	761	;# 
 18487   0002FA                     U5BRG           equ	762	;# 
 18488   0002FA                     U5BRGL          equ	762	;# 
 18489   0002FB                     U5BRGH          equ	763	;# 
 18490   0002FC                     U5FIFO          equ	764	;# 
 18491   0002FD                     U5UIR           equ	765	;# 
 18492   0002FE                     U5ERRIR         equ	766	;# 
 18493   0002FF                     U5ERRIE         equ	767	;# 
 18494   000300                     SMT1TMR         equ	768	;# 
 18495   000300                     SMT1TMRL        equ	768	;# 
 18496   000301                     SMT1TMRH        equ	769	;# 
 18497   000302                     SMT1TMRU        equ	770	;# 
 18498   000303                     SMT1CPR         equ	771	;# 
 18499   000303                     SMT1CPRL        equ	771	;# 
 18500   000304                     SMT1CPRH        equ	772	;# 
 18501   000305                     SMT1CPRU        equ	773	;# 
 18502   000306                     SMT1CPW         equ	774	;# 
 18503   000306                     SMT1CPWL        equ	774	;# 
 18504   000307                     SMT1CPWH        equ	775	;# 
 18505   000308                     SMT1CPWU        equ	776	;# 
 18506   000309                     SMT1PR          equ	777	;# 
 18507   000309                     SMT1PRL         equ	777	;# 
 18508   00030A                     SMT1PRH         equ	778	;# 
 18509   00030B                     SMT1PRU         equ	779	;# 
 18510   00030C                     SMT1CON0        equ	780	;# 
 18511   00030D                     SMT1CON1        equ	781	;# 
 18512   00030E                     SMT1STAT        equ	782	;# 
 18513   00030F                     SMT1CLK         equ	783	;# 
 18514   000310                     SMT1SIG         equ	784	;# 
 18515   000311                     SMT1WIN         equ	785	;# 
 18516   000318                     TMR0L           equ	792	;# 
 18517   000318                     TMR0            equ	792	;# 
 18518   000319                     TMR0H           equ	793	;# 
 18519   000319                     PR0             equ	793	;# 
 18520   00031A                     T0CON0          equ	794	;# 
 18521   00031B                     T0CON1          equ	795	;# 
 18522   00031C                     TMR1            equ	796	;# 
 18523   00031C                     TMR1L           equ	796	;# 
 18524   00031D                     TMR1H           equ	797	;# 
 18525   00031E                     T1CON           equ	798	;# 
 18526   00031E                     TMR1CON         equ	798	;# 
 18527   00031F                     T1GCON          equ	799	;# 
 18528   00031F                     TMR1GCON        equ	799	;# 
 18529   000320                     T1GATE          equ	800	;# 
 18530   000320                     TMR1GATE        equ	800	;# 
 18531   000321                     T1CLK           equ	801	;# 
 18532   000321                     TMR1CLK         equ	801	;# 
 18533   000321                     PR1             equ	801	;# 
 18534   000322                     T2TMR           equ	802	;# 
 18535   000322                     TMR2            equ	802	;# 
 18536   000323                     T2PR            equ	803	;# 
 18537   000323                     PR2             equ	803	;# 
 18538   000324                     T2CON           equ	804	;# 
 18539   000325                     T2HLT           equ	805	;# 
 18540   000326                     T2CLKCON        equ	806	;# 
 18541   000326                     T2CLK           equ	806	;# 
 18542   000327                     T2RST           equ	807	;# 
 18543   000328                     TMR3            equ	808	;# 
 18544   000328                     TMR3L           equ	808	;# 
 18545   000329                     TMR3H           equ	809	;# 
 18546   00032A                     T3CON           equ	810	;# 
 18547   00032A                     TMR3CON         equ	810	;# 
 18548   00032B                     T3GCON          equ	811	;# 
 18549   00032B                     TMR3GCON        equ	811	;# 
 18550   00032C                     T3GATE          equ	812	;# 
 18551   00032C                     TMR3GATE        equ	812	;# 
 18552   00032D                     T3CLK           equ	813	;# 
 18553   00032D                     TMR3CLK         equ	813	;# 
 18554   00032D                     PR3             equ	813	;# 
 18555   00032E                     T4TMR           equ	814	;# 
 18556   00032E                     TMR4            equ	814	;# 
 18557   00032F                     T4PR            equ	815	;# 
 18558   00032F                     PR4             equ	815	;# 
 18559   000330                     T4CON           equ	816	;# 
 18560   000331                     T4HLT           equ	817	;# 
 18561   000332                     T4CLKCON        equ	818	;# 
 18562   000332                     T4CLK           equ	818	;# 
 18563   000333                     T4RST           equ	819	;# 
 18564   000334                     TMR5            equ	820	;# 
 18565   000334                     TMR5L           equ	820	;# 
 18566   000335                     TMR5H           equ	821	;# 
 18567   000336                     T5CON           equ	822	;# 
 18568   000336                     TMR5CON         equ	822	;# 
 18569   000337                     T5GCON          equ	823	;# 
 18570   000337                     TMR5GCON        equ	823	;# 
 18571   000338                     T5GATE          equ	824	;# 
 18572   000338                     TMR5GATE        equ	824	;# 
 18573   000339                     T5CLK           equ	825	;# 
 18574   000339                     TMR5CLK         equ	825	;# 
 18575   000339                     PR5             equ	825	;# 
 18576   00033A                     T6TMR           equ	826	;# 
 18577   00033A                     TMR6            equ	826	;# 
 18578   00033B                     T6PR            equ	827	;# 
 18579   00033B                     PR6             equ	827	;# 
 18580   00033C                     T6CON           equ	828	;# 
 18581   00033D                     T6HLT           equ	829	;# 
 18582   00033E                     T6CLKCON        equ	830	;# 
 18583   00033E                     T6CLK           equ	830	;# 
 18584   00033F                     T6RST           equ	831	;# 
 18585   000340                     CCPR1           equ	832	;# 
 18586   000340                     CCPR1L          equ	832	;# 
 18587   000341                     CCPR1H          equ	833	;# 
 18588   000342                     CCP1CON         equ	834	;# 
 18589   000343                     CCP1CAP         equ	835	;# 
 18590   000344                     CCPR2           equ	836	;# 
 18591   000344                     CCPR2L          equ	836	;# 
 18592   000345                     CCPR2H          equ	837	;# 
 18593   000346                     CCP2CON         equ	838	;# 
 18594   000347                     CCP2CAP         equ	839	;# 
 18595   000348                     CCPR3           equ	840	;# 
 18596   000348                     CCPR3L          equ	840	;# 
 18597   000349                     CCPR3H          equ	841	;# 
 18598   00034A                     CCP3CON         equ	842	;# 
 18599   00034B                     CCP3CAP         equ	843	;# 
 18600   00034C                     CCPTMRS0        equ	844	;# 
 18601   00034F                     CRCDATA         equ	847	;# 
 18602   00034F                     CRCDATAL        equ	847	;# 
 18603   000350                     CRCDATAH        equ	848	;# 
 18604   000351                     CRCDATAU        equ	849	;# 
 18605   000352                     CRCDATAT        equ	850	;# 
 18606   000353                     CRCOUT          equ	851	;# 
 18607   000353                     CRCSHFT         equ	851	;# 
 18608   000353                     CRCXOR          equ	851	;# 
 18609   000353                     CRCOUTL         equ	851	;# 
 18610   000353                     CRCSHFTL        equ	851	;# 
 18611   000353                     CRCSHIFTL       equ	851	;# 
 18612   000353                     CRCXORL         equ	851	;# 
 18613   000354                     CRCOUTH         equ	852	;# 
 18614   000354                     CRCSHFTH        equ	852	;# 
 18615   000354                     CRCSHIFTH       equ	852	;# 
 18616   000354                     CRCXORH         equ	852	;# 
 18617   000355                     CRCOUTU         equ	853	;# 
 18618   000355                     CRCSHFTU        equ	853	;# 
 18619   000355                     CRCSHIFTU       equ	853	;# 
 18620   000355                     CRCXORU         equ	853	;# 
 18621   000356                     CRCOUTT         equ	854	;# 
 18622   000356                     CRCSHFTT        equ	854	;# 
 18623   000356                     CRCSHIFTT       equ	854	;# 
 18624   000356                     CRCXORT         equ	854	;# 
 18625   000357                     CRCCON0         equ	855	;# 
 18626   000358                     CRCCON1         equ	856	;# 
 18627   000359                     CRCCON2         equ	857	;# 
 18628   00035A                     SCANLADR        equ	858	;# 
 18629   00035A                     SCANLADRL       equ	858	;# 
 18630   00035B                     SCANLADRH       equ	859	;# 
 18631   00035C                     SCANLADRU       equ	860	;# 
 18632   00035D                     SCANHADR        equ	861	;# 
 18633   00035D                     SCANHADRL       equ	861	;# 
 18634   00035E                     SCANHADRH       equ	862	;# 
 18635   00035F                     SCANHADRU       equ	863	;# 
 18636   000360                     SCANCON0        equ	864	;# 
 18637   000361                     SCANTRIG        equ	865	;# 
 18638   000362                     IPR0            equ	866	;# 
 18639   000363                     IPR1            equ	867	;# 
 18640   000364                     IPR2            equ	868	;# 
 18641   000365                     IPR3            equ	869	;# 
 18642   000366                     IPR4            equ	870	;# 
 18643   000367                     IPR5            equ	871	;# 
 18644   000368                     IPR6            equ	872	;# 
 18645   000369                     IPR7            equ	873	;# 
 18646   00036A                     IPR8            equ	874	;# 
 18647   00036B                     IPR9            equ	875	;# 
 18648   00036C                     IPR10           equ	876	;# 
 18649   00036D                     IPR11           equ	877	;# 
 18650   00036E                     IPR12           equ	878	;# 
 18651   00036F                     IPR13           equ	879	;# 
 18652   000370                     IPR14           equ	880	;# 
 18653   000371                     IPR15           equ	881	;# 
 18654   000373                     STATUS_CSHAD    equ	883	;# 
 18655   000374                     WREG_CSHAD      equ	884	;# 
 18656   000375                     BSR_CSHAD       equ	885	;# 
 18657   000376                     SHADCON         equ	886	;# 
 18658   000377                     STATUS_SHAD     equ	887	;# 
 18659   000378                     WREG_SHAD       equ	888	;# 
 18660   000379                     BSR_SHAD        equ	889	;# 
 18661   00037A                     PCLATH_SHAD     equ	890	;# 
 18662   00037B                     PCLATU_SHAD     equ	891	;# 
 18663   00037C                     FSR0SH          equ	892	;# 
 18664   00037C                     FSR0L_SHAD      equ	892	;# 
 18665   00037D                     FSR0H_SHAD      equ	893	;# 
 18666   00037E                     FSR1SH          equ	894	;# 
 18667   00037E                     FSR1L_SHAD      equ	894	;# 
 18668   00037F                     FSR1H_SHAD      equ	895	;# 
 18669   000380                     FSR2SH          equ	896	;# 
 18670   000380                     FSR2L_SHAD      equ	896	;# 
 18671   000381                     FSR2H_SHAD      equ	897	;# 
 18672   000382                     PRODSH          equ	898	;# 
 18673   000382                     PRODL_SHAD      equ	898	;# 
 18674   000383                     PRODH_SHAD      equ	899	;# 
 18675   000387                     TU16ACON0       equ	903	;# 
 18676   000388                     TU16ACON1       equ	904	;# 
 18677   000389                     TU16AHLT        equ	905	;# 
 18678   00038A                     TU16APS         equ	906	;# 
 18679   00038B                     TU16ATMR        equ	907	;# 
 18680   00038B                     TU16ACR         equ	907	;# 
 18681   00038B                     TU16ATMRL       equ	907	;# 
 18682   00038B                     TU16ACRL        equ	907	;# 
 18683   00038C                     TU16ATMRH       equ	908	;# 
 18684   00038C                     TU16ACRH        equ	908	;# 
 18685   00038D                     TU16APR         equ	909	;# 
 18686   00038D                     TU16APRL        equ	909	;# 
 18687   00038E                     TU16APRH        equ	910	;# 
 18688   00038F                     TU16ACLK        equ	911	;# 
 18689   000390                     TU16AERS        equ	912	;# 
 18690   000393                     TU16BCON0       equ	915	;# 
 18691   000394                     TU16BCON1       equ	916	;# 
 18692   000395                     TU16BHLT        equ	917	;# 
 18693   000396                     TU16BPS         equ	918	;# 
 18694   000397                     TU16BTMR        equ	919	;# 
 18695   000397                     TU16BCR         equ	919	;# 
 18696   000397                     TU16BTMRL       equ	919	;# 
 18697   000397                     TU16BCRL        equ	919	;# 
 18698   000398                     TU16BTMRH       equ	920	;# 
 18699   000398                     TU16BCRH        equ	920	;# 
 18700   000399                     TU16BPR         equ	921	;# 
 18701   000399                     TU16BPRL        equ	921	;# 
 18702   00039A                     TU16BPRH        equ	922	;# 
 18703   00039B                     TU16BCLK        equ	923	;# 
 18704   00039C                     TU16BERS        equ	924	;# 
 18705   0003BB                     TUCHAIN         equ	955	;# 
 18706   0003BC                     CWG1CLK         equ	956	;# 
 18707   0003BC                     CWG1CLKCON      equ	956	;# 
 18708   0003BD                     CWG1ISM         equ	957	;# 
 18709   0003BE                     CWG1DBR         equ	958	;# 
 18710   0003BF                     CWG1DBF         equ	959	;# 
 18711   0003C0                     CWG1CON0        equ	960	;# 
 18712   0003C1                     CWG1CON1        equ	961	;# 
 18713   0003C2                     CWG1AS0         equ	962	;# 
 18714   0003C3                     CWG1AS1         equ	963	;# 
 18715   0003C4                     CWG1STR         equ	964	;# 
 18716   0003C5                     CWG2CLK         equ	965	;# 
 18717   0003C5                     CWG2CLKCON      equ	965	;# 
 18718   0003C6                     CWG2ISM         equ	966	;# 
 18719   0003C7                     CWG2DBR         equ	967	;# 
 18720   0003C8                     CWG2DBF         equ	968	;# 
 18721   0003C9                     CWG2CON0        equ	969	;# 
 18722   0003CA                     CWG2CON1        equ	970	;# 
 18723   0003CB                     CWG2AS0         equ	971	;# 
 18724   0003CC                     CWG2AS1         equ	972	;# 
 18725   0003CD                     CWG2STR         equ	973	;# 
 18726   0003CE                     CWG3CLK         equ	974	;# 
 18727   0003CE                     CWG3CLKCON      equ	974	;# 
 18728   0003CF                     CWG3ISM         equ	975	;# 
 18729   0003D0                     CWG3DBR         equ	976	;# 
 18730   0003D1                     CWG3DBF         equ	977	;# 
 18731   0003D2                     CWG3CON0        equ	978	;# 
 18732   0003D3                     CWG3CON1        equ	979	;# 
 18733   0003D4                     CWG3AS0         equ	980	;# 
 18734   0003D5                     CWG3AS1         equ	981	;# 
 18735   0003D6                     CWG3STR         equ	982	;# 
 18736   0003D7                     FVRCON          equ	983	;# 
 18737   0003D8                     ADCPCON         equ	984	;# 
 18738   0003D8                     ADCP            equ	984	;# 
 18739   0003D9                     ADLTH           equ	985	;# 
 18740   0003D9                     ADLTHL          equ	985	;# 
 18741   0003DA                     ADLTHH          equ	986	;# 
 18742   0003DB                     ADUTH           equ	987	;# 
 18743   0003DB                     ADUTHL          equ	987	;# 
 18744   0003DC                     ADUTHH          equ	988	;# 
 18745   0003DD                     ADERR           equ	989	;# 
 18746   0003DD                     ADERRL          equ	989	;# 
 18747   0003DE                     ADERRH          equ	990	;# 
 18748   0003DF                     ADSTPT          equ	991	;# 
 18749   0003DF                     ADSTPTL         equ	991	;# 
 18750   0003E0                     ADSTPTH         equ	992	;# 
 18751   0003E1                     ADFLTR          equ	993	;# 
 18752   0003E1                     ADFLTRL         equ	993	;# 
 18753   0003E2                     ADFLTRH         equ	994	;# 
 18754   0003E3                     ADACC           equ	995	;# 
 18755   0003E3                     ADACCL          equ	995	;# 
 18756   0003E4                     ADACCH          equ	996	;# 
 18757   0003E5                     ADACCU          equ	997	;# 
 18758   0003E6                     ADCNT           equ	998	;# 
 18759   0003E7                     ADRPT           equ	999	;# 
 18760   0003E8                     ADPREV          equ	1000	;# 
 18761   0003E8                     ADPREVL         equ	1000	;# 
 18762   0003E9                     ADPREVH         equ	1001	;# 
 18763   0003EA                     ADRES           equ	1002	;# 
 18764   0003EA                     ADRESL          equ	1002	;# 
 18765   0003EB                     ADRESH          equ	1003	;# 
 18766   0003EC                     ADPCH           equ	1004	;# 
 18767   0003EE                     ADACQ           equ	1006	;# 
 18768   0003EE                     ADACQL          equ	1006	;# 
 18769   0003EF                     ADACQH          equ	1007	;# 
 18770   0003F0                     ADCAP           equ	1008	;# 
 18771   0003F1                     ADPRE           equ	1009	;# 
 18772   0003F1                     ADPREL          equ	1009	;# 
 18773   0003F2                     ADPREH          equ	1010	;# 
 18774   0003F3                     ADCON0          equ	1011	;# 
 18775   0003F4                     ADCON1          equ	1012	;# 
 18776   0003F5                     ADCON2          equ	1013	;# 
 18777   0003F6                     ADCON3          equ	1014	;# 
 18778   0003F7                     ADSTAT          equ	1015	;# 
 18779   0003F8                     ADREF           equ	1016	;# 
 18780   0003F9                     ADACT           equ	1017	;# 
 18781   0003FA                     ADCLK           equ	1018	;# 
 18782   0003FB                     ADCTX           equ	1019	;# 
 18783   0003FC                     ADCSEL1         equ	1020	;# 
 18784   0003FD                     ADCSEL2         equ	1021	;# 
 18785   0003FE                     ADCSEL3         equ	1022	;# 
 18786   0003FF                     ADCSEL4         equ	1023	;# 
 18787   000400                     ANSELA          equ	1024	;# 
 18788   000401                     WPUA            equ	1025	;# 
 18789   000402                     ODCONA          equ	1026	;# 
 18790   000403                     SLRCONA         equ	1027	;# 
 18791   000404                     INLVLA          equ	1028	;# 
 18792   000405                     IOCAP           equ	1029	;# 
 18793   000406                     IOCAN           equ	1030	;# 
 18794   000407                     IOCAF           equ	1031	;# 
 18795   000408                     ANSELB          equ	1032	;# 
 18796   000409                     WPUB            equ	1033	;# 
 18797   00040A                     ODCONB          equ	1034	;# 
 18798   00040B                     SLRCONB         equ	1035	;# 
 18799   00040C                     INLVLB          equ	1036	;# 
 18800   00040D                     IOCBP           equ	1037	;# 
 18801   00040E                     IOCBN           equ	1038	;# 
 18802   00040F                     IOCBF           equ	1039	;# 
 18803   000410                     ANSELC          equ	1040	;# 
 18804   000411                     WPUC            equ	1041	;# 
 18805   000412                     ODCONC          equ	1042	;# 
 18806   000413                     SLRCONC         equ	1043	;# 
 18807   000414                     INLVLC          equ	1044	;# 
 18808   000415                     IOCCP           equ	1045	;# 
 18809   000416                     IOCCN           equ	1046	;# 
 18810   000417                     IOCCF           equ	1047	;# 
 18811   000421                     WPUE            equ	1057	;# 
 18812   000424                     INLVLE          equ	1060	;# 
 18813   000425                     IOCEP           equ	1061	;# 
 18814   000426                     IOCEN           equ	1062	;# 
 18815   000427                     IOCEF           equ	1063	;# 
 18816   000440                     NCO1ACC         equ	1088	;# 
 18817   000440                     NCO1ACCL        equ	1088	;# 
 18818   000441                     NCO1ACCH        equ	1089	;# 
 18819   000442                     NCO1ACCU        equ	1090	;# 
 18820   000443                     NCO1INC         equ	1091	;# 
 18821   000443                     NCO1INCL        equ	1091	;# 
 18822   000444                     NCO1INCH        equ	1092	;# 
 18823   000445                     NCO1INCU        equ	1093	;# 
 18824   000446                     NCO1CON         equ	1094	;# 
 18825   000447                     NCO1CLK         equ	1095	;# 
 18826   000448                     NCO2ACC         equ	1096	;# 
 18827   000448                     NCO2ACCL        equ	1096	;# 
 18828   000449                     NCO2ACCH        equ	1097	;# 
 18829   00044A                     NCO2ACCU        equ	1098	;# 
 18830   00044B                     NCO2INC         equ	1099	;# 
 18831   00044B                     NCO2INCL        equ	1099	;# 
 18832   00044C                     NCO2INCH        equ	1100	;# 
 18833   00044D                     NCO2INCU        equ	1101	;# 
 18834   00044E                     NCO2CON         equ	1102	;# 
 18835   00044F                     NCO2CLK         equ	1103	;# 
 18836   000450                     NCO3ACC         equ	1104	;# 
 18837   000450                     NCO3ACCL        equ	1104	;# 
 18838   000451                     NCO3ACCH        equ	1105	;# 
 18839   000452                     NCO3ACCU        equ	1106	;# 
 18840   000453                     NCO3INC         equ	1107	;# 
 18841   000453                     NCO3INCL        equ	1107	;# 
 18842   000454                     NCO3INCH        equ	1108	;# 
 18843   000455                     NCO3INCU        equ	1109	;# 
 18844   000456                     NCO3CON         equ	1110	;# 
 18845   000457                     NCO3CLK         equ	1111	;# 
 18846   000458                     FSCMCON         equ	1112	;# 
 18847   000459                     IVTLOCK         equ	1113	;# 
 18848   00045A                     IVTAD           equ	1114	;# 
 18849   00045A                     IVTADL          equ	1114	;# 
 18850   00045B                     IVTADH          equ	1115	;# 
 18851   00045C                     IVTADU          equ	1116	;# 
 18852   00045D                     IVTBASE         equ	1117	;# 
 18853   00045D                     IVTBASEL        equ	1117	;# 
 18854   00045E                     IVTBASEH        equ	1118	;# 
 18855   00045F                     IVTBASEU        equ	1119	;# 
 18856   000460                     PWM1ERS         equ	1120	;# 
 18857   000461                     PWM1CLK         equ	1121	;# 
 18858   000462                     PWM1LDS         equ	1122	;# 
 18859   000463                     PWM1PR          equ	1123	;# 
 18860   000463                     PWM1PRL         equ	1123	;# 
 18861   000464                     PWM1PRH         equ	1124	;# 
 18862   000465                     PWM1CPRE        equ	1125	;# 
 18863   000466                     PWM1PIPOS       equ	1126	;# 
 18864   000467                     PWM1GIR         equ	1127	;# 
 18865   000468                     PWM1GIE         equ	1128	;# 
 18866   000469                     PWM1CON         equ	1129	;# 
 18867   00046A                     PWM1S1CFG       equ	1130	;# 
 18868   00046B                     PWM1S1P1        equ	1131	;# 
 18869   00046B                     PWM1S1P1L       equ	1131	;# 
 18870   00046C                     PWM1S1P1H       equ	1132	;# 
 18871   00046D                     PWM1S1P2        equ	1133	;# 
 18872   00046D                     PWM1S1P2L       equ	1133	;# 
 18873   00046E                     PWM1S1P2H       equ	1134	;# 
 18874   00046F                     PWM2ERS         equ	1135	;# 
 18875   000470                     PWM2CLK         equ	1136	;# 
 18876   000471                     PWM2LDS         equ	1137	;# 
 18877   000472                     PWM2PR          equ	1138	;# 
 18878   000472                     PWM2PRL         equ	1138	;# 
 18879   000473                     PWM2PRH         equ	1139	;# 
 18880   000474                     PWM2CPRE        equ	1140	;# 
 18881   000475                     PWM2PIPOS       equ	1141	;# 
 18882   000476                     PWM2GIR         equ	1142	;# 
 18883   000477                     PWM2GIE         equ	1143	;# 
 18884   000478                     PWM2CON         equ	1144	;# 
 18885   000479                     PWM2S1CFG       equ	1145	;# 
 18886   00047A                     PWM2S1P1        equ	1146	;# 
 18887   00047A                     PWM2S1P1L       equ	1146	;# 
 18888   00047B                     PWM2S1P1H       equ	1147	;# 
 18889   00047C                     PWM2S1P2        equ	1148	;# 
 18890   00047C                     PWM2S1P2L       equ	1148	;# 
 18891   00047D                     PWM2S1P2H       equ	1149	;# 
 18892   00047E                     PWM3ERS         equ	1150	;# 
 18893   00047F                     PWM3CLK         equ	1151	;# 
 18894   000480                     PWM3LDS         equ	1152	;# 
 18895   000481                     PWM3PR          equ	1153	;# 
 18896   000481                     PWM3PRL         equ	1153	;# 
 18897   000482                     PWM3PRH         equ	1154	;# 
 18898   000483                     PWM3CPRE        equ	1155	;# 
 18899   000484                     PWM3PIPOS       equ	1156	;# 
 18900   000485                     PWM3GIR         equ	1157	;# 
 18901   000486                     PWM3GIE         equ	1158	;# 
 18902   000487                     PWM3CON         equ	1159	;# 
 18903   000488                     PWM3S1CFG       equ	1160	;# 
 18904   000489                     PWM3S1P1        equ	1161	;# 
 18905   000489                     PWM3S1P1L       equ	1161	;# 
 18906   00048A                     PWM3S1P1H       equ	1162	;# 
 18907   00048B                     PWM3S1P2        equ	1163	;# 
 18908   00048B                     PWM3S1P2L       equ	1163	;# 
 18909   00048C                     PWM3S1P2H       equ	1164	;# 
 18910   00048D                     PWM4ERS         equ	1165	;# 
 18911   00048E                     PWM4CLK         equ	1166	;# 
 18912   00048F                     PWM4LDS         equ	1167	;# 
 18913   000490                     PWM4PR          equ	1168	;# 
 18914   000490                     PWM4PRL         equ	1168	;# 
 18915   000491                     PWM4PRH         equ	1169	;# 
 18916   000492                     PWM4CPRE        equ	1170	;# 
 18917   000493                     PWM4PIPOS       equ	1171	;# 
 18918   000494                     PWM4GIR         equ	1172	;# 
 18919   000495                     PWM4GIE         equ	1173	;# 
 18920   000496                     PWM4CON         equ	1174	;# 
 18921   000497                     PWM4S1CFG       equ	1175	;# 
 18922   000498                     PWM4S1P1        equ	1176	;# 
 18923   000498                     PWM4S1P1L       equ	1176	;# 
 18924   000499                     PWM4S1P1H       equ	1177	;# 
 18925   00049A                     PWM4S1P2        equ	1178	;# 
 18926   00049A                     PWM4S1P2L       equ	1178	;# 
 18927   00049B                     PWM4S1P2H       equ	1179	;# 
 18928   00049C                     PWMLOAD         equ	1180	;# 
 18929   00049D                     PWMEN           equ	1181	;# 
 18930   00049E                     PIE0            equ	1182	;# 
 18931   00049F                     PIE1            equ	1183	;# 
 18932   0004A0                     PIE2            equ	1184	;# 
 18933   0004A1                     PIE3            equ	1185	;# 
 18934   0004A2                     PIE4            equ	1186	;# 
 18935   0004A3                     PIE5            equ	1187	;# 
 18936   0004A4                     PIE6            equ	1188	;# 
 18937   0004A5                     PIE7            equ	1189	;# 
 18938   0004A6                     PIE8            equ	1190	;# 
 18939   0004A7                     PIE9            equ	1191	;# 
 18940   0004A8                     PIE10           equ	1192	;# 
 18941   0004A9                     PIE11           equ	1193	;# 
 18942   0004AA                     PIE12           equ	1194	;# 
 18943   0004AB                     PIE13           equ	1195	;# 
 18944   0004AC                     PIE14           equ	1196	;# 
 18945   0004AD                     PIE15           equ	1197	;# 
 18946   0004AE                     PIR0            equ	1198	;# 
 18947   0004AF                     PIR1            equ	1199	;# 
 18948   0004B0                     PIR2            equ	1200	;# 
 18949   0004B1                     PIR3            equ	1201	;# 
 18950   0004B2                     PIR4            equ	1202	;# 
 18951   0004B3                     PIR5            equ	1203	;# 
 18952   0004B4                     PIR6            equ	1204	;# 
 18953   0004B5                     PIR7            equ	1205	;# 
 18954   0004B6                     PIR8            equ	1206	;# 
 18955   0004B7                     PIR9            equ	1207	;# 
 18956   0004B8                     PIR10           equ	1208	;# 
 18957   0004B9                     PIR11           equ	1209	;# 
 18958   0004BA                     PIR12           equ	1210	;# 
 18959   0004BB                     PIR13           equ	1211	;# 
 18960   0004BC                     PIR14           equ	1212	;# 
 18961   0004BD                     PIR15           equ	1213	;# 
 18962   0004BE                     LATA            equ	1214	;# 
 18963   0004BF                     LATB            equ	1215	;# 
 18964   0004C0                     LATC            equ	1216	;# 
 18965   0004C6                     TRISA           equ	1222	;# 
 18966   0004C7                     TRISB           equ	1223	;# 
 18967   0004C8                     TRISC           equ	1224	;# 
 18968   0004CA                     TRISE           equ	1226	;# 
 18969   0004CE                     PORTA           equ	1230	;# 
 18970   0004CF                     PORTB           equ	1231	;# 
 18971   0004D0                     PORTC           equ	1232	;# 
 18972   0004D2                     PORTE           equ	1234	;# 
 18973   0004D6                     INTCON0         equ	1238	;# 
 18974   0004D7                     INTCON1         equ	1239	;# 
 18975   0004D8                     STATUS          equ	1240	;# 
 18976   0004D9                     FSR2            equ	1241	;# 
 18977   0004D9                     FSR2L           equ	1241	;# 
 18978   0004DA                     FSR2H           equ	1242	;# 
 18979   0004DB                     PLUSW2          equ	1243	;# 
 18980   0004DC                     PREINC2         equ	1244	;# 
 18981   0004DD                     POSTDEC2        equ	1245	;# 
 18982   0004DE                     POSTINC2        equ	1246	;# 
 18983   0004DF                     INDF2           equ	1247	;# 
 18984   0004E0                     BSR             equ	1248	;# 
 18985   0004E1                     FSR1            equ	1249	;# 
 18986   0004E1                     FSR1L           equ	1249	;# 
 18987   0004E2                     FSR1H           equ	1250	;# 
 18988   0004E3                     PLUSW1          equ	1251	;# 
 18989   0004E4                     PREINC1         equ	1252	;# 
 18990   0004E5                     POSTDEC1        equ	1253	;# 
 18991   0004E6                     POSTINC1        equ	1254	;# 
 18992   0004E7                     INDF1           equ	1255	;# 
 18993   0004E8                     WREG            equ	1256	;# 
 18994   0004E9                     FSR0            equ	1257	;# 
 18995   0004E9                     FSR0L           equ	1257	;# 
 18996   0004EA                     FSR0H           equ	1258	;# 
 18997   0004EB                     PLUSW0          equ	1259	;# 
 18998   0004EC                     PREINC0         equ	1260	;# 
 18999   0004ED                     POSTDEC0        equ	1261	;# 
 19000   0004EE                     POSTINC0        equ	1262	;# 
 19001   0004EF                     INDF0           equ	1263	;# 
 19002   0004F0                     PCON0           equ	1264	;# 
 19003   0004F1                     PCON1           equ	1265	;# 
 19004   0004F2                     CPUDOZE         equ	1266	;# 
 19005   0004F3                     PROD            equ	1267	;# 
 19006   0004F3                     PRODL           equ	1267	;# 
 19007   0004F4                     PRODH           equ	1268	;# 
 19008   0004F5                     TABLAT          equ	1269	;# 
 19009   0004F6                     TBLPTR          equ	1270	;# 
 19010   0004F6                     TBLPTRL         equ	1270	;# 
 19011   0004F7                     TBLPTRH         equ	1271	;# 
 19012   0004F8                     TBLPTRU         equ	1272	;# 
 19013   0004F9                     PCLAT           equ	1273	;# 
 19014   0004F9                     PCL             equ	1273	;# 
 19015   0004FA                     PCLATH          equ	1274	;# 
 19016   0004FB                     PCLATU          equ	1275	;# 
 19017   0004FC                     STKPTR          equ	1276	;# 
 19018   0004FD                     TOS             equ	1277	;# 
 19019   0004FD                     TOSL            equ	1277	;# 
 19020   0004FE                     TOSH            equ	1278	;# 
 19021   0004FF                     TOSU            equ	1279	;# 
 19022                           
 19023                           	psect	idataBANK5
 19024   007CB6                     __pidataBANK5:
 19025                           	callstack 0
 19026                           
 19027                           ;initializer for _flashBuffer
 19028   007CB6  00                 	db	0
 19029   007CB7  37                 	db	55
 19030                           
 19031                           ;initializer for _first
 19032   007CB8  01                 	db	1
 19033                           
 19034                           	psect	mediumconst
 19035   00FE58                     __pmediumconst:
 19036                           	callstack 0
 19037   00FE58  00                 	db	0
 19038   00FE59                     _priorities:
 19039                           	callstack 0
 19040   00FE59  01                 	db	1
 19041   00FE5A  01                 	db	1
 19042   00FE5B  03                 	db	3
 19043   00FE5C  02                 	db	2
 19044   00FE5D  02                 	db	2
 19045   00FE5E  02                 	db	2
 19046   00FE5F  02                 	db	2
 19047   00FE60  03                 	db	3
 19048   00FE61  02                 	db	2
 19049   00FE62  02                 	db	2
 19050   00FE63  03                 	db	3
 19051   00FE64  01                 	db	1
 19052   00FE65  00                 	db	0
 19053   00FE66  00                 	db	0
 19054   00FE67  01                 	db	1
 19055   00FE68  01                 	db	1
 19056   00FE69  01                 	db	1
 19057   00FE6A  01                 	db	1
 19058   00FE6B  01                 	db	1
 19059   00FE6C  01                 	db	1
 19060   00FE6D  01                 	db	1
 19061   00FE6E  01                 	db	1
 19062   00FE6F  01                 	db	1
 19063   00FE70  01                 	db	1
 19064   00FE71  01                 	db	1
 19065   00FE72  01                 	db	1
 19066   00FE73  01                 	db	1
 19067   00FE74  01                 	db	1
 19068   00FE75  01                 	db	1
 19069   00FE76  01                 	db	1
 19070   00FE77  01                 	db	1
 19071   00FE78  01                 	db	1
 19072   00FE79  01                 	db	1
 19073   00FE7A  01                 	db	1
 19074   00FE7B  01                 	db	1
 19075   00FE7C  01                 	db	1
 19076   00FE7D  01                 	db	1
 19077   00FE7E  01                 	db	1
 19078   00FE7F  01                 	db	1
 19079   00FE80  01                 	db	1
 19080   00FE81  01                 	db	1
 19081   00FE82  01                 	db	1
 19082   00FE83  01                 	db	1
 19083   00FE84  01                 	db	1
 19084   00FE85  01                 	db	1
 19085   00FE86  01                 	db	1
 19086   00FE87  01                 	db	1
 19087   00FE88  01                 	db	1
 19088   00FE89  01                 	db	1
 19089   00FE8A  01                 	db	1
 19090   00FE8B  01                 	db	1
 19091   00FE8C  01                 	db	1
 19092   00FE8D  01                 	db	1
 19093   00FE8E  01                 	db	1
 19094   00FE8F  01                 	db	1
 19095   00FE90  01                 	db	1
 19096   00FE91  01                 	db	1
 19097   00FE92  01                 	db	1
 19098   00FE93  01                 	db	1
 19099   00FE94  01                 	db	1
 19100   00FE95  01                 	db	1
 19101   00FE96  01                 	db	1
 19102   00FE97  01                 	db	1
 19103   00FE98  00                 	db	0
 19104   00FE99  01                 	db	1
 19105   00FE9A  01                 	db	1
 19106   00FE9B  01                 	db	1
 19107   00FE9C  01                 	db	1
 19108   00FE9D  01                 	db	1
 19109   00FE9E  01                 	db	1
 19110   00FE9F  01                 	db	1
 19111   00FEA0  01                 	db	1
 19112   00FEA1  01                 	db	1
 19113   00FEA2  00                 	db	0
 19114   00FEA3  01                 	db	1
 19115   00FEA4  01                 	db	1
 19116   00FEA5  00                 	db	0
 19117   00FEA6  00                 	db	0
 19118   00FEA7  00                 	db	0
 19119   00FEA8  00                 	db	0
 19120   00FEA9  00                 	db	0
 19121   00FEAA  00                 	db	0
 19122   00FEAB  00                 	db	0
 19123   00FEAC  00                 	db	0
 19124   00FEAD  00                 	db	0
 19125   00FEAE  00                 	db	0
 19126   00FEAF  00                 	db	0
 19127   00FEB0  00                 	db	0
 19128   00FEB1  00                 	db	0
 19129   00FEB2  00                 	db	0
 19130   00FEB3  00                 	db	0
 19131   00FEB4  00                 	db	0
 19132   00FEB5  00                 	db	0
 19133   00FEB6  01                 	db	1
 19134   00FEB7  01                 	db	1
 19135   00FEB8  01                 	db	1
 19136   00FEB9  01                 	db	1
 19137   00FEBA  01                 	db	1
 19138   00FEBB  03                 	db	3
 19139   00FEBC  01                 	db	1
 19140   00FEBD  01                 	db	1
 19141   00FEBE  01                 	db	1
 19142   00FEBF  01                 	db	1
 19143   00FEC0  01                 	db	1
 19144   00FEC1  01                 	db	1
 19145   00FEC2  01                 	db	1
 19146   00FEC3  01                 	db	1
 19147   00FEC4  00                 	db	0
 19148   00FEC5  00                 	db	0
 19149   00FEC6  00                 	db	0
 19150   00FEC7  00                 	db	0
 19151   00FEC8  00                 	db	0
 19152   00FEC9  00                 	db	0
 19153   00FECA  00                 	db	0
 19154   00FECB  00                 	db	0
 19155   00FECC  01                 	db	1
 19156   00FECD  00                 	db	0
 19157   00FECE  01                 	db	1
 19158   00FECF  01                 	db	1
 19159   00FED0  01                 	db	1
 19160   00FED1  01                 	db	1
 19161   00FED2  01                 	db	1
 19162   00FED3  01                 	db	1
 19163   00FED4  00                 	db	0
 19164   00FED5  01                 	db	1
 19165   00FED6  01                 	db	1
 19166   00FED7  01                 	db	1
 19167   00FED8  01                 	db	1
 19168   00FED9  01                 	db	1
 19169   00FEDA  01                 	db	1
 19170   00FEDB  01                 	db	1
 19171   00FEDC  00                 	db	0
 19172   00FEDD  01                 	db	1
 19173   00FEDE  01                 	db	1
 19174   00FEDF  01                 	db	1
 19175   00FEE0  01                 	db	1
 19176   00FEE1  01                 	db	1
 19177   00FEE2  01                 	db	1
 19178   00FEE3  00                 	db	0
 19179   00FEE4  01                 	db	1
 19180   00FEE5  00                 	db	0
 19181   00FEE6  00                 	db	0
 19182   00FEE7  00                 	db	0
 19183   00FEE8  00                 	db	0
 19184   00FEE9  00                 	db	0
 19185   00FEEA  00                 	db	0
 19186   00FEEB  00                 	db	0
 19187   00FEEC  00                 	db	0
 19188   00FEED  00                 	db	0
 19189   00FEEE  00                 	db	0
 19190   00FEEF  00                 	db	0
 19191   00FEF0  00                 	db	0
 19192   00FEF1  00                 	db	0
 19193   00FEF2  00                 	db	0
 19194   00FEF3  00                 	db	0
 19195   00FEF4  00                 	db	0
 19196   00FEF5  01                 	db	1
 19197   00FEF6  01                 	db	1
 19198   00FEF7  01                 	db	1
 19199   00FEF8  01                 	db	1
 19200   00FEF9  01                 	db	1
 19201   00FEFA  01                 	db	1
 19202   00FEFB  01                 	db	1
 19203   00FEFC  01                 	db	1
 19204   00FEFD  01                 	db	1
 19205   00FEFE  01                 	db	1
 19206   00FEFF  01                 	db	1
 19207   00FF00  00                 	db	0
 19208   00FF01  00                 	db	0
 19209   00FF02  01                 	db	1
 19210   00FF03  01                 	db	1
 19211   00FF04  00                 	db	0
 19212   00FF05  00                 	db	0
 19213   00FF06  00                 	db	0
 19214   00FF07  00                 	db	0
 19215   00FF08  00                 	db	0
 19216   00FF09  00                 	db	0
 19217   00FF0A  00                 	db	0
 19218   00FF0B  00                 	db	0
 19219   00FF0C  01                 	db	1
 19220   00FF0D  00                 	db	0
 19221   00FF0E  00                 	db	0
 19222   00FF0F  01                 	db	1
 19223   00FF10  01                 	db	1
 19224   00FF11  01                 	db	1
 19225   00FF12  00                 	db	0
 19226   00FF13  00                 	db	0
 19227   00FF14  00                 	db	0
 19228   00FF15  01                 	db	1
 19229   00FF16  01                 	db	1
 19230   00FF17  01                 	db	1
 19231   00FF18  01                 	db	1
 19232   00FF19  01                 	db	1
 19233   00FF1A  01                 	db	1
 19234   00FF1B  01                 	db	1
 19235   00FF1C  00                 	db	0
 19236   00FF1D  01                 	db	1
 19237   00FF1E  01                 	db	1
 19238   00FF1F  01                 	db	1
 19239   00FF20  01                 	db	1
 19240   00FF21  01                 	db	1
 19241   00FF22  01                 	db	1
 19242   00FF23  01                 	db	1
 19243   00FF24  01                 	db	1
 19244   00FF25  00                 	db	0
 19245   00FF26  00                 	db	0
 19246   00FF27  00                 	db	0
 19247   00FF28  00                 	db	0
 19248   00FF29  00                 	db	0
 19249   00FF2A  00                 	db	0
 19250   00FF2B  01                 	db	1
 19251   00FF2C  01                 	db	1
 19252   00FF2D  00                 	db	0
 19253   00FF2E  00                 	db	0
 19254   00FF2F  01                 	db	1
 19255   00FF30  01                 	db	1
 19256   00FF31  01                 	db	1
 19257   00FF32  00                 	db	0
 19258   00FF33  00                 	db	0
 19259   00FF34  00                 	db	0
 19260   00FF35  01                 	db	1
 19261   00FF36  01                 	db	1
 19262   00FF37  00                 	db	0
 19263   00FF38  01                 	db	1
 19264   00FF39  01                 	db	1
 19265   00FF3A  01                 	db	1
 19266   00FF3B  00                 	db	0
 19267   00FF3C  00                 	db	0
 19268   00FF3D  01                 	db	1
 19269   00FF3E  00                 	db	0
 19270   00FF3F  01                 	db	1
 19271   00FF40  01                 	db	1
 19272   00FF41  01                 	db	1
 19273   00FF42  01                 	db	1
 19274   00FF43  01                 	db	1
 19275   00FF44  00                 	db	0
 19276   00FF45  00                 	db	0
 19277   00FF46  00                 	db	0
 19278   00FF47  00                 	db	0
 19279   00FF48  00                 	db	0
 19280   00FF49  00                 	db	0
 19281   00FF4A  00                 	db	0
 19282   00FF4B  00                 	db	0
 19283   00FF4C  00                 	db	0
 19284   00FF4D  00                 	db	0
 19285   00FF4E  00                 	db	0
 19286   00FF4F  00                 	db	0
 19287   00FF50  00                 	db	0
 19288   00FF51  00                 	db	0
 19289   00FF52  00                 	db	0
 19290   00FF53  01                 	db	1
 19291   00FF54  00                 	db	0
 19292   00FF55  00                 	db	0
 19293   00FF56  00                 	db	0
 19294   00FF57  00                 	db	0
 19295   00FF58  00                 	db	0
 19296   00FF59                     __end_of_priorities:
 19297                           	callstack 0
 19298   00FF59                     _defaultColours:
 19299                           	callstack 0
 19300   00FF59  00                 	db	0
 19301   00FF5A  00                 	db	0
 19302   00FF5B  00                 	db	0
 19303   00FF5C  3F                 	db	63
 19304   00FF5D  3F                 	db	63
 19305   00FF5E  3F                 	db	63
 19306   00FF5F  7F                 	db	127
 19307   00FF60  00                 	db	0
 19308   00FF61  00                 	db	0
 19309   00FF62  00                 	db	0
 19310   00FF63  7F                 	db	127
 19311   00FF64  00                 	db	0
 19312   00FF65  00                 	db	0
 19313   00FF66  00                 	db	0
 19314   00FF67  7F                 	db	127
 19315   00FF68  FA                 	db	250
 19316   00FF69  7F                 	db	127
 19317   00FF6A  00                 	db	0
 19318   00FF6B  9C                 	db	156
 19319   00FF6C  00                 	db	0
 19320   00FF6D  9C                 	db	156
 19321   00FF6E  00                 	db	0
 19322   00FF6F  9C                 	db	156
 19323   00FF70  9C                 	db	156
 19324   00FF71  7F                 	db	127
 19325   00FF72  7F                 	db	127
 19326   00FF73  7F                 	db	127
 19327   00FF74  FF                 	db	255
 19328   00FF75  00                 	db	0
 19329   00FF76  00                 	db	0
 19330   00FF77  00                 	db	0
 19331   00FF78  FF                 	db	255
 19332   00FF79  00                 	db	0
 19333   00FF7A  00                 	db	0
 19334   00FF7B  00                 	db	0
 19335   00FF7C  FF                 	db	255
 19336   00FF7D  FF                 	db	255
 19337   00FF7E  FF                 	db	255
 19338   00FF7F  00                 	db	0
 19339   00FF80  FF                 	db	255
 19340   00FF81  00                 	db	0
 19341   00FF82  FF                 	db	255
 19342   00FF83  00                 	db	0
 19343   00FF84  FF                 	db	255
 19344   00FF85  FF                 	db	255
 19345   00FF86  FF                 	db	255
 19346   00FF87  FF                 	db	255
 19347   00FF88  FF                 	db	255
 19348   00FF89                     __end_of_defaultColours:
 19349                           	callstack 0
 19350   000820                     _paramBlock_absaddr set	2080
 19351   00FF89                     _services:
 19352                           	callstack 0
 19353   00FF89  EB                 	db	low _canService
 19354   00FF8A  FF                 	db	high _canService
 19355   00FF8B  DD                 	db	low _mnsService
 19356   00FF8C  FF                 	db	high _mnsService
 19357   00FF8D  CF                 	db	low _nvService
 19358   00FF8E  FF                 	db	high _nvService
 19359   00FF8F  C1                 	db	low _bootService
 19360   00FF90  FF                 	db	high _bootService
 19361   00FF91  B3                 	db	low _eventTeachService
 19362   00FF92  FF                 	db	high _eventTeachService
 19363   00FF93  A5                 	db	low _eventConsumerService
 19364   00FF94  FF                 	db	high _eventConsumerService
 19365   00FF95                     __end_of_services:
 19366                           	callstack 0
 19367   00FF95                     _bl_version:
 19368                           	callstack 0
 19369   00FF95  42                 	db	66
 19370   00FF96  4C                 	db	76
 19371   00FF97  5F                 	db	95
 19372   00FF98  56                 	db	86
 19373   00FF99  45                 	db	69
 19374   00FF9A  52                 	db	82
 19375   00FF9B  53                 	db	83
 19376   00FF9C  49                 	db	73
 19377   00FF9D  4F                 	db	79
 19378   00FF9E  4E                 	db	78
 19379   00FF9F  3D                 	db	61
 19380   00FFA0                     __end_of_bl_version:
 19381                           	callstack 0
 19382   000848                     _name_absaddr   set	2120
 19383   00FFA0                     _canPri:
 19384                           	callstack 0
 19385   00FFA0  0B                 	db	11
 19386   00FFA1  0A                 	db	10
 19387   00FFA2  09                 	db	9
 19388   00FFA3  08                 	db	8
 19389   00FFA4  00                 	db	0
 19390   00FFA5                     __end_of_canPri:
 19391                           	callstack 0
 19392   00FFA5                     _eventConsumerService:
 19393                           	callstack 0
 19394   00FFA5  06                 	db	6
 19395   00FFA6  02                 	db	2
 19396   00FFA7  00                 	db	0
 19397   00FFA8  00                 	db	0
 19398   00FFA9  22                 	db	low _consumerPowerUp
 19399   00FFAA  77                 	db	high _consumerPowerUp
 19400   00FFAB  84                 	db	low _consumerProcessMessage
 19401   00FFAC  35                 	db	high _consumerProcessMessage
 19402   00FFAD  00                 	db	0
 19403   00FFAE  00                 	db	0
 19404   00FFAF  94                 	db	low _consumerEsdData
 19405   00FFB0  7B                 	db	high _consumerEsdData
 19406   00FFB1  F0                 	db	low _consumerGetDiagnostic
 19407   00FFB2  78                 	db	high _consumerGetDiagnostic
 19408   00FFB3                     __end_of_eventConsumerService:
 19409                           	callstack 0
 19410   00FFB3                     _eventTeachService:
 19411                           	callstack 0
 19412   00FFB3  04                 	db	4
 19413   00FFB4  01                 	db	1
 19414   00FFB5  90                 	db	low _teachFactoryReset
 19415   00FFB6  7C                 	db	high _teachFactoryReset
 19416   00FFB7  AA                 	db	low _teachPowerUp
 19417   00FFB8  76                 	db	high _teachPowerUp
 19418   00FFB9  E6                 	db	low _teachProcessMessage
 19419   00FFBA  16                 	db	high _teachProcessMessage
 19420   00FFBB  00                 	db	0
 19421   00FFBC  00                 	db	0
 19422   00FFBD  60                 	db	low _teachGetESDdata
 19423   00FFBE  78                 	db	high _teachGetESDdata
 19424   00FFBF  20                 	db	low _teachGetDiagnostic
 19425   00FFC0  79                 	db	high _teachGetDiagnostic
 19426   00FFC1                     __end_of_eventTeachService:
 19427                           	callstack 0
 19428   00FFC1                     _bootService:
 19429                           	callstack 0
 19430   00FFC1  0A                 	db	10
 19431   00FFC2  03                 	db	3
 19432   00FFC3  00                 	db	0
 19433   00FFC4  00                 	db	0
 19434   00FFC5  D4                 	db	low _bootPowerUp
 19435   00FFC6  54                 	db	high _bootPowerUp
 19436   00FFC7  72                 	db	low _bootProcessMessage
 19437   00FFC8  64                 	db	high _bootProcessMessage
 19438   00FFC9  00                 	db	0
 19439   00FFCA  00                 	db	0
 19440   00FFCB  F6                 	db	low _bootEsdData
 19441   00FFCC  77                 	db	high _bootEsdData
 19442   00FFCD  00                 	db	0
 19443   00FFCE  00                 	db	0
 19444   00FFCF                     __end_of_bootService:
 19445                           	callstack 0
 19446   00FFCF                     _nvService:
 19447                           	callstack 0
 19448   00FFCF  02                 	db	2
 19449   00FFD0  02                 	db	2
 19450   00FFD1  6A                 	db	low _nvFactoryReset
 19451   00FFD2  76                 	db	high _nvFactoryReset
 19452   00FFD3  E8                 	db	low _nvPowerUp
 19453   00FFD4  76                 	db	high _nvPowerUp
 19454   00FFD5  64                 	db	low _nvProcessMessage
 19455   00FFD6  2B                 	db	high _nvProcessMessage
 19456   00FFD7  00                 	db	0
 19457   00FFD8  00                 	db	0
 19458   00FFD9  12                 	db	low _nvGetESDdata
 19459   00FFDA  7B                 	db	high _nvGetESDdata
 19460   00FFDB  90                 	db	low _nvGetDiagnostic
 19461   00FFDC  78                 	db	high _nvGetDiagnostic
 19462   00FFDD                     __end_of_nvService:
 19463                           	callstack 0
 19464   00FFDD                     _mnsService:
 19465                           	callstack 0
 19466   00FFDD  01                 	db	1
 19467   00FFDE  02                 	db	2
 19468   00FFDF  04                 	db	low _mnsFactoryReset
 19469   00FFE0  6F                 	db	high _mnsFactoryReset
 19470   00FFE1  C0                 	db	low _mnsPowerUp
 19471   00FFE2  46                 	db	high _mnsPowerUp
 19472   00FFE3  06                 	db	low _mnsProcessMessage
 19473   00FFE4  0A                 	db	high _mnsProcessMessage
 19474   00FFE5  BE                 	db	low _mnsPoll
 19475   00FFE6  1E                 	db	high _mnsPoll
 19476   00FFE7  00                 	db	0
 19477   00FFE8  00                 	db	0
 19478   00FFE9  C0                 	db	low _mnsGetDiagnostic
 19479   00FFEA  78                 	db	high _mnsGetDiagnostic
 19480   00FFEB                     __end_of_mnsService:
 19481                           	callstack 0
 19482   00FFEB                     _canService:
 19483                           	callstack 0
 19484   00FFEB  03                 	db	3
 19485   00FFEC  02                 	db	2
 19486   00FFED  B0                 	db	low _canFactoryReset
 19487   00FFEE  7B                 	db	high _canFactoryReset
 19488   00FFEF  4E                 	db	low _canPowerUp
 19489   00FFF0  45                 	db	high _canPowerUp
 19490   00FFF1  BC                 	db	low _canProcessMessage
 19491   00FFF2  55                 	db	high _canProcessMessage
 19492   00FFF3  8A                 	db	low _canPoll
 19493   00FFF4  7C                 	db	high _canPoll
 19494   00FFF5  34                 	db	low _canEsdData
 19495   00FFF6  7B                 	db	high _canEsdData
 19496   00FFF7  CC                 	db	low _canGetDiagnostic
 19497   00FFF8  5E                 	db	high _canGetDiagnostic
 19498   00FFF9                     __end_of_canService:
 19499                           	callstack 0
 19500   00FFF9                     _canTransport:
 19501                           	callstack 0
 19502   00FFF9  5C                 	db	low _canSendMessage
 19503   00FFFA  23                 	db	high _canSendMessage
 19504   00FFFB  0A                 	db	low _canReceiveMessage
 19505   00FFFC  3B                 	db	high _canReceiveMessage
 19506   00FFFD  42                 	db	low _canWaitForTxQueueToDrain
 19507   00FFFE  7C                 	db	high _canWaitForTxQueueToDrain
 19508   00FFFF                     __end_of_canTransport:
 19509                           	callstack 0
 19510   000820                     _paramBlock_absaddr set	2080
 19511   00FFFF  00                 	db	0	; dummy byte at the end
 19512   00FE58                     __smallconst    set	__pmediumconst
 19513   00FE58                     __mediumconst   set	__pmediumconst
 19514   000003                     __activetblptr  equ	3
 19515                           
 19516                           	psect	_paramBlock_text
 19517   000820                     __p_paramBlock_text:
 19518                           	callstack 0
 19519   000820                     _paramBlock:
 19520                           	callstack 0
 19521   000820  A5                 	db	165
 19522   000821  61                 	db	97
 19523   000822  FC                 	db	252
 19524   000823  FF                 	db	255
 19525   000824  FC                 	db	252
 19526   000825  30                 	db	48
 19527   000826  01                 	db	1
 19528   000827  09                 	db	9
 19529   000828  17                 	db	23
 19530   000829  01                 	db	1
 19531   00082A  00                 	db	0
 19532   00082B  08                 	db	8
 19533   00082C  00                 	db	0
 19534   00082D  00                 	db	0
 19535   00082E  00                 	db	0
 19536   00082F  00                 	db	0
 19537   000830  00                 	db	0
 19538   000831  00                 	db	0
 19539   000832  01                 	db	1
 19540   000833  01                 	db	1
 19541   000834  00                 	db	0
 19542   000835  00                 	db	0
 19543   000836  00                 	db	0
 19544   000837  00                 	db	0
 19545   000838  14                 	db	20
 19546   000839  00                 	db	0
 19547   00083A  48                 	db	72
 19548   00083B  08                 	db	8
 19549   00083C  00                 	db	0
 19550   00083D  00                 	db	0
 19551   00083E  BD                 	db	189
 19552   00083F  04                 	db	4
 19553   000840                     __end_of_paramBlock:
 19554                           	callstack 0
 19555   000848                     _name_absaddr   set	2120
 19556                           
 19557                           	psect	_name_text
 19558   000848                     __p_name_text:
 19559                           	callstack 0
 19560   000848                     _name:
 19561                           	callstack 0
 19562   000848  41                 	db	65
 19563   000849  52                 	db	82
 19564   00084A  47                 	db	71
 19565   00084B  42                 	db	66
 19566   00084C  20                 	db	32
 19567   00084D  20                 	db	32
 19568   00084E  20                 	db	32
 19569   00084F  00                 	db	0
 19570   000850                     __end_of_name:
 19571                           	callstack 0
 19572   0000F9                     _DMAnSSA        set	249
 19573   000043                     _NVMADR         set	67
 19574   0000F0                     _DMAnDSA        set	240
 19575   0000EE                     _DMAnDSZ        set	238
 19576   0000F7                     _DMAnSSZ        set	247
 19577   000082                     _SPI1TCNT       set	130
 19578   000087                     _SPI1STATUSbits set	135
 19579   00006A                     _MD1CON0bits    set	106
 19580   0000FE                     _DMAnAIRQ       set	254
 19581   0000FF                     _DMAnSIRQ       set	255
 19582   0000FD                     _DMAnCON1bits   set	253
 19583   0000E8                     _DMASELECT      set	232
 19584   00006C                     _MD1SRC         set	108
 19585   00006D                     _MD1CARL        set	109
 19586   00006E                     _MD1CARH        set	110
 19587   00006B                     _MD1CON1        set	107
 19588   00006A                     _MD1CON0        set	106
 19589   0000DF                     _CLCnGLS3       set	223
 19590   0000DE                     _CLCnGLS2       set	222
 19591   0000DD                     _CLCnGLS1       set	221
 19592   0000DC                     _CLCnGLS0       set	220
 19593   0000DB                     _CLCnSEL3       set	219
 19594   0000DA                     _CLCnSEL2       set	218
 19595   0000D9                     _CLCnSEL1       set	217
 19596   0000D8                     _CLCnSEL0       set	216
 19597   0000D7                     _CLCnPOL        set	215
 19598   0000D6                     _CLCnCON        set	214
 19599   0000D5                     _CLCSELECT      set	213
 19600   00008A                     _SPI1INTF       set	138
 19601   000089                     _SPI1BAUDbits   set	137
 19602   00008C                     _SPI1CLKbits    set	140
 19603   000086                     _SPI1CON2bits   set	134
 19604   000085                     _SPI1CON1bits   set	133
 19605   000088                     _SPI1TWIDTHbits set	136
 19606   000084                     _SPI1CON0bits   set	132
 19607   0000AF                     _OSCCON3bits    set	175
 19608   0000AD                     _OSCCON1bits    set	173
 19609   000042                     _NVMLOCK        set	66
 19610   000046                     _NVMDATL        set	70
 19611   000043                     _NVMADRL        set	67
 19612   000044                     _NVMADRH        set	68
 19613   000045                     _NVMADRU        set	69
 19614   000040                     _NVMCON0bits    set	64
 19615   000041                     _NVMCON1bits    set	65
 19616   0000FC                     _DMAnCON0bits   set	252
 19617   000081                     _SPI1TXB        set	129
 19618   000158                     _C1TXQUA        set	344
 19619   00017C                     _C1FIFOUA3      set	380
 19620   000170                     _C1FIFOUA2      set	368
 19621   000164                     _C1FIFOUA1      set	356
 19622   00014C                     _C1FIFOBA       set	332
 19623   000102                     _C1CONUbits     set	258
 19624   000103                     _C1CONTbits     set	259
 19625   000175                     _C1FIFOCON3Hbits set	373
 19626   000179                     _C1FIFOSTA3Hbits set	377
 19627   00016D                     _C1FIFOSTA2Hbits set	365
 19628   00016C                     _C1FIFOSTA2Lbits set	364
 19629   000138                     _C1BDIAG0Lbits  set	312
 19630   000139                     _C1BDIAG0Hbits  set	313
 19631   000136                     _C1TRECU        set	310
 19632   000160                     _C1FIFOSTA1Lbits set	352
 19633   00015D                     _C1FIFOCON1Hbits set	349
 19634   00011D                     _C1INTHbits     set	285
 19635   000178                     _C1FIFOSTA3Lbits set	376
 19636   00011F                     _C1INTTbits     set	287
 19637   00011E                     _C1INTUbits     set	286
 19638   000180                     _C1FLTCON0L     set	384
 19639   000193                     _C1MASK0T       set	403
 19640   000192                     _C1MASK0U       set	402
 19641   000191                     _C1MASK0H       set	401
 19642   000190                     _C1MASK0L       set	400
 19643   00018F                     _C1FLTOBJ0T     set	399
 19644   00018E                     _C1FLTOBJ0U     set	398
 19645   00018D                     _C1FLTOBJ0H     set	397
 19646   00018C                     _C1FLTOBJ0L     set	396
 19647   000177                     _C1FIFOCON3T    set	375
 19648   000176                     _C1FIFOCON3U    set	374
 19649   000175                     _C1FIFOCON3H    set	373
 19650   000174                     _C1FIFOCON3L    set	372
 19651   00016B                     _C1FIFOCON2T    set	363
 19652   00016A                     _C1FIFOCON2U    set	362
 19653   000169                     _C1FIFOCON2H    set	361
 19654   000168                     _C1FIFOCON2L    set	360
 19655   00015F                     _C1FIFOCON1T    set	351
 19656   00015E                     _C1FIFOCON1U    set	350
 19657   00015D                     _C1FIFOCON1H    set	349
 19658   00015C                     _C1FIFOCON1L    set	348
 19659   000153                     _C1TXQCONT      set	339
 19660   000152                     _C1TXQCONU      set	338
 19661   000151                     _C1TXQCONH      set	337
 19662   000150                     _C1TXQCONL      set	336
 19663   000107                     _C1NBTCFGT      set	263
 19664   000106                     _C1NBTCFGU      set	262
 19665   000105                     _C1NBTCFGH      set	261
 19666   000104                     _C1NBTCFGL      set	260
 19667   000103                     _C1CONT         set	259
 19668   000102                     _C1CONU         set	258
 19669   000101                     _C1CONH         set	257
 19670   000100                     _C1CONL         set	256
 19671   000101                     _C1CONHbits     set	257
 19672   000217                     _RC6PPS         set	535
 19673   000216                     _RC5PPS         set	534
 19674   000215                     _RC4PPS         set	533
 19675   000214                     _RC3PPS         set	532
 19676   000213                     _RC2PPS         set	531
 19677   000212                     _RC1PPS         set	530
 19678   000211                     _RC0PPS         set	529
 19679   00023D                     _CANRXPPS       set	573
 19680   00020B                     _RB2PPS         set	523
 19681   000330                     _T4CONbits      set	816
 19682   000324                     _T2CONbits      set	804
 19683   00032F                     _T4PR           set	815
 19684   000333                     _T4RST          set	819
 19685   000331                     _T4HLT          set	817
 19686   000332                     _T4CLKCON       set	818
 19687   000330                     _T4CON          set	816
 19688   000323                     _T2PR           set	803
 19689   000327                     _T2RST          set	807
 19690   000325                     _T2HLT          set	805
 19691   000326                     _T2CLKCON       set	806
 19692   000324                     _T2CON          set	804
 19693   000318                     _TMR0L          set	792
 19694   000319                     _TMR0H          set	793
 19695   00031A                     _T0CON0bits     set	794
 19696   00031B                     _T0CON1bits     set	795
 19697   000362                     _IPR0bits       set	866
 19698   000367                     _IPR5           set	871
 19699   001B2F                     _TMR0IP         set	6959
 19700   00250F                     _TMR0IE         set	9487
 19701   00258F                     _TMR0IF         set	9615
 19702   0004C0                     _LATCbits       set	1216
 19703   0004C8                     _TRISC          set	1224
 19704   000459                     _IVTLOCKbits    set	1113
 19705   000459                     _IVTLOCK        set	1113
 19706   00045D                     _IVTBASEL       set	1117
 19707   00045E                     _IVTBASEH       set	1118
 19708   00045F                     _IVTBASEU       set	1119
 19709   0004BF                     _LATBbits       set	1215
 19710   0004C6                     _TRISAbits      set	1222
 19711   0004F5                     _TABLAT         set	1269
 19712   0004F6                     _TBLPTRL        set	1270
 19713   0004F7                     _TBLPTRH        set	1271
 19714   0004F8                     _TBLPTRU        set	1272
 19715   0004CE                     _PORTAbits      set	1230
 19716   00049E                     _PIE0bits       set	1182
 19717   0004AE                     _PIR0bits       set	1198
 19718   0004C7                     _TRISBbits      set	1223
 19719   0004D6                     _INTCON0bits    set	1238
 19720   000410                     _ANSELC         set	1040
 19721   000408                     _ANSELB         set	1032
 19722   000400                     _ANSELA         set	1024
 19723                           
 19724                           ; #config settings
 19725                           
 19726                           	psect	cinit
 19727   006AE4                     __pcinit:
 19728                           	callstack 0
 19729   006AE4                     start_initialization:
 19730                           	callstack 0
 19731   006AE4                     __initialization:
 19732                           	callstack 0
 19733                           
 19734                           ; Initialize objects allocated to BANK5 (3 bytes)
 19735                           ; load TBLPTR registers with __pidataBANK5
 19736   006AE4  0EB6               	movlw	low __pidataBANK5
 19737   006AE6  6EF6               	movwf	tblptrl,c
 19738   006AE8  0E7C               	movlw	high __pidataBANK5
 19739   006AEA  6EF7               	movwf	tblptrh,c
 19740   006AEC  0E00               	movlw	low (__pidataBANK5 shr (0+16))
 19741   006AEE  6EF8               	movwf	tblptru,c
 19742   006AF0  0009               	tblrd		*+	;fetch initializer
 19743   006AF2  C4F5 F5FB          	movff	tablat,__pdataBANK5
 19744   006AF6  0009               	tblrd		*+	;fetch initializer
 19745   006AF8  C4F5 F5FC          	movff	tablat,__pdataBANK5+1
 19746   006AFC  0009               	tblrd		*+	;fetch initializer
 19747   006AFE  C4F5 F5FD          	movff	tablat,__pdataBANK5+2
 19748                           
 19749                           ; Clear objects allocated to BIGRAM (1405 bytes)
 19750   006B02  EE02  F0FC         	lfsr	0,__pbssBIGRAM
 19751   006B06  EE11 F17D          	lfsr	1,1405
 19752   006B0A                     clear_0:
 19753   006B0A  6AEE               	clrf	postinc0,c
 19754   006B0C  50E5               	movf	postdec1,w,c
 19755   006B0E  50E1               	movf	fsr1l,w,c
 19756   006B10  E1FC               	bnz	clear_0
 19757   006B12  50E2               	movf	fsr1h,w,c
 19758   006B14  E1FA               	bnz	clear_0
 19759                           
 19760                           ; Clear objects allocated to BANK8 (252 bytes)
 19761   006B16  EE02  F000         	lfsr	0,__pbssBANK8
 19762   006B1A  0EFC               	movlw	252
 19763   006B1C                     clear_1:
 19764   006B1C  6AEE               	clrf	postinc0,c
 19765   006B1E  06E8               	decf	wreg,f,c
 19766   006B20  E1FD               	bnz	clear_1
 19767                           
 19768                           ; Clear objects allocated to BANK7 (255 bytes)
 19769   006B22  EE01  F300         	lfsr	0,__pbssBANK7
 19770   006B26  EE10 F0FF          	lfsr	1,255
 19771   006B2A                     clear_2:
 19772   006B2A  6AEE               	clrf	postinc0,c
 19773   006B2C  50E5               	movf	postdec1,w,c
 19774   006B2E  50E1               	movf	fsr1l,w,c
 19775   006B30  E1FC               	bnz	clear_2
 19776   006B32  50E2               	movf	fsr1h,w,c
 19777   006B34  E1FA               	bnz	clear_2
 19778                           
 19779                           ; Clear objects allocated to BANK6 (192 bytes)
 19780   006B36  EE01  F200         	lfsr	0,__pbssBANK6
 19781   006B3A  0EC0               	movlw	192
 19782   006B3C                     clear_3:
 19783   006B3C  6AEE               	clrf	postinc0,c
 19784   006B3E  06E8               	decf	wreg,f,c
 19785   006B40  E1FD               	bnz	clear_3
 19786                           
 19787                           ; Clear objects allocated to BANK5 (110 bytes)
 19788   006B42  EE01  F160         	lfsr	0,__pbssBANK5
 19789   006B46  0E6E               	movlw	110
 19790   006B48                     clear_4:
 19791   006B48  6AEE               	clrf	postinc0,c
 19792   006B4A  06E8               	decf	wreg,f,c
 19793   006B4C  E1FD               	bnz	clear_4
 19794                           
 19795                           ;
 19796                           ; Setup IVTBASE
 19797                           ;
 19798   00045D                     IVTBASEL        equ	1117
 19799   00045E                     IVTBASEH        equ	1118
 19800   00045F                     IVTBASEU        equ	1119
 19801   006B4E  0104               	movlb	4
 19802   006B50  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 19803   006B52  6F5D               	movwf	93,b
 19804   006B54  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 19805   006B56  6F5E               	movwf	94,b
 19806   006B58  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 19807   006B5A  6F5F               	movwf	95,b
 19808   006B5C                     end_of_initialization:
 19809                           	callstack 0
 19810   006B5C                     __end_of__initialization:
 19811                           	callstack 0
 19812   006B5C  0100               	movlb	0
 19813   006B5E  EF00  F02E         	goto	_main	;jump to C main() function
 19814                           
 19815                           	psect	bssBANK5
 19816   000560                     __pbssBANK5:
 19817                           	callstack 0
 19818   000560                     _ledTimer:
 19819                           	callstack 0
 19820   000560                     	ds	4
 19821   000564                     _uptimeTimer:
 19822                           	callstack 0
 19823   000564                     	ds	4
 19824   000568                     _heartbeatTimer:
 19825                           	callstack 0
 19826   000568                     	ds	4
 19827   00056C                     _pbTimer:
 19828                           	callstack 0
 19829   00056C                     	ds	4
 19830   000570                     _enumerationStartTime:
 19831                           	callstack 0
 19832   000570                     	ds	4
 19833   000574                     _subtestTime:
 19834                           	callstack 0
 19835   000574                     	ds	4
 19836   000578                     _testTime:
 19837                           	callstack 0
 19838   000578                     	ds	4
 19839   00057C                     _flashTime:
 19840                           	callstack 0
 19841   00057C                     	ds	4
 19842   000580                     _flashBlock:
 19843                           	callstack 0
 19844   000580                     	ds	3
 19845   000583                     _offset:
 19846                           	callstack 0
 19847   000583                     	ds	2
 19848   000585                     _timedResponseCallback:
 19849                           	callstack 0
 19850   000585                     	ds	2
 19851   000587                     _flashCounter:
 19852                           	callstack 0
 19853   000587                     	ds	2
 19854   000589                     _ledState:
 19855                           	callstack 0
 19856   000589                     	ds	2
 19857   00058B                     _previousNN:
 19858                           	callstack 0
 19859   00058B                     	ds	2
 19860   00058D                     _nn:
 19861                           	callstack 0
 19862   00058D                     	ds	2
 19863   00058F                     _transport:
 19864                           	callstack 0
 19865   00058F                     	ds	2
 19866   000591                     _refreshRequired:
 19867                           	callstack 0
 19868   000591                     	ds	1
 19869   000592                     _flashState:
 19870                           	callstack 0
 19871   000592                     	ds	1
 19872   000593                     _timedResponseDelay:
 19873                           	callstack 0
 19874   000593                     	ds	1
 19875   000594                     _eeBootFlag:
 19876                           	callstack 0
 19877   000594                     	ds	1
 19878   000595                     _timedResponseStep:
 19879                           	callstack 0
 19880   000595                     	ds	1
 19881   000596                     _timedResponseType:
 19882                           	callstack 0
 19883   000596                     	ds	1
 19884   000597                     _timedResponseAllServicesFlag:
 19885                           	callstack 0
 19886   000597                     	ds	1
 19887   000598                     _timedResponseServiceIndex:
 19888                           	callstack 0
 19889   000598                     	ds	1
 19890   000599                     _timerExtension2:
 19891                           	callstack 0
 19892   000599                     	ds	1
 19893   00059A                     _timerExtension1:
 19894                           	callstack 0
 19895   00059A                     	ds	1
 19896   00059B                     _flashFlags:
 19897                           	callstack 0
 19898   00059B                     	ds	1
 19899   00059C                     _heartbeatSequence:
 19900                           	callstack 0
 19901   00059C                     	ds	1
 19902   00059D                     _pbWasPushed:
 19903                           	callstack 0
 19904   00059D                     	ds	1
 19905   00059E                     _setupModePreviousMode:
 19906                           	callstack 0
 19907   00059E                     	ds	1
 19908   00059F                     _last_mode_flags:
 19909                           	callstack 0
 19910   00059F                     	ds	1
 19911   0005A0                     _last_mode_state:
 19912                           	callstack 0
 19913   0005A0                     	ds	1
 19914   0005A1                     _mode_state:
 19915                           	callstack 0
 19916   0005A1                     	ds	1
 19917   0005A2                     _timedResponseOpcode:
 19918                           	callstack 0
 19919   0005A2                     	ds	1
 19920   0005A3                     _errno:
 19921                           	callstack 0
 19922   0005A3                     	ds	1
 19923   0005A4                     _mode_flags:
 19924                           	callstack 0
 19925   0005A4                     	ds	1
 19926   0005A5                     _enumerationState:
 19927                           	callstack 0
 19928   0005A5                     	ds	1
 19929   0005A6                     _EnumerationState:
 19930                           	callstack 0
 19931   0005A6                     	ds	1
 19932   0005A7                     _canTransmitFailed:
 19933                           	callstack 0
 19934   0005A7                     	ds	1
 19935   0005A8                     _canId:
 19936                           	callstack 0
 19937   0005A8                     	ds	1
 19938   0005A9                     _bootloaderVersion:
 19939                           	callstack 0
 19940   0005A9                     	ds	1
 19941   0005AA                     _bootloaderType:
 19942                           	callstack 0
 19943   0005AA                     	ds	1
 19944   0005AB                     _mnsDiagnostics:
 19945                           	callstack 0
 19946   0005AB                     	ds	14
 19947   0005B9                     _nvDiagnostics:
 19948                           	callstack 0
 19949   0005B9                     	ds	6
 19950   0005BF                     _consumerDiagnostics:
 19951                           	callstack 0
 19952   0005BF                     	ds	6
 19953   0005C5                     _rxQueue:
 19954                           	callstack 0
 19955   0005C5                     	ds	5
 19956   0005CA                     _teachDiagnostics:
 19957                           	callstack 0
 19958   0005CA                     	ds	4
 19959                           
 19960                           	psect	dataBANK5
 19961   0005FB                     __pdataBANK5:
 19962                           	callstack 0
 19963   0005FB                     _flashBuffer:
 19964                           	callstack 0
 19965   0005FB                     	ds	2
 19966   0005FD                     _first:
 19967                           	callstack 0
 19968   0005FD                     	ds	1
 19969                           
 19970                           	psect	bssBANK6
 19971   000600                     __pbssBANK6:
 19972                           	callstack 0
 19973   000600                     _nvCache:
 19974                           	callstack 0
 19975   000600                     	ds	49
 19976   000631                     _enumerationResults:
 19977                           	callstack 0
 19978   000631                     	ds	16
 19979   000641                     _flashFlushTime:
 19980                           	callstack 0
 19981   000641                     	ds	4
 19982   000645                     _timedResponseTime:
 19983                           	callstack 0
 19984   000645                     	ds	4
 19985   000649                     _rxBuffers:
 19986                           	callstack 0
 19987   000649                     	ds	72
 19988   000691                     _canDiagnostics:
 19989                           	callstack 0
 19990   000691                     	ds	38
 19991   0006B7                     _tmpMessage:
 19992                           	callstack 0
 19993   0006B7                     	ds	9
 19994                           
 19995                           	psect	bssBANK7
 19996   000700                     __pbssBANK7:
 19997                           	callstack 0
 19998   000700                     _ledPaletteIndexes:
 19999                           	callstack 0
 20000   000700                     	ds	255
 20001                           
 20002                           	psect	bssBANK8
 20003   000800                     __pbssBANK8:
 20004                           	callstack 0
 20005   000800                     _evs:
 20006                           	callstack 0
 20007   000800                     	ds	252
 20008                           
 20009                           	psect	bssBIGRAM
 20010   0008FC                     __pbssBIGRAM:
 20011                           	callstack 0
 20012   0008FC                     _eventChains:
 20013                           	callstack 0
 20014   0008FC                     	ds	640
 20015   000B7C                     _leds:
 20016                           	callstack 0
 20017   000B7C                     	ds	765
 20018                           
 20019                           	psect	cstackBANK5
 20020   0005CE                     __pcstackBANK5:
 20021                           	callstack 0
 20022   0005CE                     ??_mnsProcessMessage:
 20023                           
 20024                           ; 1 bytes @ 0x0
 20025   0005CE                     	ds	30
 20026   0005EC                     ??_poll:
 20027                           
 20028                           ; 1 bytes @ 0x1E
 20029   0005EC                     	ds	4
 20030   0005F0                     poll@handled:
 20031                           	callstack 0
 20032                           
 20033                           ; 1 bytes @ 0x22
 20034   0005F0                     	ds	1
 20035   0005F1                     poll@i:
 20036                           	callstack 0
 20037                           
 20038                           ; 1 bytes @ 0x23
 20039   0005F1                     	ds	1
 20040   0005F2                     poll@m:
 20041                           	callstack 0
 20042                           
 20043                           ; 9 bytes @ 0x24
 20044   0005F2                     	ds	9
 20045                           
 20046                           	psect	cstackCOMRAM
 20047   000501                     __pcstackCOMRAM:
 20048                           	callstack 0
 20049   000501                     ?_getNextWriteMessage:
 20050                           	callstack 0
 20051   000501                     ?_pop:
 20052                           	callstack 0
 20053   000501                     ?_getNV:
 20054                           	callstack 0
 20055   000501                     ?___awdiv:
 20056                           	callstack 0
 20057   000501                     ?___awmod:
 20058                           	callstack 0
 20059   000501                     ?_tickGet:
 20060                           	callstack 0
 20061   000501                     ?___lmul:
 20062                           	callstack 0
 20063   000501                     bootEsdData@id:
 20064                           	callstack 0
 20065   000501                     canEsdData@id:
 20066                           	callstack 0
 20067   000501                     CAN1_OperationModeSet@status:
 20068                           	callstack 0
 20069   000501                     consumerPowerUp@temp:
 20070                           	callstack 0
 20071   000501                     isConsumedEvent@eventIndex:
 20072                           	callstack 0
 20073   000501                     consumerEsdData@index:
 20074                           	callstack 0
 20075   000501                     teachGetESDdata@id:
 20076                           	callstack 0
 20077   000501                     evtIdxToTableIndex@evtIdx:
 20078                           	callstack 0
 20079   000501                     tableIndexToEvtIdx@tableIndex:
 20080                           	callstack 0
 20081   000501                     nvGetESDdata@id:
 20082                           	callstack 0
 20083   000501                     setTimedResponseDelay@delay:
 20084                           	callstack 0
 20085   000501                     _isEvent$5102:
 20086                           	callstack 0
 20087   000501                     initARGB@ledno:
 20088                           	callstack 0
 20089   000501                     updateLedRange@end_ledno:
 20090                           	callstack 0
 20091   000501                     APP_nvValidate@value:
 20092                           	callstack 0
 20093   000501                     APP_nvValueChanged@value:
 20094                           	callstack 0
 20095   000501                     prepareSelfEnumResponse@txFifoObj:
 20096                           	callstack 0
 20097   000501                     sendRTR@txFifoObj:
 20098                           	callstack 0
 20099   000501                     getNextWriteMessage@q:
 20100                           	callstack 0
 20101   000501                     pop@q:
 20102                           	callstack 0
 20103   000501                     APP_preProcessMessage@m:
 20104                           	callstack 0
 20105   000501                     APP_postProcessMessage@m:
 20106                           	callstack 0
 20107   000501                     sendByte@p:
 20108                           	callstack 0
 20109   000501                     ___awdiv@dividend:
 20110                           	callstack 0
 20111   000501                     ___awmod@dividend:
 20112                           	callstack 0
 20113   000501                     memcpy@d1:
 20114                           	callstack 0
 20115   000501                     EEPROM_Read@index:
 20116                           	callstack 0
 20117   000501                     EEPROM_WriteNoVerify@index:
 20118                           	callstack 0
 20119   000501                     FLASH_Read@address:
 20120                           	callstack 0
 20121   000501                     ___lmul@multiplier:
 20122                           	callstack 0
 20123   000501                     ??_getNumTxBuffersInUse:
 20124   000501                     ??_getNumRxBuffersInUse:
 20125   000501                     ??_have:
 20126   000501                     ??_findServiceIndex:
 20127   000501                     ??_showStatus:
 20128   000501                     ??_eraseFlashBlock:
 20129   000501                     ??_loadFlashBlock:
 20130   000501                     ??_initTicker:
 20131   000501                     
 20132                           ; 1 bytes @ 0x0
 20133   000501                     	ds	1
 20134   000502                     CAN1_OperationModeSet@requestMode:
 20135                           	callstack 0
 20136   000502                     initTicker@priority:
 20137                           	callstack 0
 20138   000502                     isEvent@opc:
 20139                           	callstack 0
 20140   000502                     updateLedRange@colourIndexPair:
 20141                           	callstack 0
 20142   000502                     APP_nvValueChanged@oldValue:
 20143                           	callstack 0
 20144   000502                     
 20145                           ; 1 bytes @ 0x1
 20146   000502                     	ds	1
 20147   000503                     showStatus@s:
 20148                           	callstack 0
 20149   000503                     initTicker@divider:
 20150                           	callstack 0
 20151   000503                     findServiceIndex@serviceType:
 20152                           	callstack 0
 20153   000503                     have@id:
 20154                           	callstack 0
 20155   000503                     updateLedRange@start_ledno:
 20156                           	callstack 0
 20157   000503                     ___awdiv@divisor:
 20158                           	callstack 0
 20159   000503                     ___awmod@divisor:
 20160                           	callstack 0
 20161   000503                     memcpy@s1:
 20162                           	callstack 0
 20163   000503                     ??_getNextWriteMessage:
 20164   000503                     ??_pop:
 20165   000503                     ??_getNV:
 20166                           
 20167                           ; 1 bytes @ 0x2
 20168   000503                     	ds	1
 20169   000504                     getNV@index:
 20170                           	callstack 0
 20171   000504                     EEPROM_WriteNoVerify@value:
 20172                           	callstack 0
 20173   000504                     eraseFlashBlock@interruptEnabled:
 20174                           	callstack 0
 20175   000504                     initTicker@i:
 20176                           	callstack 0
 20177   000504                     findServiceIndex@i:
 20178                           	callstack 0
 20179   000504                     have@i:
 20180                           	callstack 0
 20181   000504                     updateLedRange@ledno:
 20182                           	callstack 0
 20183   000504                     ??_EEPROM_Read:
 20184   000504                     ??_FLASH_Read:
 20185                           
 20186                           ; 1 bytes @ 0x3
 20187   000504                     	ds	1
 20188   000505                     getParameterFlags@flags:
 20189                           	callstack 0
 20190   000505                     flushFlashBlock@interruptEnabled:
 20191                           	callstack 0
 20192   000505                     tickGet@IntFlag2:
 20193                           	callstack 0
 20194   000505                     startTimedResponse@serviceIndex:
 20195                           	callstack 0
 20196   000505                     doFlash@ledno:
 20197                           	callstack 0
 20198   000505                     ___awdiv@counter:
 20199                           	callstack 0
 20200   000505                     ___awmod@counter:
 20201                           	callstack 0
 20202   000505                     getNumTxBuffersInUse@i16:
 20203                           	callstack 0
 20204   000505                     getNumRxBuffersInUse@i16:
 20205                           	callstack 0
 20206   000505                     memcpy@n:
 20207                           	callstack 0
 20208   000505                     ___lmul@multiplicand:
 20209                           	callstack 0
 20210   000505                     ??_EEPROM_WriteNoVerify:
 20211   000505                     
 20212                           ; 1 bytes @ 0x4
 20213   000505                     	ds	1
 20214   000506                     tickGet@IntFlag1:
 20215                           	callstack 0
 20216   000506                     ___awdiv@sign:
 20217                           	callstack 0
 20218   000506                     ___awmod@sign:
 20219                           	callstack 0
 20220   000506                     startTimedResponse@callback:
 20221                           	callstack 0
 20222   000506                     FLASH_Write@index:
 20223                           	callstack 0
 20224   000506                     ??_getParameter:
 20225                           
 20226                           ; 1 bytes @ 0x5
 20227   000506                     	ds	1
 20228   000507                     ?_readNVM:
 20229                           	callstack 0
 20230   000507                     ?_canGetDiagnostic:
 20231                           	callstack 0
 20232   000507                     ?_consumerGetDiagnostic:
 20233                           	callstack 0
 20234   000507                     ?_teachGetDiagnostic:
 20235                           	callstack 0
 20236   000507                     ?_mnsGetDiagnostic:
 20237                           	callstack 0
 20238   000507                     ?_nvGetDiagnostic:
 20239                           	callstack 0
 20240   000507                     ___awdiv@quotient:
 20241                           	callstack 0
 20242   000507                     memcpy@d:
 20243                           	callstack 0
 20244   000507                     readNVM@index:
 20245                           	callstack 0
 20246   000507                     tickGet@currentTime:
 20247                           	callstack 0
 20248   000507                     
 20249                           ; 1 bytes @ 0x6
 20250   000507                     	ds	1
 20251   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 20252                           	callstack 0
 20253   000508                     startTimedResponse@type:
 20254                           	callstack 0
 20255   000508                     pop@ret:
 20256                           	callstack 0
 20257   000508                     
 20258                           ; 1 bytes @ 0x7
 20259   000508                     	ds	1
 20260   000509                     consumerGetDiagnostic@index:
 20261                           	callstack 0
 20262   000509                     teachGetDiagnostic@index:
 20263                           	callstack 0
 20264   000509                     mnsGetDiagnostic@index:
 20265                           	callstack 0
 20266   000509                     getParameter@idx:
 20267                           	callstack 0
 20268   000509                     nvGetDiagnostic@index:
 20269                           	callstack 0
 20270   000509                     FLASH_Write@value:
 20271                           	callstack 0
 20272   000509                     memcpy@s:
 20273                           	callstack 0
 20274   000509                     EEPROM_Write@index:
 20275                           	callstack 0
 20276   000509                     ___lmul@product:
 20277                           	callstack 0
 20278   000509                     ??_canGetDiagnostic:
 20279   000509                     ??_APP_nvDefault:
 20280   000509                     
 20281                           ; 1 bytes @ 0x8
 20282   000509                     	ds	1
 20283   00050A                     canGetDiagnostic@index:
 20284                           	callstack 0
 20285   00050A                     ??_readNVM:
 20286   00050A                     ??_FLASH_Write:
 20287                           
 20288                           ; 1 bytes @ 0x9
 20289   00050A                     	ds	1
 20290   00050B                     ?___lldiv:
 20291                           	callstack 0
 20292   00050B                     startEnumeration@txWaiting:
 20293                           	callstack 0
 20294   00050B                     APP_nvDefault@index:
 20295                           	callstack 0
 20296   00050B                     memcpy@tmp:
 20297                           	callstack 0
 20298   00050B                     ___lldiv@dividend:
 20299                           	callstack 0
 20300   00050B                     ??_handleSelfEnumeration:
 20301   00050B                     ??_APP_testMode:
 20302   00050B                     ??_loop:
 20303   00050B                     ??_leds_poll:
 20304                           
 20305                           ; 1 bytes @ 0xA
 20306   00050B                     	ds	1
 20307   00050C                     startEnumeration@i:
 20308                           	callstack 0
 20309   00050C                     getNextWriteMessage@wr:
 20310                           	callstack 0
 20311   00050C                     EEPROM_Write@value:
 20312                           	callstack 0
 20313   00050C                     readNVM@type:
 20314                           	callstack 0
 20315                           
 20316                           ; 1 bytes @ 0xB
 20317   00050C                     	ds	1
 20318   00050D                     ?_getEN:
 20319                           	callstack 0
 20320   00050D                     ?_getNN:
 20321                           	callstack 0
 20322   00050D                     ?_getEv:
 20323                           	callstack 0
 20324   00050D                     bootPowerUp@b:
 20325                           	callstack 0
 20326   00050D                     getEv@evNum:
 20327                           	callstack 0
 20328   00050D                     mnsPowerUp@i:
 20329                           	callstack 0
 20330   00050D                     canPowerUp@temp:
 20331                           	callstack 0
 20332   00050D                     canSendMessage@mp:
 20333                           	callstack 0
 20334   00050D                     ??_loadNvCache:
 20335   00050D                     ??_getEVs:
 20336   00050D                     
 20337                           ; 1 bytes @ 0xC
 20338   00050D                     	ds	1
 20339   00050E                     bootPowerUp@found:
 20340                           	callstack 0
 20341   00050E                     mnsPowerUp@temp:
 20342                           	callstack 0
 20343   00050E                     writeNVM@index:
 20344                           	callstack 0
 20345                           
 20346                           ; 3 bytes @ 0xD
 20347   00050E                     	ds	1
 20348   00050F                     APP_testMode@c:
 20349                           	callstack 0
 20350   00050F                     bootPowerUp@i:
 20351                           	callstack 0
 20352   00050F                     handleSelfEnumeration@receivedCanId:
 20353                           	callstack 0
 20354   00050F                     loadNvCache@temp:
 20355                           	callstack 0
 20356   00050F                     ___lldiv@divisor:
 20357                           	callstack 0
 20358   00050F                     ??_canSendMessage:
 20359   00050F                     ??_getEN:
 20360   00050F                     ??_getNN:
 20361   00050F                     ??_getEv:
 20362                           
 20363                           ; 1 bytes @ 0xE
 20364   00050F                     	ds	1
 20365   000510                     APP_testMode@step:
 20366                           	callstack 0
 20367   000510                     canReceiveMessage@m:
 20368                           	callstack 0
 20369   000510                     bootPowerUp@a:
 20370                           	callstack 0
 20371                           
 20372                           ; 3 bytes @ 0xF
 20373   000510                     	ds	1
 20374   000511                     APP_testMode@i:
 20375                           	callstack 0
 20376   000511                     loadNvCache@i:
 20377                           	callstack 0
 20378   000511                     writeNVM@value:
 20379                           	callstack 0
 20380                           
 20381                           ; 1 bytes @ 0x10
 20382   000511                     	ds	1
 20383   000512                     nvPowerUp@i:
 20384                           	callstack 0
 20385   000512                     ??_writeNVM:
 20386   000512                     ??_canReceiveMessage:
 20387   000512                     
 20388                           ; 1 bytes @ 0x11
 20389   000512                     	ds	1
 20390   000513                     canReceiveMessage@incomingCanId:
 20391                           	callstack 0
 20392   000513                     ___lldiv@quotient:
 20393                           	callstack 0
 20394   000513                     
 20395                           ; 1 bytes @ 0x12
 20396   000513                     	ds	1
 20397   000514                     writeNVM@type:
 20398                           	callstack 0
 20399   000514                     canReceiveMessage@mp:
 20400                           	callstack 0
 20401                           
 20402                           ; 2 bytes @ 0x13
 20403   000514                     	ds	1
 20404   000515                     setNewCanId@newCanId:
 20405                           	callstack 0
 20406   000515                     writeEv@evNum:
 20407                           	callstack 0
 20408   000515                     setNV@value:
 20409                           	callstack 0
 20410   000515                     canSendMessage@temp:
 20411                           	callstack 0
 20412   000515                     ??_nvFactoryReset:
 20413                           
 20414                           ; 1 bytes @ 0x14
 20415   000515                     	ds	1
 20416   000516                     writeEv@evVal:
 20417                           	callstack 0
 20418   000516                     canReceiveMessage@temp:
 20419                           	callstack 0
 20420   000516                     getNN@hi:
 20421                           	callstack 0
 20422   000516                     getEN@hi:
 20423                           	callstack 0
 20424   000516                     ??_processEnumeration:
 20425   000516                     ??_setNV:
 20426                           
 20427                           ; 1 bytes @ 0x15
 20428   000516                     	ds	1
 20429   000517                     nvFactoryReset@i:
 20430                           	callstack 0
 20431   000517                     ___lldiv@counter:
 20432                           	callstack 0
 20433   000517                     canSendMessage@m:
 20434                           	callstack 0
 20435   000517                     ??_writeEv:
 20436                           
 20437                           ; 1 bytes @ 0x16
 20438   000517                     	ds	1
 20439   000518                     setNV@oldValue:
 20440                           	callstack 0
 20441   000518                     canReceiveMessage@rxFifoObj:
 20442                           	callstack 0
 20443   000518                     getNN@lo:
 20444                           	callstack 0
 20445   000518                     getEN@lo:
 20446                           	callstack 0
 20447   000518                     ??_pbDownTimer:
 20448   000518                     ??_pbUpTimer:
 20449                           
 20450                           ; 1 bytes @ 0x17
 20451   000518                     	ds	1
 20452   000519                     setNV@index:
 20453                           	callstack 0
 20454   000519                     canSendMessage@txFifoObj:
 20455                           	callstack 0
 20456                           
 20457                           ; 2 bytes @ 0x18
 20458   000519                     	ds	1
 20459   00051A                     processEnumeration@enumResult:
 20460                           	callstack 0
 20461   00051A                     getEVs@tableIndex:
 20462                           	callstack 0
 20463   00051A                     getNN@flags:
 20464                           	callstack 0
 20465   00051A                     getEN@tableIndex:
 20466                           	callstack 0
 20467                           
 20468                           ; 1 bytes @ 0x19
 20469   00051A                     	ds	1
 20470   00051B                     processEnumeration@newCanId:
 20471                           	callstack 0
 20472   00051B                     getEVs@evIdx:
 20473                           	callstack 0
 20474   00051B                     getNN@tableIndex:
 20475                           	callstack 0
 20476   00051B                     sendMessage@len:
 20477                           	callstack 0
 20478                           
 20479                           ; 1 bytes @ 0x1A
 20480   00051B                     	ds	1
 20481   00051C                     processEnumeration@i:
 20482                           	callstack 0
 20483   00051C                     getEv@tableIndex:
 20484                           	callstack 0
 20485   00051C                     pbDownTimer@timeout:
 20486                           	callstack 0
 20487   00051C                     pbUpTimer@timeout:
 20488                           	callstack 0
 20489   00051C                     sendMessage@data1:
 20490                           	callstack 0
 20491   00051C                     getHash@nn:
 20492                           	callstack 0
 20493   00051C                     APP_processConsumedEvent@m:
 20494                           	callstack 0
 20495                           
 20496                           ; 2 bytes @ 0x1B
 20497   00051C                     	ds	1
 20498   00051D                     sendMessage@data2:
 20499                           	callstack 0
 20500   00051D                     
 20501                           ; 1 bytes @ 0x1C
 20502   00051D                     	ds	1
 20503   00051E                     sendMessage@data3:
 20504                           	callstack 0
 20505   00051E                     APP_processConsumedEvent@tableIndex:
 20506                           	callstack 0
 20507   00051E                     getHash@en:
 20508                           	callstack 0
 20509   00051E                     
 20510                           ; 1 bytes @ 0x1D
 20511   00051E                     	ds	1
 20512   00051F                     sendMessage@data4:
 20513                           	callstack 0
 20514   00051F                     APP_processConsumedEvent@onOff:
 20515                           	callstack 0
 20516                           
 20517                           ; 1 bytes @ 0x1E
 20518   00051F                     	ds	1
 20519   000520                     sendMessage@data5:
 20520                           	callstack 0
 20521   000520                     APP_processConsumedEvent@action:
 20522                           	callstack 0
 20523   000520                     ??_getHash:
 20524                           
 20525                           ; 1 bytes @ 0x1F
 20526   000520                     	ds	1
 20527   000521                     getHash@hash:
 20528                           	callstack 0
 20529   000521                     sendMessage@data6:
 20530                           	callstack 0
 20531   000521                     APP_processConsumedEvent@start_ledno:
 20532                           	callstack 0
 20533                           
 20534                           ; 1 bytes @ 0x20
 20535   000521                     	ds	1
 20536   000522                     sendMessage@data7:
 20537                           	callstack 0
 20538   000522                     APP_processConsumedEvent@end_ledno:
 20539                           	callstack 0
 20540   000522                     findEvent@nodeNumber:
 20541                           	callstack 0
 20542   000522                     ??_rebuildHashtable:
 20543                           
 20544                           ; 1 bytes @ 0x21
 20545   000522                     	ds	1
 20546   000523                     APP_processConsumedEvent@colourPixelIndexPair:
 20547                           	callstack 0
 20548   000523                     ??_sendMessage:
 20549                           
 20550                           ; 1 bytes @ 0x22
 20551   000523                     	ds	1
 20552   000524                     writeEv@tableIndex:
 20553                           	callstack 0
 20554   000524                     APP_processConsumedEvent@ev:
 20555                           	callstack 0
 20556   000524                     findEvent@eventNumber:
 20557                           	callstack 0
 20558                           
 20559                           ; 2 bytes @ 0x23
 20560   000524                     	ds	1
 20561   000525                     rebuildHashtable@hash:
 20562                           	callstack 0
 20563   000525                     sendMessage@opc:
 20564                           	callstack 0
 20565                           
 20566                           ; 1 bytes @ 0x24
 20567   000525                     	ds	1
 20568   000526                     rebuildHashtable@tableIndex:
 20569                           	callstack 0
 20570   000526                     sendMessage2@data1:
 20571                           	callstack 0
 20572   000526                     sendMessage3@data1:
 20573                           	callstack 0
 20574   000526                     sendMessage4@data1:
 20575                           	callstack 0
 20576   000526                     sendMessage5@data1:
 20577                           	callstack 0
 20578   000526                     sendMessage6@data1:
 20579                           	callstack 0
 20580   000526                     sendMessage7@data1:
 20581                           	callstack 0
 20582   000526                     ??_findEvent:
 20583                           
 20584                           ; 1 bytes @ 0x25
 20585   000526                     	ds	1
 20586   000527                     rebuildHashtable@chainIdx:
 20587                           	callstack 0
 20588   000527                     sendMessage2@data2:
 20589                           	callstack 0
 20590   000527                     sendMessage3@data2:
 20591                           	callstack 0
 20592   000527                     sendMessage4@data2:
 20593                           	callstack 0
 20594   000527                     sendMessage5@data2:
 20595                           	callstack 0
 20596   000527                     sendMessage6@data2:
 20597                           	callstack 0
 20598   000527                     sendMessage7@data2:
 20599                           	callstack 0
 20600                           
 20601                           ; 1 bytes @ 0x26
 20602   000527                     	ds	1
 20603   000528                     teachPowerUp@i:
 20604                           	callstack 0
 20605   000528                     sendMessage2@opc:
 20606                           	callstack 0
 20607   000528                     sendMessage3@data3:
 20608                           	callstack 0
 20609   000528                     sendMessage4@data3:
 20610                           	callstack 0
 20611   000528                     sendMessage5@data3:
 20612                           	callstack 0
 20613   000528                     sendMessage6@data3:
 20614                           	callstack 0
 20615   000528                     sendMessage7@data3:
 20616                           	callstack 0
 20617   000528                     findEvent@nn:
 20618                           	callstack 0
 20619   000528                     ??_removeTableEntry:
 20620   000528                     
 20621                           ; 1 bytes @ 0x27
 20622   000528                     	ds	1
 20623   000529                     sendMessage3@opc:
 20624                           	callstack 0
 20625   000529                     sendMessage4@data4:
 20626                           	callstack 0
 20627   000529                     sendMessage5@data4:
 20628                           	callstack 0
 20629   000529                     sendMessage6@data4:
 20630                           	callstack 0
 20631   000529                     sendMessage7@data4:
 20632                           	callstack 0
 20633   000529                     ??_powerUp:
 20634                           
 20635                           ; 1 bytes @ 0x28
 20636   000529                     	ds	1
 20637   00052A                     sendMessage4@opc:
 20638                           	callstack 0
 20639   00052A                     sendMessage5@data5:
 20640                           	callstack 0
 20641   00052A                     sendMessage6@data5:
 20642                           	callstack 0
 20643   00052A                     sendMessage7@data5:
 20644                           	callstack 0
 20645   00052A                     doNnevn@eventNumber:
 20646                           	callstack 0
 20647   00052A                     doRqevn@eventNumber:
 20648                           	callstack 0
 20649   00052A                     findEvent@en:
 20650                           	callstack 0
 20651   00052A                     
 20652                           ; 1 bytes @ 0x29
 20653   00052A                     	ds	1
 20654   00052B                     sendMessage5@opc:
 20655                           	callstack 0
 20656   00052B                     sendMessage6@data6:
 20657                           	callstack 0
 20658   00052B                     sendMessage7@data6:
 20659                           	callstack 0
 20660   00052B                     
 20661                           ; 1 bytes @ 0x2A
 20662   00052B                     	ds	1
 20663   00052C                     doNnevn@count:
 20664                           	callstack 0
 20665   00052C                     doRqevn@count:
 20666                           	callstack 0
 20667   00052C                     doReval@evNum:
 20668                           	callstack 0
 20669   00052C                     findEvent@hash:
 20670                           	callstack 0
 20671   00052C                     sendMessage6@opc:
 20672                           	callstack 0
 20673   00052C                     sendMessage7@data7:
 20674                           	callstack 0
 20675   00052C                     doNenrd@nodeNumber:
 20676                           	callstack 0
 20677   00052C                     checkLen@m:
 20678                           	callstack 0
 20679   00052C                     ??_mnsPoll:
 20680                           
 20681                           ; 1 bytes @ 0x2B
 20682   00052C                     	ds	1
 20683   00052D                     doNnevn@i:
 20684                           	callstack 0
 20685   00052D                     doRqevn@i:
 20686                           	callstack 0
 20687   00052D                     doReval@evIndex:
 20688                           	callstack 0
 20689   00052D                     findEvent@chainIdx:
 20690                           	callstack 0
 20691   00052D                     powerUp@i:
 20692                           	callstack 0
 20693   00052D                     sendMessage7@opc:
 20694                           	callstack 0
 20695   00052D                     
 20696                           ; 1 bytes @ 0x2C
 20697   00052D                     	ds	1
 20698   00052E                     doReval@enNum:
 20699                           	callstack 0
 20700   00052E                     findEvent@tableIndex:
 20701                           	callstack 0
 20702   00052E                     mnsTRallDiagnosticsCallback@serviceIndex:
 20703                           	callstack 0
 20704   00052E                     nvTRnvrdCallback@serviceIndex:
 20705                           	callstack 0
 20706   00052E                     checkLen@needed:
 20707                           	callstack 0
 20708   00052E                     doNenrd@eventNumber:
 20709                           	callstack 0
 20710                           
 20711                           ; 2 bytes @ 0x2D
 20712   00052E                     	ds	1
 20713   00052F                     nerdCallback@step:
 20714                           	callstack 0
 20715   00052F                     doReval@tableIndex:
 20716                           	callstack 0
 20717   00052F                     reqevCallback@step:
 20718                           	callstack 0
 20719   00052F                     mnsTRserviceDiscoveryCallback@step:
 20720                           	callstack 0
 20721   00052F                     mnsTRallDiagnosticsCallback@step:
 20722                           	callstack 0
 20723   00052F                     mnsTRrqnpnCallback@step:
 20724                           	callstack 0
 20725   00052F                     nvTRnvrdCallback@step:
 20726                           	callstack 0
 20727   00052F                     checkLen@service:
 20728                           	callstack 0
 20729   00052F                     doReqev@nodeNumber:
 20730                           	callstack 0
 20731   00052F                     addEvent@nodeNumber:
 20732                           	callstack 0
 20733                           
 20734                           ; 2 bytes @ 0x2E
 20735   00052F                     	ds	1
 20736   000530                     doNenrd@index:
 20737                           	callstack 0
 20738   000530                     nerdCallback@nodeNumber:
 20739                           	callstack 0
 20740   000530                     doReval@evVal:
 20741                           	callstack 0
 20742   000530                     nvTRnvrdCallback@valueOrError:
 20743                           	callstack 0
 20744   000530                     ??_reqevCallback:
 20745   000530                     ??_mnsTRallDiagnosticsCallback:
 20746   000530                     ??_mnsTRserviceDiscoveryCallback:
 20747   000530                     
 20748                           ; 1 bytes @ 0x2F
 20749   000530                     	ds	1
 20750   000531                     doNenrd@tableIndex:
 20751                           	callstack 0
 20752   000531                     consumerEventCheckLen@m:
 20753                           	callstack 0
 20754   000531                     teachCheckLen@m:
 20755                           	callstack 0
 20756   000531                     doReqev@eventNumber:
 20757                           	callstack 0
 20758   000531                     addEvent@eventNumber:
 20759                           	callstack 0
 20760                           
 20761                           ; 2 bytes @ 0x30
 20762   000531                     	ds	1
 20763   000532                     nerdCallback@eventNumber:
 20764                           	callstack 0
 20765                           
 20766                           ; 2 bytes @ 0x31
 20767   000532                     	ds	1
 20768   000533                     consumerEventCheckLen@needed:
 20769                           	callstack 0
 20770   000533                     teachCheckLen@needed:
 20771                           	callstack 0
 20772   000533                     doReqev@evNum:
 20773                           	callstack 0
 20774   000533                     addEvent@evNum:
 20775                           	callstack 0
 20776                           
 20777                           ; 1 bytes @ 0x32
 20778   000533                     	ds	1
 20779   000534                     teachCheckLen@learn:
 20780                           	callstack 0
 20781   000534                     removeTableEntry@i:
 20782                           	callstack 0
 20783   000534                     addEvent@evVal:
 20784                           	callstack 0
 20785   000534                     doReqev@evVal:
 20786                           	callstack 0
 20787   000534                     mnsTRallDiagnosticsCallback@d:
 20788                           	callstack 0
 20789   000534                     
 20790                           ; 1 bytes @ 0x33
 20791   000534                     	ds	1
 20792   000535                     reqevCallback@nEv:
 20793                           	callstack 0
 20794   000535                     removeTableEntry@tableIndex:
 20795                           	callstack 0
 20796   000535                     addEvent@forceOwnNN:
 20797                           	callstack 0
 20798   000535                     
 20799                           ; 1 bytes @ 0x34
 20800   000535                     	ds	1
 20801   000536                     clearAllEvents@tableIndex:
 20802                           	callstack 0
 20803   000536                     doReqev@tableIndex:
 20804                           	callstack 0
 20805   000536                     reqevCallback@eventNumber:
 20806                           	callstack 0
 20807   000536                     removeEvent@nodeNumber:
 20808                           	callstack 0
 20809   000536                     ??_addEvent:
 20810                           
 20811                           ; 1 bytes @ 0x35
 20812   000536                     	ds	1
 20813   000537                     ??_factoryReset:
 20814   000537                     
 20815                           ; 1 bytes @ 0x36
 20816   000537                     	ds	1
 20817   000538                     reqevCallback@ev:
 20818                           	callstack 0
 20819   000538                     removeEvent@eventNumber:
 20820                           	callstack 0
 20821                           
 20822                           ; 2 bytes @ 0x37
 20823   000538                     	ds	2
 20824   00053A                     removeEvent@tableIndex:
 20825                           	callstack 0
 20826   00053A                     reqevCallback@nodeNumber:
 20827                           	callstack 0
 20828   00053A                     
 20829                           ; 1 bytes @ 0x39
 20830   00053A                     	ds	1
 20831   00053B                     factoryReset@i:
 20832                           	callstack 0
 20833   00053B                     doEvuln@nodeNumber:
 20834                           	callstack 0
 20835                           
 20836                           ; 2 bytes @ 0x3A
 20837   00053B                     	ds	1
 20838   00053C                     reqevCallback@tableIndex:
 20839                           	callstack 0
 20840   00053C                     checkPowerOnPb@i:
 20841                           	callstack 0
 20842   00053C                     
 20843                           ; 1 bytes @ 0x3B
 20844   00053C                     	ds	1
 20845   00053D                     doEvuln@eventNumber:
 20846                           	callstack 0
 20847   00053D                     ??_pollTimedResponse:
 20848                           
 20849                           ; 1 bytes @ 0x3C
 20850   00053D                     	ds	2
 20851   00053F                     doEvuln@result:
 20852                           	callstack 0
 20853   00053F                     pollTimedResponse@result:
 20854                           	callstack 0
 20855   00053F                     
 20856                           ; 1 bytes @ 0x3E
 20857   00053F                     	ds	4
 20858   000543                     addEvent@en:
 20859                           	callstack 0
 20860                           
 20861                           ; 2 bytes @ 0x42
 20862   000543                     	ds	2
 20863   000545                     addEvent@e:
 20864                           	callstack 0
 20865                           
 20866                           ; 1 bytes @ 0x44
 20867   000545                     	ds	1
 20868   000546                     addEvent@tableIndex:
 20869                           	callstack 0
 20870                           
 20871                           ; 1 bytes @ 0x45
 20872   000546                     	ds	1
 20873   000547                     APP_addEvent@nodeNumber:
 20874                           	callstack 0
 20875                           
 20876                           ; 2 bytes @ 0x46
 20877   000547                     	ds	2
 20878   000549                     APP_addEvent@eventNumber:
 20879                           	callstack 0
 20880                           
 20881                           ; 2 bytes @ 0x48
 20882   000549                     	ds	2
 20883   00054B                     APP_addEvent@evNum:
 20884                           	callstack 0
 20885                           
 20886                           ; 1 bytes @ 0x4A
 20887   00054B                     	ds	1
 20888   00054C                     APP_addEvent@evVal:
 20889                           	callstack 0
 20890                           
 20891                           ; 1 bytes @ 0x4B
 20892   00054C                     	ds	1
 20893   00054D                     APP_addEvent@forceOwnNN:
 20894                           	callstack 0
 20895                           
 20896                           ; 1 bytes @ 0x4C
 20897   00054D                     	ds	1
 20898   00054E                     doEvlrn@nodeNumber:
 20899                           	callstack 0
 20900   00054E                     
 20901                           ; 1 bytes @ 0x4D
 20902   00054E                     	ds	2
 20903   000550                     doEvlrn@eventNumber:
 20904                           	callstack 0
 20905                           
 20906                           ; 2 bytes @ 0x4F
 20907   000550                     	ds	2
 20908   000552                     doEvlrn@evNum:
 20909                           	callstack 0
 20910                           
 20911                           ; 1 bytes @ 0x51
 20912   000552                     	ds	1
 20913   000553                     doEvlrn@evVal:
 20914                           	callstack 0
 20915                           
 20916                           ; 1 bytes @ 0x52
 20917   000553                     	ds	1
 20918   000554                     bootProcessMessage@m:
 20919                           	callstack 0
 20920   000554                     canProcessMessage@m:
 20921                           	callstack 0
 20922   000554                     consumerProcessMessage@m:
 20923                           	callstack 0
 20924   000554                     teachProcessMessage@m:
 20925                           	callstack 0
 20926   000554                     mnsProcessMessage@m:
 20927                           	callstack 0
 20928   000554                     nvProcessMessage@m:
 20929                           	callstack 0
 20930   000554                     
 20931                           ; 1 bytes @ 0x53
 20932   000554                     	ds	2
 20933   000556                     mnsProcessMessage@i:
 20934                           	callstack 0
 20935   000556                     ??_bootProcessMessage:
 20936   000556                     ??_canProcessMessage:
 20937   000556                     ??_consumerProcessMessage:
 20938   000556                     ??_teachProcessMessage:
 20939   000556                     ??_nvProcessMessage:
 20940                           
 20941                           ; 1 bytes @ 0x55
 20942   000556                     	ds	1
 20943   000557                     _mnsProcessMessage$3754:
 20944                           	callstack 0
 20945                           
 20946                           ; 1 bytes @ 0x56
 20947   000557                     	ds	1
 20948   000558                     mnsProcessMessage@d:
 20949                           	callstack 0
 20950   000558                     nvProcessMessage@valueOrError:
 20951                           	callstack 0
 20952                           
 20953                           ; 2 bytes @ 0x57
 20954   000558                     	ds	1
 20955   000559                     consumerProcessMessage@enn:
 20956                           	callstack 0
 20957                           
 20958                           ; 2 bytes @ 0x58
 20959   000559                     	ds	1
 20960   00055A                     mnsProcessMessage@newMode:
 20961                           	callstack 0
 20962                           
 20963                           ; 1 bytes @ 0x59
 20964   00055A                     	ds	1
 20965   00055B                     consumerProcessMessage@ret:
 20966                           	callstack 0
 20967                           
 20968                           ; 1 bytes @ 0x5A
 20969   00055B                     	ds	1
 20970   00055C                     consumerProcessMessage@tableIndex:
 20971                           	callstack 0
 20972                           
 20973                           ; 1 bytes @ 0x5B
 20974   00055C                     	ds	1
 20975   00055D                     main@i:
 20976                           	callstack 0
 20977   00055D                     
 20978                           ; 1 bytes @ 0x5C
 20979   00055D                     	ds	1
 20980   00055E                     main@t1:
 20981                           	callstack 0
 20982                           
 20983                           ; 1 bytes @ 0x5D
 20984   00055E                     	ds	1
 20985   00055F                     main@t2:
 20986                           	callstack 0
 20987                           
 20988                           ; 1 bytes @ 0x5E
 20989   00055F                     	ds	1
 20990                           
 20991 ;;
 20992 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 20993 ;;
 20994 ;; *************** function _main *****************
 20995 ;; Defined at:
 20996 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 20997 ;; Parameters:    Size  Location     Type
 20998 ;;		None
 20999 ;; Auto vars:     Size  Location     Type
 21000 ;;  t2              1   94[COMRAM] unsigned char 
 21001 ;;  t1              1   93[COMRAM] unsigned char 
 21002 ;;  i               1   92[COMRAM] unsigned char 
 21003 ;; Return value:  Size  Location     Type
 21004 ;;                  1    wreg      void 
 21005 ;; Registers used:
 21006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21007 ;; Tracked objects:
 21008 ;;		On entry : 0/0
 21009 ;;		On exit  : 0/0
 21010 ;;		Unchanged: 0/0
 21011 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21013 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21016 ;;Total ram usage:        3 bytes
 21017 ;; Hardware stack levels required when called: 13
 21018 ;; This function calls:
 21019 ;;		_checkPowerOnPb
 21020 ;;		_factoryReset
 21021 ;;		_initRomOps
 21022 ;;		_loop
 21023 ;;		_poll
 21024 ;;		_powerUp
 21025 ;;		_readNVM
 21026 ;;		_setup
 21027 ;; This function is called by:
 21028 ;;		Startup code after reset
 21029 ;; This function uses a non-reentrant model
 21030 ;;
 21031                           
 21032                           	psect	text0
 21033   005C00                     __ptext0:
 21034                           	callstack 0
 21035   005C00                     _main:
 21036                           	callstack 114
 21037   005C00                     
 21038                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 21039   005C00  0100               	movlb	0	; () banked
 21040   005C02  51AD               	movf	173,w,b	;volatile
 21041   005C04  0B8F               	andlw	-113
 21042   005C06  0920               	iorlw	32
 21043   005C08  6FAD               	movwf	173,b	;volatile
 21044                           
 21045                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 21046   005C0A  0EF0               	movlw	-16
 21047   005C0C  17AD               	andwf	173,f,b	;volatile
 21048   005C0E                     l1873:
 21049                           
 21050                           ; BSR set to: 0
 21051                           ;../../VLCBlib_PIC/vlcb.c: 1280:     while ( ! OSCCON3bits.ORDY) {
 21052   005C0E  A9AF               	btfss	175,4,b	;volatile
 21053   005C10  EF0C  F02E         	goto	u8691
 21054   005C14  EF0E  F02E         	goto	u8690
 21055   005C18                     u8691:
 21056   005C18  EF07  F02E         	goto	l1873
 21057   005C1C                     u8690:
 21058   005C1C                     
 21059                           ; BSR set to: 0
 21060                           ;../../VLCBlib_PIC/vlcb.c: 1289:     for (t1=0; t1<64; t1++) {
 21061   005C1C  6A5E               	clrf	main@t1^(0+1280),c
 21062   005C1E                     l1876:
 21063                           
 21064                           ;../../VLCBlib_PIC/vlcb.c: 1290:         for (t2=0; t2<255; t2++) {
 21065   005C1E  6A5F               	clrf	main@t2^(0+1280),c
 21066   005C20                     l1878:
 21067                           
 21068                           ;../../VLCBlib_PIC/vlcb.c: 1291:             for (i=0; i<255; i++) {
 21069   005C20  6A5D               	clrf	main@i^(0+1280),c
 21070   005C22                     l1880:
 21071                           
 21072                           ;../../VLCBlib_PIC/vlcb.c: 1293:                 (LATBbits.LATB7=0);
 21073   005C22  9EBF               	bcf	191,7,c	;volatile
 21074   005C24                     
 21075                           ;../../VLCBlib_PIC/vlcb.c: 1294:             }
 21076   005C24  2A5D               	incf	main@i^(0+1280),f,c
 21077   005C26  285D               	incf	main@i^(0+1280),w,c
 21078   005C28  A4D8               	btfss	status,2,c
 21079   005C2A  EF19  F02E         	goto	u8701
 21080   005C2E  EF1B  F02E         	goto	u8700
 21081   005C32                     u8701:
 21082   005C32  EF11  F02E         	goto	l1880
 21083   005C36                     u8700:
 21084   005C36                     
 21085                           ;../../VLCBlib_PIC/vlcb.c: 1295:         }
 21086   005C36  2A5F               	incf	main@t2^(0+1280),f,c
 21087   005C38  285F               	incf	main@t2^(0+1280),w,c
 21088   005C3A  A4D8               	btfss	status,2,c
 21089   005C3C  EF22  F02E         	goto	u8711
 21090   005C40  EF24  F02E         	goto	u8710
 21091   005C44                     u8711:
 21092   005C44  EF10  F02E         	goto	l1878
 21093   005C48                     u8710:
 21094   005C48                     
 21095                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
 21096   005C48  2A5E               	incf	main@t1^(0+1280),f,c
 21097   005C4A  0E3F               	movlw	63
 21098   005C4C  645E               	cpfsgt	main@t1^(0+1280),c
 21099   005C4E  EF2B  F02E         	goto	u8721
 21100   005C52  EF2D  F02E         	goto	u8720
 21101   005C56                     u8721:
 21102   005C56  EF0F  F02E         	goto	l1876
 21103   005C5A                     u8720:
 21104   005C5A                     
 21105                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTBASEU = 0x00;
 21106   005C5A  0104               	movlb	4	; () banked
 21107   005C5C  6B5F               	clrf	95,b	;volatile
 21108   005C5E                     
 21109                           ; BSR set to: 4
 21110                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTBASEH = 0x09;
 21111   005C5E  0E09               	movlw	9
 21112   005C60  6F5E               	movwf	94,b	;volatile
 21113   005C62                     
 21114                           ; BSR set to: 4
 21115                           ;../../VLCBlib_PIC/vlcb.c: 1308:     IVTBASEL = 0x00;
 21116   005C62  6B5D               	clrf	93,b	;volatile
 21117                           
 21118                           ;../../VLCBlib_PIC/vlcb.c: 1310:     IVTLOCK = 0x55;
 21119   005C64  0E55               	movlw	85
 21120   005C66  6F59               	movwf	89,b	;volatile
 21121                           
 21122                           ;../../VLCBlib_PIC/vlcb.c: 1311:     IVTLOCK = 0xAA;
 21123   005C68  0EAA               	movlw	170
 21124   005C6A  6F59               	movwf	89,b	;volatile
 21125   005C6C                     
 21126                           ; BSR set to: 4
 21127                           ;../../VLCBlib_PIC/vlcb.c: 1312:     IVTLOCKbits.IVTLOCKED = 0x01;
 21128   005C6C  8159               	bsf	89,0,b	;volatile
 21129   005C6E                     
 21130                           ; BSR set to: 4
 21131                           ;../../VLCBlib_PIC/vlcb.c: 1324:     initRomOps();
 21132   005C6E  ECFF  F03D         	call	_initRomOps	;wreg free
 21133   005C72                     
 21134                           ;../../VLCBlib_PIC/vlcb.c: 1326:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 21135   005C72  0EFA               	movlw	250
 21136   005C74  6E07               	movwf	readNVM@index^(0+1280),c
 21137   005C76  0E03               	movlw	3
 21138   005C78  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21139   005C7A  0E00               	movlw	0
 21140   005C7C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21141   005C7E  0E00               	movlw	0
 21142   005C80  ECDB  F036         	call	_readNVM
 21143   005C84  0407               	decf	?_readNVM^(0+1280),w,c
 21144   005C86  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 21145   005C88  B4D8               	btfsc	status,2,c
 21146   005C8A  EF49  F02E         	goto	u8731
 21147   005C8E  EF4B  F02E         	goto	u8730
 21148   005C92                     u8731:
 21149   005C92  EF4D  F02E         	goto	l1882
 21150   005C96                     u8730:
 21151   005C96                     
 21152                           ;../../VLCBlib_PIC/vlcb.c: 1327:         factoryReset();
 21153   005C96  EC85  F027         	call	_factoryReset	;wreg free
 21154   005C9A                     l1882:
 21155                           
 21156                           ;../../VLCBlib_PIC/vlcb.c: 1331:     powerUp();
 21157   005C9A  EC82  F028         	call	_powerUp	;wreg free
 21158   005C9E                     
 21159                           ;../../VLCBlib_PIC/vlcb.c: 1334:     {INTCON0bits.GIE = 1;};
 21160   005C9E  8ED6               	bsf	214,7,c	;volatile
 21161                           
 21162                           ;../../VLCBlib_PIC/vlcb.c: 1335:     checkPowerOnPb();
 21163   005CA0  ECB9  F02F         	call	_checkPowerOnPb	;wreg free
 21164   005CA4                     
 21165                           ;../../VLCBlib_PIC/vlcb.c: 1338:     {INTCON0bits.GIE = 0;};
 21166   005CA4  9ED6               	bcf	214,7,c	;volatile
 21167   005CA6                     
 21168                           ;../../VLCBlib_PIC/vlcb.c: 1339:     setup();
 21169   005CA6  ECAC  F03A         	call	_setup	;wreg free
 21170   005CAA                     
 21171                           ;../../VLCBlib_PIC/vlcb.c: 1342:     {INTCON0bits.GIE = 1;};
 21172   005CAA  8ED6               	bsf	214,7,c	;volatile
 21173   005CAC                     l11020:
 21174                           
 21175                           ;../../VLCBlib_PIC/vlcb.c: 1346:         poll();
 21176   005CAC  ECC2  F013         	call	_poll	;wreg free
 21177   005CB0                     
 21178                           ;../../VLCBlib_PIC/vlcb.c: 1347:         loop();
 21179   005CB0  EC43  F039         	call	_loop	;wreg free
 21180   005CB4  EF56  F02E         	goto	l11020
 21181   005CB8  EF01  F005         	goto	start
 21182   005CBC                     __end_of_main:
 21183                           	callstack 0
 21184                           
 21185 ;; *************** function _setup *****************
 21186 ;; Defined at:
 21187 ;;		line 212 in file "../main.c"
 21188 ;; Parameters:    Size  Location     Type
 21189 ;;		None
 21190 ;; Auto vars:     Size  Location     Type
 21191 ;;		None
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  1    wreg      void 
 21194 ;; Registers used:
 21195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/0
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21205 ;;Total ram usage:        0 bytes
 21206 ;; Hardware stack levels used: 1
 21207 ;; Hardware stack levels required when called: 2
 21208 ;; This function calls:
 21209 ;;		_initARGB
 21210 ;;		_setTimedResponseDelay
 21211 ;;		_tickGet
 21212 ;;		_updateLedRange
 21213 ;;		_updateRGB
 21214 ;; This function is called by:
 21215 ;;		_main
 21216 ;; This function uses a non-reentrant model
 21217 ;;
 21218                           
 21219                           	psect	text1
 21220   007558                     __ptext1:
 21221                           	callstack 0
 21222   007558                     _setup:
 21223                           	callstack 124
 21224   007558                     
 21225                           ;../main.c: 214:     transport = &canTransport;
 21226   007558  0EF9               	movlw	low _canTransport
 21227   00755A  0105               	movlb	5	; () banked
 21228   00755C  6F8F               	movwf	_transport& (0+255),b
 21229   00755E  0EFF               	movlw	high _canTransport
 21230   007560  6F90               	movwf	(_transport+1)& (0+255),b
 21231   007562                     
 21232                           ; BSR set to: 5
 21233                           ;../main.c: 219:     setTimedResponseDelay(5);
 21234   007562  0E05               	movlw	5
 21235   007564  EC34  F03E         	call	_setTimedResponseDelay
 21236   007568                     
 21237                           ;../main.c: 221:     initARGB();
 21238   007568  EC57  F020         	call	_initARGB	;wreg free
 21239   00756C                     
 21240                           ;../main.c: 223:     ANSELA = 0x00;
 21241   00756C  0104               	movlb	4	; () banked
 21242   00756E  6B00               	clrf	0,b	;volatile
 21243   007570                     
 21244                           ; BSR set to: 4
 21245                           ;../main.c: 224:     ANSELB = 0x00;
 21246   007570  6B08               	clrf	8,b	;volatile
 21247   007572                     
 21248                           ; BSR set to: 4
 21249                           ;../main.c: 225:     ANSELC = 0x00;
 21250   007572  6B10               	clrf	16,b	;volatile
 21251   007574                     
 21252                           ; BSR set to: 4
 21253                           ;../main.c: 228:     (INTCON0bits.GIE = 1);
 21254   007574  8ED6               	bsf	214,7,c	;volatile
 21255   007576                     
 21256                           ; BSR set to: 4
 21257                           ;../main.c: 229:     flashTime.val = tickGet();
 21258   007576  EC66  F036         	call	_tickGet	;wreg free
 21259   00757A  C501  F57C         	movff	?_tickGet,_flashTime
 21260   00757E  C502  F57D         	movff	?_tickGet+1,_flashTime+1
 21261   007582  C503  F57E         	movff	?_tickGet+2,_flashTime+2
 21262   007586  C504  F57F         	movff	?_tickGet+3,_flashTime+3
 21263   00758A                     
 21264                           ;../main.c: 230:     updateLedRange(0, 255 -1, (PaletteIndex)(uint8_t)1);
 21265   00758A  0EFE               	movlw	254
 21266   00758C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21267   00758E  0E01               	movlw	1
 21268   007590  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21269   007592  0E00               	movlw	0
 21270   007594  EC13  F03B         	call	_updateLedRange
 21271   007598                     
 21272                           ;../main.c: 231:     updateRGB();
 21273   007598  EC38  F03E         	call	_updateRGB	;wreg free
 21274   00759C  0012               	return		;funcret
 21275   00759E                     __end_of_setup:
 21276                           	callstack 0
 21277                           
 21278 ;; *************** function _setTimedResponseDelay *****************
 21279 ;; Defined at:
 21280 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 21281 ;; Parameters:    Size  Location     Type
 21282 ;;  delay           1    wreg     unsigned char 
 21283 ;; Auto vars:     Size  Location     Type
 21284 ;;  delay           1    0[COMRAM] unsigned char 
 21285 ;; Return value:  Size  Location     Type
 21286 ;;                  1    wreg      void 
 21287 ;; Registers used:
 21288 ;;		wreg
 21289 ;; Tracked objects:
 21290 ;;		On entry : 0/0
 21291 ;;		On exit  : 0/0
 21292 ;;		Unchanged: 0/0
 21293 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21298 ;;Total ram usage:        1 bytes
 21299 ;; Hardware stack levels used: 1
 21300 ;; Hardware stack levels required when called: 1
 21301 ;; This function calls:
 21302 ;;		Nothing
 21303 ;; This function is called by:
 21304 ;;		_setup
 21305 ;; This function uses a non-reentrant model
 21306 ;;
 21307                           
 21308                           	psect	text2
 21309   007C68                     __ptext2:
 21310                           	callstack 0
 21311   007C68                     _setTimedResponseDelay:
 21312                           	callstack 124
 21313                           
 21314                           ;incstack = 0
 21315                           ;setTimedResponseDelay@delay stored from wreg
 21316   007C68  6E01               	movwf	setTimedResponseDelay@delay^(0+1280),c
 21317   007C6A                     
 21318                           ;../../VLCBlib_PIC/vlcb.c: 912:     timedResponseDelay = delay;
 21319   007C6A  C501  F593         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 21320   007C6E  0012               	return		;funcret
 21321   007C70                     __end_of_setTimedResponseDelay:
 21322                           	callstack 0
 21323                           
 21324 ;; *************** function _powerUp *****************
 21325 ;; Defined at:
 21326 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 21327 ;; Parameters:    Size  Location     Type
 21328 ;;		None
 21329 ;; Auto vars:     Size  Location     Type
 21330 ;;  i               1   44[COMRAM] unsigned char 
 21331 ;;  divider         1    0        unsigned char 
 21332 ;; Return value:  Size  Location     Type
 21333 ;;                  1    wreg      void 
 21334 ;; Registers used:
 21335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21336 ;; Tracked objects:
 21337 ;;		On entry : 0/0
 21338 ;;		On exit  : 0/0
 21339 ;;		Unchanged: 0/0
 21340 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21343 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21344 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21345 ;;Total ram usage:        5 bytes
 21346 ;; Hardware stack levels used: 1
 21347 ;; Hardware stack levels required when called: 6
 21348 ;; This function calls:
 21349 ;;		_bootPowerUp
 21350 ;;		_canPowerUp
 21351 ;;		_consumerPowerUp
 21352 ;;		_initTicker
 21353 ;;		_initTimedResponse
 21354 ;;		_leds_powerUp
 21355 ;;		_mnsPowerUp
 21356 ;;		_nvPowerUp
 21357 ;;		_teachPowerUp
 21358 ;; This function is called by:
 21359 ;;		_main
 21360 ;; This function uses a non-reentrant model
 21361 ;;
 21362                           
 21363                           	psect	text3
 21364   005104                     __ptext3:
 21365                           	callstack 0
 21366   005104                     _powerUp:
 21367                           	callstack 120
 21368   005104                     
 21369                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 21370   005104  0E00               	movlw	0
 21371   005106  EC84  F038         	call	_initTicker
 21372   00510A                     
 21373                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 21374   00510A  EC3C  F03E         	call	_initTimedResponse	;wreg free
 21375   00510E                     
 21376                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 21377   00510E  EC3D  F03D         	call	_leds_powerUp	;wreg free
 21378   005112                     
 21379                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 21380   005112  0E05               	movlw	5
 21381   005114  0105               	movlb	5	; () banked
 21382   005116  6F93               	movwf	_timedResponseDelay& (0+255),b
 21383   005118                     
 21384                           ; BSR set to: 5
 21385                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<6; i++) {
 21386   005118  6A2D               	clrf	powerUp@i^(0+1280),c
 21387   00511A                     l10830:
 21388                           
 21389                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 21390   00511A  502D               	movf	powerUp@i^(0+1280),w,c
 21391   00511C  0D02               	mullw	2
 21392   00511E  0E89               	movlw	low _services
 21393   005120  24F3               	addwf	243,w,c
 21394   005122  6EF6               	movwf	tblptrl,c
 21395   005124  0EFF               	movlw	high _services
 21396   005126  20F4               	addwfc	244,w,c
 21397   005128  6EF7               	movwf	tblptrh,c
 21398   00512A                     	if	1	;There are 3 active tblptr bytes
 21399   00512A  6AF8               	clrf	tblptru,c
 21400   00512C  0E00               	movlw	low (__mediumconst shr (0+16))
 21401   00512E  22F8               	addwfc	tblptru,f,c
 21402   005130                     	endif
 21403   005130  0009               	tblrd		*+
 21404   005132  50F5               	movf	tablat,w,c
 21405   005134  0009               	tblrd		*+
 21406   005136  10F5               	iorwf	tablat,w,c
 21407   005138  B4D8               	btfsc	status,2,c
 21408   00513A  EFA1  F028         	goto	u8351
 21409   00513E  EFA3  F028         	goto	u8350
 21410   005142                     u8351:
 21411   005142  EFF4  F028         	goto	l10836
 21412   005146                     u8350:
 21413   005146  502D               	movf	powerUp@i^(0+1280),w,c
 21414   005148  0D02               	mullw	2
 21415   00514A  0E89               	movlw	low _services
 21416   00514C  24F3               	addwf	243,w,c
 21417   00514E  6EF6               	movwf	tblptrl,c
 21418   005150  0EFF               	movlw	high _services
 21419   005152  20F4               	addwfc	244,w,c
 21420   005154  6EF7               	movwf	tblptrh,c
 21421   005156                     	if	1	;There are 3 active tblptr bytes
 21422   005156  6AF8               	clrf	tblptru,c
 21423   005158  0E00               	movlw	low (__mediumconst shr (0+16))
 21424   00515A  22F8               	addwfc	tblptru,f,c
 21425   00515C                     	endif
 21426   00515C  0009               	tblrd		*+
 21427   00515E  C4F5 F529          	movff	tablat,??_powerUp
 21428   005162  0009               	tblrd		*+
 21429   005164  C4F5 F52A          	movff	tablat,??_powerUp+1
 21430   005168  0E04               	movlw	4
 21431   00516A  2629               	addwf	??_powerUp^(0+1280),f,c
 21432   00516C  0E00               	movlw	0
 21433   00516E  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21434   005170  C529  F4F6         	movff	??_powerUp,tblptrl
 21435   005174  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21436   005178                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21437   005178  6AF8               	clrf	tblptru,c
 21438   00517A                     	endif
 21439   00517A                     	if	0	;tblptru may be non-zero
 21440   00517A                     	endif
 21441   00517A  0009               	tblrd		*+
 21442   00517C  50F5               	movf	tablat,w,c
 21443   00517E  0009               	tblrd		*+
 21444   005180  10F5               	iorwf	tablat,w,c
 21445   005182  B4D8               	btfsc	status,2,c
 21446   005184  EFC6  F028         	goto	u8361
 21447   005188  EFC8  F028         	goto	u8360
 21448   00518C                     u8361:
 21449   00518C  EFF4  F028         	goto	l10836
 21450   005190                     u8360:
 21451   005190                     
 21452                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 21453   005190  502D               	movf	powerUp@i^(0+1280),w,c
 21454   005192  0D02               	mullw	2
 21455   005194  0E89               	movlw	low _services
 21456   005196  24F3               	addwf	243,w,c
 21457   005198  6EF6               	movwf	tblptrl,c
 21458   00519A  0EFF               	movlw	high _services
 21459   00519C  20F4               	addwfc	244,w,c
 21460   00519E  6EF7               	movwf	tblptrh,c
 21461   0051A0                     	if	1	;There are 3 active tblptr bytes
 21462   0051A0  6AF8               	clrf	tblptru,c
 21463   0051A2  0E00               	movlw	low (__mediumconst shr (0+16))
 21464   0051A4  22F8               	addwfc	tblptru,f,c
 21465   0051A6                     	endif
 21466   0051A6  0009               	tblrd		*+
 21467   0051A8  C4F5 F529          	movff	tablat,??_powerUp
 21468   0051AC  0009               	tblrd		*+
 21469   0051AE  C4F5 F52A          	movff	tablat,??_powerUp+1
 21470   0051B2  0E04               	movlw	4
 21471   0051B4  2629               	addwf	??_powerUp^(0+1280),f,c
 21472   0051B6  0E00               	movlw	0
 21473   0051B8  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21474   0051BA  C529  F4F6         	movff	??_powerUp,tblptrl
 21475   0051BE  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21476   0051C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21477   0051C2  6AF8               	clrf	tblptru,c
 21478   0051C4                     	endif
 21479   0051C4                     	if	0	;tblptru may be non-zero
 21480   0051C4                     	endif
 21481   0051C4  0009               	tblrd		*+
 21482   0051C6  C4F5 F52B          	movff	tablat,??_powerUp+2
 21483   0051CA  0009               	tblrd		*+
 21484   0051CC  C4F5 F52C          	movff	tablat,??_powerUp+3
 21485   0051D0  D802               	call	u8378
 21486   0051D2  EFF4  F028         	goto	u8379
 21487   0051D6                     u8378:
 21488   0051D6  0005               	push	
 21489   0051D8  6EFA               	movwf	pclath,c
 21490   0051DA  502B               	movf	(??_powerUp+2)^(0+1280),w,c
 21491   0051DC  6EFD               	movwf	tosl,c
 21492   0051DE  502C               	movf	(??_powerUp+3)^(0+1280),w,c
 21493   0051E0  6EFE               	movwf	tosh,c
 21494   0051E2  6AFF               	clrf	tosu,c
 21495   0051E4  50FA               	movf	pclath,w,c
 21496   0051E6  0012               	return		;indir
 21497   0051E8                     u8379:
 21498   0051E8                     l10836:
 21499                           
 21500                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 21501   0051E8  2A2D               	incf	powerUp@i^(0+1280),f,c
 21502   0051EA  0E05               	movlw	5
 21503   0051EC  642D               	cpfsgt	powerUp@i^(0+1280),c
 21504   0051EE  EFFB  F028         	goto	u8381
 21505   0051F2  EFFD  F028         	goto	u8380
 21506   0051F6                     u8381:
 21507   0051F6  EF8D  F028         	goto	l10830
 21508   0051FA                     u8380:
 21509   0051FA  0012               	return		;funcret
 21510   0051FC                     __end_of_powerUp:
 21511                           	callstack 0
 21512                           
 21513 ;; *************** function _nvPowerUp *****************
 21514 ;; Defined at:
 21515 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 21516 ;; Parameters:    Size  Location     Type
 21517 ;;		None
 21518 ;; Auto vars:     Size  Location     Type
 21519 ;;  i               1   17[COMRAM] unsigned char 
 21520 ;; Return value:  Size  Location     Type
 21521 ;;                  1    wreg      void 
 21522 ;; Registers used:
 21523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21524 ;; Tracked objects:
 21525 ;;		On entry : 0/0
 21526 ;;		On exit  : 0/0
 21527 ;;		Unchanged: 0/0
 21528 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21533 ;;Total ram usage:        1 bytes
 21534 ;; Hardware stack levels used: 1
 21535 ;; Hardware stack levels required when called: 4
 21536 ;; This function calls:
 21537 ;;		_loadNvCache
 21538 ;; This function is called by:
 21539 ;;		_powerUp
 21540 ;; This function uses a non-reentrant model
 21541 ;;
 21542                           
 21543                           	psect	text4
 21544   0076E8                     __ptext4:
 21545                           	callstack 0
 21546   0076E8                     _nvPowerUp:
 21547                           	callstack 121
 21548   0076E8                     
 21549                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 21550   0076E8  0E01               	movlw	1
 21551   0076EA  6E12               	movwf	nvPowerUp@i^(0+1280),c
 21552   0076EC                     l10530:
 21553                           
 21554                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 21555   0076EC  5012               	movf	nvPowerUp@i^(0+1280),w,c
 21556   0076EE  0D02               	mullw	2
 21557   0076F0  0EB9               	movlw	low _nvDiagnostics
 21558   0076F2  24F3               	addwf	243,w,c
 21559   0076F4  6ED9               	movwf	fsr2l,c
 21560   0076F6  0E05               	movlw	high _nvDiagnostics
 21561   0076F8  20F4               	addwfc	prodh,w,c
 21562   0076FA  6EDA               	movwf	fsr2h,c
 21563   0076FC  6ADE               	clrf	postinc2,c
 21564   0076FE  6ADD               	clrf	postdec2,c
 21565   007700                     
 21566                           ;../../VLCBlib_PIC/nv.c: 141:     }
 21567   007700  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 21568   007702  0E02               	movlw	2
 21569   007704  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 21570   007706  EF87  F03B         	goto	u8091
 21571   00770A  EF89  F03B         	goto	u8090
 21572   00770E                     u8091:
 21573   00770E  EF76  F03B         	goto	l10530
 21574   007712                     u8090:
 21575   007712                     
 21576                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 21577   007712  0E00               	movlw	0
 21578   007714  0105               	movlb	5	; () banked
 21579   007716  6FBA               	movwf	(_nvDiagnostics+1)& (0+255),b
 21580   007718  0E02               	movlw	2
 21581   00771A  6FB9               	movwf	_nvDiagnostics& (0+255),b
 21582   00771C                     
 21583                           ; BSR set to: 5
 21584                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 21585   00771C  EC53  F038         	call	_loadNvCache	;wreg free
 21586   007720  0012               	return		;funcret
 21587   007722                     __end_of_nvPowerUp:
 21588                           	callstack 0
 21589                           
 21590 ;; *************** function _mnsPowerUp *****************
 21591 ;; Defined at:
 21592 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;		None
 21595 ;; Auto vars:     Size  Location     Type
 21596 ;;  temp            2   13[COMRAM] int 
 21597 ;;  i               1   12[COMRAM] unsigned char 
 21598 ;; Return value:  Size  Location     Type
 21599 ;;                  1    wreg      void 
 21600 ;; Registers used:
 21601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21602 ;; Tracked objects:
 21603 ;;		On entry : 0/0
 21604 ;;		On exit  : 0/0
 21605 ;;		Unchanged: 0/0
 21606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21611 ;;Total ram usage:        3 bytes
 21612 ;; Hardware stack levels used: 1
 21613 ;; Hardware stack levels required when called: 3
 21614 ;; This function calls:
 21615 ;;		_readNVM
 21616 ;;		_setLEDsByMode
 21617 ;;		_tickGet
 21618 ;; This function is called by:
 21619 ;;		_powerUp
 21620 ;; This function uses a non-reentrant model
 21621 ;;
 21622                           
 21623                           	psect	text5
 21624   0046C0                     __ptext5:
 21625                           	callstack 0
 21626   0046C0                     _mnsPowerUp:
 21627                           	callstack 122
 21628   0046C0                     
 21629                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 21630   0046C0  0EFD               	movlw	253
 21631   0046C2  6E07               	movwf	readNVM@index^(0+1280),c
 21632   0046C4  0E03               	movlw	3
 21633   0046C6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21634   0046C8  0E00               	movlw	0
 21635   0046CA  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21636   0046CC  0E00               	movlw	0
 21637   0046CE  ECDB  F036         	call	_readNVM
 21638   0046D2  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21639   0046D6  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21640   0046DA                     
 21641                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 21642   0046DA  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21643   0046DC  EF74  F023         	goto	u7480
 21644   0046E0  EF72  F023         	goto	u7481
 21645   0046E4                     u7481:
 21646   0046E4  EF79  F023         	goto	l1075
 21647   0046E8                     u7480:
 21648   0046E8                     l9998:
 21649                           
 21650                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 21651   0046E8  0105               	movlb	5	; () banked
 21652   0046EA  6B8E               	clrf	(_nn+1)& (0+255),b
 21653                           
 21654                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 21655   0046EC  6B8D               	clrf	_nn& (0+255),b
 21656                           
 21657                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 21658   0046EE  EF93  F023         	goto	l10006
 21659   0046F2                     l1075:
 21660                           
 21661                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 21662   0046F2  C50E  F58E         	movff	mnsPowerUp@temp,_nn+1
 21663   0046F6                     
 21664                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 21665   0046F6  0EFC               	movlw	252
 21666   0046F8  6E07               	movwf	readNVM@index^(0+1280),c
 21667   0046FA  0E03               	movlw	3
 21668   0046FC  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21669   0046FE  0E00               	movlw	0
 21670   004700  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21671   004702  0E00               	movlw	0
 21672   004704  ECDB  F036         	call	_readNVM
 21673   004708  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21674   00470C  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21675   004710                     
 21676                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 21677   004710  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21678   004712  EF8F  F023         	goto	u7490
 21679   004716  EF8D  F023         	goto	u7491
 21680   00471A                     u7491:
 21681   00471A  EF91  F023         	goto	l1077
 21682   00471E                     u7490:
 21683   00471E  EF74  F023         	goto	l9998
 21684   004722                     l1077:
 21685                           
 21686                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 21687   004722  C50E  F58D         	movff	mnsPowerUp@temp,_nn
 21688   004726                     l10006:
 21689                           
 21690                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 21691   004726  0EFB               	movlw	251
 21692   004728  6E07               	movwf	readNVM@index^(0+1280),c
 21693   00472A  0E03               	movlw	3
 21694   00472C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21695   00472E  0E00               	movlw	0
 21696   004730  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21697   004732  0E00               	movlw	0
 21698   004734  ECDB  F036         	call	_readNVM
 21699   004738  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21700   00473C  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21701   004740                     
 21702                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 21703   004740  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21704   004742  EFA7  F023         	goto	u7500
 21705   004746  EFA5  F023         	goto	u7501
 21706   00474A                     u7501:
 21707   00474A  EFAB  F023         	goto	l1079
 21708   00474E                     u7500:
 21709   00474E                     
 21710                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 21711   00474E  0105               	movlb	5	; () banked
 21712   004750  69A1               	setf	_mode_state& (0+255),b
 21713                           
 21714                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 21715   004752  EFAD  F023         	goto	l1080
 21716   004756                     l1079:
 21717                           
 21718                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 21719   004756  C50E  F5A1         	movff	mnsPowerUp@temp,_mode_state
 21720   00475A                     l1080:
 21721                           
 21722                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 21723   00475A  C5A1  F59E         	movff	_mode_state,_setupModePreviousMode
 21724   00475E                     
 21725                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 21726   00475E  0EF9               	movlw	249
 21727   004760  6E07               	movwf	readNVM@index^(0+1280),c
 21728   004762  0E03               	movlw	3
 21729   004764  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21730   004766  0E00               	movlw	0
 21731   004768  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21732   00476A  0E00               	movlw	0
 21733   00476C  ECDB  F036         	call	_readNVM
 21734   004770  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21735   004774  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21736   004778                     
 21737                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 21738   004778  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21739   00477A  EFC3  F023         	goto	u7510
 21740   00477E  EFC1  F023         	goto	u7511
 21741   004782                     u7511:
 21742   004782  EFC7  F023         	goto	l1081
 21743   004786                     u7510:
 21744   004786                     
 21745                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 21746   004786  0105               	movlb	5	; () banked
 21747   004788  6BA4               	clrf	_mode_flags& (0+255),b
 21748                           
 21749                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 21750   00478A  EFC9  F023         	goto	l10018
 21751   00478E                     l1081:
 21752                           
 21753                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 21754   00478E  C50E  F5A4         	movff	mnsPowerUp@temp,_mode_flags
 21755   004792                     l10018:
 21756                           
 21757                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 21758   004792  0105               	movlb	5	; () banked
 21759   004794  97A4               	bcf	_mode_flags& (0+255),3,b
 21760                           
 21761                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 21762   004796  87A4               	bsf	_mode_flags& (0+255),3,b
 21763   004798                     
 21764                           ; BSR set to: 5
 21765                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 21766   004798  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 21767   00479C                     
 21768                           ; BSR set to: 5
 21769                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 21770   00479C  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 21771   0047A0                     
 21772                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 21773   0047A0  EC66  F036         	call	_tickGet	;wreg free
 21774   0047A4  C501  F56C         	movff	?_tickGet,_pbTimer
 21775   0047A8  C502  F56D         	movff	?_tickGet+1,_pbTimer+1
 21776   0047AC  C503  F56E         	movff	?_tickGet+2,_pbTimer+2
 21777   0047B0  C504  F56F         	movff	?_tickGet+3,_pbTimer+3
 21778   0047B4                     
 21779                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 21780   0047B4  0105               	movlb	5	; () banked
 21781   0047B6  6B9D               	clrf	_pbWasPushed& (0+255),b
 21782   0047B8                     
 21783                           ; BSR set to: 5
 21784                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 21785   0047B8  0E01               	movlw	1
 21786   0047BA  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 21787   0047BC                     l10034:
 21788                           
 21789                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 21790   0047BC  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 21791   0047BE  0D02               	mullw	2
 21792   0047C0  0EAB               	movlw	low _mnsDiagnostics
 21793   0047C2  24F3               	addwf	243,w,c
 21794   0047C4  6ED9               	movwf	fsr2l,c
 21795   0047C6  0E05               	movlw	high _mnsDiagnostics
 21796   0047C8  20F4               	addwfc	prodh,w,c
 21797   0047CA  6EDA               	movwf	fsr2h,c
 21798   0047CC  6ADE               	clrf	postinc2,c
 21799   0047CE  6ADD               	clrf	postdec2,c
 21800   0047D0                     
 21801                           ;../../VLCBlib_PIC/mns.c: 342:     }
 21802   0047D0  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 21803   0047D2  0E06               	movlw	6
 21804   0047D4  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 21805   0047D6  EFEF  F023         	goto	u7521
 21806   0047DA  EFF1  F023         	goto	u7520
 21807   0047DE                     u7521:
 21808   0047DE  EFDE  F023         	goto	l10034
 21809   0047E2                     u7520:
 21810   0047E2                     
 21811                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 21812   0047E2  0E00               	movlw	0
 21813   0047E4  0105               	movlb	5	; () banked
 21814   0047E6  6FAC               	movwf	(_mnsDiagnostics+1)& (0+255),b
 21815   0047E8  0E06               	movlw	6
 21816   0047EA  6FAB               	movwf	_mnsDiagnostics& (0+255),b
 21817   0047EC                     
 21818                           ; BSR set to: 5
 21819                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 21820   0047EC  6B9C               	clrf	_heartbeatSequence& (0+255),b
 21821                           
 21822                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 21823   0047EE  0E00               	movlw	0
 21824   0047F0  6F68               	movwf	_heartbeatTimer& (0+255),b
 21825   0047F2  0E00               	movlw	0
 21826   0047F4  6F69               	movwf	(_heartbeatTimer+1)& (0+255),b
 21827   0047F6  0E00               	movlw	0
 21828   0047F8  6F6A               	movwf	(_heartbeatTimer+2)& (0+255),b
 21829   0047FA  0E00               	movlw	0
 21830   0047FC  6F6B               	movwf	(_heartbeatTimer+3)& (0+255),b
 21831                           
 21832                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 21833   0047FE  0E00               	movlw	0
 21834   004800  6F64               	movwf	_uptimeTimer& (0+255),b
 21835   004802  0E00               	movlw	0
 21836   004804  6F65               	movwf	(_uptimeTimer+1)& (0+255),b
 21837   004806  0E00               	movlw	0
 21838   004808  6F66               	movwf	(_uptimeTimer+2)& (0+255),b
 21839   00480A  0E00               	movlw	0
 21840   00480C  6F67               	movwf	(_uptimeTimer+3)& (0+255),b
 21841   00480E                     
 21842                           ; BSR set to: 5
 21843   00480E  0012               	return		;funcret
 21844   004810                     __end_of_mnsPowerUp:
 21845                           	callstack 0
 21846                           
 21847 ;; *************** function _consumerPowerUp *****************
 21848 ;; Defined at:
 21849 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 21850 ;; Parameters:    Size  Location     Type
 21851 ;;		None
 21852 ;; Auto vars:     Size  Location     Type
 21853 ;;  temp            1    0[COMRAM] unsigned char 
 21854 ;; Return value:  Size  Location     Type
 21855 ;;                  1    wreg      void 
 21856 ;; Registers used:
 21857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21858 ;; Tracked objects:
 21859 ;;		On entry : 0/0
 21860 ;;		On exit  : 0/0
 21861 ;;		Unchanged: 0/0
 21862 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21867 ;;Total ram usage:        1 bytes
 21868 ;; Hardware stack levels used: 1
 21869 ;; Hardware stack levels required when called: 1
 21870 ;; This function calls:
 21871 ;;		Nothing
 21872 ;; This function is called by:
 21873 ;;		_powerUp
 21874 ;; This function uses a non-reentrant model
 21875 ;;
 21876                           
 21877                           	psect	text6
 21878   007722                     __ptext6:
 21879                           	callstack 0
 21880   007722                     _consumerPowerUp:
 21881                           	callstack 124
 21882   007722                     
 21883                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 21884   007722  0E01               	movlw	1
 21885   007724  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 21886   007726                     l9608:
 21887                           
 21888                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 21889   007726  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 21890   007728  0D02               	mullw	2
 21891   00772A  0EBF               	movlw	low _consumerDiagnostics
 21892   00772C  24F3               	addwf	243,w,c
 21893   00772E  6ED9               	movwf	fsr2l,c
 21894   007730  0E05               	movlw	high _consumerDiagnostics
 21895   007732  20F4               	addwfc	prodh,w,c
 21896   007734  6EDA               	movwf	fsr2h,c
 21897   007736  6ADE               	clrf	postinc2,c
 21898   007738  6ADD               	clrf	postdec2,c
 21899   00773A                     
 21900                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 21901   00773A  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 21902   00773C  0E02               	movlw	2
 21903   00773E  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 21904   007740  EFA4  F03B         	goto	u6971
 21905   007744  EFA6  F03B         	goto	u6970
 21906   007748                     u6971:
 21907   007748  EF93  F03B         	goto	l9608
 21908   00774C                     u6970:
 21909   00774C                     
 21910                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 21911   00774C  0E00               	movlw	0
 21912   00774E  0105               	movlb	5	; () banked
 21913   007750  6FC0               	movwf	(_consumerDiagnostics+1)& (0+255),b
 21914   007752  0E02               	movlw	2
 21915   007754  6FBF               	movwf	_consumerDiagnostics& (0+255),b
 21916   007756                     
 21917                           ; BSR set to: 5
 21918   007756  0012               	return		;funcret
 21919   007758                     __end_of_consumerPowerUp:
 21920                           	callstack 0
 21921                           
 21922 ;; *************** function _canPowerUp *****************
 21923 ;; Defined at:
 21924 ;;		line 254 in file "../../VLCBlib_PIC/can18_can_2.c"
 21925 ;; Parameters:    Size  Location     Type
 21926 ;;		None
 21927 ;; Auto vars:     Size  Location     Type
 21928 ;;  temp            2   12[COMRAM] int 
 21929 ;;  txFifoObj       2    0        PTR unsigned char 
 21930 ;; Return value:  Size  Location     Type
 21931 ;;                  1    wreg      void 
 21932 ;; Registers used:
 21933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21934 ;; Tracked objects:
 21935 ;;		On entry : 0/0
 21936 ;;		On exit  : 0/0
 21937 ;;		Unchanged: 0/0
 21938 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21943 ;;Total ram usage:        2 bytes
 21944 ;; Hardware stack levels used: 1
 21945 ;; Hardware stack levels required when called: 3
 21946 ;; This function calls:
 21947 ;;		_CAN1_OperationModeSet
 21948 ;;		_prepareSelfEnumResponse
 21949 ;;		_readNVM
 21950 ;;		_tickGet
 21951 ;; This function is called by:
 21952 ;;		_powerUp
 21953 ;; This function uses a non-reentrant model
 21954 ;;
 21955                           
 21956                           	psect	text7
 21957   00454E                     __ptext7:
 21958                           	callstack 0
 21959   00454E                     _canPowerUp:
 21960                           	callstack 122
 21961   00454E                     
 21962                           ;../../VLCBlib_PIC/can18_can_2.c: 255:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          6:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.readIndex =
      +                           0;
 21963   00454E  0105               	movlb	5	; () banked
 21964   004550  6BC7               	clrf	(_rxQueue+2)& (0+255),b
 21965                           
 21966                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.writeIndex = 0;
 21967   004552  6BC8               	clrf	(_rxQueue+3)& (0+255),b
 21968   004554                     
 21969                           ; BSR set to: 5
 21970                           ;../../VLCBlib_PIC/can18_can_2.c: 261:     rxQueue.messages = rxBuffers;
 21971   004554  0E49               	movlw	low _rxBuffers
 21972   004556  6FC5               	movwf	_rxQueue& (0+255),b
 21973   004558  0E06               	movlw	high _rxBuffers
 21974   00455A  6FC6               	movwf	(_rxQueue+1)& (0+255),b
 21975   00455C                     
 21976                           ; BSR set to: 5
 21977                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     rxQueue.size = 8;
 21978   00455C  0E08               	movlw	8
 21979   00455E  6FC9               	movwf	(_rxQueue+4)& (0+255),b
 21980   004560                     
 21981                           ; BSR set to: 5
 21982                           ;../../VLCBlib_PIC/can18_can_2.c: 264:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 21983   004560  0EFE               	movlw	254
 21984   004562  6E07               	movwf	readNVM@index^(0+1280),c
 21985   004564  0E03               	movlw	3
 21986   004566  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21987   004568  0E00               	movlw	0
 21988   00456A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21989   00456C  0E00               	movlw	0
 21990   00456E  ECDB  F036         	call	_readNVM
 21991   004572  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 21992   004576  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 21993   00457A                     
 21994                           ;../../VLCBlib_PIC/can18_can_2.c: 265:     if (temp < 0) {
 21995   00457A  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 21996   00457C  EFC4  F022         	goto	u6850
 21997   004580  EFC2  F022         	goto	u6851
 21998   004584                     u6851:
 21999   004584  EFC8  F022         	goto	l348
 22000   004588                     u6850:
 22001   004588                     
 22002                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = 0;
 22003   004588  0105               	movlb	5	; () banked
 22004   00458A  6BA8               	clrf	_canId& (0+255),b
 22005                           
 22006                           ;../../VLCBlib_PIC/can18_can_2.c: 268:     } else {
 22007   00458C  EFCA  F022         	goto	l9364
 22008   004590                     l348:
 22009                           
 22010                           ;../../VLCBlib_PIC/can18_can_2.c: 269:         canId = (uint8_t)temp;
 22011   004590  C50D  F5A8         	movff	canPowerUp@temp,_canId
 22012   004594                     l9364:
 22013                           
 22014                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     for (temp=1; temp<18; temp++) {
 22015   004594  0E00               	movlw	0
 22016   004596  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 22017   004598  0E01               	movlw	1
 22018   00459A  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 22019   00459C                     l9370:
 22020                           
 22021                           ;../../VLCBlib_PIC/can18_can_2.c: 274:         canDiagnostics[temp].asUint = 0;
 22022   00459C  90D8               	bcf	status,0,c
 22023   00459E  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 22024   0045A0  6ED9               	movwf	fsr2l,c
 22025   0045A2  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 22026   0045A4  6EDA               	movwf	fsr2h,c
 22027   0045A6  0E91               	movlw	low _canDiagnostics
 22028   0045A8  26D9               	addwf	fsr2l,f,c
 22029   0045AA  0E06               	movlw	high _canDiagnostics
 22030   0045AC  22DA               	addwfc	fsr2h,f,c
 22031   0045AE  6ADE               	clrf	postinc2,c
 22032   0045B0  6ADD               	clrf	postdec2,c
 22033   0045B2                     
 22034                           ;../../VLCBlib_PIC/can18_can_2.c: 275:     }
 22035   0045B2  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 22036   0045B4  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 22037   0045B6  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22038   0045B8  EFE7  F022         	goto	u6861
 22039   0045BC  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 22040   0045BE  E109               	bnz	u6860
 22041   0045C0  0E12               	movlw	18
 22042   0045C2  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 22043   0045C4  A0D8               	btfss	status,0,c
 22044   0045C6  EFE7  F022         	goto	u6861
 22045   0045CA  EFE9  F022         	goto	u6860
 22046   0045CE                     u6861:
 22047   0045CE  EFCE  F022         	goto	l9370
 22048   0045D2                     u6860:
 22049   0045D2                     
 22050                           ;../../VLCBlib_PIC/can18_can_2.c: 276:     canDiagnostics[0x00].asUint = 18;
 22051   0045D2  0E00               	movlw	0
 22052   0045D4  0106               	movlb	6	; () banked
 22053   0045D6  6F92               	movwf	(_canDiagnostics+1)& (0+255),b
 22054   0045D8  0E12               	movlw	18
 22055   0045DA  6F91               	movwf	_canDiagnostics& (0+255),b
 22056   0045DC                     
 22057                           ; BSR set to: 6
 22058                           ;../../VLCBlib_PIC/can18_can_2.c: 279:     canTransmitFailed=0;
 22059   0045DC  0105               	movlb	5	; () banked
 22060   0045DE  6BA7               	clrf	_canTransmitFailed& (0+255),b
 22061                           
 22062                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     RB2PPS = 0x46;
 22063   0045E0  0E46               	movlw	70
 22064   0045E2  0102               	movlb	2	; () banked
 22065   0045E4  6F0B               	movwf	11,b	;volatile
 22066                           
 22067                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     CANRXPPS = 013 ;
 22068   0045E6  0E0B               	movlw	11
 22069   0045E8  6F3D               	movwf	61,b	;volatile
 22070   0045EA                     
 22071                           ; BSR set to: 2
 22072                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     TRISBbits.TRISB2 = 0;
 22073   0045EA  94C7               	bcf	199,2,c	;volatile
 22074   0045EC                     
 22075                           ; BSR set to: 2
 22076                           ;../../VLCBlib_PIC/can18_can_2.c: 285:     TRISBbits.TRISB3 = 1;
 22077   0045EC  86C7               	bsf	199,3,c	;volatile
 22078   0045EE                     
 22079                           ; BSR set to: 2
 22080                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     IPR5 = 0;
 22081   0045EE  0103               	movlb	3	; () banked
 22082   0045F0  6B67               	clrf	103,b	;volatile
 22083   0045F2                     
 22084                           ; BSR set to: 3
 22085                           ;../../VLCBlib_PIC/can18_can_2.c: 288:     C1CONHbits.ON = 1;
 22086   0045F2  0101               	movlb	1	; () banked
 22087   0045F4  8F01               	bsf	1,7,b	;volatile
 22088   0045F6                     
 22089                           ; BSR set to: 1
 22090                           ;../../VLCBlib_PIC/can18_can_2.c: 291:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 22091   0045F6  0E04               	movlw	4
 22092   0045F8  EC6F  F034         	call	_CAN1_OperationModeSet
 22093   0045FC  0900               	iorlw	0
 22094   0045FE  A4D8               	btfss	status,2,c
 22095   004600  EF04  F023         	goto	u6871
 22096   004604  EF06  F023         	goto	u6870
 22097   004608                     u6871:
 22098   004608  EF49  F023         	goto	l9474
 22099   00460C                     u6870:
 22100   00460C                     
 22101                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1FIFOBA = 0x3BB0;
 22102   00460C  0EB0               	movlw	176
 22103   00460E  0101               	movlb	1	; () banked
 22104   004610  6F4C               	movwf	76,b	;volatile
 22105   004612  0E3B               	movlw	59
 22106   004614  6F4D               	movwf	77,b	;volatile
 22107   004616  0E00               	movlw	0
 22108   004618  6F4E               	movwf	78,b	;volatile
 22109   00461A  0E00               	movlw	0
 22110   00461C  6F4F               	movwf	79,b	;volatile
 22111   00461E                     
 22112                           ; BSR set to: 1
 22113                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONL = 0x00;
 22114   00461E  6B00               	clrf	0,b	;volatile
 22115                           
 22116                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONH = 0x87;
 22117   004620  0E87               	movlw	135
 22118   004622  6F01               	movwf	1,b	;volatile
 22119                           
 22120                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1CONU = 0x10;
 22121   004624  0E10               	movlw	16
 22122   004626  6F02               	movwf	2,b	;volatile
 22123                           
 22124                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1CONT = 0x50;
 22125   004628  0E50               	movlw	80
 22126   00462A  6F03               	movwf	3,b	;volatile
 22127   00462C                     
 22128                           ; BSR set to: 1
 22129                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGL = 0x00;
 22130   00462C  6B04               	clrf	4,b	;volatile
 22131                           
 22132                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGH = 0x03;
 22133   00462E  0E03               	movlw	3
 22134   004630  6F05               	movwf	5,b	;volatile
 22135                           
 22136                           ;../../VLCBlib_PIC/can18_can_2.c: 303:         C1NBTCFGU = 0x02;
 22137   004632  0E02               	movlw	2
 22138   004634  6F06               	movwf	6,b	;volatile
 22139                           
 22140                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1NBTCFGT = 0x3F;
 22141   004636  0E3F               	movlw	63
 22142   004638  6F07               	movwf	7,b	;volatile
 22143                           
 22144                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONL = 0x10;
 22145   00463A  0E10               	movlw	16
 22146   00463C  6F50               	movwf	80,b	;volatile
 22147                           
 22148                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONH = 0x04;
 22149   00463E  0E04               	movlw	4
 22150   004640  6F51               	movwf	81,b	;volatile
 22151                           
 22152                           ;../../VLCBlib_PIC/can18_can_2.c: 308:         C1TXQCONU = 0x6F;
 22153   004642  0E6F               	movlw	111
 22154   004644  6F52               	movwf	82,b	;volatile
 22155   004646                     
 22156                           ; BSR set to: 1
 22157   004646  0E03               	movlw	3
 22158   004648  6F53               	movwf	83,b	;volatile
 22159   00464A                     
 22160                           ; BSR set to: 1
 22161                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1L = 0x80;
 22162   00464A  0E80               	movlw	128
 22163   00464C  6F5C               	movwf	92,b	;volatile
 22164   00464E                     
 22165                           ; BSR set to: 1
 22166                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1H = 0x04;
 22167   00464E  0E04               	movlw	4
 22168   004650  6F5D               	movwf	93,b	;volatile
 22169   004652                     
 22170                           ; BSR set to: 1
 22171                           ;../../VLCBlib_PIC/can18_can_2.c: 316:         C1FIFOCON1U = 0x6F;
 22172   004652  0E6F               	movlw	111
 22173   004654  6F5E               	movwf	94,b	;volatile
 22174   004656                     
 22175                           ; BSR set to: 1
 22176   004656  6B5F               	clrf	95,b	;volatile
 22177   004658                     
 22178                           ; BSR set to: 1
 22179                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2L = 0x80;
 22180   004658  0E80               	movlw	128
 22181   00465A  6F68               	movwf	104,b	;volatile
 22182   00465C                     
 22183                           ; BSR set to: 1
 22184                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2H = 0x04;
 22185   00465C  0E04               	movlw	4
 22186   00465E  6F69               	movwf	105,b	;volatile
 22187   004660                     
 22188                           ; BSR set to: 1
 22189                           ;../../VLCBlib_PIC/can18_can_2.c: 324:         C1FIFOCON2U = 0x60;
 22190   004660  0E60               	movlw	96
 22191   004662  6F6A               	movwf	106,b	;volatile
 22192   004664                     
 22193                           ; BSR set to: 1
 22194   004664  0E1F               	movlw	31
 22195   004666  6F6B               	movwf	107,b	;volatile
 22196   004668                     
 22197                           ; BSR set to: 1
 22198                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3L = 0x08;
 22199   004668  0E08               	movlw	8
 22200   00466A  6F74               	movwf	116,b	;volatile
 22201   00466C                     
 22202                           ; BSR set to: 1
 22203                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3H = 0x04;
 22204   00466C  0E04               	movlw	4
 22205   00466E  6F75               	movwf	117,b	;volatile
 22206   004670                     
 22207                           ; BSR set to: 1
 22208                           ;../../VLCBlib_PIC/can18_can_2.c: 332:         C1FIFOCON3U = 0x00;
 22209   004670  6B76               	clrf	118,b	;volatile
 22210   004672                     
 22211                           ; BSR set to: 1
 22212   004672  0E1F               	movlw	31
 22213   004674  6F77               	movwf	119,b	;volatile
 22214   004676                     
 22215                           ; BSR set to: 1
 22216                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0L = 0x00;
 22217   004676  6B8C               	clrf	140,b	;volatile
 22218   004678                     
 22219                           ; BSR set to: 1
 22220                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0H = 0x00;
 22221   004678  6B8D               	clrf	141,b	;volatile
 22222   00467A                     
 22223                           ; BSR set to: 1
 22224                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1FLTOBJ0U = 0x00;
 22225   00467A  6B8E               	clrf	142,b	;volatile
 22226   00467C                     
 22227                           ; BSR set to: 1
 22228                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1FLTOBJ0T = 0x00;
 22229   00467C  6B8F               	clrf	143,b	;volatile
 22230   00467E                     
 22231                           ; BSR set to: 1
 22232                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0L = 0x00;
 22233   00467E  6B90               	clrf	144,b	;volatile
 22234   004680                     
 22235                           ; BSR set to: 1
 22236                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0H = 0x00;
 22237   004680  6B91               	clrf	145,b	;volatile
 22238   004682                     
 22239                           ; BSR set to: 1
 22240                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1MASK0U = 0x00;
 22241   004682  6B92               	clrf	146,b	;volatile
 22242   004684                     
 22243                           ; BSR set to: 1
 22244                           ;../../VLCBlib_PIC/can18_can_2.c: 345:         C1MASK0T = 0x40;
 22245   004684  0E40               	movlw	64
 22246   004686  6F93               	movwf	147,b	;volatile
 22247   004688                     
 22248                           ; BSR set to: 1
 22249                           ;../../VLCBlib_PIC/can18_can_2.c: 346:         C1FLTCON0L = 0x83;
 22250   004688  0E83               	movlw	131
 22251   00468A  6F80               	movwf	128,b	;volatile
 22252   00468C                     
 22253                           ; BSR set to: 1
 22254                           ;../../VLCBlib_PIC/can18_can_2.c: 349:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 22255   00468C  0E06               	movlw	6
 22256   00468E  EC6F  F034         	call	_CAN1_OperationModeSet
 22257   004692                     l9474:
 22258                           
 22259                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     prepareSelfEnumResponse();
 22260   004692  ECEE  F035         	call	_prepareSelfEnumResponse	;wreg free
 22261   004696                     
 22262                           ;../../VLCBlib_PIC/can18_can_2.c: 355:     enumerationState = NO_ENUMERATION;
 22263   004696  0105               	movlb	5	; () banked
 22264   004698  6BA5               	clrf	_enumerationState& (0+255),b
 22265   00469A                     
 22266                           ; BSR set to: 5
 22267                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     enumerationStartTime.val = tickGet();
 22268   00469A  EC66  F036         	call	_tickGet	;wreg free
 22269   00469E  C501  F570         	movff	?_tickGet,_enumerationStartTime
 22270   0046A2  C502  F571         	movff	?_tickGet+1,_enumerationStartTime+1
 22271   0046A6  C503  F572         	movff	?_tickGet+2,_enumerationStartTime+2
 22272   0046AA  C504  F573         	movff	?_tickGet+3,_enumerationStartTime+3
 22273   0046AE                     
 22274                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     IPR0bits.CANIP = 0;
 22275   0046AE  0103               	movlb	3	; () banked
 22276   0046B0  9D62               	bcf	98,6,b	;volatile
 22277   0046B2                     
 22278                           ; BSR set to: 3
 22279                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     PIR0bits.CANIF = 0;
 22280   0046B2  9CAE               	bcf	174,6,c	;volatile
 22281   0046B4                     
 22282                           ; BSR set to: 3
 22283                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTUbits.TXIE = 1;
 22284   0046B4  0101               	movlb	1	; () banked
 22285   0046B6  811E               	bsf	30,0,b	;volatile
 22286   0046B8                     
 22287                           ; BSR set to: 1
 22288                           ;../../VLCBlib_PIC/can18_can_2.c: 361:     C1INTTbits.RXOVIE = 1;
 22289   0046B8  871F               	bsf	31,3,b	;volatile
 22290   0046BA                     
 22291                           ; BSR set to: 1
 22292                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     C1INTTbits.IVMIE = 1;
 22293   0046BA  8F1F               	bsf	31,7,b	;volatile
 22294   0046BC                     
 22295                           ; BSR set to: 1
 22296                           ;../../VLCBlib_PIC/can18_can_2.c: 364:     PIE0bits.CANIE = 1;
 22297   0046BC  8C9E               	bsf	158,6,c	;volatile
 22298   0046BE                     
 22299                           ; BSR set to: 1
 22300   0046BE  0012               	return		;funcret
 22301   0046C0                     __end_of_canPowerUp:
 22302                           	callstack 0
 22303                           
 22304 ;; *************** function _bootPowerUp *****************
 22305 ;; Defined at:
 22306 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 22307 ;; Parameters:    Size  Location     Type
 22308 ;;		None
 22309 ;; Auto vars:     Size  Location     Type
 22310 ;;  a               3   15[COMRAM] unsigned um
 22311 ;;  i               1   14[COMRAM] unsigned char 
 22312 ;;  found           1   13[COMRAM] unsigned char 
 22313 ;;  b               1   12[COMRAM] unsigned char 
 22314 ;; Return value:  Size  Location     Type
 22315 ;;                  1    wreg      void 
 22316 ;; Registers used:
 22317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22318 ;; Tracked objects:
 22319 ;;		On entry : 0/0
 22320 ;;		On exit  : 0/0
 22321 ;;		Unchanged: 0/0
 22322 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22324 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22326 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22327 ;;Total ram usage:        6 bytes
 22328 ;; Hardware stack levels used: 1
 22329 ;; Hardware stack levels required when called: 3
 22330 ;; This function calls:
 22331 ;;		_readNVM
 22332 ;; This function is called by:
 22333 ;;		_powerUp
 22334 ;; This function uses a non-reentrant model
 22335 ;;
 22336                           
 22337                           	psect	text8
 22338   0054D4                     __ptext8:
 22339                           	callstack 0
 22340   0054D4                     _bootPowerUp:
 22341                           	callstack 122
 22342   0054D4                     
 22343                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 22344   0054D4  0105               	movlb	5	; () banked
 22345   0054D6  6BAA               	clrf	_bootloaderType& (0+255),b
 22346                           
 22347                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 22348   0054D8  6BA9               	clrf	_bootloaderVersion& (0+255),b
 22349   0054DA                     
 22350                           ; BSR set to: 5
 22351                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 22352   0054DA  0E00               	movlw	0
 22353   0054DC  6E10               	movwf	bootPowerUp@a^(0+1280),c
 22354   0054DE  0E00               	movlw	0
 22355   0054E0  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 22356   0054E2  0E00               	movlw	0
 22357   0054E4  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 22358   0054E6                     l9290:
 22359   0054E6                     
 22360                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 22361   0054E6  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 22362   0054E8                     l9298:
 22363                           
 22364                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 22365   0054E8  500F               	movf	bootPowerUp@i^(0+1280),w,c
 22366   0054EA  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22367   0054EC  6E07               	movwf	readNVM@index^(0+1280),c
 22368   0054EE  0E00               	movlw	0
 22369   0054F0  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22370   0054F2  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22371   0054F4  0E00               	movlw	0
 22372   0054F6  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22373   0054F8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22374   0054FA  0E01               	movlw	1
 22375   0054FC  ECDB  F036         	call	_readNVM
 22376   005500  5007               	movf	?_readNVM^(0+1280),w,c
 22377   005502  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 22378   005504                     
 22379                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 22380   005504  0E95               	movlw	low _bl_version
 22381   005506  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 22382   005508  6EF6               	movwf	tblptrl,c
 22383   00550A  6AF7               	clrf	tblptrh,c
 22384   00550C  0EFF               	movlw	high _bl_version
 22385   00550E  22F7               	addwfc	tblptrh,f,c
 22386   005510                     	if	1	;There are 3 active tblptr bytes
 22387   005510  6AF8               	clrf	tblptru,c
 22388   005512  0E00               	movlw	low (__mediumconst shr (0+16))
 22389   005514  22F8               	addwfc	tblptru,f,c
 22390   005516                     	endif
 22391   005516  0008               	tblrd		*
 22392   005518  50F5               	movf	tablat,w,c
 22393   00551A  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 22394   00551C  B4D8               	btfsc	status,2,c
 22395   00551E  EF93  F02A         	goto	u6791
 22396   005522  EF95  F02A         	goto	u6790
 22397   005526                     u6791:
 22398   005526  EF98  F02A         	goto	l9306
 22399   00552A                     u6790:
 22400   00552A                     
 22401                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 22402   00552A  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 22403                           
 22404                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 22405   00552C  EFA3  F02A         	goto	l9312
 22406   005530                     l9306:
 22407                           
 22408                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 22409   005530  0E01               	movlw	1
 22410   005532  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 22411   005534                     
 22412                           ;../../VLCBlib_PIC/boot.c: 217:         }
 22413   005534  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 22414   005536  0E0A               	movlw	10
 22415   005538  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 22416   00553A  EFA1  F02A         	goto	u6801
 22417   00553E  EFA3  F02A         	goto	u6800
 22418   005542                     u6801:
 22419   005542  EF74  F02A         	goto	l9298
 22420   005546                     u6800:
 22421   005546                     l9312:
 22422                           
 22423                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 22424   005546  500E               	movf	bootPowerUp@found^(0+1280),w,c
 22425   005548  B4D8               	btfsc	status,2,c
 22426   00554A  EFA9  F02A         	goto	u6811
 22427   00554E  EFAB  F02A         	goto	u6810
 22428   005552                     u6811:
 22429   005552  EFCB  F02A         	goto	l118
 22430   005556                     u6810:
 22431   005556                     
 22432                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 22433   005556  0E0B               	movlw	11
 22434   005558  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22435   00555A  6E07               	movwf	readNVM@index^(0+1280),c
 22436   00555C  0E00               	movlw	0
 22437   00555E  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22438   005560  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22439   005562  0E00               	movlw	0
 22440   005564  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22441   005566  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22442   005568  0E01               	movlw	1
 22443   00556A  ECDB  F036         	call	_readNVM
 22444   00556E  5007               	movf	?_readNVM^(0+1280),w,c
 22445   005570  0105               	movlb	5	; () banked
 22446   005572  6FAA               	movwf	_bootloaderType& (0+255),b
 22447                           
 22448                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 22449   005574  0E0C               	movlw	12
 22450   005576  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22451   005578  6E07               	movwf	readNVM@index^(0+1280),c
 22452   00557A  0E00               	movlw	0
 22453   00557C  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22454   00557E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22455   005580  0E00               	movlw	0
 22456   005582  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22457   005584  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22458   005586  0E01               	movlw	1
 22459   005588  ECDB  F036         	call	_readNVM
 22460   00558C  5007               	movf	?_readNVM^(0+1280),w,c
 22461   00558E  0105               	movlb	5	; () banked
 22462   005590  6FA9               	movwf	_bootloaderVersion& (0+255),b
 22463   005592  EFDD  F02A         	goto	l119
 22464   005596                     l118:
 22465                           
 22466                           ;../../VLCBlib_PIC/boot.c: 223:     }
 22467   005596  0E01               	movlw	1
 22468   005598  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 22469   00559A  0E00               	movlw	0
 22470   00559C  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 22471   00559E  0E00               	movlw	0
 22472   0055A0  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 22473   0055A2  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 22474   0055A4  E10A               	bnz	u6820
 22475   0055A6  2810               	incf	bootPowerUp@a^(0+1280),w,c
 22476   0055A8  0E07               	movlw	7
 22477   0055AA  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 22478   0055AC  A0D8               	btfss	status,0,c
 22479   0055AE  EFDB  F02A         	goto	u6821
 22480   0055B2  EFDD  F02A         	goto	u6820
 22481   0055B6                     u6821:
 22482   0055B6  EF73  F02A         	goto	l9290
 22483   0055BA                     u6820:
 22484   0055BA                     l119:
 22485   0055BA  0012               	return		;funcret
 22486   0055BC                     __end_of_bootPowerUp:
 22487                           	callstack 0
 22488                           
 22489 ;; *************** function _teachPowerUp *****************
 22490 ;; Defined at:
 22491 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;		None
 22494 ;; Auto vars:     Size  Location     Type
 22495 ;;  i               1   39[COMRAM] unsigned char 
 22496 ;; Return value:  Size  Location     Type
 22497 ;;                  1    wreg      void 
 22498 ;; Registers used:
 22499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22500 ;; Tracked objects:
 22501 ;;		On entry : 0/0
 22502 ;;		On exit  : 0/0
 22503 ;;		Unchanged: 0/0
 22504 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22509 ;;Total ram usage:        1 bytes
 22510 ;; Hardware stack levels used: 1
 22511 ;; Hardware stack levels required when called: 5
 22512 ;; This function calls:
 22513 ;;		_rebuildHashtable
 22514 ;; This function is called by:
 22515 ;;		_powerUp
 22516 ;; This function uses a non-reentrant model
 22517 ;;
 22518                           
 22519                           	psect	text9
 22520   0076AA                     __ptext9:
 22521                           	callstack 0
 22522   0076AA                     _teachPowerUp:
 22523                           	callstack 120
 22524   0076AA                     
 22525                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 22526   0076AA  EC04  F028         	call	_rebuildHashtable	;wreg free
 22527   0076AE                     
 22528                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 22529   0076AE  0E01               	movlw	1
 22530   0076B0  6E28               	movwf	teachPowerUp@i^(0+1280),c
 22531   0076B2                     l9712:
 22532                           
 22533                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 22534   0076B2  5028               	movf	teachPowerUp@i^(0+1280),w,c
 22535   0076B4  0D02               	mullw	2
 22536   0076B6  0ECA               	movlw	low _teachDiagnostics
 22537   0076B8  24F3               	addwf	243,w,c
 22538   0076BA  6ED9               	movwf	fsr2l,c
 22539   0076BC  0E05               	movlw	high _teachDiagnostics
 22540   0076BE  20F4               	addwfc	prodh,w,c
 22541   0076C0  6EDA               	movwf	fsr2h,c
 22542   0076C2  6ADE               	clrf	postinc2,c
 22543   0076C4  6ADD               	clrf	postdec2,c
 22544   0076C6                     
 22545                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 22546   0076C6  2A28               	incf	teachPowerUp@i^(0+1280),f,c
 22547   0076C8  0E01               	movlw	1
 22548   0076CA  6428               	cpfsgt	teachPowerUp@i^(0+1280),c
 22549   0076CC  EF6A  F03B         	goto	u7101
 22550   0076D0  EF6C  F03B         	goto	u7100
 22551   0076D4                     u7101:
 22552   0076D4  EF59  F03B         	goto	l9712
 22553   0076D8                     u7100:
 22554   0076D8                     
 22555                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 22556   0076D8  0E00               	movlw	0
 22557   0076DA  0105               	movlb	5	; () banked
 22558   0076DC  6FCB               	movwf	(_teachDiagnostics+1)& (0+255),b
 22559   0076DE  0E01               	movlw	1
 22560   0076E0  6FCA               	movwf	_teachDiagnostics& (0+255),b
 22561   0076E2                     
 22562                           ; BSR set to: 5
 22563                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 22564   0076E2  6BA3               	clrf	_errno& (0+255),b
 22565   0076E4                     
 22566                           ; BSR set to: 5
 22567                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 22568   0076E4  91A4               	bcf	_mode_flags& (0+255),0,b
 22569   0076E6                     
 22570                           ; BSR set to: 5
 22571   0076E6  0012               	return		;funcret
 22572   0076E8                     __end_of_teachPowerUp:
 22573                           	callstack 0
 22574                           
 22575 ;; *************** function _loadNvCache *****************
 22576 ;; Defined at:
 22577 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 22578 ;; Parameters:    Size  Location     Type
 22579 ;;		None
 22580 ;; Auto vars:     Size  Location     Type
 22581 ;;  temp            2   14[COMRAM] short 
 22582 ;;  i               1   16[COMRAM] unsigned char 
 22583 ;; Return value:  Size  Location     Type
 22584 ;;                  1    wreg      void 
 22585 ;; Registers used:
 22586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22587 ;; Tracked objects:
 22588 ;;		On entry : 0/0
 22589 ;;		On exit  : 0/0
 22590 ;;		Unchanged: 0/0
 22591 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22595 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22596 ;;Total ram usage:        5 bytes
 22597 ;; Hardware stack levels used: 1
 22598 ;; Hardware stack levels required when called: 3
 22599 ;; This function calls:
 22600 ;;		_readNVM
 22601 ;; This function is called by:
 22602 ;;		_nvPowerUp
 22603 ;; This function uses a non-reentrant model
 22604 ;;
 22605                           
 22606                           	psect	text10
 22607   0070A6                     __ptext10:
 22608                           	callstack 0
 22609   0070A6                     _loadNvCache:
 22610                           	callstack 121
 22611   0070A6                     
 22612                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 48; i++) {
 22613   0070A6  0E01               	movlw	1
 22614   0070A8  6E11               	movwf	loadNvCache@i^(0+1280),c
 22615   0070AA                     l8952:
 22616                           
 22617                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 22618   0070AA  0E00               	movlw	0
 22619   0070AC  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22620   0070AE  6E0D               	movwf	??_loadNvCache^(0+1280),c
 22621   0070B0  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 22622   0070B2  0E02               	movlw	2
 22623   0070B4  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 22624   0070B6  C50D  F507         	movff	??_loadNvCache,readNVM@index
 22625   0070BA  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 22626   0070BE  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 22627   0070C0  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 22628   0070C2  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 22629   0070C4  0E00               	movlw	0
 22630   0070C6  ECDB  F036         	call	_readNVM
 22631   0070CA  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 22632   0070CE  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 22633   0070D2                     
 22634                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 22635   0070D2  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 22636   0070D4  EF70  F038         	goto	u6380
 22637   0070D8  EF6E  F038         	goto	u6381
 22638   0070DC                     u6381:
 22639   0070DC  EF72  F038         	goto	l8958
 22640   0070E0                     u6380:
 22641   0070E0  EF7A  F038         	goto	l8960
 22642   0070E4                     l8958:
 22643                           
 22644                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 22645   0070E4  0E00               	movlw	low _nvCache
 22646   0070E6  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22647   0070E8  6ED9               	movwf	fsr2l,c
 22648   0070EA  6ADA               	clrf	fsr2h,c
 22649   0070EC  0E06               	movlw	high _nvCache
 22650   0070EE  22DA               	addwfc	fsr2h,f,c
 22651   0070F0  C50F  F4DF         	movff	loadNvCache@temp,indf2
 22652   0070F4                     l8960:
 22653                           
 22654                           ;../../VLCBlib_PIC/nv.c: 173:     }
 22655   0070F4  2A11               	incf	loadNvCache@i^(0+1280),f,c
 22656   0070F6  0E30               	movlw	48
 22657   0070F8  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 22658   0070FA  EF81  F038         	goto	u6391
 22659   0070FE  EF83  F038         	goto	u6390
 22660   007102                     u6391:
 22661   007102  EF55  F038         	goto	l8952
 22662   007106                     u6390:
 22663   007106  0012               	return		;funcret
 22664   007108                     __end_of_loadNvCache:
 22665                           	callstack 0
 22666                           
 22667 ;; *************** function _leds_powerUp *****************
 22668 ;; Defined at:
 22669 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 22670 ;; Parameters:    Size  Location     Type
 22671 ;;		None
 22672 ;; Auto vars:     Size  Location     Type
 22673 ;;		None
 22674 ;; Return value:  Size  Location     Type
 22675 ;;                  1    wreg      void 
 22676 ;; Registers used:
 22677 ;;		wreg, status,2, status,0, cstack
 22678 ;; Tracked objects:
 22679 ;;		On entry : 0/0
 22680 ;;		On exit  : 0/0
 22681 ;;		Unchanged: 0/0
 22682 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22687 ;;Total ram usage:        0 bytes
 22688 ;; Hardware stack levels used: 1
 22689 ;; Hardware stack levels required when called: 2
 22690 ;; This function calls:
 22691 ;;		_tickGet
 22692 ;; This function is called by:
 22693 ;;		_powerUp
 22694 ;; This function uses a non-reentrant model
 22695 ;;
 22696                           
 22697                           	psect	text11
 22698   007A7A                     __ptext11:
 22699                           	callstack 0
 22700   007A7A                     _leds_powerUp:
 22701                           	callstack 123
 22702   007A7A                     
 22703                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
 22704   007A7A  0104               	movlb	4	; () banked
 22705   007A7C  6B08               	clrf	8,b	;volatile
 22706   007A7E  6B00               	clrf	0,b	;volatile
 22707   007A80  9EC7               	bcf	199,7,c	;volatile
 22708   007A82  9CC7               	bcf	199,6,c	;volatile
 22709   007A84  84C6               	bsf	198,2,c	;volatile
 22710                           
 22711                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 22712   007A86  0105               	movlb	5	; () banked
 22713   007A88  6B87               	clrf	_flashCounter& (0+255),b
 22714                           
 22715                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 22716   007A8A  6B88               	clrf	(_flashCounter+1)& (0+255),b
 22717   007A8C                     
 22718                           ; BSR set to: 5
 22719                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 22720   007A8C  EC66  F036         	call	_tickGet	;wreg free
 22721   007A90  C501  F560         	movff	?_tickGet,_ledTimer
 22722   007A94  C502  F561         	movff	?_tickGet+1,_ledTimer+1
 22723   007A98  C503  F562         	movff	?_tickGet+2,_ledTimer+2
 22724   007A9C  C504  F563         	movff	?_tickGet+3,_ledTimer+3
 22725   007AA0  0012               	return		;funcret
 22726   007AA2                     __end_of_leds_powerUp:
 22727                           	callstack 0
 22728                           
 22729 ;; *************** function _initTimedResponse *****************
 22730 ;; Defined at:
 22731 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 22732 ;; Parameters:    Size  Location     Type
 22733 ;;		None
 22734 ;; Auto vars:     Size  Location     Type
 22735 ;;		None
 22736 ;; Return value:  Size  Location     Type
 22737 ;;                  1    wreg      void 
 22738 ;; Registers used:
 22739 ;;		None
 22740 ;; Tracked objects:
 22741 ;;		On entry : 0/0
 22742 ;;		On exit  : 0/0
 22743 ;;		Unchanged: 0/0
 22744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22749 ;;Total ram usage:        0 bytes
 22750 ;; Hardware stack levels used: 1
 22751 ;; Hardware stack levels required when called: 1
 22752 ;; This function calls:
 22753 ;;		Nothing
 22754 ;; This function is called by:
 22755 ;;		_powerUp
 22756 ;; This function uses a non-reentrant model
 22757 ;;
 22758                           
 22759                           	psect	text12
 22760   007C78                     __ptext12:
 22761                           	callstack 0
 22762   007C78                     _initTimedResponse:
 22763                           	callstack 124
 22764   007C78                     
 22765                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 22766   007C78  0105               	movlb	5	; () banked
 22767   007C7A  6996               	setf	_timedResponseType& (0+255),b
 22768   007C7C                     
 22769                           ; BSR set to: 5
 22770   007C7C  0012               	return		;funcret
 22771   007C7E                     __end_of_initTimedResponse:
 22772                           	callstack 0
 22773                           
 22774 ;; *************** function _initTicker *****************
 22775 ;; Defined at:
 22776 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 22777 ;; Parameters:    Size  Location     Type
 22778 ;;  priority        1    wreg     unsigned char 
 22779 ;; Auto vars:     Size  Location     Type
 22780 ;;  priority        1    1[COMRAM] unsigned char 
 22781 ;;  i               1    3[COMRAM] unsigned char 
 22782 ;;  divider         1    2[COMRAM] unsigned char 
 22783 ;; Return value:  Size  Location     Type
 22784 ;;                  1    wreg      void 
 22785 ;; Registers used:
 22786 ;;		wreg, status,2, status,0
 22787 ;; Tracked objects:
 22788 ;;		On entry : 0/0
 22789 ;;		On exit  : 0/0
 22790 ;;		Unchanged: 0/0
 22791 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22793 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22795 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22796 ;;Total ram usage:        4 bytes
 22797 ;; Hardware stack levels used: 1
 22798 ;; Hardware stack levels required when called: 1
 22799 ;; This function calls:
 22800 ;;		Nothing
 22801 ;; This function is called by:
 22802 ;;		_powerUp
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text13
 22807   007108                     __ptext13:
 22808                           	callstack 0
 22809   007108                     _initTicker:
 22810                           	callstack 124
 22811                           
 22812                           ; BSR set to: 5
 22813                           ;incstack = 0
 22814                           ;initTicker@priority stored from wreg
 22815   007108  6E02               	movwf	initTicker@priority^(0+1280),c
 22816   00710A                     
 22817                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 22818   00710A  6A03               	clrf	initTicker@divider^(0+1280),c
 22819   00710C                     
 22820                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 22821   00710C  0E40               	movlw	64
 22822   00710E  6E04               	movwf	initTicker@i^(0+1280),c
 22823   007110                     l10690:
 22824                           
 22825                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 22826   007110  2A03               	incf	initTicker@divider^(0+1280),f,c
 22827   007112  90D8               	bcf	status,0,c
 22828   007114  3204               	rrcf	initTicker@i^(0+1280),f,c
 22829   007116  5004               	movf	initTicker@i^(0+1280),w,c
 22830   007118  A4D8               	btfss	status,2,c
 22831   00711A  EF91  F038         	goto	u8221
 22832   00711E  EF93  F038         	goto	u8220
 22833   007122                     u8221:
 22834   007122  EF88  F038         	goto	l10690
 22835   007126                     u8220:
 22836   007126                     
 22837                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 22838   007126  C503  F501         	movff	initTicker@divider,??_initTicker
 22839   00712A  0E01               	movlw	1
 22840   00712C  2601               	addwf	??_initTicker^(0+1280),f,c
 22841   00712E  0103               	movlb	3	; () banked
 22842   007130  511B               	movf	27,w,b	;volatile
 22843   007132  1801               	xorwf	??_initTicker^(0+1280),w,c
 22844   007134  0BF0               	andlw	-16
 22845   007136  1801               	xorwf	??_initTicker^(0+1280),w,c
 22846   007138  6F1B               	movwf	27,b	;volatile
 22847   00713A                     
 22848                           ; BSR set to: 3
 22849                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 22850   00713A  891A               	bsf	26,4,b	;volatile
 22851   00713C                     
 22852                           ; BSR set to: 3
 22853                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 22854   00713C  511B               	movf	27,w,b	;volatile
 22855   00713E  0B1F               	andlw	-225
 22856   007140  0940               	iorlw	64
 22857   007142  6F1B               	movwf	27,b	;volatile
 22858   007144                     
 22859                           ; BSR set to: 3
 22860                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 22861   007144  6B19               	clrf	25,b	;volatile
 22862   007146                     
 22863                           ; BSR set to: 3
 22864                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 22865   007146  6B18               	clrf	24,b	;volatile
 22866   007148                     
 22867                           ; BSR set to: 3
 22868                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 22869   007148  B002               	btfsc	initTicker@priority^(0+1280),0,c
 22870   00714A  EFA9  F038         	goto	u8231
 22871   00714E  EFAC  F038         	goto	u8230
 22872   007152                     u8231:
 22873   007152  8F65               	bsf	101,7,b	;volatile
 22874   007154  EFAE  F038         	goto	u8245
 22875   007158                     u8230:
 22876   007158  0103               	movlb	3	; () banked
 22877   00715A  9F65               	bcf	101,7,b	;volatile
 22878   00715C                     u8245:
 22879   00715C                     
 22880                           ; BSR set to: 3
 22881                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 22882   00715C  9EB1               	bcf	1201,7,c	;volatile
 22883   00715E                     
 22884                           ; BSR set to: 3
 22885                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 22886   00715E  8EA1               	bsf	1185,7,c	;volatile
 22887   007160                     
 22888                           ; BSR set to: 3
 22889                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 22890   007160  8F1A               	bsf	26,7,b	;volatile
 22891   007162                     
 22892                           ; BSR set to: 3
 22893                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 22894   007162  0105               	movlb	5	; () banked
 22895   007164  6B9A               	clrf	_timerExtension1& (0+255),b	;volatile
 22896   007166                     
 22897                           ; BSR set to: 5
 22898                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 22899   007166  6B99               	clrf	_timerExtension2& (0+255),b	;volatile
 22900   007168                     
 22901                           ; BSR set to: 5
 22902   007168  0012               	return		;funcret
 22903   00716A                     __end_of_initTicker:
 22904                           	callstack 0
 22905                           
 22906 ;; *************** function _CAN1_OperationModeSet *****************
 22907 ;; Defined at:
 22908 ;;		line 919 in file "../../VLCBlib_PIC/can18_can_2.c"
 22909 ;; Parameters:    Size  Location     Type
 22910 ;;  requestMode     1    wreg     const enum E23640
 22911 ;; Auto vars:     Size  Location     Type
 22912 ;;  requestMode     1    1[COMRAM] const enum E23640
 22913 ;;  status          1    0[COMRAM] enum E23649
 22914 ;; Return value:  Size  Location     Type
 22915 ;;                  1    wreg      enum E23649
 22916 ;; Registers used:
 22917 ;;		wreg, status,2, status,0, cstack
 22918 ;; Tracked objects:
 22919 ;;		On entry : 0/0
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22927 ;;Total ram usage:        2 bytes
 22928 ;; Hardware stack levels used: 1
 22929 ;; Hardware stack levels required when called: 2
 22930 ;; This function calls:
 22931 ;;		_CAN1_OperationModeGet
 22932 ;; This function is called by:
 22933 ;;		_canPowerUp
 22934 ;; This function uses a non-reentrant model
 22935 ;;
 22936                           
 22937                           	psect	text14
 22938   0068DE                     __ptext14:
 22939                           	callstack 0
 22940   0068DE                     _CAN1_OperationModeSet:
 22941                           	callstack 122
 22942                           
 22943                           ; BSR set to: 5
 22944                           ;incstack = 0
 22945                           ;CAN1_OperationModeSet@requestMode stored from wreg
 22946   0068DE  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 22947   0068E0                     
 22948                           ;../../VLCBlib_PIC/can18_can_2.c: 919: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 920: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 921:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 22949   0068E0  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 22950   0068E2                     
 22951                           ;../../VLCBlib_PIC/can18_can_2.c: 923:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 22952   0068E2  EC2A  F03E         	call	_CAN1_OperationModeGet	;wreg free
 22953   0068E6  0A04               	xorlw	4
 22954   0068E8  B4D8               	btfsc	status,2,c
 22955   0068EA  EF79  F034         	goto	u5751
 22956   0068EE  EF7B  F034         	goto	u5750
 22957   0068F2                     u5751:
 22958   0068F2  EF8C  F034         	goto	l8428
 22959   0068F6                     u5750:
 22960   0068F6  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22961   0068F8  B4D8               	btfsc	status,2,c
 22962   0068FA  EF81  F034         	goto	u5761
 22963   0068FE  EF83  F034         	goto	u5760
 22964   006902                     u5761:
 22965   006902  EF8C  F034         	goto	l8428
 22966   006906                     u5760:
 22967   006906  0E04               	movlw	4
 22968   006908  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22969   00690A  A4D8               	btfss	status,2,c
 22970   00690C  EF8A  F034         	goto	u5771
 22971   006910  EF8C  F034         	goto	u5770
 22972   006914                     u5771:
 22973   006914  EFAC  F034         	goto	l8434
 22974   006918                     u5770:
 22975   006918                     l8428:
 22976                           
 22977                           ;../../VLCBlib_PIC/can18_can_2.c: 926:     {;../../VLCBlib_PIC/can18_can_2.c: 927:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 22978   006918  0101               	movlb	1	; () banked
 22979   00691A  5103               	movf	3,w,b	;volatile
 22980   00691C  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22981   00691E  0BF8               	andlw	-8
 22982   006920  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22983   006922  6F03               	movwf	3,b	;volatile
 22984                           
 22985                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 22986   006924  EF9F  F034         	goto	l8432
 22987   006928                     l532:
 22988                           
 22989                           ; BSR set to: 1
 22990                           ;../../VLCBlib_PIC/can18_can_2.c: 930:         {;../../VLCBlib_PIC/can18_can_2.c: 932:  
      +                                     if (C1INTHbits.SERRIF == 1)
 22991   006928  A91D               	btfss	29,4,b	;volatile
 22992   00692A  EF99  F034         	goto	u5781
 22993   00692E  EF9B  F034         	goto	u5780
 22994   006932                     u5781:
 22995   006932  EF9F  F034         	goto	l8432
 22996   006936                     u5780:
 22997   006936                     
 22998                           ; BSR set to: 1
 22999                           ;../../VLCBlib_PIC/can18_can_2.c: 933:             {;../../VLCBlib_PIC/can18_can_2.c: 93
      +                          4:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 23000   006936  0E02               	movlw	2
 23001   006938  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23002                           
 23003                           ;../../VLCBlib_PIC/can18_can_2.c: 935:                 break;
 23004   00693A  EFAE  F034         	goto	l535
 23005   00693E                     l8432:
 23006                           
 23007                           ; BSR set to: 1
 23008                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23009   00693E  3902               	swapf	2,w,b	;volatile
 23010   006940  32E8               	rrcf	wreg,f,c
 23011   006942  0B07               	andlw	7
 23012   006944  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23013   006946  A4D8               	btfss	status,2,c
 23014   006948  EFA8  F034         	goto	u5791
 23015   00694C  EFAA  F034         	goto	u5790
 23016   006950                     u5791:
 23017   006950  EF94  F034         	goto	l532
 23018   006954                     u5790:
 23019   006954  EFAE  F034         	goto	l535
 23020   006958                     l8434:
 23021                           
 23022                           ;../../VLCBlib_PIC/can18_can_2.c: 940:     {;../../VLCBlib_PIC/can18_can_2.c: 941:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 23023   006958  0E01               	movlw	1
 23024   00695A  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23025   00695C                     l535:
 23026                           
 23027                           ;../../VLCBlib_PIC/can18_can_2.c: 944:     return status;
 23028   00695C  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 23029   00695E  0012               	return		;funcret
 23030   006960                     __end_of_CAN1_OperationModeSet:
 23031                           	callstack 0
 23032                           
 23033 ;; *************** function _CAN1_OperationModeGet *****************
 23034 ;; Defined at:
 23035 ;;		line 952 in file "../../VLCBlib_PIC/can18_can_2.c"
 23036 ;; Parameters:    Size  Location     Type
 23037 ;;		None
 23038 ;; Auto vars:     Size  Location     Type
 23039 ;;		None
 23040 ;; Return value:  Size  Location     Type
 23041 ;;                  1    wreg      enum E23640
 23042 ;; Registers used:
 23043 ;;		wreg, status,2, status,0
 23044 ;; Tracked objects:
 23045 ;;		On entry : 0/0
 23046 ;;		On exit  : 0/0
 23047 ;;		Unchanged: 0/0
 23048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23053 ;;Total ram usage:        0 bytes
 23054 ;; Hardware stack levels used: 1
 23055 ;; Hardware stack levels required when called: 1
 23056 ;; This function calls:
 23057 ;;		Nothing
 23058 ;; This function is called by:
 23059 ;;		_CAN1_OperationModeSet
 23060 ;; This function uses a non-reentrant model
 23061 ;;
 23062                           
 23063                           	psect	text15
 23064   007C54                     __ptext15:
 23065                           	callstack 0
 23066   007C54                     _CAN1_OperationModeGet:
 23067                           	callstack 122
 23068   007C54                     
 23069                           ;../../VLCBlib_PIC/can18_can_2.c: 954:     return C1CONUbits.OPMOD;
 23070   007C54  0101               	movlb	1	; () banked
 23071   007C56  3902               	swapf	2,w,b	;volatile
 23072   007C58  32E8               	rrcf	wreg,f,c
 23073   007C5A  0B07               	andlw	7
 23074   007C5C                     
 23075                           ; BSR set to: 1
 23076   007C5C  0012               	return		;funcret
 23077   007C5E                     __end_of_CAN1_OperationModeGet:
 23078                           	callstack 0
 23079                           
 23080 ;; *************** function _poll *****************
 23081 ;; Defined at:
 23082 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 23083 ;; Parameters:    Size  Location     Type
 23084 ;;		None
 23085 ;; Auto vars:     Size  Location     Type
 23086 ;;  m               9   36[BANK5 ] struct Message
 23087 ;;  i               1   35[BANK5 ] unsigned char 
 23088 ;;  handled         1   34[BANK5 ] enum E23340
 23089 ;; Return value:  Size  Location     Type
 23090 ;;                  1    wreg      void 
 23091 ;; Registers used:
 23092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23093 ;; Tracked objects:
 23094 ;;		On entry : 0/0
 23095 ;;		On exit  : 0/0
 23096 ;;		Unchanged: 0/0
 23097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23099 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23101 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23102 ;;Total ram usage:       15 bytes
 23103 ;; Hardware stack levels used: 1
 23104 ;; Hardware stack levels required when called: 12
 23105 ;; This function calls:
 23106 ;;		NULL
 23107 ;;		_APP_postProcessMessage
 23108 ;;		_APP_preProcessMessage
 23109 ;;		___lmul
 23110 ;;		_bootProcessMessage
 23111 ;;		_canPoll
 23112 ;;		_canProcessMessage
 23113 ;;		_canReceiveMessage
 23114 ;;		_consumerProcessMessage
 23115 ;;		_flushFlashBlock
 23116 ;;		_leds_poll
 23117 ;;		_mnsPoll
 23118 ;;		_mnsProcessMessage
 23119 ;;		_nvProcessMessage
 23120 ;;		_pollTimedResponse
 23121 ;;		_showStatus
 23122 ;;		_teachProcessMessage
 23123 ;;		_tickGet
 23124 ;; This function is called by:
 23125 ;;		_main
 23126 ;; This function uses a non-reentrant model
 23127 ;;
 23128                           
 23129                           	psect	text16
 23130   002784                     __ptext16:
 23131                           	callstack 0
 23132   002784                     _poll:
 23133                           	callstack 114
 23134   002784                     
 23135                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 23136   002784  EC66  F036         	call	_tickGet	;wreg free
 23137   002788  0106               	movlb	6	; () banked
 23138   00278A  5145               	movf	_timedResponseTime& (0+255),w,b
 23139   00278C  5C01               	subwf	?_tickGet^(0+1280),w,c
 23140   00278E  0105               	movlb	5	; () banked
 23141   002790  6FEC               	movwf	??_poll& (0+255),b
 23142   002792  0106               	movlb	6	; () banked
 23143   002794  5146               	movf	(_timedResponseTime+1)& (0+255),w,b
 23144   002796  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23145   002798  0105               	movlb	5	; () banked
 23146   00279A  6FED               	movwf	(??_poll+1)& (0+255),b
 23147   00279C  0106               	movlb	6	; () banked
 23148   00279E  5147               	movf	(_timedResponseTime+2)& (0+255),w,b
 23149   0027A0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23150   0027A2  0105               	movlb	5	; () banked
 23151   0027A4  6FEE               	movwf	(??_poll+2)& (0+255),b
 23152   0027A6  0106               	movlb	6	; () banked
 23153   0027A8  5148               	movf	(_timedResponseTime+3)& (0+255),w,b
 23154   0027AA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23155   0027AC  0105               	movlb	5	; () banked
 23156   0027AE  6FEF               	movwf	(??_poll+3)& (0+255),b
 23157   0027B0  5193               	movf	_timedResponseDelay& (0+255),w,b
 23158   0027B2  6E01               	movwf	___lmul@multiplier^(0+1280),c
 23159   0027B4  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 23160   0027B6  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 23161   0027B8  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 23162   0027BA  0E3E               	movlw	62
 23163   0027BC  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 23164   0027BE  0E00               	movlw	0
 23165   0027C0  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 23166   0027C2  0E00               	movlw	0
 23167   0027C4  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 23168   0027C6  0E00               	movlw	0
 23169   0027C8  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 23170   0027CA  ECB8  F037         	call	___lmul	;wreg free
 23171   0027CE  0105               	movlb	5	; () banked
 23172   0027D0  51EC               	movf	??_poll& (0+255),w,b
 23173   0027D2  5C01               	subwf	?___lmul^(0+1280),w,c
 23174   0027D4  51ED               	movf	(??_poll+1)& (0+255),w,b
 23175   0027D6  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 23176   0027D8  51EE               	movf	(??_poll+2)& (0+255),w,b
 23177   0027DA  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 23178   0027DC  51EF               	movf	(??_poll+3)& (0+255),w,b
 23179   0027DE  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 23180   0027E0  B0D8               	btfsc	status,0,c
 23181   0027E2  EFF5  F013         	goto	u8461
 23182   0027E6  EFF7  F013         	goto	u8460
 23183   0027EA                     u8461:
 23184   0027EA  EF03  F014         	goto	l10876
 23185   0027EE                     u8460:
 23186   0027EE                     
 23187                           ; BSR set to: 5
 23188                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 23189   0027EE  EC41  F02D         	call	_pollTimedResponse	;wreg free
 23190   0027F2                     
 23191                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 23192   0027F2  EC66  F036         	call	_tickGet	;wreg free
 23193   0027F6  C501  F645         	movff	?_tickGet,_timedResponseTime
 23194   0027FA  C502  F646         	movff	?_tickGet+1,_timedResponseTime+1
 23195   0027FE  C503  F647         	movff	?_tickGet+2,_timedResponseTime+2
 23196   002802  C504  F648         	movff	?_tickGet+3,_timedResponseTime+3
 23197   002806                     l10876:
 23198                           
 23199                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 23200   002806  EC66  F036         	call	_tickGet	;wreg free
 23201   00280A  0106               	movlb	6	; () banked
 23202   00280C  5141               	movf	_flashFlushTime& (0+255),w,b
 23203   00280E  5C01               	subwf	?_tickGet^(0+1280),w,c
 23204   002810  0105               	movlb	5	; () banked
 23205   002812  6FEC               	movwf	??_poll& (0+255),b
 23206   002814  0106               	movlb	6	; () banked
 23207   002816  5142               	movf	(_flashFlushTime+1)& (0+255),w,b
 23208   002818  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23209   00281A  0105               	movlb	5	; () banked
 23210   00281C  6FED               	movwf	(??_poll+1)& (0+255),b
 23211   00281E  0106               	movlb	6	; () banked
 23212   002820  5143               	movf	(_flashFlushTime+2)& (0+255),w,b
 23213   002822  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23214   002824  0105               	movlb	5	; () banked
 23215   002826  6FEE               	movwf	(??_poll+2)& (0+255),b
 23216   002828  0106               	movlb	6	; () banked
 23217   00282A  5144               	movf	(_flashFlushTime+3)& (0+255),w,b
 23218   00282C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23219   00282E  0105               	movlb	5	; () banked
 23220   002830  6FEF               	movwf	(??_poll+3)& (0+255),b
 23221   002832  51EF               	movf	(??_poll+3)& (0+255),w,b
 23222   002834  11EE               	iorwf	(??_poll+2)& (0+255),w,b
 23223   002836  E10B               	bnz	u8470
 23224   002838  0E25               	movlw	37
 23225   00283A  5DEC               	subwf	??_poll& (0+255),w,b
 23226   00283C  0EF4               	movlw	244
 23227   00283E  59ED               	subwfb	(??_poll+1)& (0+255),w,b
 23228   002840  A0D8               	btfss	status,0,c
 23229   002842  EF25  F014         	goto	u8471
 23230   002846  EF27  F014         	goto	u8470
 23231   00284A                     u8471:
 23232   00284A  EF33  F014         	goto	l10882
 23233   00284E                     u8470:
 23234   00284E                     
 23235                           ; BSR set to: 5
 23236                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 23237   00284E  EC50  F031         	call	_flushFlashBlock	;wreg free
 23238   002852                     
 23239                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 23240   002852  EC66  F036         	call	_tickGet	;wreg free
 23241   002856  C501  F641         	movff	?_tickGet,_flashFlushTime
 23242   00285A  C502  F642         	movff	?_tickGet+1,_flashFlushTime+1
 23243   00285E  C503  F643         	movff	?_tickGet+2,_flashFlushTime+2
 23244   002862  C504  F644         	movff	?_tickGet+3,_flashFlushTime+3
 23245   002866                     l10882:
 23246                           
 23247                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<6; i++) {
 23248   002866  0105               	movlb	5	; () banked
 23249   002868  6BF1               	clrf	poll@i& (0+255),b
 23250   00286A                     l10888:
 23251                           
 23252                           ; BSR set to: 5
 23253                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 23254   00286A  51F1               	movf	poll@i& (0+255),w,b
 23255   00286C  0D02               	mullw	2
 23256   00286E  0E89               	movlw	low _services
 23257   002870  24F3               	addwf	243,w,c
 23258   002872  6EF6               	movwf	tblptrl,c
 23259   002874  0EFF               	movlw	high _services
 23260   002876  20F4               	addwfc	244,w,c
 23261   002878  6EF7               	movwf	tblptrh,c
 23262   00287A                     	if	1	;There are 3 active tblptr bytes
 23263   00287A  6AF8               	clrf	tblptru,c
 23264   00287C  0E00               	movlw	low (__mediumconst shr (0+16))
 23265   00287E  22F8               	addwfc	tblptru,f,c
 23266   002880                     	endif
 23267   002880  0009               	tblrd		*+
 23268   002882  50F5               	movf	tablat,w,c
 23269   002884  0009               	tblrd		*+
 23270   002886  10F5               	iorwf	tablat,w,c
 23271   002888  B4D8               	btfsc	status,2,c
 23272   00288A  EF49  F014         	goto	u8481
 23273   00288E  EF4B  F014         	goto	u8480
 23274   002892                     u8481:
 23275   002892  EF9C  F014         	goto	l10894
 23276   002896                     u8480:
 23277   002896                     
 23278                           ; BSR set to: 5
 23279   002896  51F1               	movf	poll@i& (0+255),w,b
 23280   002898  0D02               	mullw	2
 23281   00289A  0E89               	movlw	low _services
 23282   00289C  24F3               	addwf	243,w,c
 23283   00289E  6EF6               	movwf	tblptrl,c
 23284   0028A0  0EFF               	movlw	high _services
 23285   0028A2  20F4               	addwfc	244,w,c
 23286   0028A4  6EF7               	movwf	tblptrh,c
 23287   0028A6                     	if	1	;There are 3 active tblptr bytes
 23288   0028A6  6AF8               	clrf	tblptru,c
 23289   0028A8  0E00               	movlw	low (__mediumconst shr (0+16))
 23290   0028AA  22F8               	addwfc	tblptru,f,c
 23291   0028AC                     	endif
 23292   0028AC  0009               	tblrd		*+
 23293   0028AE  C4F5 F5EC          	movff	tablat,??_poll
 23294   0028B2  0009               	tblrd		*+
 23295   0028B4  C4F5 F5ED          	movff	tablat,??_poll+1
 23296   0028B8  0E08               	movlw	8
 23297   0028BA  27EC               	addwf	??_poll& (0+255),f,b
 23298   0028BC  0E00               	movlw	0
 23299   0028BE  23ED               	addwfc	(??_poll+1)& (0+255),f,b
 23300   0028C0  C5EC  F4F6         	movff	??_poll,tblptrl
 23301   0028C4  C5ED  F4F7         	movff	??_poll+1,tblptrh
 23302   0028C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23303   0028C8  6AF8               	clrf	tblptru,c
 23304   0028CA                     	endif
 23305   0028CA                     	if	0	;tblptru may be non-zero
 23306   0028CA                     	endif
 23307   0028CA  0009               	tblrd		*+
 23308   0028CC  50F5               	movf	tablat,w,c
 23309   0028CE  0009               	tblrd		*+
 23310   0028D0  10F5               	iorwf	tablat,w,c
 23311   0028D2  B4D8               	btfsc	status,2,c
 23312   0028D4  EF6E  F014         	goto	u8491
 23313   0028D8  EF70  F014         	goto	u8490
 23314   0028DC                     u8491:
 23315   0028DC  EF9C  F014         	goto	l10894
 23316   0028E0                     u8490:
 23317   0028E0                     
 23318                           ; BSR set to: 5
 23319                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 23320   0028E0  51F1               	movf	poll@i& (0+255),w,b
 23321   0028E2  0D02               	mullw	2
 23322   0028E4  0E89               	movlw	low _services
 23323   0028E6  24F3               	addwf	243,w,c
 23324   0028E8  6EF6               	movwf	tblptrl,c
 23325   0028EA  0EFF               	movlw	high _services
 23326   0028EC  20F4               	addwfc	244,w,c
 23327   0028EE  6EF7               	movwf	tblptrh,c
 23328   0028F0                     	if	1	;There are 3 active tblptr bytes
 23329   0028F0  6AF8               	clrf	tblptru,c
 23330   0028F2  0E00               	movlw	low (__mediumconst shr (0+16))
 23331   0028F4  22F8               	addwfc	tblptru,f,c
 23332   0028F6                     	endif
 23333   0028F6  0009               	tblrd		*+
 23334   0028F8  C4F5 F5EC          	movff	tablat,??_poll
 23335   0028FC  0009               	tblrd		*+
 23336   0028FE  C4F5 F5ED          	movff	tablat,??_poll+1
 23337   002902  0E08               	movlw	8
 23338   002904  27EC               	addwf	??_poll& (0+255),f,b
 23339   002906  0E00               	movlw	0
 23340   002908  23ED               	addwfc	(??_poll+1)& (0+255),f,b
 23341   00290A  C5EC  F4F6         	movff	??_poll,tblptrl
 23342   00290E  C5ED  F4F7         	movff	??_poll+1,tblptrh
 23343   002912                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23344   002912  6AF8               	clrf	tblptru,c
 23345   002914                     	endif
 23346   002914                     	if	0	;tblptru may be non-zero
 23347   002914                     	endif
 23348   002914  0009               	tblrd		*+
 23349   002916  C4F5 F5EE          	movff	tablat,??_poll+2
 23350   00291A  0009               	tblrd		*+
 23351   00291C  C4F5 F5EF          	movff	tablat,??_poll+3
 23352   002920  D802               	call	u8508
 23353   002922  EF9C  F014         	goto	u8509
 23354   002926                     u8508:
 23355   002926  0005               	push	
 23356   002928  6EFA               	movwf	pclath,c
 23357   00292A  51EE               	movf	(??_poll+2)& (0+255),w,b
 23358   00292C  6EFD               	movwf	tosl,c
 23359   00292E  51EF               	movf	(??_poll+3)& (0+255),w,b
 23360   002930  6EFE               	movwf	tosh,c
 23361   002932  6AFF               	clrf	tosu,c
 23362   002934  50FA               	movf	pclath,w,c
 23363   002936  0012               	return		;indir
 23364   002938                     u8509:
 23365   002938                     l10894:
 23366                           
 23367                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 23368   002938  0105               	movlb	5	; () banked
 23369   00293A  2BF1               	incf	poll@i& (0+255),f,b
 23370   00293C                     
 23371                           ; BSR set to: 5
 23372   00293C  0E05               	movlw	5
 23373   00293E  65F1               	cpfsgt	poll@i& (0+255),b
 23374   002940  EFA4  F014         	goto	u8511
 23375   002944  EFA6  F014         	goto	u8510
 23376   002948                     u8511:
 23377   002948  EF35  F014         	goto	l10888
 23378   00294C                     u8510:
 23379   00294C                     
 23380                           ; BSR set to: 5
 23381                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 23382   00294C  EC88  F017         	call	_leds_poll	;wreg free
 23383   002950                     
 23384                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 23385   002950  0105               	movlb	5	; () banked
 23386   002952  6BF0               	clrf	poll@handled& (0+255),b
 23387   002954                     
 23388                           ; BSR set to: 5
 23389                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 23390   002954  518F               	movf	_transport& (0+255),w,b
 23391   002956  1190               	iorwf	(_transport+1)& (0+255),w,b
 23392   002958  B4D8               	btfsc	status,2,c
 23393   00295A  EFB1  F014         	goto	u8521
 23394   00295E  EFB3  F014         	goto	u8520
 23395   002962                     u8521:
 23396   002962  EFA3  F015         	goto	l10936
 23397   002966                     u8520:
 23398   002966                     
 23399                           ; BSR set to: 5
 23400                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 23401   002966  0E02               	movlw	2
 23402   002968  258F               	addwf	_transport& (0+255),w,b
 23403   00296A  6FEC               	movwf	??_poll& (0+255),b
 23404   00296C  0E00               	movlw	0
 23405   00296E  2190               	addwfc	(_transport+1)& (0+255),w,b
 23406   002970  6FED               	movwf	(??_poll+1)& (0+255),b
 23407   002972  C5EC  F4F6         	movff	??_poll,tblptrl
 23408   002976  C5ED  F4F7         	movff	??_poll+1,tblptrh
 23409   00297A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23410   00297A  6AF8               	clrf	tblptru,c
 23411   00297C                     	endif
 23412   00297C                     	if	0	;tblptru may be non-zero
 23413   00297C                     	endif
 23414   00297C  0009               	tblrd		*+
 23415   00297E  50F5               	movf	tablat,w,c
 23416   002980  0009               	tblrd		*+
 23417   002982  10F5               	iorwf	tablat,w,c
 23418   002984  B4D8               	btfsc	status,2,c
 23419   002986  EFC7  F014         	goto	u8531
 23420   00298A  EFC9  F014         	goto	u8530
 23421   00298E                     u8531:
 23422   00298E  EFA3  F015         	goto	l10936
 23423   002992                     u8530:
 23424   002992                     
 23425                           ; BSR set to: 5
 23426                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 23427   002992  0EF2               	movlw	low poll@m
 23428   002994  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 23429   002996  0E05               	movlw	high poll@m
 23430   002998  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 23431   00299A  0E02               	movlw	2
 23432   00299C  258F               	addwf	_transport& (0+255),w,b
 23433   00299E  6FEC               	movwf	??_poll& (0+255),b
 23434   0029A0  0E00               	movlw	0
 23435   0029A2  2190               	addwfc	(_transport+1)& (0+255),w,b
 23436   0029A4  6FED               	movwf	(??_poll+1)& (0+255),b
 23437   0029A6  C5EC  F4F6         	movff	??_poll,tblptrl
 23438   0029AA  C5ED  F4F7         	movff	??_poll+1,tblptrh
 23439   0029AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23440   0029AE  6AF8               	clrf	tblptru,c
 23441   0029B0                     	endif
 23442   0029B0                     	if	0	;tblptru may be non-zero
 23443   0029B0                     	endif
 23444   0029B0  0009               	tblrd		*+
 23445   0029B2  C4F5 F5EE          	movff	tablat,??_poll+2
 23446   0029B6  0009               	tblrd		*+
 23447   0029B8  C4F5 F5EF          	movff	tablat,??_poll+3
 23448   0029BC  D802               	call	u8548
 23449   0029BE  EFEA  F014         	goto	u8549
 23450   0029C2                     u8548:
 23451   0029C2  0005               	push	
 23452   0029C4  6EFA               	movwf	pclath,c
 23453   0029C6  51EE               	movf	(??_poll+2)& (0+255),w,b
 23454   0029C8  6EFD               	movwf	tosl,c
 23455   0029CA  51EF               	movf	(??_poll+3)& (0+255),w,b
 23456   0029CC  6EFE               	movwf	tosh,c
 23457   0029CE  6AFF               	clrf	tosu,c
 23458   0029D0  50FA               	movf	pclath,w,c
 23459   0029D2  0012               	return		;indir
 23460   0029D4                     u8549:
 23461   0029D4  0900               	iorlw	0
 23462   0029D6  B4D8               	btfsc	status,2,c
 23463   0029D8  EFF0  F014         	goto	u8551
 23464   0029DC  EFF2  F014         	goto	u8550
 23465   0029E0                     u8551:
 23466   0029E0  EFA3  F015         	goto	l10936
 23467   0029E4                     u8550:
 23468   0029E4                     
 23469                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 23470   0029E4  0105               	movlb	5	; () banked
 23471   0029E6  51F2               	movf	poll@m& (0+255),w,b
 23472   0029E8  B4D8               	btfsc	status,2,c
 23473   0029EA  EFF9  F014         	goto	u8561
 23474   0029EE  EFFB  F014         	goto	u8560
 23475   0029F2                     u8561:
 23476   0029F2  EFA3  F015         	goto	l10936
 23477   0029F6                     u8560:
 23478   0029F6                     
 23479                           ; BSR set to: 5
 23480                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 23481   0029F6  0E07               	movlw	7
 23482   0029F8  ECAB  F024         	call	_showStatus
 23483                           
 23484                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 23485   0029FC  0EF2               	movlw	low poll@m
 23486   0029FE  6E01               	movwf	APP_preProcessMessage@m^(0+1280),c
 23487   002A00  0E05               	movlw	high poll@m
 23488   002A02  6E02               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 23489   002A04  EC57  F03E         	call	_APP_preProcessMessage	;wreg free
 23490   002A08  0105               	movlb	5	; () banked
 23491   002A0A  6FF0               	movwf	poll@handled& (0+255),b
 23492   002A0C                     
 23493                           ; BSR set to: 5
 23494                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 23495   002A0C  51F0               	movf	poll@handled& (0+255),w,b
 23496   002A0E  A4D8               	btfss	status,2,c
 23497   002A10  EF0C  F015         	goto	u8571
 23498   002A14  EF0E  F015         	goto	u8570
 23499   002A18                     u8571:
 23500   002A18  EFA3  F015         	goto	l10936
 23501   002A1C                     u8570:
 23502   002A1C                     
 23503                           ; BSR set to: 5
 23504                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<6; i++) {
 23505   002A1C  6BF1               	clrf	poll@i& (0+255),b
 23506   002A1E                     l10920:
 23507                           
 23508                           ; BSR set to: 5
 23509                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 23510   002A1E  51F1               	movf	poll@i& (0+255),w,b
 23511   002A20  0D02               	mullw	2
 23512   002A22  0E89               	movlw	low _services
 23513   002A24  24F3               	addwf	243,w,c
 23514   002A26  6EF6               	movwf	tblptrl,c
 23515   002A28  0EFF               	movlw	high _services
 23516   002A2A  20F4               	addwfc	244,w,c
 23517   002A2C  6EF7               	movwf	tblptrh,c
 23518   002A2E                     	if	1	;There are 3 active tblptr bytes
 23519   002A2E  6AF8               	clrf	tblptru,c
 23520   002A30  0E00               	movlw	low (__mediumconst shr (0+16))
 23521   002A32  22F8               	addwfc	tblptru,f,c
 23522   002A34                     	endif
 23523   002A34  0009               	tblrd		*+
 23524   002A36  50F5               	movf	tablat,w,c
 23525   002A38  0009               	tblrd		*+
 23526   002A3A  10F5               	iorwf	tablat,w,c
 23527   002A3C  B4D8               	btfsc	status,2,c
 23528   002A3E  EF23  F015         	goto	u8581
 23529   002A42  EF25  F015         	goto	u8580
 23530   002A46                     u8581:
 23531   002A46  EF87  F015         	goto	l10928
 23532   002A4A                     u8580:
 23533   002A4A                     
 23534                           ; BSR set to: 5
 23535   002A4A  51F1               	movf	poll@i& (0+255),w,b
 23536   002A4C  0D02               	mullw	2
 23537   002A4E  0E89               	movlw	low _services
 23538   002A50  24F3               	addwf	243,w,c
 23539   002A52  6EF6               	movwf	tblptrl,c
 23540   002A54  0EFF               	movlw	high _services
 23541   002A56  20F4               	addwfc	244,w,c
 23542   002A58  6EF7               	movwf	tblptrh,c
 23543   002A5A                     	if	1	;There are 3 active tblptr bytes
 23544   002A5A  6AF8               	clrf	tblptru,c
 23545   002A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 23546   002A5E  22F8               	addwfc	tblptru,f,c
 23547   002A60                     	endif
 23548   002A60  0009               	tblrd		*+
 23549   002A62  C4F5 F5EC          	movff	tablat,??_poll
 23550   002A66  0009               	tblrd		*+
 23551   002A68  C4F5 F5ED          	movff	tablat,??_poll+1
 23552   002A6C  0E06               	movlw	6
 23553   002A6E  27EC               	addwf	??_poll& (0+255),f,b
 23554   002A70  0E00               	movlw	0
 23555   002A72  23ED               	addwfc	(??_poll+1)& (0+255),f,b
 23556   002A74  C5EC  F4F6         	movff	??_poll,tblptrl
 23557   002A78  C5ED  F4F7         	movff	??_poll+1,tblptrh
 23558   002A7C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23559   002A7C  6AF8               	clrf	tblptru,c
 23560   002A7E                     	endif
 23561   002A7E                     	if	0	;tblptru may be non-zero
 23562   002A7E                     	endif
 23563   002A7E  0009               	tblrd		*+
 23564   002A80  50F5               	movf	tablat,w,c
 23565   002A82  0009               	tblrd		*+
 23566   002A84  10F5               	iorwf	tablat,w,c
 23567   002A86  B4D8               	btfsc	status,2,c
 23568   002A88  EF48  F015         	goto	u8591
 23569   002A8C  EF4A  F015         	goto	u8590
 23570   002A90                     u8591:
 23571   002A90  EF87  F015         	goto	l10928
 23572   002A94                     u8590:
 23573   002A94                     
 23574                           ; BSR set to: 5
 23575                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 23576   002A94  0EF2               	movlw	low poll@m
 23577   002A96  6E54               	movwf	nvProcessMessage@m^(0+1280),c
 23578   002A98  0E05               	movlw	high poll@m
 23579   002A9A  6E55               	movwf	(nvProcessMessage@m+1)^(0+1280),c
 23580   002A9C  51F1               	movf	poll@i& (0+255),w,b
 23581   002A9E  0D02               	mullw	2
 23582   002AA0  0E89               	movlw	low _services
 23583   002AA2  24F3               	addwf	243,w,c
 23584   002AA4  6EF6               	movwf	tblptrl,c
 23585   002AA6  0EFF               	movlw	high _services
 23586   002AA8  20F4               	addwfc	244,w,c
 23587   002AAA  6EF7               	movwf	tblptrh,c
 23588   002AAC                     	if	1	;There are 3 active tblptr bytes
 23589   002AAC  6AF8               	clrf	tblptru,c
 23590   002AAE  0E00               	movlw	low (__mediumconst shr (0+16))
 23591   002AB0  22F8               	addwfc	tblptru,f,c
 23592   002AB2                     	endif
 23593   002AB2  0009               	tblrd		*+
 23594   002AB4  C4F5 F5EC          	movff	tablat,??_poll
 23595   002AB8  0009               	tblrd		*+
 23596   002ABA  C4F5 F5ED          	movff	tablat,??_poll+1
 23597   002ABE  0E06               	movlw	6
 23598   002AC0  27EC               	addwf	??_poll& (0+255),f,b
 23599   002AC2  0E00               	movlw	0
 23600   002AC4  23ED               	addwfc	(??_poll+1)& (0+255),f,b
 23601   002AC6  C5EC  F4F6         	movff	??_poll,tblptrl
 23602   002ACA  C5ED  F4F7         	movff	??_poll+1,tblptrh
 23603   002ACE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23604   002ACE  6AF8               	clrf	tblptru,c
 23605   002AD0                     	endif
 23606   002AD0                     	if	0	;tblptru may be non-zero
 23607   002AD0                     	endif
 23608   002AD0  0009               	tblrd		*+
 23609   002AD2  C4F5 F5EE          	movff	tablat,??_poll+2
 23610   002AD6  0009               	tblrd		*+
 23611   002AD8  C4F5 F5EF          	movff	tablat,??_poll+3
 23612   002ADC  D802               	call	u8608
 23613   002ADE  EF7A  F015         	goto	u8609
 23614   002AE2                     u8608:
 23615   002AE2  0005               	push	
 23616   002AE4  6EFA               	movwf	pclath,c
 23617   002AE6  51EE               	movf	(??_poll+2)& (0+255),w,b
 23618   002AE8  6EFD               	movwf	tosl,c
 23619   002AEA  51EF               	movf	(??_poll+3)& (0+255),w,b
 23620   002AEC  6EFE               	movwf	tosh,c
 23621   002AEE  6AFF               	clrf	tosu,c
 23622   002AF0  50FA               	movf	pclath,w,c
 23623   002AF2  0012               	return		;indir
 23624   002AF4                     u8609:
 23625   002AF4  06E8               	decf	wreg,f,c
 23626   002AF6  A4D8               	btfss	status,2,c
 23627   002AF8  EF80  F015         	goto	u8611
 23628   002AFC  EF82  F015         	goto	u8610
 23629   002B00                     u8611:
 23630   002B00  EF87  F015         	goto	l10928
 23631   002B04                     u8610:
 23632   002B04                     
 23633                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 23634   002B04  0E01               	movlw	1
 23635   002B06  0105               	movlb	5	; () banked
 23636   002B08  6FF0               	movwf	poll@handled& (0+255),b
 23637                           
 23638                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 23639   002B0A  EF91  F015         	goto	l10932
 23640   002B0E                     l10928:
 23641                           
 23642                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 23643   002B0E  0105               	movlb	5	; () banked
 23644   002B10  2BF1               	incf	poll@i& (0+255),f,b
 23645   002B12                     
 23646                           ; BSR set to: 5
 23647   002B12  0E05               	movlw	5
 23648   002B14  65F1               	cpfsgt	poll@i& (0+255),b
 23649   002B16  EF8F  F015         	goto	u8621
 23650   002B1A  EF91  F015         	goto	u8620
 23651   002B1E                     u8621:
 23652   002B1E  EF0F  F015         	goto	l10920
 23653   002B22                     u8620:
 23654   002B22                     l10932:
 23655                           
 23656                           ; BSR set to: 5
 23657                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 23658   002B22  51F0               	movf	poll@handled& (0+255),w,b
 23659   002B24  A4D8               	btfss	status,2,c
 23660   002B26  EF97  F015         	goto	u8631
 23661   002B2A  EF99  F015         	goto	u8630
 23662   002B2E                     u8631:
 23663   002B2E  EFA3  F015         	goto	l1819
 23664   002B32                     u8630:
 23665   002B32                     
 23666                           ; BSR set to: 5
 23667                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 23668   002B32  0EF2               	movlw	low poll@m
 23669   002B34  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 23670   002B36  0E05               	movlw	high poll@m
 23671   002B38  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 23672   002B3A  EC59  F03E         	call	_APP_postProcessMessage	;wreg free
 23673   002B3E  0105               	movlb	5	; () banked
 23674   002B40  6FF0               	movwf	poll@handled& (0+255),b
 23675   002B42  EFA3  F015         	goto	l10936
 23676   002B46                     l1819:
 23677   002B46                     l10936:
 23678                           
 23679                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 23680   002B46  0105               	movlb	5	; () banked
 23681   002B48  51F0               	movf	poll@handled& (0+255),w,b
 23682   002B4A  B4D8               	btfsc	status,2,c
 23683   002B4C  EFAA  F015         	goto	u8641
 23684   002B50  EFAC  F015         	goto	u8640
 23685   002B54                     u8641:
 23686   002B54  EFB1  F015         	goto	l1828
 23687   002B58                     u8640:
 23688   002B58                     
 23689                           ; BSR set to: 5
 23690                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 23691   002B58  4BB7               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 23692   002B5A  2BB8               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 23693   002B5C                     
 23694                           ; BSR set to: 5
 23695                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 23696   002B5C  0E08               	movlw	8
 23697   002B5E  ECAB  F024         	call	_showStatus
 23698   002B62                     l1828:
 23699   002B62  0012               	return		;funcret
 23700   002B64                     __end_of_poll:
 23701                           	callstack 0
 23702                           
 23703 ;; *************** function _nvProcessMessage *****************
 23704 ;; Defined at:
 23705 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;  m               2   83[COMRAM] PTR struct Message
 23708 ;;		 -> poll@m(9), 
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;  valueOrError    2   87[COMRAM] short 
 23711 ;; Return value:  Size  Location     Type
 23712 ;;                  1    wreg      enum E23340
 23713 ;; Registers used:
 23714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23715 ;; Tracked objects:
 23716 ;;		On entry : 0/0
 23717 ;;		On exit  : 0/0
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23724 ;;Total ram usage:        6 bytes
 23725 ;; Hardware stack levels used: 1
 23726 ;; Hardware stack levels required when called: 7
 23727 ;; This function calls:
 23728 ;;		_findServiceIndex
 23729 ;;		_getNV
 23730 ;;		_sendMessage2
 23731 ;;		_sendMessage3
 23732 ;;		_sendMessage4
 23733 ;;		_sendMessage5
 23734 ;;		_setNV
 23735 ;;		_startTimedResponse
 23736 ;; This function is called by:
 23737 ;;		_poll
 23738 ;; This function uses a non-reentrant model
 23739 ;;
 23740                           
 23741                           	psect	text17
 23742   002B64                     __ptext17:
 23743                           	callstack 0
 23744   002B64                     _nvProcessMessage:
 23745                           	callstack 118
 23746   002B64                     
 23747                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 23748   002B64  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23749   002B68  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23750   002B6C  0E03               	movlw	3
 23751   002B6E  60DF               	cpfslt	indf2,c
 23752   002B70  EFBC  F015         	goto	u8101
 23753   002B74  EFBE  F015         	goto	u8100
 23754   002B78                     u8101:
 23755   002B78  EFC1  F015         	goto	l10546
 23756   002B7C                     u8100:
 23757   002B7C                     l10542:
 23758                           
 23759                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 23760   002B7C  0E00               	movlw	0
 23761   002B7E  EF87  F017         	goto	l1347
 23762   002B82                     l10546:
 23763                           
 23764                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 23765   002B82  EE20 F002          	lfsr	2,2
 23766   002B86  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23767   002B88  26D9               	addwf	fsr2l,f,c
 23768   002B8A  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23769   002B8C  22DA               	addwfc	fsr2h,f,c
 23770   002B8E  50DE               	movf	postinc2,w,c
 23771   002B90  0105               	movlb	5	; () banked
 23772   002B92  198E               	xorwf	(_nn+1)& (0+255),w,b
 23773   002B94  B4D8               	btfsc	status,2,c
 23774   002B96  EFCF  F015         	goto	u8111
 23775   002B9A  EFD1  F015         	goto	u8110
 23776   002B9E                     u8111:
 23777   002B9E  EFD3  F015         	goto	l10552
 23778   002BA2                     u8110:
 23779   002BA2  EFBE  F015         	goto	l10542
 23780   002BA6                     l10552:
 23781                           
 23782                           ; BSR set to: 5
 23783                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 23784   002BA6  EE20 F003          	lfsr	2,3
 23785   002BAA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23786   002BAC  26D9               	addwf	fsr2l,f,c
 23787   002BAE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23788   002BB0  22DA               	addwfc	fsr2h,f,c
 23789   002BB2  518D               	movf	_nn& (0+255),w,b
 23790   002BB4  18DE               	xorwf	postinc2,w,c
 23791   002BB6  B4D8               	btfsc	status,2,c
 23792   002BB8  EFE0  F015         	goto	u8121
 23793   002BBC  EFE2  F015         	goto	u8120
 23794   002BC0                     u8121:
 23795   002BC0  EF68  F017         	goto	l10670
 23796   002BC4                     u8120:
 23797   002BC4  EFBE  F015         	goto	l10542
 23798   002BC8                     l10558:
 23799                           
 23800                           ; BSR set to: 5
 23801                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 23802   002BC8  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23803   002BCC  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23804   002BD0  0E04               	movlw	4
 23805   002BD2  60DF               	cpfslt	indf2,c
 23806   002BD4  EFEE  F015         	goto	u8131
 23807   002BD8  EFF0  F015         	goto	u8130
 23808   002BDC                     u8131:
 23809   002BDC  EF0C  F016         	goto	l10568
 23810   002BE0                     u8130:
 23811   002BE0                     
 23812                           ; BSR set to: 5
 23813                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 23814   002BE0  C58E  F526         	movff	_nn+1,sendMessage3@data1
 23815   002BE4  C58D  F527         	movff	_nn,sendMessage3@data2
 23816   002BE8  0E01               	movlw	1
 23817   002BEA  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23818   002BEC  0E6F               	movlw	111
 23819   002BEE  ECE9  F03C         	call	_sendMessage3
 23820                           
 23821                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23822   002BF2  C58E  F526         	movff	_nn+1,sendMessage5@data1
 23823   002BF6  C58D  F527         	movff	_nn,sendMessage5@data2
 23824   002BFA  0E71               	movlw	113
 23825   002BFC  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23826   002BFE  0E01               	movlw	1
 23827   002C00  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23828   002C02  0E01               	movlw	1
 23829   002C04  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23830   002C06  0EAF               	movlw	175
 23831   002C08  EC28  F03D         	call	_sendMessage5
 23832   002C0C                     l10562:
 23833                           
 23834                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 23835   002C0C  0105               	movlb	5	; () banked
 23836   002C0E  4BBD               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 23837   002C10  2BBE               	incf	(_nvDiagnostics+5)& (0+255),f,b
 23838   002C12                     l10564:
 23839                           
 23840                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 23841   002C12  0E01               	movlw	1
 23842   002C14  EF87  F017         	goto	l1347
 23843   002C18                     l10568:
 23844                           
 23845                           ; BSR set to: 5
 23846                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 23847   002C18  EE20 F004          	lfsr	2,4
 23848   002C1C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23849   002C1E  26D9               	addwf	fsr2l,f,c
 23850   002C20  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23851   002C22  22DA               	addwfc	fsr2h,f,c
 23852   002C24  50DF               	movf	indf2,w,c
 23853   002C26  ECC4  F039         	call	_getNV
 23854   002C2A  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 23855   002C2E  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 23856   002C32                     
 23857                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 23858   002C32  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 23859   002C34  EF20  F016         	goto	u8140
 23860   002C38  EF1E  F016         	goto	u8141
 23861   002C3C                     u8141:
 23862   002C3C  EF3A  F016         	goto	l10580
 23863   002C40                     u8140:
 23864   002C40                     
 23865                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 23866   002C40  C58E  F526         	movff	_nn+1,sendMessage3@data1
 23867   002C44  C58D  F527         	movff	_nn,sendMessage3@data2
 23868   002C48  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 23869   002C4A  0800               	sublw	0
 23870   002C4C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23871   002C4E  0E6F               	movlw	111
 23872   002C50  ECE9  F03C         	call	_sendMessage3
 23873                           
 23874                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 23875   002C54  C58E  F526         	movff	_nn+1,sendMessage5@data1
 23876   002C58  C58D  F527         	movff	_nn,sendMessage5@data2
 23877   002C5C  0E71               	movlw	113
 23878   002C5E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23879   002C60  0E01               	movlw	1
 23880   002C62  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23881   002C64  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 23882   002C66  0800               	sublw	0
 23883   002C68  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23884   002C6A  0EAF               	movlw	175
 23885   002C6C  EC28  F03D         	call	_sendMessage5
 23886   002C70  EF06  F016         	goto	l10562
 23887   002C74                     l10580:
 23888                           
 23889                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 23890   002C74  0105               	movlb	5	; () banked
 23891   002C76  4BBB               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 23892   002C78  2BBC               	incf	(_nvDiagnostics+3)& (0+255),f,b
 23893   002C7A                     
 23894                           ; BSR set to: 5
 23895                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 23896   002C7A  C58E  F526         	movff	_nn+1,sendMessage4@data1
 23897   002C7E  C58D  F527         	movff	_nn,sendMessage4@data2
 23898   002C82  EE20 F004          	lfsr	2,4
 23899   002C86  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23900   002C88  26D9               	addwf	fsr2l,f,c
 23901   002C8A  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23902   002C8C  22DA               	addwfc	fsr2h,f,c
 23903   002C8E  50DF               	movf	indf2,w,c
 23904   002C90  6E28               	movwf	sendMessage4@data3^(0+1280),c
 23905   002C92  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 23906   002C96  0E97               	movlw	151
 23907   002C98  ECD4  F03C         	call	_sendMessage4
 23908   002C9C                     
 23909                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 23910   002C9C  0105               	movlb	5	; () banked
 23911   002C9E  B7A4               	btfsc	_mode_flags& (0+255),3,b
 23912   002CA0  EF54  F016         	goto	u8151
 23913   002CA4  EF56  F016         	goto	u8150
 23914   002CA8                     u8151:
 23915   002CA8  EF09  F016         	goto	l10564
 23916   002CAC                     u8150:
 23917   002CAC                     
 23918                           ; BSR set to: 5
 23919   002CAC  EE20 F004          	lfsr	2,4
 23920   002CB0  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23921   002CB2  26D9               	addwf	fsr2l,f,c
 23922   002CB4  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23923   002CB6  22DA               	addwfc	fsr2h,f,c
 23924   002CB8  50DF               	movf	indf2,w,c
 23925   002CBA  A4D8               	btfss	status,2,c
 23926   002CBC  EF62  F016         	goto	u8161
 23927   002CC0  EF64  F016         	goto	u8160
 23928   002CC4                     u8161:
 23929   002CC4  EF09  F016         	goto	l10564
 23930   002CC8                     u8160:
 23931   002CC8                     
 23932                           ; BSR set to: 5
 23933                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 23934   002CC8  0E02               	movlw	2
 23935   002CCA  EC5D  F033         	call	_findServiceIndex
 23936   002CCE  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 23937   002CD0  0EDE               	movlw	low _nvTRnvrdCallback
 23938   002CD2  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 23939   002CD4  0E72               	movlw	high _nvTRnvrdCallback
 23940   002CD6  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 23941   002CD8  0E06               	movlw	6
 23942   002CDA  EC15  F039         	call	_startTimedResponse
 23943   002CDE  EF09  F016         	goto	l10564
 23944   002CE2                     l10594:
 23945                           
 23946                           ; BSR set to: 5
 23947                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 23948   002CE2  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23949   002CE6  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23950   002CEA  0E05               	movlw	5
 23951   002CEC  60DF               	cpfslt	indf2,c
 23952   002CEE  EF7B  F016         	goto	u8171
 23953   002CF2  EF7D  F016         	goto	u8170
 23954   002CF6                     u8171:
 23955   002CF6  EF8C  F016         	goto	l10604
 23956   002CFA                     u8170:
 23957   002CFA                     
 23958                           ; BSR set to: 5
 23959                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23960   002CFA  C58E  F526         	movff	_nn+1,sendMessage5@data1
 23961   002CFE  C58D  F527         	movff	_nn,sendMessage5@data2
 23962   002D02  0E96               	movlw	150
 23963   002D04  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23964   002D06  0E01               	movlw	1
 23965   002D08  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23966   002D0A  0E01               	movlw	1
 23967   002D0C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23968   002D0E  0EAF               	movlw	175
 23969   002D10  EC28  F03D         	call	_sendMessage5
 23970   002D14  EF06  F016         	goto	l10562
 23971   002D18                     l10604:
 23972                           
 23973                           ; BSR set to: 5
 23974                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 23975   002D18  EE20 F005          	lfsr	2,5
 23976   002D1C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23977   002D1E  26D9               	addwf	fsr2l,f,c
 23978   002D20  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23979   002D22  22DA               	addwfc	fsr2h,f,c
 23980   002D24  50DF               	movf	indf2,w,c
 23981   002D26  6E15               	movwf	setNV@value^(0+1280),c
 23982   002D28  EE20 F004          	lfsr	2,4
 23983   002D2C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23984   002D2E  26D9               	addwf	fsr2l,f,c
 23985   002D30  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23986   002D32  22DA               	addwfc	fsr2h,f,c
 23987   002D34  50DF               	movf	indf2,w,c
 23988   002D36  EC16  F033         	call	_setNV
 23989   002D3A  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 23990   002D3C  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 23991   002D3E  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 23992   002D40  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 23993   002D42                     
 23994                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 23995   002D42  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 23996   002D44  EFAC  F016         	goto	u8181
 23997   002D48  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 23998   002D4A  E108               	bnz	u8180
 23999   002D4C  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24000   002D4E  A0D8               	btfss	status,0,c
 24001   002D50  EFAC  F016         	goto	u8181
 24002   002D54  EFAE  F016         	goto	u8180
 24003   002D58                     u8181:
 24004   002D58  EFB9  F016         	goto	l10616
 24005   002D5C                     u8180:
 24006   002D5C                     
 24007                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24008   002D5C  C58E  F526         	movff	_nn+1,sendMessage3@data1
 24009   002D60  C58D  F527         	movff	_nn,sendMessage3@data2
 24010   002D64  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24011   002D68  0E6F               	movlw	111
 24012   002D6A  ECE9  F03C         	call	_sendMessage3
 24013   002D6E  EF06  F016         	goto	l10562
 24014   002D72                     l10616:
 24015                           
 24016                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 24017   002D72  C58E  F526         	movff	_nn+1,sendMessage2@data1
 24018   002D76  C58D  F527         	movff	_nn,sendMessage2@data2
 24019   002D7A  0E59               	movlw	89
 24020   002D7C  ECFE  F03C         	call	_sendMessage2
 24021                           
 24022                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 24023   002D80  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24024   002D84  C58D  F527         	movff	_nn,sendMessage5@data2
 24025   002D88  0E96               	movlw	150
 24026   002D8A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24027   002D8C  0E01               	movlw	1
 24028   002D8E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24029   002D90  0E00               	movlw	0
 24030   002D92  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24031   002D94  0EAF               	movlw	175
 24032   002D96  EC28  F03D         	call	_sendMessage5
 24033   002D9A  EF09  F016         	goto	l10564
 24034   002D9E                     l10622:
 24035                           
 24036                           ; BSR set to: 5
 24037                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 24038   002D9E  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24039   002DA2  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24040   002DA6  0E05               	movlw	5
 24041   002DA8  60DF               	cpfslt	indf2,c
 24042   002DAA  EFD9  F016         	goto	u8191
 24043   002DAE  EFDB  F016         	goto	u8190
 24044   002DB2                     u8191:
 24045   002DB2  EFEA  F016         	goto	l10632
 24046   002DB6                     u8190:
 24047   002DB6                     
 24048                           ; BSR set to: 5
 24049                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24050   002DB6  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24051   002DBA  C58D  F527         	movff	_nn,sendMessage5@data2
 24052   002DBE  0E8E               	movlw	142
 24053   002DC0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24054   002DC2  0E01               	movlw	1
 24055   002DC4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24056   002DC6  0E01               	movlw	1
 24057   002DC8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24058   002DCA  0EAF               	movlw	175
 24059   002DCC  EC28  F03D         	call	_sendMessage5
 24060   002DD0  EF06  F016         	goto	l10562
 24061   002DD4                     l10632:
 24062                           
 24063                           ; BSR set to: 5
 24064                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24065   002DD4  EE20 F005          	lfsr	2,5
 24066   002DD8  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24067   002DDA  26D9               	addwf	fsr2l,f,c
 24068   002DDC  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24069   002DDE  22DA               	addwfc	fsr2h,f,c
 24070   002DE0  50DF               	movf	indf2,w,c
 24071   002DE2  6E15               	movwf	setNV@value^(0+1280),c
 24072   002DE4  EE20 F004          	lfsr	2,4
 24073   002DE8  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24074   002DEA  26D9               	addwf	fsr2l,f,c
 24075   002DEC  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24076   002DEE  22DA               	addwfc	fsr2h,f,c
 24077   002DF0  50DF               	movf	indf2,w,c
 24078   002DF2  EC16  F033         	call	_setNV
 24079   002DF6  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24080   002DF8  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24081   002DFA  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24082   002DFC  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24083   002DFE                     
 24084                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 24085   002DFE  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24086   002E00  EF0A  F017         	goto	u8201
 24087   002E04  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24088   002E06  E108               	bnz	u8200
 24089   002E08  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24090   002E0A  A0D8               	btfss	status,0,c
 24091   002E0C  EF0A  F017         	goto	u8201
 24092   002E10  EF0C  F017         	goto	u8200
 24093   002E14                     u8201:
 24094   002E14  EF24  F017         	goto	l10644
 24095   002E18                     u8200:
 24096   002E18                     
 24097                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24098   002E18  C58E  F526         	movff	_nn+1,sendMessage3@data1
 24099   002E1C  C58D  F527         	movff	_nn,sendMessage3@data2
 24100   002E20  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24101   002E24  0E6F               	movlw	111
 24102   002E26  ECE9  F03C         	call	_sendMessage3
 24103                           
 24104                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 24105   002E2A  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24106   002E2E  C58D  F527         	movff	_nn,sendMessage5@data2
 24107   002E32  0E8E               	movlw	142
 24108   002E34  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24109   002E36  0E01               	movlw	1
 24110   002E38  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24111   002E3A  C558  F52A         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 24112   002E3E  0EAF               	movlw	175
 24113   002E40  EC28  F03D         	call	_sendMessage5
 24114   002E44  EF06  F016         	goto	l10562
 24115   002E48                     l10644:
 24116                           
 24117                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 24118   002E48  EE20 F004          	lfsr	2,4
 24119   002E4C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24120   002E4E  26D9               	addwf	fsr2l,f,c
 24121   002E50  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24122   002E52  22DA               	addwfc	fsr2h,f,c
 24123   002E54  50DF               	movf	indf2,w,c
 24124   002E56  ECC4  F039         	call	_getNV
 24125   002E5A  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 24126   002E5E  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 24127   002E62                     
 24128                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 24129   002E62  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24130   002E64  EF38  F017         	goto	u8210
 24131   002E68  EF36  F017         	goto	u8211
 24132   002E6C                     u8211:
 24133   002E6C  EF52  F017         	goto	l10656
 24134   002E70                     u8210:
 24135   002E70                     
 24136                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24137   002E70  C58E  F526         	movff	_nn+1,sendMessage3@data1
 24138   002E74  C58D  F527         	movff	_nn,sendMessage3@data2
 24139   002E78  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24140   002E7A  0800               	sublw	0
 24141   002E7C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24142   002E7E  0E6F               	movlw	111
 24143   002E80  ECE9  F03C         	call	_sendMessage3
 24144                           
 24145                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24146   002E84  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24147   002E88  C58D  F527         	movff	_nn,sendMessage5@data2
 24148   002E8C  0E8E               	movlw	142
 24149   002E8E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24150   002E90  0E01               	movlw	1
 24151   002E92  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24152   002E94  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24153   002E96  0800               	sublw	0
 24154   002E98  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24155   002E9A  0EAF               	movlw	175
 24156   002E9C  EC28  F03D         	call	_sendMessage5
 24157   002EA0  EF06  F016         	goto	l10562
 24158   002EA4                     l10656:
 24159                           
 24160                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24161   002EA4  C58E  F526         	movff	_nn+1,sendMessage4@data1
 24162   002EA8  C58D  F527         	movff	_nn,sendMessage4@data2
 24163   002EAC  EE20 F004          	lfsr	2,4
 24164   002EB0  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24165   002EB2  26D9               	addwf	fsr2l,f,c
 24166   002EB4  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24167   002EB6  22DA               	addwfc	fsr2h,f,c
 24168   002EB8  50DF               	movf	indf2,w,c
 24169   002EBA  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24170   002EBC  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24171   002EC0  0E97               	movlw	151
 24172   002EC2  ECD4  F03C         	call	_sendMessage4
 24173   002EC6                     
 24174                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 24175   002EC6  0105               	movlb	5	; () banked
 24176   002EC8  4BBB               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24177   002ECA  2BBC               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24178   002ECC  EF09  F016         	goto	l10564
 24179   002ED0                     l10670:
 24180                           
 24181                           ; BSR set to: 5
 24182   002ED0  EE20 F001          	lfsr	2,1
 24183   002ED4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24184   002ED6  26D9               	addwf	fsr2l,f,c
 24185   002ED8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24186   002EDA  22DA               	addwfc	fsr2h,f,c
 24187   002EDC  50DF               	movf	indf2,w,c
 24188   002EDE  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24189   002EE0  6A57               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 24190                           
 24191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24192                           ; Switch size 1, requested type "simple"
 24193                           ; Number of cases is 1, Range of values is 0 to 0
 24194                           ; switch strategies available:
 24195                           ; Name         Instructions Cycles
 24196                           ; simple_byte            4     3 (average)
 24197                           ;	Chosen strategy is simple_byte
 24198   002EE2  5057               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 24199   002EE4  0A00               	xorlw	0	; case 0
 24200   002EE6  B4D8               	btfsc	status,2,c
 24201   002EE8  EF78  F017         	goto	l11504
 24202   002EEC  EFBE  F015         	goto	l10542
 24203   002EF0                     l11504:
 24204                           
 24205                           ; BSR set to: 5
 24206                           ; Switch size 1, requested type "simple"
 24207                           ; Number of cases is 3, Range of values is 113 to 150
 24208                           ; switch strategies available:
 24209                           ; Name         Instructions Cycles
 24210                           ; simple_byte           10     6 (average)
 24211                           ;	Chosen strategy is simple_byte
 24212   002EF0  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24213   002EF2  0A71               	xorlw	113	; case 113
 24214   002EF4  B4D8               	btfsc	status,2,c
 24215   002EF6  EFE4  F015         	goto	l10558
 24216   002EFA  0AFF               	xorlw	255	; case 142
 24217   002EFC  B4D8               	btfsc	status,2,c
 24218   002EFE  EFCF  F016         	goto	l10622
 24219   002F02  0A18               	xorlw	24	; case 150
 24220   002F04  B4D8               	btfsc	status,2,c
 24221   002F06  EF71  F016         	goto	l10594
 24222   002F0A  EFBE  F015         	goto	l10542
 24223   002F0E                     l1347:
 24224   002F0E  0012               	return		;funcret
 24225   002F10                     __end_of_nvProcessMessage:
 24226                           	callstack 0
 24227                           
 24228 ;; *************** function _mnsProcessMessage *****************
 24229 ;; Defined at:
 24230 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;  m               2   83[COMRAM] PTR struct Message
 24233 ;;		 -> poll@m(9), 
 24234 ;; Auto vars:     Size  Location     Type
 24235 ;;  d               2   87[COMRAM] PTR struct DiagnosticVal
 24236 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 24237 ;;		 -> canDiagnostics(38), NULL(0), 
 24238 ;;  newMode         1   89[COMRAM] unsigned char 
 24239 ;;  i               1   85[COMRAM] unsigned char 
 24240 ;;  flags           1    0        unsigned char 
 24241 ;; Return value:  Size  Location     Type
 24242 ;;                  1    wreg      enum E23340
 24243 ;; Registers used:
 24244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24245 ;; Tracked objects:
 24246 ;;		On entry : 0/0
 24247 ;;		On exit  : 0/0
 24248 ;;		Unchanged: 0/0
 24249 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24251 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24252 ;;      Temps:          0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24253 ;;      Totals:         7      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24254 ;;Total ram usage:       37 bytes
 24255 ;; Hardware stack levels used: 1
 24256 ;; Hardware stack levels required when called: 11
 24257 ;; This function calls:
 24258 ;;		NULL
 24259 ;;		_bootEsdData
 24260 ;;		_canEsdData
 24261 ;;		_canGetDiagnostic
 24262 ;;		_canWaitForTxQueueToDrain
 24263 ;;		_consumerEsdData
 24264 ;;		_consumerGetDiagnostic
 24265 ;;		_factoryReset
 24266 ;;		_findServiceIndex
 24267 ;;		_getParameter
 24268 ;;		_getParameterFlags
 24269 ;;		_mnsGetDiagnostic
 24270 ;;		_nvGetDiagnostic
 24271 ;;		_nvGetESDdata
 24272 ;;		_rebuildHashtable
 24273 ;;		_sendMessage2
 24274 ;;		_sendMessage3
 24275 ;;		_sendMessage4
 24276 ;;		_sendMessage5
 24277 ;;		_sendMessage6
 24278 ;;		_sendMessage7
 24279 ;;		_setLEDsByMode
 24280 ;;		_startTimedResponse
 24281 ;;		_teachGetDiagnostic
 24282 ;;		_teachGetESDdata
 24283 ;;		_writeNVM
 24284 ;; This function is called by:
 24285 ;;		_poll
 24286 ;; This function uses a non-reentrant model
 24287 ;;
 24288                           
 24289                           	psect	text18
 24290   000A06                     __ptext18:
 24291                           	callstack 0
 24292   000A06                     _mnsProcessMessage:
 24293                           	callstack 114
 24294   000A06                     
 24295                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 24296   000A06  0105               	movlb	5	; () banked
 24297   000A08  51A1               	movf	_mode_state& (0+255),w,b
 24298   000A0A  A4D8               	btfss	status,2,c
 24299   000A0C  EF0A  F005         	goto	u7531
 24300   000A10  EF0C  F005         	goto	u7530
 24301   000A14                     u7531:
 24302   000A14  EF62  F006         	goto	l10148
 24303   000A18                     u7530:
 24304   000A18  EFCA  F005         	goto	l10092
 24305   000A1C                     l10048:
 24306                           
 24307                           ; BSR set to: 5
 24308                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 24309   000A1C  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24310   000A20  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24311   000A24  0E03               	movlw	3
 24312   000A26  60DF               	cpfslt	indf2,c
 24313   000A28  EF18  F005         	goto	u7541
 24314   000A2C  EF1A  F005         	goto	u7540
 24315   000A30                     u7541:
 24316   000A30  EF29  F005         	goto	l10052
 24317   000A34                     u7540:
 24318   000A34                     
 24319                           ; BSR set to: 5
 24320                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24321   000A34  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24322   000A38  C58D  F527         	movff	_nn,sendMessage5@data2
 24323   000A3C  0E42               	movlw	66
 24324   000A3E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24325   000A40  0E01               	movlw	1
 24326   000A42  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24327   000A44  0E01               	movlw	1
 24328   000A46  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24329   000A48  0EAF               	movlw	175
 24330   000A4A  EC28  F03D         	call	_sendMessage5
 24331                           
 24332                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 24333   000A4E  EF60  F005         	goto	l10068
 24334   000A52                     l10052:
 24335                           
 24336                           ; BSR set to: 5
 24337                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 24338   000A52  EE20 F002          	lfsr	2,2
 24339   000A56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24340   000A58  26D9               	addwf	fsr2l,f,c
 24341   000A5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24342   000A5C  22DA               	addwfc	fsr2h,f,c
 24343   000A5E  50DF               	movf	indf2,w,c
 24344   000A60  6F8E               	movwf	(_nn+1)& (0+255),b
 24345                           
 24346                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 24347   000A62  EE20 F003          	lfsr	2,3
 24348   000A66  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24349   000A68  26D9               	addwf	fsr2l,f,c
 24350   000A6A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24351   000A6C  22DA               	addwfc	fsr2h,f,c
 24352   000A6E  50DF               	movf	indf2,w,c
 24353   000A70  6F8D               	movwf	_nn& (0+255),b
 24354   000A72                     
 24355                           ; BSR set to: 5
 24356                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 24357   000A72  0EFD               	movlw	253
 24358   000A74  6E0E               	movwf	writeNVM@index^(0+1280),c
 24359   000A76  0E03               	movlw	3
 24360   000A78  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24361   000A7A  0E00               	movlw	0
 24362   000A7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24363   000A7E  C58E  F511         	movff	_nn+1,writeNVM@value
 24364   000A82  0E00               	movlw	0
 24365   000A84  ECB5  F038         	call	_writeNVM
 24366   000A88                     
 24367                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 24368   000A88  0EFC               	movlw	252
 24369   000A8A  6E0E               	movwf	writeNVM@index^(0+1280),c
 24370   000A8C  0E03               	movlw	3
 24371   000A8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24372   000A90  0E00               	movlw	0
 24373   000A92  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24374   000A94  C58D  F511         	movff	_nn,writeNVM@value
 24375   000A98  0E00               	movlw	0
 24376   000A9A  ECB5  F038         	call	_writeNVM
 24377   000A9E                     
 24378                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 24379   000A9E  0E01               	movlw	1
 24380   000AA0  0105               	movlb	5	; () banked
 24381   000AA2  6FA1               	movwf	_mode_state& (0+255),b
 24382   000AA4                     
 24383                           ; BSR set to: 5
 24384                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 24385   000AA4  EC04  F028         	call	_rebuildHashtable	;wreg free
 24386   000AA8                     
 24387                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 24388   000AA8  C58E  F526         	movff	_nn+1,sendMessage2@data1
 24389   000AAC  C58D  F527         	movff	_nn,sendMessage2@data2
 24390   000AB0  0E52               	movlw	82
 24391   000AB2  ECFE  F03C         	call	_sendMessage2
 24392   000AB6                     
 24393                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 24394   000AB6  0105               	movlb	5	; () banked
 24395   000AB8  4BB5               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 24396   000ABA  2BB6               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 24397   000ABC                     l10066:
 24398                           
 24399                           ; BSR set to: 5
 24400                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 24401   000ABC  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 24402   000AC0                     l10068:
 24403                           
 24404                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 24405   000AC0  0E01               	movlw	1
 24406   000AC2  EF72  F00B         	goto	l1093
 24407   000AC6                     l10072:
 24408                           
 24409                           ; BSR set to: 5
 24410                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 24411   000AC6  0EA5               	movlw	165
 24412   000AC8  6E26               	movwf	sendMessage7@data1^(0+1280),c
 24413   000ACA  0E61               	movlw	97
 24414   000ACC  6E27               	movwf	sendMessage7@data2^(0+1280),c
 24415   000ACE  0EFC               	movlw	252
 24416   000AD0  6E28               	movwf	sendMessage7@data3^(0+1280),c
 24417   000AD2  0EFF               	movlw	255
 24418   000AD4  6E29               	movwf	sendMessage7@data4^(0+1280),c
 24419   000AD6  0EFC               	movlw	252
 24420   000AD8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 24421   000ADA  0E30               	movlw	48
 24422   000ADC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 24423   000ADE  0E01               	movlw	1
 24424   000AE0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 24425   000AE2  0EEF               	movlw	239
 24426   000AE4  EC13  F03D         	call	_sendMessage7
 24427   000AE8  EF60  F005         	goto	l10068
 24428   000AEC                     l10078:
 24429                           
 24430                           ; BSR set to: 5
 24431                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 24432   000AEC  0E48               	movlw	72
 24433   000AEE  6EF6               	movwf	tblptrl,c
 24434   000AF0                     	if	1	;There is more than 1 active tblptr byte
 24435   000AF0  0E08               	movlw	8
 24436   000AF2  6EF7               	movwf	tblptrh,c
 24437   000AF4                     	endif
 24438   000AF4                     	if	1	;There are 3 active tblptr bytes
 24439   000AF4  0E00               	movlw	0
 24440   000AF6  6EF8               	movwf	tblptru,c
 24441   000AF8                     	endif
 24442   000AF8  0008               	tblrd		*
 24443   000AFA  C4F5 F526          	movff	tablat,sendMessage7@data1
 24444   000AFE  0E49               	movlw	73
 24445   000B00  6EF6               	movwf	tblptrl,c
 24446   000B02  0E08               	movlw	8
 24447   000B04  6EF7               	movwf	tblptrh,c
 24448   000B06  0E00               	movlw	0
 24449   000B08  6EF8               	movwf	tblptru,c
 24450   000B0A  0008               	tblrd		*
 24451   000B0C  C4F5 F527          	movff	tablat,sendMessage7@data2
 24452   000B10  0E4A               	movlw	74
 24453   000B12  6EF6               	movwf	tblptrl,c
 24454   000B14  0E08               	movlw	8
 24455   000B16  6EF7               	movwf	tblptrh,c
 24456   000B18  0E00               	movlw	0
 24457   000B1A  6EF8               	movwf	tblptru,c
 24458   000B1C  0008               	tblrd		*
 24459   000B1E  C4F5 F528          	movff	tablat,sendMessage7@data3
 24460   000B22  0E4B               	movlw	75
 24461   000B24  6EF6               	movwf	tblptrl,c
 24462   000B26  0E08               	movlw	8
 24463   000B28  6EF7               	movwf	tblptrh,c
 24464   000B2A  0E00               	movlw	0
 24465   000B2C  6EF8               	movwf	tblptru,c
 24466   000B2E  0008               	tblrd		*
 24467   000B30  C4F5 F529          	movff	tablat,sendMessage7@data4
 24468   000B34  0E4C               	movlw	76
 24469   000B36  6EF6               	movwf	tblptrl,c
 24470   000B38  0E08               	movlw	8
 24471   000B3A  6EF7               	movwf	tblptrh,c
 24472   000B3C  0E00               	movlw	0
 24473   000B3E  6EF8               	movwf	tblptru,c
 24474   000B40  0008               	tblrd		*
 24475   000B42  C4F5 F52A          	movff	tablat,sendMessage7@data5
 24476   000B46  0E4D               	movlw	77
 24477   000B48  6EF6               	movwf	tblptrl,c
 24478   000B4A  0E08               	movlw	8
 24479   000B4C  6EF7               	movwf	tblptrh,c
 24480   000B4E  0E00               	movlw	0
 24481   000B50  6EF8               	movwf	tblptru,c
 24482   000B52  0008               	tblrd		*
 24483   000B54  C4F5 F52B          	movff	tablat,sendMessage7@data6
 24484   000B58  0E4E               	movlw	78
 24485   000B5A  6EF6               	movwf	tblptrl,c
 24486   000B5C  0E08               	movlw	8
 24487   000B5E  6EF7               	movwf	tblptrh,c
 24488   000B60  0E00               	movlw	0
 24489   000B62  6EF8               	movwf	tblptru,c
 24490   000B64  0008               	tblrd		*
 24491   000B66  C4F5 F52C          	movff	tablat,sendMessage7@data7
 24492   000B6A  0EE2               	movlw	226
 24493   000B6C  EC13  F03D         	call	_sendMessage7
 24494   000B70  EF60  F005         	goto	l10068
 24495   000B74                     l10084:
 24496                           
 24497                           ; BSR set to: 5
 24498                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_VLCB, getParameterFlags());
 24499   000B74  0E00               	movlw	0
 24500   000B76  6E26               	movwf	sendMessage5@data1^(0+1280),c
 24501   000B78  0E00               	movlw	0
 24502   000B7A  6E27               	movwf	sendMessage5@data2^(0+1280),c
 24503   000B7C  0EA5               	movlw	165
 24504   000B7E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24505   000B80  0EFC               	movlw	252
 24506   000B82  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24507   000B84  ECE9  F033         	call	_getParameterFlags	;wreg free
 24508   000B88  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24509   000B8A  0EB6               	movlw	182
 24510   000B8C  EC28  F03D         	call	_sendMessage5
 24511   000B90  EF60  F005         	goto	l10068
 24512   000B94                     l10092:
 24513                           
 24514                           ; BSR set to: 5
 24515   000B94  EE20 F001          	lfsr	2,1
 24516   000B98  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24517   000B9A  26D9               	addwf	fsr2l,f,c
 24518   000B9C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24519   000B9E  22DA               	addwfc	fsr2h,f,c
 24520   000BA0  50DF               	movf	indf2,w,c
 24521   000BA2  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 24522   000BA4  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24523                           
 24524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24525                           ; Switch size 1, requested type "simple"
 24526                           ; Number of cases is 1, Range of values is 0 to 0
 24527                           ; switch strategies available:
 24528                           ; Name         Instructions Cycles
 24529                           ; simple_byte            4     3 (average)
 24530                           ;	Chosen strategy is simple_byte
 24531   000BA6  51CF               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24532   000BA8  0A00               	xorlw	0	; case 0
 24533   000BAA  B4D8               	btfsc	status,2,c
 24534   000BAC  EFDA  F005         	goto	l11506
 24535   000BB0  EFED  F005         	goto	l10094
 24536   000BB4                     l11506:
 24537                           
 24538                           ; BSR set to: 5
 24539                           ; Switch size 1, requested type "simple"
 24540                           ; Number of cases is 4, Range of values is 13 to 66
 24541                           ; switch strategies available:
 24542                           ; Name         Instructions Cycles
 24543                           ; simple_byte           13     7 (average)
 24544                           ;	Chosen strategy is simple_byte
 24545   000BB4  51CE               	movf	??_mnsProcessMessage& (0+255),w,b
 24546   000BB6  0A0D               	xorlw	13	; case 13
 24547   000BB8  B4D8               	btfsc	status,2,c
 24548   000BBA  EFBA  F005         	goto	l10084
 24549   000BBE  0A1D               	xorlw	29	; case 16
 24550   000BC0  B4D8               	btfsc	status,2,c
 24551   000BC2  EF63  F005         	goto	l10072
 24552   000BC6  0A01               	xorlw	1	; case 17
 24553   000BC8  B4D8               	btfsc	status,2,c
 24554   000BCA  EF76  F005         	goto	l10078
 24555   000BCE  0A53               	xorlw	83	; case 66
 24556   000BD0  B4D8               	btfsc	status,2,c
 24557   000BD2  EF0E  F005         	goto	l10048
 24558   000BD6  EFED  F005         	goto	l10094
 24559   000BDA                     l10094:
 24560                           
 24561                           ; BSR set to: 5
 24562                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 24563   000BDA  0E00               	movlw	0
 24564   000BDC  EF72  F00B         	goto	l1093
 24565   000BE0                     l10098:
 24566                           
 24567                           ; BSR set to: 5
 24568                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_VLCB, getParameterFlags());
 24569   000BE0  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24570   000BE4  C58D  F527         	movff	_nn,sendMessage5@data2
 24571   000BE8  0EA5               	movlw	165
 24572   000BEA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24573   000BEC  0EFC               	movlw	252
 24574   000BEE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24575   000BF0  ECE9  F033         	call	_getParameterFlags	;wreg free
 24576   000BF4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24577   000BF6  0EB6               	movlw	182
 24578   000BF8  EC28  F03D         	call	_sendMessage5
 24579   000BFC  EF60  F005         	goto	l10068
 24580   000C00                     l10104:
 24581                           
 24582                           ; BSR set to: 5
 24583                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 24584   000C00  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24585   000C04  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24586   000C08  0E04               	movlw	4
 24587   000C0A  60DF               	cpfslt	indf2,c
 24588   000C0C  EF0A  F006         	goto	u7551
 24589   000C10  EF0C  F006         	goto	u7550
 24590   000C14                     u7551:
 24591   000C14  EF1B  F006         	goto	l10112
 24592   000C18                     u7550:
 24593   000C18                     
 24594                           ; BSR set to: 5
 24595                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24596   000C18  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24597   000C1C  C58D  F527         	movff	_nn,sendMessage5@data2
 24598   000C20  0E76               	movlw	118
 24599   000C22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24600   000C24  0E01               	movlw	1
 24601   000C26  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24602   000C28  0E01               	movlw	1
 24603   000C2A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24604   000C2C  0EAF               	movlw	175
 24605   000C2E  EC28  F03D         	call	_sendMessage5
 24606   000C32  EF60  F005         	goto	l10068
 24607   000C36                     l10112:
 24608                           
 24609                           ; BSR set to: 5
 24610                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 24611   000C36  EE20 F002          	lfsr	2,2
 24612   000C3A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24613   000C3C  26D9               	addwf	fsr2l,f,c
 24614   000C3E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24615   000C40  22DA               	addwfc	fsr2h,f,c
 24616   000C42  50DF               	movf	indf2,w,c
 24617   000C44  A4D8               	btfss	status,2,c
 24618   000C46  EF27  F006         	goto	u7561
 24619   000C4A  EF29  F006         	goto	u7560
 24620   000C4E                     u7561:
 24621   000C4E  EF7D  F006         	goto	l10150
 24622   000C52                     u7560:
 24623   000C52                     
 24624                           ; BSR set to: 5
 24625   000C52  EE20 F003          	lfsr	2,3
 24626   000C56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24627   000C58  26D9               	addwf	fsr2l,f,c
 24628   000C5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24629   000C5C  22DA               	addwfc	fsr2h,f,c
 24630   000C5E  50DF               	movf	indf2,w,c
 24631   000C60  A4D8               	btfss	status,2,c
 24632   000C62  EF35  F006         	goto	u7571
 24633   000C66  EF37  F006         	goto	u7570
 24634   000C6A                     u7571:
 24635   000C6A  EF7D  F006         	goto	l10150
 24636   000C6E                     u7570:
 24637   000C6E                     
 24638                           ; BSR set to: 5
 24639                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 24640   000C6E  EE20 F004          	lfsr	2,4
 24641   000C72  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24642   000C74  26D9               	addwf	fsr2l,f,c
 24643   000C76  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24644   000C78  22DA               	addwfc	fsr2h,f,c
 24645   000C7A  50DF               	movf	indf2,w,c
 24646   000C7C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 24647                           
 24648                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 24649   000C7E  EF4D  F006         	goto	l10144
 24650   000C82                     l10118:
 24651                           
 24652                           ; BSR set to: 5
 24653                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 24654   000C82  85A4               	bsf	_mode_flags& (0+255),2,b
 24655   000C84  EF60  F005         	goto	l10068
 24656   000C88                     l10124:
 24657                           
 24658                           ; BSR set to: 5
 24659                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 24660   000C88  95A4               	bcf	_mode_flags& (0+255),2,b
 24661   000C8A  EF60  F005         	goto	l10068
 24662   000C8E                     l10130:
 24663                           
 24664                           ; BSR set to: 5
 24665                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 24666   000C8E  87A4               	bsf	_mode_flags& (0+255),3,b
 24667   000C90  EF60  F005         	goto	l10068
 24668   000C94                     l10136:
 24669                           
 24670                           ; BSR set to: 5
 24671                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 24672   000C94  97A4               	bcf	_mode_flags& (0+255),3,b
 24673   000C96  EF60  F005         	goto	l10068
 24674   000C9A                     l10144:
 24675                           
 24676                           ; BSR set to: 5
 24677   000C9A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 24678                           
 24679                           ; Switch size 1, requested type "simple"
 24680                           ; Number of cases is 4, Range of values is 12 to 17
 24681                           ; switch strategies available:
 24682                           ; Name         Instructions Cycles
 24683                           ; simple_byte           13     7 (average)
 24684                           ;	Chosen strategy is simple_byte
 24685   000C9C  0A0C               	xorlw	12	; case 12
 24686   000C9E  B4D8               	btfsc	status,2,c
 24687   000CA0  EF41  F006         	goto	l10118
 24688   000CA4  0A01               	xorlw	1	; case 13
 24689   000CA6  B4D8               	btfsc	status,2,c
 24690   000CA8  EF44  F006         	goto	l10124
 24691   000CAC  0A1D               	xorlw	29	; case 16
 24692   000CAE  B4D8               	btfsc	status,2,c
 24693   000CB0  EF47  F006         	goto	l10130
 24694   000CB4  0A01               	xorlw	1	; case 17
 24695   000CB6  B4D8               	btfsc	status,2,c
 24696   000CB8  EF4A  F006         	goto	l10136
 24697   000CBC  EF60  F006         	goto	l1103
 24698   000CC0                     l1103:
 24699                           
 24700                           ; BSR set to: 5
 24701                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 24702   000CC0  EF7D  F006         	goto	l10150
 24703   000CC4                     l10148:
 24704                           
 24705                           ; BSR set to: 5
 24706   000CC4  EE20 F001          	lfsr	2,1
 24707   000CC8  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24708   000CCA  26D9               	addwf	fsr2l,f,c
 24709   000CCC  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24710   000CCE  22DA               	addwfc	fsr2h,f,c
 24711   000CD0  50DF               	movf	indf2,w,c
 24712   000CD2  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 24713   000CD4  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24714                           
 24715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24716                           ; Switch size 1, requested type "simple"
 24717                           ; Number of cases is 1, Range of values is 0 to 0
 24718                           ; switch strategies available:
 24719                           ; Name         Instructions Cycles
 24720                           ; simple_byte            4     3 (average)
 24721                           ;	Chosen strategy is simple_byte
 24722   000CD6  51CF               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24723   000CD8  0A00               	xorlw	0	; case 0
 24724   000CDA  B4D8               	btfsc	status,2,c
 24725   000CDC  EF72  F006         	goto	l11508
 24726   000CE0  EF7D  F006         	goto	l10150
 24727   000CE4                     l11508:
 24728                           
 24729                           ; BSR set to: 5
 24730                           ; Switch size 1, requested type "simple"
 24731                           ; Number of cases is 2, Range of values is 13 to 118
 24732                           ; switch strategies available:
 24733                           ; Name         Instructions Cycles
 24734                           ; simple_byte            7     4 (average)
 24735                           ;	Chosen strategy is simple_byte
 24736   000CE4  51CE               	movf	??_mnsProcessMessage& (0+255),w,b
 24737   000CE6  0A0D               	xorlw	13	; case 13
 24738   000CE8  B4D8               	btfsc	status,2,c
 24739   000CEA  EFF0  F005         	goto	l10098
 24740   000CEE  0A7B               	xorlw	123	; case 118
 24741   000CF0  B4D8               	btfsc	status,2,c
 24742   000CF2  EF00  F006         	goto	l10104
 24743   000CF6  EF7D  F006         	goto	l10150
 24744   000CFA                     l10150:
 24745                           
 24746                           ; BSR set to: 5
 24747                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 24748   000CFA  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24749   000CFE  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24750   000D02  0E03               	movlw	3
 24751   000D04  60DF               	cpfslt	indf2,c
 24752   000D06  EF87  F006         	goto	u7581
 24753   000D0A  EF89  F006         	goto	u7580
 24754   000D0E                     u7581:
 24755   000D0E  EF8B  F006         	goto	l10156
 24756   000D12                     u7580:
 24757   000D12  EFED  F005         	goto	l10094
 24758   000D16                     l10156:
 24759                           
 24760                           ; BSR set to: 5
 24761                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 24762   000D16  EE20 F002          	lfsr	2,2
 24763   000D1A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24764   000D1C  26D9               	addwf	fsr2l,f,c
 24765   000D1E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24766   000D20  22DA               	addwfc	fsr2h,f,c
 24767   000D22  50DE               	movf	postinc2,w,c
 24768   000D24  198E               	xorwf	(_nn+1)& (0+255),w,b
 24769   000D26  B4D8               	btfsc	status,2,c
 24770   000D28  EF98  F006         	goto	u7591
 24771   000D2C  EF9A  F006         	goto	u7590
 24772   000D30                     u7591:
 24773   000D30  EF9C  F006         	goto	l10162
 24774   000D34                     u7590:
 24775   000D34  EFED  F005         	goto	l10094
 24776   000D38                     l10162:
 24777                           
 24778                           ; BSR set to: 5
 24779                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 24780   000D38  EE20 F003          	lfsr	2,3
 24781   000D3C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24782   000D3E  26D9               	addwf	fsr2l,f,c
 24783   000D40  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24784   000D42  22DA               	addwfc	fsr2h,f,c
 24785   000D44  518D               	movf	_nn& (0+255),w,b
 24786   000D46  18DE               	xorwf	postinc2,w,c
 24787   000D48  B4D8               	btfsc	status,2,c
 24788   000D4A  EFA9  F006         	goto	u7601
 24789   000D4E  EFAB  F006         	goto	u7600
 24790   000D52                     u7601:
 24791   000D52  EF47  F00B         	goto	l10372
 24792   000D56                     u7600:
 24793   000D56  EFED  F005         	goto	l10094
 24794   000D5A                     l10168:
 24795                           
 24796                           ; BSR set to: 5
 24797                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 24798   000D5A  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24799   000D5E  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24800   000D62  0E04               	movlw	4
 24801   000D64  60DF               	cpfslt	indf2,c
 24802   000D66  EFB7  F006         	goto	u7611
 24803   000D6A  EFB9  F006         	goto	u7610
 24804   000D6E                     u7611:
 24805   000D6E  EFC8  F006         	goto	l10176
 24806   000D72                     u7610:
 24807   000D72                     
 24808                           ; BSR set to: 5
 24809                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24810   000D72  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24811   000D76  C58D  F527         	movff	_nn,sendMessage5@data2
 24812   000D7A  0E73               	movlw	115
 24813   000D7C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24814   000D7E  0E01               	movlw	1
 24815   000D80  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24816   000D82  0E01               	movlw	1
 24817   000D84  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24818   000D86  0EAF               	movlw	175
 24819   000D88  EC28  F03D         	call	_sendMessage5
 24820   000D8C  EF60  F005         	goto	l10068
 24821   000D90                     l10176:
 24822                           
 24823                           ; BSR set to: 5
 24824                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 24825   000D90  EE20 F004          	lfsr	2,4
 24826   000D94  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24827   000D96  26D9               	addwf	fsr2l,f,c
 24828   000D98  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24829   000D9A  22DA               	addwfc	fsr2h,f,c
 24830   000D9C  0E14               	movlw	20
 24831   000D9E  64DF               	cpfsgt	indf2,c
 24832   000DA0  EFD4  F006         	goto	u7621
 24833   000DA4  EFD6  F006         	goto	u7620
 24834   000DA8                     u7621:
 24835   000DA8  EFEE  F006         	goto	l10184
 24836   000DAC                     u7620:
 24837   000DAC                     
 24838                           ; BSR set to: 5
 24839                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 24840   000DAC  C58E  F526         	movff	_nn+1,sendMessage3@data1
 24841   000DB0  C58D  F527         	movff	_nn,sendMessage3@data2
 24842   000DB4  0E09               	movlw	9
 24843   000DB6  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24844   000DB8  0E6F               	movlw	111
 24845   000DBA  ECE9  F03C         	call	_sendMessage3
 24846                           
 24847                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 24848   000DBE  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24849   000DC2  C58D  F527         	movff	_nn,sendMessage5@data2
 24850   000DC6  0E73               	movlw	115
 24851   000DC8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24852   000DCA  0E01               	movlw	1
 24853   000DCC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24854   000DCE  0E09               	movlw	9
 24855   000DD0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24856   000DD2  0EAF               	movlw	175
 24857   000DD4  EC28  F03D         	call	_sendMessage5
 24858   000DD8  EF60  F005         	goto	l10068
 24859   000DDC                     l10184:
 24860                           
 24861                           ; BSR set to: 5
 24862                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 24863   000DDC  EE20 F004          	lfsr	2,4
 24864   000DE0  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24865   000DE2  26D9               	addwf	fsr2l,f,c
 24866   000DE4  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24867   000DE6  22DA               	addwfc	fsr2h,f,c
 24868   000DE8  50DF               	movf	indf2,w,c
 24869   000DEA  EC2D  F021         	call	_getParameter
 24870   000DEE  6E56               	movwf	mnsProcessMessage@i^(0+1280),c
 24871   000DF0                     
 24872                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 24873   000DF0  C58E  F526         	movff	_nn+1,sendMessage4@data1
 24874   000DF4  C58D  F527         	movff	_nn,sendMessage4@data2
 24875   000DF8  EE20 F004          	lfsr	2,4
 24876   000DFC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24877   000DFE  26D9               	addwf	fsr2l,f,c
 24878   000E00  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24879   000E02  22DA               	addwfc	fsr2h,f,c
 24880   000E04  50DF               	movf	indf2,w,c
 24881   000E06  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24882   000E08  C556  F529         	movff	mnsProcessMessage@i,sendMessage4@data4
 24883   000E0C  0E9B               	movlw	155
 24884   000E0E  ECD4  F03C         	call	_sendMessage4
 24885   000E12                     
 24886                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 24887   000E12  0105               	movlb	5	; () banked
 24888   000E14  B7A4               	btfsc	_mode_flags& (0+255),3,b
 24889   000E16  EF0F  F007         	goto	u7631
 24890   000E1A  EF11  F007         	goto	u7630
 24891   000E1E                     u7631:
 24892   000E1E  EF60  F005         	goto	l10068
 24893   000E22                     u7630:
 24894   000E22                     
 24895                           ; BSR set to: 5
 24896   000E22  EE20 F004          	lfsr	2,4
 24897   000E26  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24898   000E28  26D9               	addwf	fsr2l,f,c
 24899   000E2A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24900   000E2C  22DA               	addwfc	fsr2h,f,c
 24901   000E2E  50DF               	movf	indf2,w,c
 24902   000E30  A4D8               	btfss	status,2,c
 24903   000E32  EF1D  F007         	goto	u7641
 24904   000E36  EF1F  F007         	goto	u7640
 24905   000E3A                     u7641:
 24906   000E3A  EF60  F005         	goto	l10068
 24907   000E3E                     u7640:
 24908   000E3E                     
 24909                           ; BSR set to: 5
 24910                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 24911   000E3E  0E01               	movlw	1
 24912   000E40  EC5D  F033         	call	_findServiceIndex
 24913   000E44  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 24914   000E46  0EC2               	movlw	low _mnsTRrqnpnCallback
 24915   000E48  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 24916   000E4A  0E77               	movlw	high _mnsTRrqnpnCallback
 24917   000E4C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 24918   000E4E  0E07               	movlw	7
 24919   000E50  EC15  F039         	call	_startTimedResponse
 24920   000E54  EF60  F005         	goto	l10068
 24921   000E58                     l1121:
 24922                           
 24923                           ; BSR set to: 5
 24924                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 24925   000E58  C58D  F58B         	movff	_nn,_previousNN
 24926   000E5C  C58E  F58C         	movff	_nn+1,_previousNN+1
 24927   000E60                     
 24928                           ; BSR set to: 5
 24929                           ;../../VLCBlib_PIC/mns.c: 479:             factoryReset();
 24930   000E60  EC85  F027         	call	_factoryReset	;wreg free
 24931   000E64                     
 24932                           ;../../VLCBlib_PIC/mns.c: 480:             if (previousNN.word != 0) {
 24933   000E64  0105               	movlb	5	; () banked
 24934   000E66  518B               	movf	_previousNN& (0+255),w,b
 24935   000E68  118C               	iorwf	(_previousNN+1)& (0+255),w,b
 24936   000E6A  B4D8               	btfsc	status,2,c
 24937   000E6C  EF3A  F007         	goto	u7651
 24938   000E70  EF3C  F007         	goto	u7650
 24939   000E74                     u7651:
 24940   000E74  EF61  F007         	goto	l1122
 24941   000E78                     u7650:
 24942   000E78                     
 24943                           ; BSR set to: 5
 24944                           ;../../VLCBlib_PIC/mns.c: 481:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 24945   000E78  C58C  F526         	movff	_previousNN+1,sendMessage2@data1
 24946   000E7C  C58B  F527         	movff	_previousNN,sendMessage2@data2
 24947   000E80  0E51               	movlw	81
 24948   000E82  ECFE  F03C         	call	_sendMessage2
 24949   000E86                     
 24950                           ;../../VLCBlib_PIC/mns.c: 482:                 transport->waitForTxQueueToDrain();
 24951   000E86  0E04               	movlw	4
 24952   000E88  0105               	movlb	5	; () banked
 24953   000E8A  258F               	addwf	_transport& (0+255),w,b
 24954   000E8C  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 24955   000E8E  0E00               	movlw	0
 24956   000E90  2190               	addwfc	(_transport+1)& (0+255),w,b
 24957   000E92  6FCF               	movwf	(??_mnsProcessMessage+1)& (0+255),b
 24958   000E94  C5CE  F4F6         	movff	??_mnsProcessMessage,tblptrl
 24959   000E98  C5CF  F4F7         	movff	??_mnsProcessMessage+1,tblptrh
 24960   000E9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24961   000E9C  6AF8               	clrf	tblptru,c
 24962   000E9E                     	endif
 24963   000E9E                     	if	0	;tblptru may be non-zero
 24964   000E9E                     	endif
 24965   000E9E  0009               	tblrd		*+
 24966   000EA0  C4F5 F5D0          	movff	tablat,??_mnsProcessMessage+2
 24967   000EA4  0009               	tblrd		*+
 24968   000EA6  C4F5 F5D1          	movff	tablat,??_mnsProcessMessage+3
 24969   000EAA  D802               	call	u7668
 24970   000EAC  EF61  F007         	goto	u7669
 24971   000EB0                     u7668:
 24972   000EB0  0005               	push	
 24973   000EB2  6EFA               	movwf	pclath,c
 24974   000EB4  51D0               	movf	(??_mnsProcessMessage+2)& (0+255),w,b
 24975   000EB6  6EFD               	movwf	tosl,c
 24976   000EB8  51D1               	movf	(??_mnsProcessMessage+3)& (0+255),w,b
 24977   000EBA  6EFE               	movwf	tosh,c
 24978   000EBC  6AFF               	clrf	tosu,c
 24979   000EBE  50FA               	movf	pclath,w,c
 24980   000EC0  0012               	return		;indir
 24981   000EC2                     u7669:
 24982   000EC2                     l1122:
 24983   000EC2  00FF               	reset		;# 
 24984   000EC4                     l10206:
 24985                           
 24986                           ;../../VLCBlib_PIC/mns.c: 487:             if (m->len < 5) {
 24987   000EC4  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24988   000EC8  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24989   000ECC  0E05               	movlw	5
 24990   000ECE  60DF               	cpfslt	indf2,c
 24991   000ED0  EF6C  F007         	goto	u7671
 24992   000ED4  EF6E  F007         	goto	u7670
 24993   000ED8                     u7671:
 24994   000ED8  EF7D  F007         	goto	l10214
 24995   000EDC                     u7670:
 24996   000EDC                     
 24997                           ;../../VLCBlib_PIC/mns.c: 488:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24998   000EDC  C58E  F526         	movff	_nn+1,sendMessage5@data1
 24999   000EE0  C58D  F527         	movff	_nn,sendMessage5@data2
 25000   000EE4  0E87               	movlw	135
 25001   000EE6  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25002   000EE8  0E01               	movlw	1
 25003   000EEA  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25004   000EEC  0E01               	movlw	1
 25005   000EEE  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25006   000EF0  0EAF               	movlw	175
 25007   000EF2  EC28  F03D         	call	_sendMessage5
 25008   000EF6  EF60  F005         	goto	l10068
 25009   000EFA                     l10214:
 25010                           
 25011                           ;../../VLCBlib_PIC/mns.c: 491:             if (m->bytes[2] == 0) {
 25012   000EFA  EE20 F004          	lfsr	2,4
 25013   000EFE  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25014   000F00  26D9               	addwf	fsr2l,f,c
 25015   000F02  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25016   000F04  22DA               	addwfc	fsr2h,f,c
 25017   000F06  50DF               	movf	indf2,w,c
 25018   000F08  A4D8               	btfss	status,2,c
 25019   000F0A  EF89  F007         	goto	u7681
 25020   000F0E  EF8B  F007         	goto	u7680
 25021   000F12                     u7681:
 25022   000F12  EF96  F007         	goto	l10218
 25023   000F16                     u7680:
 25024   000F16                     
 25025                           ;../../VLCBlib_PIC/mns.c: 493:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 25026   000F16  0E00               	movlw	0
 25027   000F18  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25028   000F1A  0EDE               	movlw	low _mnsTRallDiagnosticsCallback
 25029   000F1C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25030   000F1E  0E4C               	movlw	high _mnsTRallDiagnosticsCallback
 25031   000F20  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25032   000F22  0E04               	movlw	4
 25033   000F24  EC15  F039         	call	_startTimedResponse
 25034                           
 25035                           ;../../VLCBlib_PIC/mns.c: 494:             } else {
 25036   000F28  EF60  F005         	goto	l10068
 25037   000F2C                     l10218:
 25038                           
 25039                           ;../../VLCBlib_PIC/mns.c: 496:                 if (m->bytes[2] > 6) {
 25040   000F2C  EE20 F004          	lfsr	2,4
 25041   000F30  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25042   000F32  26D9               	addwf	fsr2l,f,c
 25043   000F34  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25044   000F36  22DA               	addwfc	fsr2h,f,c
 25045   000F38  0E06               	movlw	6
 25046   000F3A  64DF               	cpfsgt	indf2,c
 25047   000F3C  EFA2  F007         	goto	u7691
 25048   000F40  EFA4  F007         	goto	u7690
 25049   000F44                     u7691:
 25050   000F44  EFB3  F007         	goto	l10226
 25051   000F48                     u7690:
 25052   000F48                     
 25053                           ;../../VLCBlib_PIC/mns.c: 497:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 25054   000F48  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25055   000F4C  C58D  F527         	movff	_nn,sendMessage5@data2
 25056   000F50  0E87               	movlw	135
 25057   000F52  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25058   000F54  0E01               	movlw	1
 25059   000F56  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25060   000F58  0EFC               	movlw	252
 25061   000F5A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25062   000F5C  0EAF               	movlw	175
 25063   000F5E  EC28  F03D         	call	_sendMessage5
 25064   000F62  EF60  F005         	goto	l10068
 25065   000F66                     l10226:
 25066                           
 25067                           ;../../VLCBlib_PIC/mns.c: 500:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 25068   000F66  EE20 F004          	lfsr	2,4
 25069   000F6A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25070   000F6C  26D9               	addwf	fsr2l,f,c
 25071   000F6E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25072   000F70  22DA               	addwfc	fsr2h,f,c
 25073   000F72  50DF               	movf	indf2,w,c
 25074   000F74  0105               	movlb	5	; () banked
 25075   000F76  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 25076   000F78  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25077   000F7A  90D8               	bcf	status,0,c
 25078   000F7C  37CE               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25079   000F7E  37CF               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25080   000F80  0EFE               	movlw	254
 25081   000F82  25CE               	addwf	??_mnsProcessMessage& (0+255),w,b
 25082   000F84  6FD0               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25083   000F86  0EFF               	movlw	255
 25084   000F88  21CF               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25085   000F8A  6FD1               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25086   000F8C  0E89               	movlw	low _services
 25087   000F8E  25D0               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25088   000F90  6EF6               	movwf	tblptrl,c
 25089   000F92  0EFF               	movlw	high _services
 25090   000F94  21D1               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25091   000F96  6EF7               	movwf	tblptrh,c
 25092   000F98                     	if	1	;There are 3 active tblptr bytes
 25093   000F98  6AF8               	clrf	tblptru,c
 25094   000F9A  0E00               	movlw	low (__mediumconst shr (0+16))
 25095   000F9C  22F8               	addwfc	tblptru,f,c
 25096   000F9E                     	endif
 25097   000F9E  0009               	tblrd		*+
 25098   000FA0  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+4
 25099   000FA4  0009               	tblrd		*+
 25100   000FA6  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+5
 25101   000FAA  0E0C               	movlw	12
 25102   000FAC  27D2               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25103   000FAE  0E00               	movlw	0
 25104   000FB0  23D3               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25105   000FB2  C5D2  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25106   000FB6  C5D3  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25107   000FBA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25108   000FBA  6AF8               	clrf	tblptru,c
 25109   000FBC                     	endif
 25110   000FBC                     	if	0	;tblptru may be non-zero
 25111   000FBC                     	endif
 25112   000FBC  0009               	tblrd		*+
 25113   000FBE  50F5               	movf	tablat,w,c
 25114   000FC0  0009               	tblrd		*+
 25115   000FC2  10F5               	iorwf	tablat,w,c
 25116   000FC4  A4D8               	btfss	status,2,c
 25117   000FC6  EFE7  F007         	goto	u7701
 25118   000FCA  EFE9  F007         	goto	u7700
 25119   000FCE                     u7701:
 25120   000FCE  EFFC  F007         	goto	l10230
 25121   000FD2                     u7700:
 25122   000FD2                     
 25123                           ; BSR set to: 5
 25124                           ;../../VLCBlib_PIC/mns.c: 502:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 25125   000FD2  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25126   000FD6  C58D  F527         	movff	_nn,sendMessage5@data2
 25127   000FDA  0E87               	movlw	135
 25128   000FDC  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25129   000FDE  EE20 F004          	lfsr	2,4
 25130   000FE2  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25131   000FE4  26D9               	addwf	fsr2l,f,c
 25132   000FE6  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25133   000FE8  22DA               	addwfc	fsr2h,f,c
 25134   000FEA  50DF               	movf	indf2,w,c
 25135   000FEC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25136   000FEE  0E00               	movlw	0
 25137   000FF0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25138   000FF2  0EC7               	movlw	199
 25139   000FF4  EC28  F03D         	call	_sendMessage5
 25140   000FF8                     l10230:
 25141                           
 25142                           ;../../VLCBlib_PIC/mns.c: 504:                 if (m->bytes[3] == 0) {
 25143   000FF8  EE20 F005          	lfsr	2,5
 25144   000FFC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25145   000FFE  26D9               	addwf	fsr2l,f,c
 25146   001000  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25147   001002  22DA               	addwfc	fsr2h,f,c
 25148   001004  50DF               	movf	indf2,w,c
 25149   001006  A4D8               	btfss	status,2,c
 25150   001008  EF08  F008         	goto	u7711
 25151   00100C  EF0A  F008         	goto	u7710
 25152   001010                     u7711:
 25153   001010  EF1B  F008         	goto	l10240
 25154   001014                     u7710:
 25155   001014                     
 25156                           ;../../VLCBlib_PIC/mns.c: 506:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 25157   001014  EE20 F004          	lfsr	2,4
 25158   001018  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25159   00101A  26D9               	addwf	fsr2l,f,c
 25160   00101C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25161   00101E  22DA               	addwfc	fsr2h,f,c
 25162   001020  50DF               	movf	indf2,w,c
 25163   001022  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25164   001024  0EDE               	movlw	low _mnsTRallDiagnosticsCallback
 25165   001026  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25166   001028  0E4C               	movlw	high _mnsTRallDiagnosticsCallback
 25167   00102A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25168   00102C  0E04               	movlw	4
 25169   00102E  EC15  F039         	call	_startTimedResponse
 25170   001032  EF60  F005         	goto	l10068
 25171   001036                     l10240:
 25172                           
 25173                           ;../../VLCBlib_PIC/mns.c: 509:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 25174   001036  EE20 F004          	lfsr	2,4
 25175   00103A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25176   00103C  26D9               	addwf	fsr2l,f,c
 25177   00103E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25178   001040  22DA               	addwfc	fsr2h,f,c
 25179   001042  50DF               	movf	indf2,w,c
 25180   001044  0105               	movlb	5	; () banked
 25181   001046  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 25182   001048  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25183   00104A  90D8               	bcf	status,0,c
 25184   00104C  37CE               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25185   00104E  37CF               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25186   001050  0EFE               	movlw	254
 25187   001052  25CE               	addwf	??_mnsProcessMessage& (0+255),w,b
 25188   001054  6FD0               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25189   001056  0EFF               	movlw	255
 25190   001058  21CF               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25191   00105A  6FD1               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25192   00105C  0E89               	movlw	low _services
 25193   00105E  25D0               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25194   001060  6EF6               	movwf	tblptrl,c
 25195   001062  0EFF               	movlw	high _services
 25196   001064  21D1               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25197   001066  6EF7               	movwf	tblptrh,c
 25198   001068                     	if	1	;There are 3 active tblptr bytes
 25199   001068  6AF8               	clrf	tblptru,c
 25200   00106A  0E00               	movlw	low (__mediumconst shr (0+16))
 25201   00106C  22F8               	addwfc	tblptru,f,c
 25202   00106E                     	endif
 25203   00106E  0009               	tblrd		*+
 25204   001070  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+4
 25205   001074  0009               	tblrd		*+
 25206   001076  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+5
 25207   00107A  0E0C               	movlw	12
 25208   00107C  27D2               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25209   00107E  0E00               	movlw	0
 25210   001080  23D3               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25211   001082  C5D2  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25212   001086  C5D3  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25213   00108A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25214   00108A  6AF8               	clrf	tblptru,c
 25215   00108C                     	endif
 25216   00108C                     	if	0	;tblptru may be non-zero
 25217   00108C                     	endif
 25218   00108C  0009               	tblrd		*+
 25219   00108E  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+6
 25220   001092  0009               	tblrd		*+
 25221   001094  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+7
 25222   001098  D802               	call	u7728
 25223   00109A  EF5F  F008         	goto	u7729
 25224   00109E                     u7728:
 25225   00109E  0005               	push	
 25226   0010A0  6EFA               	movwf	pclath,c
 25227   0010A2  51D4               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 25228   0010A4  6EFD               	movwf	tosl,c
 25229   0010A6  51D5               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 25230   0010A8  6EFE               	movwf	tosh,c
 25231   0010AA  6AFF               	clrf	tosu,c
 25232   0010AC  50FA               	movf	pclath,w,c
 25233   0010AE  EE20 F005          	lfsr	2,5
 25234   0010B2  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25235   0010B4  26D9               	addwf	fsr2l,f,c
 25236   0010B6  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25237   0010B8  22DA               	addwfc	fsr2h,f,c
 25238   0010BA  50DF               	movf	indf2,w,c
 25239   0010BC  0012               	return		;indir
 25240   0010BE                     u7729:
 25241   0010BE  C507  F558         	movff	?_nvGetDiagnostic,mnsProcessMessage@d
 25242   0010C2  C508  F559         	movff	?_nvGetDiagnostic+1,mnsProcessMessage@d+1
 25243   0010C6                     
 25244                           ;../../VLCBlib_PIC/mns.c: 510:                     if (d == ((void*)0)) {
 25245   0010C6  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25246   0010C8  1059               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25247   0010CA  A4D8               	btfss	status,2,c
 25248   0010CC  EF6A  F008         	goto	u7731
 25249   0010D0  EF6C  F008         	goto	u7730
 25250   0010D4                     u7731:
 25251   0010D4  EF7B  F008         	goto	l10246
 25252   0010D8                     u7730:
 25253   0010D8                     
 25254                           ;../../VLCBlib_PIC/mns.c: 512:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 25255   0010D8  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25256   0010DC  C58D  F527         	movff	_nn,sendMessage5@data2
 25257   0010E0  0E87               	movlw	135
 25258   0010E2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25259   0010E4  0E01               	movlw	1
 25260   0010E6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25261   0010E8  0EFD               	movlw	253
 25262   0010EA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25263   0010EC  0EAF               	movlw	175
 25264   0010EE  EC28  F03D         	call	_sendMessage5
 25265                           
 25266                           ;../../VLCBlib_PIC/mns.c: 513:                     } else {
 25267   0010F2  EF60  F005         	goto	l10068
 25268   0010F6                     l10246:
 25269                           
 25270                           ;../../VLCBlib_PIC/mns.c: 515:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 25271   0010F6  C58E  F526         	movff	_nn+1,sendMessage6@data1
 25272   0010FA  C58D  F527         	movff	_nn,sendMessage6@data2
 25273   0010FE  EE20 F004          	lfsr	2,4
 25274   001102  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25275   001104  26D9               	addwf	fsr2l,f,c
 25276   001106  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25277   001108  22DA               	addwfc	fsr2h,f,c
 25278   00110A  50DF               	movf	indf2,w,c
 25279   00110C  6E28               	movwf	sendMessage6@data3^(0+1280),c
 25280   00110E  EE20 F005          	lfsr	2,5
 25281   001112  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25282   001114  26D9               	addwf	fsr2l,f,c
 25283   001116  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25284   001118  22DA               	addwfc	fsr2h,f,c
 25285   00111A  50DF               	movf	indf2,w,c
 25286   00111C  6E29               	movwf	sendMessage6@data4^(0+1280),c
 25287   00111E  EE20 F001          	lfsr	2,1
 25288   001122  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25289   001124  26D9               	addwf	fsr2l,f,c
 25290   001126  5059               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25291   001128  22DA               	addwfc	fsr2h,f,c
 25292   00112A  50DF               	movf	indf2,w,c
 25293   00112C  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 25294   00112E  C558  F4D9         	movff	mnsProcessMessage@d,fsr2l
 25295   001132  C559  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 25296   001136  50DF               	movf	indf2,w,c
 25297   001138  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 25298   00113A  0EC7               	movlw	199
 25299   00113C  ECBF  F03C         	call	_sendMessage6
 25300   001140  EF60  F005         	goto	l10068
 25301   001144                     l10252:
 25302                           
 25303                           ; BSR set to: 5
 25304                           ;../../VLCBlib_PIC/mns.c: 523:             if (m->len < 4) {
 25305   001144  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25306   001148  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25307   00114C  0E04               	movlw	4
 25308   00114E  60DF               	cpfslt	indf2,c
 25309   001150  EFAC  F008         	goto	u7741
 25310   001154  EFAE  F008         	goto	u7740
 25311   001158                     u7741:
 25312   001158  EFBD  F008         	goto	l10260
 25313   00115C                     u7740:
 25314   00115C                     
 25315                           ; BSR set to: 5
 25316                           ;../../VLCBlib_PIC/mns.c: 524:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25317   00115C  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25318   001160  C58D  F527         	movff	_nn,sendMessage5@data2
 25319   001164  0E78               	movlw	120
 25320   001166  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25321   001168  0E01               	movlw	1
 25322   00116A  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25323   00116C  0E01               	movlw	1
 25324   00116E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25325   001170  0EAF               	movlw	175
 25326   001172  EC28  F03D         	call	_sendMessage5
 25327   001176  EF60  F005         	goto	l10068
 25328   00117A                     l10260:
 25329                           
 25330                           ; BSR set to: 5
 25331                           ;../../VLCBlib_PIC/mns.c: 527:             if (m->bytes[2] == 0) {
 25332   00117A  EE20 F004          	lfsr	2,4
 25333   00117E  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25334   001180  26D9               	addwf	fsr2l,f,c
 25335   001182  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25336   001184  22DA               	addwfc	fsr2h,f,c
 25337   001186  50DF               	movf	indf2,w,c
 25338   001188  A4D8               	btfss	status,2,c
 25339   00118A  EFC9  F008         	goto	u7751
 25340   00118E  EFCB  F008         	goto	u7750
 25341   001192                     u7751:
 25342   001192  EFE3  F008         	goto	l10266
 25343   001196                     u7750:
 25344   001196                     
 25345                           ; BSR set to: 5
 25346                           ;../../VLCBlib_PIC/mns.c: 529:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 6);
 25347   001196  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25348   00119A  C58D  F527         	movff	_nn,sendMessage5@data2
 25349   00119E  0E00               	movlw	0
 25350   0011A0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25351   0011A2  0E00               	movlw	0
 25352   0011A4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25353   0011A6  0E06               	movlw	6
 25354   0011A8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25355   0011AA  0EAC               	movlw	172
 25356   0011AC  EC28  F03D         	call	_sendMessage5
 25357   0011B0                     
 25358                           ;../../VLCBlib_PIC/mns.c: 531:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 25359   0011B0  0E01               	movlw	1
 25360   0011B2  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25361   0011B4  0EDA               	movlw	low _mnsTRserviceDiscoveryCallback
 25362   0011B6  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25363   0011B8  0E63               	movlw	high _mnsTRserviceDiscoveryCallback
 25364   0011BA  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25365   0011BC  0E03               	movlw	3
 25366   0011BE  EC15  F039         	call	_startTimedResponse
 25367                           
 25368                           ;../../VLCBlib_PIC/mns.c: 532:             } else if (m->bytes[2] > 6) {
 25369   0011C2  EF60  F005         	goto	l10068
 25370   0011C6                     l10266:
 25371                           
 25372                           ; BSR set to: 5
 25373   0011C6  EE20 F004          	lfsr	2,4
 25374   0011CA  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25375   0011CC  26D9               	addwf	fsr2l,f,c
 25376   0011CE  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25377   0011D0  22DA               	addwfc	fsr2h,f,c
 25378   0011D2  0E06               	movlw	6
 25379   0011D4  64DF               	cpfsgt	indf2,c
 25380   0011D6  EFEF  F008         	goto	u7761
 25381   0011DA  EFF1  F008         	goto	u7760
 25382   0011DE                     u7761:
 25383   0011DE  EF00  F009         	goto	l10276
 25384   0011E2                     u7760:
 25385   0011E2                     
 25386                           ; BSR set to: 5
 25387                           ;../../VLCBlib_PIC/mns.c: 533:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 25388   0011E2  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25389   0011E6  C58D  F527         	movff	_nn,sendMessage5@data2
 25390   0011EA  0E78               	movlw	120
 25391   0011EC  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25392   0011EE  0E01               	movlw	1
 25393   0011F0  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25394   0011F2  0EFC               	movlw	252
 25395   0011F4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25396   0011F6  0EAF               	movlw	175
 25397   0011F8  EC28  F03D         	call	_sendMessage5
 25398   0011FC  EF60  F005         	goto	l10068
 25399   001200                     l10276:
 25400                           
 25401                           ; BSR set to: 5
 25402                           ;../../VLCBlib_PIC/mns.c: 537:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 25403   001200  EE20 F004          	lfsr	2,4
 25404   001204  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25405   001206  26D9               	addwf	fsr2l,f,c
 25406   001208  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25407   00120A  22DA               	addwfc	fsr2h,f,c
 25408   00120C  50DF               	movf	indf2,w,c
 25409   00120E  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 25410   001210  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25411   001212  90D8               	bcf	status,0,c
 25412   001214  37CE               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25413   001216  37CF               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25414   001218  0EFE               	movlw	254
 25415   00121A  25CE               	addwf	??_mnsProcessMessage& (0+255),w,b
 25416   00121C  6FD0               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25417   00121E  0EFF               	movlw	255
 25418   001220  21CF               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25419   001222  6FD1               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25420   001224  0E89               	movlw	low _services
 25421   001226  25D0               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25422   001228  6EF6               	movwf	tblptrl,c
 25423   00122A  0EFF               	movlw	high _services
 25424   00122C  21D1               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25425   00122E  6EF7               	movwf	tblptrh,c
 25426   001230                     	if	1	;There are 3 active tblptr bytes
 25427   001230  6AF8               	clrf	tblptru,c
 25428   001232  0E00               	movlw	low (__mediumconst shr (0+16))
 25429   001234  22F8               	addwfc	tblptru,f,c
 25430   001236                     	endif
 25431   001236  0009               	tblrd		*+
 25432   001238  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+4
 25433   00123C  0009               	tblrd		*+
 25434   00123E  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+5
 25435   001242  0E0A               	movlw	10
 25436   001244  27D2               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25437   001246  0E00               	movlw	0
 25438   001248  23D3               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25439   00124A  C5D2  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25440   00124E  C5D3  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25441   001252                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25442   001252  6AF8               	clrf	tblptru,c
 25443   001254                     	endif
 25444   001254                     	if	0	;tblptru may be non-zero
 25445   001254                     	endif
 25446   001254  0009               	tblrd		*+
 25447   001256  50F5               	movf	tablat,w,c
 25448   001258  0009               	tblrd		*+
 25449   00125A  10F5               	iorwf	tablat,w,c
 25450   00125C  A4D8               	btfss	status,2,c
 25451   00125E  EF33  F009         	goto	u7771
 25452   001262  EF35  F009         	goto	u7770
 25453   001266                     u7771:
 25454   001266  EF75  F009         	goto	l10280
 25455   00126A                     u7770:
 25456   00126A                     
 25457                           ; BSR set to: 5
 25458                           ;../../VLCBlib_PIC/mns.c: 538:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 25459   00126A  C58E  F526         	movff	_nn+1,sendMessage7@data1
 25460   00126E  C58D  F527         	movff	_nn,sendMessage7@data2
 25461   001272  EE20 F004          	lfsr	2,4
 25462   001276  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25463   001278  26D9               	addwf	fsr2l,f,c
 25464   00127A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25465   00127C  22DA               	addwfc	fsr2h,f,c
 25466   00127E  50DF               	movf	indf2,w,c
 25467   001280  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25468   001282  EE20 F004          	lfsr	2,4
 25469   001286  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25470   001288  26D9               	addwf	fsr2l,f,c
 25471   00128A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25472   00128C  22DA               	addwfc	fsr2h,f,c
 25473   00128E  50DF               	movf	indf2,w,c
 25474   001290  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 25475   001292  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25476   001294  90D8               	bcf	status,0,c
 25477   001296  37CE               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25478   001298  37CF               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25479   00129A  0EFE               	movlw	254
 25480   00129C  25CE               	addwf	??_mnsProcessMessage& (0+255),w,b
 25481   00129E  6FD0               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25482   0012A0  0EFF               	movlw	255
 25483   0012A2  21CF               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25484   0012A4  6FD1               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25485   0012A6  0E89               	movlw	low _services
 25486   0012A8  25D0               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25487   0012AA  6EF6               	movwf	tblptrl,c
 25488   0012AC  0EFF               	movlw	high _services
 25489   0012AE  21D1               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25490   0012B0  6EF7               	movwf	tblptrh,c
 25491   0012B2                     	if	1	;There are 3 active tblptr bytes
 25492   0012B2  6AF8               	clrf	tblptru,c
 25493   0012B4  0E00               	movlw	low (__mediumconst shr (0+16))
 25494   0012B6  22F8               	addwfc	tblptru,f,c
 25495   0012B8                     	endif
 25496   0012B8  0009               	tblrd		*+
 25497   0012BA  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+4
 25498   0012BE  0009               	tblrd		*+
 25499   0012C0  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+5
 25500   0012C4  C5D2  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25501   0012C8  C5D3  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25502   0012CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25503   0012CC  6AF8               	clrf	tblptru,c
 25504   0012CE                     	endif
 25505   0012CE                     	if	0	;tblptru may be non-zero
 25506   0012CE                     	endif
 25507   0012CE  0008               	tblrd		*
 25508   0012D0  C4F5 F529          	movff	tablat,sendMessage7@data4
 25509   0012D4  0E00               	movlw	0
 25510   0012D6  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25511   0012D8  0E00               	movlw	0
 25512   0012DA  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25513   0012DC  0E00               	movlw	0
 25514   0012DE  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25515   0012E0  0EE7               	movlw	231
 25516   0012E2  EC13  F03D         	call	_sendMessage7
 25517                           
 25518                           ;../../VLCBlib_PIC/mns.c: 539:                 } else {
 25519   0012E6  EF60  F005         	goto	l10068
 25520   0012EA                     l10280:
 25521                           
 25522                           ; BSR set to: 5
 25523                           ;../../VLCBlib_PIC/mns.c: 540:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 25524   0012EA  C58E  F526         	movff	_nn+1,sendMessage7@data1
 25525   0012EE  C58D  F527         	movff	_nn,sendMessage7@data2
 25526   0012F2  EE20 F004          	lfsr	2,4
 25527   0012F6  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25528   0012F8  26D9               	addwf	fsr2l,f,c
 25529   0012FA  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25530   0012FC  22DA               	addwfc	fsr2h,f,c
 25531   0012FE  50DF               	movf	indf2,w,c
 25532   001300  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25533   001302  EE20 F004          	lfsr	2,4
 25534   001306  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25535   001308  26D9               	addwf	fsr2l,f,c
 25536   00130A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25537   00130C  22DA               	addwfc	fsr2h,f,c
 25538   00130E  50DF               	movf	indf2,w,c
 25539   001310  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 25540   001312  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25541   001314  90D8               	bcf	status,0,c
 25542   001316  37CE               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25543   001318  37CF               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25544   00131A  0EFE               	movlw	254
 25545   00131C  25CE               	addwf	??_mnsProcessMessage& (0+255),w,b
 25546   00131E  6FD0               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25547   001320  0EFF               	movlw	255
 25548   001322  21CF               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25549   001324  6FD1               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25550   001326  0E89               	movlw	low _services
 25551   001328  25D0               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25552   00132A  6EF6               	movwf	tblptrl,c
 25553   00132C  0EFF               	movlw	high _services
 25554   00132E  21D1               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25555   001330  6EF7               	movwf	tblptrh,c
 25556   001332                     	if	1	;There are 3 active tblptr bytes
 25557   001332  6AF8               	clrf	tblptru,c
 25558   001334  0E00               	movlw	low (__mediumconst shr (0+16))
 25559   001336  22F8               	addwfc	tblptru,f,c
 25560   001338                     	endif
 25561   001338  0009               	tblrd		*+
 25562   00133A  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+4
 25563   00133E  0009               	tblrd		*+
 25564   001340  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+5
 25565   001344  C5D2  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25566   001348  C5D3  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25567   00134C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25568   00134C  6AF8               	clrf	tblptru,c
 25569   00134E                     	endif
 25570   00134E                     	if	0	;tblptru may be non-zero
 25571   00134E                     	endif
 25572   00134E  0008               	tblrd		*
 25573   001350  C4F5 F529          	movff	tablat,sendMessage7@data4
 25574   001354  EE20 F004          	lfsr	2,4
 25575   001358  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25576   00135A  26D9               	addwf	fsr2l,f,c
 25577   00135C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25578   00135E  22DA               	addwfc	fsr2h,f,c
 25579   001360  50DF               	movf	indf2,w,c
 25580   001362  6FD4               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 25581   001364  6BD5               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 25582   001366  90D8               	bcf	status,0,c
 25583   001368  37D4               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 25584   00136A  37D5               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 25585   00136C  0EFE               	movlw	254
 25586   00136E  25D4               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 25587   001370  6FD6               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 25588   001372  0EFF               	movlw	255
 25589   001374  21D5               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 25590   001376  6FD7               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 25591   001378  0E89               	movlw	low _services
 25592   00137A  25D6               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 25593   00137C  6EF6               	movwf	tblptrl,c
 25594   00137E  0EFF               	movlw	high _services
 25595   001380  21D7               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 25596   001382  6EF7               	movwf	tblptrh,c
 25597   001384                     	if	1	;There are 3 active tblptr bytes
 25598   001384  6AF8               	clrf	tblptru,c
 25599   001386  0E00               	movlw	low (__mediumconst shr (0+16))
 25600   001388  22F8               	addwfc	tblptru,f,c
 25601   00138A                     	endif
 25602   00138A  0009               	tblrd		*+
 25603   00138C  C4F5 F5D8          	movff	tablat,??_mnsProcessMessage+10
 25604   001390  0009               	tblrd		*+
 25605   001392  C4F5 F5D9          	movff	tablat,??_mnsProcessMessage+11
 25606   001396  0E0A               	movlw	10
 25607   001398  27D8               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 25608   00139A  0E00               	movlw	0
 25609   00139C  23D9               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 25610   00139E  C5D8  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 25611   0013A2  C5D9  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 25612   0013A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25613   0013A6  6AF8               	clrf	tblptru,c
 25614   0013A8                     	endif
 25615   0013A8                     	if	0	;tblptru may be non-zero
 25616   0013A8                     	endif
 25617   0013A8  0009               	tblrd		*+
 25618   0013AA  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+12
 25619   0013AE  0009               	tblrd		*+
 25620   0013B0  C4F5 F5DB          	movff	tablat,??_mnsProcessMessage+13
 25621   0013B4  D802               	call	u7788
 25622   0013B6  EFE7  F009         	goto	u7789
 25623   0013BA                     u7788:
 25624   0013BA  0005               	push	
 25625   0013BC  6EFA               	movwf	pclath,c
 25626   0013BE  51DA               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 25627   0013C0  6EFD               	movwf	tosl,c
 25628   0013C2  51DB               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 25629   0013C4  6EFE               	movwf	tosh,c
 25630   0013C6  6AFF               	clrf	tosu,c
 25631   0013C8  50FA               	movf	pclath,w,c
 25632   0013CA  0E01               	movlw	1
 25633   0013CC  0012               	return		;indir
 25634   0013CE                     u7789:
 25635   0013CE  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25636   0013D0  EE20 F004          	lfsr	2,4
 25637   0013D4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25638   0013D6  26D9               	addwf	fsr2l,f,c
 25639   0013D8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25640   0013DA  22DA               	addwfc	fsr2h,f,c
 25641   0013DC  50DF               	movf	indf2,w,c
 25642   0013DE  0105               	movlb	5	; () banked
 25643   0013E0  6FDC               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 25644   0013E2  6BDD               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 25645   0013E4  90D8               	bcf	status,0,c
 25646   0013E6  37DC               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 25647   0013E8  37DD               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 25648   0013EA  0EFE               	movlw	254
 25649   0013EC  25DC               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 25650   0013EE  6FDE               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 25651   0013F0  0EFF               	movlw	255
 25652   0013F2  21DD               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 25653   0013F4  6FDF               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 25654   0013F6  0E89               	movlw	low _services
 25655   0013F8  25DE               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 25656   0013FA  6EF6               	movwf	tblptrl,c
 25657   0013FC  0EFF               	movlw	high _services
 25658   0013FE  21DF               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 25659   001400  6EF7               	movwf	tblptrh,c
 25660   001402                     	if	1	;There are 3 active tblptr bytes
 25661   001402  6AF8               	clrf	tblptru,c
 25662   001404  0E00               	movlw	low (__mediumconst shr (0+16))
 25663   001406  22F8               	addwfc	tblptru,f,c
 25664   001408                     	endif
 25665   001408  0009               	tblrd		*+
 25666   00140A  C4F5 F5E0          	movff	tablat,??_mnsProcessMessage+18
 25667   00140E  0009               	tblrd		*+
 25668   001410  C4F5 F5E1          	movff	tablat,??_mnsProcessMessage+19
 25669   001414  0E0A               	movlw	10
 25670   001416  27E0               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 25671   001418  0E00               	movlw	0
 25672   00141A  23E1               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 25673   00141C  C5E0  F4F6         	movff	??_mnsProcessMessage+18,tblptrl
 25674   001420  C5E1  F4F7         	movff	??_mnsProcessMessage+19,tblptrh
 25675   001424                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25676   001424  6AF8               	clrf	tblptru,c
 25677   001426                     	endif
 25678   001426                     	if	0	;tblptru may be non-zero
 25679   001426                     	endif
 25680   001426  0009               	tblrd		*+
 25681   001428  C4F5 F5E2          	movff	tablat,??_mnsProcessMessage+20
 25682   00142C  0009               	tblrd		*+
 25683   00142E  C4F5 F5E3          	movff	tablat,??_mnsProcessMessage+21
 25684   001432  D802               	call	u7798
 25685   001434  EF26  F00A         	goto	u7799
 25686   001438                     u7798:
 25687   001438  0005               	push	
 25688   00143A  6EFA               	movwf	pclath,c
 25689   00143C  51E2               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 25690   00143E  6EFD               	movwf	tosl,c
 25691   001440  51E3               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 25692   001442  6EFE               	movwf	tosh,c
 25693   001444  6AFF               	clrf	tosu,c
 25694   001446  50FA               	movf	pclath,w,c
 25695   001448  0E02               	movlw	2
 25696   00144A  0012               	return		;indir
 25697   00144C                     u7799:
 25698   00144C  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25699   00144E  EE20 F004          	lfsr	2,4
 25700   001452  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25701   001454  26D9               	addwf	fsr2l,f,c
 25702   001456  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25703   001458  22DA               	addwfc	fsr2h,f,c
 25704   00145A  50DF               	movf	indf2,w,c
 25705   00145C  0105               	movlb	5	; () banked
 25706   00145E  6FE4               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 25707   001460  6BE5               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 25708   001462  90D8               	bcf	status,0,c
 25709   001464  37E4               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 25710   001466  37E5               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 25711   001468  0EFE               	movlw	254
 25712   00146A  25E4               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 25713   00146C  6FE6               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 25714   00146E  0EFF               	movlw	255
 25715   001470  21E5               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 25716   001472  6FE7               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 25717   001474  0E89               	movlw	low _services
 25718   001476  25E6               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 25719   001478  6EF6               	movwf	tblptrl,c
 25720   00147A  0EFF               	movlw	high _services
 25721   00147C  21E7               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 25722   00147E  6EF7               	movwf	tblptrh,c
 25723   001480                     	if	1	;There are 3 active tblptr bytes
 25724   001480  6AF8               	clrf	tblptru,c
 25725   001482  0E00               	movlw	low (__mediumconst shr (0+16))
 25726   001484  22F8               	addwfc	tblptru,f,c
 25727   001486                     	endif
 25728   001486  0009               	tblrd		*+
 25729   001488  C4F5 F5E8          	movff	tablat,??_mnsProcessMessage+26
 25730   00148C  0009               	tblrd		*+
 25731   00148E  C4F5 F5E9          	movff	tablat,??_mnsProcessMessage+27
 25732   001492  0E0A               	movlw	10
 25733   001494  27E8               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 25734   001496  0E00               	movlw	0
 25735   001498  23E9               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 25736   00149A  C5E8  F4F6         	movff	??_mnsProcessMessage+26,tblptrl
 25737   00149E  C5E9  F4F7         	movff	??_mnsProcessMessage+27,tblptrh
 25738   0014A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25739   0014A2  6AF8               	clrf	tblptru,c
 25740   0014A4                     	endif
 25741   0014A4                     	if	0	;tblptru may be non-zero
 25742   0014A4                     	endif
 25743   0014A4  0009               	tblrd		*+
 25744   0014A6  C4F5 F5EA          	movff	tablat,??_mnsProcessMessage+28
 25745   0014AA  0009               	tblrd		*+
 25746   0014AC  C4F5 F5EB          	movff	tablat,??_mnsProcessMessage+29
 25747   0014B0  D802               	call	u7808
 25748   0014B2  EF65  F00A         	goto	u7809
 25749   0014B6                     u7808:
 25750   0014B6  0005               	push	
 25751   0014B8  6EFA               	movwf	pclath,c
 25752   0014BA  51EA               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 25753   0014BC  6EFD               	movwf	tosl,c
 25754   0014BE  51EB               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 25755   0014C0  6EFE               	movwf	tosh,c
 25756   0014C2  6AFF               	clrf	tosu,c
 25757   0014C4  50FA               	movf	pclath,w,c
 25758   0014C6  0E03               	movlw	3
 25759   0014C8  0012               	return		;indir
 25760   0014CA                     u7809:
 25761   0014CA  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25762   0014CC  0EE7               	movlw	231
 25763   0014CE  EC13  F03D         	call	_sendMessage7
 25764   0014D2  EF60  F005         	goto	l10068
 25765   0014D6                     l10286:
 25766                           
 25767                           ; BSR set to: 5
 25768                           ;../../VLCBlib_PIC/mns.c: 550:             if (m->len < 4) {
 25769   0014D6  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25770   0014DA  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25771   0014DE  0E04               	movlw	4
 25772   0014E0  60DF               	cpfslt	indf2,c
 25773   0014E2  EF75  F00A         	goto	u7811
 25774   0014E6  EF77  F00A         	goto	u7810
 25775   0014EA                     u7811:
 25776   0014EA  EF86  F00A         	goto	l10294
 25777   0014EE                     u7810:
 25778   0014EE                     
 25779                           ; BSR set to: 5
 25780                           ;../../VLCBlib_PIC/mns.c: 551:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25781   0014EE  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25782   0014F2  C58D  F527         	movff	_nn,sendMessage5@data2
 25783   0014F6  0E76               	movlw	118
 25784   0014F8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25785   0014FA  0E01               	movlw	1
 25786   0014FC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25787   0014FE  0E01               	movlw	1
 25788   001500  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25789   001502  0EAF               	movlw	175
 25790   001504  EC28  F03D         	call	_sendMessage5
 25791   001508  EF60  F005         	goto	l10068
 25792   00150C                     l10294:
 25793                           
 25794                           ; BSR set to: 5
 25795                           ;../../VLCBlib_PIC/mns.c: 554:             newMode = m->bytes[2];
 25796   00150C  EE20 F004          	lfsr	2,4
 25797   001510  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25798   001512  26D9               	addwf	fsr2l,f,c
 25799   001514  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25800   001516  22DA               	addwfc	fsr2h,f,c
 25801   001518  50DF               	movf	indf2,w,c
 25802   00151A  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 25803   00151C                     
 25804                           ; BSR set to: 5
 25805                           ;../../VLCBlib_PIC/mns.c: 555:             previousNN.word = nn.word;
 25806   00151C  C58D  F58B         	movff	_nn,_previousNN
 25807   001520  C58E  F58C         	movff	_nn+1,_previousNN+1
 25808                           
 25809                           ;../../VLCBlib_PIC/mns.c: 557:             switch (newMode) {
 25810   001524  EF29  F00B         	goto	l10360
 25811   001528                     l10298:
 25812                           
 25813                           ; BSR set to: 5
 25814                           ;../../VLCBlib_PIC/mns.c: 560:                     if (mode_state == MODE_NORMAL) {
 25815   001528  05A1               	decf	_mode_state& (0+255),w,b
 25816   00152A  A4D8               	btfss	status,2,c
 25817   00152C  EF9A  F00A         	goto	u7821
 25818   001530  EF9C  F00A         	goto	u7820
 25819   001534                     u7821:
 25820   001534  EFED  F005         	goto	l10094
 25821   001538                     u7820:
 25822   001538                     
 25823                           ; BSR set to: 5
 25824                           ;../../VLCBlib_PIC/mns.c: 561:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 25825   001538  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25826   00153A  B4D8               	btfsc	status,2,c
 25827   00153C  EFA2  F00A         	goto	u7831
 25828   001540  EFA4  F00A         	goto	u7830
 25829   001544                     u7831:
 25830   001544  EFA8  F00A         	goto	l10304
 25831   001548                     u7830:
 25832   001548                     
 25833                           ; BSR set to: 5
 25834   001548  0E51               	movlw	81
 25835   00154A  6E57               	movwf	_mnsProcessMessage$3754^(0+1280),c
 25836   00154C  EFAA  F00A         	goto	l10306
 25837   001550                     l10304:
 25838                           
 25839                           ; BSR set to: 5
 25840   001550  0E50               	movlw	80
 25841   001552  6E57               	movwf	_mnsProcessMessage$3754^(0+1280),c
 25842   001554                     l10306:
 25843                           
 25844                           ; BSR set to: 5
 25845   001554  C58E  F526         	movff	_nn+1,sendMessage2@data1
 25846   001558  C58D  F527         	movff	_nn,sendMessage2@data2
 25847   00155C  5057               	movf	_mnsProcessMessage$3754^(0+1280),w,c
 25848   00155E  ECFE  F03C         	call	_sendMessage2
 25849   001562                     
 25850                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25851   001562  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25852   001566  C58D  F527         	movff	_nn,sendMessage5@data2
 25853   00156A  0E76               	movlw	118
 25854   00156C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25855   00156E  0E01               	movlw	1
 25856   001570  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25857   001572  0E00               	movlw	0
 25858   001574  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25859   001576  0EAF               	movlw	175
 25860   001578  EC28  F03D         	call	_sendMessage5
 25861   00157C                     
 25862                           ;../../VLCBlib_PIC/mns.c: 563:                         nn.bytes.lo = nn.bytes.hi = 0;
 25863   00157C  0105               	movlb	5	; () banked
 25864   00157E  6B8E               	clrf	(_nn+1)& (0+255),b
 25865   001580  6B8D               	clrf	_nn& (0+255),b
 25866   001582                     
 25867                           ; BSR set to: 5
 25868                           ;../../VLCBlib_PIC/mns.c: 564:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 25869   001582  0EFD               	movlw	253
 25870   001584  6E0E               	movwf	writeNVM@index^(0+1280),c
 25871   001586  0E03               	movlw	3
 25872   001588  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25873   00158A  0E00               	movlw	0
 25874   00158C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25875   00158E  C58E  F511         	movff	_nn+1,writeNVM@value
 25876   001592  0E00               	movlw	0
 25877   001594  ECB5  F038         	call	_writeNVM
 25878   001598                     
 25879                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 25880   001598  0EFC               	movlw	252
 25881   00159A  6E0E               	movwf	writeNVM@index^(0+1280),c
 25882   00159C  0E03               	movlw	3
 25883   00159E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25884   0015A0  0E00               	movlw	0
 25885   0015A2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25886   0015A4  C58D  F511         	movff	_nn,writeNVM@value
 25887   0015A8  0E00               	movlw	0
 25888   0015AA  ECB5  F038         	call	_writeNVM
 25889                           
 25890                           ;../../VLCBlib_PIC/mns.c: 567:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 25891   0015AE  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25892   0015B0  B4D8               	btfsc	status,2,c
 25893   0015B2  EFDD  F00A         	goto	u7841
 25894   0015B6  EFDF  F00A         	goto	u7840
 25895   0015BA                     u7841:
 25896   0015BA  EFE3  F00A         	goto	l1152
 25897   0015BE                     u7840:
 25898   0015BE  0105               	movlb	5	; () banked
 25899   0015C0  69A1               	setf	_mode_state& (0+255),b
 25900   0015C2  EFE5  F00A         	goto	l10318
 25901   0015C6                     l1152:
 25902   0015C6  0105               	movlb	5	; () banked
 25903   0015C8  6BA1               	clrf	_mode_state& (0+255),b
 25904   0015CA                     l10318:
 25905                           
 25906                           ; BSR set to: 5
 25907                           ;../../VLCBlib_PIC/mns.c: 568:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 25908   0015CA  0E01               	movlw	1
 25909   0015CC  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 25910   0015CE  EF5E  F005         	goto	l10066
 25911   0015D2                     l10326:
 25912                           
 25913                           ; BSR set to: 5
 25914                           ;../../VLCBlib_PIC/mns.c: 575:                     mode_flags |= 4;
 25915   0015D2  85A4               	bsf	_mode_flags& (0+255),2,b
 25916   0015D4                     
 25917                           ; BSR set to: 5
 25918                           ;../../VLCBlib_PIC/mns.c: 576:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25919   0015D4  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25920   0015D8  C58D  F527         	movff	_nn,sendMessage5@data2
 25921   0015DC  0E76               	movlw	118
 25922   0015DE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25923   0015E0  0E01               	movlw	1
 25924   0015E2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25925   0015E4  0E00               	movlw	0
 25926   0015E6  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25927   0015E8  0EAF               	movlw	175
 25928   0015EA  EC28  F03D         	call	_sendMessage5
 25929   0015EE  EF60  F005         	goto	l10068
 25930   0015F2                     l10334:
 25931                           
 25932                           ; BSR set to: 5
 25933                           ;../../VLCBlib_PIC/mns.c: 579:                     mode_flags &= ~4;
 25934   0015F2  95A4               	bcf	_mode_flags& (0+255),2,b
 25935   0015F4                     
 25936                           ; BSR set to: 5
 25937                           ;../../VLCBlib_PIC/mns.c: 580:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25938   0015F4  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25939   0015F8  C58D  F527         	movff	_nn,sendMessage5@data2
 25940   0015FC  0E76               	movlw	118
 25941   0015FE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25942   001600  0E01               	movlw	1
 25943   001602  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25944   001604  0E00               	movlw	0
 25945   001606  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25946   001608  0EAF               	movlw	175
 25947   00160A  EC28  F03D         	call	_sendMessage5
 25948   00160E  EF60  F005         	goto	l10068
 25949   001612                     l10342:
 25950                           
 25951                           ; BSR set to: 5
 25952                           ;../../VLCBlib_PIC/mns.c: 583:                     mode_flags |= 8;
 25953   001612  87A4               	bsf	_mode_flags& (0+255),3,b
 25954   001614                     
 25955                           ; BSR set to: 5
 25956                           ;../../VLCBlib_PIC/mns.c: 584:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25957   001614  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25958   001618  C58D  F527         	movff	_nn,sendMessage5@data2
 25959   00161C  0E76               	movlw	118
 25960   00161E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25961   001620  0E01               	movlw	1
 25962   001622  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25963   001624  0E00               	movlw	0
 25964   001626  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25965   001628  0EAF               	movlw	175
 25966   00162A  EC28  F03D         	call	_sendMessage5
 25967   00162E  EF60  F005         	goto	l10068
 25968   001632                     l10350:
 25969                           
 25970                           ; BSR set to: 5
 25971                           ;../../VLCBlib_PIC/mns.c: 587:                     mode_flags &= ~8;
 25972   001632  97A4               	bcf	_mode_flags& (0+255),3,b
 25973   001634                     
 25974                           ; BSR set to: 5
 25975                           ;../../VLCBlib_PIC/mns.c: 588:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25976   001634  C58E  F526         	movff	_nn+1,sendMessage5@data1
 25977   001638  C58D  F527         	movff	_nn,sendMessage5@data2
 25978   00163C  0E76               	movlw	118
 25979   00163E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25980   001640  0E01               	movlw	1
 25981   001642  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25982   001644  0E00               	movlw	0
 25983   001646  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25984   001648  0EAF               	movlw	175
 25985   00164A  EC28  F03D         	call	_sendMessage5
 25986   00164E  EF60  F005         	goto	l10068
 25987   001652                     l10360:
 25988                           
 25989                           ; BSR set to: 5
 25990   001652  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25991                           
 25992                           ; Switch size 1, requested type "simple"
 25993                           ; Number of cases is 6, Range of values is 0 to 255
 25994                           ; switch strategies available:
 25995                           ; Name         Instructions Cycles
 25996                           ; simple_byte           19    10 (average)
 25997                           ;	Chosen strategy is simple_byte
 25998   001654  0A00               	xorlw	0	; case 0
 25999   001656  B4D8               	btfsc	status,2,c
 26000   001658  EF94  F00A         	goto	l10298
 26001   00165C  0A0C               	xorlw	12	; case 12
 26002   00165E  B4D8               	btfsc	status,2,c
 26003   001660  EFE9  F00A         	goto	l10326
 26004   001664  0A01               	xorlw	1	; case 13
 26005   001666  B4D8               	btfsc	status,2,c
 26006   001668  EFF9  F00A         	goto	l10334
 26007   00166C  0A1D               	xorlw	29	; case 16
 26008   00166E  B4D8               	btfsc	status,2,c
 26009   001670  EF09  F00B         	goto	l10342
 26010   001674  0A01               	xorlw	1	; case 17
 26011   001676  B4D8               	btfsc	status,2,c
 26012   001678  EF19  F00B         	goto	l10350
 26013   00167C  0AEE               	xorlw	238	; case 255
 26014   00167E  B4D8               	btfsc	status,2,c
 26015   001680  EF94  F00A         	goto	l10298
 26016   001684  EFED  F005         	goto	l10094
 26017   001688                     l1161:
 26018                           
 26019                           ; BSR set to: 5
 26020   001688  00FF               	reset		;# 
 26021   00168A  EF60  F005         	goto	l10068
 26022   00168E                     l10372:
 26023                           
 26024                           ; BSR set to: 5
 26025   00168E  EE20 F001          	lfsr	2,1
 26026   001692  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 26027   001694  26D9               	addwf	fsr2l,f,c
 26028   001696  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 26029   001698  22DA               	addwfc	fsr2h,f,c
 26030   00169A  50DF               	movf	indf2,w,c
 26031   00169C  6FCE               	movwf	??_mnsProcessMessage& (0+255),b
 26032   00169E  6BCF               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 26033                           
 26034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26035                           ; Switch size 1, requested type "simple"
 26036                           ; Number of cases is 1, Range of values is 0 to 0
 26037                           ; switch strategies available:
 26038                           ; Name         Instructions Cycles
 26039                           ; simple_byte            4     3 (average)
 26040                           ;	Chosen strategy is simple_byte
 26041   0016A0  51CF               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 26042   0016A2  0A00               	xorlw	0	; case 0
 26043   0016A4  B4D8               	btfsc	status,2,c
 26044   0016A6  EF57  F00B         	goto	l11510
 26045   0016AA  EFED  F005         	goto	l10094
 26046   0016AE                     l11510:
 26047                           
 26048                           ; BSR set to: 5
 26049                           ; Switch size 1, requested type "simple"
 26050                           ; Number of cases is 6, Range of values is 79 to 135
 26051                           ; switch strategies available:
 26052                           ; Name         Instructions Cycles
 26053                           ; simple_byte           19    10 (average)
 26054                           ;	Chosen strategy is simple_byte
 26055   0016AE  51CE               	movf	??_mnsProcessMessage& (0+255),w,b
 26056   0016B0  0A4F               	xorlw	79	; case 79
 26057   0016B2  B4D8               	btfsc	status,2,c
 26058   0016B4  EF2C  F007         	goto	l1121
 26059   0016B8  0A11               	xorlw	17	; case 94
 26060   0016BA  B4D8               	btfsc	status,2,c
 26061   0016BC  EF44  F00B         	goto	l1161
 26062   0016C0  0A2D               	xorlw	45	; case 115
 26063   0016C2  B4D8               	btfsc	status,2,c
 26064   0016C4  EFAD  F006         	goto	l10168
 26065   0016C8  0A05               	xorlw	5	; case 118
 26066   0016CA  B4D8               	btfsc	status,2,c
 26067   0016CC  EF6B  F00A         	goto	l10286
 26068   0016D0  0A0E               	xorlw	14	; case 120
 26069   0016D2  B4D8               	btfsc	status,2,c
 26070   0016D4  EFA2  F008         	goto	l10252
 26071   0016D8  0AFF               	xorlw	255	; case 135
 26072   0016DA  B4D8               	btfsc	status,2,c
 26073   0016DC  EF62  F007         	goto	l10206
 26074   0016E0  EFED  F005         	goto	l10094
 26075   0016E4                     l1093:
 26076   0016E4  0012               	return		;funcret
 26077   0016E6                     __end_of_mnsProcessMessage:
 26078                           	callstack 0
 26079                           
 26080 ;; *************** function _consumerProcessMessage *****************
 26081 ;; Defined at:
 26082 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 26083 ;; Parameters:    Size  Location     Type
 26084 ;;  m               2   83[COMRAM] PTR struct Message
 26085 ;;		 -> poll@m(9), 
 26086 ;; Auto vars:     Size  Location     Type
 26087 ;;  enn             2   88[COMRAM] unsigned short 
 26088 ;;  tableIndex      1   91[COMRAM] unsigned char 
 26089 ;;  ret             1   90[COMRAM] enum E23340
 26090 ;; Return value:  Size  Location     Type
 26091 ;;                  1    wreg      enum E23340
 26092 ;; Registers used:
 26093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26094 ;; Tracked objects:
 26095 ;;		On entry : 0/0
 26096 ;;		On exit  : 0/0
 26097 ;;		Unchanged: 0/0
 26098 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26100 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26101 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26102 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26103 ;;Total ram usage:        9 bytes
 26104 ;; Hardware stack levels used: 1
 26105 ;; Hardware stack levels required when called: 8
 26106 ;; This function calls:
 26107 ;;		_APP_processConsumedEvent
 26108 ;;		_consumerEventCheckLen
 26109 ;;		_findEvent
 26110 ;;		_isConsumedEvent
 26111 ;;		_sendMessage7
 26112 ;; This function is called by:
 26113 ;;		_poll
 26114 ;; This function uses a non-reentrant model
 26115 ;;
 26116                           
 26117                           	psect	text19
 26118   003584                     __ptext19:
 26119                           	callstack 0
 26120   003584                     _consumerProcessMessage:
 26121                           	callstack 117
 26122   003584                     
 26123                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 26124   003584  EE20 F001          	lfsr	2,1
 26125   003588  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26126   00358A  26D9               	addwf	fsr2l,f,c
 26127   00358C  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26128   00358E  22DA               	addwfc	fsr2h,f,c
 26129   003590  0E76               	movlw	118
 26130   003592  18DE               	xorwf	postinc2,w,c
 26131   003594  A4D8               	btfss	status,2,c
 26132   003596  EFCF  F01A         	goto	u6981
 26133   00359A  EFD1  F01A         	goto	u6980
 26134   00359E                     u6981:
 26135   00359E  EF2A  F01B         	goto	l9650
 26136   0035A2                     u6980:
 26137   0035A2                     
 26138                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 26139   0035A2  C554  F531         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 26140   0035A6  C555  F532         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 26141   0035AA  0E04               	movlw	4
 26142   0035AC  6E33               	movwf	consumerEventCheckLen@needed^(0+1280),c
 26143   0035AE  EC0B  F03E         	call	_consumerEventCheckLen	;wreg free
 26144   0035B2  06E8               	decf	wreg,f,c
 26145   0035B4  A4D8               	btfss	status,2,c
 26146   0035B6  EFDF  F01A         	goto	u6991
 26147   0035BA  EFE1  F01A         	goto	u6990
 26148   0035BE                     u6991:
 26149   0035BE  EFE4  F01A         	goto	l9624
 26150   0035C2                     u6990:
 26151   0035C2                     l9620:
 26152   0035C2  0E01               	movlw	1
 26153   0035C4  EF34  F01C         	goto	l579
 26154   0035C8                     l9624:
 26155                           
 26156                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 26157   0035C8  EE20 F002          	lfsr	2,2
 26158   0035CC  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26159   0035CE  26D9               	addwf	fsr2l,f,c
 26160   0035D0  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26161   0035D2  22DA               	addwfc	fsr2h,f,c
 26162   0035D4  50DE               	movf	postinc2,w,c
 26163   0035D6  0105               	movlb	5	; () banked
 26164   0035D8  198E               	xorwf	(_nn+1)& (0+255),w,b
 26165   0035DA  A4D8               	btfss	status,2,c
 26166   0035DC  EFF2  F01A         	goto	u7001
 26167   0035E0  EFF4  F01A         	goto	u7000
 26168   0035E4                     u7001:
 26169   0035E4  EF27  F01B         	goto	l9646
 26170   0035E8                     u7000:
 26171   0035E8                     
 26172                           ; BSR set to: 5
 26173   0035E8  EE20 F003          	lfsr	2,3
 26174   0035EC  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26175   0035EE  26D9               	addwf	fsr2l,f,c
 26176   0035F0  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26177   0035F2  22DA               	addwfc	fsr2h,f,c
 26178   0035F4  518D               	movf	_nn& (0+255),w,b
 26179   0035F6  18DE               	xorwf	postinc2,w,c
 26180   0035F8  A4D8               	btfss	status,2,c
 26181   0035FA  EF01  F01B         	goto	u7011
 26182   0035FE  EF03  F01B         	goto	u7010
 26183   003602                     u7011:
 26184   003602  EF27  F01B         	goto	l9646
 26185   003606                     u7010:
 26186   003606                     
 26187                           ; BSR set to: 5
 26188                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 26189   003606  EE20 F004          	lfsr	2,4
 26190   00360A  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26191   00360C  26D9               	addwf	fsr2l,f,c
 26192   00360E  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26193   003610  22DA               	addwfc	fsr2h,f,c
 26194   003612  0E0A               	movlw	10
 26195   003614  18DE               	xorwf	postinc2,w,c
 26196   003616  A4D8               	btfss	status,2,c
 26197   003618  EF10  F01B         	goto	u7021
 26198   00361C  EF12  F01B         	goto	u7020
 26199   003620                     u7021:
 26200   003620  EF15  F01B         	goto	l9638
 26201   003624                     u7020:
 26202   003624                     
 26203                           ; BSR set to: 5
 26204                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 26205   003624  83A4               	bsf	_mode_flags& (0+255),1,b
 26206   003626  EFE1  F01A         	goto	l9620
 26207   00362A                     l9638:
 26208                           
 26209                           ; BSR set to: 5
 26210   00362A  EE20 F004          	lfsr	2,4
 26211   00362E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26212   003630  26D9               	addwf	fsr2l,f,c
 26213   003632  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26214   003634  22DA               	addwfc	fsr2h,f,c
 26215   003636  0E0B               	movlw	11
 26216   003638  18DE               	xorwf	postinc2,w,c
 26217   00363A  A4D8               	btfss	status,2,c
 26218   00363C  EF22  F01B         	goto	u7031
 26219   003640  EF24  F01B         	goto	u7030
 26220   003644                     u7031:
 26221   003644  EF27  F01B         	goto	l9646
 26222   003648                     u7030:
 26223   003648                     
 26224                           ; BSR set to: 5
 26225                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 26226   003648  93A4               	bcf	_mode_flags& (0+255),1,b
 26227   00364A  EFE1  F01A         	goto	l9620
 26228   00364E                     l9646:
 26229                           
 26230                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 26231   00364E  0E00               	movlw	0
 26232   003650  EF34  F01C         	goto	l579
 26233   003654                     l9650:
 26234                           
 26235                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 26236   003654  C554  F4D9         	movff	consumerProcessMessage@m,fsr2l
 26237   003658  C555  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 26238   00365C  0E05               	movlw	5
 26239   00365E  60DF               	cpfslt	indf2,c
 26240   003660  EF34  F01B         	goto	u7041
 26241   003664  EF36  F01B         	goto	u7040
 26242   003668                     u7041:
 26243   003668  EF38  F01B         	goto	l9656
 26244   00366C                     u7040:
 26245   00366C  EF27  F01B         	goto	l9646
 26246   003670                     l9656:
 26247                           
 26248                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 26249   003670  EE20 F003          	lfsr	2,3
 26250   003674  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26251   003676  26D9               	addwf	fsr2l,f,c
 26252   003678  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26253   00367A  22DA               	addwfc	fsr2h,f,c
 26254   00367C  50DF               	movf	indf2,w,c
 26255   00367E  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26256   003680  EE20 F002          	lfsr	2,2
 26257   003684  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26258   003686  26D9               	addwf	fsr2l,f,c
 26259   003688  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26260   00368A  22DA               	addwfc	fsr2h,f,c
 26261   00368C  50DF               	movf	indf2,w,c
 26262   00368E  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26263   003690  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26264   003692  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26265   003694  C557  F55A         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 26266                           
 26267                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 26268   003698  EF56  F01B         	goto	l9668
 26269   00369C                     l588:
 26270   00369C                     l9658:
 26271                           
 26272                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 26273   00369C  0E00               	movlw	0
 26274   00369E  6E5A               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 26275   0036A0  0E00               	movlw	0
 26276   0036A2  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26277   0036A4  EFA9  F01B         	goto	l9670
 26278   0036A8                     l593:
 26279                           
 26280                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 26281   0036A8  EFA9  F01B         	goto	l9670
 26282   0036AC                     l9668:
 26283   0036AC  EE20 F001          	lfsr	2,1
 26284   0036B0  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26285   0036B2  26D9               	addwf	fsr2l,f,c
 26286   0036B4  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26287   0036B6  22DA               	addwfc	fsr2h,f,c
 26288   0036B8  50DF               	movf	indf2,w,c
 26289   0036BA  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26290   0036BC  6A57               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 26291                           
 26292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26293                           ; Switch size 1, requested type "simple"
 26294                           ; Number of cases is 1, Range of values is 0 to 0
 26295                           ; switch strategies available:
 26296                           ; Name         Instructions Cycles
 26297                           ; simple_byte            4     3 (average)
 26298                           ;	Chosen strategy is simple_byte
 26299   0036BE  5057               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 26300   0036C0  0A00               	xorlw	0	; case 0
 26301   0036C2  B4D8               	btfsc	status,2,c
 26302   0036C4  EF66  F01B         	goto	l11512
 26303   0036C8  EF27  F01B         	goto	l9646
 26304   0036CC                     l11512:
 26305                           
 26306                           ; Switch size 1, requested type "simple"
 26307                           ; Number of cases is 16, Range of values is 144 to 249
 26308                           ; switch strategies available:
 26309                           ; Name         Instructions Cycles
 26310                           ; simple_byte           49    25 (average)
 26311                           ;	Chosen strategy is simple_byte
 26312   0036CC  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26313   0036CE  0A90               	xorlw	144	; case 144
 26314   0036D0  B4D8               	btfsc	status,2,c
 26315   0036D2  EF54  F01B         	goto	l593
 26316   0036D6  0A01               	xorlw	1	; case 145
 26317   0036D8  B4D8               	btfsc	status,2,c
 26318   0036DA  EF54  F01B         	goto	l593
 26319   0036DE  0A09               	xorlw	9	; case 152
 26320   0036E0  B4D8               	btfsc	status,2,c
 26321   0036E2  EF4E  F01B         	goto	l588
 26322   0036E6  0A01               	xorlw	1	; case 153
 26323   0036E8  B4D8               	btfsc	status,2,c
 26324   0036EA  EF4E  F01B         	goto	l588
 26325   0036EE  0A29               	xorlw	41	; case 176
 26326   0036F0  B4D8               	btfsc	status,2,c
 26327   0036F2  EFA9  F01B         	goto	l9670
 26328   0036F6  0A01               	xorlw	1	; case 177
 26329   0036F8  B4D8               	btfsc	status,2,c
 26330   0036FA  EFA9  F01B         	goto	l9670
 26331   0036FE  0A09               	xorlw	9	; case 184
 26332   003700  B4D8               	btfsc	status,2,c
 26333   003702  EF4E  F01B         	goto	l9658
 26334   003706  0A01               	xorlw	1	; case 185
 26335   003708  B4D8               	btfsc	status,2,c
 26336   00370A  EF4E  F01B         	goto	l9658
 26337   00370E  0A69               	xorlw	105	; case 208
 26338   003710  B4D8               	btfsc	status,2,c
 26339   003712  EFA9  F01B         	goto	l9670
 26340   003716  0A01               	xorlw	1	; case 209
 26341   003718  B4D8               	btfsc	status,2,c
 26342   00371A  EFA9  F01B         	goto	l9670
 26343   00371E  0A09               	xorlw	9	; case 216
 26344   003720  B4D8               	btfsc	status,2,c
 26345   003722  EF4E  F01B         	goto	l9658
 26346   003726  0A01               	xorlw	1	; case 217
 26347   003728  B4D8               	btfsc	status,2,c
 26348   00372A  EF4E  F01B         	goto	l9658
 26349   00372E  0A29               	xorlw	41	; case 240
 26350   003730  B4D8               	btfsc	status,2,c
 26351   003732  EFA9  F01B         	goto	l9670
 26352   003736  0A01               	xorlw	1	; case 241
 26353   003738  B4D8               	btfsc	status,2,c
 26354   00373A  EFA9  F01B         	goto	l9670
 26355   00373E  0A09               	xorlw	9	; case 248
 26356   003740  B4D8               	btfsc	status,2,c
 26357   003742  EF4E  F01B         	goto	l9658
 26358   003746  0A01               	xorlw	1	; case 249
 26359   003748  B4D8               	btfsc	status,2,c
 26360   00374A  EF4E  F01B         	goto	l9658
 26361   00374E  EF27  F01B         	goto	l9646
 26362   003752                     l9670:
 26363                           
 26364                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 26365   003752  C559  F522         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 26366   003756  C55A  F523         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 26367   00375A  EE20 F005          	lfsr	2,5
 26368   00375E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26369   003760  26D9               	addwf	fsr2l,f,c
 26370   003762  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26371   003764  22DA               	addwfc	fsr2h,f,c
 26372   003766  50DF               	movf	indf2,w,c
 26373   003768  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26374   00376A  EE20 F004          	lfsr	2,4
 26375   00376E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26376   003770  26D9               	addwf	fsr2l,f,c
 26377   003772  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26378   003774  22DA               	addwfc	fsr2h,f,c
 26379   003776  50DF               	movf	indf2,w,c
 26380   003778  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26381   00377A  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26382   00377C  6E24               	movwf	findEvent@eventNumber^(0+1280),c
 26383   00377E  C557  F525         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 26384   003782  EC5E  F02E         	call	_findEvent	;wreg free
 26385   003786  6E5C               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 26386   003788                     
 26387                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 26388   003788  285C               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26389   00378A  A4D8               	btfss	status,2,c
 26390   00378C  EFCA  F01B         	goto	u7051
 26391   003790  EFCC  F01B         	goto	u7050
 26392   003794                     u7051:
 26393   003794  EFCE  F01B         	goto	l9678
 26394   003798                     u7050:
 26395   003798  EF27  F01B         	goto	l9646
 26396   00379C                     l9678:
 26397                           
 26398                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 26399   00379C  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26400   00379E  EC2F  F03E         	call	_isConsumedEvent
 26401   0037A2  0900               	iorlw	0
 26402   0037A4  A4D8               	btfss	status,2,c
 26403   0037A6  EFD7  F01B         	goto	u7061
 26404   0037AA  EFD9  F01B         	goto	u7060
 26405   0037AE                     u7061:
 26406   0037AE  EFDB  F01B         	goto	l605
 26407   0037B2                     u7060:
 26408   0037B2  EF27  F01B         	goto	l9646
 26409   0037B6                     l605:
 26410                           
 26411                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 26412   0037B6  0105               	movlb	5	; () banked
 26413   0037B8  A3A4               	btfss	_mode_flags& (0+255),1,b
 26414   0037BA  EFE1  F01B         	goto	u7071
 26415   0037BE  EFE3  F01B         	goto	u7070
 26416   0037C2                     u7071:
 26417   0037C2  EF20  F01C         	goto	l9690
 26418   0037C6                     u7070:
 26419   0037C6                     
 26420                           ; BSR set to: 5
 26421   0037C6  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26422   0037C8  EC2F  F03E         	call	_isConsumedEvent
 26423   0037CC  0900               	iorlw	0
 26424   0037CE  B4D8               	btfsc	status,2,c
 26425   0037D0  EFEC  F01B         	goto	u7081
 26426   0037D4  EFEE  F01B         	goto	u7080
 26427   0037D8                     u7081:
 26428   0037D8  EF20  F01C         	goto	l9690
 26429   0037DC                     u7080:
 26430   0037DC                     
 26431                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 26432   0037DC  C58E  F526         	movff	_nn+1,sendMessage7@data1
 26433   0037E0  C58D  F527         	movff	_nn,sendMessage7@data2
 26434   0037E4  EE20 F001          	lfsr	2,1
 26435   0037E8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26436   0037EA  26D9               	addwf	fsr2l,f,c
 26437   0037EC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26438   0037EE  22DA               	addwfc	fsr2h,f,c
 26439   0037F0  50DF               	movf	indf2,w,c
 26440   0037F2  6E28               	movwf	sendMessage7@data3^(0+1280),c
 26441   0037F4  EE20 F002          	lfsr	2,2
 26442   0037F8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26443   0037FA  26D9               	addwf	fsr2l,f,c
 26444   0037FC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26445   0037FE  22DA               	addwfc	fsr2h,f,c
 26446   003800  50DF               	movf	indf2,w,c
 26447   003802  6E29               	movwf	sendMessage7@data4^(0+1280),c
 26448   003804  EE20 F003          	lfsr	2,3
 26449   003808  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26450   00380A  26D9               	addwf	fsr2l,f,c
 26451   00380C  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26452   00380E  22DA               	addwfc	fsr2h,f,c
 26453   003810  50DF               	movf	indf2,w,c
 26454   003812  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 26455   003814  EE20 F004          	lfsr	2,4
 26456   003818  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26457   00381A  26D9               	addwf	fsr2l,f,c
 26458   00381C  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26459   00381E  22DA               	addwfc	fsr2h,f,c
 26460   003820  50DF               	movf	indf2,w,c
 26461   003822  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 26462   003824  EE20 F005          	lfsr	2,5
 26463   003828  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26464   00382A  26D9               	addwf	fsr2l,f,c
 26465   00382C  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26466   00382E  22DA               	addwfc	fsr2h,f,c
 26467   003830  50DF               	movf	indf2,w,c
 26468   003832  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 26469   003834  0EE6               	movlw	230
 26470   003836  EC13  F03D         	call	_sendMessage7
 26471   00383A                     
 26472                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 26473   00383A  0105               	movlb	5	; () banked
 26474   00383C  4BC3               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 26475   00383E  2BC4               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 26476   003840                     l9690:
 26477                           
 26478                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 26479   003840  C554  F51C         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 26480   003844  C555  F51D         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 26481   003848  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26482   00384A  EC7A  F029         	call	_APP_processConsumedEvent
 26483   00384E  6E5B               	movwf	consumerProcessMessage@ret^(0+1280),c
 26484   003850                     
 26485                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 26486   003850  045B               	decf	consumerProcessMessage@ret^(0+1280),w,c
 26487   003852  A4D8               	btfss	status,2,c
 26488   003854  EF2E  F01C         	goto	u7091
 26489   003858  EF30  F01C         	goto	u7090
 26490   00385C                     u7091:
 26491   00385C  EF33  F01C         	goto	l9696
 26492   003860                     u7090:
 26493   003860                     
 26494                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 26495   003860  0105               	movlb	5	; () banked
 26496   003862  4BC1               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 26497   003864  2BC2               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 26498   003866                     l9696:
 26499                           
 26500                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 26501   003866  505B               	movf	consumerProcessMessage@ret^(0+1280),w,c
 26502   003868                     l579:
 26503   003868  0012               	return		;funcret
 26504   00386A                     __end_of_consumerProcessMessage:
 26505                           	callstack 0
 26506                           
 26507 ;; *************** function _canProcessMessage *****************
 26508 ;; Defined at:
 26509 ;;		line 411 in file "../../VLCBlib_PIC/can18_can_2.c"
 26510 ;; Parameters:    Size  Location     Type
 26511 ;;  m               2   83[COMRAM] PTR struct Message
 26512 ;;		 -> poll@m(9), 
 26513 ;; Auto vars:     Size  Location     Type
 26514 ;;		None
 26515 ;; Return value:  Size  Location     Type
 26516 ;;                  1    wreg      enum E23507
 26517 ;; Registers used:
 26518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26519 ;; Tracked objects:
 26520 ;;		On entry : 0/0
 26521 ;;		On exit  : 0/0
 26522 ;;		Unchanged: 0/0
 26523 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26528 ;;Total ram usage:        4 bytes
 26529 ;; Hardware stack levels used: 1
 26530 ;; Hardware stack levels required when called: 6
 26531 ;; This function calls:
 26532 ;;		_sendMessage5
 26533 ;; This function is called by:
 26534 ;;		_poll
 26535 ;; This function uses a non-reentrant model
 26536 ;;
 26537                           
 26538                           	psect	text20
 26539   0055BC                     __ptext20:
 26540                           	callstack 0
 26541   0055BC                     _canProcessMessage:
 26542                           	callstack 119
 26543   0055BC                     
 26544                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->len < 3) return NOT_PROCESSED;
 26545   0055BC  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26546   0055C0  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26547   0055C4  0E03               	movlw	3
 26548   0055C6  60DF               	cpfslt	indf2,c
 26549   0055C8  EFE8  F02A         	goto	u6881
 26550   0055CC  EFEA  F02A         	goto	u6880
 26551   0055D0                     u6881:
 26552   0055D0  EFED  F02A         	goto	l9498
 26553   0055D4                     u6880:
 26554   0055D4                     l9494:
 26555   0055D4  0E00               	movlw	0
 26556   0055D6  EF49  F02B         	goto	l402
 26557   0055DA                     l9498:
 26558                           
 26559                           ;../../VLCBlib_PIC/can18_can_2.c: 414:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 26560   0055DA  EE20 F002          	lfsr	2,2
 26561   0055DE  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26562   0055E0  26D9               	addwf	fsr2l,f,c
 26563   0055E2  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26564   0055E4  22DA               	addwfc	fsr2h,f,c
 26565   0055E6  50DE               	movf	postinc2,w,c
 26566   0055E8  0105               	movlb	5	; () banked
 26567   0055EA  198E               	xorwf	(_nn+1)& (0+255),w,b
 26568   0055EC  B4D8               	btfsc	status,2,c
 26569   0055EE  EFFB  F02A         	goto	u6891
 26570   0055F2  EFFD  F02A         	goto	u6890
 26571   0055F6                     u6891:
 26572   0055F6  EFFF  F02A         	goto	l9504
 26573   0055FA                     u6890:
 26574   0055FA  EFEA  F02A         	goto	l9494
 26575   0055FE                     l9504:
 26576                           
 26577                           ; BSR set to: 5
 26578                           ;../../VLCBlib_PIC/can18_can_2.c: 415:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 26579   0055FE  EE20 F003          	lfsr	2,3
 26580   005602  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26581   005604  26D9               	addwf	fsr2l,f,c
 26582   005606  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26583   005608  22DA               	addwfc	fsr2h,f,c
 26584   00560A  518D               	movf	_nn& (0+255),w,b
 26585   00560C  18DE               	xorwf	postinc2,w,c
 26586   00560E  B4D8               	btfsc	status,2,c
 26587   005610  EF0C  F02B         	goto	u6901
 26588   005614  EF0E  F02B         	goto	u6900
 26589   005618                     u6901:
 26590   005618  EF2E  F02B         	goto	l9528
 26591   00561C                     u6900:
 26592   00561C  EFEA  F02A         	goto	l9494
 26593   005620                     l9510:
 26594                           
 26595                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             return PROCESSED;
 26596   005620  0E01               	movlw	1
 26597   005622  EF49  F02B         	goto	l402
 26598   005626                     l9514:
 26599                           
 26600                           ; BSR set to: 5
 26601                           ;../../VLCBlib_PIC/can18_can_2.c: 423:             if (m->len < 4) {
 26602   005626  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26603   00562A  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26604   00562E  0E04               	movlw	4
 26605   005630  60DF               	cpfslt	indf2,c
 26606   005632  EF1D  F02B         	goto	u6911
 26607   005636  EF1F  F02B         	goto	u6910
 26608   00563A                     u6911:
 26609   00563A  EF10  F02B         	goto	l9510
 26610   00563E                     u6910:
 26611   00563E                     
 26612                           ; BSR set to: 5
 26613                           ;../../VLCBlib_PIC/can18_can_2.c: 425:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 26614   00563E  C58E  F526         	movff	_nn+1,sendMessage5@data1
 26615   005642  C58D  F527         	movff	_nn,sendMessage5@data2
 26616   005646  0E75               	movlw	117
 26617   005648  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26618   00564A  0E01               	movlw	1
 26619   00564C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26620   00564E  0E01               	movlw	1
 26621   005650  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26622   005652  0EAF               	movlw	175
 26623   005654  EC28  F03D         	call	_sendMessage5
 26624   005658  EF10  F02B         	goto	l9510
 26625   00565C                     l9528:
 26626                           
 26627                           ; BSR set to: 5
 26628   00565C  EE20 F001          	lfsr	2,1
 26629   005660  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26630   005662  26D9               	addwf	fsr2l,f,c
 26631   005664  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26632   005666  22DA               	addwfc	fsr2h,f,c
 26633   005668  50DF               	movf	indf2,w,c
 26634   00566A  6E56               	movwf	??_canProcessMessage^(0+1280),c
 26635   00566C  6A57               	clrf	(??_canProcessMessage+1)^(0+1280),c
 26636                           
 26637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26638                           ; Switch size 1, requested type "simple"
 26639                           ; Number of cases is 1, Range of values is 0 to 0
 26640                           ; switch strategies available:
 26641                           ; Name         Instructions Cycles
 26642                           ; simple_byte            4     3 (average)
 26643                           ;	Chosen strategy is simple_byte
 26644   00566E  5057               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 26645   005670  0A00               	xorlw	0	; case 0
 26646   005672  B4D8               	btfsc	status,2,c
 26647   005674  EF3E  F02B         	goto	l11514
 26648   005678  EFEA  F02A         	goto	l9494
 26649   00567C                     l11514:
 26650                           
 26651                           ; BSR set to: 5
 26652                           ; Switch size 1, requested type "simple"
 26653                           ; Number of cases is 2, Range of values is 93 to 117
 26654                           ; switch strategies available:
 26655                           ; Name         Instructions Cycles
 26656                           ; simple_byte            7     4 (average)
 26657                           ;	Chosen strategy is simple_byte
 26658   00567C  5056               	movf	??_canProcessMessage^(0+1280),w,c
 26659   00567E  0A5D               	xorlw	93	; case 93
 26660   005680  B4D8               	btfsc	status,2,c
 26661   005682  EF10  F02B         	goto	l9510
 26662   005686  0A28               	xorlw	40	; case 117
 26663   005688  B4D8               	btfsc	status,2,c
 26664   00568A  EF13  F02B         	goto	l9514
 26665   00568E  EFEA  F02A         	goto	l9494
 26666   005692                     l402:
 26667   005692  0012               	return		;funcret
 26668   005694                     __end_of_canProcessMessage:
 26669                           	callstack 0
 26670                           
 26671 ;; *************** function _bootProcessMessage *****************
 26672 ;; Defined at:
 26673 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 26674 ;; Parameters:    Size  Location     Type
 26675 ;;  m               2   83[COMRAM] PTR struct Message
 26676 ;;		 -> poll@m(9), 
 26677 ;; Auto vars:     Size  Location     Type
 26678 ;;		None
 26679 ;; Return value:  Size  Location     Type
 26680 ;;                  1    wreg      enum E23340
 26681 ;; Registers used:
 26682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26683 ;; Tracked objects:
 26684 ;;		On entry : 0/0
 26685 ;;		On exit  : 0/0
 26686 ;;		Unchanged: 0/0
 26687 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26690 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26692 ;;Total ram usage:        4 bytes
 26693 ;; Hardware stack levels used: 1
 26694 ;; Hardware stack levels required when called: 6
 26695 ;; This function calls:
 26696 ;;		_writeNVM
 26697 ;; This function is called by:
 26698 ;;		_poll
 26699 ;; This function uses a non-reentrant model
 26700 ;;
 26701                           
 26702                           	psect	text21
 26703   006472                     __ptext21:
 26704                           	callstack 0
 26705   006472                     _bootProcessMessage:
 26706                           	callstack 119
 26707   006472                     
 26708                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 26709   006472  EE20 F002          	lfsr	2,2
 26710   006476  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26711   006478  26D9               	addwf	fsr2l,f,c
 26712   00647A  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26713   00647C  22DA               	addwfc	fsr2h,f,c
 26714   00647E  50DE               	movf	postinc2,w,c
 26715   006480  0105               	movlb	5	; () banked
 26716   006482  198E               	xorwf	(_nn+1)& (0+255),w,b
 26717   006484  B4D8               	btfsc	status,2,c
 26718   006486  EF47  F032         	goto	u6831
 26719   00648A  EF49  F032         	goto	u6830
 26720   00648E                     u6831:
 26721   00648E  EF4C  F032         	goto	l9326
 26722   006492                     u6830:
 26723   006492                     l9322:
 26724                           
 26725                           ; BSR set to: 5
 26726   006492  0E00               	movlw	0
 26727   006494  EF83  F032         	goto	l123
 26728   006498                     l9326:
 26729                           
 26730                           ; BSR set to: 5
 26731                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 26732   006498  EE20 F003          	lfsr	2,3
 26733   00649C  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26734   00649E  26D9               	addwf	fsr2l,f,c
 26735   0064A0  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26736   0064A2  22DA               	addwfc	fsr2h,f,c
 26737   0064A4  518D               	movf	_nn& (0+255),w,b
 26738   0064A6  18DE               	xorwf	postinc2,w,c
 26739   0064A8  B4D8               	btfsc	status,2,c
 26740   0064AA  EF59  F032         	goto	u6841
 26741   0064AE  EF5B  F032         	goto	u6840
 26742   0064B2                     u6841:
 26743   0064B2  EF6C  F032         	goto	l9344
 26744   0064B6                     u6840:
 26745   0064B6  EF49  F032         	goto	l9322
 26746   0064BA                     l9332:
 26747                           
 26748                           ; BSR set to: 5
 26749                           ;../../VLCBlib_PIC/boot.c: 239:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 26750   0064BA  0EFF               	movlw	255
 26751   0064BC  6E0E               	movwf	writeNVM@index^(0+1280),c
 26752   0064BE  0E03               	movlw	3
 26753   0064C0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26754   0064C2  0E00               	movlw	0
 26755   0064C4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26756   0064C6  0EFF               	movlw	255
 26757   0064C8  6E11               	movwf	writeNVM@value^(0+1280),c
 26758   0064CA  0E00               	movlw	0
 26759   0064CC  ECB5  F038         	call	_writeNVM
 26760   0064D0  00FF               	reset		;# 
 26761   0064D2                     
 26762                           ;../../VLCBlib_PIC/boot.c: 241:             return PROCESSED;
 26763   0064D2  0E01               	movlw	1
 26764   0064D4  EF83  F032         	goto	l123
 26765   0064D8                     l9344:
 26766                           
 26767                           ; BSR set to: 5
 26768   0064D8  EE20 F001          	lfsr	2,1
 26769   0064DC  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26770   0064DE  26D9               	addwf	fsr2l,f,c
 26771   0064E0  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26772   0064E2  22DA               	addwfc	fsr2h,f,c
 26773   0064E4  50DF               	movf	indf2,w,c
 26774   0064E6  6E56               	movwf	??_bootProcessMessage^(0+1280),c
 26775   0064E8  6A57               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 26776                           
 26777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26778                           ; Switch size 1, requested type "simple"
 26779                           ; Number of cases is 1, Range of values is 0 to 0
 26780                           ; switch strategies available:
 26781                           ; Name         Instructions Cycles
 26782                           ; simple_byte            4     3 (average)
 26783                           ;	Chosen strategy is simple_byte
 26784   0064EA  5057               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 26785   0064EC  0A00               	xorlw	0	; case 0
 26786   0064EE  B4D8               	btfsc	status,2,c
 26787   0064F0  EF7C  F032         	goto	l11516
 26788   0064F4  EF49  F032         	goto	l9322
 26789   0064F8                     l11516:
 26790                           
 26791                           ; BSR set to: 5
 26792                           ; Switch size 1, requested type "simple"
 26793                           ; Number of cases is 1, Range of values is 92 to 92
 26794                           ; switch strategies available:
 26795                           ; Name         Instructions Cycles
 26796                           ; simple_byte            4     3 (average)
 26797                           ;	Chosen strategy is simple_byte
 26798   0064F8  5056               	movf	??_bootProcessMessage^(0+1280),w,c
 26799   0064FA  0A5C               	xorlw	92	; case 92
 26800   0064FC  B4D8               	btfsc	status,2,c
 26801   0064FE  EF5D  F032         	goto	l9332
 26802   006502  EF49  F032         	goto	l9322
 26803   006506                     l123:
 26804   006506  0012               	return		;funcret
 26805   006508                     __end_of_bootProcessMessage:
 26806                           	callstack 0
 26807                           
 26808 ;; *************** function _teachProcessMessage *****************
 26809 ;; Defined at:
 26810 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 26811 ;; Parameters:    Size  Location     Type
 26812 ;;  m               2   83[COMRAM] PTR struct Message
 26813 ;;		 -> poll@m(9), 
 26814 ;; Auto vars:     Size  Location     Type
 26815 ;;		None
 26816 ;; Return value:  Size  Location     Type
 26817 ;;                  1    wreg      enum E23340
 26818 ;; Registers used:
 26819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26820 ;; Tracked objects:
 26821 ;;		On entry : 0/0
 26822 ;;		On exit  : 0/0
 26823 ;;		Unchanged: 0/0
 26824 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26827 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26829 ;;Total ram usage:        8 bytes
 26830 ;; Hardware stack levels used: 1
 26831 ;; Hardware stack levels required when called: 10
 26832 ;; This function calls:
 26833 ;;		_doEvlrn
 26834 ;;		_doEvuln
 26835 ;;		_doNenrd
 26836 ;;		_doNerd
 26837 ;;		_doNnclr
 26838 ;;		_doNnevn
 26839 ;;		_doReqev
 26840 ;;		_doReval
 26841 ;;		_doRqevn
 26842 ;;		_sendMessage3
 26843 ;;		_sendMessage5
 26844 ;;		_teachCheckLen
 26845 ;; This function is called by:
 26846 ;;		_poll
 26847 ;; This function uses a non-reentrant model
 26848 ;;
 26849                           
 26850                           	psect	text22
 26851   0016E6                     __ptext22:
 26852                           	callstack 0
 26853   0016E6                     _teachProcessMessage:
 26854                           	callstack 115
 26855   0016E6                     
 26856                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 26857   0016E6  EF17  F00F         	goto	l9984
 26858   0016EA                     l9726:
 26859                           
 26860                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 26861   0016EA  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 26862   0016EE  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 26863   0016F2  0E03               	movlw	3
 26864   0016F4  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 26865   0016F6  0E00               	movlw	0
 26866   0016F8  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 26867   0016FA  ECB0  F034         	call	_teachCheckLen	;wreg free
 26868   0016FE  06E8               	decf	wreg,f,c
 26869   001700  A4D8               	btfss	status,2,c
 26870   001702  EF85  F00B         	goto	u7111
 26871   001706  EF87  F00B         	goto	u7110
 26872   00170A                     u7111:
 26873   00170A  EF8A  F00B         	goto	l9732
 26874   00170E                     u7110:
 26875   00170E                     l9728:
 26876   00170E  0E01               	movlw	1
 26877   001710  EF5E  F00F         	goto	l736
 26878   001714                     l9732:
 26879                           
 26880                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 26881   001714  EE20 F002          	lfsr	2,2
 26882   001718  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26883   00171A  26D9               	addwf	fsr2l,f,c
 26884   00171C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26885   00171E  22DA               	addwfc	fsr2h,f,c
 26886   001720  50DE               	movf	postinc2,w,c
 26887   001722  0105               	movlb	5	; () banked
 26888   001724  198E               	xorwf	(_nn+1)& (0+255),w,b
 26889   001726  A4D8               	btfss	status,2,c
 26890   001728  EF98  F00B         	goto	u7121
 26891   00172C  EF9A  F00B         	goto	u7120
 26892   001730                     u7121:
 26893   001730  EFAC  F00B         	goto	l9738
 26894   001734                     u7120:
 26895   001734                     
 26896                           ; BSR set to: 5
 26897   001734  EE20 F003          	lfsr	2,3
 26898   001738  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26899   00173A  26D9               	addwf	fsr2l,f,c
 26900   00173C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26901   00173E  22DA               	addwfc	fsr2h,f,c
 26902   001740  518D               	movf	_nn& (0+255),w,b
 26903   001742  18DE               	xorwf	postinc2,w,c
 26904   001744  A4D8               	btfss	status,2,c
 26905   001746  EFA7  F00B         	goto	u7131
 26906   00174A  EFA9  F00B         	goto	u7130
 26907   00174E                     u7131:
 26908   00174E  EFAC  F00B         	goto	l9738
 26909   001752                     u7130:
 26910   001752                     l9736:
 26911                           
 26912                           ; BSR set to: 5
 26913                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 26914   001752  81A4               	bsf	_mode_flags& (0+255),0,b
 26915                           
 26916                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 26917   001754  EF87  F00B         	goto	l9728
 26918   001758                     l9738:
 26919                           
 26920                           ; BSR set to: 5
 26921                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 26922   001758  91A4               	bcf	_mode_flags& (0+255),0,b
 26923   00175A  EF87  F00B         	goto	l9728
 26924   00175E                     l9744:
 26925                           
 26926                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 26927   00175E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 26928   001762  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 26929   001766  0E04               	movlw	4
 26930   001768  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 26931   00176A  0E00               	movlw	0
 26932   00176C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 26933   00176E  ECB0  F034         	call	_teachCheckLen	;wreg free
 26934   001772  06E8               	decf	wreg,f,c
 26935   001774  A4D8               	btfss	status,2,c
 26936   001776  EFBF  F00B         	goto	u7141
 26937   00177A  EFC1  F00B         	goto	u7140
 26938   00177E                     u7141:
 26939   00177E  EFC3  F00B         	goto	l9750
 26940   001782                     u7140:
 26941   001782  EF87  F00B         	goto	l9728
 26942   001786                     l9750:
 26943                           
 26944                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 26945   001786  EE20 F002          	lfsr	2,2
 26946   00178A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26947   00178C  26D9               	addwf	fsr2l,f,c
 26948   00178E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26949   001790  22DA               	addwfc	fsr2h,f,c
 26950   001792  50DE               	movf	postinc2,w,c
 26951   001794  0105               	movlb	5	; () banked
 26952   001796  198E               	xorwf	(_nn+1)& (0+255),w,b
 26953   001798  A4D8               	btfss	status,2,c
 26954   00179A  EFD1  F00B         	goto	u7151
 26955   00179E  EFD3  F00B         	goto	u7150
 26956   0017A2                     u7151:
 26957   0017A2  EF04  F00C         	goto	l9772
 26958   0017A6                     u7150:
 26959   0017A6                     
 26960                           ; BSR set to: 5
 26961   0017A6  EE20 F003          	lfsr	2,3
 26962   0017AA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26963   0017AC  26D9               	addwf	fsr2l,f,c
 26964   0017AE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26965   0017B0  22DA               	addwfc	fsr2h,f,c
 26966   0017B2  518D               	movf	_nn& (0+255),w,b
 26967   0017B4  18DE               	xorwf	postinc2,w,c
 26968   0017B6  A4D8               	btfss	status,2,c
 26969   0017B8  EFE0  F00B         	goto	u7161
 26970   0017BC  EFE2  F00B         	goto	u7160
 26971   0017C0                     u7161:
 26972   0017C0  EF04  F00C         	goto	l9772
 26973   0017C4                     u7160:
 26974   0017C4                     
 26975                           ; BSR set to: 5
 26976                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 26977   0017C4  EE20 F004          	lfsr	2,4
 26978   0017C8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26979   0017CA  26D9               	addwf	fsr2l,f,c
 26980   0017CC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26981   0017CE  22DA               	addwfc	fsr2h,f,c
 26982   0017D0  0E08               	movlw	8
 26983   0017D2  18DE               	xorwf	postinc2,w,c
 26984   0017D4  A4D8               	btfss	status,2,c
 26985   0017D6  EFEF  F00B         	goto	u7171
 26986   0017DA  EFF1  F00B         	goto	u7170
 26987   0017DE                     u7171:
 26988   0017DE  EFF3  F00B         	goto	l9764
 26989   0017E2                     u7170:
 26990   0017E2  EFA9  F00B         	goto	l9736
 26991   0017E6                     l9764:
 26992                           
 26993                           ; BSR set to: 5
 26994   0017E6  EE20 F004          	lfsr	2,4
 26995   0017EA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26996   0017EC  26D9               	addwf	fsr2l,f,c
 26997   0017EE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26998   0017F0  22DA               	addwfc	fsr2h,f,c
 26999   0017F2  0E09               	movlw	9
 27000   0017F4  18DE               	xorwf	postinc2,w,c
 27001   0017F6  A4D8               	btfss	status,2,c
 27002   0017F8  EF00  F00C         	goto	u7181
 27003   0017FC  EF02  F00C         	goto	u7180
 27004   001800                     u7181:
 27005   001800  EF05  F00C         	goto	l9774
 27006   001804                     u7180:
 27007   001804  EFAC  F00B         	goto	l9738
 27008   001808                     l9772:
 27009                           
 27010                           ; BSR set to: 5
 27011                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 27012   001808  91A4               	bcf	_mode_flags& (0+255),0,b
 27013   00180A                     l9774:
 27014                           
 27015                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 27016   00180A  0E00               	movlw	0
 27017   00180C  EF5E  F00F         	goto	l736
 27018   001810                     l9778:
 27019                           
 27020                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 27021   001810  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27022   001814  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27023   001818  0E07               	movlw	7
 27024   00181A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27025   00181C  0E01               	movlw	1
 27026   00181E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27027   001820  ECB0  F034         	call	_teachCheckLen	;wreg free
 27028   001824  06E8               	decf	wreg,f,c
 27029   001826  A4D8               	btfss	status,2,c
 27030   001828  EF18  F00C         	goto	u7191
 27031   00182C  EF1A  F00C         	goto	u7190
 27032   001830                     u7191:
 27033   001830  EF25  F00C         	goto	l747
 27034   001834                     u7190:
 27035   001834                     
 27036                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 27037   001834  C58E  F526         	movff	_nn+1,sendMessage3@data1
 27038   001838  C58D  F527         	movff	_nn,sendMessage3@data2
 27039   00183C  0E01               	movlw	1
 27040   00183E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27041   001840  0E6F               	movlw	111
 27042   001842  ECE9  F03C         	call	_sendMessage3
 27043   001846  EF87  F00B         	goto	l9728
 27044   00184A                     l747:
 27045                           
 27046                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27047   00184A  0105               	movlb	5	; () banked
 27048   00184C  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27049   00184E  EF2B  F00C         	goto	u7201
 27050   001852  EF2D  F00C         	goto	u7200
 27051   001856                     u7201:
 27052   001856  EF2F  F00C         	goto	l9790
 27053   00185A                     u7200:
 27054   00185A  EF87  F00B         	goto	l9728
 27055   00185E                     l9790:
 27056                           
 27057                           ; BSR set to: 5
 27058                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 27059   00185E  EE20 F003          	lfsr	2,3
 27060   001862  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27061   001864  26D9               	addwf	fsr2l,f,c
 27062   001866  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27063   001868  22DA               	addwfc	fsr2h,f,c
 27064   00186A  50DF               	movf	indf2,w,c
 27065   00186C  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27066   00186E  EE20 F002          	lfsr	2,2
 27067   001872  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27068   001874  26D9               	addwf	fsr2l,f,c
 27069   001876  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27070   001878  22DA               	addwfc	fsr2h,f,c
 27071   00187A  50DF               	movf	indf2,w,c
 27072   00187C  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27073   00187E  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27074   001880  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27075   001882  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27076   001886  EE20 F005          	lfsr	2,5
 27077   00188A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27078   00188C  26D9               	addwf	fsr2l,f,c
 27079   00188E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27080   001890  22DA               	addwfc	fsr2h,f,c
 27081   001892  50DF               	movf	indf2,w,c
 27082   001894  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27083   001896  EE20 F004          	lfsr	2,4
 27084   00189A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27085   00189C  26D9               	addwf	fsr2l,f,c
 27086   00189E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27087   0018A0  22DA               	addwfc	fsr2h,f,c
 27088   0018A2  50DF               	movf	indf2,w,c
 27089   0018A4  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27090   0018A6  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27091   0018A8  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27092   0018AA  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27093   0018AE  EE20 F006          	lfsr	2,6
 27094   0018B2  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27095   0018B4  26D9               	addwf	fsr2l,f,c
 27096   0018B6  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27097   0018B8  22DA               	addwfc	fsr2h,f,c
 27098   0018BA  50DF               	movf	indf2,w,c
 27099   0018BC  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27100   0018BE  EE20 F007          	lfsr	2,7
 27101   0018C2  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27102   0018C4  26D9               	addwf	fsr2l,f,c
 27103   0018C6  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27104   0018C8  22DA               	addwfc	fsr2h,f,c
 27105   0018CA  50DF               	movf	indf2,w,c
 27106   0018CC  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27107   0018CE  ECB5  F02B         	call	_doEvlrn	;wreg free
 27108   0018D2  EF87  F00B         	goto	l9728
 27109   0018D6                     l9796:
 27110                           
 27111                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 27112   0018D6  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27113   0018DA  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27114   0018DE  0E05               	movlw	5
 27115   0018E0  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27116   0018E2  0E01               	movlw	1
 27117   0018E4  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27118   0018E6  ECB0  F034         	call	_teachCheckLen	;wreg free
 27119   0018EA  06E8               	decf	wreg,f,c
 27120   0018EC  A4D8               	btfss	status,2,c
 27121   0018EE  EF7B  F00C         	goto	u7211
 27122   0018F2  EF7D  F00C         	goto	u7210
 27123   0018F6                     u7211:
 27124   0018F6  EF7F  F00C         	goto	l750
 27125   0018FA                     u7210:
 27126   0018FA  EF87  F00B         	goto	l9728
 27127   0018FE                     l750:
 27128                           
 27129                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27130   0018FE  0105               	movlb	5	; () banked
 27131   001900  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27132   001902  EF85  F00C         	goto	u7221
 27133   001906  EF87  F00C         	goto	u7220
 27134   00190A                     u7221:
 27135   00190A  EF89  F00C         	goto	l9806
 27136   00190E                     u7220:
 27137   00190E  EF87  F00B         	goto	l9728
 27138   001912                     l9806:
 27139                           
 27140                           ; BSR set to: 5
 27141                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 27142   001912  EE20 F003          	lfsr	2,3
 27143   001916  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27144   001918  26D9               	addwf	fsr2l,f,c
 27145   00191A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27146   00191C  22DA               	addwfc	fsr2h,f,c
 27147   00191E  50DF               	movf	indf2,w,c
 27148   001920  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27149   001922  EE20 F002          	lfsr	2,2
 27150   001926  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27151   001928  26D9               	addwf	fsr2l,f,c
 27152   00192A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27153   00192C  22DA               	addwfc	fsr2h,f,c
 27154   00192E  50DF               	movf	indf2,w,c
 27155   001930  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27156   001932  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27157   001934  6E3B               	movwf	doEvuln@nodeNumber^(0+1280),c
 27158   001936  C557  F53C         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 27159   00193A  EE20 F005          	lfsr	2,5
 27160   00193E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27161   001940  26D9               	addwf	fsr2l,f,c
 27162   001942  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27163   001944  22DA               	addwfc	fsr2h,f,c
 27164   001946  50DF               	movf	indf2,w,c
 27165   001948  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27166   00194A  EE20 F004          	lfsr	2,4
 27167   00194E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27168   001950  26D9               	addwf	fsr2l,f,c
 27169   001952  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27170   001954  22DA               	addwfc	fsr2h,f,c
 27171   001956  50DF               	movf	indf2,w,c
 27172   001958  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27173   00195A  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27174   00195C  6E3D               	movwf	doEvuln@eventNumber^(0+1280),c
 27175   00195E  C55A  F53E         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 27176   001962  EC32  F035         	call	_doEvuln	;wreg free
 27177   001966  EF87  F00B         	goto	l9728
 27178   00196A                     l9812:
 27179                           
 27180                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 27181   00196A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27182   00196E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27183   001972  0E06               	movlw	6
 27184   001974  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27185   001976  0E01               	movlw	1
 27186   001978  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27187   00197A  ECB0  F034         	call	_teachCheckLen	;wreg free
 27188   00197E  06E8               	decf	wreg,f,c
 27189   001980  A4D8               	btfss	status,2,c
 27190   001982  EFC5  F00C         	goto	u7231
 27191   001986  EFC7  F00C         	goto	u7230
 27192   00198A                     u7231:
 27193   00198A  EFC9  F00C         	goto	l753
 27194   00198E                     u7230:
 27195   00198E  EF87  F00B         	goto	l9728
 27196   001992                     l753:
 27197                           
 27198                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27199   001992  0105               	movlb	5	; () banked
 27200   001994  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27201   001996  EFCF  F00C         	goto	u7241
 27202   00199A  EFD1  F00C         	goto	u7240
 27203   00199E                     u7241:
 27204   00199E  EFD3  F00C         	goto	l9822
 27205   0019A2                     u7240:
 27206   0019A2  EF87  F00B         	goto	l9728
 27207   0019A6                     l9822:
 27208                           
 27209                           ; BSR set to: 5
 27210                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 27211   0019A6  EE20 F003          	lfsr	2,3
 27212   0019AA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27213   0019AC  26D9               	addwf	fsr2l,f,c
 27214   0019AE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27215   0019B0  22DA               	addwfc	fsr2h,f,c
 27216   0019B2  50DF               	movf	indf2,w,c
 27217   0019B4  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27218   0019B6  EE20 F002          	lfsr	2,2
 27219   0019BA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27220   0019BC  26D9               	addwf	fsr2l,f,c
 27221   0019BE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27222   0019C0  22DA               	addwfc	fsr2h,f,c
 27223   0019C2  50DF               	movf	indf2,w,c
 27224   0019C4  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27225   0019C6  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27226   0019C8  6E2F               	movwf	doReqev@nodeNumber^(0+1280),c
 27227   0019CA  C557  F530         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 27228   0019CE  EE20 F005          	lfsr	2,5
 27229   0019D2  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27230   0019D4  26D9               	addwf	fsr2l,f,c
 27231   0019D6  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27232   0019D8  22DA               	addwfc	fsr2h,f,c
 27233   0019DA  50DF               	movf	indf2,w,c
 27234   0019DC  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27235   0019DE  EE20 F004          	lfsr	2,4
 27236   0019E2  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27237   0019E4  26D9               	addwf	fsr2l,f,c
 27238   0019E6  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27239   0019E8  22DA               	addwfc	fsr2h,f,c
 27240   0019EA  50DF               	movf	indf2,w,c
 27241   0019EC  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27242   0019EE  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27243   0019F0  6E31               	movwf	doReqev@eventNumber^(0+1280),c
 27244   0019F2  C55A  F532         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 27245   0019F6  EE20 F006          	lfsr	2,6
 27246   0019FA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27247   0019FC  26D9               	addwf	fsr2l,f,c
 27248   0019FE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27249   001A00  22DA               	addwfc	fsr2h,f,c
 27250   001A02  50DF               	movf	indf2,w,c
 27251   001A04  6E33               	movwf	doReqev@evNum^(0+1280),c
 27252   001A06  ECED  F021         	call	_doReqev	;wreg free
 27253   001A0A  EF87  F00B         	goto	l9728
 27254   001A0E                     l9828:
 27255                           
 27256                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27257   001A0E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27258   001A12  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27259   001A16  0E03               	movlw	3
 27260   001A18  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27261   001A1A  0E00               	movlw	0
 27262   001A1C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27263   001A1E  ECB0  F034         	call	_teachCheckLen	;wreg free
 27264   001A22  06E8               	decf	wreg,f,c
 27265   001A24  A4D8               	btfss	status,2,c
 27266   001A26  EF17  F00D         	goto	u7251
 27267   001A2A  EF19  F00D         	goto	u7250
 27268   001A2E                     u7251:
 27269   001A2E  EF1B  F00D         	goto	l9834
 27270   001A32                     u7250:
 27271   001A32  EF87  F00B         	goto	l9728
 27272   001A36                     l9834:
 27273                           
 27274                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27275   001A36  EE20 F002          	lfsr	2,2
 27276   001A3A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27277   001A3C  26D9               	addwf	fsr2l,f,c
 27278   001A3E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27279   001A40  22DA               	addwfc	fsr2h,f,c
 27280   001A42  50DE               	movf	postinc2,w,c
 27281   001A44  0105               	movlb	5	; () banked
 27282   001A46  198E               	xorwf	(_nn+1)& (0+255),w,b
 27283   001A48  A4D8               	btfss	status,2,c
 27284   001A4A  EF29  F00D         	goto	u7261
 27285   001A4E  EF2B  F00D         	goto	u7260
 27286   001A52                     u7261:
 27287   001A52  EF87  F00B         	goto	l9728
 27288   001A56                     u7260:
 27289   001A56                     
 27290                           ; BSR set to: 5
 27291   001A56  EE20 F003          	lfsr	2,3
 27292   001A5A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27293   001A5C  26D9               	addwf	fsr2l,f,c
 27294   001A5E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27295   001A60  22DA               	addwfc	fsr2h,f,c
 27296   001A62  518D               	movf	_nn& (0+255),w,b
 27297   001A64  18DE               	xorwf	postinc2,w,c
 27298   001A66  B4D8               	btfsc	status,2,c
 27299   001A68  EF38  F00D         	goto	u7271
 27300   001A6C  EF3A  F00D         	goto	u7270
 27301   001A70                     u7271:
 27302   001A70  EFAC  F00B         	goto	l9738
 27303   001A74                     u7270:
 27304   001A74  EF87  F00B         	goto	l9728
 27305   001A78                     l9848:
 27306                           
 27307                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 27308   001A78  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27309   001A7C  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27310   001A80  0E03               	movlw	3
 27311   001A82  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27312   001A84  0E01               	movlw	1
 27313   001A86  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27314   001A88  ECB0  F034         	call	_teachCheckLen	;wreg free
 27315   001A8C  06E8               	decf	wreg,f,c
 27316   001A8E  A4D8               	btfss	status,2,c
 27317   001A90  EF4C  F00D         	goto	u7281
 27318   001A94  EF4E  F00D         	goto	u7280
 27319   001A98                     u7281:
 27320   001A98  EF50  F00D         	goto	l9854
 27321   001A9C                     u7280:
 27322   001A9C  EF87  F00B         	goto	l9728
 27323   001AA0                     l9854:
 27324                           
 27325                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27326   001AA0  EE20 F002          	lfsr	2,2
 27327   001AA4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27328   001AA6  26D9               	addwf	fsr2l,f,c
 27329   001AA8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27330   001AAA  22DA               	addwfc	fsr2h,f,c
 27331   001AAC  50DE               	movf	postinc2,w,c
 27332   001AAE  0105               	movlb	5	; () banked
 27333   001AB0  198E               	xorwf	(_nn+1)& (0+255),w,b
 27334   001AB2  A4D8               	btfss	status,2,c
 27335   001AB4  EF5E  F00D         	goto	u7291
 27336   001AB8  EF60  F00D         	goto	u7290
 27337   001ABC                     u7291:
 27338   001ABC  EF87  F00B         	goto	l9728
 27339   001AC0                     u7290:
 27340   001AC0                     
 27341                           ; BSR set to: 5
 27342   001AC0  EE20 F003          	lfsr	2,3
 27343   001AC4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27344   001AC6  26D9               	addwf	fsr2l,f,c
 27345   001AC8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27346   001ACA  22DA               	addwfc	fsr2h,f,c
 27347   001ACC  518D               	movf	_nn& (0+255),w,b
 27348   001ACE  18DE               	xorwf	postinc2,w,c
 27349   001AD0  B4D8               	btfsc	status,2,c
 27350   001AD2  EF6D  F00D         	goto	u7301
 27351   001AD6  EF6F  F00D         	goto	u7300
 27352   001ADA                     u7301:
 27353   001ADA  EF71  F00D         	goto	l762
 27354   001ADE                     u7300:
 27355   001ADE  EF87  F00B         	goto	l9728
 27356   001AE2                     l762:
 27357                           
 27358                           ; BSR set to: 5
 27359                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 27360   001AE2  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27361   001AE4  EF76  F00D         	goto	u7311
 27362   001AE8  EF78  F00D         	goto	u7310
 27363   001AEC                     u7311:
 27364   001AEC  EF90  F00D         	goto	l9868
 27365   001AF0                     u7310:
 27366   001AF0                     
 27367                           ; BSR set to: 5
 27368                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 27369   001AF0  C58E  F526         	movff	_nn+1,sendMessage3@data1
 27370   001AF4  C58D  F527         	movff	_nn,sendMessage3@data2
 27371   001AF8  0E02               	movlw	2
 27372   001AFA  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27373   001AFC  0E6F               	movlw	111
 27374   001AFE  ECE9  F03C         	call	_sendMessage3
 27375                           
 27376                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 27377   001B02  C58E  F526         	movff	_nn+1,sendMessage5@data1
 27378   001B06  C58D  F527         	movff	_nn,sendMessage5@data2
 27379   001B0A  0E55               	movlw	85
 27380   001B0C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27381   001B0E  0E04               	movlw	4
 27382   001B10  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27383   001B12  0E02               	movlw	2
 27384   001B14  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27385   001B16  0EAF               	movlw	175
 27386   001B18  EC28  F03D         	call	_sendMessage5
 27387   001B1C  EF87  F00B         	goto	l9728
 27388   001B20                     l9868:
 27389                           
 27390                           ; BSR set to: 5
 27391                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 27392   001B20  ECA8  F03C         	call	_doNnclr	;wreg free
 27393                           
 27394                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 27395   001B24  EF05  F00C         	goto	l9774
 27396   001B28                     l9870:
 27397                           
 27398                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27399   001B28  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27400   001B2C  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27401   001B30  0E03               	movlw	3
 27402   001B32  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27403   001B34  0E00               	movlw	0
 27404   001B36  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27405   001B38  ECB0  F034         	call	_teachCheckLen	;wreg free
 27406   001B3C  06E8               	decf	wreg,f,c
 27407   001B3E  A4D8               	btfss	status,2,c
 27408   001B40  EFA4  F00D         	goto	u7321
 27409   001B44  EFA6  F00D         	goto	u7320
 27410   001B48                     u7321:
 27411   001B48  EFA8  F00D         	goto	l9876
 27412   001B4C                     u7320:
 27413   001B4C  EF87  F00B         	goto	l9728
 27414   001B50                     l9876:
 27415                           
 27416                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27417   001B50  EE20 F002          	lfsr	2,2
 27418   001B54  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27419   001B56  26D9               	addwf	fsr2l,f,c
 27420   001B58  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27421   001B5A  22DA               	addwfc	fsr2h,f,c
 27422   001B5C  50DE               	movf	postinc2,w,c
 27423   001B5E  0105               	movlb	5	; () banked
 27424   001B60  198E               	xorwf	(_nn+1)& (0+255),w,b
 27425   001B62  A4D8               	btfss	status,2,c
 27426   001B64  EFB6  F00D         	goto	u7331
 27427   001B68  EFB8  F00D         	goto	u7330
 27428   001B6C                     u7331:
 27429   001B6C  EF87  F00B         	goto	l9728
 27430   001B70                     u7330:
 27431   001B70                     
 27432                           ; BSR set to: 5
 27433   001B70  EE20 F003          	lfsr	2,3
 27434   001B74  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27435   001B76  26D9               	addwf	fsr2l,f,c
 27436   001B78  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27437   001B7A  22DA               	addwfc	fsr2h,f,c
 27438   001B7C  518D               	movf	_nn& (0+255),w,b
 27439   001B7E  18DE               	xorwf	postinc2,w,c
 27440   001B80  B4D8               	btfsc	status,2,c
 27441   001B82  EFC5  F00D         	goto	u7341
 27442   001B86  EFC7  F00D         	goto	u7340
 27443   001B8A                     u7341:
 27444   001B8A  EFC9  F00D         	goto	l9884
 27445   001B8E                     u7340:
 27446   001B8E  EF87  F00B         	goto	l9728
 27447   001B92                     l9884:
 27448                           
 27449                           ; BSR set to: 5
 27450                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 27451   001B92  ECF3  F03D         	call	_doNerd	;wreg free
 27452   001B96  EF87  F00B         	goto	l9728
 27453   001B9A                     l9890:
 27454                           
 27455                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27456   001B9A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27457   001B9E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27458   001BA2  0E03               	movlw	3
 27459   001BA4  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27460   001BA6  0E00               	movlw	0
 27461   001BA8  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27462   001BAA  ECB0  F034         	call	_teachCheckLen	;wreg free
 27463   001BAE  06E8               	decf	wreg,f,c
 27464   001BB0  A4D8               	btfss	status,2,c
 27465   001BB2  EFDD  F00D         	goto	u7351
 27466   001BB6  EFDF  F00D         	goto	u7350
 27467   001BBA                     u7351:
 27468   001BBA  EFE1  F00D         	goto	l9896
 27469   001BBE                     u7350:
 27470   001BBE  EF87  F00B         	goto	l9728
 27471   001BC2                     l9896:
 27472                           
 27473                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27474   001BC2  EE20 F002          	lfsr	2,2
 27475   001BC6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27476   001BC8  26D9               	addwf	fsr2l,f,c
 27477   001BCA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27478   001BCC  22DA               	addwfc	fsr2h,f,c
 27479   001BCE  50DE               	movf	postinc2,w,c
 27480   001BD0  0105               	movlb	5	; () banked
 27481   001BD2  198E               	xorwf	(_nn+1)& (0+255),w,b
 27482   001BD4  A4D8               	btfss	status,2,c
 27483   001BD6  EFEF  F00D         	goto	u7361
 27484   001BDA  EFF1  F00D         	goto	u7360
 27485   001BDE                     u7361:
 27486   001BDE  EF87  F00B         	goto	l9728
 27487   001BE2                     u7360:
 27488   001BE2                     
 27489                           ; BSR set to: 5
 27490   001BE2  EE20 F003          	lfsr	2,3
 27491   001BE6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27492   001BE8  26D9               	addwf	fsr2l,f,c
 27493   001BEA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27494   001BEC  22DA               	addwfc	fsr2h,f,c
 27495   001BEE  518D               	movf	_nn& (0+255),w,b
 27496   001BF0  18DE               	xorwf	postinc2,w,c
 27497   001BF2  B4D8               	btfsc	status,2,c
 27498   001BF4  EFFE  F00D         	goto	u7371
 27499   001BF8  EF00  F00E         	goto	u7370
 27500   001BFC                     u7371:
 27501   001BFC  EF02  F00E         	goto	l9904
 27502   001C00                     u7370:
 27503   001C00  EF87  F00B         	goto	l9728
 27504   001C04                     l9904:
 27505                           
 27506                           ; BSR set to: 5
 27507                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 27508   001C04  EC62  F03A         	call	_doNnevn	;wreg free
 27509   001C08  EF87  F00B         	goto	l9728
 27510   001C0C                     l9910:
 27511                           
 27512                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27513   001C0C  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27514   001C10  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27515   001C14  0E03               	movlw	3
 27516   001C16  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27517   001C18  0E00               	movlw	0
 27518   001C1A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27519   001C1C  ECB0  F034         	call	_teachCheckLen	;wreg free
 27520   001C20  06E8               	decf	wreg,f,c
 27521   001C22  A4D8               	btfss	status,2,c
 27522   001C24  EF16  F00E         	goto	u7381
 27523   001C28  EF18  F00E         	goto	u7380
 27524   001C2C                     u7381:
 27525   001C2C  EF1A  F00E         	goto	l9916
 27526   001C30                     u7380:
 27527   001C30  EF87  F00B         	goto	l9728
 27528   001C34                     l9916:
 27529                           
 27530                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27531   001C34  EE20 F002          	lfsr	2,2
 27532   001C38  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27533   001C3A  26D9               	addwf	fsr2l,f,c
 27534   001C3C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27535   001C3E  22DA               	addwfc	fsr2h,f,c
 27536   001C40  50DE               	movf	postinc2,w,c
 27537   001C42  0105               	movlb	5	; () banked
 27538   001C44  198E               	xorwf	(_nn+1)& (0+255),w,b
 27539   001C46  A4D8               	btfss	status,2,c
 27540   001C48  EF28  F00E         	goto	u7391
 27541   001C4C  EF2A  F00E         	goto	u7390
 27542   001C50                     u7391:
 27543   001C50  EF87  F00B         	goto	l9728
 27544   001C54                     u7390:
 27545   001C54                     
 27546                           ; BSR set to: 5
 27547   001C54  EE20 F003          	lfsr	2,3
 27548   001C58  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27549   001C5A  26D9               	addwf	fsr2l,f,c
 27550   001C5C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27551   001C5E  22DA               	addwfc	fsr2h,f,c
 27552   001C60  518D               	movf	_nn& (0+255),w,b
 27553   001C62  18DE               	xorwf	postinc2,w,c
 27554   001C64  B4D8               	btfsc	status,2,c
 27555   001C66  EF37  F00E         	goto	u7401
 27556   001C6A  EF39  F00E         	goto	u7400
 27557   001C6E                     u7401:
 27558   001C6E  EF3B  F00E         	goto	l9924
 27559   001C72                     u7400:
 27560   001C72  EF87  F00B         	goto	l9728
 27561   001C76                     l9924:
 27562                           
 27563                           ; BSR set to: 5
 27564                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 27565   001C76  EC3C  F03A         	call	_doRqevn	;wreg free
 27566   001C7A  EF87  F00B         	goto	l9728
 27567   001C7E                     l9930:
 27568                           
 27569                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27570   001C7E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27571   001C82  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27572   001C86  0E04               	movlw	4
 27573   001C88  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27574   001C8A  0E00               	movlw	0
 27575   001C8C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27576   001C8E  ECB0  F034         	call	_teachCheckLen	;wreg free
 27577   001C92  06E8               	decf	wreg,f,c
 27578   001C94  A4D8               	btfss	status,2,c
 27579   001C96  EF4F  F00E         	goto	u7411
 27580   001C9A  EF51  F00E         	goto	u7410
 27581   001C9E                     u7411:
 27582   001C9E  EF53  F00E         	goto	l9936
 27583   001CA2                     u7410:
 27584   001CA2  EF87  F00B         	goto	l9728
 27585   001CA6                     l9936:
 27586                           
 27587                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27588   001CA6  EE20 F002          	lfsr	2,2
 27589   001CAA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27590   001CAC  26D9               	addwf	fsr2l,f,c
 27591   001CAE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27592   001CB0  22DA               	addwfc	fsr2h,f,c
 27593   001CB2  50DE               	movf	postinc2,w,c
 27594   001CB4  0105               	movlb	5	; () banked
 27595   001CB6  198E               	xorwf	(_nn+1)& (0+255),w,b
 27596   001CB8  A4D8               	btfss	status,2,c
 27597   001CBA  EF61  F00E         	goto	u7421
 27598   001CBE  EF63  F00E         	goto	u7420
 27599   001CC2                     u7421:
 27600   001CC2  EF87  F00B         	goto	l9728
 27601   001CC6                     u7420:
 27602   001CC6                     
 27603                           ; BSR set to: 5
 27604   001CC6  EE20 F003          	lfsr	2,3
 27605   001CCA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27606   001CCC  26D9               	addwf	fsr2l,f,c
 27607   001CCE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27608   001CD0  22DA               	addwfc	fsr2h,f,c
 27609   001CD2  518D               	movf	_nn& (0+255),w,b
 27610   001CD4  18DE               	xorwf	postinc2,w,c
 27611   001CD6  B4D8               	btfsc	status,2,c
 27612   001CD8  EF70  F00E         	goto	u7431
 27613   001CDC  EF72  F00E         	goto	u7430
 27614   001CE0                     u7431:
 27615   001CE0  EF74  F00E         	goto	l9944
 27616   001CE4                     u7430:
 27617   001CE4  EF87  F00B         	goto	l9728
 27618   001CE8                     l9944:
 27619                           
 27620                           ; BSR set to: 5
 27621                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 27622   001CE8  EE20 F004          	lfsr	2,4
 27623   001CEC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27624   001CEE  26D9               	addwf	fsr2l,f,c
 27625   001CF0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27626   001CF2  22DA               	addwfc	fsr2h,f,c
 27627   001CF4  50DF               	movf	indf2,w,c
 27628   001CF6  ECF1  F034         	call	_doNenrd
 27629   001CFA  EF87  F00B         	goto	l9728
 27630   001CFE                     l9950:
 27631                           
 27632                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 27633   001CFE  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27634   001D02  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27635   001D06  0E05               	movlw	5
 27636   001D08  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27637   001D0A  0E00               	movlw	0
 27638   001D0C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27639   001D0E  ECB0  F034         	call	_teachCheckLen	;wreg free
 27640   001D12  06E8               	decf	wreg,f,c
 27641   001D14  A4D8               	btfss	status,2,c
 27642   001D16  EF8F  F00E         	goto	u7441
 27643   001D1A  EF91  F00E         	goto	u7440
 27644   001D1E                     u7441:
 27645   001D1E  EF93  F00E         	goto	l9956
 27646   001D22                     u7440:
 27647   001D22  EF87  F00B         	goto	l9728
 27648   001D26                     l9956:
 27649                           
 27650                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27651   001D26  EE20 F002          	lfsr	2,2
 27652   001D2A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27653   001D2C  26D9               	addwf	fsr2l,f,c
 27654   001D2E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27655   001D30  22DA               	addwfc	fsr2h,f,c
 27656   001D32  50DE               	movf	postinc2,w,c
 27657   001D34  0105               	movlb	5	; () banked
 27658   001D36  198E               	xorwf	(_nn+1)& (0+255),w,b
 27659   001D38  A4D8               	btfss	status,2,c
 27660   001D3A  EFA1  F00E         	goto	u7451
 27661   001D3E  EFA3  F00E         	goto	u7450
 27662   001D42                     u7451:
 27663   001D42  EF87  F00B         	goto	l9728
 27664   001D46                     u7450:
 27665   001D46                     
 27666                           ; BSR set to: 5
 27667   001D46  EE20 F003          	lfsr	2,3
 27668   001D4A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27669   001D4C  26D9               	addwf	fsr2l,f,c
 27670   001D4E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27671   001D50  22DA               	addwfc	fsr2h,f,c
 27672   001D52  518D               	movf	_nn& (0+255),w,b
 27673   001D54  18DE               	xorwf	postinc2,w,c
 27674   001D56  B4D8               	btfsc	status,2,c
 27675   001D58  EFB0  F00E         	goto	u7461
 27676   001D5C  EFB2  F00E         	goto	u7460
 27677   001D60                     u7461:
 27678   001D60  EFB4  F00E         	goto	l9964
 27679   001D64                     u7460:
 27680   001D64  EF87  F00B         	goto	l9728
 27681   001D68                     l9964:
 27682                           
 27683                           ; BSR set to: 5
 27684                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 27685   001D68  EE20 F005          	lfsr	2,5
 27686   001D6C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27687   001D6E  26D9               	addwf	fsr2l,f,c
 27688   001D70  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27689   001D72  22DA               	addwfc	fsr2h,f,c
 27690   001D74  50DF               	movf	indf2,w,c
 27691   001D76  6E2C               	movwf	doReval@evNum^(0+1280),c
 27692   001D78  EE20 F004          	lfsr	2,4
 27693   001D7C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27694   001D7E  26D9               	addwf	fsr2l,f,c
 27695   001D80  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27696   001D82  22DA               	addwfc	fsr2h,f,c
 27697   001D84  50DF               	movf	indf2,w,c
 27698   001D86  ECF5  F029         	call	_doReval
 27699   001D8A  EF87  F00B         	goto	l9728
 27700   001D8E                     l9970:
 27701                           
 27702                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 27703   001D8E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27704   001D92  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27705   001D96  0E08               	movlw	8
 27706   001D98  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27707   001D9A  0E01               	movlw	1
 27708   001D9C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27709   001D9E  ECB0  F034         	call	_teachCheckLen	;wreg free
 27710   001DA2  06E8               	decf	wreg,f,c
 27711   001DA4  A4D8               	btfss	status,2,c
 27712   001DA6  EFD7  F00E         	goto	u7471
 27713   001DAA  EFD9  F00E         	goto	u7470
 27714   001DAE                     u7471:
 27715   001DAE  EFDB  F00E         	goto	l9976
 27716   001DB2                     u7470:
 27717   001DB2  EF87  F00B         	goto	l9728
 27718   001DB6                     l9976:
 27719                           
 27720                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 27721   001DB6  EE20 F003          	lfsr	2,3
 27722   001DBA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27723   001DBC  26D9               	addwf	fsr2l,f,c
 27724   001DBE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27725   001DC0  22DA               	addwfc	fsr2h,f,c
 27726   001DC2  50DF               	movf	indf2,w,c
 27727   001DC4  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27728   001DC6  EE20 F002          	lfsr	2,2
 27729   001DCA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27730   001DCC  26D9               	addwf	fsr2l,f,c
 27731   001DCE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27732   001DD0  22DA               	addwfc	fsr2h,f,c
 27733   001DD2  50DF               	movf	indf2,w,c
 27734   001DD4  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27735   001DD6  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27736   001DD8  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27737   001DDA  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27738   001DDE  EE20 F005          	lfsr	2,5
 27739   001DE2  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27740   001DE4  26D9               	addwf	fsr2l,f,c
 27741   001DE6  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27742   001DE8  22DA               	addwfc	fsr2h,f,c
 27743   001DEA  50DF               	movf	indf2,w,c
 27744   001DEC  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27745   001DEE  EE20 F004          	lfsr	2,4
 27746   001DF2  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27747   001DF4  26D9               	addwf	fsr2l,f,c
 27748   001DF6  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27749   001DF8  22DA               	addwfc	fsr2h,f,c
 27750   001DFA  50DF               	movf	indf2,w,c
 27751   001DFC  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27752   001DFE  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27753   001E00  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27754   001E02  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27755   001E06  EE20 F007          	lfsr	2,7
 27756   001E0A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27757   001E0C  26D9               	addwf	fsr2l,f,c
 27758   001E0E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27759   001E10  22DA               	addwfc	fsr2h,f,c
 27760   001E12  50DF               	movf	indf2,w,c
 27761   001E14  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27762   001E16  EE20 F008          	lfsr	2,8
 27763   001E1A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27764   001E1C  26D9               	addwf	fsr2l,f,c
 27765   001E1E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27766   001E20  22DA               	addwfc	fsr2h,f,c
 27767   001E22  50DF               	movf	indf2,w,c
 27768   001E24  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27769   001E26  ECB5  F02B         	call	_doEvlrn	;wreg free
 27770   001E2A  EF87  F00B         	goto	l9728
 27771   001E2E                     l9984:
 27772   001E2E  EE20 F001          	lfsr	2,1
 27773   001E32  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27774   001E34  26D9               	addwf	fsr2l,f,c
 27775   001E36  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27776   001E38  22DA               	addwfc	fsr2h,f,c
 27777   001E3A  50DF               	movf	indf2,w,c
 27778   001E3C  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27779   001E3E  6A57               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 27780                           
 27781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27782                           ; Switch size 1, requested type "simple"
 27783                           ; Number of cases is 1, Range of values is 0 to 0
 27784                           ; switch strategies available:
 27785                           ; Name         Instructions Cycles
 27786                           ; simple_byte            4     3 (average)
 27787                           ;	Chosen strategy is simple_byte
 27788   001E40  5057               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 27789   001E42  0A00               	xorlw	0	; case 0
 27790   001E44  B4D8               	btfsc	status,2,c
 27791   001E46  EF27  F00F         	goto	l11518
 27792   001E4A  EF05  F00C         	goto	l9774
 27793   001E4E                     l11518:
 27794                           
 27795                           ; Switch size 1, requested type "simple"
 27796                           ; Number of cases is 13, Range of values is 83 to 245
 27797                           ; switch strategies available:
 27798                           ; Name         Instructions Cycles
 27799                           ; simple_byte           40    21 (average)
 27800                           ;	Chosen strategy is simple_byte
 27801   001E4E  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27802   001E50  0A53               	xorlw	83	; case 83
 27803   001E52  B4D8               	btfsc	status,2,c
 27804   001E54  EF75  F00B         	goto	l9726
 27805   001E58  0A07               	xorlw	7	; case 84
 27806   001E5A  B4D8               	btfsc	status,2,c
 27807   001E5C  EF07  F00D         	goto	l9828
 27808   001E60  0A01               	xorlw	1	; case 85
 27809   001E62  B4D8               	btfsc	status,2,c
 27810   001E64  EF3C  F00D         	goto	l9848
 27811   001E68  0A03               	xorlw	3	; case 86
 27812   001E6A  B4D8               	btfsc	status,2,c
 27813   001E6C  EFCD  F00D         	goto	l9890
 27814   001E70  0A01               	xorlw	1	; case 87
 27815   001E72  B4D8               	btfsc	status,2,c
 27816   001E74  EF94  F00D         	goto	l9870
 27817   001E78  0A0F               	xorlw	15	; case 88
 27818   001E7A  B4D8               	btfsc	status,2,c
 27819   001E7C  EF06  F00E         	goto	l9910
 27820   001E80  0A2A               	xorlw	42	; case 114
 27821   001E82  B4D8               	btfsc	status,2,c
 27822   001E84  EF3F  F00E         	goto	l9930
 27823   001E88  0A04               	xorlw	4	; case 118
 27824   001E8A  B4D8               	btfsc	status,2,c
 27825   001E8C  EFAF  F00B         	goto	l9744
 27826   001E90  0AE3               	xorlw	227	; case 149
 27827   001E92  B4D8               	btfsc	status,2,c
 27828   001E94  EF6B  F00C         	goto	l9796
 27829   001E98  0A09               	xorlw	9	; case 156
 27830   001E9A  B4D8               	btfsc	status,2,c
 27831   001E9C  EF7F  F00E         	goto	l9950
 27832   001EA0  0A2E               	xorlw	46	; case 178
 27833   001EA2  B4D8               	btfsc	status,2,c
 27834   001EA4  EFB5  F00C         	goto	l9812
 27835   001EA8  0A60               	xorlw	96	; case 210
 27836   001EAA  B4D8               	btfsc	status,2,c
 27837   001EAC  EF08  F00C         	goto	l9778
 27838   001EB0  0A27               	xorlw	39	; case 245
 27839   001EB2  B4D8               	btfsc	status,2,c
 27840   001EB4  EFC7  F00E         	goto	l9970
 27841   001EB8  EF05  F00C         	goto	l9774
 27842   001EBC                     l736:
 27843   001EBC  0012               	return		;funcret
 27844   001EBE                     __end_of_teachProcessMessage:
 27845                           	callstack 0
 27846                           
 27847 ;; *************** function _teachCheckLen *****************
 27848 ;; Defined at:
 27849 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27850 ;; Parameters:    Size  Location     Type
 27851 ;;  m               2   48[COMRAM] PTR struct Message
 27852 ;;		 -> poll@m(9), 
 27853 ;;  needed          1   50[COMRAM] unsigned char 
 27854 ;;  learn           1   51[COMRAM] unsigned char 
 27855 ;; Auto vars:     Size  Location     Type
 27856 ;;		None
 27857 ;; Return value:  Size  Location     Type
 27858 ;;                  1    wreg      enum E23340
 27859 ;; Registers used:
 27860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27861 ;; Tracked objects:
 27862 ;;		On entry : 0/0
 27863 ;;		On exit  : 0/0
 27864 ;;		Unchanged: 0/0
 27865 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27869 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27870 ;;Total ram usage:        5 bytes
 27871 ;; Hardware stack levels used: 1
 27872 ;; Hardware stack levels required when called: 7
 27873 ;; This function calls:
 27874 ;;		_checkLen
 27875 ;;		_sendMessage5
 27876 ;; This function is called by:
 27877 ;;		_teachProcessMessage
 27878 ;; This function uses a non-reentrant model
 27879 ;;
 27880                           
 27881                           	psect	text23
 27882   006960                     __ptext23:
 27883                           	callstack 0
 27884   006960                     _teachCheckLen:
 27885                           	callstack 117
 27886   006960                     
 27887                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 27888   006960  5034               	movf	teachCheckLen@learn^(0+1280),w,c
 27889   006962  B4D8               	btfsc	status,2,c
 27890   006964  EFB6  F034         	goto	u6041
 27891   006968  EFB8  F034         	goto	u6040
 27892   00696C                     u6041:
 27893   00696C  EFE6  F034         	goto	l8650
 27894   006970                     u6040:
 27895   006970                     
 27896                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 27897   006970  C531  F4D9         	movff	teachCheckLen@m,fsr2l
 27898   006974  C532  F4DA         	movff	teachCheckLen@m+1,fsr2h
 27899   006978  5033               	movf	teachCheckLen@needed^(0+1280),w,c
 27900   00697A  5CDE               	subwf	postinc2,w,c
 27901   00697C  B0D8               	btfsc	status,0,c
 27902   00697E  EFC3  F034         	goto	u6051
 27903   006982  EFC5  F034         	goto	u6050
 27904   006986                     u6051:
 27905   006986  EFE3  F034         	goto	l8646
 27906   00698A                     u6050:
 27907   00698A                     
 27908                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 27909   00698A  0105               	movlb	5	; () banked
 27910   00698C  A1A4               	btfss	_mode_flags& (0+255),0,b
 27911   00698E  EFCB  F034         	goto	u6061
 27912   006992  EFCD  F034         	goto	u6060
 27913   006996                     u6061:
 27914   006996  EFE0  F034         	goto	l8642
 27915   00699A                     u6060:
 27916   00699A                     
 27917                           ; BSR set to: 5
 27918                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 27919   00699A  C58E  F526         	movff	_nn+1,sendMessage5@data1
 27920   00699E  C58D  F527         	movff	_nn,sendMessage5@data2
 27921   0069A2  EE20 F001          	lfsr	2,1
 27922   0069A6  5031               	movf	teachCheckLen@m^(0+1280),w,c
 27923   0069A8  26D9               	addwf	fsr2l,f,c
 27924   0069AA  5032               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 27925   0069AC  22DA               	addwfc	fsr2h,f,c
 27926   0069AE  50DF               	movf	indf2,w,c
 27927   0069B0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27928   0069B2  0E04               	movlw	4
 27929   0069B4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27930   0069B6  0E01               	movlw	1
 27931   0069B8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27932   0069BA  0EAF               	movlw	175
 27933   0069BC  EC28  F03D         	call	_sendMessage5
 27934   0069C0                     l8642:
 27935                           
 27936                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 27937   0069C0  0E01               	movlw	1
 27938   0069C2  EFF0  F034         	goto	l800
 27939   0069C6                     l8646:
 27940                           
 27941                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 27942   0069C6  0E00               	movlw	0
 27943   0069C8  EFF0  F034         	goto	l800
 27944   0069CC                     l8650:
 27945                           
 27946                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 27947   0069CC  C531  F52C         	movff	teachCheckLen@m,checkLen@m
 27948   0069D0  C532  F52D         	movff	teachCheckLen@m+1,checkLen@m+1
 27949   0069D4  C533  F52E         	movff	teachCheckLen@needed,checkLen@needed
 27950   0069D8  0E04               	movlw	4
 27951   0069DA  6E2F               	movwf	checkLen@service^(0+1280),c
 27952   0069DC  ECB1  F030         	call	_checkLen	;wreg free
 27953   0069E0                     l800:
 27954   0069E0  0012               	return		;funcret
 27955   0069E2                     __end_of_teachCheckLen:
 27956                           	callstack 0
 27957                           
 27958 ;; *************** function _doRqevn *****************
 27959 ;; Defined at:
 27960 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27961 ;; Parameters:    Size  Location     Type
 27962 ;;		None
 27963 ;; Auto vars:     Size  Location     Type
 27964 ;;  eventNumber     2   41[COMRAM] unsigned short 
 27965 ;;  i               1   44[COMRAM] unsigned char 
 27966 ;;  count           1   43[COMRAM] unsigned char 
 27967 ;; Return value:  Size  Location     Type
 27968 ;;                  1    wreg      void 
 27969 ;; Registers used:
 27970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27971 ;; Tracked objects:
 27972 ;;		On entry : 0/0
 27973 ;;		On exit  : 0/0
 27974 ;;		Unchanged: 0/0
 27975 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27977 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27980 ;;Total ram usage:        4 bytes
 27981 ;; Hardware stack levels used: 1
 27982 ;; Hardware stack levels required when called: 6
 27983 ;; This function calls:
 27984 ;;		_getEN
 27985 ;;		_sendMessage3
 27986 ;; This function is called by:
 27987 ;;		_teachProcessMessage
 27988 ;; This function uses a non-reentrant model
 27989 ;;
 27990                           
 27991                           	psect	text24
 27992   007478                     __ptext24:
 27993                           	callstack 0
 27994   007478                     _doRqevn:
 27995                           	callstack 118
 27996   007478                     
 27997                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 27998   007478  6A2C               	clrf	doRqevn@count^(0+1280),c
 27999                           
 28000                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<255; i++) {
 28001   00747A  6A2D               	clrf	doRqevn@i^(0+1280),c
 28002   00747C                     l8758:
 28003                           
 28004                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 28005   00747C  502D               	movf	doRqevn@i^(0+1280),w,c
 28006   00747E  EC0C  F030         	call	_getEN
 28007   007482  C50D  F52A         	movff	?_getEN,doRqevn@eventNumber
 28008   007486  C50E  F52B         	movff	?_getEN+1,doRqevn@eventNumber+1
 28009   00748A                     
 28010                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 28011   00748A  502A               	movf	doRqevn@eventNumber^(0+1280),w,c
 28012   00748C  102B               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 28013   00748E  B4D8               	btfsc	status,2,c
 28014   007490  EF4C  F03A         	goto	u6171
 28015   007494  EF4E  F03A         	goto	u6170
 28016   007498                     u6171:
 28017   007498  EF4F  F03A         	goto	l840
 28018   00749C                     u6170:
 28019   00749C                     
 28020                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 28021   00749C  2A2C               	incf	doRqevn@count^(0+1280),f,c
 28022   00749E                     l840:
 28023                           
 28024                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 28025   00749E  2A2D               	incf	doRqevn@i^(0+1280),f,c
 28026   0074A0  282D               	incf	doRqevn@i^(0+1280),w,c
 28027   0074A2  A4D8               	btfss	status,2,c
 28028   0074A4  EF56  F03A         	goto	u6181
 28029   0074A8  EF58  F03A         	goto	u6180
 28030   0074AC                     u6181:
 28031   0074AC  EF3E  F03A         	goto	l8758
 28032   0074B0                     u6180:
 28033   0074B0                     
 28034                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28035   0074B0  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28036   0074B4  C58D  F527         	movff	_nn,sendMessage3@data2
 28037   0074B8  C52C  F528         	movff	doRqevn@count,sendMessage3@data3
 28038   0074BC  0E74               	movlw	116
 28039   0074BE  ECE9  F03C         	call	_sendMessage3
 28040   0074C2  0012               	return		;funcret
 28041   0074C4                     __end_of_doRqevn:
 28042                           	callstack 0
 28043                           
 28044 ;; *************** function _doReval *****************
 28045 ;; Defined at:
 28046 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28047 ;; Parameters:    Size  Location     Type
 28048 ;;  enNum           1    wreg     unsigned char 
 28049 ;;  evNum           1   43[COMRAM] unsigned char 
 28050 ;; Auto vars:     Size  Location     Type
 28051 ;;  enNum           1   45[COMRAM] unsigned char 
 28052 ;;  evVal           2   47[COMRAM] int 
 28053 ;;  tableIndex      1   46[COMRAM] unsigned char 
 28054 ;;  evIndex         1   44[COMRAM] unsigned char 
 28055 ;; Return value:  Size  Location     Type
 28056 ;;                  1    wreg      void 
 28057 ;; Registers used:
 28058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28059 ;; Tracked objects:
 28060 ;;		On entry : 0/0
 28061 ;;		On exit  : 0/0
 28062 ;;		Unchanged: 0/0
 28063 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28064 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28065 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28067 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28068 ;;Total ram usage:        6 bytes
 28069 ;; Hardware stack levels used: 1
 28070 ;; Hardware stack levels required when called: 6
 28071 ;; This function calls:
 28072 ;;		_evtIdxToTableIndex
 28073 ;;		_findServiceIndex
 28074 ;;		_getEv
 28075 ;;		_sendMessage3
 28076 ;;		_sendMessage5
 28077 ;;		_startTimedResponse
 28078 ;; This function is called by:
 28079 ;;		_teachProcessMessage
 28080 ;; This function uses a non-reentrant model
 28081 ;;
 28082                           
 28083                           	psect	text25
 28084   0053EA                     __ptext25:
 28085                           	callstack 0
 28086   0053EA                     _doReval:
 28087                           	callstack 118
 28088                           
 28089                           ;incstack = 0
 28090                           ;doReval@enNum stored from wreg
 28091   0053EA  6E2E               	movwf	doReval@enNum^(0+1280),c
 28092   0053EC                     
 28093                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 28094   0053EC  502E               	movf	doReval@enNum^(0+1280),w,c
 28095   0053EE  EC3F  F03E         	call	_evtIdxToTableIndex
 28096   0053F2  6E2F               	movwf	doReval@tableIndex^(0+1280),c
 28097   0053F4                     
 28098                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 255) {
 28099   0053F4  282F               	incf	doReval@tableIndex^(0+1280),w,c
 28100   0053F6  A4D8               	btfss	status,2,c
 28101   0053F8  EF00  F02A         	goto	u6201
 28102   0053FC  EF02  F02A         	goto	u6200
 28103   005400                     u6201:
 28104   005400  EF0D  F02A         	goto	l8788
 28105   005404                     u6200:
 28106   005404                     
 28107                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28108   005404  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28109   005408  C58D  F527         	movff	_nn,sendMessage3@data2
 28110   00540C  0E06               	movlw	6
 28111   00540E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28112   005410  0E6F               	movlw	111
 28113   005412  ECE9  F03C         	call	_sendMessage3
 28114   005416  EF69  F02A         	goto	l853
 28115   00541A                     l8788:
 28116                           
 28117                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 28118   00541A  042C               	decf	doReval@evNum^(0+1280),w,c
 28119   00541C  6E2D               	movwf	doReval@evIndex^(0+1280),c
 28120   00541E                     
 28121                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 28122   00541E  502C               	movf	doReval@evNum^(0+1280),w,c
 28123   005420  A4D8               	btfss	status,2,c
 28124   005422  EF15  F02A         	goto	u6211
 28125   005426  EF17  F02A         	goto	u6210
 28126   00542A                     u6211:
 28127   00542A  EF32  F02A         	goto	l8800
 28128   00542E                     u6210:
 28129   00542E                     
 28130                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 248;
 28131   00542E  0E00               	movlw	0
 28132   005430  6E31               	movwf	(doReval@evVal+1)^(0+1280),c
 28133   005432  0EF8               	movlw	248
 28134   005434  6E30               	movwf	doReval@evVal^(0+1280),c
 28135   005436                     
 28136                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 28137   005436  0105               	movlb	5	; () banked
 28138   005438  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28139   00543A  EF21  F02A         	goto	u6221
 28140   00543E  EF23  F02A         	goto	u6220
 28141   005442                     u6221:
 28142   005442  EF3B  F02A         	goto	l8802
 28143   005446                     u6220:
 28144   005446                     
 28145                           ; BSR set to: 5
 28146                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 28147   005446  0EB5               	movlw	181
 28148   005448  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28149   00544A                     
 28150                           ; BSR set to: 5
 28151                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28152   00544A  0E04               	movlw	4
 28153   00544C  EC5D  F033         	call	_findServiceIndex
 28154   005450  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28155   005452  0E94               	movlw	low _reqevCallback
 28156   005454  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28157   005456  0E56               	movlw	high _reqevCallback
 28158   005458  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28159   00545A  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28160   00545C  EC15  F039         	call	_startTimedResponse
 28161   005460  EF3B  F02A         	goto	l8802
 28162   005464                     l8800:
 28163                           
 28164                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 28165   005464  C52D  F50D         	movff	doReval@evIndex,getEv@evNum
 28166   005468  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28167   00546A  EC01  F031         	call	_getEv
 28168   00546E  C50D  F530         	movff	?_getEv,doReval@evVal
 28169   005472  C50E  F531         	movff	?_getEv+1,doReval@evVal+1
 28170   005476                     l8802:
 28171                           
 28172                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 28173   005476  BE31               	btfsc	(doReval@evVal+1)^(0+1280),7,c
 28174   005478  EF42  F02A         	goto	u6230
 28175   00547C  EF40  F02A         	goto	u6231
 28176   005480                     u6231:
 28177   005480  EF5C  F02A         	goto	l8808
 28178   005484                     u6230:
 28179   005484                     
 28180                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28181   005484  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28182   005488  C58D  F527         	movff	_nn,sendMessage3@data2
 28183   00548C  5030               	movf	doReval@evVal^(0+1280),w,c
 28184   00548E  0800               	sublw	0
 28185   005490  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28186   005492  0E6F               	movlw	111
 28187   005494  ECE9  F03C         	call	_sendMessage3
 28188                           
 28189                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28190   005498  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28191   00549C  C58D  F527         	movff	_nn,sendMessage5@data2
 28192   0054A0  0E9C               	movlw	156
 28193   0054A2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28194   0054A4  0E04               	movlw	4
 28195   0054A6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28196   0054A8  5030               	movf	doReval@evVal^(0+1280),w,c
 28197   0054AA  0800               	sublw	0
 28198   0054AC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28199   0054AE  0EAF               	movlw	175
 28200   0054B0  EC28  F03D         	call	_sendMessage5
 28201   0054B4  EF69  F02A         	goto	l853
 28202   0054B8                     l8808:
 28203                           
 28204                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 28205   0054B8  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28206   0054BC  C58D  F527         	movff	_nn,sendMessage5@data2
 28207   0054C0  C52E  F528         	movff	doReval@enNum,sendMessage5@data3
 28208   0054C4  C52C  F529         	movff	doReval@evNum,sendMessage5@data4
 28209   0054C8  C530  F52A         	movff	doReval@evVal,sendMessage5@data5
 28210   0054CC  0EB5               	movlw	181
 28211   0054CE  EC28  F03D         	call	_sendMessage5
 28212   0054D2                     l853:
 28213   0054D2  0012               	return		;funcret
 28214   0054D4                     __end_of_doReval:
 28215                           	callstack 0
 28216                           
 28217 ;; *************** function _doReqev *****************
 28218 ;; Defined at:
 28219 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28220 ;; Parameters:    Size  Location     Type
 28221 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 28222 ;;  eventNumber     2   48[COMRAM] unsigned short 
 28223 ;;  evNum           1   50[COMRAM] unsigned char 
 28224 ;; Auto vars:     Size  Location     Type
 28225 ;;  evVal           2   51[COMRAM] short 
 28226 ;;  tableIndex      1   53[COMRAM] unsigned char 
 28227 ;; Return value:  Size  Location     Type
 28228 ;;                  1    wreg      void 
 28229 ;; Registers used:
 28230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28231 ;; Tracked objects:
 28232 ;;		On entry : 0/0
 28233 ;;		On exit  : 0/0
 28234 ;;		Unchanged: 0/0
 28235 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28236 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28237 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28239 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28240 ;;Total ram usage:        8 bytes
 28241 ;; Hardware stack levels used: 1
 28242 ;; Hardware stack levels required when called: 6
 28243 ;; This function calls:
 28244 ;;		_findEvent
 28245 ;;		_findServiceIndex
 28246 ;;		_getEv
 28247 ;;		_numEv
 28248 ;;		_sendMessage3
 28249 ;;		_sendMessage5
 28250 ;;		_sendMessage6
 28251 ;;		_startTimedResponse
 28252 ;; This function is called by:
 28253 ;;		_teachProcessMessage
 28254 ;; This function uses a non-reentrant model
 28255 ;;
 28256                           
 28257                           	psect	text26
 28258   0043DA                     __ptext26:
 28259                           	callstack 0
 28260   0043DA                     _doReqev:
 28261                           	callstack 118
 28262   0043DA                     
 28263                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 28264   0043DA  C52F  F522         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 28265   0043DE  C530  F523         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 28266   0043E2  C531  F524         	movff	doReqev@eventNumber,findEvent@eventNumber
 28267   0043E6  C532  F525         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 28268   0043EA  EC5E  F02E         	call	_findEvent	;wreg free
 28269   0043EE  6E36               	movwf	doReqev@tableIndex^(0+1280),c
 28270   0043F0                     
 28271                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 28272   0043F0  2836               	incf	doReqev@tableIndex^(0+1280),w,c
 28273   0043F2  A4D8               	btfss	status,2,c
 28274   0043F4  EFFE  F021         	goto	u6101
 28275   0043F8  EF00  F022         	goto	u6100
 28276   0043FC                     u6101:
 28277   0043FC  EF18  F022         	goto	l8696
 28278   004400                     u6100:
 28279   004400                     
 28280                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 28281   004400  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28282   004404  C58D  F527         	movff	_nn,sendMessage3@data2
 28283   004408  0E07               	movlw	7
 28284   00440A  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28285   00440C  0E6F               	movlw	111
 28286   00440E  ECE9  F03C         	call	_sendMessage3
 28287                           
 28288                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 28289   004412  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28290   004416  C58D  F527         	movff	_nn,sendMessage5@data2
 28291   00441A  0EB2               	movlw	178
 28292   00441C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28293   00441E  0E04               	movlw	4
 28294   004420  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28295   004422  0E07               	movlw	7
 28296   004424  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28297   004426  0EAF               	movlw	175
 28298   004428  EC28  F03D         	call	_sendMessage5
 28299   00442C  EFA6  F022         	goto	l865
 28300   004430                     l8696:
 28301                           
 28302                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 252) {
 28303   004430  0EFC               	movlw	252
 28304   004432  6433               	cpfsgt	doReqev@evNum^(0+1280),c
 28305   004434  EF1E  F022         	goto	u6111
 28306   004438  EF20  F022         	goto	u6110
 28307   00443C                     u6111:
 28308   00443C  EF38  F022         	goto	l8702
 28309   004440                     u6110:
 28310   004440                     
 28311                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28312   004440  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28313   004444  C58D  F527         	movff	_nn,sendMessage3@data2
 28314   004448  0E06               	movlw	6
 28315   00444A  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28316   00444C  0E6F               	movlw	111
 28317   00444E  ECE9  F03C         	call	_sendMessage3
 28318                           
 28319                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 28320   004452  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28321   004456  C58D  F527         	movff	_nn,sendMessage5@data2
 28322   00445A  0EB2               	movlw	178
 28323   00445C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28324   00445E  0E04               	movlw	4
 28325   004460  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28326   004462  0E06               	movlw	6
 28327   004464  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28328   004466  0EAF               	movlw	175
 28329   004468  EC28  F03D         	call	_sendMessage5
 28330   00446C  EFA6  F022         	goto	l865
 28331   004470                     l8702:
 28332                           
 28333                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 28334   004470  5033               	movf	doReqev@evNum^(0+1280),w,c
 28335   004472  A4D8               	btfss	status,2,c
 28336   004474  EF3E  F022         	goto	u6121
 28337   004478  EF40  F022         	goto	u6120
 28338   00447C                     u6121:
 28339   00447C  EF6D  F022         	goto	l8716
 28340   004480                     u6120:
 28341   004480                     
 28342                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 248;
 28343   004480  0E00               	movlw	0
 28344   004482  6E35               	movwf	(doReqev@evVal+1)^(0+1280),c
 28345   004484  0EF8               	movlw	248
 28346   004486  6E34               	movwf	doReqev@evVal^(0+1280),c
 28347   004488                     
 28348                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 28349   004488  0105               	movlb	5	; () banked
 28350   00448A  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28351   00448C  EF4A  F022         	goto	u6131
 28352   004490  EF4C  F022         	goto	u6130
 28353   004494                     u6131:
 28354   004494  EF76  F022         	goto	l8718
 28355   004498                     u6130:
 28356   004498                     
 28357                           ; BSR set to: 5
 28358                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 28359   004498  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28360   00449A  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28361   00449C  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28362   0044A0  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28363   0044A2  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28364   0044A4  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28365   0044A8  0E00               	movlw	0
 28366   0044AA  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 28367   0044AC  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28368   0044AE  EC51  F03E         	call	_numEv
 28369   0044B2  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 28370   0044B4  0ED3               	movlw	211
 28371   0044B6  ECBF  F03C         	call	_sendMessage6
 28372   0044BA                     
 28373                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 28374   0044BA  0ED3               	movlw	211
 28375   0044BC  0105               	movlb	5	; () banked
 28376   0044BE  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28377   0044C0                     
 28378                           ; BSR set to: 5
 28379                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28380   0044C0  0E04               	movlw	4
 28381   0044C2  EC5D  F033         	call	_findServiceIndex
 28382   0044C6  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28383   0044C8  0E94               	movlw	low _reqevCallback
 28384   0044CA  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28385   0044CC  0E56               	movlw	high _reqevCallback
 28386   0044CE  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28387   0044D0  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28388   0044D2  EC15  F039         	call	_startTimedResponse
 28389   0044D6  EFA6  F022         	goto	l865
 28390   0044DA                     l8716:
 28391                           
 28392                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 28393   0044DA  0433               	decf	doReqev@evNum^(0+1280),w,c
 28394   0044DC  6E0D               	movwf	getEv@evNum^(0+1280),c
 28395   0044DE  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28396   0044E0  EC01  F031         	call	_getEv
 28397   0044E4  C50D  F534         	movff	?_getEv,doReqev@evVal
 28398   0044E8  C50E  F535         	movff	?_getEv+1,doReqev@evVal+1
 28399   0044EC                     l8718:
 28400                           
 28401                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 28402   0044EC  BE35               	btfsc	(doReqev@evVal+1)^(0+1280),7,c
 28403   0044EE  EF7D  F022         	goto	u6140
 28404   0044F2  EF7B  F022         	goto	u6141
 28405   0044F6                     u6141:
 28406   0044F6  EF97  F022         	goto	l8724
 28407   0044FA                     u6140:
 28408   0044FA                     
 28409                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28410   0044FA  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28411   0044FE  C58D  F527         	movff	_nn,sendMessage3@data2
 28412   004502  5034               	movf	doReqev@evVal^(0+1280),w,c
 28413   004504  0800               	sublw	0
 28414   004506  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28415   004508  0E6F               	movlw	111
 28416   00450A  ECE9  F03C         	call	_sendMessage3
 28417                           
 28418                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28419   00450E  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28420   004512  C58D  F527         	movff	_nn,sendMessage5@data2
 28421   004516  0EB2               	movlw	178
 28422   004518  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28423   00451A  0E04               	movlw	4
 28424   00451C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28425   00451E  5034               	movf	doReqev@evVal^(0+1280),w,c
 28426   004520  0800               	sublw	0
 28427   004522  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28428   004524  0EAF               	movlw	175
 28429   004526  EC28  F03D         	call	_sendMessage5
 28430   00452A  EFA6  F022         	goto	l865
 28431   00452E                     l8724:
 28432                           
 28433                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 28434   00452E  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28435   004530  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28436   004532  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28437   004536  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28438   004538  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28439   00453A  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28440   00453E  C533  F52A         	movff	doReqev@evNum,sendMessage6@data5
 28441   004542  C534  F52B         	movff	doReqev@evVal,sendMessage6@data6
 28442   004546  0ED3               	movlw	211
 28443   004548  ECBF  F03C         	call	_sendMessage6
 28444   00454C                     l865:
 28445   00454C  0012               	return		;funcret
 28446   00454E                     __end_of_doReqev:
 28447                           	callstack 0
 28448                           
 28449 ;; *************** function _doNnevn *****************
 28450 ;; Defined at:
 28451 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28452 ;; Parameters:    Size  Location     Type
 28453 ;;		None
 28454 ;; Auto vars:     Size  Location     Type
 28455 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28456 ;;  i               1   44[COMRAM] unsigned char 
 28457 ;;  count           1   43[COMRAM] unsigned char 
 28458 ;; Return value:  Size  Location     Type
 28459 ;;                  1    wreg      void 
 28460 ;; Registers used:
 28461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28462 ;; Tracked objects:
 28463 ;;		On entry : 0/0
 28464 ;;		On exit  : 0/0
 28465 ;;		Unchanged: 0/0
 28466 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28471 ;;Total ram usage:        4 bytes
 28472 ;; Hardware stack levels used: 1
 28473 ;; Hardware stack levels required when called: 6
 28474 ;; This function calls:
 28475 ;;		_getEN
 28476 ;;		_sendMessage3
 28477 ;; This function is called by:
 28478 ;;		_teachProcessMessage
 28479 ;; This function uses a non-reentrant model
 28480 ;;
 28481                           
 28482                           	psect	text27
 28483   0074C4                     __ptext27:
 28484                           	callstack 0
 28485   0074C4                     _doNnevn:
 28486                           	callstack 118
 28487   0074C4                     
 28488                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 28489   0074C4  6A2C               	clrf	doNnevn@count^(0+1280),c
 28490                           
 28491                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<255; i++) {
 28492   0074C6  6A2D               	clrf	doNnevn@i^(0+1280),c
 28493   0074C8                     l8742:
 28494                           
 28495                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 28496   0074C8  502D               	movf	doNnevn@i^(0+1280),w,c
 28497   0074CA  EC0C  F030         	call	_getEN
 28498   0074CE  C50D  F52A         	movff	?_getEN,doNnevn@eventNumber
 28499   0074D2  C50E  F52B         	movff	?_getEN+1,doNnevn@eventNumber+1
 28500   0074D6                     
 28501                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 28502   0074D6  502A               	movf	doNnevn@eventNumber^(0+1280),w,c
 28503   0074D8  102B               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 28504   0074DA  A4D8               	btfss	status,2,c
 28505   0074DC  EF72  F03A         	goto	u6151
 28506   0074E0  EF74  F03A         	goto	u6150
 28507   0074E4                     u6151:
 28508   0074E4  EF75  F03A         	goto	l822
 28509   0074E8                     u6150:
 28510   0074E8                     
 28511                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 28512   0074E8  2A2C               	incf	doNnevn@count^(0+1280),f,c
 28513   0074EA                     l822:
 28514                           
 28515                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 28516   0074EA  2A2D               	incf	doNnevn@i^(0+1280),f,c
 28517   0074EC  282D               	incf	doNnevn@i^(0+1280),w,c
 28518   0074EE  A4D8               	btfss	status,2,c
 28519   0074F0  EF7C  F03A         	goto	u6161
 28520   0074F4  EF7E  F03A         	goto	u6160
 28521   0074F8                     u6161:
 28522   0074F8  EF64  F03A         	goto	l8742
 28523   0074FC                     u6160:
 28524   0074FC                     
 28525                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28526   0074FC  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28527   007500  C58D  F527         	movff	_nn,sendMessage3@data2
 28528   007504  C52C  F528         	movff	doNnevn@count,sendMessage3@data3
 28529   007508  0E70               	movlw	112
 28530   00750A  ECE9  F03C         	call	_sendMessage3
 28531   00750E  0012               	return		;funcret
 28532   007510                     __end_of_doNnevn:
 28533                           	callstack 0
 28534                           
 28535 ;; *************** function _doNnclr *****************
 28536 ;; Defined at:
 28537 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28538 ;; Parameters:    Size  Location     Type
 28539 ;;		None
 28540 ;; Auto vars:     Size  Location     Type
 28541 ;;		None
 28542 ;; Return value:  Size  Location     Type
 28543 ;;                  1    wreg      void 
 28544 ;; Registers used:
 28545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28546 ;; Tracked objects:
 28547 ;;		On entry : 0/0
 28548 ;;		On exit  : 0/0
 28549 ;;		Unchanged: 0/0
 28550 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28555 ;;Total ram usage:        0 bytes
 28556 ;; Hardware stack levels used: 1
 28557 ;; Hardware stack levels required when called: 8
 28558 ;; This function calls:
 28559 ;;		_clearAllEvents
 28560 ;;		_sendMessage2
 28561 ;;		_sendMessage5
 28562 ;; This function is called by:
 28563 ;;		_teachProcessMessage
 28564 ;; This function uses a non-reentrant model
 28565 ;;
 28566                           
 28567                           	psect	text28
 28568   007950                     __ptext28:
 28569                           	callstack 0
 28570   007950                     _doNnclr:
 28571                           	callstack 116
 28572   007950                     
 28573                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 28574   007950  ECAB  F03D         	call	_clearAllEvents	;wreg free
 28575   007954                     
 28576                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28577   007954  C58E  F526         	movff	_nn+1,sendMessage2@data1
 28578   007958  C58D  F527         	movff	_nn,sendMessage2@data2
 28579   00795C  0E59               	movlw	89
 28580   00795E  ECFE  F03C         	call	_sendMessage2
 28581   007962                     
 28582                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28583   007962  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28584   007966  C58D  F527         	movff	_nn,sendMessage5@data2
 28585   00796A  0E55               	movlw	85
 28586   00796C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28587   00796E  0E04               	movlw	4
 28588   007970  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28589   007972  0E00               	movlw	0
 28590   007974  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28591   007976  0EAF               	movlw	175
 28592   007978  EC28  F03D         	call	_sendMessage5
 28593   00797C  0012               	return		;funcret
 28594   00797E                     __end_of_doNnclr:
 28595                           	callstack 0
 28596                           
 28597 ;; *************** function _doNerd *****************
 28598 ;; Defined at:
 28599 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28600 ;; Parameters:    Size  Location     Type
 28601 ;;		None
 28602 ;; Auto vars:     Size  Location     Type
 28603 ;;		None
 28604 ;; Return value:  Size  Location     Type
 28605 ;;                  1    wreg      void 
 28606 ;; Registers used:
 28607 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28608 ;; Tracked objects:
 28609 ;;		On entry : 0/0
 28610 ;;		On exit  : 0/0
 28611 ;;		Unchanged: 0/0
 28612 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28617 ;;Total ram usage:        0 bytes
 28618 ;; Hardware stack levels used: 1
 28619 ;; Hardware stack levels required when called: 2
 28620 ;; This function calls:
 28621 ;;		_findServiceIndex
 28622 ;;		_startTimedResponse
 28623 ;; This function is called by:
 28624 ;;		_teachProcessMessage
 28625 ;; This function uses a non-reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text29
 28629   007BE6                     __ptext29:
 28630                           	callstack 0
 28631   007BE6                     _doNerd:
 28632                           	callstack 122
 28633   007BE6                     
 28634                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 28635   007BE6  0E04               	movlw	4
 28636   007BE8  EC5D  F033         	call	_findServiceIndex
 28637   007BEC  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28638   007BEE  0E2A               	movlw	low _nerdCallback
 28639   007BF0  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28640   007BF2  0E6E               	movlw	high _nerdCallback
 28641   007BF4  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28642   007BF6  0E02               	movlw	2
 28643   007BF8  EC15  F039         	call	_startTimedResponse
 28644   007BFC  0012               	return		;funcret
 28645   007BFE                     __end_of_doNerd:
 28646                           	callstack 0
 28647                           
 28648 ;; *************** function _doNenrd *****************
 28649 ;; Defined at:
 28650 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28651 ;; Parameters:    Size  Location     Type
 28652 ;;  index           1    wreg     unsigned char 
 28653 ;; Auto vars:     Size  Location     Type
 28654 ;;  index           1   47[COMRAM] unsigned char 
 28655 ;;  eventNumber     2   45[COMRAM] unsigned short 
 28656 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 28657 ;;  tableIndex      1   48[COMRAM] unsigned char 
 28658 ;; Return value:  Size  Location     Type
 28659 ;;                  1    wreg      void 
 28660 ;; Registers used:
 28661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28662 ;; Tracked objects:
 28663 ;;		On entry : 0/0
 28664 ;;		On exit  : 0/0
 28665 ;;		Unchanged: 0/0
 28666 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28668 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28671 ;;Total ram usage:        6 bytes
 28672 ;; Hardware stack levels used: 1
 28673 ;; Hardware stack levels required when called: 6
 28674 ;; This function calls:
 28675 ;;		_evtIdxToTableIndex
 28676 ;;		_getEN
 28677 ;;		_getNN
 28678 ;;		_sendMessage3
 28679 ;;		_sendMessage5
 28680 ;; This function is called by:
 28681 ;;		_teachProcessMessage
 28682 ;; This function uses a non-reentrant model
 28683 ;;
 28684                           
 28685                           	psect	text30
 28686   0069E2                     __ptext30:
 28687                           	callstack 0
 28688   0069E2                     _doNenrd:
 28689                           	callstack 118
 28690                           
 28691                           ;incstack = 0
 28692                           ;doNenrd@index stored from wreg
 28693   0069E2  6E30               	movwf	doNenrd@index^(0+1280),c
 28694   0069E4                     
 28695                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 28696   0069E4  5030               	movf	doNenrd@index^(0+1280),w,c
 28697   0069E6  EC3F  F03E         	call	_evtIdxToTableIndex
 28698   0069EA  6E31               	movwf	doNenrd@tableIndex^(0+1280),c
 28699   0069EC                     
 28700                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 255) {
 28701   0069EC  2831               	incf	doNenrd@tableIndex^(0+1280),w,c
 28702   0069EE  A4D8               	btfss	status,2,c
 28703   0069F0  EFFC  F034         	goto	u6191
 28704   0069F4  EFFE  F034         	goto	u6190
 28705   0069F8                     u6191:
 28706   0069F8  EF16  F035         	goto	l8776
 28707   0069FC                     u6190:
 28708   0069FC                     
 28709                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 28710   0069FC  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28711   006A00  C58D  F527         	movff	_nn,sendMessage3@data2
 28712   006A04  0E08               	movlw	8
 28713   006A06  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28714   006A08  0E6F               	movlw	111
 28715   006A0A  ECE9  F03C         	call	_sendMessage3
 28716                           
 28717                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 28718   006A0E  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28719   006A12  C58D  F527         	movff	_nn,sendMessage5@data2
 28720   006A16  0E72               	movlw	114
 28721   006A18  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28722   006A1A  0E04               	movlw	4
 28723   006A1C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28724   006A1E  0E08               	movlw	8
 28725   006A20  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28726   006A22  0EAF               	movlw	175
 28727   006A24  EC28  F03D         	call	_sendMessage5
 28728   006A28  EF31  F035         	goto	l835
 28729   006A2C                     l8776:
 28730                           
 28731                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 28732   006A2C  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28733   006A2E  ECDE  F025         	call	_getNN
 28734   006A32  C50D  F52C         	movff	?_getNN,doNenrd@nodeNumber
 28735   006A36  C50E  F52D         	movff	?_getNN+1,doNenrd@nodeNumber+1
 28736                           
 28737                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 28738   006A3A  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28739   006A3C  EC0C  F030         	call	_getEN
 28740   006A40  C50D  F52E         	movff	?_getEN,doNenrd@eventNumber
 28741   006A44  C50E  F52F         	movff	?_getEN+1,doNenrd@eventNumber+1
 28742   006A48                     
 28743                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 28744   006A48  502D               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 28745   006A4A  6E26               	movwf	sendMessage5@data1^(0+1280),c
 28746   006A4C  C52C  F527         	movff	doNenrd@nodeNumber,sendMessage5@data2
 28747   006A50  502F               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 28748   006A52  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28749   006A54  C52E  F529         	movff	doNenrd@eventNumber,sendMessage5@data4
 28750   006A58  C530  F52A         	movff	doNenrd@index,sendMessage5@data5
 28751   006A5C  0EF2               	movlw	242
 28752   006A5E  EC28  F03D         	call	_sendMessage5
 28753   006A62                     l835:
 28754   006A62  0012               	return		;funcret
 28755   006A64                     __end_of_doNenrd:
 28756                           	callstack 0
 28757                           
 28758 ;; *************** function _evtIdxToTableIndex *****************
 28759 ;; Defined at:
 28760 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28761 ;; Parameters:    Size  Location     Type
 28762 ;;  evtIdx          1    wreg     unsigned char 
 28763 ;; Auto vars:     Size  Location     Type
 28764 ;;  evtIdx          1    0[COMRAM] unsigned char 
 28765 ;; Return value:  Size  Location     Type
 28766 ;;                  1    wreg      unsigned char 
 28767 ;; Registers used:
 28768 ;;		wreg, status,2, status,0
 28769 ;; Tracked objects:
 28770 ;;		On entry : 0/0
 28771 ;;		On exit  : 0/0
 28772 ;;		Unchanged: 0/0
 28773 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28778 ;;Total ram usage:        1 bytes
 28779 ;; Hardware stack levels used: 1
 28780 ;; Hardware stack levels required when called: 1
 28781 ;; This function calls:
 28782 ;;		Nothing
 28783 ;; This function is called by:
 28784 ;;		_doNenrd
 28785 ;;		_doReval
 28786 ;; This function uses a non-reentrant model
 28787 ;;
 28788                           
 28789                           	psect	text31
 28790   007C7E                     __ptext31:
 28791                           	callstack 0
 28792   007C7E                     _evtIdxToTableIndex:
 28793                           	callstack 122
 28794                           
 28795                           ;incstack = 0
 28796                           ;evtIdxToTableIndex@evtIdx stored from wreg
 28797   007C7E  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 28798   007C80                     
 28799                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 28800   007C80  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 28801   007C82  0012               	return		;funcret
 28802   007C84                     __end_of_evtIdxToTableIndex:
 28803                           	callstack 0
 28804                           
 28805 ;; *************** function _doEvuln *****************
 28806 ;; Defined at:
 28807 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28808 ;; Parameters:    Size  Location     Type
 28809 ;;  nodeNumber      2   58[COMRAM] unsigned short 
 28810 ;;  eventNumber     2   60[COMRAM] unsigned short 
 28811 ;; Auto vars:     Size  Location     Type
 28812 ;;  result          1   62[COMRAM] unsigned char 
 28813 ;; Return value:  Size  Location     Type
 28814 ;;                  1    wreg      void 
 28815 ;; Registers used:
 28816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28817 ;; Tracked objects:
 28818 ;;		On entry : 0/0
 28819 ;;		On exit  : 0/0
 28820 ;;		Unchanged: 0/0
 28821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28825 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28826 ;;Total ram usage:        5 bytes
 28827 ;; Hardware stack levels used: 1
 28828 ;; Hardware stack levels required when called: 8
 28829 ;; This function calls:
 28830 ;;		_removeEvent
 28831 ;;		_sendMessage2
 28832 ;;		_sendMessage3
 28833 ;;		_sendMessage5
 28834 ;; This function is called by:
 28835 ;;		_teachProcessMessage
 28836 ;; This function uses a non-reentrant model
 28837 ;;
 28838                           
 28839                           	psect	text32
 28840   006A64                     __ptext32:
 28841                           	callstack 0
 28842   006A64                     _doEvuln:
 28843                           	callstack 116
 28844   006A64                     
 28845                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 28846   006A64  C53B  F536         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 28847   006A68  C53C  F537         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 28848   006A6C  C53D  F538         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 28849   006A70  C53E  F539         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 28850   006A74  ECC7  F03B         	call	_removeEvent	;wreg free
 28851   006A78  6E3F               	movwf	doEvuln@result^(0+1280),c
 28852   006A7A                     
 28853                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 28854   006A7A  503F               	movf	doEvuln@result^(0+1280),w,c
 28855   006A7C  B4D8               	btfsc	status,2,c
 28856   006A7E  EF43  F035         	goto	u6091
 28857   006A82  EF45  F035         	goto	u6090
 28858   006A86                     u6091:
 28859   006A86  EF5D  F035         	goto	l8686
 28860   006A8A                     u6090:
 28861   006A8A                     
 28862                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 28863   006A8A  C58E  F526         	movff	_nn+1,sendMessage3@data1
 28864   006A8E  C58D  F527         	movff	_nn,sendMessage3@data2
 28865   006A92  C53F  F528         	movff	doEvuln@result,sendMessage3@data3
 28866   006A96  0E6F               	movlw	111
 28867   006A98  ECE9  F03C         	call	_sendMessage3
 28868                           
 28869                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 28870   006A9C  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28871   006AA0  C58D  F527         	movff	_nn,sendMessage5@data2
 28872   006AA4  0E95               	movlw	149
 28873   006AA6  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28874   006AA8  0E04               	movlw	4
 28875   006AAA  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28876   006AAC  C53F  F52A         	movff	doEvuln@result,sendMessage5@data5
 28877   006AB0  0EAF               	movlw	175
 28878   006AB2  EC28  F03D         	call	_sendMessage5
 28879   006AB6  EF71  F035         	goto	l861
 28880   006ABA                     l8686:
 28881                           
 28882                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28883   006ABA  C58E  F526         	movff	_nn+1,sendMessage2@data1
 28884   006ABE  C58D  F527         	movff	_nn,sendMessage2@data2
 28885   006AC2  0E59               	movlw	89
 28886   006AC4  ECFE  F03C         	call	_sendMessage2
 28887                           
 28888                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28889   006AC8  C58E  F526         	movff	_nn+1,sendMessage5@data1
 28890   006ACC  C58D  F527         	movff	_nn,sendMessage5@data2
 28891   006AD0  0E95               	movlw	149
 28892   006AD2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28893   006AD4  0E04               	movlw	4
 28894   006AD6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28895   006AD8  0E00               	movlw	0
 28896   006ADA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28897   006ADC  0EAF               	movlw	175
 28898   006ADE  EC28  F03D         	call	_sendMessage5
 28899   006AE2                     l861:
 28900   006AE2  0012               	return		;funcret
 28901   006AE4                     __end_of_doEvuln:
 28902                           	callstack 0
 28903                           
 28904 ;; *************** function _removeEvent *****************
 28905 ;; Defined at:
 28906 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28907 ;; Parameters:    Size  Location     Type
 28908 ;;  nodeNumber      2   53[COMRAM] unsigned short 
 28909 ;;  eventNumber     2   55[COMRAM] unsigned short 
 28910 ;; Auto vars:     Size  Location     Type
 28911 ;;  tableIndex      1   57[COMRAM] unsigned char 
 28912 ;; Return value:  Size  Location     Type
 28913 ;;                  1    wreg      unsigned char 
 28914 ;; Registers used:
 28915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28916 ;; Tracked objects:
 28917 ;;		On entry : 0/0
 28918 ;;		On exit  : 0/0
 28919 ;;		Unchanged: 0/0
 28920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28924 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28925 ;;Total ram usage:        5 bytes
 28926 ;; Hardware stack levels used: 1
 28927 ;; Hardware stack levels required when called: 7
 28928 ;; This function calls:
 28929 ;;		_findEvent
 28930 ;;		_removeTableEntry
 28931 ;; This function is called by:
 28932 ;;		_doEvuln
 28933 ;; This function uses a non-reentrant model
 28934 ;;
 28935                           
 28936                           	psect	text33
 28937   00778E                     __ptext33:
 28938                           	callstack 0
 28939   00778E                     _removeEvent:
 28940                           	callstack 116
 28941   00778E                     
 28942                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 28943   00778E  C536  F522         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 28944   007792  C537  F523         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 28945   007796  C538  F524         	movff	removeEvent@eventNumber,findEvent@eventNumber
 28946   00779A  C539  F525         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 28947   00779E  EC5E  F02E         	call	_findEvent	;wreg free
 28948   0077A2  6E3A               	movwf	removeEvent@tableIndex^(0+1280),c
 28949   0077A4                     
 28950                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 28951   0077A4  283A               	incf	removeEvent@tableIndex^(0+1280),w,c
 28952   0077A6  A4D8               	btfss	status,2,c
 28953   0077A8  EFD8  F03B         	goto	u5601
 28954   0077AC  EFDA  F03B         	goto	u5600
 28955   0077B0                     u5601:
 28956   0077B0  EFDD  F03B         	goto	l8094
 28957   0077B4                     u5600:
 28958   0077B4  0E07               	movlw	7
 28959   0077B6  EFE0  F03B         	goto	l881
 28960   0077BA                     l8094:
 28961                           
 28962                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 28963   0077BA  503A               	movf	removeEvent@tableIndex^(0+1280),w,c
 28964   0077BC  EC80  F01E         	call	_removeTableEntry
 28965   0077C0                     l881:
 28966   0077C0  0012               	return		;funcret
 28967   0077C2                     __end_of_removeEvent:
 28968                           	callstack 0
 28969                           
 28970 ;; *************** function _doEvlrn *****************
 28971 ;; Defined at:
 28972 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28973 ;; Parameters:    Size  Location     Type
 28974 ;;  nodeNumber      2   77[COMRAM] unsigned short 
 28975 ;;  eventNumber     2   79[COMRAM] unsigned short 
 28976 ;;  evNum           1   81[COMRAM] unsigned char 
 28977 ;;  evVal           1   82[COMRAM] unsigned char 
 28978 ;; Auto vars:     Size  Location     Type
 28979 ;;		None
 28980 ;; Return value:  Size  Location     Type
 28981 ;;                  1    wreg      void 
 28982 ;; Registers used:
 28983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28984 ;; Tracked objects:
 28985 ;;		On entry : 0/0
 28986 ;;		On exit  : 0/0
 28987 ;;		Unchanged: 0/0
 28988 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28989 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28992 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28993 ;;Total ram usage:        6 bytes
 28994 ;; Hardware stack levels used: 1
 28995 ;; Hardware stack levels required when called: 9
 28996 ;; This function calls:
 28997 ;;		_APP_addEvent
 28998 ;;		_sendMessage2
 28999 ;;		_sendMessage3
 29000 ;;		_sendMessage5
 29001 ;; This function is called by:
 29002 ;;		_teachProcessMessage
 29003 ;; This function uses a non-reentrant model
 29004 ;;
 29005                           
 29006                           	psect	text34
 29007   00576A                     __ptext34:
 29008                           	callstack 0
 29009   00576A                     _doEvlrn:
 29010                           	callstack 115
 29011   00576A                     
 29012                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 29013   00576A  0652               	decf	doEvlrn@evNum^(0+1280),f,c
 29014   00576C                     
 29015                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 252) {
 29016   00576C  0EFB               	movlw	251
 29017   00576E  6452               	cpfsgt	doEvlrn@evNum^(0+1280),c
 29018   005770  EFBC  F02B         	goto	u6071
 29019   005774  EFBE  F02B         	goto	u6070
 29020   005778                     u6071:
 29021   005778  EFD6  F02B         	goto	l8662
 29022   00577C                     u6070:
 29023   00577C                     
 29024                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 29025   00577C  C58E  F526         	movff	_nn+1,sendMessage3@data1
 29026   005780  C58D  F527         	movff	_nn,sendMessage3@data2
 29027   005784  0E06               	movlw	6
 29028   005786  6E28               	movwf	sendMessage3@data3^(0+1280),c
 29029   005788  0E6F               	movlw	111
 29030   00578A  ECE9  F03C         	call	_sendMessage3
 29031                           
 29032                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 29033   00578E  C58E  F526         	movff	_nn+1,sendMessage5@data1
 29034   005792  C58D  F527         	movff	_nn,sendMessage5@data2
 29035   005796  0ED2               	movlw	210
 29036   005798  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29037   00579A  0E04               	movlw	4
 29038   00579C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29039   00579E  0E06               	movlw	6
 29040   0057A0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29041   0057A2  0EAF               	movlw	175
 29042   0057A4  EC28  F03D         	call	_sendMessage5
 29043   0057A8  EF1D  F02C         	goto	l848
 29044   0057AC                     l8662:
 29045                           
 29046                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 29047   0057AC  C54E  F547         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 29048   0057B0  C54F  F548         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 29049   0057B4  C550  F549         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 29050   0057B8  C551  F54A         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 29051   0057BC  C552  F54B         	movff	doEvlrn@evNum,APP_addEvent@evNum
 29052   0057C0  C553  F54C         	movff	doEvlrn@evVal,APP_addEvent@evVal
 29053   0057C4  0E00               	movlw	0
 29054   0057C6  6E4D               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 29055   0057C8  EC78  F03D         	call	_APP_addEvent	;wreg free
 29056   0057CC                     
 29057                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 29058   0057CC  0105               	movlb	5	; () banked
 29059   0057CE  51A3               	movf	_errno& (0+255),w,b
 29060   0057D0  B4D8               	btfsc	status,2,c
 29061   0057D2  EFED  F02B         	goto	u6081
 29062   0057D6  EFEF  F02B         	goto	u6080
 29063   0057DA                     u6081:
 29064   0057DA  EF07  F02C         	goto	l8670
 29065   0057DE                     u6080:
 29066   0057DE                     
 29067                           ; BSR set to: 5
 29068                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 29069   0057DE  C58E  F526         	movff	_nn+1,sendMessage3@data1
 29070   0057E2  C58D  F527         	movff	_nn,sendMessage3@data2
 29071   0057E6  C5A3  F528         	movff	_errno,sendMessage3@data3
 29072   0057EA  0E6F               	movlw	111
 29073   0057EC  ECE9  F03C         	call	_sendMessage3
 29074                           
 29075                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 29076   0057F0  C58E  F526         	movff	_nn+1,sendMessage5@data1
 29077   0057F4  C58D  F527         	movff	_nn,sendMessage5@data2
 29078   0057F8  0ED2               	movlw	210
 29079   0057FA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29080   0057FC  0E04               	movlw	4
 29081   0057FE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29082   005800  C5A3  F52A         	movff	_errno,sendMessage5@data5
 29083   005804  0EAF               	movlw	175
 29084   005806  EC28  F03D         	call	_sendMessage5
 29085   00580A  EF1D  F02C         	goto	l848
 29086   00580E                     l8670:
 29087                           
 29088                           ; BSR set to: 5
 29089                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 29090   00580E  4BCC               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 29091   005810  2BCD               	incf	(_teachDiagnostics+3)& (0+255),f,b
 29092   005812                     
 29093                           ; BSR set to: 5
 29094                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29095   005812  C58E  F526         	movff	_nn+1,sendMessage2@data1
 29096   005816  C58D  F527         	movff	_nn,sendMessage2@data2
 29097   00581A  0E59               	movlw	89
 29098   00581C  ECFE  F03C         	call	_sendMessage2
 29099   005820                     
 29100                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29101   005820  C58E  F526         	movff	_nn+1,sendMessage5@data1
 29102   005824  C58D  F527         	movff	_nn,sendMessage5@data2
 29103   005828  0ED2               	movlw	210
 29104   00582A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29105   00582C  0E04               	movlw	4
 29106   00582E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29107   005830  0E00               	movlw	0
 29108   005832  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29109   005834  0EAF               	movlw	175
 29110   005836  EC28  F03D         	call	_sendMessage5
 29111   00583A                     l848:
 29112   00583A  0012               	return		;funcret
 29113   00583C                     __end_of_doEvlrn:
 29114                           	callstack 0
 29115                           
 29116 ;; *************** function _APP_addEvent *****************
 29117 ;; Defined at:
 29118 ;;		line 93 in file "../canargb_events.c"
 29119 ;; Parameters:    Size  Location     Type
 29120 ;;  nodeNumber      2   70[COMRAM] unsigned short 
 29121 ;;  eventNumber     2   72[COMRAM] unsigned short 
 29122 ;;  evNum           1   74[COMRAM] unsigned char 
 29123 ;;  evVal           1   75[COMRAM] unsigned char 
 29124 ;;  forceOwnNN      1   76[COMRAM] enum E23257
 29125 ;; Auto vars:     Size  Location     Type
 29126 ;;		None
 29127 ;; Return value:  Size  Location     Type
 29128 ;;                  1    wreg      unsigned char 
 29129 ;; Registers used:
 29130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29131 ;; Tracked objects:
 29132 ;;		On entry : 0/0
 29133 ;;		On exit  : 0/0
 29134 ;;		Unchanged: 0/0
 29135 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29136 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29139 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29140 ;;Total ram usage:        7 bytes
 29141 ;; Hardware stack levels used: 1
 29142 ;; Hardware stack levels required when called: 8
 29143 ;; This function calls:
 29144 ;;		_addEvent
 29145 ;; This function is called by:
 29146 ;;		_doEvlrn
 29147 ;; This function uses a non-reentrant model
 29148 ;;
 29149                           
 29150                           	psect	text35
 29151   007AF0                     __ptext35:
 29152                           	callstack 0
 29153   007AF0                     _APP_addEvent:
 29154                           	callstack 115
 29155   007AF0                     
 29156                           ;../canargb_events.c: 94:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 29157   007AF0  C547  F52F         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 29158   007AF4  C548  F530         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 29159   007AF8  C549  F531         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 29160   007AFC  C54A  F532         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 29161   007B00  C54B  F533         	movff	APP_addEvent@evNum,addEvent@evNum
 29162   007B04  C54C  F534         	movff	APP_addEvent@evVal,addEvent@evVal
 29163   007B08  C54D  F535         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 29164   007B0C  EC4E  F019         	call	_addEvent	;wreg free
 29165   007B10  0012               	return		;funcret
 29166   007B12                     __end_of_APP_addEvent:
 29167                           	callstack 0
 29168                           
 29169 ;; *************** function _addEvent *****************
 29170 ;; Defined at:
 29171 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29172 ;; Parameters:    Size  Location     Type
 29173 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 29174 ;;  eventNumber     2   48[COMRAM] unsigned short 
 29175 ;;  evNum           1   50[COMRAM] unsigned char 
 29176 ;;  evVal           1   51[COMRAM] unsigned char 
 29177 ;;  forceOwnNN      1   52[COMRAM] enum E23307
 29178 ;; Auto vars:     Size  Location     Type
 29179 ;;  e               1   68[COMRAM] unsigned char 
 29180 ;;  en              2   66[COMRAM] unsigned short 
 29181 ;;  tableIndex      1   69[COMRAM] unsigned char 
 29182 ;; Return value:  Size  Location     Type
 29183 ;;                  1    wreg      unsigned char 
 29184 ;; Registers used:
 29185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29186 ;; Tracked objects:
 29187 ;;		On entry : 0/0
 29188 ;;		On exit  : 0/0
 29189 ;;		Unchanged: 0/0
 29190 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29191 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29193 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29194 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29195 ;;Total ram usage:       24 bytes
 29196 ;; Hardware stack levels used: 1
 29197 ;; Hardware stack levels required when called: 7
 29198 ;; This function calls:
 29199 ;;		_findEvent
 29200 ;;		_flushFlashBlock
 29201 ;;		_getEN
 29202 ;;		_rebuildHashtable
 29203 ;;		_writeEv
 29204 ;;		_writeNVM
 29205 ;; This function is called by:
 29206 ;;		_APP_addEvent
 29207 ;; This function uses a non-reentrant model
 29208 ;;
 29209                           
 29210                           	psect	text36
 29211   00329C                     __ptext36:
 29212                           	callstack 0
 29213   00329C                     _addEvent:
 29214                           	callstack 115
 29215   00329C                     
 29216                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 29217   00329C  C52F  F522         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 29218   0032A0  C530  F523         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 29219   0032A4  C531  F524         	movff	addEvent@eventNumber,findEvent@eventNumber
 29220   0032A8  C532  F525         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 29221   0032AC  EC5E  F02E         	call	_findEvent	;wreg free
 29222   0032B0  6E46               	movwf	addEvent@tableIndex^(0+1280),c
 29223   0032B2                     
 29224                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 29225   0032B2  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29226   0032B4  A4D8               	btfss	status,2,c
 29227   0032B6  EF5F  F019         	goto	u5271
 29228   0032BA  EF61  F019         	goto	u5270
 29229   0032BE                     u5271:
 29230   0032BE  EFA8  F01A         	goto	l7840
 29231   0032C2                     u5270:
 29232   0032C2                     
 29233                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 29234   0032C2  0E04               	movlw	4
 29235   0032C4  0105               	movlb	5	; () banked
 29236   0032C6  6FA3               	movwf	_errno& (0+255),b
 29237   0032C8                     
 29238                           ; BSR set to: 5
 29239                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<255;
      +                           tableIndex++) {
 29240   0032C8  6A46               	clrf	addEvent@tableIndex^(0+1280),c
 29241   0032CA                     l7802:
 29242   0032CA  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29243   0032CC  A4D8               	btfss	status,2,c
 29244   0032CE  EF6B  F019         	goto	u5281
 29245   0032D2  EF6D  F019         	goto	u5280
 29246   0032D6                     u5281:
 29247   0032D6  EF6F  F019         	goto	l7806
 29248   0032DA                     u5280:
 29249   0032DA  EF9C  F01A         	goto	l7834
 29250   0032DE                     l7806:
 29251                           
 29252                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 29253   0032DE  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29254   0032E0  EC0C  F030         	call	_getEN
 29255   0032E4  C50D  F543         	movff	?_getEN,addEvent@en
 29256   0032E8  C50E  F544         	movff	?_getEN+1,addEvent@en+1
 29257   0032EC                     
 29258                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 29259   0032EC  5043               	movf	addEvent@en^(0+1280),w,c
 29260   0032EE  1044               	iorwf	(addEvent@en+1)^(0+1280),w,c
 29261   0032F0  A4D8               	btfss	status,2,c
 29262   0032F2  EF7D  F019         	goto	u5291
 29263   0032F6  EF7F  F019         	goto	u5290
 29264   0032FA                     u5291:
 29265   0032FA  EF99  F01A         	goto	l7830
 29266   0032FE                     u5290:
 29267   0032FE                     
 29268                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof
      +                          (Event) + 1 + 252)*tableIndex+1, nodeNumber&0xFF);
 29269   0032FE  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29270   003300  6E36               	movwf	??_addEvent^(0+1280),c
 29271   003302  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29272   003304  0E01               	movlw	1
 29273   003306  0236               	mulwf	??_addEvent^(0+1280),c
 29274   003308  C4F3 F538          	movff	prodl,??_addEvent+2
 29275   00330C  C4F4 F539          	movff	prodh,??_addEvent+3
 29276   003310  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29277   003312  50F3               	movf	prodl,w,c
 29278   003314  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29279   003316  0E01               	movlw	1
 29280   003318  0236               	mulwf	??_addEvent^(0+1280),c
 29281   00331A  50F3               	movf	prodl,w,c
 29282   00331C  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29283   00331E  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29284   003322  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29285   003326  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29286   003328  0E01               	movlw	1
 29287   00332A  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29288   00332C  6E0E               	movwf	writeNVM@index^(0+1280),c
 29289   00332E  0E00               	movlw	0
 29290   003330  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29291   003332  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29292   003334  0E01               	movlw	1
 29293   003336  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29294   003338  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29295   00333A  C52F  F511         	movff	addEvent@nodeNumber,writeNVM@value
 29296   00333E  0E01               	movlw	1
 29297   003340  ECB5  F038         	call	_writeNVM
 29298                           
 29299                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0, nodeNumber>>8);
 29300   003344  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29301   003346  6E36               	movwf	??_addEvent^(0+1280),c
 29302   003348  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29303   00334A  0E01               	movlw	1
 29304   00334C  0236               	mulwf	??_addEvent^(0+1280),c
 29305   00334E  C4F3 F538          	movff	prodl,??_addEvent+2
 29306   003352  C4F4 F539          	movff	prodh,??_addEvent+3
 29307   003356  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29308   003358  50F3               	movf	prodl,w,c
 29309   00335A  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29310   00335C  0E01               	movlw	1
 29311   00335E  0236               	mulwf	??_addEvent^(0+1280),c
 29312   003360  50F3               	movf	prodl,w,c
 29313   003362  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29314   003364  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29315   003368  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29316   00336C  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29317   00336E  0E00               	movlw	0
 29318   003370  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29319   003372  6E0E               	movwf	writeNVM@index^(0+1280),c
 29320   003374  0E00               	movlw	0
 29321   003376  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29322   003378  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29323   00337A  0E01               	movlw	1
 29324   00337C  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29325   00337E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29326   003380  5030               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 29327   003382  6E11               	movwf	writeNVM@value^(0+1280),c
 29328   003384  0E01               	movlw	1
 29329   003386  ECB5  F038         	call	_writeNVM
 29330                           
 29331                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3, eventNumber&0xFF);
 29332   00338A  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29333   00338C  6E36               	movwf	??_addEvent^(0+1280),c
 29334   00338E  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29335   003390  0E01               	movlw	1
 29336   003392  0236               	mulwf	??_addEvent^(0+1280),c
 29337   003394  C4F3 F538          	movff	prodl,??_addEvent+2
 29338   003398  C4F4 F539          	movff	prodh,??_addEvent+3
 29339   00339C  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29340   00339E  50F3               	movf	prodl,w,c
 29341   0033A0  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29342   0033A2  0E01               	movlw	1
 29343   0033A4  0236               	mulwf	??_addEvent^(0+1280),c
 29344   0033A6  50F3               	movf	prodl,w,c
 29345   0033A8  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29346   0033AA  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29347   0033AE  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29348   0033B2  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29349   0033B4  0E03               	movlw	3
 29350   0033B6  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29351   0033B8  6E0E               	movwf	writeNVM@index^(0+1280),c
 29352   0033BA  0E00               	movlw	0
 29353   0033BC  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29354   0033BE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29355   0033C0  0E01               	movlw	1
 29356   0033C2  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29357   0033C4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29358   0033C6  C531  F511         	movff	addEvent@eventNumber,writeNVM@value
 29359   0033CA  0E01               	movlw	1
 29360   0033CC  ECB5  F038         	call	_writeNVM
 29361                           
 29362                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2, eventNumber>>8);
 29363   0033D0  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29364   0033D2  6E36               	movwf	??_addEvent^(0+1280),c
 29365   0033D4  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29366   0033D6  0E01               	movlw	1
 29367   0033D8  0236               	mulwf	??_addEvent^(0+1280),c
 29368   0033DA  C4F3 F538          	movff	prodl,??_addEvent+2
 29369   0033DE  C4F4 F539          	movff	prodh,??_addEvent+3
 29370   0033E2  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29371   0033E4  50F3               	movf	prodl,w,c
 29372   0033E6  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29373   0033E8  0E01               	movlw	1
 29374   0033EA  0236               	mulwf	??_addEvent^(0+1280),c
 29375   0033EC  50F3               	movf	prodl,w,c
 29376   0033EE  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29377   0033F0  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29378   0033F4  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29379   0033F8  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29380   0033FA  0E02               	movlw	2
 29381   0033FC  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29382   0033FE  6E0E               	movwf	writeNVM@index^(0+1280),c
 29383   003400  0E00               	movlw	0
 29384   003402  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29385   003404  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29386   003406  0E01               	movlw	1
 29387   003408  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29388   00340A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29389   00340C  5032               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 29390   00340E  6E11               	movwf	writeNVM@value^(0+1280),c
 29391   003410  0E01               	movlw	1
 29392   003412  ECB5  F038         	call	_writeNVM
 29393   003416                     
 29394                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 29395   003416  5035               	movf	addEvent@forceOwnNN^(0+1280),w,c
 29396   003418  B4D8               	btfsc	status,2,c
 29397   00341A  EF11  F01A         	goto	u5301
 29398   00341E  EF13  F01A         	goto	u5300
 29399   003422                     u5301:
 29400   003422  EF38  F01A         	goto	l7816
 29401   003426                     u5300:
 29402   003426                     
 29403                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 1);
 29404   003426  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29405   003428  6E36               	movwf	??_addEvent^(0+1280),c
 29406   00342A  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29407   00342C  0E01               	movlw	1
 29408   00342E  0236               	mulwf	??_addEvent^(0+1280),c
 29409   003430  C4F3 F538          	movff	prodl,??_addEvent+2
 29410   003434  C4F4 F539          	movff	prodh,??_addEvent+3
 29411   003438  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29412   00343A  50F3               	movf	prodl,w,c
 29413   00343C  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29414   00343E  0E01               	movlw	1
 29415   003440  0236               	mulwf	??_addEvent^(0+1280),c
 29416   003442  50F3               	movf	prodl,w,c
 29417   003444  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29418   003446  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29419   00344A  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29420   00344E  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29421   003450  0E04               	movlw	4
 29422   003452  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29423   003454  6E0E               	movwf	writeNVM@index^(0+1280),c
 29424   003456  0E00               	movlw	0
 29425   003458  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29426   00345A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29427   00345C  0E01               	movlw	1
 29428   00345E  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29429   003460  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29430   003462  0E01               	movlw	1
 29431   003464  6E11               	movwf	writeNVM@value^(0+1280),c
 29432   003466  0E01               	movlw	1
 29433   003468  ECB5  F038         	call	_writeNVM
 29434                           
 29435                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 29436   00346C  EF5B  F01A         	goto	l7818
 29437   003470                     l7816:
 29438                           
 29439                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 0);
 29440   003470  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29441   003472  6E36               	movwf	??_addEvent^(0+1280),c
 29442   003474  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29443   003476  0E01               	movlw	1
 29444   003478  0236               	mulwf	??_addEvent^(0+1280),c
 29445   00347A  C4F3 F538          	movff	prodl,??_addEvent+2
 29446   00347E  C4F4 F539          	movff	prodh,??_addEvent+3
 29447   003482  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29448   003484  50F3               	movf	prodl,w,c
 29449   003486  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29450   003488  0E01               	movlw	1
 29451   00348A  0236               	mulwf	??_addEvent^(0+1280),c
 29452   00348C  50F3               	movf	prodl,w,c
 29453   00348E  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29454   003490  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29455   003494  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29456   003498  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29457   00349A  0E04               	movlw	4
 29458   00349C  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29459   00349E  6E0E               	movwf	writeNVM@index^(0+1280),c
 29460   0034A0  0E00               	movlw	0
 29461   0034A2  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29462   0034A4  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29463   0034A6  0E01               	movlw	1
 29464   0034A8  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29465   0034AA  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29466   0034AC  0E00               	movlw	0
 29467   0034AE  6E11               	movwf	writeNVM@value^(0+1280),c
 29468   0034B0  0E01               	movlw	1
 29469   0034B2  ECB5  F038         	call	_writeNVM
 29470   0034B6                     l7818:
 29471                           
 29472                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 248; e++) 
      +                          {
 29473   0034B6  6A45               	clrf	addEvent@e^(0+1280),c
 29474   0034B8                     l7824:
 29475                           
 29476                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +e, 0);
 29477   0034B8  5045               	movf	addEvent@e^(0+1280),w,c
 29478   0034BA  6E36               	movwf	??_addEvent^(0+1280),c
 29479   0034BC  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29480   0034BE  6A38               	clrf	(??_addEvent+2)^(0+1280),c
 29481   0034C0  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29482   0034C2  6E39               	movwf	(??_addEvent+3)^(0+1280),c
 29483   0034C4  6A3A               	clrf	(??_addEvent+4)^(0+1280),c
 29484   0034C6  0E01               	movlw	1
 29485   0034C8  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29486   0034CA  C4F3 F53B          	movff	prodl,??_addEvent+5
 29487   0034CE  C4F4 F53C          	movff	prodh,??_addEvent+6
 29488   0034D2  023A               	mulwf	(??_addEvent+4)^(0+1280),c
 29489   0034D4  50F3               	movf	prodl,w,c
 29490   0034D6  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29491   0034D8  0E01               	movlw	1
 29492   0034DA  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29493   0034DC  50F3               	movf	prodl,w,c
 29494   0034DE  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29495   0034E0  C53B  F53D         	movff	??_addEvent+5,??_addEvent+7
 29496   0034E4  C53C  F53E         	movff	??_addEvent+6,??_addEvent+8
 29497   0034E8  6A3F               	clrf	(??_addEvent+9)^(0+1280),c
 29498   0034EA  5036               	movf	??_addEvent^(0+1280),w,c
 29499   0034EC  243D               	addwf	(??_addEvent+7)^(0+1280),w,c
 29500   0034EE  6E40               	movwf	(??_addEvent+10)^(0+1280),c
 29501   0034F0  5037               	movf	(??_addEvent+1)^(0+1280),w,c
 29502   0034F2  203E               	addwfc	(??_addEvent+8)^(0+1280),w,c
 29503   0034F4  6E41               	movwf	(??_addEvent+11)^(0+1280),c
 29504   0034F6  5038               	movf	(??_addEvent+2)^(0+1280),w,c
 29505   0034F8  203F               	addwfc	(??_addEvent+9)^(0+1280),w,c
 29506   0034FA  6E42               	movwf	(??_addEvent+12)^(0+1280),c
 29507   0034FC  0E05               	movlw	5
 29508   0034FE  2440               	addwf	(??_addEvent+10)^(0+1280),w,c
 29509   003500  6E0E               	movwf	writeNVM@index^(0+1280),c
 29510   003502  0E00               	movlw	0
 29511   003504  2041               	addwfc	(??_addEvent+11)^(0+1280),w,c
 29512   003506  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29513   003508  0E01               	movlw	1
 29514   00350A  2042               	addwfc	(??_addEvent+12)^(0+1280),w,c
 29515   00350C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29516   00350E  0E00               	movlw	0
 29517   003510  6E11               	movwf	writeNVM@value^(0+1280),c
 29518   003512  0E01               	movlw	1
 29519   003514  ECB5  F038         	call	_writeNVM
 29520   003518                     
 29521                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 29522   003518  2A45               	incf	addEvent@e^(0+1280),f,c
 29523   00351A  0EF7               	movlw	247
 29524   00351C  6445               	cpfsgt	addEvent@e^(0+1280),c
 29525   00351E  EF93  F01A         	goto	u5311
 29526   003522  EF95  F01A         	goto	u5310
 29527   003526                     u5311:
 29528   003526  EF5C  F01A         	goto	l7824
 29529   00352A                     u5310:
 29530   00352A                     
 29531                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 29532   00352A  0105               	movlb	5	; () banked
 29533   00352C  6BA3               	clrf	_errno& (0+255),b
 29534                           
 29535                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 29536   00352E  EF9C  F01A         	goto	l7834
 29537   003532                     l7830:
 29538                           
 29539                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 29540   003532  2A46               	incf	addEvent@tableIndex^(0+1280),f,c
 29541   003534  EF65  F019         	goto	l7802
 29542   003538                     l7834:
 29543                           
 29544                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 29545   003538  0105               	movlb	5	; () banked
 29546   00353A  51A3               	movf	_errno& (0+255),w,b
 29547   00353C  B4D8               	btfsc	status,2,c
 29548   00353E  EFA3  F01A         	goto	u5321
 29549   003542  EFA5  F01A         	goto	u5320
 29550   003546                     u5321:
 29551   003546  EFA8  F01A         	goto	l7840
 29552   00354A                     u5320:
 29553   00354A                     l7836:
 29554                           
 29555                           ; BSR set to: 5
 29556                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 29557   00354A  0EFF               	movlw	255
 29558   00354C  EFC1  F01A         	goto	l898
 29559   003550                     l7840:
 29560                           
 29561                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 29562   003550  C533  F515         	movff	addEvent@evNum,writeEv@evNum
 29563   003554  C534  F516         	movff	addEvent@evVal,writeEv@evVal
 29564   003558  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29565   00355A  EC84  F032         	call	_writeEv
 29566   00355E  0900               	iorlw	0
 29567   003560  B4D8               	btfsc	status,2,c
 29568   003562  EFB5  F01A         	goto	u5331
 29569   003566  EFB7  F01A         	goto	u5330
 29570   00356A                     u5331:
 29571   00356A  EFBC  F01A         	goto	l7848
 29572   00356E                     u5330:
 29573   00356E                     
 29574                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 29575   00356E  0E06               	movlw	6
 29576   003570  0105               	movlb	5	; () banked
 29577   003572  6FA3               	movwf	_errno& (0+255),b
 29578   003574  EFA5  F01A         	goto	l7836
 29579   003578                     l7848:
 29580                           
 29581                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 29582   003578  EC50  F031         	call	_flushFlashBlock	;wreg free
 29583   00357C                     
 29584                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 29585   00357C  EC04  F028         	call	_rebuildHashtable	;wreg free
 29586   003580                     
 29587                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 29588   003580  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29589   003582                     l898:
 29590   003582  0012               	return		;funcret
 29591   003584                     __end_of_addEvent:
 29592                           	callstack 0
 29593                           
 29594 ;; *************** function _writeEv *****************
 29595 ;; Defined at:
 29596 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29597 ;; Parameters:    Size  Location     Type
 29598 ;;  tableIndex      1    wreg     unsigned char 
 29599 ;;  evNum           1   20[COMRAM] unsigned char 
 29600 ;;  evVal           1   21[COMRAM] unsigned char 
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;  tableIndex      1   35[COMRAM] unsigned char 
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  1    wreg      unsigned char 
 29605 ;; Registers used:
 29606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29607 ;; Tracked objects:
 29608 ;;		On entry : 0/0
 29609 ;;		On exit  : 0/0
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29614 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29615 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29616 ;;Total ram usage:       16 bytes
 29617 ;; Hardware stack levels used: 1
 29618 ;; Hardware stack levels required when called: 6
 29619 ;; This function calls:
 29620 ;;		_writeNVM
 29621 ;; This function is called by:
 29622 ;;		_addEvent
 29623 ;; This function uses a non-reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text37
 29627   006508                     __ptext37:
 29628                           	callstack 0
 29629   006508                     _writeEv:
 29630                           	callstack 115
 29631                           
 29632                           ;incstack = 0
 29633                           ;writeEv@tableIndex stored from wreg
 29634   006508  6E24               	movwf	writeEv@tableIndex^(0+1280),c
 29635   00650A                     
 29636                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 252) {
 29637   00650A  0EFB               	movlw	251
 29638   00650C  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 29639   00650E  EF8B  F032         	goto	u5091
 29640   006512  EF8D  F032         	goto	u5090
 29641   006516                     u5091:
 29642   006516  EF90  F032         	goto	l7666
 29643   00651A                     u5090:
 29644   00651A                     
 29645                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 29646   00651A  0E06               	movlw	6
 29647   00651C  EFCC  F032         	goto	l910
 29648   006520                     l7666:
 29649                           
 29650                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 255) {
 29651   006520  2824               	incf	writeEv@tableIndex^(0+1280),w,c
 29652   006522  A4D8               	btfss	status,2,c
 29653   006524  EF96  F032         	goto	u5101
 29654   006528  EF98  F032         	goto	u5100
 29655   00652C                     u5101:
 29656   00652C  EF9B  F032         	goto	l7672
 29657   006530                     u5100:
 29658   006530                     
 29659                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 29660   006530  0E08               	movlw	8
 29661   006532  EFCC  F032         	goto	l910
 29662   006536                     l7672:
 29663                           
 29664                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex+5 +evNum, evVal);
 29665   006536  5015               	movf	writeEv@evNum^(0+1280),w,c
 29666   006538  6E17               	movwf	??_writeEv^(0+1280),c
 29667   00653A  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 29668   00653C  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 29669   00653E  5024               	movf	writeEv@tableIndex^(0+1280),w,c
 29670   006540  6E1A               	movwf	(??_writeEv+3)^(0+1280),c
 29671   006542  6A1B               	clrf	(??_writeEv+4)^(0+1280),c
 29672   006544  0E01               	movlw	1
 29673   006546  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29674   006548  C4F3 F51C          	movff	prodl,??_writeEv+5
 29675   00654C  C4F4 F51D          	movff	prodh,??_writeEv+6
 29676   006550  021B               	mulwf	(??_writeEv+4)^(0+1280),c
 29677   006552  50F3               	movf	prodl,w,c
 29678   006554  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29679   006556  0E01               	movlw	1
 29680   006558  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29681   00655A  50F3               	movf	prodl,w,c
 29682   00655C  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29683   00655E  C51C  F51E         	movff	??_writeEv+5,??_writeEv+7
 29684   006562  C51D  F51F         	movff	??_writeEv+6,??_writeEv+8
 29685   006566  6A20               	clrf	(??_writeEv+9)^(0+1280),c
 29686   006568  5017               	movf	??_writeEv^(0+1280),w,c
 29687   00656A  241E               	addwf	(??_writeEv+7)^(0+1280),w,c
 29688   00656C  6E21               	movwf	(??_writeEv+10)^(0+1280),c
 29689   00656E  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 29690   006570  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 29691   006572  6E22               	movwf	(??_writeEv+11)^(0+1280),c
 29692   006574  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 29693   006576  2020               	addwfc	(??_writeEv+9)^(0+1280),w,c
 29694   006578  6E23               	movwf	(??_writeEv+12)^(0+1280),c
 29695   00657A  0E05               	movlw	5
 29696   00657C  2421               	addwf	(??_writeEv+10)^(0+1280),w,c
 29697   00657E  6E0E               	movwf	writeNVM@index^(0+1280),c
 29698   006580  0E00               	movlw	0
 29699   006582  2022               	addwfc	(??_writeEv+11)^(0+1280),w,c
 29700   006584  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29701   006586  0E01               	movlw	1
 29702   006588  2023               	addwfc	(??_writeEv+12)^(0+1280),w,c
 29703   00658A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29704   00658C  C516  F511         	movff	writeEv@evVal,writeNVM@value
 29705   006590  0E01               	movlw	1
 29706   006592  ECB5  F038         	call	_writeNVM
 29707   006596                     
 29708                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 29709   006596  0E00               	movlw	0
 29710   006598                     l910:
 29711   006598  0012               	return		;funcret
 29712   00659A                     __end_of_writeEv:
 29713                           	callstack 0
 29714                           
 29715 ;; *************** function _pollTimedResponse *****************
 29716 ;; Defined at:
 29717 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 29718 ;; Parameters:    Size  Location     Type
 29719 ;;		None
 29720 ;; Auto vars:     Size  Location     Type
 29721 ;;  result          1   62[COMRAM] enum E23467
 29722 ;; Return value:  Size  Location     Type
 29723 ;;                  1    wreg      void 
 29724 ;; Registers used:
 29725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29726 ;; Tracked objects:
 29727 ;;		On entry : 0/0
 29728 ;;		On exit  : 0/0
 29729 ;;		Unchanged: 0/0
 29730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29735 ;;Total ram usage:        3 bytes
 29736 ;; Hardware stack levels used: 1
 29737 ;; Hardware stack levels required when called: 7
 29738 ;; This function calls:
 29739 ;;		NULL
 29740 ;;		_mnsTRallDiagnosticsCallback
 29741 ;;		_mnsTRrqnpnCallback
 29742 ;;		_mnsTRserviceDiscoveryCallback
 29743 ;;		_nerdCallback
 29744 ;;		_nvTRnvrdCallback
 29745 ;;		_reqevCallback
 29746 ;; This function is called by:
 29747 ;;		_poll
 29748 ;; This function uses a non-reentrant model
 29749 ;;
 29750                           
 29751                           	psect	text38
 29752   005A82                     __ptext38:
 29753                           	callstack 0
 29754   005A82                     _pollTimedResponse:
 29755                           	callstack 118
 29756   005A82                     
 29757                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 29758   005A82  0105               	movlb	5	; () banked
 29759   005A84  2996               	incf	_timedResponseType& (0+255),w,b
 29760   005A86  A4D8               	btfss	status,2,c
 29761   005A88  EF48  F02D         	goto	u8251
 29762   005A8C  EF4A  F02D         	goto	u8250
 29763   005A90                     u8251:
 29764   005A90  EF4C  F02D         	goto	l10724
 29765   005A94                     u8250:
 29766   005A94  EFA0  F02D         	goto	l1661
 29767   005A98                     l10724:
 29768                           
 29769                           ; BSR set to: 5
 29770                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 29771   005A98  5185               	movf	_timedResponseCallback& (0+255),w,b
 29772   005A9A  1186               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 29773   005A9C  A4D8               	btfss	status,2,c
 29774   005A9E  EF53  F02D         	goto	u8261
 29775   005AA2  EF55  F02D         	goto	u8260
 29776   005AA6                     u8261:
 29777   005AA6  EF58  F02D         	goto	l10728
 29778   005AAA                     u8260:
 29779   005AAA                     l10726:
 29780                           
 29781                           ; BSR set to: 5
 29782                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 29783   005AAA  6996               	setf	_timedResponseType& (0+255),b
 29784                           
 29785                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 29786   005AAC  EFA0  F02D         	goto	l1661
 29787   005AB0                     l10728:
 29788                           
 29789                           ; BSR set to: 5
 29790                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 29791   005AB0  D802               	call	u8278
 29792   005AB2  EF69  F02D         	goto	u8279
 29793   005AB6                     u8278:
 29794   005AB6  0005               	push	
 29795   005AB8  6EFA               	movwf	pclath,c
 29796   005ABA  5185               	movf	_timedResponseCallback& (0+255),w,b
 29797   005ABC  6EFD               	movwf	tosl,c
 29798   005ABE  5186               	movf	(_timedResponseCallback+1)& (0+255),w,b
 29799   005AC0  6EFE               	movwf	tosh,c
 29800   005AC2  6AFF               	clrf	tosu,c
 29801   005AC4  50FA               	movf	pclath,w,c
 29802   005AC6  C598  F52E         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 29803   005ACA  C595  F52F         	movff	_timedResponseStep,nvTRnvrdCallback@step
 29804   005ACE  5196               	movf	_timedResponseType& (0+255),w,b
 29805   005AD0  0012               	return		;indir
 29806   005AD2                     u8279:
 29807   005AD2  6E3F               	movwf	pollTimedResponse@result^(0+1280),c
 29808                           
 29809                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 29810   005AD4  EF87  F02D         	goto	l10742
 29811   005AD8                     l10730:
 29812                           
 29813                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 29814   005AD8  0105               	movlb	5	; () banked
 29815   005ADA  5197               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 29816   005ADC  B4D8               	btfsc	status,2,c
 29817   005ADE  EF73  F02D         	goto	u8281
 29818   005AE2  EF75  F02D         	goto	u8280
 29819   005AE6                     u8281:
 29820   005AE6  EF55  F02D         	goto	l10726
 29821   005AEA                     u8280:
 29822   005AEA                     
 29823                           ; BSR set to: 5
 29824                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 29825   005AEA  2B98               	incf	_timedResponseServiceIndex& (0+255),f,b
 29826   005AEC                     
 29827                           ; BSR set to: 5
 29828                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 6) {
 29829   005AEC  0E05               	movlw	5
 29830   005AEE  6598               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 29831   005AF0  EF7C  F02D         	goto	u8291
 29832   005AF4  EF7E  F02D         	goto	u8290
 29833   005AF8                     u8291:
 29834   005AF8  EF80  F02D         	goto	l1666
 29835   005AFC                     u8290:
 29836   005AFC  EF55  F02D         	goto	l10726
 29837   005B00                     l1666:
 29838                           
 29839                           ; BSR set to: 5
 29840                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 29841   005B00  6B95               	clrf	_timedResponseStep& (0+255),b
 29842   005B02  EFA0  F02D         	goto	l1661
 29843   005B06                     l10738:
 29844                           
 29845                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 29846   005B06  0105               	movlb	5	; () banked
 29847   005B08  2B95               	incf	_timedResponseStep& (0+255),f,b
 29848                           
 29849                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 29850   005B0A  EFA0  F02D         	goto	l1661
 29851   005B0E                     l10742:
 29852   005B0E  503F               	movf	pollTimedResponse@result^(0+1280),w,c
 29853   005B10  6E3D               	movwf	??_pollTimedResponse^(0+1280),c
 29854   005B12  6A3E               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 29855                           
 29856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29857                           ; Switch size 1, requested type "simple"
 29858                           ; Number of cases is 1, Range of values is 0 to 0
 29859                           ; switch strategies available:
 29860                           ; Name         Instructions Cycles
 29861                           ; simple_byte            4     3 (average)
 29862                           ;	Chosen strategy is simple_byte
 29863   005B14  503E               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 29864   005B16  0A00               	xorlw	0	; case 0
 29865   005B18  B4D8               	btfsc	status,2,c
 29866   005B1A  EF91  F02D         	goto	l11520
 29867   005B1E  EFA0  F02D         	goto	l1661
 29868   005B22                     l11520:
 29869                           
 29870                           ; Switch size 1, requested type "simple"
 29871                           ; Number of cases is 3, Range of values is 0 to 2
 29872                           ; switch strategies available:
 29873                           ; Name         Instructions Cycles
 29874                           ; simple_byte           10     6 (average)
 29875                           ;	Chosen strategy is simple_byte
 29876   005B22  503D               	movf	??_pollTimedResponse^(0+1280),w,c
 29877   005B24  0A00               	xorlw	0	; case 0
 29878   005B26  B4D8               	btfsc	status,2,c
 29879   005B28  EF6C  F02D         	goto	l10730
 29880   005B2C  0A01               	xorlw	1	; case 1
 29881   005B2E  B4D8               	btfsc	status,2,c
 29882   005B30  EFA0  F02D         	goto	l1661
 29883   005B34  0A03               	xorlw	3	; case 2
 29884   005B36  B4D8               	btfsc	status,2,c
 29885   005B38  EF83  F02D         	goto	l10738
 29886   005B3C  EFA0  F02D         	goto	l1661
 29887   005B40                     l1661:
 29888   005B40  0012               	return		;funcret
 29889   005B42                     __end_of_pollTimedResponse:
 29890                           	callstack 0
 29891                           
 29892 ;; *************** function _nvTRnvrdCallback *****************
 29893 ;; Defined at:
 29894 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 29895 ;; Parameters:    Size  Location     Type
 29896 ;;  type            1    wreg     unsigned char 
 29897 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 29898 ;;  step            1   46[COMRAM] unsigned char 
 29899 ;; Auto vars:     Size  Location     Type
 29900 ;;  type            1    0[COMRAM] unsigned char 
 29901 ;;  valueOrError    2   47[COMRAM] short 
 29902 ;; Return value:  Size  Location     Type
 29903 ;;                  1    wreg      enum E23491
 29904 ;; Registers used:
 29905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29906 ;; Tracked objects:
 29907 ;;		On entry : 0/0
 29908 ;;		On exit  : 0/0
 29909 ;;		Unchanged: 0/0
 29910 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29915 ;;Total ram usage:        4 bytes
 29916 ;; Hardware stack levels used: 1
 29917 ;; Hardware stack levels required when called: 6
 29918 ;; This function calls:
 29919 ;;		_getNV
 29920 ;;		_sendMessage4
 29921 ;; This function is called by:
 29922 ;;		_nvProcessMessage
 29923 ;;		_pollTimedResponse
 29924 ;; This function uses a non-reentrant model
 29925 ;;
 29926                           
 29927                           	psect	text39
 29928   0072DE                     __ptext39:
 29929                           	callstack 0
 29930   0072DE                     _nvTRnvrdCallback:
 29931                           	callstack 118
 29932   0072DE                     
 29933                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 48) {
 29934   0072DE  0E30               	movlw	48
 29935   0072E0  642F               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 29936   0072E2  EF75  F039         	goto	u6421
 29937   0072E6  EF77  F039         	goto	u6420
 29938   0072EA                     u6421:
 29939   0072EA  EF7A  F039         	goto	l9006
 29940   0072EE                     u6420:
 29941   0072EE                     l9002:
 29942                           
 29943                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 29944   0072EE  0E00               	movlw	0
 29945   0072F0  EF99  F039         	goto	l1374
 29946   0072F4                     l9006:
 29947                           
 29948                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 29949   0072F4  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 29950   0072F6  ECC4  F039         	call	_getNV
 29951   0072FA  C501  F530         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 29952   0072FE  C502  F531         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 29953   007302                     
 29954                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 29955   007302  BE31               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 29956   007304  EF88  F039         	goto	u6430
 29957   007308  EF86  F039         	goto	u6431
 29958   00730C                     u6431:
 29959   00730C  EF8A  F039         	goto	l9014
 29960   007310                     u6430:
 29961   007310  EF77  F039         	goto	l9002
 29962   007314                     l9014:
 29963                           
 29964                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 29965   007314  C58E  F526         	movff	_nn+1,sendMessage4@data1
 29966   007318  C58D  F527         	movff	_nn,sendMessage4@data2
 29967   00731C  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 29968   00731E  6E28               	movwf	sendMessage4@data3^(0+1280),c
 29969   007320  C530  F529         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 29970   007324  0E97               	movlw	151
 29971   007326  ECD4  F03C         	call	_sendMessage4
 29972   00732A                     
 29973                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 29974   00732A  0105               	movlb	5	; () banked
 29975   00732C  4BBB               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 29976   00732E  2BBC               	incf	(_nvDiagnostics+3)& (0+255),f,b
 29977   007330                     
 29978                           ; BSR set to: 5
 29979                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 29980   007330  0E02               	movlw	2
 29981   007332                     l1374:
 29982   007332  0012               	return		;funcret
 29983   007334                     __end_of_nvTRnvrdCallback:
 29984                           	callstack 0
 29985                           
 29986 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 29987 ;; Defined at:
 29988 ;;		line 900 in file "../../VLCBlib_PIC/mns.c"
 29989 ;; Parameters:    Size  Location     Type
 29990 ;;  type            1    wreg     unsigned char 
 29991 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 29992 ;;  step            1   46[COMRAM] unsigned char 
 29993 ;; Auto vars:     Size  Location     Type
 29994 ;;  type            1    0[COMRAM] unsigned char 
 29995 ;; Return value:  Size  Location     Type
 29996 ;;                  1    wreg      enum E23474
 29997 ;; Registers used:
 29998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29999 ;; Tracked objects:
 30000 ;;		On entry : 0/0
 30001 ;;		On exit  : 0/0
 30002 ;;		Unchanged: 0/0
 30003 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30006 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30008 ;;Total ram usage:        6 bytes
 30009 ;; Hardware stack levels used: 1
 30010 ;; Hardware stack levels required when called: 6
 30011 ;; This function calls:
 30012 ;;		_sendMessage5
 30013 ;; This function is called by:
 30014 ;;		_mnsProcessMessage
 30015 ;;		_pollTimedResponse
 30016 ;; This function uses a non-reentrant model
 30017 ;;
 30018                           
 30019                           	psect	text40
 30020   0063DA                     __ptext40:
 30021                           	callstack 0
 30022   0063DA                     _mnsTRserviceDiscoveryCallback:
 30023                           	callstack 118
 30024   0063DA                     
 30025                           ;../../VLCBlib_PIC/mns.c: 901:     if (step >= 6) {
 30026   0063DA  0E05               	movlw	5
 30027   0063DC  642F               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 30028   0063DE  EFF3  F031         	goto	u6331
 30029   0063E2  EFF5  F031         	goto	u6330
 30030   0063E6                     u6331:
 30031   0063E6  EFF8  F031         	goto	l8906
 30032   0063EA                     u6330:
 30033   0063EA                     
 30034                           ;../../VLCBlib_PIC/mns.c: 902:         return TIMED_RESPONSE_RESULT_FINISHED;
 30035   0063EA  0E00               	movlw	0
 30036   0063EC  EF38  F032         	goto	l1254
 30037   0063F0                     l8906:
 30038                           
 30039                           ;../../VLCBlib_PIC/mns.c: 905:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 30040   0063F0  C58E  F526         	movff	_nn+1,sendMessage5@data1
 30041   0063F4  C58D  F527         	movff	_nn,sendMessage5@data2
 30042   0063F8  282F               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30043   0063FA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30044   0063FC  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30045   0063FE  0D02               	mullw	2
 30046   006400  0E89               	movlw	low _services
 30047   006402  24F3               	addwf	243,w,c
 30048   006404  6EF6               	movwf	tblptrl,c
 30049   006406  0EFF               	movlw	high _services
 30050   006408  20F4               	addwfc	244,w,c
 30051   00640A  6EF7               	movwf	tblptrh,c
 30052   00640C                     	if	1	;There are 3 active tblptr bytes
 30053   00640C  6AF8               	clrf	tblptru,c
 30054   00640E  0E00               	movlw	low (__mediumconst shr (0+16))
 30055   006410  22F8               	addwfc	tblptru,f,c
 30056   006412                     	endif
 30057   006412  0009               	tblrd		*+
 30058   006414  C4F5 F530          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 30059   006418  0009               	tblrd		*+
 30060   00641A  C4F5 F531          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 30061   00641E  C530  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 30062   006422  C531  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 30063   006426                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30064   006426  6AF8               	clrf	tblptru,c
 30065   006428                     	endif
 30066   006428                     	if	0	;tblptru may be non-zero
 30067   006428                     	endif
 30068   006428  0008               	tblrd		*
 30069   00642A  C4F5 F529          	movff	tablat,sendMessage5@data4
 30070   00642E  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30071   006430  0D02               	mullw	2
 30072   006432  0E89               	movlw	low _services
 30073   006434  24F3               	addwf	243,w,c
 30074   006436  6EF6               	movwf	tblptrl,c
 30075   006438  0EFF               	movlw	high _services
 30076   00643A  20F4               	addwfc	244,w,c
 30077   00643C  6EF7               	movwf	tblptrh,c
 30078   00643E                     	if	1	;There are 3 active tblptr bytes
 30079   00643E  6AF8               	clrf	tblptru,c
 30080   006440  0E00               	movlw	low (__mediumconst shr (0+16))
 30081   006442  22F8               	addwfc	tblptru,f,c
 30082   006444                     	endif
 30083   006444  0009               	tblrd		*+
 30084   006446  C4F5 F532          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 30085   00644A  0009               	tblrd		*+
 30086   00644C  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 30087   006450  0E01               	movlw	1
 30088   006452  2632               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 30089   006454  0E00               	movlw	0
 30090   006456  2233               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 30091   006458  C532  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 30092   00645C  C533  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 30093   006460                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30094   006460  6AF8               	clrf	tblptru,c
 30095   006462                     	endif
 30096   006462                     	if	0	;tblptru may be non-zero
 30097   006462                     	endif
 30098   006462  0008               	tblrd		*
 30099   006464  C4F5 F52A          	movff	tablat,sendMessage5@data5
 30100   006468  0EAC               	movlw	172
 30101   00646A  EC28  F03D         	call	_sendMessage5
 30102   00646E                     
 30103                           ;../../VLCBlib_PIC/mns.c: 907:     return TIMED_RESPONSE_RESULT_NEXT;
 30104   00646E  0E02               	movlw	2
 30105   006470                     l1254:
 30106   006470  0012               	return		;funcret
 30107   006472                     __end_of_mnsTRserviceDiscoveryCallback:
 30108                           	callstack 0
 30109                           
 30110 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 30111 ;; Defined at:
 30112 ;;		line 919 in file "../../VLCBlib_PIC/mns.c"
 30113 ;; Parameters:    Size  Location     Type
 30114 ;;  type            1    wreg     unsigned char 
 30115 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30116 ;;  step            1   46[COMRAM] unsigned char 
 30117 ;; Auto vars:     Size  Location     Type
 30118 ;;  type            1    0[COMRAM] unsigned char 
 30119 ;;  d               2   51[COMRAM] PTR struct DiagnosticVal
 30120 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 30121 ;;		 -> canDiagnostics(38), NULL(0), 
 30122 ;; Return value:  Size  Location     Type
 30123 ;;                  1    wreg      enum E23474
 30124 ;; Registers used:
 30125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30126 ;; Tracked objects:
 30127 ;;		On entry : 0/0
 30128 ;;		On exit  : 0/0
 30129 ;;		Unchanged: 0/0
 30130 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30134 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30135 ;;Total ram usage:        8 bytes
 30136 ;; Hardware stack levels used: 1
 30137 ;; Hardware stack levels required when called: 6
 30138 ;; This function calls:
 30139 ;;		NULL
 30140 ;;		_canGetDiagnostic
 30141 ;;		_consumerGetDiagnostic
 30142 ;;		_mnsGetDiagnostic
 30143 ;;		_nvGetDiagnostic
 30144 ;;		_sendMessage6
 30145 ;;		_teachGetDiagnostic
 30146 ;; This function is called by:
 30147 ;;		_mnsProcessMessage
 30148 ;;		_pollTimedResponse
 30149 ;; This function uses a non-reentrant model
 30150 ;;
 30151                           
 30152                           	psect	text41
 30153   004CDE                     __ptext41:
 30154                           	callstack 0
 30155   004CDE                     _mnsTRallDiagnosticsCallback:
 30156                           	callstack 118
 30157   004CDE                     
 30158                           ;../../VLCBlib_PIC/mns.c: 920:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 30159   004CDE  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30160   004CE0  0D02               	mullw	2
 30161   004CE2  0E89               	movlw	low _services
 30162   004CE4  24F3               	addwf	243,w,c
 30163   004CE6  6EF6               	movwf	tblptrl,c
 30164   004CE8  0EFF               	movlw	high _services
 30165   004CEA  20F4               	addwfc	244,w,c
 30166   004CEC  6EF7               	movwf	tblptrh,c
 30167   004CEE                     	if	1	;There are 3 active tblptr bytes
 30168   004CEE  6AF8               	clrf	tblptru,c
 30169   004CF0  0E00               	movlw	low (__mediumconst shr (0+16))
 30170   004CF2  22F8               	addwfc	tblptru,f,c
 30171   004CF4                     	endif
 30172   004CF4  0009               	tblrd		*+
 30173   004CF6  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30174   004CFA  0009               	tblrd		*+
 30175   004CFC  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30176   004D00  0E0C               	movlw	12
 30177   004D02  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30178   004D04  0E00               	movlw	0
 30179   004D06  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30180   004D08  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30181   004D0C  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30182   004D10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30183   004D10  6AF8               	clrf	tblptru,c
 30184   004D12                     	endif
 30185   004D12                     	if	0	;tblptru may be non-zero
 30186   004D12                     	endif
 30187   004D12  0009               	tblrd		*+
 30188   004D14  50F5               	movf	tablat,w,c
 30189   004D16  0009               	tblrd		*+
 30190   004D18  10F5               	iorwf	tablat,w,c
 30191   004D1A  A4D8               	btfss	status,2,c
 30192   004D1C  EF92  F026         	goto	u6341
 30193   004D20  EF94  F026         	goto	u6340
 30194   004D24                     u6341:
 30195   004D24  EFA6  F026         	goto	l8920
 30196   004D28                     u6340:
 30197   004D28                     
 30198                           ;../../VLCBlib_PIC/mns.c: 921:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 30199   004D28  C58E  F526         	movff	_nn+1,sendMessage6@data1
 30200   004D2C  C58D  F527         	movff	_nn,sendMessage6@data2
 30201   004D30  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30202   004D32  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30203   004D34  0E00               	movlw	0
 30204   004D36  6E29               	movwf	sendMessage6@data4^(0+1280),c
 30205   004D38  0E00               	movlw	0
 30206   004D3A  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30207   004D3C  0E00               	movlw	0
 30208   004D3E  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30209   004D40  0EC7               	movlw	199
 30210   004D42  ECBF  F03C         	call	_sendMessage6
 30211   004D46                     l8916:
 30212                           
 30213                           ;../../VLCBlib_PIC/mns.c: 922:         return TIMED_RESPONSE_RESULT_FINISHED;
 30214   004D46  0E00               	movlw	0
 30215   004D48  EFFC  F026         	goto	l1258
 30216   004D4C                     l8920:
 30217                           
 30218                           ;../../VLCBlib_PIC/mns.c: 924:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 30219   004D4C  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30220   004D4E  0D02               	mullw	2
 30221   004D50  0E89               	movlw	low _services
 30222   004D52  24F3               	addwf	243,w,c
 30223   004D54  6EF6               	movwf	tblptrl,c
 30224   004D56  0EFF               	movlw	high _services
 30225   004D58  20F4               	addwfc	244,w,c
 30226   004D5A  6EF7               	movwf	tblptrh,c
 30227   004D5C                     	if	1	;There are 3 active tblptr bytes
 30228   004D5C  6AF8               	clrf	tblptru,c
 30229   004D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 30230   004D60  22F8               	addwfc	tblptru,f,c
 30231   004D62                     	endif
 30232   004D62  0009               	tblrd		*+
 30233   004D64  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30234   004D68  0009               	tblrd		*+
 30235   004D6A  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30236   004D6E  0E0C               	movlw	12
 30237   004D70  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30238   004D72  0E00               	movlw	0
 30239   004D74  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30240   004D76  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30241   004D7A  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30242   004D7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30243   004D7E  6AF8               	clrf	tblptru,c
 30244   004D80                     	endif
 30245   004D80                     	if	0	;tblptru may be non-zero
 30246   004D80                     	endif
 30247   004D80  0009               	tblrd		*+
 30248   004D82  C4F5 F532          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 30249   004D86  0009               	tblrd		*+
 30250   004D88  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 30251   004D8C  D802               	call	u6358
 30252   004D8E  EFD3  F026         	goto	u6359
 30253   004D92                     u6358:
 30254   004D92  0005               	push	
 30255   004D94  6EFA               	movwf	pclath,c
 30256   004D96  5032               	movf	(??_mnsTRallDiagnosticsCallback+2)^(0+1280),w,c
 30257   004D98  6EFD               	movwf	tosl,c
 30258   004D9A  5033               	movf	(??_mnsTRallDiagnosticsCallback+3)^(0+1280),w,c
 30259   004D9C  6EFE               	movwf	tosh,c
 30260   004D9E  6AFF               	clrf	tosu,c
 30261   004DA0  50FA               	movf	pclath,w,c
 30262   004DA2  502F               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 30263   004DA4  0012               	return		;indir
 30264   004DA6                     u6359:
 30265   004DA6  C507  F534         	movff	?_nvGetDiagnostic,mnsTRallDiagnosticsCallback@d
 30266   004DAA  C508  F535         	movff	?_nvGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 30267   004DAE                     
 30268                           ;../../VLCBlib_PIC/mns.c: 925:     if (d == ((void*)0)) {
 30269   004DAE  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30270   004DB0  1035               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30271   004DB2  A4D8               	btfss	status,2,c
 30272   004DB4  EFDE  F026         	goto	u6361
 30273   004DB8  EFE0  F026         	goto	u6360
 30274   004DBC                     u6361:
 30275   004DBC  EFE2  F026         	goto	l8928
 30276   004DC0                     u6360:
 30277   004DC0  EFA3  F026         	goto	l8916
 30278   004DC4                     l8928:
 30279                           
 30280                           ;../../VLCBlib_PIC/mns.c: 930:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 30281   004DC4  C58E  F526         	movff	_nn+1,sendMessage6@data1
 30282   004DC8  C58D  F527         	movff	_nn,sendMessage6@data2
 30283   004DCC  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30284   004DCE  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30285   004DD0  C52F  F529         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 30286   004DD4  EE20 F001          	lfsr	2,1
 30287   004DD8  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30288   004DDA  26D9               	addwf	fsr2l,f,c
 30289   004DDC  5035               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30290   004DDE  22DA               	addwfc	fsr2h,f,c
 30291   004DE0  50DF               	movf	indf2,w,c
 30292   004DE2  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30293   004DE4  C534  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 30294   004DE8  C535  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 30295   004DEC  50DF               	movf	indf2,w,c
 30296   004DEE  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30297   004DF0  0EC7               	movlw	199
 30298   004DF2  ECBF  F03C         	call	_sendMessage6
 30299   004DF6                     
 30300                           ;../../VLCBlib_PIC/mns.c: 931:     return TIMED_RESPONSE_RESULT_NEXT;
 30301   004DF6  0E02               	movlw	2
 30302   004DF8                     l1258:
 30303   004DF8  0012               	return		;funcret
 30304   004DFA                     __end_of_mnsTRallDiagnosticsCallback:
 30305                           	callstack 0
 30306                           
 30307 ;; *************** function _mnsTRrqnpnCallback *****************
 30308 ;; Defined at:
 30309 ;;		line 942 in file "../../VLCBlib_PIC/mns.c"
 30310 ;; Parameters:    Size  Location     Type
 30311 ;;  type            1    wreg     unsigned char 
 30312 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30313 ;;  step            1   46[COMRAM] unsigned char 
 30314 ;; Auto vars:     Size  Location     Type
 30315 ;;  type            1    0[COMRAM] unsigned char 
 30316 ;; Return value:  Size  Location     Type
 30317 ;;                  1    wreg      enum E23474
 30318 ;; Registers used:
 30319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30320 ;; Tracked objects:
 30321 ;;		On entry : 0/0
 30322 ;;		On exit  : 0/0
 30323 ;;		Unchanged: 0/0
 30324 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30329 ;;Total ram usage:        2 bytes
 30330 ;; Hardware stack levels used: 1
 30331 ;; Hardware stack levels required when called: 6
 30332 ;; This function calls:
 30333 ;;		_getParameter
 30334 ;;		_sendMessage4
 30335 ;; This function is called by:
 30336 ;;		_mnsProcessMessage
 30337 ;;		_pollTimedResponse
 30338 ;; This function uses a non-reentrant model
 30339 ;;
 30340                           
 30341                           	psect	text42
 30342   0077C2                     __ptext42:
 30343                           	callstack 0
 30344   0077C2                     _mnsTRrqnpnCallback:
 30345                           	callstack 118
 30346   0077C2                     
 30347                           ;../../VLCBlib_PIC/mns.c: 943:     if (step >= 20) {
 30348   0077C2  0E13               	movlw	19
 30349   0077C4  642F               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 30350   0077C6  EFE7  F03B         	goto	u6371
 30351   0077CA  EFE9  F03B         	goto	u6370
 30352   0077CE                     u6371:
 30353   0077CE  EFEC  F03B         	goto	l8940
 30354   0077D2                     u6370:
 30355   0077D2                     
 30356                           ;../../VLCBlib_PIC/mns.c: 944:         return TIMED_RESPONSE_RESULT_FINISHED;
 30357   0077D2  0E00               	movlw	0
 30358   0077D4  EFFA  F03B         	goto	l1263
 30359   0077D8                     l8940:
 30360                           
 30361                           ;../../VLCBlib_PIC/mns.c: 946:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 30362   0077D8  C58E  F526         	movff	_nn+1,sendMessage4@data1
 30363   0077DC  C58D  F527         	movff	_nn,sendMessage4@data2
 30364   0077E0  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30365   0077E2  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30366   0077E4  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30367   0077E6  EC2D  F021         	call	_getParameter
 30368   0077EA  6E29               	movwf	sendMessage4@data4^(0+1280),c
 30369   0077EC  0E9B               	movlw	155
 30370   0077EE  ECD4  F03C         	call	_sendMessage4
 30371   0077F2                     
 30372                           ;../../VLCBlib_PIC/mns.c: 947:     return TIMED_RESPONSE_RESULT_NEXT;
 30373   0077F2  0E02               	movlw	2
 30374   0077F4                     l1263:
 30375   0077F4  0012               	return		;funcret
 30376   0077F6                     __end_of_mnsTRrqnpnCallback:
 30377                           	callstack 0
 30378                           
 30379 ;; *************** function _nerdCallback *****************
 30380 ;; Defined at:
 30381 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30382 ;; Parameters:    Size  Location     Type
 30383 ;;  type            1    wreg     unsigned char 
 30384 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30385 ;;  step            1   46[COMRAM] unsigned char 
 30386 ;; Auto vars:     Size  Location     Type
 30387 ;;  type            1    0[COMRAM] unsigned char 
 30388 ;;  eventNumber     2   49[COMRAM] struct Word
 30389 ;;  nodeNumber      2   47[COMRAM] struct Word
 30390 ;; Return value:  Size  Location     Type
 30391 ;;                  1    wreg      enum E23474
 30392 ;; Registers used:
 30393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30394 ;; Tracked objects:
 30395 ;;		On entry : 0/0
 30396 ;;		On exit  : 0/0
 30397 ;;		Unchanged: 0/0
 30398 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30400 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30402 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30403 ;;Total ram usage:        6 bytes
 30404 ;; Hardware stack levels used: 1
 30405 ;; Hardware stack levels required when called: 6
 30406 ;; This function calls:
 30407 ;;		_getEN
 30408 ;;		_getNN
 30409 ;;		_sendMessage7
 30410 ;;		_tableIndexToEvtIdx
 30411 ;; This function is called by:
 30412 ;;		_doNerd
 30413 ;;		_pollTimedResponse
 30414 ;; This function uses a non-reentrant model
 30415 ;;
 30416                           
 30417                           	psect	text43
 30418   006E2A                     __ptext43:
 30419                           	callstack 0
 30420   006E2A                     _nerdCallback:
 30421                           	callstack 118
 30422   006E2A                     
 30423                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 255) {
 30424   006E2A  282F               	incf	nerdCallback@step^(0+1280),w,c
 30425   006E2C  A4D8               	btfss	status,2,c
 30426   006E2E  EF1B  F037         	goto	u6241
 30427   006E32  EF1D  F037         	goto	u6240
 30428   006E36                     u6241:
 30429   006E36  EF20  F037         	goto	l8834
 30430   006E3A                     u6240:
 30431   006E3A                     
 30432                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30433   006E3A  0E00               	movlw	0
 30434   006E3C  EF4B  F037         	goto	l830
 30435   006E40                     l8834:
 30436                           
 30437                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 30438   006E40  502F               	movf	nerdCallback@step^(0+1280),w,c
 30439   006E42  EC0C  F030         	call	_getEN
 30440   006E46  C50D  F532         	movff	?_getEN,nerdCallback@eventNumber
 30441   006E4A  C50E  F533         	movff	?_getEN+1,nerdCallback@eventNumber+1
 30442   006E4E                     
 30443                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 30444   006E4E  5032               	movf	nerdCallback@eventNumber^(0+1280),w,c
 30445   006E50  1033               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 30446   006E52  B4D8               	btfsc	status,2,c
 30447   006E54  EF2E  F037         	goto	u6251
 30448   006E58  EF30  F037         	goto	u6250
 30449   006E5C                     u6251:
 30450   006E5C  EF4A  F037         	goto	l8842
 30451   006E60                     u6250:
 30452   006E60                     
 30453                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 30454   006E60  502F               	movf	nerdCallback@step^(0+1280),w,c
 30455   006E62  ECDE  F025         	call	_getNN
 30456   006E66  C50D  F530         	movff	?_getNN,nerdCallback@nodeNumber
 30457   006E6A  C50E  F531         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 30458   006E6E                     
 30459                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 30460   006E6E  C58E  F526         	movff	_nn+1,sendMessage7@data1
 30461   006E72  C58D  F527         	movff	_nn,sendMessage7@data2
 30462   006E76  C531  F528         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 30463   006E7A  C530  F529         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 30464   006E7E  C533  F52A         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 30465   006E82  C532  F52B         	movff	nerdCallback@eventNumber,sendMessage7@data6
 30466   006E86  502F               	movf	nerdCallback@step^(0+1280),w,c
 30467   006E88  EC42  F03E         	call	_tableIndexToEvtIdx
 30468   006E8C  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 30469   006E8E  0EF2               	movlw	242
 30470   006E90  EC13  F03D         	call	_sendMessage7
 30471   006E94                     l8842:
 30472                           
 30473                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 30474   006E94  0E02               	movlw	2
 30475   006E96                     l830:
 30476   006E96  0012               	return		;funcret
 30477   006E98                     __end_of_nerdCallback:
 30478                           	callstack 0
 30479                           
 30480 ;; *************** function _reqevCallback *****************
 30481 ;; Defined at:
 30482 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30483 ;; Parameters:    Size  Location     Type
 30484 ;;  tableIndex      1    wreg     unsigned char 
 30485 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30486 ;;  step            1   46[COMRAM] unsigned char 
 30487 ;; Auto vars:     Size  Location     Type
 30488 ;;  tableIndex      1   59[COMRAM] unsigned char 
 30489 ;;  nodeNumber      2   57[COMRAM] struct Word
 30490 ;;  ev              2   55[COMRAM] short 
 30491 ;;  eventNumber     2   53[COMRAM] struct Word
 30492 ;;  nEv             1   52[COMRAM] unsigned char 
 30493 ;; Return value:  Size  Location     Type
 30494 ;;                  1    wreg      enum E23474
 30495 ;; Registers used:
 30496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30497 ;; Tracked objects:
 30498 ;;		On entry : 0/0
 30499 ;;		On exit  : 0/0
 30500 ;;		Unchanged: 0/0
 30501 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30503 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30504 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30505 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30506 ;;Total ram usage:       15 bytes
 30507 ;; Hardware stack levels used: 1
 30508 ;; Hardware stack levels required when called: 6
 30509 ;; This function calls:
 30510 ;;		_getEN
 30511 ;;		_getEv
 30512 ;;		_getNN
 30513 ;;		_numEv
 30514 ;;		_sendMessage5
 30515 ;;		_sendMessage6
 30516 ;;		_tableIndexToEvtIdx
 30517 ;; This function is called by:
 30518 ;;		_doReval
 30519 ;;		_doReqev
 30520 ;;		_pollTimedResponse
 30521 ;; This function uses a non-reentrant model
 30522 ;;
 30523                           
 30524                           	psect	text44
 30525   005694                     __ptext44:
 30526                           	callstack 0
 30527   005694                     _reqevCallback:
 30528                           	callstack 118
 30529                           
 30530                           ;incstack = 0
 30531                           ;reqevCallback@tableIndex stored from wreg
 30532   005694  6E3C               	movwf	reqevCallback@tableIndex^(0+1280),c
 30533   005696                     
 30534                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 30535   005696  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30536   005698  EC51  F03E         	call	_numEv
 30537   00569C  6E35               	movwf	reqevCallback@nEv^(0+1280),c
 30538   00569E                     
 30539                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 30540   00569E  502F               	movf	reqevCallback@step^(0+1280),w,c
 30541   0056A0  6E30               	movwf	??_reqevCallback^(0+1280),c
 30542   0056A2  6A31               	clrf	(??_reqevCallback+1)^(0+1280),c
 30543   0056A4  0E01               	movlw	1
 30544   0056A6  2630               	addwf	??_reqevCallback^(0+1280),f,c
 30545   0056A8  0E00               	movlw	0
 30546   0056AA  2231               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 30547   0056AC  5035               	movf	reqevCallback@nEv^(0+1280),w,c
 30548   0056AE  6E32               	movwf	(??_reqevCallback+2)^(0+1280),c
 30549   0056B0  6A33               	clrf	(??_reqevCallback+3)^(0+1280),c
 30550   0056B2  5030               	movf	??_reqevCallback^(0+1280),w,c
 30551   0056B4  5C32               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 30552   0056B6  5033               	movf	(??_reqevCallback+3)^(0+1280),w,c
 30553   0056B8  0A80               	xorlw	128
 30554   0056BA  6E34               	movwf	(??_reqevCallback+4)^(0+1280),c
 30555   0056BC  5031               	movf	(??_reqevCallback+1)^(0+1280),w,c
 30556   0056BE  0A80               	xorlw	128
 30557   0056C0  5834               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 30558   0056C2  B0D8               	btfsc	status,0,c
 30559   0056C4  EF66  F02B         	goto	u6261
 30560   0056C8  EF68  F02B         	goto	u6260
 30561   0056CC                     u6261:
 30562   0056CC  EF6B  F02B         	goto	l8854
 30563   0056D0                     u6260:
 30564   0056D0                     
 30565                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30566   0056D0  0E00               	movlw	0
 30567   0056D2  EFB4  F02B         	goto	l874
 30568   0056D6                     l8854:
 30569                           
 30570                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 30571   0056D6  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30572   0056D8  ECDE  F025         	call	_getNN
 30573   0056DC  C50D  F53A         	movff	?_getNN,reqevCallback@nodeNumber
 30574   0056E0  C50E  F53B         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 30575                           
 30576                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 30577   0056E4  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30578   0056E6  EC0C  F030         	call	_getEN
 30579   0056EA  C50D  F536         	movff	?_getEN,reqevCallback@eventNumber
 30580   0056EE  C50E  F537         	movff	?_getEN+1,reqevCallback@eventNumber+1
 30581                           
 30582                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 30583   0056F2  C52F  F50D         	movff	reqevCallback@step,getEv@evNum
 30584   0056F6  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30585   0056F8  EC01  F031         	call	_getEv
 30586   0056FC  C50D  F538         	movff	?_getEv,reqevCallback@ev
 30587   005700  C50E  F539         	movff	?_getEv+1,reqevCallback@ev+1
 30588   005704                     
 30589                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 30590   005704  BE39               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 30591   005706  EF87  F02B         	goto	u6271
 30592   00570A  EF89  F02B         	goto	u6270
 30593   00570E                     u6271:
 30594   00570E  EFB3  F02B         	goto	l8864
 30595   005712                     u6270:
 30596   005712                     
 30597                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 30598   005712  0ED3               	movlw	211
 30599   005714  0105               	movlb	5	; () banked
 30600   005716  19A2               	xorwf	_timedResponseOpcode& (0+255),w,b
 30601   005718  A4D8               	btfss	status,2,c
 30602   00571A  EF91  F02B         	goto	u6281
 30603   00571E  EF93  F02B         	goto	u6280
 30604   005722                     u6281:
 30605   005722  EFA4  F02B         	goto	l8862
 30606   005726                     u6280:
 30607   005726                     
 30608                           ; BSR set to: 5
 30609                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 30610   005726  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 30611   00572A  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 30612   00572E  C537  F528         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 30613   005732  C536  F529         	movff	reqevCallback@eventNumber,sendMessage6@data4
 30614   005736  282F               	incf	reqevCallback@step^(0+1280),w,c
 30615   005738  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30616   00573A  C538  F52B         	movff	reqevCallback@ev,sendMessage6@data6
 30617   00573E  0ED3               	movlw	211
 30618   005740  ECBF  F03C         	call	_sendMessage6
 30619                           
 30620                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 30621   005744  EFB3  F02B         	goto	l8864
 30622   005748                     l8862:
 30623                           
 30624                           ; BSR set to: 5
 30625                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 30626   005748  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 30627   00574C  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 30628   005750  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30629   005752  EC42  F03E         	call	_tableIndexToEvtIdx
 30630   005756  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30631   005758  282F               	incf	reqevCallback@step^(0+1280),w,c
 30632   00575A  6E29               	movwf	sendMessage5@data4^(0+1280),c
 30633   00575C  C538  F52A         	movff	reqevCallback@ev,sendMessage5@data5
 30634   005760  0EB5               	movlw	181
 30635   005762  EC28  F03D         	call	_sendMessage5
 30636   005766                     l8864:
 30637                           
 30638                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 30639   005766  0E02               	movlw	2
 30640   005768                     l874:
 30641   005768  0012               	return		;funcret
 30642   00576A                     __end_of_reqevCallback:
 30643                           	callstack 0
 30644                           
 30645 ;; *************** function _numEv *****************
 30646 ;; Defined at:
 30647 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30648 ;; Parameters:    Size  Location     Type
 30649 ;;  tableIndex      1    wreg     unsigned char 
 30650 ;; Auto vars:     Size  Location     Type
 30651 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30652 ;; Return value:  Size  Location     Type
 30653 ;;                  1    wreg      unsigned char 
 30654 ;; Registers used:
 30655 ;;		wreg
 30656 ;; Tracked objects:
 30657 ;;		On entry : 0/0
 30658 ;;		On exit  : 0/0
 30659 ;;		Unchanged: 0/0
 30660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30665 ;;Total ram usage:        0 bytes
 30666 ;; Hardware stack levels used: 1
 30667 ;; Hardware stack levels required when called: 1
 30668 ;; This function calls:
 30669 ;;		Nothing
 30670 ;; This function is called by:
 30671 ;;		_doReqev
 30672 ;;		_reqevCallback
 30673 ;; This function uses a non-reentrant model
 30674 ;;
 30675                           
 30676                           	psect	text45
 30677   007CA2                     __ptext45:
 30678                           	callstack 0
 30679   007CA2                     _numEv:
 30680                           	callstack 122
 30681   007CA2                     
 30682                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 252;
 30683   007CA2  0EFC               	movlw	252
 30684   007CA4  0012               	return		;funcret
 30685   007CA6                     __end_of_numEv:
 30686                           	callstack 0
 30687                           
 30688 ;; *************** function _getEv *****************
 30689 ;; Defined at:
 30690 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30691 ;; Parameters:    Size  Location     Type
 30692 ;;  tableIndex      1    wreg     unsigned char 
 30693 ;;  evNum           1   12[COMRAM] unsigned char 
 30694 ;; Auto vars:     Size  Location     Type
 30695 ;;  tableIndex      1   27[COMRAM] unsigned char 
 30696 ;; Return value:  Size  Location     Type
 30697 ;;                  2   12[COMRAM] short 
 30698 ;; Registers used:
 30699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30700 ;; Tracked objects:
 30701 ;;		On entry : 0/0
 30702 ;;		On exit  : 0/0
 30703 ;;		Unchanged: 0/0
 30704 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30707 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30708 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30709 ;;Total ram usage:       16 bytes
 30710 ;; Hardware stack levels used: 1
 30711 ;; Hardware stack levels required when called: 3
 30712 ;; This function calls:
 30713 ;;		_readNVM
 30714 ;; This function is called by:
 30715 ;;		_doReval
 30716 ;;		_doReqev
 30717 ;;		_reqevCallback
 30718 ;; This function uses a non-reentrant model
 30719 ;;
 30720                           
 30721                           	psect	text46
 30722   006202                     __ptext46:
 30723                           	callstack 0
 30724   006202                     _getEv:
 30725                           	callstack 120
 30726                           
 30727                           ;incstack = 0
 30728                           ;getEv@tableIndex stored from wreg
 30729   006202  6E1C               	movwf	getEv@tableIndex^(0+1280),c
 30730   006204                     
 30731                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 255) {
 30732   006204  281C               	incf	getEv@tableIndex^(0+1280),w,c
 30733   006206  A4D8               	btfss	status,2,c
 30734   006208  EF08  F031         	goto	u5581
 30735   00620C  EF0A  F031         	goto	u5580
 30736   006210                     u5581:
 30737   006210  EF10  F031         	goto	l8076
 30738   006214                     u5580:
 30739   006214                     
 30740                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 30741   006214  0E00               	movlw	0
 30742   006216  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30743   006218  0E08               	movlw	8
 30744   00621A  6E0D               	movwf	?_getEv^(0+1280),c
 30745   00621C  EF4F  F031         	goto	l915
 30746   006220                     l8076:
 30747                           
 30748                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 252) {
 30749   006220  0EFB               	movlw	251
 30750   006222  640D               	cpfsgt	getEv@evNum^(0+1280),c
 30751   006224  EF16  F031         	goto	u5591
 30752   006228  EF18  F031         	goto	u5590
 30753   00622C                     u5591:
 30754   00622C  EF1E  F031         	goto	l8082
 30755   006230                     u5590:
 30756   006230                     
 30757                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 30758   006230  0EFF               	movlw	255
 30759   006232  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30760   006234  0EFA               	movlw	250
 30761   006236  6E0D               	movwf	?_getEv^(0+1280),c
 30762   006238  EF4F  F031         	goto	l915
 30763   00623C                     l8082:
 30764                           
 30765                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evNum);
 30766   00623C  500D               	movf	getEv@evNum^(0+1280),w,c
 30767   00623E  6E0F               	movwf	??_getEv^(0+1280),c
 30768   006240  6A10               	clrf	(??_getEv+1)^(0+1280),c
 30769   006242  6A11               	clrf	(??_getEv+2)^(0+1280),c
 30770   006244  501C               	movf	getEv@tableIndex^(0+1280),w,c
 30771   006246  6E12               	movwf	(??_getEv+3)^(0+1280),c
 30772   006248  6A13               	clrf	(??_getEv+4)^(0+1280),c
 30773   00624A  0E01               	movlw	1
 30774   00624C  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30775   00624E  C4F3 F514          	movff	prodl,??_getEv+5
 30776   006252  C4F4 F515          	movff	prodh,??_getEv+6
 30777   006256  0213               	mulwf	(??_getEv+4)^(0+1280),c
 30778   006258  50F3               	movf	prodl,w,c
 30779   00625A  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30780   00625C  0E01               	movlw	1
 30781   00625E  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30782   006260  50F3               	movf	prodl,w,c
 30783   006262  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30784   006264  C514  F516         	movff	??_getEv+5,??_getEv+7
 30785   006268  C515  F517         	movff	??_getEv+6,??_getEv+8
 30786   00626C  6A18               	clrf	(??_getEv+9)^(0+1280),c
 30787   00626E  500F               	movf	??_getEv^(0+1280),w,c
 30788   006270  2416               	addwf	(??_getEv+7)^(0+1280),w,c
 30789   006272  6E19               	movwf	(??_getEv+10)^(0+1280),c
 30790   006274  5010               	movf	(??_getEv+1)^(0+1280),w,c
 30791   006276  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 30792   006278  6E1A               	movwf	(??_getEv+11)^(0+1280),c
 30793   00627A  5011               	movf	(??_getEv+2)^(0+1280),w,c
 30794   00627C  2018               	addwfc	(??_getEv+9)^(0+1280),w,c
 30795   00627E  6E1B               	movwf	(??_getEv+12)^(0+1280),c
 30796   006280  0E05               	movlw	5
 30797   006282  2419               	addwf	(??_getEv+10)^(0+1280),w,c
 30798   006284  6E07               	movwf	readNVM@index^(0+1280),c
 30799   006286  0E00               	movlw	0
 30800   006288  201A               	addwfc	(??_getEv+11)^(0+1280),w,c
 30801   00628A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 30802   00628C  0E01               	movlw	1
 30803   00628E  201B               	addwfc	(??_getEv+12)^(0+1280),w,c
 30804   006290  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 30805   006292  0E01               	movlw	1
 30806   006294  ECDB  F036         	call	_readNVM
 30807   006298  5007               	movf	?_readNVM^(0+1280),w,c
 30808   00629A  6E0D               	movwf	?_getEv^(0+1280),c
 30809   00629C  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 30810   00629E                     l915:
 30811   00629E  0012               	return		;funcret
 30812   0062A0                     __end_of_getEv:
 30813                           	callstack 0
 30814                           
 30815 ;; *************** function _tableIndexToEvtIdx *****************
 30816 ;; Defined at:
 30817 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30818 ;; Parameters:    Size  Location     Type
 30819 ;;  tableIndex      1    wreg     unsigned char 
 30820 ;; Auto vars:     Size  Location     Type
 30821 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30822 ;; Return value:  Size  Location     Type
 30823 ;;                  1    wreg      unsigned char 
 30824 ;; Registers used:
 30825 ;;		wreg, status,2, status,0
 30826 ;; Tracked objects:
 30827 ;;		On entry : 0/0
 30828 ;;		On exit  : 0/0
 30829 ;;		Unchanged: 0/0
 30830 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30835 ;;Total ram usage:        1 bytes
 30836 ;; Hardware stack levels used: 1
 30837 ;; Hardware stack levels required when called: 1
 30838 ;; This function calls:
 30839 ;;		Nothing
 30840 ;; This function is called by:
 30841 ;;		_nerdCallback
 30842 ;;		_reqevCallback
 30843 ;; This function uses a non-reentrant model
 30844 ;;
 30845                           
 30846                           	psect	text47
 30847   007C84                     __ptext47:
 30848                           	callstack 0
 30849   007C84                     _tableIndexToEvtIdx:
 30850                           	callstack 122
 30851                           
 30852                           ;incstack = 0
 30853                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 30854   007C84  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 30855   007C86                     
 30856                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 30857   007C86  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 30858   007C88  0012               	return		;funcret
 30859   007C8A                     __end_of_tableIndexToEvtIdx:
 30860                           	callstack 0
 30861                           
 30862 ;; *************** function _setNV *****************
 30863 ;; Defined at:
 30864 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 30865 ;; Parameters:    Size  Location     Type
 30866 ;;  index           1    wreg     unsigned char 
 30867 ;;  value           1   20[COMRAM] unsigned char 
 30868 ;; Auto vars:     Size  Location     Type
 30869 ;;  index           1   24[COMRAM] unsigned char 
 30870 ;;  oldValue        1   23[COMRAM] unsigned char 
 30871 ;; Return value:  Size  Location     Type
 30872 ;;                  1    wreg      unsigned char 
 30873 ;; Registers used:
 30874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30875 ;; Tracked objects:
 30876 ;;		On entry : 0/0
 30877 ;;		On exit  : 0/0
 30878 ;;		Unchanged: 0/0
 30879 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30880 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30884 ;;Total ram usage:        5 bytes
 30885 ;; Hardware stack levels used: 1
 30886 ;; Hardware stack levels required when called: 6
 30887 ;; This function calls:
 30888 ;;		_APP_nvValidate
 30889 ;;		_APP_nvValueChanged
 30890 ;;		_writeNVM
 30891 ;; This function is called by:
 30892 ;;		_nvProcessMessage
 30893 ;; This function uses a non-reentrant model
 30894 ;;
 30895                           
 30896                           	psect	text48
 30897   00662C                     __ptext48:
 30898                           	callstack 0
 30899   00662C                     _setNV:
 30900                           	callstack 118
 30901                           
 30902                           ;incstack = 0
 30903                           ;setNV@index stored from wreg
 30904   00662C  6E19               	movwf	setNV@index^(0+1280),c
 30905   00662E                     
 30906                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 48) return CMDERR_INV_NV_IDX;
 30907   00662E  0E30               	movlw	48
 30908   006630  6419               	cpfsgt	setNV@index^(0+1280),c
 30909   006632  EF1D  F033         	goto	u6401
 30910   006636  EF1F  F033         	goto	u6400
 30911   00663A                     u6401:
 30912   00663A  EF22  F033         	goto	l8970
 30913   00663E                     u6400:
 30914   00663E  0E0A               	movlw	10
 30915   006640  EF5C  F033         	goto	l1342
 30916   006644                     l8970:
 30917                           
 30918                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 30919   006644  C515  F501         	movff	setNV@value,APP_nvValidate@value
 30920   006648  5019               	movf	setNV@index^(0+1280),w,c
 30921   00664A  EC53  F03E         	call	_APP_nvValidate
 30922   00664E  0900               	iorlw	0
 30923   006650  A4D8               	btfss	status,2,c
 30924   006652  EF2D  F033         	goto	u6411
 30925   006656  EF2F  F033         	goto	u6410
 30926   00665A                     u6411:
 30927   00665A  EF32  F033         	goto	l8976
 30928   00665E                     u6410:
 30929   00665E  0E0C               	movlw	12
 30930   006660  EF5C  F033         	goto	l1342
 30931   006664                     l8976:
 30932                           
 30933                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 30934   006664  0E00               	movlw	low _nvCache
 30935   006666  2419               	addwf	setNV@index^(0+1280),w,c
 30936   006668  6ED9               	movwf	fsr2l,c
 30937   00666A  6ADA               	clrf	fsr2h,c
 30938   00666C  0E06               	movlw	high _nvCache
 30939   00666E  22DA               	addwfc	fsr2h,f,c
 30940   006670  50DF               	movf	indf2,w,c
 30941   006672  6E18               	movwf	setNV@oldValue^(0+1280),c
 30942                           
 30943                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 30944   006674  0E00               	movlw	low _nvCache
 30945   006676  2419               	addwf	setNV@index^(0+1280),w,c
 30946   006678  6ED9               	movwf	fsr2l,c
 30947   00667A  6ADA               	clrf	fsr2h,c
 30948   00667C  0E06               	movlw	high _nvCache
 30949   00667E  22DA               	addwfc	fsr2h,f,c
 30950   006680  C515  F4DF         	movff	setNV@value,indf2
 30951   006684                     
 30952                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 30953   006684  0E00               	movlw	0
 30954   006686  2419               	addwf	setNV@index^(0+1280),w,c
 30955   006688  6E16               	movwf	??_setNV^(0+1280),c
 30956   00668A  6A17               	clrf	(??_setNV+1)^(0+1280),c
 30957   00668C  0E02               	movlw	2
 30958   00668E  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 30959   006690  C516  F50E         	movff	??_setNV,writeNVM@index
 30960   006694  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 30961   006698  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 30962   00669A  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 30963   00669C  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 30964   00669E  C515  F511         	movff	setNV@value,writeNVM@value
 30965   0066A2  0E00               	movlw	0
 30966   0066A4  ECB5  F038         	call	_writeNVM
 30967   0066A8                     
 30968                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 30969   0066A8  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 30970   0066AC  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 30971   0066B0  5019               	movf	setNV@index^(0+1280),w,c
 30972   0066B2  EC5D  F03E         	call	_APP_nvValueChanged
 30973   0066B6                     
 30974                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 30975   0066B6  0E00               	movlw	0
 30976   0066B8                     l1342:
 30977   0066B8  0012               	return		;funcret
 30978   0066BA                     __end_of_setNV:
 30979                           	callstack 0
 30980                           
 30981 ;; *************** function _APP_nvValueChanged *****************
 30982 ;; Defined at:
 30983 ;;		line 97 in file "../canargb_nvs.c"
 30984 ;; Parameters:    Size  Location     Type
 30985 ;;  index           1    wreg     unsigned char 
 30986 ;;  value           1    0[COMRAM] unsigned char 
 30987 ;;  oldValue        1    1[COMRAM] unsigned char 
 30988 ;; Auto vars:     Size  Location     Type
 30989 ;;  index           1    0[COMRAM] unsigned char 
 30990 ;; Return value:  Size  Location     Type
 30991 ;;                  1    wreg      void 
 30992 ;; Registers used:
 30993 ;;		wreg
 30994 ;; Tracked objects:
 30995 ;;		On entry : 0/0
 30996 ;;		On exit  : 0/0
 30997 ;;		Unchanged: 0/0
 30998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31003 ;;Total ram usage:        2 bytes
 31004 ;; Hardware stack levels used: 1
 31005 ;; Hardware stack levels required when called: 1
 31006 ;; This function calls:
 31007 ;;		Nothing
 31008 ;; This function is called by:
 31009 ;;		_setNV
 31010 ;; This function uses a non-reentrant model
 31011 ;;
 31012                           
 31013                           	psect	text49
 31014   007CBA                     __ptext49:
 31015                           	callstack 0
 31016   007CBA                     _APP_nvValueChanged:
 31017                           	callstack 122
 31018   007CBA  0012               	return		;funcret
 31019   007CBC                     __end_of_APP_nvValueChanged:
 31020                           	callstack 0
 31021                           
 31022 ;; *************** function _APP_nvValidate *****************
 31023 ;; Defined at:
 31024 ;;		line 89 in file "../canargb_nvs.c"
 31025 ;; Parameters:    Size  Location     Type
 31026 ;;  index           1    wreg     unsigned char 
 31027 ;;  value           1    0[COMRAM] unsigned char 
 31028 ;; Auto vars:     Size  Location     Type
 31029 ;;  index           1    0[COMRAM] unsigned char 
 31030 ;; Return value:  Size  Location     Type
 31031 ;;                  1    wreg      enum E23468
 31032 ;; Registers used:
 31033 ;;		wreg
 31034 ;; Tracked objects:
 31035 ;;		On entry : 0/0
 31036 ;;		On exit  : 0/0
 31037 ;;		Unchanged: 0/0
 31038 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31039 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31043 ;;Total ram usage:        1 bytes
 31044 ;; Hardware stack levels used: 1
 31045 ;; Hardware stack levels required when called: 1
 31046 ;; This function calls:
 31047 ;;		Nothing
 31048 ;; This function is called by:
 31049 ;;		_setNV
 31050 ;; This function uses a non-reentrant model
 31051 ;;
 31052                           
 31053                           	psect	text50
 31054   007CA6                     __ptext50:
 31055                           	callstack 0
 31056   007CA6                     _APP_nvValidate:
 31057                           	callstack 122
 31058   007CA6                     
 31059                           ;../canargb_nvs.c: 90:     return VALID;
 31060   007CA6  0E01               	movlw	1
 31061   007CA8  0012               	return		;funcret
 31062   007CAA                     __end_of_APP_nvValidate:
 31063                           	callstack 0
 31064                           
 31065 ;; *************** function _nvGetESDdata *****************
 31066 ;; Defined at:
 31067 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 31068 ;; Parameters:    Size  Location     Type
 31069 ;;  id              1    wreg     unsigned char 
 31070 ;; Auto vars:     Size  Location     Type
 31071 ;;  id              1    0[COMRAM] unsigned char 
 31072 ;; Return value:  Size  Location     Type
 31073 ;;                  1    wreg      unsigned char 
 31074 ;; Registers used:
 31075 ;;		wreg, status,2, status,0
 31076 ;; Tracked objects:
 31077 ;;		On entry : 0/0
 31078 ;;		On exit  : 0/0
 31079 ;;		Unchanged: 0/0
 31080 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31085 ;;Total ram usage:        1 bytes
 31086 ;; Hardware stack levels used: 1
 31087 ;; Hardware stack levels required when called: 1
 31088 ;; This function calls:
 31089 ;;		Nothing
 31090 ;; This function is called by:
 31091 ;;		_mnsProcessMessage
 31092 ;; This function uses a non-reentrant model
 31093 ;;
 31094                           
 31095                           	psect	text51
 31096   007B12                     __ptext51:
 31097                           	callstack 0
 31098   007B12                     _nvGetESDdata:
 31099                           	callstack 123
 31100                           
 31101                           ;incstack = 0
 31102                           ;nvGetESDdata@id stored from wreg
 31103   007B12  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 31104   007B14                     
 31105                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 31106   007B14  EF92  F03D         	goto	l8998
 31107   007B18                     l8988:
 31108   007B18  0E30               	movlw	48
 31109   007B1A  EF99  F03D         	goto	l1368
 31110   007B1E                     l8992:
 31111   007B1E  0E00               	movlw	0
 31112   007B20  EF99  F03D         	goto	l1368
 31113   007B24                     l8998:
 31114   007B24  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 31115                           
 31116                           ; Switch size 1, requested type "simple"
 31117                           ; Number of cases is 1, Range of values is 1 to 1
 31118                           ; switch strategies available:
 31119                           ; Name         Instructions Cycles
 31120                           ; simple_byte            4     3 (average)
 31121                           ;	Chosen strategy is simple_byte
 31122   007B26  0A01               	xorlw	1	; case 1
 31123   007B28  B4D8               	btfsc	status,2,c
 31124   007B2A  EF8C  F03D         	goto	l8988
 31125   007B2E  EF8F  F03D         	goto	l8992
 31126   007B32                     l1368:
 31127   007B32  0012               	return		;funcret
 31128   007B34                     __end_of_nvGetESDdata:
 31129                           	callstack 0
 31130                           
 31131 ;; *************** function _consumerEsdData *****************
 31132 ;; Defined at:
 31133 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31134 ;; Parameters:    Size  Location     Type
 31135 ;;  index           1    wreg     unsigned char 
 31136 ;; Auto vars:     Size  Location     Type
 31137 ;;  index           1    0[COMRAM] unsigned char 
 31138 ;; Return value:  Size  Location     Type
 31139 ;;                  1    wreg      unsigned char 
 31140 ;; Registers used:
 31141 ;;		wreg, status,2, status,0
 31142 ;; Tracked objects:
 31143 ;;		On entry : 0/0
 31144 ;;		On exit  : 0/0
 31145 ;;		Unchanged: 0/0
 31146 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31151 ;;Total ram usage:        1 bytes
 31152 ;; Hardware stack levels used: 1
 31153 ;; Hardware stack levels required when called: 1
 31154 ;; This function calls:
 31155 ;;		Nothing
 31156 ;; This function is called by:
 31157 ;;		_mnsProcessMessage
 31158 ;; This function uses a non-reentrant model
 31159 ;;
 31160                           
 31161                           	psect	text52
 31162   007B94                     __ptext52:
 31163                           	callstack 0
 31164   007B94                     _consumerEsdData:
 31165                           	callstack 123
 31166                           
 31167                           ;incstack = 0
 31168                           ;consumerEsdData@index stored from wreg
 31169   007B94  6E01               	movwf	consumerEsdData@index^(0+1280),c
 31170   007B96                     
 31171                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 31172   007B96  EFD0  F03D         	goto	l8632
 31173   007B9A                     l8622:
 31174                           
 31175                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 31176   007B9A  0E00               	movlw	0
 31177   007B9C  EFD7  F03D         	goto	l619
 31178   007BA0                     l8632:
 31179   007BA0  5001               	movf	consumerEsdData@index^(0+1280),w,c
 31180                           
 31181                           ; Switch size 1, requested type "simple"
 31182                           ; Number of cases is 1, Range of values is 0 to 0
 31183                           ; switch strategies available:
 31184                           ; Name         Instructions Cycles
 31185                           ; simple_byte            4     3 (average)
 31186                           ;	Chosen strategy is simple_byte
 31187   007BA2  0A00               	xorlw	0	; case 0
 31188   007BA4  B4D8               	btfsc	status,2,c
 31189   007BA6  EFCD  F03D         	goto	l8622
 31190   007BAA  EFCD  F03D         	goto	l8622
 31191   007BAE                     l619:
 31192   007BAE  0012               	return		;funcret
 31193   007BB0                     __end_of_consumerEsdData:
 31194                           	callstack 0
 31195                           
 31196 ;; *************** function _canEsdData *****************
 31197 ;; Defined at:
 31198 ;;		line 468 in file "../../VLCBlib_PIC/can18_can_2.c"
 31199 ;; Parameters:    Size  Location     Type
 31200 ;;  id              1    wreg     unsigned char 
 31201 ;; Auto vars:     Size  Location     Type
 31202 ;;  id              1    0[COMRAM] unsigned char 
 31203 ;; Return value:  Size  Location     Type
 31204 ;;                  1    wreg      unsigned char 
 31205 ;; Registers used:
 31206 ;;		wreg, status,2, status,0
 31207 ;; Tracked objects:
 31208 ;;		On entry : 0/0
 31209 ;;		On exit  : 0/0
 31210 ;;		Unchanged: 0/0
 31211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31216 ;;Total ram usage:        1 bytes
 31217 ;; Hardware stack levels used: 1
 31218 ;; Hardware stack levels required when called: 1
 31219 ;; This function calls:
 31220 ;;		Nothing
 31221 ;; This function is called by:
 31222 ;;		_mnsProcessMessage
 31223 ;; This function uses a non-reentrant model
 31224 ;;
 31225                           
 31226                           	psect	text53
 31227   007B34                     __ptext53:
 31228                           	callstack 0
 31229   007B34                     _canEsdData:
 31230                           	callstack 123
 31231                           
 31232                           ;incstack = 0
 31233                           ;canEsdData@id stored from wreg
 31234   007B34  6E01               	movwf	canEsdData@id^(0+1280),c
 31235   007B36                     
 31236                           ;../../VLCBlib_PIC/can18_can_2.c: 469:     switch(id) {
 31237   007B36  EFA3  F03D         	goto	l8520
 31238   007B3A                     l8510:
 31239                           
 31240                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return CAN_HW_PIC_CAN_2_0;
 31241   007B3A  0E02               	movlw	2
 31242   007B3C  EFAA  F03D         	goto	l418
 31243   007B40                     l8514:
 31244                           
 31245                           ;../../VLCBlib_PIC/can18_can_2.c: 473:             return 0;
 31246   007B40  0E00               	movlw	0
 31247   007B42  EFAA  F03D         	goto	l418
 31248   007B46                     l8520:
 31249   007B46  5001               	movf	canEsdData@id^(0+1280),w,c
 31250                           
 31251                           ; Switch size 1, requested type "simple"
 31252                           ; Number of cases is 1, Range of values is 1 to 1
 31253                           ; switch strategies available:
 31254                           ; Name         Instructions Cycles
 31255                           ; simple_byte            4     3 (average)
 31256                           ;	Chosen strategy is simple_byte
 31257   007B48  0A01               	xorlw	1	; case 1
 31258   007B4A  B4D8               	btfsc	status,2,c
 31259   007B4C  EF9D  F03D         	goto	l8510
 31260   007B50  EFA0  F03D         	goto	l8514
 31261   007B54                     l418:
 31262   007B54  0012               	return		;funcret
 31263   007B56                     __end_of_canEsdData:
 31264                           	callstack 0
 31265                           
 31266 ;; *************** function _bootEsdData *****************
 31267 ;; Defined at:
 31268 ;;		line 252 in file "../../VLCBlib_PIC/boot.c"
 31269 ;; Parameters:    Size  Location     Type
 31270 ;;  id              1    wreg     unsigned char 
 31271 ;; Auto vars:     Size  Location     Type
 31272 ;;  id              1    0[COMRAM] unsigned char 
 31273 ;; Return value:  Size  Location     Type
 31274 ;;                  1    wreg      unsigned char 
 31275 ;; Registers used:
 31276 ;;		wreg, status,2, status,0
 31277 ;; Tracked objects:
 31278 ;;		On entry : 0/0
 31279 ;;		On exit  : 0/0
 31280 ;;		Unchanged: 0/0
 31281 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31286 ;;Total ram usage:        1 bytes
 31287 ;; Hardware stack levels used: 1
 31288 ;; Hardware stack levels required when called: 1
 31289 ;; This function calls:
 31290 ;;		Nothing
 31291 ;; This function is called by:
 31292 ;;		_mnsProcessMessage
 31293 ;; This function uses a non-reentrant model
 31294 ;;
 31295                           
 31296                           	psect	text54
 31297   0077F6                     __ptext54:
 31298                           	callstack 0
 31299   0077F6                     _bootEsdData:
 31300                           	callstack 123
 31301                           
 31302                           ;incstack = 0
 31303                           ;bootEsdData@id stored from wreg
 31304   0077F6  6E01               	movwf	bootEsdData@id^(0+1280),c
 31305   0077F8                     
 31306                           ;../../VLCBlib_PIC/boot.c: 253:     switch (id) {
 31307   0077F8  EF09  F03C         	goto	l8418
 31308   0077FC                     l132:
 31309                           
 31310                           ;../../VLCBlib_PIC/boot.c: 256:             return bootloaderType;
 31311   0077FC  0105               	movlb	5	; () banked
 31312   0077FE  51AA               	movf	_bootloaderType& (0+255),w,b
 31313   007800  EF14  F03C         	goto	l133
 31314   007804                     l134:
 31315                           
 31316                           ;../../VLCBlib_PIC/boot.c: 259:             return bootloaderVersion;
 31317   007804  0105               	movlb	5	; () banked
 31318   007806  51A9               	movf	_bootloaderVersion& (0+255),w,b
 31319   007808  EF14  F03C         	goto	l133
 31320   00780C                     l8412:
 31321                           
 31322                           ;../../VLCBlib_PIC/boot.c: 261:             return 0;
 31323   00780C  0E00               	movlw	0
 31324   00780E  EF14  F03C         	goto	l133
 31325   007812                     l8418:
 31326   007812  5001               	movf	bootEsdData@id^(0+1280),w,c
 31327                           
 31328                           ; Switch size 1, requested type "simple"
 31329                           ; Number of cases is 2, Range of values is 1 to 2
 31330                           ; switch strategies available:
 31331                           ; Name         Instructions Cycles
 31332                           ; simple_byte            7     4 (average)
 31333                           ;	Chosen strategy is simple_byte
 31334   007814  0A01               	xorlw	1	; case 1
 31335   007816  B4D8               	btfsc	status,2,c
 31336   007818  EFFE  F03B         	goto	l132
 31337   00781C  0A03               	xorlw	3	; case 2
 31338   00781E  B4D8               	btfsc	status,2,c
 31339   007820  EF02  F03C         	goto	l134
 31340   007824  EF06  F03C         	goto	l8412
 31341   007828                     l133:
 31342   007828  0012               	return		;funcret
 31343   00782A                     __end_of_bootEsdData:
 31344                           	callstack 0
 31345                           
 31346 ;; *************** function _teachGetESDdata *****************
 31347 ;; Defined at:
 31348 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31349 ;; Parameters:    Size  Location     Type
 31350 ;;  id              1    wreg     unsigned char 
 31351 ;; Auto vars:     Size  Location     Type
 31352 ;;  id              1    0[COMRAM] unsigned char 
 31353 ;; Return value:  Size  Location     Type
 31354 ;;                  1    wreg      unsigned char 
 31355 ;; Registers used:
 31356 ;;		wreg, status,2, status,0
 31357 ;; Tracked objects:
 31358 ;;		On entry : 0/0
 31359 ;;		On exit  : 0/0
 31360 ;;		Unchanged: 0/0
 31361 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31366 ;;Total ram usage:        1 bytes
 31367 ;; Hardware stack levels used: 1
 31368 ;; Hardware stack levels required when called: 1
 31369 ;; This function calls:
 31370 ;;		Nothing
 31371 ;; This function is called by:
 31372 ;;		_mnsProcessMessage
 31373 ;; This function uses a non-reentrant model
 31374 ;;
 31375                           
 31376                           	psect	text55
 31377   007860                     __ptext55:
 31378                           	callstack 0
 31379   007860                     _teachGetESDdata:
 31380                           	callstack 123
 31381                           
 31382                           ;incstack = 0
 31383                           ;teachGetESDdata@id stored from wreg
 31384   007860  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 31385   007862                     
 31386                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 31387   007862  EF3C  F03C         	goto	l8826
 31388   007866                     l8812:
 31389   007866  0EFF               	movlw	255
 31390   007868  EF47  F03C         	goto	l805
 31391   00786C                     l8816:
 31392   00786C  0EFC               	movlw	252
 31393   00786E  EF47  F03C         	goto	l805
 31394   007872                     l8820:
 31395   007872  0E00               	movlw	0
 31396   007874  EF47  F03C         	goto	l805
 31397   007878                     l8826:
 31398   007878  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 31399                           
 31400                           ; Switch size 1, requested type "simple"
 31401                           ; Number of cases is 2, Range of values is 1 to 2
 31402                           ; switch strategies available:
 31403                           ; Name         Instructions Cycles
 31404                           ; simple_byte            7     4 (average)
 31405                           ;	Chosen strategy is simple_byte
 31406   00787A  0A01               	xorlw	1	; case 1
 31407   00787C  B4D8               	btfsc	status,2,c
 31408   00787E  EF33  F03C         	goto	l8812
 31409   007882  0A03               	xorlw	3	; case 2
 31410   007884  B4D8               	btfsc	status,2,c
 31411   007886  EF36  F03C         	goto	l8816
 31412   00788A  EF39  F03C         	goto	l8820
 31413   00788E                     l805:
 31414   00788E  0012               	return		;funcret
 31415   007890                     __end_of_teachGetESDdata:
 31416                           	callstack 0
 31417                           
 31418 ;; *************** function _nvGetDiagnostic *****************
 31419 ;; Defined at:
 31420 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 31421 ;; Parameters:    Size  Location     Type
 31422 ;;  index           1    wreg     unsigned char 
 31423 ;; Auto vars:     Size  Location     Type
 31424 ;;  index           1    8[COMRAM] unsigned char 
 31425 ;; Return value:  Size  Location     Type
 31426 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31427 ;; Registers used:
 31428 ;;		wreg, status,2, status,0, prodl, prodh
 31429 ;; Tracked objects:
 31430 ;;		On entry : 0/0
 31431 ;;		On exit  : 0/0
 31432 ;;		Unchanged: 0/0
 31433 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31437 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31438 ;;Total ram usage:        3 bytes
 31439 ;; Hardware stack levels used: 1
 31440 ;; Hardware stack levels required when called: 1
 31441 ;; This function calls:
 31442 ;;		Nothing
 31443 ;; This function is called by:
 31444 ;;		_mnsTRallDiagnosticsCallback
 31445 ;;		_mnsProcessMessage
 31446 ;; This function uses a non-reentrant model
 31447 ;;
 31448                           
 31449                           	psect	text56
 31450   007890                     __ptext56:
 31451                           	callstack 0
 31452   007890                     _nvGetDiagnostic:
 31453                           	callstack 122
 31454                           
 31455                           ;incstack = 0
 31456                           ;nvGetDiagnostic@index stored from wreg
 31457   007890  6E09               	movwf	nvGetDiagnostic@index^(0+1280),c
 31458   007892                     
 31459                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 31460   007892  0E02               	movlw	2
 31461   007894  6409               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 31462   007896  EF4F  F03C         	goto	u5711
 31463   00789A  EF51  F03C         	goto	u5710
 31464   00789E                     u5711:
 31465   00789E  EF57  F03C         	goto	l8300
 31466   0078A2                     u5710:
 31467   0078A2                     
 31468                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 31469   0078A2  0E00               	movlw	0
 31470   0078A4  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31471   0078A6  0E00               	movlw	0
 31472   0078A8  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31473   0078AA  EF5F  F03C         	goto	l1323
 31474   0078AE                     l8300:
 31475                           
 31476                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 31477   0078AE  5009               	movf	nvGetDiagnostic@index^(0+1280),w,c
 31478   0078B0  0D02               	mullw	2
 31479   0078B2  0EB9               	movlw	low _nvDiagnostics
 31480   0078B4  24F3               	addwf	243,w,c
 31481   0078B6  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31482   0078B8  0E05               	movlw	high _nvDiagnostics
 31483   0078BA  20F4               	addwfc	prodh,w,c
 31484   0078BC  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31485   0078BE                     l1323:
 31486   0078BE  0012               	return		;funcret
 31487   0078C0                     __end_of_nvGetDiagnostic:
 31488                           	callstack 0
 31489                           
 31490 ;; *************** function _mnsGetDiagnostic *****************
 31491 ;; Defined at:
 31492 ;;		line 806 in file "../../VLCBlib_PIC/mns.c"
 31493 ;; Parameters:    Size  Location     Type
 31494 ;;  index           1    wreg     unsigned char 
 31495 ;; Auto vars:     Size  Location     Type
 31496 ;;  index           1    8[COMRAM] unsigned char 
 31497 ;; Return value:  Size  Location     Type
 31498 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31499 ;; Registers used:
 31500 ;;		wreg, status,2, status,0, prodl, prodh
 31501 ;; Tracked objects:
 31502 ;;		On entry : 0/0
 31503 ;;		On exit  : 0/0
 31504 ;;		Unchanged: 0/0
 31505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31510 ;;Total ram usage:        3 bytes
 31511 ;; Hardware stack levels used: 1
 31512 ;; Hardware stack levels required when called: 1
 31513 ;; This function calls:
 31514 ;;		Nothing
 31515 ;; This function is called by:
 31516 ;;		_mnsTRallDiagnosticsCallback
 31517 ;;		_mnsProcessMessage
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text57
 31522   0078C0                     __ptext57:
 31523                           	callstack 0
 31524   0078C0                     _mnsGetDiagnostic:
 31525                           	callstack 122
 31526                           
 31527                           ;incstack = 0
 31528                           ;mnsGetDiagnostic@index stored from wreg
 31529   0078C0  6E09               	movwf	mnsGetDiagnostic@index^(0+1280),c
 31530   0078C2                     
 31531                           ;../../VLCBlib_PIC/mns.c: 807:     if (index > 6) {
 31532   0078C2  0E06               	movlw	6
 31533   0078C4  6409               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 31534   0078C6  EF67  F03C         	goto	u5651
 31535   0078CA  EF69  F03C         	goto	u5650
 31536   0078CE                     u5651:
 31537   0078CE  EF6F  F03C         	goto	l8240
 31538   0078D2                     u5650:
 31539   0078D2                     
 31540                           ;../../VLCBlib_PIC/mns.c: 808:         return ((void*)0);
 31541   0078D2  0E00               	movlw	0
 31542   0078D4  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31543   0078D6  0E00               	movlw	0
 31544   0078D8  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31545   0078DA  EF77  F03C         	goto	l1213
 31546   0078DE                     l8240:
 31547                           
 31548                           ;../../VLCBlib_PIC/mns.c: 810:     return &(mnsDiagnostics[index]);
 31549   0078DE  5009               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 31550   0078E0  0D02               	mullw	2
 31551   0078E2  0EAB               	movlw	low _mnsDiagnostics
 31552   0078E4  24F3               	addwf	243,w,c
 31553   0078E6  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31554   0078E8  0E05               	movlw	high _mnsDiagnostics
 31555   0078EA  20F4               	addwfc	prodh,w,c
 31556   0078EC  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31557   0078EE                     l1213:
 31558   0078EE  0012               	return		;funcret
 31559   0078F0                     __end_of_mnsGetDiagnostic:
 31560                           	callstack 0
 31561                           
 31562 ;; *************** function _consumerGetDiagnostic *****************
 31563 ;; Defined at:
 31564 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31565 ;; Parameters:    Size  Location     Type
 31566 ;;  index           1    wreg     unsigned char 
 31567 ;; Auto vars:     Size  Location     Type
 31568 ;;  index           1    8[COMRAM] unsigned char 
 31569 ;; Return value:  Size  Location     Type
 31570 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31571 ;; Registers used:
 31572 ;;		wreg, status,2, status,0, prodl, prodh
 31573 ;; Tracked objects:
 31574 ;;		On entry : 0/0
 31575 ;;		On exit  : 0/0
 31576 ;;		Unchanged: 0/0
 31577 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31581 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31582 ;;Total ram usage:        3 bytes
 31583 ;; Hardware stack levels used: 1
 31584 ;; Hardware stack levels required when called: 1
 31585 ;; This function calls:
 31586 ;;		Nothing
 31587 ;; This function is called by:
 31588 ;;		_mnsTRallDiagnosticsCallback
 31589 ;;		_mnsProcessMessage
 31590 ;; This function uses a non-reentrant model
 31591 ;;
 31592                           
 31593                           	psect	text58
 31594   0078F0                     __ptext58:
 31595                           	callstack 0
 31596   0078F0                     _consumerGetDiagnostic:
 31597                           	callstack 122
 31598                           
 31599                           ;incstack = 0
 31600                           ;consumerGetDiagnostic@index stored from wreg
 31601   0078F0  6E09               	movwf	consumerGetDiagnostic@index^(0+1280),c
 31602   0078F2                     
 31603                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 31604   0078F2  0E02               	movlw	2
 31605   0078F4  6409               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 31606   0078F6  EF7F  F03C         	goto	u5461
 31607   0078FA  EF81  F03C         	goto	u5460
 31608   0078FE                     u5461:
 31609   0078FE  EF87  F03C         	goto	l7982
 31610   007902                     u5460:
 31611   007902                     
 31612                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 31613   007902  0E00               	movlw	0
 31614   007904  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31615   007906  0E00               	movlw	0
 31616   007908  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31617   00790A  EF8F  F03C         	goto	l614
 31618   00790E                     l7982:
 31619                           
 31620                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 31621   00790E  5009               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 31622   007910  0D02               	mullw	2
 31623   007912  0EBF               	movlw	low _consumerDiagnostics
 31624   007914  24F3               	addwf	243,w,c
 31625   007916  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31626   007918  0E05               	movlw	high _consumerDiagnostics
 31627   00791A  20F4               	addwfc	prodh,w,c
 31628   00791C  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31629   00791E                     l614:
 31630   00791E  0012               	return		;funcret
 31631   007920                     __end_of_consumerGetDiagnostic:
 31632                           	callstack 0
 31633                           
 31634 ;; *************** function _canGetDiagnostic *****************
 31635 ;; Defined at:
 31636 ;;		line 500 in file "../../VLCBlib_PIC/can18_can_2.c"
 31637 ;; Parameters:    Size  Location     Type
 31638 ;;  index           1    wreg     unsigned char 
 31639 ;; Auto vars:     Size  Location     Type
 31640 ;;  index           1    9[COMRAM] unsigned char 
 31641 ;;  i16             2    0        short 
 31642 ;; Return value:  Size  Location     Type
 31643 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31644 ;; Registers used:
 31645 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31646 ;; Tracked objects:
 31647 ;;		On entry : 0/0
 31648 ;;		On exit  : 0/0
 31649 ;;		Unchanged: 0/0
 31650 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31654 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31655 ;;Total ram usage:        4 bytes
 31656 ;; Hardware stack levels used: 1
 31657 ;; Hardware stack levels required when called: 2
 31658 ;; This function calls:
 31659 ;;		_getNumRxBuffersInUse
 31660 ;;		_getNumTxBuffersInUse
 31661 ;; This function is called by:
 31662 ;;		_mnsTRallDiagnosticsCallback
 31663 ;;		_mnsProcessMessage
 31664 ;; This function uses a non-reentrant model
 31665 ;;
 31666                           
 31667                           	psect	text59
 31668   005ECC                     __ptext59:
 31669                           	callstack 0
 31670   005ECC                     _canGetDiagnostic:
 31671                           	callstack 121
 31672                           
 31673                           ;incstack = 0
 31674                           ;canGetDiagnostic@index stored from wreg
 31675   005ECC  6E0A               	movwf	canGetDiagnostic@index^(0+1280),c
 31676   005ECE                     
 31677                           ;../../VLCBlib_PIC/can18_can_2.c: 501:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           503:     if (index > 18) {
 31678   005ECE  0E12               	movlw	18
 31679   005ED0  640A               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 31680   005ED2  EF6D  F02F         	goto	u5431
 31681   005ED6  EF6F  F02F         	goto	u5430
 31682   005EDA                     u5431:
 31683   005EDA  EF99  F02F         	goto	l7946
 31684   005EDE                     u5430:
 31685   005EDE                     
 31686                           ;../../VLCBlib_PIC/can18_can_2.c: 504:         return ((void*)0);
 31687   005EDE  0E00               	movlw	0
 31688   005EE0  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31689   005EE2  0E00               	movlw	0
 31690   005EE4  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31691   005EE6  EFB8  F02F         	goto	l424
 31692   005EEA                     l426:
 31693                           
 31694                           ;../../VLCBlib_PIC/can18_can_2.c: 508:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 31695   005EEA  C136 F697          	movff	310,_canDiagnostics+6	;volatile
 31696   005EEE  0106               	movlb	6	; () banked
 31697   005EF0  6B98               	clrf	(_canDiagnostics+7)& (0+255),b
 31698                           
 31699                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             break;
 31700   005EF2  EFB0  F02F         	goto	l7948
 31701   005EF6                     l7940:
 31702                           
 31703                           ;../../VLCBlib_PIC/can18_can_2.c: 511:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 31704   005EF6  ECB1  F035         	call	_getNumTxBuffersInUse	;wreg free
 31705   005EFA  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31706   005EFC  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31707   005EFE  0106               	movlb	6	; () banked
 31708   005F00  6F99               	movwf	(_canDiagnostics+8)& (0+255),b
 31709   005F02  6B9A               	clrf	(_canDiagnostics+9)& (0+255),b
 31710                           
 31711                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             break;
 31712   005F04  EFB0  F02F         	goto	l7948
 31713   005F08                     l7942:
 31714                           
 31715                           ;../../VLCBlib_PIC/can18_can_2.c: 514:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 31716   005F08  ECA1  F036         	call	_getNumRxBuffersInUse	;wreg free
 31717   005F0C  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31718   005F0E  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31719   005F10  0106               	movlb	6	; () banked
 31720   005F12  6F9F               	movwf	(_canDiagnostics+14)& (0+255),b
 31721   005F14  6BA0               	clrf	(_canDiagnostics+15)& (0+255),b
 31722                           
 31723                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             break;
 31724   005F16  EFB0  F02F         	goto	l7948
 31725   005F1A                     l430:
 31726                           
 31727                           ;../../VLCBlib_PIC/can18_can_2.c: 517:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 31728   005F1A  C139 F695          	movff	313,_canDiagnostics+4	;volatile
 31729   005F1E  0106               	movlb	6	; () banked
 31730   005F20  6B96               	clrf	(_canDiagnostics+5)& (0+255),b
 31731                           
 31732                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             break;
 31733   005F22  EFB0  F02F         	goto	l7948
 31734   005F26                     l431:
 31735                           
 31736                           ;../../VLCBlib_PIC/can18_can_2.c: 520:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 31737   005F26  C138 F693          	movff	312,_canDiagnostics+2	;volatile
 31738   005F2A  0106               	movlb	6	; () banked
 31739   005F2C  6B94               	clrf	(_canDiagnostics+3)& (0+255),b
 31740                           
 31741                           ;../../VLCBlib_PIC/can18_can_2.c: 521:             break;
 31742   005F2E  EFB0  F02F         	goto	l7948
 31743   005F32                     l7946:
 31744   005F32  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31745                           
 31746                           ; Switch size 1, requested type "simple"
 31747                           ; Number of cases is 5, Range of values is 1 to 7
 31748                           ; switch strategies available:
 31749                           ; Name         Instructions Cycles
 31750                           ; simple_byte           16     9 (average)
 31751                           ;	Chosen strategy is simple_byte
 31752   005F34  0A01               	xorlw	1	; case 1
 31753   005F36  B4D8               	btfsc	status,2,c
 31754   005F38  EF93  F02F         	goto	l431
 31755   005F3C  0A03               	xorlw	3	; case 2
 31756   005F3E  B4D8               	btfsc	status,2,c
 31757   005F40  EF8D  F02F         	goto	l430
 31758   005F44  0A01               	xorlw	1	; case 3
 31759   005F46  B4D8               	btfsc	status,2,c
 31760   005F48  EF75  F02F         	goto	l426
 31761   005F4C  0A07               	xorlw	7	; case 4
 31762   005F4E  B4D8               	btfsc	status,2,c
 31763   005F50  EF7B  F02F         	goto	l7940
 31764   005F54  0A03               	xorlw	3	; case 7
 31765   005F56  B4D8               	btfsc	status,2,c
 31766   005F58  EF84  F02F         	goto	l7942
 31767   005F5C  EFB0  F02F         	goto	l7948
 31768   005F60                     l7948:
 31769                           
 31770                           ;../../VLCBlib_PIC/can18_can_2.c: 524:     return &(canDiagnostics[index]);
 31771   005F60  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31772   005F62  0D02               	mullw	2
 31773   005F64  0E91               	movlw	low _canDiagnostics
 31774   005F66  24F3               	addwf	243,w,c
 31775   005F68  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31776   005F6A  0E06               	movlw	high _canDiagnostics
 31777   005F6C  20F4               	addwfc	prodh,w,c
 31778   005F6E  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31779   005F70                     l424:
 31780   005F70  0012               	return		;funcret
 31781   005F72                     __end_of_canGetDiagnostic:
 31782                           	callstack 0
 31783                           
 31784 ;; *************** function _teachGetDiagnostic *****************
 31785 ;; Defined at:
 31786 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31787 ;; Parameters:    Size  Location     Type
 31788 ;;  index           1    wreg     unsigned char 
 31789 ;; Auto vars:     Size  Location     Type
 31790 ;;  index           1    8[COMRAM] unsigned char 
 31791 ;; Return value:  Size  Location     Type
 31792 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31793 ;; Registers used:
 31794 ;;		wreg, status,2, status,0, prodl, prodh
 31795 ;; Tracked objects:
 31796 ;;		On entry : 0/0
 31797 ;;		On exit  : 0/0
 31798 ;;		Unchanged: 0/0
 31799 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31804 ;;Total ram usage:        3 bytes
 31805 ;; Hardware stack levels used: 1
 31806 ;; Hardware stack levels required when called: 1
 31807 ;; This function calls:
 31808 ;;		Nothing
 31809 ;; This function is called by:
 31810 ;;		_mnsTRallDiagnosticsCallback
 31811 ;;		_mnsProcessMessage
 31812 ;; This function uses a non-reentrant model
 31813 ;;
 31814                           
 31815                           	psect	text60
 31816   007920                     __ptext60:
 31817                           	callstack 0
 31818   007920                     _teachGetDiagnostic:
 31819                           	callstack 122
 31820                           
 31821                           ;incstack = 0
 31822                           ;teachGetDiagnostic@index stored from wreg
 31823   007920  6E09               	movwf	teachGetDiagnostic@index^(0+1280),c
 31824   007922                     
 31825                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 31826   007922  0E01               	movlw	1
 31827   007924  6409               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 31828   007926  EF97  F03C         	goto	u5511
 31829   00792A  EF99  F03C         	goto	u5510
 31830   00792E                     u5511:
 31831   00792E  EF9F  F03C         	goto	l8014
 31832   007932                     u5510:
 31833   007932                     
 31834                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 31835   007932  0E00               	movlw	0
 31836   007934  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31837   007936  0E00               	movlw	0
 31838   007938  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31839   00793A  EFA7  F03C         	goto	l812
 31840   00793E                     l8014:
 31841                           
 31842                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 31843   00793E  5009               	movf	teachGetDiagnostic@index^(0+1280),w,c
 31844   007940  0D02               	mullw	2
 31845   007942  0ECA               	movlw	low _teachDiagnostics
 31846   007944  24F3               	addwf	243,w,c
 31847   007946  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31848   007948  0E05               	movlw	high _teachDiagnostics
 31849   00794A  20F4               	addwfc	prodh,w,c
 31850   00794C  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31851   00794E                     l812:
 31852   00794E  0012               	return		;funcret
 31853   007950                     __end_of_teachGetDiagnostic:
 31854                           	callstack 0
 31855                           
 31856 ;; *************** function _startTimedResponse *****************
 31857 ;; Defined at:
 31858 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 31859 ;; Parameters:    Size  Location     Type
 31860 ;;  type            1    wreg     unsigned char 
 31861 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 31862 ;;  callback        2    5[COMRAM] PTR FTN(unsigned char ,u
 31863 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 31864 ;;		 -> reqevCallback(1), nerdCallback(1), 
 31865 ;; Auto vars:     Size  Location     Type
 31866 ;;  type            1    7[COMRAM] unsigned char 
 31867 ;; Return value:  Size  Location     Type
 31868 ;;                  1    wreg      void 
 31869 ;; Registers used:
 31870 ;;		wreg, status,2, status,0
 31871 ;; Tracked objects:
 31872 ;;		On entry : 0/0
 31873 ;;		On exit  : 0/0
 31874 ;;		Unchanged: 0/0
 31875 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31880 ;;Total ram usage:        4 bytes
 31881 ;; Hardware stack levels used: 1
 31882 ;; Hardware stack levels required when called: 1
 31883 ;; This function calls:
 31884 ;;		Nothing
 31885 ;; This function is called by:
 31886 ;;		_doNerd
 31887 ;;		_doReval
 31888 ;;		_doReqev
 31889 ;;		_mnsProcessMessage
 31890 ;;		_nvProcessMessage
 31891 ;; This function uses a non-reentrant model
 31892 ;;
 31893                           
 31894                           	psect	text61
 31895   00722A                     __ptext61:
 31896                           	callstack 0
 31897   00722A                     _startTimedResponse:
 31898                           	callstack 122
 31899                           
 31900                           ;incstack = 0
 31901                           ;startTimedResponse@type stored from wreg
 31902   00722A  6E08               	movwf	startTimedResponse@type^(0+1280),c
 31903   00722C                     
 31904                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 31905   00722C  C508  F596         	movff	startTimedResponse@type,_timedResponseType
 31906   007230                     
 31907                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 31908   007230  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 31909   007232  A4D8               	btfss	status,2,c
 31910   007234  EF1E  F039         	goto	u5551
 31911   007238  EF20  F039         	goto	u5550
 31912   00723C                     u5551:
 31913   00723C  EF26  F039         	goto	l1652
 31914   007240                     u5550:
 31915   007240                     
 31916                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 31917   007240  0E01               	movlw	1
 31918   007242  0105               	movlb	5	; () banked
 31919   007244  6F97               	movwf	_timedResponseAllServicesFlag& (0+255),b
 31920   007246                     
 31921                           ; BSR set to: 5
 31922                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 31923   007246  6B98               	clrf	_timedResponseServiceIndex& (0+255),b
 31924                           
 31925                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 31926   007248  EF3D  F039         	goto	l8054
 31927   00724C                     l1652:
 31928                           
 31929                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 31930   00724C  0105               	movlb	5	; () banked
 31931   00724E  6B97               	clrf	_timedResponseAllServicesFlag& (0+255),b
 31932   007250                     
 31933                           ; BSR set to: 5
 31934                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 6)) {
 31935   007250  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 31936   007252  B4D8               	btfsc	status,2,c
 31937   007254  EF2E  F039         	goto	u5561
 31938   007258  EF30  F039         	goto	u5560
 31939   00725C                     u5561:
 31940   00725C  EF38  F039         	goto	l1656
 31941   007260                     u5560:
 31942   007260                     
 31943                           ; BSR set to: 5
 31944   007260  0E06               	movlw	6
 31945   007262  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 31946   007264  EF36  F039         	goto	u5571
 31947   007268  EF38  F039         	goto	u5570
 31948   00726C                     u5571:
 31949   00726C  EF3B  F039         	goto	l8052
 31950   007270                     u5570:
 31951   007270                     l1656:
 31952                           
 31953                           ; BSR set to: 5
 31954                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 31955   007270  6996               	setf	_timedResponseType& (0+255),b
 31956                           
 31957                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 31958   007272  EF42  F039         	goto	l1657
 31959   007276                     l8052:
 31960                           
 31961                           ; BSR set to: 5
 31962                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 31963   007276  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 31964   007278  6F98               	movwf	_timedResponseServiceIndex& (0+255),b
 31965   00727A                     l8054:
 31966                           
 31967                           ; BSR set to: 5
 31968                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 31969   00727A  6B95               	clrf	_timedResponseStep& (0+255),b
 31970                           
 31971                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 31972   00727C  C506  F585         	movff	startTimedResponse@callback,_timedResponseCallback
 31973   007280  C507  F586         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31974   007284                     l1657:
 31975                           
 31976                           ; BSR set to: 5
 31977   007284  0012               	return		;funcret
 31978   007286                     __end_of_startTimedResponse:
 31979                           	callstack 0
 31980                           
 31981 ;; *************** function _sendMessage6 *****************
 31982 ;; Defined at:
 31983 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 31984 ;; Parameters:    Size  Location     Type
 31985 ;;  opc             1    wreg     enum E22928
 31986 ;;  data1           1   37[COMRAM] unsigned char 
 31987 ;;  data2           1   38[COMRAM] unsigned char 
 31988 ;;  data3           1   39[COMRAM] unsigned char 
 31989 ;;  data4           1   40[COMRAM] unsigned char 
 31990 ;;  data5           1   41[COMRAM] unsigned char 
 31991 ;;  data6           1   42[COMRAM] unsigned char 
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;  opc             1   43[COMRAM] enum E22928
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      void 
 31996 ;; Registers used:
 31997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31998 ;; Tracked objects:
 31999 ;;		On entry : 0/0
 32000 ;;		On exit  : 0/0
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32003 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32006 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32007 ;;Total ram usage:        7 bytes
 32008 ;; Hardware stack levels used: 1
 32009 ;; Hardware stack levels required when called: 5
 32010 ;; This function calls:
 32011 ;;		_sendMessage
 32012 ;; This function is called by:
 32013 ;;		_doReqev
 32014 ;;		_reqevCallback
 32015 ;;		_mnsProcessMessage
 32016 ;;		_mnsTRallDiagnosticsCallback
 32017 ;; This function uses a non-reentrant model
 32018 ;;
 32019                           
 32020                           	psect	text62
 32021   00797E                     __ptext62:
 32022                           	callstack 0
 32023   00797E                     _sendMessage6:
 32024                           	callstack 118
 32025                           
 32026                           ; BSR set to: 5
 32027                           ;incstack = 0
 32028                           ;sendMessage6@opc stored from wreg
 32029   00797E  6E2C               	movwf	sendMessage6@opc^(0+1280),c
 32030   007980                     
 32031                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 32032   007980  0E07               	movlw	7
 32033   007982  6E1B               	movwf	sendMessage@len^(0+1280),c
 32034   007984  C526  F51C         	movff	sendMessage6@data1,sendMessage@data1
 32035   007988  C527  F51D         	movff	sendMessage6@data2,sendMessage@data2
 32036   00798C  C528  F51E         	movff	sendMessage6@data3,sendMessage@data3
 32037   007990  C529  F51F         	movff	sendMessage6@data4,sendMessage@data4
 32038   007994  C52A  F520         	movff	sendMessage6@data5,sendMessage@data5
 32039   007998  C52B  F521         	movff	sendMessage6@data6,sendMessage@data6
 32040   00799C  0E00               	movlw	0
 32041   00799E  6E22               	movwf	sendMessage@data7^(0+1280),c
 32042   0079A0  502C               	movf	sendMessage6@opc^(0+1280),w,c
 32043   0079A2  ECCD  F032         	call	_sendMessage
 32044   0079A6  0012               	return		;funcret
 32045   0079A8                     __end_of_sendMessage6:
 32046                           	callstack 0
 32047                           
 32048 ;; *************** function _sendMessage4 *****************
 32049 ;; Defined at:
 32050 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;  opc             1    wreg     enum E22928
 32053 ;;  data1           1   37[COMRAM] unsigned char 
 32054 ;;  data2           1   38[COMRAM] unsigned char 
 32055 ;;  data3           1   39[COMRAM] unsigned char 
 32056 ;;  data4           1   40[COMRAM] unsigned char 
 32057 ;; Auto vars:     Size  Location     Type
 32058 ;;  opc             1   41[COMRAM] enum E22928
 32059 ;; Return value:  Size  Location     Type
 32060 ;;                  1    wreg      void 
 32061 ;; Registers used:
 32062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32063 ;; Tracked objects:
 32064 ;;		On entry : 0/0
 32065 ;;		On exit  : 0/0
 32066 ;;		Unchanged: 0/0
 32067 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32071 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32072 ;;Total ram usage:        5 bytes
 32073 ;; Hardware stack levels used: 1
 32074 ;; Hardware stack levels required when called: 5
 32075 ;; This function calls:
 32076 ;;		_sendMessage
 32077 ;; This function is called by:
 32078 ;;		_mnsProcessMessage
 32079 ;;		_mnsTRrqnpnCallback
 32080 ;;		_nvProcessMessage
 32081 ;;		_nvTRnvrdCallback
 32082 ;; This function uses a non-reentrant model
 32083 ;;
 32084                           
 32085                           	psect	text63
 32086   0079A8                     __ptext63:
 32087                           	callstack 0
 32088   0079A8                     _sendMessage4:
 32089                           	callstack 118
 32090                           
 32091                           ;incstack = 0
 32092                           ;sendMessage4@opc stored from wreg
 32093   0079A8  6E2A               	movwf	sendMessage4@opc^(0+1280),c
 32094   0079AA                     
 32095                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32096   0079AA  0E05               	movlw	5
 32097   0079AC  6E1B               	movwf	sendMessage@len^(0+1280),c
 32098   0079AE  C526  F51C         	movff	sendMessage4@data1,sendMessage@data1
 32099   0079B2  C527  F51D         	movff	sendMessage4@data2,sendMessage@data2
 32100   0079B6  C528  F51E         	movff	sendMessage4@data3,sendMessage@data3
 32101   0079BA  C529  F51F         	movff	sendMessage4@data4,sendMessage@data4
 32102   0079BE  0E00               	movlw	0
 32103   0079C0  6E20               	movwf	sendMessage@data5^(0+1280),c
 32104   0079C2  0E00               	movlw	0
 32105   0079C4  6E21               	movwf	sendMessage@data6^(0+1280),c
 32106   0079C6  0E00               	movlw	0
 32107   0079C8  6E22               	movwf	sendMessage@data7^(0+1280),c
 32108   0079CA  502A               	movf	sendMessage4@opc^(0+1280),w,c
 32109   0079CC  ECCD  F032         	call	_sendMessage
 32110   0079D0  0012               	return		;funcret
 32111   0079D2                     __end_of_sendMessage4:
 32112                           	callstack 0
 32113                           
 32114 ;; *************** function _sendMessage3 *****************
 32115 ;; Defined at:
 32116 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 32117 ;; Parameters:    Size  Location     Type
 32118 ;;  opc             1    wreg     enum E22928
 32119 ;;  data1           1   37[COMRAM] unsigned char 
 32120 ;;  data2           1   38[COMRAM] unsigned char 
 32121 ;;  data3           1   39[COMRAM] unsigned char 
 32122 ;; Auto vars:     Size  Location     Type
 32123 ;;  opc             1   40[COMRAM] enum E22928
 32124 ;; Return value:  Size  Location     Type
 32125 ;;                  1    wreg      void 
 32126 ;; Registers used:
 32127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32128 ;; Tracked objects:
 32129 ;;		On entry : 0/0
 32130 ;;		On exit  : 0/0
 32131 ;;		Unchanged: 0/0
 32132 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32137 ;;Total ram usage:        4 bytes
 32138 ;; Hardware stack levels used: 1
 32139 ;; Hardware stack levels required when called: 5
 32140 ;; This function calls:
 32141 ;;		_sendMessage
 32142 ;; This function is called by:
 32143 ;;		_teachProcessMessage
 32144 ;;		_doNnevn
 32145 ;;		_doNenrd
 32146 ;;		_doRqevn
 32147 ;;		_doEvlrn
 32148 ;;		_doReval
 32149 ;;		_doEvuln
 32150 ;;		_doReqev
 32151 ;;		_mnsProcessMessage
 32152 ;;		_nvProcessMessage
 32153 ;; This function uses a non-reentrant model
 32154 ;;
 32155                           
 32156                           	psect	text64
 32157   0079D2                     __ptext64:
 32158                           	callstack 0
 32159   0079D2                     _sendMessage3:
 32160                           	callstack 119
 32161                           
 32162                           ;incstack = 0
 32163                           ;sendMessage3@opc stored from wreg
 32164   0079D2  6E29               	movwf	sendMessage3@opc^(0+1280),c
 32165   0079D4                     
 32166                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 32167   0079D4  0E04               	movlw	4
 32168   0079D6  6E1B               	movwf	sendMessage@len^(0+1280),c
 32169   0079D8  C526  F51C         	movff	sendMessage3@data1,sendMessage@data1
 32170   0079DC  C527  F51D         	movff	sendMessage3@data2,sendMessage@data2
 32171   0079E0  C528  F51E         	movff	sendMessage3@data3,sendMessage@data3
 32172   0079E4  0E00               	movlw	0
 32173   0079E6  6E1F               	movwf	sendMessage@data4^(0+1280),c
 32174   0079E8  0E00               	movlw	0
 32175   0079EA  6E20               	movwf	sendMessage@data5^(0+1280),c
 32176   0079EC  0E00               	movlw	0
 32177   0079EE  6E21               	movwf	sendMessage@data6^(0+1280),c
 32178   0079F0  0E00               	movlw	0
 32179   0079F2  6E22               	movwf	sendMessage@data7^(0+1280),c
 32180   0079F4  5029               	movf	sendMessage3@opc^(0+1280),w,c
 32181   0079F6  ECCD  F032         	call	_sendMessage
 32182   0079FA  0012               	return		;funcret
 32183   0079FC                     __end_of_sendMessage3:
 32184                           	callstack 0
 32185                           
 32186 ;; *************** function _getParameter *****************
 32187 ;; Defined at:
 32188 ;;		line 837 in file "../../VLCBlib_PIC/mns.c"
 32189 ;; Parameters:    Size  Location     Type
 32190 ;;  idx             1    wreg     unsigned char 
 32191 ;; Auto vars:     Size  Location     Type
 32192 ;;  idx             1    8[COMRAM] unsigned char 
 32193 ;;  i               1    0        unsigned char 
 32194 ;; Return value:  Size  Location     Type
 32195 ;;                  1    wreg      unsigned char 
 32196 ;; Registers used:
 32197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32198 ;; Tracked objects:
 32199 ;;		On entry : 0/0
 32200 ;;		On exit  : 0/0
 32201 ;;		Unchanged: 0/0
 32202 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32207 ;;Total ram usage:        4 bytes
 32208 ;; Hardware stack levels used: 1
 32209 ;; Hardware stack levels required when called: 3
 32210 ;; This function calls:
 32211 ;;		_getParameterFlags
 32212 ;;		_have
 32213 ;; This function is called by:
 32214 ;;		_mnsProcessMessage
 32215 ;;		_mnsTRrqnpnCallback
 32216 ;; This function uses a non-reentrant model
 32217 ;;
 32218                           
 32219                           	psect	text65
 32220   00425A                     __ptext65:
 32221                           	callstack 0
 32222   00425A                     _getParameter:
 32223                           	callstack 120
 32224                           
 32225                           ;incstack = 0
 32226                           ;getParameter@idx stored from wreg
 32227   00425A  6E09               	movwf	getParameter@idx^(0+1280),c
 32228   00425C                     
 32229                           ;../../VLCBlib_PIC/mns.c: 838:     uint8_t i;;../../VLCBlib_PIC/mns.c: 839:     switch(i
      +                          dx) {
 32230   00425C  EF95  F021         	goto	l8230
 32231   004260                     l8134:
 32232                           
 32233                           ;../../VLCBlib_PIC/mns.c: 841:         return 20;
 32234   004260  0E14               	movlw	20
 32235   004262  EFEC  F021         	goto	l1227
 32236   004266                     l8138:
 32237                           
 32238                           ;../../VLCBlib_PIC/mns.c: 843:         return MANU_MERG;
 32239   004266  0EA5               	movlw	165
 32240   004268  EFEC  F021         	goto	l1227
 32241   00426C                     l8142:
 32242                           
 32243                           ;../../VLCBlib_PIC/mns.c: 845:         return 'a';
 32244   00426C  0E61               	movlw	97
 32245   00426E  EFEC  F021         	goto	l1227
 32246   004272                     l8146:
 32247                           
 32248                           ;../../VLCBlib_PIC/mns.c: 847:         return MTYP_VLCB;
 32249   004272  0EFC               	movlw	252
 32250   004274  EFEC  F021         	goto	l1227
 32251   004278                     l8150:
 32252                           
 32253                           ;../../VLCBlib_PIC/mns.c: 849:         return 255;
 32254   004278  0EFF               	movlw	255
 32255   00427A  EFEC  F021         	goto	l1227
 32256   00427E                     l8158:
 32257                           
 32258                           ;../../VLCBlib_PIC/mns.c: 853:         return 48;
 32259   00427E  0E30               	movlw	48
 32260   004280  EFEC  F021         	goto	l1227
 32261   004284                     l8162:
 32262                           
 32263                           ;../../VLCBlib_PIC/mns.c: 855:         return 1;
 32264   004284  0E01               	movlw	1
 32265   004286  EFEC  F021         	goto	l1227
 32266   00428A                     l8166:
 32267                           
 32268                           ;../../VLCBlib_PIC/mns.c: 857:         return getParameterFlags();
 32269   00428A  ECE9  F033         	call	_getParameterFlags	;wreg free
 32270   00428E  EFEC  F021         	goto	l1227
 32271   004292                     l8170:
 32272                           
 32273                           ;../../VLCBlib_PIC/mns.c: 859:         return P18F27Q83;
 32274   004292  0E17               	movlw	23
 32275   004294  EFEC  F021         	goto	l1227
 32276   004298                     l8174:
 32277                           
 32278                           ;../../VLCBlib_PIC/mns.c: 861:         if (have(SERVICE_ID_CAN)) {
 32279   004298  0E03               	movlw	3
 32280   00429A  ECA3  F033         	call	_have
 32281   00429E  0900               	iorlw	0
 32282   0042A0  B4D8               	btfsc	status,2,c
 32283   0042A2  EF55  F021         	goto	u5631
 32284   0042A6  EF57  F021         	goto	u5630
 32285   0042AA                     u5631:
 32286   0042AA  EF59  F021         	goto	l8180
 32287   0042AE                     u5630:
 32288   0042AE  EF42  F021         	goto	l8162
 32289   0042B2                     l8180:
 32290                           
 32291                           ;../../VLCBlib_PIC/mns.c: 864:         return 0;
 32292   0042B2  0E00               	movlw	0
 32293   0042B4  EFEC  F021         	goto	l1227
 32294   0042B8                     l8188:
 32295                           
 32296                           ;../../VLCBlib_PIC/mns.c: 868:         return 0x08;
 32297   0042B8  0E08               	movlw	8
 32298   0042BA  EFEC  F021         	goto	l1227
 32299   0042BE                     l8200:
 32300                           
 32301                           ;../../VLCBlib_PIC/mns.c: 875:         return *(const uint8_t*)0x3FFFFC;
 32302   0042BE  0EFC               	movlw	252
 32303   0042C0  6EF6               	movwf	tblptrl,c
 32304   0042C2                     	if	1	;There is more than 1 active tblptr byte
 32305   0042C2  0EFF               	movlw	255
 32306   0042C4  6EF7               	movwf	tblptrh,c
 32307   0042C6                     	endif
 32308   0042C6                     	if	1	;There are 3 active tblptr bytes
 32309   0042C6  0E00               	movlw	0
 32310   0042C8  6EF8               	movwf	tblptru,c
 32311   0042CA                     	endif
 32312   0042CA  0008               	tblrd		*
 32313   0042CC  50F5               	movf	tablat,w,c
 32314   0042CE  EFEC  F021         	goto	l1227
 32315   0042D2                     l8204:
 32316                           
 32317                           ;../../VLCBlib_PIC/mns.c: 877:         return *(const uint8_t*)0x3FFFFD;
 32318   0042D2  0EFD               	movlw	253
 32319   0042D4  6EF6               	movwf	tblptrl,c
 32320   0042D6                     	if	1	;There is more than 1 active tblptr byte
 32321   0042D6  0EFF               	movlw	255
 32322   0042D8  6EF7               	movwf	tblptrh,c
 32323   0042DA                     	endif
 32324   0042DA                     	if	1	;There are 3 active tblptr bytes
 32325   0042DA  0E00               	movlw	0
 32326   0042DC  6EF8               	movwf	tblptru,c
 32327   0042DE                     	endif
 32328   0042DE  0008               	tblrd		*
 32329   0042E0  50F5               	movf	tablat,w,c
 32330   0042E2  EFEC  F021         	goto	l1227
 32331   0042E6                     l8208:
 32332                           
 32333                           ;../../VLCBlib_PIC/mns.c: 880:         return *(const uint8_t*)0x3FFFFE;
 32334   0042E6  0EFE               	movlw	254
 32335   0042E8  6EF6               	movwf	tblptrl,c
 32336   0042EA                     	if	1	;There is more than 1 active tblptr byte
 32337   0042EA  0EFF               	movlw	255
 32338   0042EC  6EF7               	movwf	tblptrh,c
 32339   0042EE                     	endif
 32340   0042EE                     	if	1	;There are 3 active tblptr bytes
 32341   0042EE  0E00               	movlw	0
 32342   0042F0  6EF8               	movwf	tblptru,c
 32343   0042F2                     	endif
 32344   0042F2  0008               	tblrd		*
 32345   0042F4  50F5               	movf	tablat,w,c
 32346   0042F6  EFEC  F021         	goto	l1227
 32347   0042FA                     l8212:
 32348                           
 32349                           ;../../VLCBlib_PIC/mns.c: 882:         return *(const uint8_t*)0x3FFFFF;
 32350   0042FA  0EFF               	movlw	255
 32351   0042FC  6E06               	movwf	??_getParameter^(0+1280),c
 32352   0042FE  0EFF               	movlw	255
 32353   004300  6E07               	movwf	(??_getParameter+1)^(0+1280),c
 32354   004302  0E00               	movlw	0
 32355   004304  6E08               	movwf	(??_getParameter+2)^(0+1280),c
 32356   004306  C506  F4F6         	movff	??_getParameter,tblptrl
 32357   00430A  C507  F4F7         	movff	??_getParameter+1,tblptrh
 32358   00430E  5008               	movf	(??_getParameter+2)^(0+1280),w,c
 32359   004310  BEE8               	btfsc	wreg,7,c
 32360   004312  D004               	bra	u5647
 32361   004314  6EF8               	movwf	tblptru,c
 32362   004316  0008               	tblrd		*
 32363   004318  50F5               	movf	tablat,w,c
 32364   00431A  D005               	bra	u5640
 32365   00431C                     u5647:
 32366   00431C  C4F6 F4E1          	movff	tblptrl,fsr1l
 32367   004320  C4F7 F4E2          	movff	tblptrh,fsr1h
 32368   004324  50E7               	movf	indf1,w,c
 32369   004326                     u5640:
 32370   004326  EFEC  F021         	goto	l1227
 32371   00432A                     l8230:
 32372   00432A  5009               	movf	getParameter@idx^(0+1280),w,c
 32373                           
 32374                           ; Switch size 1, requested type "simple"
 32375                           ; Number of cases is 21, Range of values is 0 to 20
 32376                           ; switch strategies available:
 32377                           ; Name         Instructions Cycles
 32378                           ; simple_byte           64    33 (average)
 32379                           ;	Chosen strategy is simple_byte
 32380   00432C  0A00               	xorlw	0	; case 0
 32381   00432E  B4D8               	btfsc	status,2,c
 32382   004330  EF30  F021         	goto	l8134
 32383   004334  0A01               	xorlw	1	; case 1
 32384   004336  B4D8               	btfsc	status,2,c
 32385   004338  EF33  F021         	goto	l8138
 32386   00433C  0A03               	xorlw	3	; case 2
 32387   00433E  B4D8               	btfsc	status,2,c
 32388   004340  EF36  F021         	goto	l8142
 32389   004344  0A01               	xorlw	1	; case 3
 32390   004346  B4D8               	btfsc	status,2,c
 32391   004348  EF39  F021         	goto	l8146
 32392   00434C  0A07               	xorlw	7	; case 4
 32393   00434E  B4D8               	btfsc	status,2,c
 32394   004350  EF3C  F021         	goto	l8150
 32395   004354  0A01               	xorlw	1	; case 5
 32396   004356  B4D8               	btfsc	status,2,c
 32397   004358  EF39  F021         	goto	l8146
 32398   00435C  0A03               	xorlw	3	; case 6
 32399   00435E  B4D8               	btfsc	status,2,c
 32400   004360  EF3F  F021         	goto	l8158
 32401   004364  0A01               	xorlw	1	; case 7
 32402   004366  B4D8               	btfsc	status,2,c
 32403   004368  EF42  F021         	goto	l8162
 32404   00436C  0A0F               	xorlw	15	; case 8
 32405   00436E  B4D8               	btfsc	status,2,c
 32406   004370  EF45  F021         	goto	l8166
 32407   004374  0A01               	xorlw	1	; case 9
 32408   004376  B4D8               	btfsc	status,2,c
 32409   004378  EF49  F021         	goto	l8170
 32410   00437C  0A03               	xorlw	3	; case 10
 32411   00437E  B4D8               	btfsc	status,2,c
 32412   004380  EF4C  F021         	goto	l8174
 32413   004384  0A01               	xorlw	1	; case 11
 32414   004386  B4D8               	btfsc	status,2,c
 32415   004388  EF59  F021         	goto	l8180
 32416   00438C  0A07               	xorlw	7	; case 12
 32417   00438E  B4D8               	btfsc	status,2,c
 32418   004390  EF5C  F021         	goto	l8188
 32419   004394  0A01               	xorlw	1	; case 13
 32420   004396  B4D8               	btfsc	status,2,c
 32421   004398  EF59  F021         	goto	l8180
 32422   00439C  0A03               	xorlw	3	; case 14
 32423   00439E  B4D8               	btfsc	status,2,c
 32424   0043A0  EF59  F021         	goto	l8180
 32425   0043A4  0A01               	xorlw	1	; case 15
 32426   0043A6  B4D8               	btfsc	status,2,c
 32427   0043A8  EF5F  F021         	goto	l8200
 32428   0043AC  0A1F               	xorlw	31	; case 16
 32429   0043AE  B4D8               	btfsc	status,2,c
 32430   0043B0  EF69  F021         	goto	l8204
 32431   0043B4  0A01               	xorlw	1	; case 17
 32432   0043B6  B4D8               	btfsc	status,2,c
 32433   0043B8  EF73  F021         	goto	l8208
 32434   0043BC  0A03               	xorlw	3	; case 18
 32435   0043BE  B4D8               	btfsc	status,2,c
 32436   0043C0  EF7D  F021         	goto	l8212
 32437   0043C4  0A01               	xorlw	1	; case 19
 32438   0043C6  B4D8               	btfsc	status,2,c
 32439   0043C8  EF42  F021         	goto	l8162
 32440   0043CC  0A07               	xorlw	7	; case 20
 32441   0043CE  B4D8               	btfsc	status,2,c
 32442   0043D0  EF42  F021         	goto	l8162
 32443   0043D4  EF59  F021         	goto	l8180
 32444   0043D8                     l1227:
 32445   0043D8  0012               	return		;funcret
 32446   0043DA                     __end_of_getParameter:
 32447                           	callstack 0
 32448                           
 32449 ;; *************** function _getParameterFlags *****************
 32450 ;; Defined at:
 32451 ;;		line 608 in file "../../VLCBlib_PIC/mns.c"
 32452 ;; Parameters:    Size  Location     Type
 32453 ;;		None
 32454 ;; Auto vars:     Size  Location     Type
 32455 ;;  flags           1    4[COMRAM] unsigned char 
 32456 ;; Return value:  Size  Location     Type
 32457 ;;                  1    wreg      unsigned char 
 32458 ;; Registers used:
 32459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32460 ;; Tracked objects:
 32461 ;;		On entry : 0/0
 32462 ;;		On exit  : 0/0
 32463 ;;		Unchanged: 0/0
 32464 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32469 ;;Total ram usage:        1 bytes
 32470 ;; Hardware stack levels used: 1
 32471 ;; Hardware stack levels required when called: 2
 32472 ;; This function calls:
 32473 ;;		_have
 32474 ;; This function is called by:
 32475 ;;		_mnsProcessMessage
 32476 ;;		_getParameter
 32477 ;; This function uses a non-reentrant model
 32478 ;;
 32479                           
 32480                           	psect	text66
 32481   0067D2                     __ptext66:
 32482                           	callstack 0
 32483   0067D2                     _getParameterFlags:
 32484                           	callstack 120
 32485   0067D2                     
 32486                           ;../../VLCBlib_PIC/mns.c: 609:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 610:     flag
      +                          s = 0;
 32487   0067D2  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 32488   0067D4                     
 32489                           ;../../VLCBlib_PIC/mns.c: 611:     if (have(SERVICE_ID_CONSUMER)) {
 32490   0067D4  0E06               	movlw	6
 32491   0067D6  ECA3  F033         	call	_have
 32492   0067DA  0900               	iorlw	0
 32493   0067DC  B4D8               	btfsc	status,2,c
 32494   0067DE  EFF3  F033         	goto	u5341
 32495   0067E2  EFF5  F033         	goto	u5340
 32496   0067E6                     u5341:
 32497   0067E6  EFF6  F033         	goto	l7862
 32498   0067EA                     u5340:
 32499   0067EA                     
 32500                           ;../../VLCBlib_PIC/mns.c: 612:         flags |= 1;
 32501   0067EA  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 32502   0067EC                     l7862:
 32503                           
 32504                           ;../../VLCBlib_PIC/mns.c: 614:     if (have(SERVICE_ID_PRODUCER)) {
 32505   0067EC  0E05               	movlw	5
 32506   0067EE  ECA3  F033         	call	_have
 32507   0067F2  0900               	iorlw	0
 32508   0067F4  B4D8               	btfsc	status,2,c
 32509   0067F6  EFFF  F033         	goto	u5351
 32510   0067FA  EF01  F034         	goto	u5350
 32511   0067FE                     u5351:
 32512   0067FE  EF02  F034         	goto	l7866
 32513   006802                     u5350:
 32514   006802                     
 32515                           ;../../VLCBlib_PIC/mns.c: 615:         flags |= 2;
 32516   006802  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 32517   006804                     l7866:
 32518                           
 32519                           ;../../VLCBlib_PIC/mns.c: 617:     if (flags == (2 | 1)) flags |= 16;
 32520   006804  0E03               	movlw	3
 32521   006806  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 32522   006808  A4D8               	btfss	status,2,c
 32523   00680A  EF09  F034         	goto	u5361
 32524   00680E  EF0B  F034         	goto	u5360
 32525   006812                     u5361:
 32526   006812  EF0C  F034         	goto	l7870
 32527   006816                     u5360:
 32528   006816  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 32529   006818                     l7870:
 32530                           
 32531                           ;../../VLCBlib_PIC/mns.c: 618:     if (have(SERVICE_ID_BOOT)) {
 32532   006818  0E0A               	movlw	10
 32533   00681A  ECA3  F033         	call	_have
 32534   00681E  0900               	iorlw	0
 32535   006820  B4D8               	btfsc	status,2,c
 32536   006822  EF15  F034         	goto	u5371
 32537   006826  EF17  F034         	goto	u5370
 32538   00682A                     u5371:
 32539   00682A  EF18  F034         	goto	l7874
 32540   00682E                     u5370:
 32541   00682E                     
 32542                           ;../../VLCBlib_PIC/mns.c: 619:         flags |= 8;
 32543   00682E  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 32544   006830                     l7874:
 32545                           
 32546                           ;../../VLCBlib_PIC/mns.c: 621:     if (mode_flags & 1) {
 32547   006830  0105               	movlb	5	; () banked
 32548   006832  A1A4               	btfss	_mode_flags& (0+255),0,b
 32549   006834  EF1E  F034         	goto	u5381
 32550   006838  EF20  F034         	goto	u5380
 32551   00683C                     u5381:
 32552   00683C  EF21  F034         	goto	l7878
 32553   006840                     u5380:
 32554   006840                     
 32555                           ; BSR set to: 5
 32556                           ;../../VLCBlib_PIC/mns.c: 622:         flags |= 32;
 32557   006840  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 32558   006842                     l7878:
 32559                           
 32560                           ; BSR set to: 5
 32561                           ;../../VLCBlib_PIC/mns.c: 624:     if (mode_state == MODE_NORMAL) {
 32562   006842  05A1               	decf	_mode_state& (0+255),w,b
 32563   006844  A4D8               	btfss	status,2,c
 32564   006846  EF27  F034         	goto	u5391
 32565   00684A  EF29  F034         	goto	u5390
 32566   00684E                     u5391:
 32567   00684E  EF2A  F034         	goto	l1171
 32568   006852                     u5390:
 32569   006852                     
 32570                           ; BSR set to: 5
 32571                           ;../../VLCBlib_PIC/mns.c: 625:         flags |= 4;
 32572   006852  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 32573   006854                     l1171:
 32574                           
 32575                           ; BSR set to: 5
 32576                           ;../../VLCBlib_PIC/mns.c: 628:     flags |= 64;
 32577   006854  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 32578   006856                     
 32579                           ; BSR set to: 5
 32580                           ;../../VLCBlib_PIC/mns.c: 630:     return flags;
 32581   006856  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 32582   006858                     
 32583                           ; BSR set to: 5
 32584   006858  0012               	return		;funcret
 32585   00685A                     __end_of_getParameterFlags:
 32586                           	callstack 0
 32587                           
 32588 ;; *************** function _findServiceIndex *****************
 32589 ;; Defined at:
 32590 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 32591 ;; Parameters:    Size  Location     Type
 32592 ;;  serviceType     1    wreg     unsigned char 
 32593 ;; Auto vars:     Size  Location     Type
 32594 ;;  serviceType     1    2[COMRAM] unsigned char 
 32595 ;;  i               1    3[COMRAM] unsigned char 
 32596 ;; Return value:  Size  Location     Type
 32597 ;;                  1    wreg      unsigned char 
 32598 ;; Registers used:
 32599 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32600 ;; Tracked objects:
 32601 ;;		On entry : 0/0
 32602 ;;		On exit  : 0/0
 32603 ;;		Unchanged: 0/0
 32604 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32609 ;;Total ram usage:        4 bytes
 32610 ;; Hardware stack levels used: 1
 32611 ;; Hardware stack levels required when called: 1
 32612 ;; This function calls:
 32613 ;;		Nothing
 32614 ;; This function is called by:
 32615 ;;		_doNerd
 32616 ;;		_doReval
 32617 ;;		_doReqev
 32618 ;;		_mnsProcessMessage
 32619 ;;		_nvProcessMessage
 32620 ;; This function uses a non-reentrant model
 32621 ;;
 32622                           
 32623                           	psect	text67
 32624   0066BA                     __ptext67:
 32625                           	callstack 0
 32626   0066BA                     _findServiceIndex:
 32627                           	callstack 122
 32628                           
 32629                           ; BSR set to: 5
 32630                           ;incstack = 0
 32631                           ;findServiceIndex@serviceType stored from wreg
 32632   0066BA  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 32633   0066BC                     
 32634                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<6; i++) {
 32635   0066BC  6A04               	clrf	findServiceIndex@i^(0+1280),c
 32636   0066BE                     l8024:
 32637                           
 32638                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32639   0066BE  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32640   0066C0  0D02               	mullw	2
 32641   0066C2  0E89               	movlw	low _services
 32642   0066C4  24F3               	addwf	243,w,c
 32643   0066C6  6EF6               	movwf	tblptrl,c
 32644   0066C8  0EFF               	movlw	high _services
 32645   0066CA  20F4               	addwfc	244,w,c
 32646   0066CC  6EF7               	movwf	tblptrh,c
 32647   0066CE                     	if	1	;There are 3 active tblptr bytes
 32648   0066CE  6AF8               	clrf	tblptru,c
 32649   0066D0  0E00               	movlw	low (__mediumconst shr (0+16))
 32650   0066D2  22F8               	addwfc	tblptru,f,c
 32651   0066D4                     	endif
 32652   0066D4  0009               	tblrd		*+
 32653   0066D6  50F5               	movf	tablat,w,c
 32654   0066D8  0009               	tblrd		*+
 32655   0066DA  10F5               	iorwf	tablat,w,c
 32656   0066DC  B4D8               	btfsc	status,2,c
 32657   0066DE  EF73  F033         	goto	u5521
 32658   0066E2  EF75  F033         	goto	u5520
 32659   0066E6                     u5521:
 32660   0066E6  EF98  F033         	goto	l8032
 32661   0066EA                     u5520:
 32662   0066EA  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32663   0066EC  0D02               	mullw	2
 32664   0066EE  0E89               	movlw	low _services
 32665   0066F0  24F3               	addwf	243,w,c
 32666   0066F2  6EF6               	movwf	tblptrl,c
 32667   0066F4  0EFF               	movlw	high _services
 32668   0066F6  20F4               	addwfc	244,w,c
 32669   0066F8  6EF7               	movwf	tblptrh,c
 32670   0066FA                     	if	1	;There are 3 active tblptr bytes
 32671   0066FA  6AF8               	clrf	tblptru,c
 32672   0066FC  0E00               	movlw	low (__mediumconst shr (0+16))
 32673   0066FE  22F8               	addwfc	tblptru,f,c
 32674   006700                     	endif
 32675   006700  0009               	tblrd		*+
 32676   006702  C4F5 F501          	movff	tablat,??_findServiceIndex
 32677   006706  0009               	tblrd		*+
 32678   006708  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 32679   00670C  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 32680   006710  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 32681   006714                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32682   006714  6AF8               	clrf	tblptru,c
 32683   006716                     	endif
 32684   006716                     	if	0	;tblptru may be non-zero
 32685   006716                     	endif
 32686   006716  0008               	tblrd		*
 32687   006718  50F5               	movf	tablat,w,c
 32688   00671A  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 32689   00671C  A4D8               	btfss	status,2,c
 32690   00671E  EF93  F033         	goto	u5531
 32691   006722  EF95  F033         	goto	u5530
 32692   006726                     u5531:
 32693   006726  EF98  F033         	goto	l8032
 32694   00672A                     u5530:
 32695   00672A                     
 32696                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 32697   00672A  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32698   00672C  EFA2  F033         	goto	l1763
 32699   006730                     l8032:
 32700                           
 32701                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 32702   006730  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 32703   006732  0E05               	movlw	5
 32704   006734  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 32705   006736  EF9F  F033         	goto	u5541
 32706   00673A  EFA1  F033         	goto	u5540
 32707   00673E                     u5541:
 32708   00673E  EF5F  F033         	goto	l8024
 32709   006742                     u5540:
 32710   006742                     
 32711                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 32712   006742  0EFF               	movlw	255
 32713   006744                     l1763:
 32714   006744  0012               	return		;funcret
 32715   006746                     __end_of_findServiceIndex:
 32716                           	callstack 0
 32717                           
 32718 ;; *************** function _canWaitForTxQueueToDrain *****************
 32719 ;; Defined at:
 32720 ;;		line 671 in file "../../VLCBlib_PIC/can18_can_2.c"
 32721 ;; Parameters:    Size  Location     Type
 32722 ;;		None
 32723 ;; Auto vars:     Size  Location     Type
 32724 ;;		None
 32725 ;; Return value:  Size  Location     Type
 32726 ;;                  1    wreg      void 
 32727 ;; Registers used:
 32728 ;;		None
 32729 ;; Tracked objects:
 32730 ;;		On entry : 0/0
 32731 ;;		On exit  : 0/0
 32732 ;;		Unchanged: 0/0
 32733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32738 ;;Total ram usage:        0 bytes
 32739 ;; Hardware stack levels used: 1
 32740 ;; Hardware stack levels required when called: 1
 32741 ;; This function calls:
 32742 ;;		Nothing
 32743 ;; This function is called by:
 32744 ;;		_mnsProcessMessage
 32745 ;; This function uses a non-reentrant model
 32746 ;;
 32747                           
 32748                           	psect	text68
 32749   007C42                     __ptext68:
 32750                           	callstack 0
 32751   007C42                     _canWaitForTxQueueToDrain:
 32752                           	callstack 123
 32753   007C42                     l460:
 32754                           
 32755                           ;../../VLCBlib_PIC/can18_can_2.c: 672:     while (C1FIFOCON2H & 0x2) {
 32756   007C42  0101               	movlb	1	; () banked
 32757   007C44  B369               	btfsc	105,1,b	;volatile
 32758   007C46  EF27  F03E         	goto	u5901
 32759   007C4A  EF29  F03E         	goto	u5900
 32760   007C4E                     u5901:
 32761   007C4E  EF21  F03E         	goto	l460
 32762   007C52                     u5900:
 32763   007C52                     
 32764                           ; BSR set to: 1
 32765   007C52  0012               	return		;funcret
 32766   007C54                     __end_of_canWaitForTxQueueToDrain:
 32767                           	callstack 0
 32768                           
 32769 ;; *************** function _canPoll *****************
 32770 ;; Defined at:
 32771 ;;		line 443 in file "../../VLCBlib_PIC/can18_can_2.c"
 32772 ;; Parameters:    Size  Location     Type
 32773 ;;		None
 32774 ;; Auto vars:     Size  Location     Type
 32775 ;;  t8              1    0        unsigned char 
 32776 ;; Return value:  Size  Location     Type
 32777 ;;                  1    wreg      void 
 32778 ;; Registers used:
 32779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32780 ;; Tracked objects:
 32781 ;;		On entry : 0/0
 32782 ;;		On exit  : 0/0
 32783 ;;		Unchanged: 0/0
 32784 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32789 ;;Total ram usage:        0 bytes
 32790 ;; Hardware stack levels used: 1
 32791 ;; Hardware stack levels required when called: 8
 32792 ;; This function calls:
 32793 ;;		_processEnumeration
 32794 ;; This function is called by:
 32795 ;;		_poll
 32796 ;; This function uses a non-reentrant model
 32797 ;;
 32798                           
 32799                           	psect	text69
 32800   007C8A                     __ptext69:
 32801                           	callstack 0
 32802   007C8A                     _canPoll:
 32803                           	callstack 117
 32804   007C8A                     
 32805                           ;../../VLCBlib_PIC/can18_can_2.c: 444:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          446:     processEnumeration();
 32806   007C8A  EC75  F01F         	call	_processEnumeration	;wreg free
 32807   007C8E  0012               	return		;funcret
 32808   007C90                     __end_of_canPoll:
 32809                           	callstack 0
 32810                           
 32811 ;; *************** function _mnsPoll *****************
 32812 ;; Defined at:
 32813 ;;		line 649 in file "../../VLCBlib_PIC/mns.c"
 32814 ;; Parameters:    Size  Location     Type
 32815 ;;		None
 32816 ;; Auto vars:     Size  Location     Type
 32817 ;;		None
 32818 ;; Return value:  Size  Location     Type
 32819 ;;                  1    wreg      void 
 32820 ;; Registers used:
 32821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32822 ;; Tracked objects:
 32823 ;;		On entry : 0/0
 32824 ;;		On exit  : 0/0
 32825 ;;		Unchanged: 0/0
 32826 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32831 ;;Total ram usage:        4 bytes
 32832 ;; Hardware stack levels used: 1
 32833 ;; Hardware stack levels required when called: 6
 32834 ;; This function calls:
 32835 ;;		_sendMessage2
 32836 ;;		_sendMessage5
 32837 ;;		_setLEDsByMode
 32838 ;;		_tickGet
 32839 ;;		_writeNVM
 32840 ;; This function is called by:
 32841 ;;		_poll
 32842 ;; This function uses a non-reentrant model
 32843 ;;
 32844                           
 32845                           	psect	text70
 32846   001EBE                     __ptext70:
 32847                           	callstack 0
 32848   001EBE                     _mnsPoll:
 32849                           	callstack 119
 32850   001EBE                     
 32851                           ;../../VLCBlib_PIC/mns.c: 652:     if (mode_state == MODE_NORMAL) {
 32852   001EBE  0105               	movlb	5	; () banked
 32853   001EC0  05A1               	decf	_mode_state& (0+255),w,b
 32854   001EC2  A4D8               	btfss	status,2,c
 32855   001EC4  EF66  F00F         	goto	u7851
 32856   001EC8  EF68  F00F         	goto	u7850
 32857   001ECC                     u7851:
 32858   001ECC  EFB0  F00F         	goto	l10418
 32859   001ED0                     u7850:
 32860   001ED0                     
 32861                           ; BSR set to: 5
 32862                           ;../../VLCBlib_PIC/mns.c: 653:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 32863   001ED0  EC66  F036         	call	_tickGet	;wreg free
 32864   001ED4  0105               	movlb	5	; () banked
 32865   001ED6  5168               	movf	_heartbeatTimer& (0+255),w,b
 32866   001ED8  5C01               	subwf	?_tickGet^(0+1280),w,c
 32867   001EDA  6E2C               	movwf	??_mnsPoll^(0+1280),c
 32868   001EDC  5169               	movf	(_heartbeatTimer+1)& (0+255),w,b
 32869   001EDE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 32870   001EE0  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 32871   001EE2  516A               	movf	(_heartbeatTimer+2)& (0+255),w,b
 32872   001EE4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 32873   001EE6  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 32874   001EE8  516B               	movf	(_heartbeatTimer+3)& (0+255),w,b
 32875   001EEA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 32876   001EEC  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 32877   001EEE  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 32878   001EF0  E10D               	bnz	u7860
 32879   001EF2  0EB5               	movlw	181
 32880   001EF4  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 32881   001EF6  0EC4               	movlw	196
 32882   001EF8  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 32883   001EFA  0E04               	movlw	4
 32884   001EFC  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 32885   001EFE  A0D8               	btfss	status,0,c
 32886   001F00  EF84  F00F         	goto	u7861
 32887   001F04  EF86  F00F         	goto	u7860
 32888   001F08                     u7861:
 32889   001F08  EFB0  F00F         	goto	l10418
 32890   001F0C                     u7860:
 32891   001F0C                     
 32892                           ; BSR set to: 5
 32893                           ;../../VLCBlib_PIC/mns.c: 654:             if (mode_flags & 4) {
 32894   001F0C  A5A4               	btfss	_mode_flags& (0+255),2,b
 32895   001F0E  EF8B  F00F         	goto	u7871
 32896   001F12  EF8D  F00F         	goto	u7870
 32897   001F16                     u7871:
 32898   001F16  EF9C  F00F         	goto	l10412
 32899   001F1A                     u7870:
 32900   001F1A                     
 32901                           ; BSR set to: 5
 32902                           ;../../VLCBlib_PIC/mns.c: 655:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 32903   001F1A  C58E  F526         	movff	_nn+1,sendMessage5@data1
 32904   001F1E  C58D  F527         	movff	_nn,sendMessage5@data2
 32905   001F22  C59C  F528         	movff	_heartbeatSequence,sendMessage5@data3
 32906   001F26  C5AD  F529         	movff	_mnsDiagnostics+2,sendMessage5@data4
 32907   001F2A  0E00               	movlw	0
 32908   001F2C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 32909   001F2E  0EAB               	movlw	171
 32910   001F30  EC28  F03D         	call	_sendMessage5
 32911   001F34  0105               	movlb	5	; () banked
 32912   001F36  2B9C               	incf	_heartbeatSequence& (0+255),f,b
 32913   001F38                     l10412:
 32914                           
 32915                           ; BSR set to: 5
 32916                           ;../../VLCBlib_PIC/mns.c: 657:             heartbeatTimer.val = tickGet();
 32917   001F38  EC66  F036         	call	_tickGet	;wreg free
 32918   001F3C  C501  F568         	movff	?_tickGet,_heartbeatTimer
 32919   001F40  C502  F569         	movff	?_tickGet+1,_heartbeatTimer+1
 32920   001F44  C503  F56A         	movff	?_tickGet+2,_heartbeatTimer+2
 32921   001F48  C504  F56B         	movff	?_tickGet+3,_heartbeatTimer+3
 32922   001F4C                     
 32923                           ;../../VLCBlib_PIC/mns.c: 658:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 32924   001F4C  0105               	movlb	5	; () banked
 32925   001F4E  51AD               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 32926   001F50  B4D8               	btfsc	status,2,c
 32927   001F52  EFAD  F00F         	goto	u7881
 32928   001F56  EFAF  F00F         	goto	u7880
 32929   001F5A                     u7881:
 32930   001F5A  EFB0  F00F         	goto	l10418
 32931   001F5E                     u7880:
 32932   001F5E                     
 32933                           ; BSR set to: 5
 32934                           ;../../VLCBlib_PIC/mns.c: 659:                 mnsDiagnostics[0x01].asBytes.lo--;
 32935   001F5E  07AD               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 32936   001F60                     l10418:
 32937                           
 32938                           ; BSR set to: 5
 32939                           ;../../VLCBlib_PIC/mns.c: 666:     if (mode_flags != last_mode_flags) {
 32940   001F60  519F               	movf	_last_mode_flags& (0+255),w,b
 32941   001F62  19A4               	xorwf	_mode_flags& (0+255),w,b
 32942   001F64  B4D8               	btfsc	status,2,c
 32943   001F66  EFB7  F00F         	goto	u7891
 32944   001F6A  EFB9  F00F         	goto	u7890
 32945   001F6E                     u7891:
 32946   001F6E  EFC6  F00F         	goto	l10424
 32947   001F72                     u7890:
 32948   001F72                     
 32949                           ; BSR set to: 5
 32950                           ;../../VLCBlib_PIC/mns.c: 667:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 32951   001F72  0EF9               	movlw	249
 32952   001F74  6E0E               	movwf	writeNVM@index^(0+1280),c
 32953   001F76  0E03               	movlw	3
 32954   001F78  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 32955   001F7A  0E00               	movlw	0
 32956   001F7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 32957   001F7E  C5A4  F511         	movff	_mode_flags,writeNVM@value
 32958   001F82  0E00               	movlw	0
 32959   001F84  ECB5  F038         	call	_writeNVM
 32960   001F88                     
 32961                           ;../../VLCBlib_PIC/mns.c: 668:         last_mode_flags = mode_flags;
 32962   001F88  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 32963   001F8C                     l10424:
 32964                           
 32965                           ;../../VLCBlib_PIC/mns.c: 670:     if (mode_state != last_mode_state) {
 32966   001F8C  0105               	movlb	5	; () banked
 32967   001F8E  51A0               	movf	_last_mode_state& (0+255),w,b
 32968   001F90  19A1               	xorwf	_mode_state& (0+255),w,b
 32969   001F92  B4D8               	btfsc	status,2,c
 32970   001F94  EFCE  F00F         	goto	u7901
 32971   001F98  EFD0  F00F         	goto	u7900
 32972   001F9C                     u7901:
 32973   001F9C  EFED  F00F         	goto	l10434
 32974   001FA0                     u7900:
 32975   001FA0                     
 32976                           ; BSR set to: 5
 32977                           ;../../VLCBlib_PIC/mns.c: 672:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 32978   001FA0  29A1               	incf	_mode_state& (0+255),w,b
 32979   001FA2  B4D8               	btfsc	status,2,c
 32980   001FA4  EFD6  F00F         	goto	u7911
 32981   001FA8  EFD8  F00F         	goto	u7910
 32982   001FAC                     u7911:
 32983   001FAC  EFE0  F00F         	goto	l10430
 32984   001FB0                     u7910:
 32985   001FB0                     
 32986                           ; BSR set to: 5
 32987   001FB0  05A1               	decf	_mode_state& (0+255),w,b
 32988   001FB2  A4D8               	btfss	status,2,c
 32989   001FB4  EFDE  F00F         	goto	u7921
 32990   001FB8  EFE0  F00F         	goto	u7920
 32991   001FBC                     u7921:
 32992   001FBC  EFEB  F00F         	goto	l10432
 32993   001FC0                     u7920:
 32994   001FC0                     l10430:
 32995                           
 32996                           ; BSR set to: 5
 32997                           ;../../VLCBlib_PIC/mns.c: 673:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 32998   001FC0  0EFB               	movlw	251
 32999   001FC2  6E0E               	movwf	writeNVM@index^(0+1280),c
 33000   001FC4  0E03               	movlw	3
 33001   001FC6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33002   001FC8  0E00               	movlw	0
 33003   001FCA  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33004   001FCC  C5A1  F511         	movff	_mode_state,writeNVM@value
 33005   001FD0  0E00               	movlw	0
 33006   001FD2  ECB5  F038         	call	_writeNVM
 33007   001FD6                     l10432:
 33008                           
 33009                           ;../../VLCBlib_PIC/mns.c: 675:         last_mode_state = mode_state;
 33010   001FD6  C5A1  F5A0         	movff	_mode_state,_last_mode_state
 33011   001FDA                     l10434:
 33012                           
 33013                           ;../../VLCBlib_PIC/mns.c: 679:     if ((tickGet() - uptimeTimer.val) > 62500) {
 33014   001FDA  EC66  F036         	call	_tickGet	;wreg free
 33015   001FDE  0105               	movlb	5	; () banked
 33016   001FE0  5164               	movf	_uptimeTimer& (0+255),w,b
 33017   001FE2  5C01               	subwf	?_tickGet^(0+1280),w,c
 33018   001FE4  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33019   001FE6  5165               	movf	(_uptimeTimer+1)& (0+255),w,b
 33020   001FE8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33021   001FEA  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33022   001FEC  5166               	movf	(_uptimeTimer+2)& (0+255),w,b
 33023   001FEE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33024   001FF0  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33025   001FF2  5167               	movf	(_uptimeTimer+3)& (0+255),w,b
 33026   001FF4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33027   001FF6  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33028   001FF8  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33029   001FFA  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33030   001FFC  E10B               	bnz	u7930
 33031   001FFE  0E25               	movlw	37
 33032   002000  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33033   002002  0EF4               	movlw	244
 33034   002004  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33035   002006  A0D8               	btfss	status,0,c
 33036   002008  EF08  F010         	goto	u7931
 33037   00200C  EF0A  F010         	goto	u7930
 33038   002010                     u7931:
 33039   002010  EF9E  F011         	goto	l10522
 33040   002014                     u7930:
 33041   002014                     
 33042                           ; BSR set to: 5
 33043                           ;../../VLCBlib_PIC/mns.c: 680:         uptimeTimer.val = tickGet();
 33044   002014  EC66  F036         	call	_tickGet	;wreg free
 33045   002018  C501  F564         	movff	?_tickGet,_uptimeTimer
 33046   00201C  C502  F565         	movff	?_tickGet+1,_uptimeTimer+1
 33047   002020  C503  F566         	movff	?_tickGet+2,_uptimeTimer+2
 33048   002024  C504  F567         	movff	?_tickGet+3,_uptimeTimer+3
 33049   002028                     
 33050                           ;../../VLCBlib_PIC/mns.c: 681:         mnsDiagnostics[0x03].asUint++;
 33051   002028  0105               	movlb	5	; () banked
 33052   00202A  4BB1               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 33053   00202C  2BB2               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 33054   00202E                     
 33055                           ; BSR set to: 5
 33056                           ;../../VLCBlib_PIC/mns.c: 682:         if (mnsDiagnostics[0x03].asUint == 0) {
 33057   00202E  51B1               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 33058   002030  11B2               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 33059   002032  A4D8               	btfss	status,2,c
 33060   002034  EF1E  F010         	goto	u7941
 33061   002038  EF20  F010         	goto	u7940
 33062   00203C                     u7941:
 33063   00203C  EF9E  F011         	goto	l10522
 33064   002040                     u7940:
 33065   002040                     
 33066                           ; BSR set to: 5
 33067                           ;../../VLCBlib_PIC/mns.c: 683:             mnsDiagnostics[0x02].asUint++;
 33068   002040  4BAF               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 33069   002042  2BB0               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 33070   002044  EF9E  F011         	goto	l10522
 33071   002048                     l1191:
 33072                           
 33073                           ; BSR set to: 5
 33074                           ;../../VLCBlib_PIC/mns.c: 692:             if ((!(PORTAbits.RA2)) == 0) {
 33075   002048  A4CE               	btfss	206,2,c	;volatile
 33076   00204A  EF29  F010         	goto	u7951
 33077   00204E  EF2B  F010         	goto	u7950
 33078   002052                     u7951:
 33079   002052  EF37  F010         	goto	l10446
 33080   002056                     u7950:
 33081   002056                     l10444:
 33082                           
 33083                           ;../../VLCBlib_PIC/mns.c: 694:                 pbTimer.val = tickGet();
 33084   002056  EC66  F036         	call	_tickGet	;wreg free
 33085   00205A  C501  F56C         	movff	?_tickGet,_pbTimer
 33086   00205E  C502  F56D         	movff	?_tickGet+1,_pbTimer+1
 33087   002062  C503  F56E         	movff	?_tickGet+2,_pbTimer+2
 33088   002066  C504  F56F         	movff	?_tickGet+3,_pbTimer+3
 33089                           
 33090                           ;../../VLCBlib_PIC/mns.c: 695:             } else {
 33091   00206A  EFAD  F011         	goto	l1209
 33092   00206E                     l10446:
 33093                           
 33094                           ; BSR set to: 5
 33095                           ;../../VLCBlib_PIC/mns.c: 697:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33096   00206E  EC66  F036         	call	_tickGet	;wreg free
 33097   002072  0105               	movlb	5	; () banked
 33098   002074  516C               	movf	_pbTimer& (0+255),w,b
 33099   002076  5C01               	subwf	?_tickGet^(0+1280),w,c
 33100   002078  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33101   00207A  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33102   00207C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33103   00207E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33104   002080  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33105   002082  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33106   002084  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33107   002086  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33108   002088  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33109   00208A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33110   00208C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33111   00208E  E10D               	bnz	u7960
 33112   002090  0E91               	movlw	145
 33113   002092  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33114   002094  0ED0               	movlw	208
 33115   002096  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33116   002098  0E03               	movlw	3
 33117   00209A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33118   00209C  A0D8               	btfss	status,0,c
 33119   00209E  EF53  F010         	goto	u7961
 33120   0020A2  EF55  F010         	goto	u7960
 33121   0020A6                     u7961:
 33122   0020A6  EFAD  F011         	goto	l1209
 33123   0020AA                     u7960:
 33124   0020AA                     
 33125                           ; BSR set to: 5
 33126                           ;../../VLCBlib_PIC/mns.c: 699:                     mode_state = 0xFD;
 33127   0020AA  0EFD               	movlw	253
 33128   0020AC  6FA1               	movwf	_mode_state& (0+255),b
 33129   0020AE                     
 33130                           ; BSR set to: 5
 33131                           ;../../VLCBlib_PIC/mns.c: 700:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 33132   0020AE  699E               	setf	_setupModePreviousMode& (0+255),b
 33133   0020B0                     
 33134                           ; BSR set to: 5
 33135                           ;../../VLCBlib_PIC/mns.c: 701:                     setLEDsByMode();
 33136   0020B0  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 33137   0020B4  EFAD  F011         	goto	l1209
 33138   0020B8                     l1196:
 33139                           
 33140                           ; BSR set to: 5
 33141                           ;../../VLCBlib_PIC/mns.c: 706:             if ((!(PORTAbits.RA2)) == 0) {
 33142   0020B8  A4CE               	btfss	206,2,c	;volatile
 33143   0020BA  EF61  F010         	goto	u7971
 33144   0020BE  EF63  F010         	goto	u7970
 33145   0020C2                     u7971:
 33146   0020C2  EF2B  F010         	goto	l10444
 33147   0020C6                     u7970:
 33148   0020C6                     
 33149                           ; BSR set to: 5
 33150                           ;../../VLCBlib_PIC/mns.c: 710:                 mode_state = MODE_SETUP;
 33151   0020C6  6BA1               	clrf	_mode_state& (0+255),b
 33152                           
 33153                           ;../../VLCBlib_PIC/mns.c: 711:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 33154   0020C8  699E               	setf	_setupModePreviousMode& (0+255),b
 33155   0020CA                     
 33156                           ; BSR set to: 5
 33157                           ;../../VLCBlib_PIC/mns.c: 712:                 pbTimer.val = tickGet();
 33158   0020CA  EC66  F036         	call	_tickGet	;wreg free
 33159   0020CE  C501  F56C         	movff	?_tickGet,_pbTimer
 33160   0020D2  C502  F56D         	movff	?_tickGet+1,_pbTimer+1
 33161   0020D6  C503  F56E         	movff	?_tickGet+2,_pbTimer+2
 33162   0020DA  C504  F56F         	movff	?_tickGet+3,_pbTimer+3
 33163   0020DE                     
 33164                           ;../../VLCBlib_PIC/mns.c: 714:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 33165   0020DE  C58E  F526         	movff	_nn+1,sendMessage2@data1
 33166   0020E2  C58D  F527         	movff	_nn,sendMessage2@data2
 33167   0020E6  0E50               	movlw	80
 33168   0020E8  ECFE  F03C         	call	_sendMessage2
 33169   0020EC                     
 33170                           ;../../VLCBlib_PIC/mns.c: 715:                 setLEDsByMode();
 33171   0020EC  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 33172   0020F0  EF2B  F010         	goto	l10444
 33173   0020F4                     l1198:
 33174                           
 33175                           ; BSR set to: 5
 33176                           ;../../VLCBlib_PIC/mns.c: 720:             if ((!(PORTAbits.RA2)) == 0) {
 33177   0020F4  A4CE               	btfss	206,2,c	;volatile
 33178   0020F6  EF7F  F010         	goto	u7981
 33179   0020FA  EF81  F010         	goto	u7980
 33180   0020FE                     u7981:
 33181   0020FE  EF05  F011         	goto	l10488
 33182   002102                     u7980:
 33183   002102                     
 33184                           ; BSR set to: 5
 33185                           ;../../VLCBlib_PIC/mns.c: 723:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33186   002102  EC66  F036         	call	_tickGet	;wreg free
 33187   002106  0105               	movlb	5	; () banked
 33188   002108  516C               	movf	_pbTimer& (0+255),w,b
 33189   00210A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33190   00210C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33191   00210E  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33192   002110  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33193   002112  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33194   002114  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33195   002116  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33196   002118  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33197   00211A  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33198   00211C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33199   00211E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33200   002120  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33201   002122  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33202   002124  E10B               	bnz	u7990
 33203   002126  0E6B               	movlw	107
 33204   002128  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33205   00212A  0E18               	movlw	24
 33206   00212C  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33207   00212E  A0D8               	btfss	status,0,c
 33208   002130  EF9C  F010         	goto	u7991
 33209   002134  EF9E  F010         	goto	u7990
 33210   002138                     u7991:
 33211   002138  EFD6  F010         	goto	l10480
 33212   00213C                     u7990:
 33213   00213C                     
 33214                           ; BSR set to: 5
 33215   00213C  EC66  F036         	call	_tickGet	;wreg free
 33216   002140  0105               	movlb	5	; () banked
 33217   002142  516C               	movf	_pbTimer& (0+255),w,b
 33218   002144  5C01               	subwf	?_tickGet^(0+1280),w,c
 33219   002146  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33220   002148  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33221   00214A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33222   00214C  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33223   00214E  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33224   002150  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33225   002152  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33226   002154  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33227   002156  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33228   002158  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33229   00215A  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33230   00215C  E10B               	bnz	u8001
 33231   00215E  0E48               	movlw	72
 33232   002160  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33233   002162  0EE8               	movlw	232
 33234   002164  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33235   002166  0E01               	movlw	1
 33236   002168  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33237   00216A  B0D8               	btfsc	status,0,c
 33238   00216C  EFBA  F010         	goto	u8001
 33239   002170  EFBC  F010         	goto	u8000
 33240   002174                     u8001:
 33241   002174  EFD6  F010         	goto	l10480
 33242   002178                     u8000:
 33243   002178                     
 33244                           ; BSR set to: 5
 33245                           ;../../VLCBlib_PIC/mns.c: 725:                     mode_state = setupModePreviousMode;
 33246   002178  C59E  F5A1         	movff	_setupModePreviousMode,_mode_state
 33247   00217C                     
 33248                           ; BSR set to: 5
 33249                           ;../../VLCBlib_PIC/mns.c: 726:                     if (mode_state == MODE_NORMAL) {
 33250   00217C  05A1               	decf	_mode_state& (0+255),w,b
 33251   00217E  A4D8               	btfss	status,2,c
 33252   002180  EFC4  F010         	goto	u8011
 33253   002184  EFC6  F010         	goto	u8010
 33254   002188                     u8011:
 33255   002188  EFD4  F010         	goto	l10478
 33256   00218C                     u8010:
 33257   00218C                     
 33258                           ; BSR set to: 5
 33259                           ;../../VLCBlib_PIC/mns.c: 728:                         nn.word = previousNN.word;
 33260   00218C  C58B  F58D         	movff	_previousNN,_nn
 33261   002190  C58C  F58E         	movff	_previousNN+1,_nn+1
 33262   002194                     
 33263                           ; BSR set to: 5
 33264                           ;../../VLCBlib_PIC/mns.c: 729:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 33265   002194  C58E  F526         	movff	_nn+1,sendMessage2@data1
 33266   002198  C58D  F527         	movff	_nn,sendMessage2@data2
 33267   00219C  0E52               	movlw	82
 33268   00219E  ECFE  F03C         	call	_sendMessage2
 33269   0021A2                     
 33270                           ;../../VLCBlib_PIC/mns.c: 731:                         mnsDiagnostics[0x05].asUint++;
 33271   0021A2  0105               	movlb	5	; () banked
 33272   0021A4  4BB5               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 33273   0021A6  2BB6               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 33274   0021A8                     l10478:
 33275                           
 33276                           ; BSR set to: 5
 33277                           ;../../VLCBlib_PIC/mns.c: 734:                     setLEDsByMode();
 33278   0021A8  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 33279   0021AC                     l10480:
 33280                           
 33281                           ;../../VLCBlib_PIC/mns.c: 736:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33282   0021AC  EC66  F036         	call	_tickGet	;wreg free
 33283   0021B0  0105               	movlb	5	; () banked
 33284   0021B2  516C               	movf	_pbTimer& (0+255),w,b
 33285   0021B4  5C01               	subwf	?_tickGet^(0+1280),w,c
 33286   0021B6  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33287   0021B8  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33288   0021BA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33289   0021BC  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33290   0021BE  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33291   0021C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33292   0021C2  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33293   0021C4  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33294   0021C6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33295   0021C8  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33296   0021CA  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33297   0021CC  E10D               	bnz	u8020
 33298   0021CE  0E91               	movlw	145
 33299   0021D0  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33300   0021D2  0ED0               	movlw	208
 33301   0021D4  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33302   0021D6  0E03               	movlw	3
 33303   0021D8  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33304   0021DA  A0D8               	btfss	status,0,c
 33305   0021DC  EFF2  F010         	goto	u8021
 33306   0021E0  EFF4  F010         	goto	u8020
 33307   0021E4                     u8021:
 33308   0021E4  EFF7  F010         	goto	l1202
 33309   0021E8                     u8020:
 33310   0021E8                     
 33311                           ; BSR set to: 5
 33312                           ;../../VLCBlib_PIC/mns.c: 737:                     mode_state = MODE_UNINITIALISED;
 33313   0021E8  69A1               	setf	_mode_state& (0+255),b
 33314   0021EA                     l10484:
 33315                           
 33316                           ;../../VLCBlib_PIC/mns.c: 738:                     setLEDsByMode();
 33317   0021EA  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 33318   0021EE                     l1202:
 33319                           
 33320                           ;../../VLCBlib_PIC/mns.c: 740:                 pbTimer.val = tickGet();
 33321   0021EE  EC66  F036         	call	_tickGet	;wreg free
 33322   0021F2  C501  F56C         	movff	?_tickGet,_pbTimer
 33323   0021F6  C502  F56D         	movff	?_tickGet+1,_pbTimer+1
 33324   0021FA  C503  F56E         	movff	?_tickGet+2,_pbTimer+2
 33325   0021FE  C504  F56F         	movff	?_tickGet+3,_pbTimer+3
 33326   002202                     
 33327                           ;../../VLCBlib_PIC/mns.c: 741:                 pbWasPushed = FALSE;
 33328   002202  0105               	movlb	5	; () banked
 33329   002204  6B9D               	clrf	_pbWasPushed& (0+255),b
 33330                           
 33331                           ;../../VLCBlib_PIC/mns.c: 742:             } else {
 33332   002206  EFAD  F011         	goto	l1209
 33333   00220A                     l10488:
 33334                           
 33335                           ; BSR set to: 5
 33336                           ;../../VLCBlib_PIC/mns.c: 743:                 pbWasPushed = TRUE;
 33337   00220A  0E01               	movlw	1
 33338   00220C  6F9D               	movwf	_pbWasPushed& (0+255),b
 33339   00220E  EFAD  F011         	goto	l1209
 33340   002212                     l1204:
 33341                           
 33342                           ; BSR set to: 5
 33343                           ;../../VLCBlib_PIC/mns.c: 748:             if ((!(PORTAbits.RA2)) == 0) {
 33344   002212  A4CE               	btfss	206,2,c	;volatile
 33345   002214  EF0E  F011         	goto	u8031
 33346   002218  EF10  F011         	goto	u8030
 33347   00221C                     u8031:
 33348   00221C  EF05  F011         	goto	l10488
 33349   002220                     u8030:
 33350   002220                     
 33351                           ; BSR set to: 5
 33352                           ;../../VLCBlib_PIC/mns.c: 750:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33353   002220  519D               	movf	_pbWasPushed& (0+255),w,b
 33354   002222  B4D8               	btfsc	status,2,c
 33355   002224  EF16  F011         	goto	u8041
 33356   002228  EF18  F011         	goto	u8040
 33357   00222C                     u8041:
 33358   00222C  EF65  F011         	goto	l10504
 33359   002230                     u8040:
 33360   002230                     
 33361                           ; BSR set to: 5
 33362   002230  EC66  F036         	call	_tickGet	;wreg free
 33363   002234  0105               	movlb	5	; () banked
 33364   002236  516C               	movf	_pbTimer& (0+255),w,b
 33365   002238  5C01               	subwf	?_tickGet^(0+1280),w,c
 33366   00223A  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33367   00223C  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33368   00223E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33369   002240  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33370   002242  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33371   002244  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33372   002246  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33373   002248  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33374   00224A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33375   00224C  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33376   00224E  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33377   002250  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33378   002252  E10B               	bnz	u8050
 33379   002254  0E6B               	movlw	107
 33380   002256  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33381   002258  0E18               	movlw	24
 33382   00225A  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33383   00225C  A0D8               	btfss	status,0,c
 33384   00225E  EF33  F011         	goto	u8051
 33385   002262  EF35  F011         	goto	u8050
 33386   002266                     u8051:
 33387   002266  EF65  F011         	goto	l10504
 33388   00226A                     u8050:
 33389   00226A                     
 33390                           ; BSR set to: 5
 33391   00226A  EC66  F036         	call	_tickGet	;wreg free
 33392   00226E  0105               	movlb	5	; () banked
 33393   002270  516C               	movf	_pbTimer& (0+255),w,b
 33394   002272  5C01               	subwf	?_tickGet^(0+1280),w,c
 33395   002274  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33396   002276  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33397   002278  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33398   00227A  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33399   00227C  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33400   00227E  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33401   002280  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33402   002282  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33403   002284  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33404   002286  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33405   002288  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33406   00228A  E10B               	bnz	u8061
 33407   00228C  0E48               	movlw	72
 33408   00228E  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33409   002290  0EE8               	movlw	232
 33410   002292  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33411   002294  0E01               	movlw	1
 33412   002296  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33413   002298  B0D8               	btfsc	status,0,c
 33414   00229A  EF51  F011         	goto	u8061
 33415   00229E  EF53  F011         	goto	u8060
 33416   0022A2                     u8061:
 33417   0022A2  EF65  F011         	goto	l10504
 33418   0022A6                     u8060:
 33419   0022A6                     
 33420                           ; BSR set to: 5
 33421                           ;../../VLCBlib_PIC/mns.c: 752:                     previousNN.word = nn.word;
 33422   0022A6  C58D  F58B         	movff	_nn,_previousNN
 33423   0022AA  C58E  F58C         	movff	_nn+1,_previousNN+1
 33424                           
 33425                           ;../../VLCBlib_PIC/mns.c: 753:                     nn.bytes.lo = nn.bytes.hi = 0;
 33426   0022AE  6B8E               	clrf	(_nn+1)& (0+255),b
 33427   0022B0  6B8D               	clrf	_nn& (0+255),b
 33428                           
 33429                           ;../../VLCBlib_PIC/mns.c: 755:                     mode_state = MODE_SETUP;
 33430   0022B2  6BA1               	clrf	_mode_state& (0+255),b
 33431   0022B4                     
 33432                           ; BSR set to: 5
 33433                           ;../../VLCBlib_PIC/mns.c: 756:                     setupModePreviousMode = MODE_NORMAL;
 33434   0022B4  0E01               	movlw	1
 33435   0022B6  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33436   0022B8                     
 33437                           ; BSR set to: 5
 33438                           ;../../VLCBlib_PIC/mns.c: 758:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 33439   0022B8  C58C  F526         	movff	_previousNN+1,sendMessage2@data1
 33440   0022BC  C58B  F527         	movff	_previousNN,sendMessage2@data2
 33441   0022C0  0E50               	movlw	80
 33442   0022C2  ECFE  F03C         	call	_sendMessage2
 33443   0022C6                     
 33444                           ;../../VLCBlib_PIC/mns.c: 759:                     setLEDsByMode();
 33445   0022C6  ECCF  F03A         	call	_setLEDsByMode	;wreg free
 33446   0022CA                     l10504:
 33447                           
 33448                           ;../../VLCBlib_PIC/mns.c: 761:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 33449   0022CA  0105               	movlb	5	; () banked
 33450   0022CC  519D               	movf	_pbWasPushed& (0+255),w,b
 33451   0022CE  B4D8               	btfsc	status,2,c
 33452   0022D0  EF6C  F011         	goto	u8071
 33453   0022D4  EF6E  F011         	goto	u8070
 33454   0022D8                     u8071:
 33455   0022D8  EFF7  F010         	goto	l1202
 33456   0022DC                     u8070:
 33457   0022DC                     
 33458                           ; BSR set to: 5
 33459   0022DC  EC66  F036         	call	_tickGet	;wreg free
 33460   0022E0  0105               	movlb	5	; () banked
 33461   0022E2  516C               	movf	_pbTimer& (0+255),w,b
 33462   0022E4  5C01               	subwf	?_tickGet^(0+1280),w,c
 33463   0022E6  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33464   0022E8  516D               	movf	(_pbTimer+1)& (0+255),w,b
 33465   0022EA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33466   0022EC  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33467   0022EE  516E               	movf	(_pbTimer+2)& (0+255),w,b
 33468   0022F0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33469   0022F2  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33470   0022F4  516F               	movf	(_pbTimer+3)& (0+255),w,b
 33471   0022F6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33472   0022F8  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33473   0022FA  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33474   0022FC  E10D               	bnz	u8080
 33475   0022FE  0E90               	movlw	144
 33476   002300  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33477   002302  0ED0               	movlw	208
 33478   002304  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33479   002306  0E03               	movlw	3
 33480   002308  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33481   00230A  A0D8               	btfss	status,0,c
 33482   00230C  EF8A  F011         	goto	u8081
 33483   002310  EF8C  F011         	goto	u8080
 33484   002314                     u8081:
 33485   002314  EFF7  F010         	goto	l1202
 33486   002318                     u8080:
 33487   002318                     
 33488                           ; BSR set to: 5
 33489                           ;../../VLCBlib_PIC/mns.c: 763:                     previousNN.word = nn.word;
 33490   002318  C58D  F58B         	movff	_nn,_previousNN
 33491   00231C  C58E  F58C         	movff	_nn+1,_previousNN+1
 33492                           
 33493                           ;../../VLCBlib_PIC/mns.c: 764:                     nn.bytes.lo = nn.bytes.hi = 0;
 33494   002320  6B8E               	clrf	(_nn+1)& (0+255),b
 33495   002322  6B8D               	clrf	_nn& (0+255),b
 33496                           
 33497                           ;../../VLCBlib_PIC/mns.c: 766:                     mode_state = MODE_UNINITIALISED;
 33498   002324  69A1               	setf	_mode_state& (0+255),b
 33499   002326                     
 33500                           ; BSR set to: 5
 33501                           ;../../VLCBlib_PIC/mns.c: 767:                     setupModePreviousMode = MODE_NORMAL;
 33502   002326  0E01               	movlw	1
 33503   002328  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33504   00232A                     
 33505                           ; BSR set to: 5
 33506                           ;../../VLCBlib_PIC/mns.c: 769:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 33507   00232A  C58C  F526         	movff	_previousNN+1,sendMessage2@data1
 33508   00232E  C58B  F527         	movff	_previousNN,sendMessage2@data2
 33509   002332  0E51               	movlw	81
 33510   002334  ECFE  F03C         	call	_sendMessage2
 33511   002338  EFF5  F010         	goto	l10484
 33512   00233C                     l10522:
 33513                           
 33514                           ; BSR set to: 5
 33515   00233C  51A1               	movf	_mode_state& (0+255),w,b
 33516                           
 33517                           ; Switch size 1, requested type "simple"
 33518                           ; Number of cases is 3, Range of values is 0 to 255
 33519                           ; switch strategies available:
 33520                           ; Name         Instructions Cycles
 33521                           ; simple_byte           10     6 (average)
 33522                           ;	Chosen strategy is simple_byte
 33523   00233E  0A00               	xorlw	0	; case 0
 33524   002340  B4D8               	btfsc	status,2,c
 33525   002342  EF7A  F010         	goto	l1198
 33526   002346  0AFD               	xorlw	253	; case 253
 33527   002348  B4D8               	btfsc	status,2,c
 33528   00234A  EF5C  F010         	goto	l1196
 33529   00234E  0A02               	xorlw	2	; case 255
 33530   002350  B4D8               	btfsc	status,2,c
 33531   002352  EF24  F010         	goto	l1191
 33532   002356  EF09  F011         	goto	l1204
 33533   00235A                     l1209:
 33534   00235A  0012               	return		;funcret
 33535   00235C                     __end_of_mnsPoll:
 33536                           	callstack 0
 33537                           
 33538 ;; *************** function _setLEDsByMode *****************
 33539 ;; Defined at:
 33540 ;;		line 817 in file "../../VLCBlib_PIC/mns.c"
 33541 ;; Parameters:    Size  Location     Type
 33542 ;;		None
 33543 ;; Auto vars:     Size  Location     Type
 33544 ;;		None
 33545 ;; Return value:  Size  Location     Type
 33546 ;;                  1    wreg      void 
 33547 ;; Registers used:
 33548 ;;		wreg, status,2, status,0, cstack
 33549 ;; Tracked objects:
 33550 ;;		On entry : 0/0
 33551 ;;		On exit  : 0/0
 33552 ;;		Unchanged: 0/0
 33553 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33558 ;;Total ram usage:        0 bytes
 33559 ;; Hardware stack levels used: 1
 33560 ;; Hardware stack levels required when called: 2
 33561 ;; This function calls:
 33562 ;;		_showStatus
 33563 ;; This function is called by:
 33564 ;;		_mnsPowerUp
 33565 ;;		_mnsProcessMessage
 33566 ;;		_mnsPoll
 33567 ;; This function uses a non-reentrant model
 33568 ;;
 33569                           
 33570                           	psect	text71
 33571   00759E                     __ptext71:
 33572                           	callstack 0
 33573   00759E                     _setLEDsByMode:
 33574                           	callstack 122
 33575   00759E                     
 33576                           ;../../VLCBlib_PIC/mns.c: 818:        switch (mode_state) {
 33577   00759E  EFE0  F03A         	goto	l8878
 33578   0075A2                     l8870:
 33579                           
 33580                           ; BSR set to: 5
 33581                           ;../../VLCBlib_PIC/mns.c: 820:             showStatus(STATUS_UNINITIALISED);
 33582   0075A2  0E01               	movlw	1
 33583   0075A4  ECAB  F024         	call	_showStatus
 33584                           
 33585                           ;../../VLCBlib_PIC/mns.c: 821:             break;
 33586   0075A8  EFF0  F03A         	goto	l1222
 33587   0075AC                     l8872:
 33588                           
 33589                           ; BSR set to: 5
 33590                           ;../../VLCBlib_PIC/mns.c: 824:             showStatus(STATUS_SETUP);
 33591   0075AC  0E02               	movlw	2
 33592   0075AE  ECAB  F024         	call	_showStatus
 33593                           
 33594                           ;../../VLCBlib_PIC/mns.c: 825:             break;
 33595   0075B2  EFF0  F03A         	goto	l1222
 33596   0075B6                     l8874:
 33597                           
 33598                           ; BSR set to: 5
 33599                           ;../../VLCBlib_PIC/mns.c: 827:             showStatus(STATUS_NORMAL);
 33600   0075B6  0E03               	movlw	3
 33601   0075B8  ECAB  F024         	call	_showStatus
 33602                           
 33603                           ;../../VLCBlib_PIC/mns.c: 828:             break;
 33604   0075BC  EFF0  F03A         	goto	l1222
 33605   0075C0                     l8878:
 33606   0075C0  0105               	movlb	5	; () banked
 33607   0075C2  51A1               	movf	_mode_state& (0+255),w,b
 33608                           
 33609                           ; Switch size 1, requested type "simple"
 33610                           ; Number of cases is 3, Range of values is 0 to 255
 33611                           ; switch strategies available:
 33612                           ; Name         Instructions Cycles
 33613                           ; simple_byte           10     6 (average)
 33614                           ;	Chosen strategy is simple_byte
 33615   0075C4  0A00               	xorlw	0	; case 0
 33616   0075C6  B4D8               	btfsc	status,2,c
 33617   0075C8  EFD6  F03A         	goto	l8872
 33618   0075CC  0AFD               	xorlw	253	; case 253
 33619   0075CE  B4D8               	btfsc	status,2,c
 33620   0075D0  EFD6  F03A         	goto	l8872
 33621   0075D4  0A02               	xorlw	2	; case 255
 33622   0075D6  B4D8               	btfsc	status,2,c
 33623   0075D8  EFD1  F03A         	goto	l8870
 33624   0075DC  EFDB  F03A         	goto	l8874
 33625   0075E0                     l1222:
 33626   0075E0  0012               	return		;funcret
 33627   0075E2                     __end_of_setLEDsByMode:
 33628                           	callstack 0
 33629                           
 33630 ;; *************** function _sendMessage2 *****************
 33631 ;; Defined at:
 33632 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 33633 ;; Parameters:    Size  Location     Type
 33634 ;;  opc             1    wreg     enum E22928
 33635 ;;  data1           1   37[COMRAM] unsigned char 
 33636 ;;  data2           1   38[COMRAM] unsigned char 
 33637 ;; Auto vars:     Size  Location     Type
 33638 ;;  opc             1   39[COMRAM] enum E22928
 33639 ;; Return value:  Size  Location     Type
 33640 ;;                  1    wreg      void 
 33641 ;; Registers used:
 33642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33643 ;; Tracked objects:
 33644 ;;		On entry : 0/0
 33645 ;;		On exit  : 0/0
 33646 ;;		Unchanged: 0/0
 33647 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33652 ;;Total ram usage:        3 bytes
 33653 ;; Hardware stack levels used: 1
 33654 ;; Hardware stack levels required when called: 5
 33655 ;; This function calls:
 33656 ;;		_sendMessage
 33657 ;; This function is called by:
 33658 ;;		_doNnclr
 33659 ;;		_doEvlrn
 33660 ;;		_doEvuln
 33661 ;;		_mnsProcessMessage
 33662 ;;		_mnsPoll
 33663 ;;		_nvProcessMessage
 33664 ;; This function uses a non-reentrant model
 33665 ;;
 33666                           
 33667                           	psect	text72
 33668   0079FC                     __ptext72:
 33669                           	callstack 0
 33670   0079FC                     _sendMessage2:
 33671                           	callstack 118
 33672                           
 33673                           ;incstack = 0
 33674                           ;sendMessage2@opc stored from wreg
 33675   0079FC  6E28               	movwf	sendMessage2@opc^(0+1280),c
 33676   0079FE                     
 33677                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 33678   0079FE  0E03               	movlw	3
 33679   007A00  6E1B               	movwf	sendMessage@len^(0+1280),c
 33680   007A02  C526  F51C         	movff	sendMessage2@data1,sendMessage@data1
 33681   007A06  C527  F51D         	movff	sendMessage2@data2,sendMessage@data2
 33682   007A0A  0E00               	movlw	0
 33683   007A0C  6E1E               	movwf	sendMessage@data3^(0+1280),c
 33684   007A0E  0E00               	movlw	0
 33685   007A10  6E1F               	movwf	sendMessage@data4^(0+1280),c
 33686   007A12  0E00               	movlw	0
 33687   007A14  6E20               	movwf	sendMessage@data5^(0+1280),c
 33688   007A16  0E00               	movlw	0
 33689   007A18  6E21               	movwf	sendMessage@data6^(0+1280),c
 33690   007A1A  0E00               	movlw	0
 33691   007A1C  6E22               	movwf	sendMessage@data7^(0+1280),c
 33692   007A1E  5028               	movf	sendMessage2@opc^(0+1280),w,c
 33693   007A20  ECCD  F032         	call	_sendMessage
 33694   007A24  0012               	return		;funcret
 33695   007A26                     __end_of_sendMessage2:
 33696                           	callstack 0
 33697                           
 33698 ;; *************** function _sendMessage7 *****************
 33699 ;; Defined at:
 33700 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 33701 ;; Parameters:    Size  Location     Type
 33702 ;;  opc             1    wreg     enum E22928
 33703 ;;  data1           1   37[COMRAM] unsigned char 
 33704 ;;  data2           1   38[COMRAM] unsigned char 
 33705 ;;  data3           1   39[COMRAM] unsigned char 
 33706 ;;  data4           1   40[COMRAM] unsigned char 
 33707 ;;  data5           1   41[COMRAM] unsigned char 
 33708 ;;  data6           1   42[COMRAM] unsigned char 
 33709 ;;  data7           1   43[COMRAM] unsigned char 
 33710 ;; Auto vars:     Size  Location     Type
 33711 ;;  opc             1   44[COMRAM] enum E22928
 33712 ;; Return value:  Size  Location     Type
 33713 ;;                  1    wreg      void 
 33714 ;; Registers used:
 33715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33716 ;; Tracked objects:
 33717 ;;		On entry : 0/0
 33718 ;;		On exit  : 0/0
 33719 ;;		Unchanged: 0/0
 33720 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33721 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33725 ;;Total ram usage:        8 bytes
 33726 ;; Hardware stack levels used: 1
 33727 ;; Hardware stack levels required when called: 5
 33728 ;; This function calls:
 33729 ;;		_sendMessage
 33730 ;; This function is called by:
 33731 ;;		_consumerProcessMessage
 33732 ;;		_nerdCallback
 33733 ;;		_mnsProcessMessage
 33734 ;; This function uses a non-reentrant model
 33735 ;;
 33736                           
 33737                           	psect	text73
 33738   007A26                     __ptext73:
 33739                           	callstack 0
 33740   007A26                     _sendMessage7:
 33741                           	callstack 118
 33742                           
 33743                           ;incstack = 0
 33744                           ;sendMessage7@opc stored from wreg
 33745   007A26  6E2D               	movwf	sendMessage7@opc^(0+1280),c
 33746   007A28                     
 33747                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 33748   007A28  0E08               	movlw	8
 33749   007A2A  6E1B               	movwf	sendMessage@len^(0+1280),c
 33750   007A2C  C526  F51C         	movff	sendMessage7@data1,sendMessage@data1
 33751   007A30  C527  F51D         	movff	sendMessage7@data2,sendMessage@data2
 33752   007A34  C528  F51E         	movff	sendMessage7@data3,sendMessage@data3
 33753   007A38  C529  F51F         	movff	sendMessage7@data4,sendMessage@data4
 33754   007A3C  C52A  F520         	movff	sendMessage7@data5,sendMessage@data5
 33755   007A40  C52B  F521         	movff	sendMessage7@data6,sendMessage@data6
 33756   007A44  C52C  F522         	movff	sendMessage7@data7,sendMessage@data7
 33757   007A48  502D               	movf	sendMessage7@opc^(0+1280),w,c
 33758   007A4A  ECCD  F032         	call	_sendMessage
 33759   007A4E  0012               	return		;funcret
 33760   007A50                     __end_of_sendMessage7:
 33761                           	callstack 0
 33762                           
 33763 ;; *************** function _isConsumedEvent *****************
 33764 ;; Defined at:
 33765 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 33766 ;; Parameters:    Size  Location     Type
 33767 ;;  eventIndex      1    wreg     unsigned char 
 33768 ;; Auto vars:     Size  Location     Type
 33769 ;;  eventIndex      1    0[COMRAM] unsigned char 
 33770 ;; Return value:  Size  Location     Type
 33771 ;;                  1    wreg      unsigned char 
 33772 ;; Registers used:
 33773 ;;		wreg, status,2, cstack
 33774 ;; Tracked objects:
 33775 ;;		On entry : 0/0
 33776 ;;		On exit  : 0/0
 33777 ;;		Unchanged: 0/0
 33778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33783 ;;Total ram usage:        1 bytes
 33784 ;; Hardware stack levels used: 1
 33785 ;; Hardware stack levels required when called: 2
 33786 ;; This function calls:
 33787 ;;		_APP_isConsumedEvent
 33788 ;; This function is called by:
 33789 ;;		_consumerProcessMessage
 33790 ;; This function uses a non-reentrant model
 33791 ;;
 33792                           
 33793                           	psect	text74
 33794   007C5E                     __ptext74:
 33795                           	callstack 0
 33796   007C5E                     _isConsumedEvent:
 33797                           	callstack 122
 33798                           
 33799                           ;incstack = 0
 33800                           ;isConsumedEvent@eventIndex stored from wreg
 33801   007C5E  6E01               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 33802   007C60                     
 33803                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 33804   007C60  5001               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 33805   007C62  EC55  F03E         	call	_APP_isConsumedEvent
 33806   007C66  0012               	return		;funcret
 33807   007C68                     __end_of_isConsumedEvent:
 33808                           	callstack 0
 33809                           
 33810 ;; *************** function _APP_isConsumedEvent *****************
 33811 ;; Defined at:
 33812 ;;		line 64 in file "../canargb_events.c"
 33813 ;; Parameters:    Size  Location     Type
 33814 ;;  tableIndex      1    wreg     unsigned char 
 33815 ;; Auto vars:     Size  Location     Type
 33816 ;;  tableIndex      1    0[COMRAM] unsigned char 
 33817 ;; Return value:  Size  Location     Type
 33818 ;;                  1    wreg      unsigned char 
 33819 ;; Registers used:
 33820 ;;		wreg
 33821 ;; Tracked objects:
 33822 ;;		On entry : 0/0
 33823 ;;		On exit  : 0/0
 33824 ;;		Unchanged: 0/0
 33825 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33830 ;;Total ram usage:        0 bytes
 33831 ;; Hardware stack levels used: 1
 33832 ;; Hardware stack levels required when called: 1
 33833 ;; This function calls:
 33834 ;;		Nothing
 33835 ;; This function is called by:
 33836 ;;		_isConsumedEvent
 33837 ;; This function uses a non-reentrant model
 33838 ;;
 33839                           
 33840                           	psect	text75
 33841   007CAA                     __ptext75:
 33842                           	callstack 0
 33843   007CAA                     _APP_isConsumedEvent:
 33844                           	callstack 122
 33845   007CAA                     
 33846                           ;../canargb_events.c: 65:     return TRUE;
 33847   007CAA  0E01               	movlw	1
 33848   007CAC  0012               	return		;funcret
 33849   007CAE                     __end_of_APP_isConsumedEvent:
 33850                           	callstack 0
 33851                           
 33852 ;; *************** function _findEvent *****************
 33853 ;; Defined at:
 33854 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 33855 ;; Parameters:    Size  Location     Type
 33856 ;;  nodeNumber      2   33[COMRAM] unsigned short 
 33857 ;;  eventNumber     2   35[COMRAM] unsigned short 
 33858 ;; Auto vars:     Size  Location     Type
 33859 ;;  en              2   41[COMRAM] unsigned short 
 33860 ;;  nn              2   39[COMRAM] unsigned short 
 33861 ;;  tableIndex      1   45[COMRAM] unsigned char 
 33862 ;;  chainIdx        1   44[COMRAM] unsigned char 
 33863 ;;  hash            1   43[COMRAM] unsigned char 
 33864 ;; Return value:  Size  Location     Type
 33865 ;;                  1    wreg      unsigned char 
 33866 ;; Registers used:
 33867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33868 ;; Tracked objects:
 33869 ;;		On entry : 0/0
 33870 ;;		On exit  : 0/0
 33871 ;;		Unchanged: 0/0
 33872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33874 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33876 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33877 ;;Total ram usage:       13 bytes
 33878 ;; Hardware stack levels used: 1
 33879 ;; Hardware stack levels required when called: 4
 33880 ;; This function calls:
 33881 ;;		_getEN
 33882 ;;		_getHash
 33883 ;;		_getNN
 33884 ;; This function is called by:
 33885 ;;		_consumerProcessMessage
 33886 ;;		_doReqev
 33887 ;;		_removeEvent
 33888 ;;		_addEvent
 33889 ;; This function uses a non-reentrant model
 33890 ;;
 33891                           
 33892                           	psect	text76
 33893   005CBC                     __ptext76:
 33894                           	callstack 0
 33895   005CBC                     _findEvent:
 33896                           	callstack 119
 33897   005CBC                     
 33898                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 33899   005CBC  C522  F51C         	movff	findEvent@nodeNumber,getHash@nn
 33900   005CC0  C523  F51D         	movff	findEvent@nodeNumber+1,getHash@nn+1
 33901   005CC4  C524  F51E         	movff	findEvent@eventNumber,getHash@en
 33902   005CC8  C525  F51F         	movff	findEvent@eventNumber+1,getHash@en+1
 33903   005CCC  ECBB  F03D         	call	_getHash	;wreg free
 33904   005CD0  6E2C               	movwf	findEvent@hash^(0+1280),c
 33905   005CD2                     
 33906                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 33907   005CD2  6A2D               	clrf	findEvent@chainIdx^(0+1280),c
 33908   005CD4                     l7620:
 33909                           
 33910                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 33911   005CD4  502C               	movf	findEvent@hash^(0+1280),w,c
 33912   005CD6  0D14               	mullw	20
 33913   005CD8  0EFC               	movlw	low _eventChains
 33914   005CDA  24F3               	addwf	243,w,c
 33915   005CDC  6E26               	movwf	??_findEvent^(0+1280),c
 33916   005CDE  0E08               	movlw	high _eventChains
 33917   005CE0  20F4               	addwfc	prodh,w,c
 33918   005CE2  6E27               	movwf	(??_findEvent+1)^(0+1280),c
 33919   005CE4  502D               	movf	findEvent@chainIdx^(0+1280),w,c
 33920   005CE6  2426               	addwf	??_findEvent^(0+1280),w,c
 33921   005CE8  6ED9               	movwf	fsr2l,c
 33922   005CEA  0E00               	movlw	0
 33923   005CEC  2027               	addwfc	(??_findEvent+1)^(0+1280),w,c
 33924   005CEE  6EDA               	movwf	fsr2h,c
 33925   005CF0  50DF               	movf	indf2,w,c
 33926   005CF2  6E2E               	movwf	findEvent@tableIndex^(0+1280),c
 33927   005CF4                     
 33928                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 33929   005CF4  282E               	incf	findEvent@tableIndex^(0+1280),w,c
 33930   005CF6  A4D8               	btfss	status,2,c
 33931   005CF8  EF80  F02E         	goto	u5041
 33932   005CFC  EF82  F02E         	goto	u5040
 33933   005D00                     u5041:
 33934   005D00  EF85  F02E         	goto	l7628
 33935   005D04                     u5040:
 33936   005D04                     l7624:
 33937   005D04  0EFF               	movlw	255
 33938   005D06  EFB9  F02E         	goto	l905
 33939   005D0A                     l7628:
 33940                           
 33941                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 33942   005D0A  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 33943   005D0C  ECDE  F025         	call	_getNN
 33944   005D10  C50D  F528         	movff	?_getNN,findEvent@nn
 33945   005D14  C50E  F529         	movff	?_getNN+1,findEvent@nn+1
 33946                           
 33947                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 33948   005D18  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 33949   005D1A  EC0C  F030         	call	_getEN
 33950   005D1E  C50D  F52A         	movff	?_getEN,findEvent@en
 33951   005D22  C50E  F52B         	movff	?_getEN+1,findEvent@en+1
 33952   005D26                     
 33953                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 33954   005D26  5022               	movf	findEvent@nodeNumber^(0+1280),w,c
 33955   005D28  1828               	xorwf	findEvent@nn^(0+1280),w,c
 33956   005D2A  E107               	bnz	u5051
 33957   005D2C  5023               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 33958   005D2E  1829               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 33959   005D30  A4D8               	btfss	status,2,c
 33960   005D32  EF9D  F02E         	goto	u5051
 33961   005D36  EF9F  F02E         	goto	u5050
 33962   005D3A                     u5051:
 33963   005D3A  EFAE  F02E         	goto	l7638
 33964   005D3E                     u5050:
 33965   005D3E  5024               	movf	findEvent@eventNumber^(0+1280),w,c
 33966   005D40  182A               	xorwf	findEvent@en^(0+1280),w,c
 33967   005D42  E107               	bnz	u5061
 33968   005D44  5025               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 33969   005D46  182B               	xorwf	(findEvent@en+1)^(0+1280),w,c
 33970   005D48  A4D8               	btfss	status,2,c
 33971   005D4A  EFA9  F02E         	goto	u5061
 33972   005D4E  EFAB  F02E         	goto	u5060
 33973   005D52                     u5061:
 33974   005D52  EFAE  F02E         	goto	l7638
 33975   005D56                     u5060:
 33976   005D56                     
 33977                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 33978   005D56  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 33979   005D58  EFB9  F02E         	goto	l905
 33980   005D5C                     l7638:
 33981                           
 33982                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 33983   005D5C  2A2D               	incf	findEvent@chainIdx^(0+1280),f,c
 33984   005D5E  0E13               	movlw	19
 33985   005D60  642D               	cpfsgt	findEvent@chainIdx^(0+1280),c
 33986   005D62  EFB5  F02E         	goto	u5071
 33987   005D66  EFB7  F02E         	goto	u5070
 33988   005D6A                     u5071:
 33989   005D6A  EF6A  F02E         	goto	l7620
 33990   005D6E                     u5070:
 33991   005D6E  EF82  F02E         	goto	l7624
 33992   005D72                     l905:
 33993   005D72  0012               	return		;funcret
 33994   005D74                     __end_of_findEvent:
 33995                           	callstack 0
 33996                           
 33997 ;; *************** function _consumerEventCheckLen *****************
 33998 ;; Defined at:
 33999 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 34000 ;; Parameters:    Size  Location     Type
 34001 ;;  m               2   48[COMRAM] PTR struct Message
 34002 ;;		 -> poll@m(9), 
 34003 ;;  needed          1   50[COMRAM] unsigned char 
 34004 ;; Auto vars:     Size  Location     Type
 34005 ;;		None
 34006 ;; Return value:  Size  Location     Type
 34007 ;;                  1    wreg      enum E23340
 34008 ;; Registers used:
 34009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34010 ;; Tracked objects:
 34011 ;;		On entry : 0/0
 34012 ;;		On exit  : 0/0
 34013 ;;		Unchanged: 0/0
 34014 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34015 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34018 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34019 ;;Total ram usage:        3 bytes
 34020 ;; Hardware stack levels used: 1
 34021 ;; Hardware stack levels required when called: 7
 34022 ;; This function calls:
 34023 ;;		_checkLen
 34024 ;; This function is called by:
 34025 ;;		_consumerProcessMessage
 34026 ;; This function uses a non-reentrant model
 34027 ;;
 34028                           
 34029                           	psect	text77
 34030   007C16                     __ptext77:
 34031                           	callstack 0
 34032   007C16                     _consumerEventCheckLen:
 34033                           	callstack 117
 34034   007C16                     
 34035                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 34036   007C16  C531  F52C         	movff	consumerEventCheckLen@m,checkLen@m
 34037   007C1A  C532  F52D         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 34038   007C1E  C533  F52E         	movff	consumerEventCheckLen@needed,checkLen@needed
 34039   007C22  0E06               	movlw	6
 34040   007C24  6E2F               	movwf	checkLen@service^(0+1280),c
 34041   007C26  ECB1  F030         	call	_checkLen	;wreg free
 34042   007C2A  0012               	return		;funcret
 34043   007C2C                     __end_of_consumerEventCheckLen:
 34044                           	callstack 0
 34045                           
 34046 ;; *************** function _checkLen *****************
 34047 ;; Defined at:
 34048 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 34049 ;; Parameters:    Size  Location     Type
 34050 ;;  m               2   43[COMRAM] PTR struct Message
 34051 ;;		 -> poll@m(9), 
 34052 ;;  needed          1   45[COMRAM] unsigned char 
 34053 ;;  service         1   46[COMRAM] unsigned char 
 34054 ;; Auto vars:     Size  Location     Type
 34055 ;;		None
 34056 ;; Return value:  Size  Location     Type
 34057 ;;                  1    wreg      enum E23340
 34058 ;; Registers used:
 34059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34060 ;; Tracked objects:
 34061 ;;		On entry : 0/0
 34062 ;;		On exit  : 0/0
 34063 ;;		Unchanged: 0/0
 34064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34068 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34069 ;;Total ram usage:        5 bytes
 34070 ;; Hardware stack levels used: 1
 34071 ;; Hardware stack levels required when called: 6
 34072 ;; This function calls:
 34073 ;;		_sendMessage5
 34074 ;; This function is called by:
 34075 ;;		_consumerEventCheckLen
 34076 ;;		_teachCheckLen
 34077 ;; This function uses a non-reentrant model
 34078 ;;
 34079                           
 34080                           	psect	text78
 34081   006162                     __ptext78:
 34082                           	callstack 0
 34083   006162                     _checkLen:
 34084                           	callstack 117
 34085   006162                     
 34086                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 34087   006162  C52C  F4D9         	movff	checkLen@m,fsr2l
 34088   006166  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34089   00616A  502E               	movf	checkLen@needed^(0+1280),w,c
 34090   00616C  5CDE               	subwf	postinc2,w,c
 34091   00616E  B0D8               	btfsc	status,0,c
 34092   006170  EFBC  F030         	goto	u5471
 34093   006174  EFBE  F030         	goto	u5470
 34094   006178                     u5471:
 34095   006178  EFFF  F030         	goto	l8000
 34096   00617C                     u5470:
 34097   00617C                     
 34098                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 34099   00617C  C52C  F4D9         	movff	checkLen@m,fsr2l
 34100   006180  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34101   006184  0E02               	movlw	2
 34102   006186  64DF               	cpfsgt	indf2,c
 34103   006188  EFC8  F030         	goto	u5481
 34104   00618C  EFCA  F030         	goto	u5480
 34105   006190                     u5481:
 34106   006190  EFFC  F030         	goto	l7996
 34107   006194                     u5480:
 34108   006194                     
 34109                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 34110   006194  EE20 F002          	lfsr	2,2
 34111   006198  502C               	movf	checkLen@m^(0+1280),w,c
 34112   00619A  26D9               	addwf	fsr2l,f,c
 34113   00619C  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34114   00619E  22DA               	addwfc	fsr2h,f,c
 34115   0061A0  50DE               	movf	postinc2,w,c
 34116   0061A2  0105               	movlb	5	; () banked
 34117   0061A4  198E               	xorwf	(_nn+1)& (0+255),w,b
 34118   0061A6  A4D8               	btfss	status,2,c
 34119   0061A8  EFD8  F030         	goto	u5491
 34120   0061AC  EFDA  F030         	goto	u5490
 34121   0061B0                     u5491:
 34122   0061B0  EFFC  F030         	goto	l7996
 34123   0061B4                     u5490:
 34124   0061B4                     
 34125                           ; BSR set to: 5
 34126   0061B4  EE20 F003          	lfsr	2,3
 34127   0061B8  502C               	movf	checkLen@m^(0+1280),w,c
 34128   0061BA  26D9               	addwf	fsr2l,f,c
 34129   0061BC  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34130   0061BE  22DA               	addwfc	fsr2h,f,c
 34131   0061C0  518D               	movf	_nn& (0+255),w,b
 34132   0061C2  18DE               	xorwf	postinc2,w,c
 34133   0061C4  A4D8               	btfss	status,2,c
 34134   0061C6  EFE7  F030         	goto	u5501
 34135   0061CA  EFE9  F030         	goto	u5500
 34136   0061CE                     u5501:
 34137   0061CE  EFFC  F030         	goto	l7996
 34138   0061D2                     u5500:
 34139   0061D2                     
 34140                           ; BSR set to: 5
 34141                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 34142   0061D2  C58E  F526         	movff	_nn+1,sendMessage5@data1
 34143   0061D6  C58D  F527         	movff	_nn,sendMessage5@data2
 34144   0061DA  EE20 F001          	lfsr	2,1
 34145   0061DE  502C               	movf	checkLen@m^(0+1280),w,c
 34146   0061E0  26D9               	addwf	fsr2l,f,c
 34147   0061E2  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34148   0061E4  22DA               	addwfc	fsr2h,f,c
 34149   0061E6  50DF               	movf	indf2,w,c
 34150   0061E8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 34151   0061EA  C52F  F529         	movff	checkLen@service,sendMessage5@data4
 34152   0061EE  0E01               	movlw	1
 34153   0061F0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 34154   0061F2  0EAF               	movlw	175
 34155   0061F4  EC28  F03D         	call	_sendMessage5
 34156   0061F8                     l7996:
 34157                           
 34158                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 34159   0061F8  0E01               	movlw	1
 34160   0061FA  EF00  F031         	goto	l1834
 34161   0061FE                     l8000:
 34162                           
 34163                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 34164   0061FE  0E00               	movlw	0
 34165   006200                     l1834:
 34166   006200  0012               	return		;funcret
 34167   006202                     __end_of_checkLen:
 34168                           	callstack 0
 34169                           
 34170 ;; *************** function _APP_processConsumedEvent *****************
 34171 ;; Defined at:
 34172 ;;		line 105 in file "../canargb_events.c"
 34173 ;; Parameters:    Size  Location     Type
 34174 ;;  tableIndex      1    wreg     unsigned char 
 34175 ;;  m               2   27[COMRAM] PTR struct Message
 34176 ;;		 -> poll@m(9), 
 34177 ;; Auto vars:     Size  Location     Type
 34178 ;;  tableIndex      1   29[COMRAM] unsigned char 
 34179 ;;  colourPixelI    1   34[COMRAM] struct PaletteIndex
 34180 ;;  end_ledno       1   33[COMRAM] unsigned char 
 34181 ;;  start_ledno     1   32[COMRAM] unsigned char 
 34182 ;;  action          1   31[COMRAM] unsigned char 
 34183 ;;  ev              1   35[COMRAM] unsigned char 
 34184 ;;  onOff           1   30[COMRAM] unsigned char 
 34185 ;; Return value:  Size  Location     Type
 34186 ;;                  1    wreg      enum E23340
 34187 ;; Registers used:
 34188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34189 ;; Tracked objects:
 34190 ;;		On entry : 0/0
 34191 ;;		On exit  : 0/0
 34192 ;;		Unchanged: 0/0
 34193 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34195 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34197 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34198 ;;Total ram usage:        9 bytes
 34199 ;; Hardware stack levels used: 1
 34200 ;; Hardware stack levels required when called: 4
 34201 ;; This function calls:
 34202 ;;		_getEVs
 34203 ;;		_updateLedRange
 34204 ;;		_updateRGB
 34205 ;; This function is called by:
 34206 ;;		_consumerProcessMessage
 34207 ;; This function uses a non-reentrant model
 34208 ;;
 34209                           
 34210                           	psect	text79
 34211   0052F4                     __ptext79:
 34212                           	callstack 0
 34213   0052F4                     _APP_processConsumedEvent:
 34214                           	callstack 120
 34215                           
 34216                           ;incstack = 0
 34217                           ;APP_processConsumedEvent@tableIndex stored from wreg
 34218   0052F4  6E1E               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 34219   0052F6                     
 34220                           ;../canargb_events.c: 106:     uint8_t ev;;../canargb_events.c: 107:     uint8_t onOff;;
      +                          ../canargb_events.c: 109:     onOff = !(m->opc & 1);
 34221   0052F6  EE20 F001          	lfsr	2,1
 34222   0052FA  501C               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 34223   0052FC  26D9               	addwf	fsr2l,f,c
 34224   0052FE  501D               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 34225   005300  22DA               	addwfc	fsr2h,f,c
 34226   005302  A0DF               	btfss	indf2,0,c
 34227   005304  EF86  F029         	goto	u5961
 34228   005308  EF89  F029         	goto	u5960
 34229   00530C                     u5961:
 34230   00530C  0E01               	movlw	1
 34231   00530E  EF8A  F029         	goto	u5970
 34232   005312                     u5960:
 34233   005312  0E00               	movlw	0
 34234   005314                     u5970:
 34235   005314  6E1F               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 34236   005316                     
 34237                           ;../canargb_events.c: 110:     if (getEVs(tableIndex)) {
 34238   005316  501E               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 34239   005318  EC9F  F031         	call	_getEVs
 34240   00531C  0900               	iorlw	0
 34241   00531E  B4D8               	btfsc	status,2,c
 34242   005320  EF94  F029         	goto	u5981
 34243   005324  EF96  F029         	goto	u5980
 34244   005328                     u5981:
 34245   005328  EF99  F029         	goto	l1921
 34246   00532C                     u5980:
 34247   00532C                     l8588:
 34248                           
 34249                           ;../canargb_events.c: 112:         return PROCESSED;
 34250   00532C  0E01               	movlw	1
 34251   00532E  EFF4  F029         	goto	l1922
 34252   005332                     l1921:
 34253                           
 34254                           ;../canargb_events.c: 115:     for(ev=0; ev<248; ev+=4) {
 34255   005332  6A24               	clrf	APP_processConsumedEvent@ev^(0+1280),c
 34256   005334                     l8596:
 34257                           
 34258                           ;../canargb_events.c: 116:         uint8_t action;;../canargb_events.c: 117:         uin
      +                          t8_t start_ledno;;../canargb_events.c: 118:         uint8_t end_ledno;;../canargb_events
      +                          .c: 119:         PaletteIndex colourPixelIndexPair;;../canargb_events.c: 121:         ac
      +                          tion = evs[ev];
 34259   005334  0E00               	movlw	low _evs
 34260   005336  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34261   005338  6ED9               	movwf	fsr2l,c
 34262   00533A  6ADA               	clrf	fsr2h,c
 34263   00533C  0E08               	movlw	high _evs
 34264   00533E  22DA               	addwfc	fsr2h,f,c
 34265   005340  50DF               	movf	indf2,w,c
 34266   005342  6E20               	movwf	APP_processConsumedEvent@action^(0+1280),c
 34267                           
 34268                           ;../canargb_events.c: 122:         start_ledno = evs[ev+1];
 34269   005344  0E01               	movlw	low (_evs+1)
 34270   005346  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34271   005348  6ED9               	movwf	fsr2l,c
 34272   00534A  6ADA               	clrf	fsr2h,c
 34273   00534C  0E08               	movlw	high (_evs+1)
 34274   00534E  22DA               	addwfc	fsr2h,f,c
 34275   005350  50DF               	movf	indf2,w,c
 34276   005352  6E21               	movwf	APP_processConsumedEvent@start_ledno^(0+1280),c
 34277                           
 34278                           ;../canargb_events.c: 123:         end_ledno = evs[ev+2];
 34279   005354  0E02               	movlw	low (_evs+2)
 34280   005356  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34281   005358  6ED9               	movwf	fsr2l,c
 34282   00535A  6ADA               	clrf	fsr2h,c
 34283   00535C  0E08               	movlw	high (_evs+2)
 34284   00535E  22DA               	addwfc	fsr2h,f,c
 34285   005360  50DF               	movf	indf2,w,c
 34286   005362  6E22               	movwf	APP_processConsumedEvent@end_ledno^(0+1280),c
 34287                           
 34288                           ;../canargb_events.c: 124:         colourPixelIndexPair.asByte = evs[ev+3];
 34289   005364  0E03               	movlw	low (_evs+3)
 34290   005366  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34291   005368  6ED9               	movwf	fsr2l,c
 34292   00536A  6ADA               	clrf	fsr2h,c
 34293   00536C  0E08               	movlw	high (_evs+3)
 34294   00536E  22DA               	addwfc	fsr2h,f,c
 34295   005370  50DF               	movf	indf2,w,c
 34296   005372  6E23               	movwf	APP_processConsumedEvent@colourPixelIndexPair^(0+1280),c
 34297   005374                     
 34298                           ;../canargb_events.c: 126:         if (onOff && (action & 0x01)) {
 34299   005374  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34300   005376  B4D8               	btfsc	status,2,c
 34301   005378  EFC0  F029         	goto	u5991
 34302   00537C  EFC2  F029         	goto	u5990
 34303   005380                     u5991:
 34304   005380  EFD0  F029         	goto	l8604
 34305   005384                     u5990:
 34306   005384  A020               	btfss	APP_processConsumedEvent@action^(0+1280),0,c
 34307   005386  EFC7  F029         	goto	u6001
 34308   00538A  EFC9  F029         	goto	u6000
 34309   00538E                     u6001:
 34310   00538E  EFD0  F029         	goto	l8604
 34311   005392                     u6000:
 34312   005392                     
 34313                           ;../canargb_events.c: 127:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34314   005392  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34315   005396  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34316   00539A  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34317   00539C  EC13  F03B         	call	_updateLedRange
 34318   0053A0                     l8604:
 34319                           
 34320                           ;../canargb_events.c: 129:         if (!onOff && (action & 0x02)) {
 34321   0053A0  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34322   0053A2  A4D8               	btfss	status,2,c
 34323   0053A4  EFD6  F029         	goto	u6011
 34324   0053A8  EFD8  F029         	goto	u6010
 34325   0053AC                     u6011:
 34326   0053AC  EFE6  F029         	goto	l8610
 34327   0053B0                     u6010:
 34328   0053B0  A220               	btfss	APP_processConsumedEvent@action^(0+1280),1,c
 34329   0053B2  EFDD  F029         	goto	u6021
 34330   0053B6  EFDF  F029         	goto	u6020
 34331   0053BA                     u6021:
 34332   0053BA  EFE6  F029         	goto	l8610
 34333   0053BE                     u6020:
 34334   0053BE                     
 34335                           ;../canargb_events.c: 130:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34336   0053BE  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34337   0053C2  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34338   0053C6  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34339   0053C8  EC13  F03B         	call	_updateLedRange
 34340   0053CC                     l8610:
 34341                           
 34342                           ;../canargb_events.c: 132:     }
 34343   0053CC  0E04               	movlw	4
 34344   0053CE  2624               	addwf	APP_processConsumedEvent@ev^(0+1280),f,c
 34345   0053D0  0EF7               	movlw	247
 34346   0053D2  6424               	cpfsgt	APP_processConsumedEvent@ev^(0+1280),c
 34347   0053D4  EFEE  F029         	goto	u6031
 34348   0053D8  EFF0  F029         	goto	u6030
 34349   0053DC                     u6031:
 34350   0053DC  EF9A  F029         	goto	l8596
 34351   0053E0                     u6030:
 34352   0053E0                     
 34353                           ;../canargb_events.c: 133:     updateRGB();
 34354   0053E0  EC38  F03E         	call	_updateRGB	;wreg free
 34355   0053E4  EF96  F029         	goto	l8588
 34356   0053E8                     l1922:
 34357   0053E8  0012               	return		;funcret
 34358   0053EA                     __end_of_APP_processConsumedEvent:
 34359                           	callstack 0
 34360                           
 34361 ;; *************** function _updateRGB *****************
 34362 ;; Defined at:
 34363 ;;		line 282 in file "../canargb_leds.c"
 34364 ;; Parameters:    Size  Location     Type
 34365 ;;		None
 34366 ;; Auto vars:     Size  Location     Type
 34367 ;;		None
 34368 ;; Return value:  Size  Location     Type
 34369 ;;                  1    wreg      void 
 34370 ;; Registers used:
 34371 ;;		wreg, status,2
 34372 ;; Tracked objects:
 34373 ;;		On entry : 0/0
 34374 ;;		On exit  : 0/0
 34375 ;;		Unchanged: 0/0
 34376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34381 ;;Total ram usage:        0 bytes
 34382 ;; Hardware stack levels used: 1
 34383 ;; Hardware stack levels required when called: 1
 34384 ;; This function calls:
 34385 ;;		Nothing
 34386 ;; This function is called by:
 34387 ;;		_setup
 34388 ;;		_APP_processConsumedEvent
 34389 ;; This function uses a non-reentrant model
 34390 ;;
 34391                           
 34392                           	psect	text80
 34393   007C70                     __ptext80:
 34394                           	callstack 0
 34395   007C70                     _updateRGB:
 34396                           	callstack 124
 34397   007C70                     
 34398                           ;../canargb_leds.c: 283:     refreshRequired = 1;
 34399   007C70  0E01               	movlw	1
 34400   007C72  0105               	movlb	5	; () banked
 34401   007C74  6F91               	movwf	_refreshRequired& (0+255),b
 34402   007C76                     
 34403                           ; BSR set to: 5
 34404   007C76  0012               	return		;funcret
 34405   007C78                     __end_of_updateRGB:
 34406                           	callstack 0
 34407                           
 34408 ;; *************** function _getEVs *****************
 34409 ;; Defined at:
 34410 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 34411 ;; Parameters:    Size  Location     Type
 34412 ;;  tableIndex      1    wreg     unsigned char 
 34413 ;; Auto vars:     Size  Location     Type
 34414 ;;  tableIndex      1   25[COMRAM] unsigned char 
 34415 ;;  evIdx           1   26[COMRAM] unsigned char 
 34416 ;; Return value:  Size  Location     Type
 34417 ;;                  1    wreg      unsigned char 
 34418 ;; Registers used:
 34419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34420 ;; Tracked objects:
 34421 ;;		On entry : 0/0
 34422 ;;		On exit  : 0/0
 34423 ;;		Unchanged: 0/0
 34424 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34427 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34428 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34429 ;;Total ram usage:       15 bytes
 34430 ;; Hardware stack levels used: 1
 34431 ;; Hardware stack levels required when called: 3
 34432 ;; This function calls:
 34433 ;;		_readNVM
 34434 ;; This function is called by:
 34435 ;;		_APP_processConsumedEvent
 34436 ;; This function uses a non-reentrant model
 34437 ;;
 34438                           
 34439                           	psect	text81
 34440   00633E                     __ptext81:
 34441                           	callstack 0
 34442   00633E                     _getEVs:
 34443                           	callstack 120
 34444                           
 34445                           ; BSR set to: 5
 34446                           ;incstack = 0
 34447                           ;getEVs@tableIndex stored from wreg
 34448   00633E  6E1A               	movwf	getEVs@tableIndex^(0+1280),c
 34449   006340                     
 34450                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 255) {
 34451   006340  281A               	incf	getEVs@tableIndex^(0+1280),w,c
 34452   006342  A4D8               	btfss	status,2,c
 34453   006344  EFA6  F031         	goto	u5611
 34454   006348  EFA8  F031         	goto	u5610
 34455   00634C                     u5611:
 34456   00634C  EFAB  F031         	goto	l924
 34457   006350                     u5610:
 34458   006350                     
 34459                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 34460   006350  0E08               	movlw	8
 34461   006352  EFEC  F031         	goto	l925
 34462   006356                     l924:
 34463                           
 34464                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 252; evIdx++) {
 34465   006356  6A1B               	clrf	getEVs@evIdx^(0+1280),c
 34466   006358                     l8114:
 34467                           
 34468                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evIdx);
 34469   006358  501B               	movf	getEVs@evIdx^(0+1280),w,c
 34470   00635A  6E0D               	movwf	??_getEVs^(0+1280),c
 34471   00635C  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 34472   00635E  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 34473   006360  501A               	movf	getEVs@tableIndex^(0+1280),w,c
 34474   006362  6E10               	movwf	(??_getEVs+3)^(0+1280),c
 34475   006364  6A11               	clrf	(??_getEVs+4)^(0+1280),c
 34476   006366  0E01               	movlw	1
 34477   006368  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34478   00636A  C4F3 F512          	movff	prodl,??_getEVs+5
 34479   00636E  C4F4 F513          	movff	prodh,??_getEVs+6
 34480   006372  0211               	mulwf	(??_getEVs+4)^(0+1280),c
 34481   006374  50F3               	movf	prodl,w,c
 34482   006376  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34483   006378  0E01               	movlw	1
 34484   00637A  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34485   00637C  50F3               	movf	prodl,w,c
 34486   00637E  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34487   006380  C512  F514         	movff	??_getEVs+5,??_getEVs+7
 34488   006384  C513  F515         	movff	??_getEVs+6,??_getEVs+8
 34489   006388  6A16               	clrf	(??_getEVs+9)^(0+1280),c
 34490   00638A  500D               	movf	??_getEVs^(0+1280),w,c
 34491   00638C  2414               	addwf	(??_getEVs+7)^(0+1280),w,c
 34492   00638E  6E17               	movwf	(??_getEVs+10)^(0+1280),c
 34493   006390  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 34494   006392  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 34495   006394  6E18               	movwf	(??_getEVs+11)^(0+1280),c
 34496   006396  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 34497   006398  2016               	addwfc	(??_getEVs+9)^(0+1280),w,c
 34498   00639A  6E19               	movwf	(??_getEVs+12)^(0+1280),c
 34499   00639C  0E05               	movlw	5
 34500   00639E  2417               	addwf	(??_getEVs+10)^(0+1280),w,c
 34501   0063A0  6E07               	movwf	readNVM@index^(0+1280),c
 34502   0063A2  0E00               	movlw	0
 34503   0063A4  2018               	addwfc	(??_getEVs+11)^(0+1280),w,c
 34504   0063A6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 34505   0063A8  0E01               	movlw	1
 34506   0063AA  2019               	addwfc	(??_getEVs+12)^(0+1280),w,c
 34507   0063AC  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 34508   0063AE  0E01               	movlw	1
 34509   0063B0  ECDB  F036         	call	_readNVM
 34510   0063B4  0E00               	movlw	low _evs
 34511   0063B6  241B               	addwf	getEVs@evIdx^(0+1280),w,c
 34512   0063B8  6ED9               	movwf	fsr2l,c
 34513   0063BA  6ADA               	clrf	fsr2h,c
 34514   0063BC  0E08               	movlw	high _evs
 34515   0063BE  22DA               	addwfc	fsr2h,f,c
 34516   0063C0  C507  F4DF         	movff	?_readNVM,indf2
 34517   0063C4                     
 34518                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 34519   0063C4  2A1B               	incf	getEVs@evIdx^(0+1280),f,c
 34520   0063C6  0EFB               	movlw	251
 34521   0063C8  641B               	cpfsgt	getEVs@evIdx^(0+1280),c
 34522   0063CA  EFE9  F031         	goto	u5621
 34523   0063CE  EFEB  F031         	goto	u5620
 34524   0063D2                     u5621:
 34525   0063D2  EFAC  F031         	goto	l8114
 34526   0063D6                     u5620:
 34527   0063D6                     
 34528                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 34529   0063D6  0E00               	movlw	0
 34530   0063D8                     l925:
 34531   0063D8  0012               	return		;funcret
 34532   0063DA                     __end_of_getEVs:
 34533                           	callstack 0
 34534                           
 34535 ;; *************** function _canReceiveMessage *****************
 34536 ;; Defined at:
 34537 ;;		line 700 in file "../../VLCBlib_PIC/can18_can_2.c"
 34538 ;; Parameters:    Size  Location     Type
 34539 ;;  m               2   15[COMRAM] PTR struct Message
 34540 ;;		 -> poll@m(9), 
 34541 ;; Auto vars:     Size  Location     Type
 34542 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 34543 ;;		 -> RAM(16383), 
 34544 ;;  temp            2   21[COMRAM] unsigned short 
 34545 ;;  mp              2   19[COMRAM] PTR struct Message
 34546 ;;		 -> rxBuffers(72), NULL(0), 
 34547 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 34548 ;; Return value:  Size  Location     Type
 34549 ;;                  1    wreg      enum E23614
 34550 ;; Registers used:
 34551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34552 ;; Tracked objects:
 34553 ;;		On entry : 0/0
 34554 ;;		On exit  : 0/0
 34555 ;;		Unchanged: 0/0
 34556 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34558 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34560 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34561 ;;Total ram usage:       10 bytes
 34562 ;; Hardware stack levels used: 1
 34563 ;; Hardware stack levels required when called: 3
 34564 ;; This function calls:
 34565 ;;		_getNumRxBuffersInUse
 34566 ;;		_handleSelfEnumeration
 34567 ;;		_memcpy
 34568 ;;		_pop
 34569 ;; This function is called by:
 34570 ;;		_poll
 34571 ;; This function uses a non-reentrant model
 34572 ;;
 34573                           
 34574                           	psect	text82
 34575   003B0A                     __ptext82:
 34576                           	callstack 0
 34577   003B0A                     _canReceiveMessage:
 34578                           	callstack 122
 34579   003B0A                     
 34580                           ;../../VLCBlib_PIC/can18_can_2.c: 701:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 702:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 703:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 705:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 709:     mp = pop(&rxQueue);
 34581   003B0A  0EC5               	movlw	low _rxQueue
 34582   003B0C  6E01               	movwf	pop@q^(0+1280),c
 34583   003B0E  0E05               	movlw	high _rxQueue
 34584   003B10  6E02               	movwf	(pop@q+1)^(0+1280),c
 34585   003B12  ECA1  F02D         	call	_pop	;wreg free
 34586   003B16  C501  F514         	movff	?_pop,canReceiveMessage@mp
 34587   003B1A  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 34588   003B1E                     
 34589                           ;../../VLCBlib_PIC/can18_can_2.c: 710:     if (mp != ((void*)0)) {
 34590   003B1E  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 34591   003B20  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 34592   003B22  B4D8               	btfsc	status,2,c
 34593   003B24  EF96  F01D         	goto	u6921
 34594   003B28  EF98  F01D         	goto	u6920
 34595   003B2C                     u6921:
 34596   003B2C  EFA9  F01D         	goto	l469
 34597   003B30                     u6920:
 34598   003B30                     
 34599                           ;../../VLCBlib_PIC/can18_can_2.c: 711:         memcpy(m, mp, sizeof(Message));
 34600   003B30  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 34601   003B34  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 34602   003B38  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 34603   003B3C  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 34604   003B40  0E00               	movlw	0
 34605   003B42  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 34606   003B44  0E09               	movlw	9
 34607   003B46  6E05               	movwf	memcpy@n^(0+1280),c
 34608   003B48  ECED  F039         	call	_memcpy	;wreg free
 34609   003B4C                     l9550:
 34610                           
 34611                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         return RECEIVED;
 34612   003B4C  0E01               	movlw	1
 34613   003B4E  EF7F  F01E         	goto	l470
 34614   003B52                     l469:
 34615                           
 34616                           ;../../VLCBlib_PIC/can18_can_2.c: 714:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 34617   003B52  0101               	movlb	1	; () banked
 34618   003B54  B178               	btfsc	120,0,b	;volatile
 34619   003B56  EFAF  F01D         	goto	u6931
 34620   003B5A  EFB1  F01D         	goto	u6930
 34621   003B5E                     u6931:
 34622   003B5E  EFB4  F01D         	goto	l9560
 34623   003B62                     u6930:
 34624   003B62                     l9556:
 34625                           
 34626                           ; BSR set to: 1
 34627                           ;../../VLCBlib_PIC/can18_can_2.c: 716:             return NOT_RECEIVED;
 34628   003B62  0E00               	movlw	0
 34629   003B64  EF7F  F01E         	goto	l470
 34630   003B68                     l9560:
 34631                           
 34632                           ; BSR set to: 1
 34633                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         temp = getNumRxBuffersInUse();
 34634   003B68  ECA1  F036         	call	_getNumRxBuffersInUse	;wreg free
 34635   003B6C  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 34636   003B6E  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 34637   003B70  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 34638   003B72  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 34639   003B74                     
 34640                           ;../../VLCBlib_PIC/can18_can_2.c: 721:         if (temp > canDiagnostics[0x12].asUint) {
 34641   003B74  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 34642   003B76  0106               	movlb	6	; () banked
 34643   003B78  5DB5               	subwf	(_canDiagnostics+36)& (0+255),w,b
 34644   003B7A  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 34645   003B7C  59B6               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 34646   003B7E  B0D8               	btfsc	status,0,c
 34647   003B80  EFC4  F01D         	goto	u6941
 34648   003B84  EFC6  F01D         	goto	u6940
 34649   003B88                     u6941:
 34650   003B88  EFCA  F01D         	goto	l9566
 34651   003B8C                     u6940:
 34652   003B8C                     
 34653                           ; BSR set to: 6
 34654                           ;../../VLCBlib_PIC/can18_can_2.c: 722:             canDiagnostics[0x12].asUint = temp;
 34655   003B8C  C516  F6B5         	movff	canReceiveMessage@temp,_canDiagnostics+36
 34656   003B90  C517  F6B6         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 34657   003B94                     l9566:
 34658                           
 34659                           ; BSR set to: 6
 34660                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 34661   003B94  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 34662   003B98  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 34663   003B9C                     
 34664                           ; BSR set to: 6
 34665                           ;../../VLCBlib_PIC/can18_can_2.c: 727:         incomingCanId = rxFifoObj[0] & 0x7F;
 34666   003B9C  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 34667   003BA0  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 34668   003BA4  50DF               	movf	indf2,w,c
 34669   003BA6  0B7F               	andlw	127
 34670   003BA8  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 34671   003BAA                     
 34672                           ; BSR set to: 6
 34673                           ;../../VLCBlib_PIC/can18_can_2.c: 728:         handleSelfEnumeration(incomingCanId);
 34674   003BAA  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 34675   003BAC  EC11  F02F         	call	_handleSelfEnumeration
 34676   003BB0                     
 34677                           ;../../VLCBlib_PIC/can18_can_2.c: 731:         canDiagnostics[0x09].asUint++;
 34678   003BB0  0106               	movlb	6	; () banked
 34679   003BB2  4BA3               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 34680   003BB4  2BA4               	incf	(_canDiagnostics+19)& (0+255),f,b
 34681   003BB6                     
 34682                           ; BSR set to: 6
 34683                           ;../../VLCBlib_PIC/can18_can_2.c: 734:         if (rxFifoObj[4] & 0x20) {
 34684   003BB6  EE20 F004          	lfsr	2,4
 34685   003BBA  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34686   003BBC  26D9               	addwf	fsr2l,f,c
 34687   003BBE  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34688   003BC0  22DA               	addwfc	fsr2h,f,c
 34689   003BC2  AADF               	btfss	indf2,5,c
 34690   003BC4  EFE6  F01D         	goto	u6951
 34691   003BC8  EFE8  F01D         	goto	u6950
 34692   003BCC                     u6951:
 34693   003BCC  EFEE  F01D         	goto	l9584
 34694   003BD0                     u6950:
 34695   003BD0                     
 34696                           ; BSR set to: 6
 34697                           ;../../VLCBlib_PIC/can18_can_2.c: 736:             C1FIFOCON1H |= (0x2 | 0x1);
 34698   003BD0  0E03               	movlw	3
 34699   003BD2  0101               	movlb	1	; () banked
 34700   003BD4  135D               	iorwf	93,f,b	;volatile
 34701   003BD6                     
 34702                           ; BSR set to: 1
 34703                           ;../../VLCBlib_PIC/can18_can_2.c: 737:             C1FIFOCON3Hbits.UINC = 1;
 34704   003BD6  8175               	bsf	117,0,b	;volatile
 34705   003BD8  EFB1  F01D         	goto	l9556
 34706   003BDC                     l9584:
 34707                           
 34708                           ; BSR set to: 6
 34709                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->len = (rxFifoObj[4] & 0x0F);
 34710   003BDC  EE20 F004          	lfsr	2,4
 34711   003BE0  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34712   003BE2  26D9               	addwf	fsr2l,f,c
 34713   003BE4  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34714   003BE6  22DA               	addwfc	fsr2h,f,c
 34715   003BE8  50DF               	movf	indf2,w,c
 34716   003BEA  0B0F               	andlw	15
 34717   003BEC  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34718   003BF0  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34719   003BF4  6EDF               	movwf	indf2,c
 34720   003BF6                     
 34721                           ; BSR set to: 6
 34722                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         if (m->len == 0) {
 34723   003BF6  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34724   003BFA  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34725   003BFE  50DF               	movf	indf2,w,c
 34726   003C00  A4D8               	btfss	status,2,c
 34727   003C02  EF05  F01E         	goto	u6961
 34728   003C06  EF07  F01E         	goto	u6960
 34729   003C0A                     u6961:
 34730   003C0A  EF0B  F01E         	goto	l9594
 34731   003C0E                     u6960:
 34732   003C0E                     
 34733                           ; BSR set to: 6
 34734                           ;../../VLCBlib_PIC/can18_can_2.c: 743:             C1FIFOCON3Hbits.UINC = 1;
 34735   003C0E  0101               	movlb	1	; () banked
 34736   003C10  8175               	bsf	117,0,b	;volatile
 34737   003C12  EFB1  F01D         	goto	l9556
 34738   003C16                     l9594:
 34739                           
 34740                           ; BSR set to: 6
 34741                           ;../../VLCBlib_PIC/can18_can_2.c: 746:         m->opc = rxFifoObj[8];
 34742   003C16  EE20 F008          	lfsr	2,8
 34743   003C1A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34744   003C1C  26D9               	addwf	fsr2l,f,c
 34745   003C1E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34746   003C20  22DA               	addwfc	fsr2h,f,c
 34747   003C22  EE10 F001          	lfsr	1,1
 34748   003C26  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34749   003C28  26E1               	addwf	fsr1l,f,c
 34750   003C2A  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34751   003C2C  22E2               	addwfc	fsr1h,f,c
 34752   003C2E  C4DF F4E7          	movff	indf2,indf1
 34753                           
 34754                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         m->bytes[0] = rxFifoObj[9];
 34755   003C32  EE20 F009          	lfsr	2,9
 34756   003C36  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34757   003C38  26D9               	addwf	fsr2l,f,c
 34758   003C3A  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34759   003C3C  22DA               	addwfc	fsr2h,f,c
 34760   003C3E  EE10 F002          	lfsr	1,2
 34761   003C42  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34762   003C44  26E1               	addwf	fsr1l,f,c
 34763   003C46  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34764   003C48  22E2               	addwfc	fsr1h,f,c
 34765   003C4A  C4DF F4E7          	movff	indf2,indf1
 34766                           
 34767                           ;../../VLCBlib_PIC/can18_can_2.c: 748:         m->bytes[1] = rxFifoObj[10];
 34768   003C4E  EE20 F00A          	lfsr	2,10
 34769   003C52  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34770   003C54  26D9               	addwf	fsr2l,f,c
 34771   003C56  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34772   003C58  22DA               	addwfc	fsr2h,f,c
 34773   003C5A  EE10 F003          	lfsr	1,3
 34774   003C5E  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34775   003C60  26E1               	addwf	fsr1l,f,c
 34776   003C62  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34777   003C64  22E2               	addwfc	fsr1h,f,c
 34778   003C66  C4DF F4E7          	movff	indf2,indf1
 34779                           
 34780                           ;../../VLCBlib_PIC/can18_can_2.c: 749:         m->bytes[2] = rxFifoObj[11];
 34781   003C6A  EE20 F00B          	lfsr	2,11
 34782   003C6E  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34783   003C70  26D9               	addwf	fsr2l,f,c
 34784   003C72  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34785   003C74  22DA               	addwfc	fsr2h,f,c
 34786   003C76  EE10 F004          	lfsr	1,4
 34787   003C7A  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34788   003C7C  26E1               	addwf	fsr1l,f,c
 34789   003C7E  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34790   003C80  22E2               	addwfc	fsr1h,f,c
 34791   003C82  C4DF F4E7          	movff	indf2,indf1
 34792                           
 34793                           ;../../VLCBlib_PIC/can18_can_2.c: 750:         m->bytes[3] = rxFifoObj[12];
 34794   003C86  EE20 F00C          	lfsr	2,12
 34795   003C8A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34796   003C8C  26D9               	addwf	fsr2l,f,c
 34797   003C8E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34798   003C90  22DA               	addwfc	fsr2h,f,c
 34799   003C92  EE10 F005          	lfsr	1,5
 34800   003C96  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34801   003C98  26E1               	addwf	fsr1l,f,c
 34802   003C9A  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34803   003C9C  22E2               	addwfc	fsr1h,f,c
 34804   003C9E  C4DF F4E7          	movff	indf2,indf1
 34805                           
 34806                           ;../../VLCBlib_PIC/can18_can_2.c: 751:         m->bytes[4] = rxFifoObj[13];
 34807   003CA2  EE20 F00D          	lfsr	2,13
 34808   003CA6  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34809   003CA8  26D9               	addwf	fsr2l,f,c
 34810   003CAA  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34811   003CAC  22DA               	addwfc	fsr2h,f,c
 34812   003CAE  EE10 F006          	lfsr	1,6
 34813   003CB2  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34814   003CB4  26E1               	addwf	fsr1l,f,c
 34815   003CB6  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34816   003CB8  22E2               	addwfc	fsr1h,f,c
 34817   003CBA  C4DF F4E7          	movff	indf2,indf1
 34818                           
 34819                           ;../../VLCBlib_PIC/can18_can_2.c: 752:         m->bytes[5] = rxFifoObj[14];
 34820   003CBE  EE20 F00E          	lfsr	2,14
 34821   003CC2  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34822   003CC4  26D9               	addwf	fsr2l,f,c
 34823   003CC6  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34824   003CC8  22DA               	addwfc	fsr2h,f,c
 34825   003CCA  EE10 F007          	lfsr	1,7
 34826   003CCE  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34827   003CD0  26E1               	addwf	fsr1l,f,c
 34828   003CD2  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34829   003CD4  22E2               	addwfc	fsr1h,f,c
 34830   003CD6  C4DF F4E7          	movff	indf2,indf1
 34831                           
 34832                           ;../../VLCBlib_PIC/can18_can_2.c: 753:         m->bytes[6] = rxFifoObj[15];
 34833   003CDA  EE20 F00F          	lfsr	2,15
 34834   003CDE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34835   003CE0  26D9               	addwf	fsr2l,f,c
 34836   003CE2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34837   003CE4  22DA               	addwfc	fsr2h,f,c
 34838   003CE6  EE10 F008          	lfsr	1,8
 34839   003CEA  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34840   003CEC  26E1               	addwf	fsr1l,f,c
 34841   003CEE  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34842   003CF0  22E2               	addwfc	fsr1h,f,c
 34843   003CF2  C4DF F4E7          	movff	indf2,indf1
 34844   003CF6                     
 34845                           ; BSR set to: 6
 34846                           ;../../VLCBlib_PIC/can18_can_2.c: 755:         C1FIFOCON3Hbits.UINC = 1;
 34847   003CF6  0101               	movlb	1	; () banked
 34848   003CF8  8175               	bsf	117,0,b	;volatile
 34849   003CFA  EFA6  F01D         	goto	l9550
 34850   003CFE                     l470:
 34851   003CFE  0012               	return		;funcret
 34852   003D00                     __end_of_canReceiveMessage:
 34853                           	callstack 0
 34854                           
 34855 ;; *************** function _pop *****************
 34856 ;; Defined at:
 34857 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 34858 ;; Parameters:    Size  Location     Type
 34859 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 34860 ;;		 -> rxQueue(5), 
 34861 ;; Auto vars:     Size  Location     Type
 34862 ;;  ret             2    7[COMRAM] PTR struct Message
 34863 ;;		 -> rxBuffers(72), 
 34864 ;; Return value:  Size  Location     Type
 34865 ;;                  2    0[COMRAM] PTR struct Message
 34866 ;; Registers used:
 34867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34868 ;; Tracked objects:
 34869 ;;		On entry : 0/0
 34870 ;;		On exit  : 0/0
 34871 ;;		Unchanged: 0/0
 34872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34875 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34876 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34877 ;;Total ram usage:        9 bytes
 34878 ;; Hardware stack levels used: 1
 34879 ;; Hardware stack levels required when called: 1
 34880 ;; This function calls:
 34881 ;;		Nothing
 34882 ;; This function is called by:
 34883 ;;		_canReceiveMessage
 34884 ;; This function uses a non-reentrant model
 34885 ;;
 34886                           
 34887                           	psect	text83
 34888   005B42                     __ptext83:
 34889                           	callstack 0
 34890   005B42                     _pop:
 34891                           	callstack 123
 34892   005B42                     
 34893                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 34894   005B42  EE20 F002          	lfsr	2,2
 34895   005B46  5001               	movf	pop@q^(0+1280),w,c
 34896   005B48  26D9               	addwf	fsr2l,f,c
 34897   005B4A  5002               	movf	(pop@q+1)^(0+1280),w,c
 34898   005B4C  22DA               	addwfc	fsr2h,f,c
 34899   005B4E  EE10 F003          	lfsr	1,3
 34900   005B52  5001               	movf	pop@q^(0+1280),w,c
 34901   005B54  26E1               	addwf	fsr1l,f,c
 34902   005B56  5002               	movf	(pop@q+1)^(0+1280),w,c
 34903   005B58  22E2               	addwfc	fsr1h,f,c
 34904   005B5A  50DE               	movf	postinc2,w,c
 34905   005B5C  18E6               	xorwf	postinc1,w,c
 34906   005B5E  A4D8               	btfss	status,2,c
 34907   005B60  EFB4  F02D         	goto	u5911
 34908   005B64  EFB6  F02D         	goto	u5910
 34909   005B68                     u5911:
 34910   005B68  EFBC  F02D         	goto	l8530
 34911   005B6C                     u5910:
 34912   005B6C                     
 34913                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 34914   005B6C  0E00               	movlw	0
 34915   005B6E  6E01               	movwf	?_pop^(0+1280),c
 34916   005B70  0E00               	movlw	0
 34917   005B72  6E02               	movwf	(?_pop+1)^(0+1280),c
 34918   005B74  EFFF  F02D         	goto	l971
 34919   005B78                     l8530:
 34920                           
 34921                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 34922   005B78  EE20 F002          	lfsr	2,2
 34923   005B7C  5001               	movf	pop@q^(0+1280),w,c
 34924   005B7E  26D9               	addwf	fsr2l,f,c
 34925   005B80  5002               	movf	(pop@q+1)^(0+1280),w,c
 34926   005B82  22DA               	addwfc	fsr2h,f,c
 34927   005B84  50DF               	movf	indf2,w,c
 34928   005B86  6E03               	movwf	??_pop^(0+1280),c
 34929   005B88  5003               	movf	??_pop^(0+1280),w,c
 34930   005B8A  0D09               	mullw	9
 34931   005B8C  C4F3 F504          	movff	prodl,??_pop+1
 34932   005B90  C4F4 F505          	movff	prodh,??_pop+2
 34933   005B94  C501  F4D9         	movff	pop@q,fsr2l
 34934   005B98  C502  F4DA         	movff	pop@q+1,fsr2h
 34935   005B9C  C4DE F506          	movff	postinc2,??_pop+3
 34936   005BA0  C4DD F507          	movff	postdec2,??_pop+4
 34937   005BA4  5004               	movf	(??_pop+1)^(0+1280),w,c
 34938   005BA6  2406               	addwf	(??_pop+3)^(0+1280),w,c
 34939   005BA8  6E08               	movwf	pop@ret^(0+1280),c
 34940   005BAA  5005               	movf	(??_pop+2)^(0+1280),w,c
 34941   005BAC  2007               	addwfc	(??_pop+4)^(0+1280),w,c
 34942   005BAE  6E09               	movwf	(pop@ret+1)^(0+1280),c
 34943   005BB0  EE20 F002          	lfsr	2,2
 34944   005BB4  5001               	movf	pop@q^(0+1280),w,c
 34945   005BB6  26D9               	addwf	fsr2l,f,c
 34946   005BB8  5002               	movf	(pop@q+1)^(0+1280),w,c
 34947   005BBA  22DA               	addwfc	fsr2h,f,c
 34948   005BBC  2ADF               	incf	indf2,f,c
 34949   005BBE                     
 34950                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 34951   005BBE  EE20 F004          	lfsr	2,4
 34952   005BC2  5001               	movf	pop@q^(0+1280),w,c
 34953   005BC4  26D9               	addwf	fsr2l,f,c
 34954   005BC6  5002               	movf	(pop@q+1)^(0+1280),w,c
 34955   005BC8  22DA               	addwfc	fsr2h,f,c
 34956   005BCA  EE10 F002          	lfsr	1,2
 34957   005BCE  5001               	movf	pop@q^(0+1280),w,c
 34958   005BD0  26E1               	addwf	fsr1l,f,c
 34959   005BD2  5002               	movf	(pop@q+1)^(0+1280),w,c
 34960   005BD4  22E2               	addwfc	fsr1h,f,c
 34961   005BD6  50DE               	movf	postinc2,w,c
 34962   005BD8  5CE6               	subwf	postinc1,w,c
 34963   005BDA  A0D8               	btfss	status,0,c
 34964   005BDC  EFF2  F02D         	goto	u5921
 34965   005BE0  EFF4  F02D         	goto	u5920
 34966   005BE4                     u5921:
 34967   005BE4  EFFB  F02D         	goto	l8538
 34968   005BE8                     u5920:
 34969   005BE8  EE20 F002          	lfsr	2,2
 34970   005BEC  5001               	movf	pop@q^(0+1280),w,c
 34971   005BEE  26D9               	addwf	fsr2l,f,c
 34972   005BF0  5002               	movf	(pop@q+1)^(0+1280),w,c
 34973   005BF2  22DA               	addwfc	fsr2h,f,c
 34974   005BF4  6ADF               	clrf	indf2,c
 34975   005BF6                     l8538:
 34976                           
 34977                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 34978   005BF6  C508  F501         	movff	pop@ret,?_pop
 34979   005BFA  C509  F502         	movff	pop@ret+1,?_pop+1
 34980   005BFE                     l971:
 34981   005BFE  0012               	return		;funcret
 34982   005C00                     __end_of_pop:
 34983                           	callstack 0
 34984                           
 34985 ;; *************** function _memcpy *****************
 34986 ;; Defined at:
 34987 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 34988 ;; Parameters:    Size  Location     Type
 34989 ;;  d1              2    0[COMRAM] PTR void 
 34990 ;;		 -> poll@m(9), 
 34991 ;;  s1              2    2[COMRAM] PTR const void 
 34992 ;;		 -> rxBuffers(72), NULL(0), 
 34993 ;;  n               2    4[COMRAM] unsigned int 
 34994 ;; Auto vars:     Size  Location     Type
 34995 ;;  s               2    8[COMRAM] PTR const unsigned char 
 34996 ;;		 -> rxBuffers(72), NULL(0), 
 34997 ;;  d               2    6[COMRAM] PTR unsigned char 
 34998 ;;		 -> poll@m(9), 
 34999 ;;  tmp             1   10[COMRAM] unsigned char 
 35000 ;; Return value:  Size  Location     Type
 35001 ;;                  2    0[COMRAM] PTR void 
 35002 ;; Registers used:
 35003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35004 ;; Tracked objects:
 35005 ;;		On entry : 0/0
 35006 ;;		On exit  : 0/0
 35007 ;;		Unchanged: 0/0
 35008 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35010 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35012 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35013 ;;Total ram usage:       11 bytes
 35014 ;; Hardware stack levels used: 1
 35015 ;; Hardware stack levels required when called: 1
 35016 ;; This function calls:
 35017 ;;		Nothing
 35018 ;; This function is called by:
 35019 ;;		_canReceiveMessage
 35020 ;; This function uses a non-reentrant model
 35021 ;;
 35022                           
 35023                           	psect	text84
 35024   0073DA                     __ptext84:
 35025                           	callstack 0
 35026   0073DA                     _memcpy:
 35027                           	callstack 123
 35028   0073DA  C503  F509         	movff	memcpy@s1,memcpy@s
 35029   0073DE  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 35030   0073E2  C501  F507         	movff	memcpy@d1,memcpy@d
 35031   0073E6  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 35032   0073EA  EF07  F03A         	goto	l8552
 35033   0073EE                     l8544:
 35034   0073EE  C509  F4D9         	movff	memcpy@s,fsr2l
 35035   0073F2  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 35036   0073F6  50DF               	movf	indf2,w,c
 35037   0073F8  6E0B               	movwf	memcpy@tmp^(0+1280),c
 35038   0073FA  4A09               	infsnz	memcpy@s^(0+1280),f,c
 35039   0073FC  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 35040   0073FE  C507  F4D9         	movff	memcpy@d,fsr2l
 35041   007402  C508  F4DA         	movff	memcpy@d+1,fsr2h
 35042   007406  C50B  F4DF         	movff	memcpy@tmp,indf2
 35043   00740A  4A07               	infsnz	memcpy@d^(0+1280),f,c
 35044   00740C  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 35045   00740E                     l8552:
 35046   00740E  0605               	decf	memcpy@n^(0+1280),f,c
 35047   007410  A0D8               	btfss	status,0,c
 35048   007412  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 35049   007414  2805               	incf	memcpy@n^(0+1280),w,c
 35050   007416  E106               	bnz	u5931
 35051   007418  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 35052   00741A  A4D8               	btfss	status,2,c
 35053   00741C  EF12  F03A         	goto	u5931
 35054   007420  EF14  F03A         	goto	u5930
 35055   007424                     u5931:
 35056   007424  EFF7  F039         	goto	l8544
 35057   007428                     u5930:
 35058   007428  0012               	return		;funcret
 35059   00742A                     __end_of_memcpy:
 35060                           	callstack 0
 35061                           
 35062 ;; *************** function _handleSelfEnumeration *****************
 35063 ;; Defined at:
 35064 ;;		line 800 in file "../../VLCBlib_PIC/can18_can_2.c"
 35065 ;; Parameters:    Size  Location     Type
 35066 ;;  receivedCanI    1    wreg     unsigned char 
 35067 ;; Auto vars:     Size  Location     Type
 35068 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 35069 ;; Return value:  Size  Location     Type
 35070 ;;                  1    wreg      void 
 35071 ;; Registers used:
 35072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35073 ;; Tracked objects:
 35074 ;;		On entry : 0/0
 35075 ;;		On exit  : 0/0
 35076 ;;		Unchanged: 0/0
 35077 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35081 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35082 ;;Total ram usage:        5 bytes
 35083 ;; Hardware stack levels used: 1
 35084 ;; Hardware stack levels required when called: 2
 35085 ;; This function calls:
 35086 ;;		_tickGet
 35087 ;; This function is called by:
 35088 ;;		_canReceiveMessage
 35089 ;; This function uses a non-reentrant model
 35090 ;;
 35091                           
 35092                           	psect	text85
 35093   005E22                     __ptext85:
 35094                           	callstack 0
 35095   005E22                     _handleSelfEnumeration:
 35096                           	callstack 122
 35097                           
 35098                           ;incstack = 0
 35099                           ;handleSelfEnumeration@receivedCanId stored from wreg
 35100   005E22  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 35101   005E24                     
 35102                           ;../../VLCBlib_PIC/can18_can_2.c: 802:     switch (enumerationState) {
 35103   005E24  EF4B  F02F         	goto	l8568
 35104   005E28                     l8556:
 35105                           
 35106                           ; BSR set to: 5
 35107                           ;../../VLCBlib_PIC/can18_can_2.c: 805:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 35108   005E28  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 35109   005E2C  0E07               	movlw	7
 35110   005E2E  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 35111   005E30  0E01               	movlw	1
 35112   005E32  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 35113   005E34  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 35114   005E36  EF1F  F02F         	goto	u5944
 35115   005E3A                     u5945:
 35116   005E3A  90D8               	bcf	status,0,c
 35117   005E3C  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 35118   005E3E                     u5944:
 35119   005E3E  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 35120   005E40  EF1D  F02F         	goto	u5945
 35121   005E44  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35122   005E46  46E8               	rlncf	wreg,f,c
 35123   005E48  0B1F               	andlw	31
 35124   005E4A  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 35125   005E4C  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 35126   005E4E  0E31               	movlw	low _enumerationResults
 35127   005E50  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 35128   005E52  6ED9               	movwf	fsr2l,c
 35129   005E54  0E06               	movlw	high _enumerationResults
 35130   005E56  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 35131   005E58  6EDA               	movwf	fsr2h,c
 35132   005E5A  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35133   005E5C  12DF               	iorwf	indf2,f,c
 35134                           
 35135                           ;../../VLCBlib_PIC/can18_can_2.c: 806:             break;
 35136   005E5E  EF65  F02F         	goto	l494
 35137   005E62                     l8558:
 35138                           
 35139                           ; BSR set to: 5
 35140                           ;../../VLCBlib_PIC/can18_can_2.c: 808:             if (receivedCanId == canId) {
 35141   005E62  51A8               	movf	_canId& (0+255),w,b
 35142   005E64  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35143   005E66  A4D8               	btfss	status,2,c
 35144   005E68  EF38  F02F         	goto	u5951
 35145   005E6C  EF3A  F02F         	goto	u5950
 35146   005E70                     u5951:
 35147   005E70  EF65  F02F         	goto	l494
 35148   005E74                     u5950:
 35149   005E74                     
 35150                           ; BSR set to: 5
 35151                           ;../../VLCBlib_PIC/can18_can_2.c: 811:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 35152   005E74  0E01               	movlw	1
 35153   005E76  6FA5               	movwf	_enumerationState& (0+255),b
 35154   005E78                     
 35155                           ; BSR set to: 5
 35156                           ;../../VLCBlib_PIC/can18_can_2.c: 813:                 canDiagnostics[0x0E].asUint++;
 35157   005E78  0106               	movlb	6	; () banked
 35158   005E7A  4BAD               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 35159   005E7C  2BAE               	incf	(_canDiagnostics+29)& (0+255),f,b
 35160   005E7E                     
 35161                           ; BSR set to: 6
 35162                           ;../../VLCBlib_PIC/can18_can_2.c: 815:                 enumerationStartTime.val = tickGe
      +                          t();
 35163   005E7E  EC66  F036         	call	_tickGet	;wreg free
 35164   005E82  C501  F570         	movff	?_tickGet,_enumerationStartTime
 35165   005E86  C502  F571         	movff	?_tickGet+1,_enumerationStartTime+1
 35166   005E8A  C503  F572         	movff	?_tickGet+2,_enumerationStartTime+2
 35167   005E8E  C504  F573         	movff	?_tickGet+3,_enumerationStartTime+3
 35168   005E92  EF65  F02F         	goto	l494
 35169   005E96                     l8568:
 35170   005E96  0105               	movlb	5	; () banked
 35171   005E98  51A5               	movf	_enumerationState& (0+255),w,b
 35172   005E9A  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 35173   005E9C  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 35174                           
 35175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35176                           ; Switch size 1, requested type "simple"
 35177                           ; Number of cases is 1, Range of values is 0 to 0
 35178                           ; switch strategies available:
 35179                           ; Name         Instructions Cycles
 35180                           ; simple_byte            4     3 (average)
 35181                           ;	Chosen strategy is simple_byte
 35182   005E9E  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35183   005EA0  0A00               	xorlw	0	; case 0
 35184   005EA2  B4D8               	btfsc	status,2,c
 35185   005EA4  EF56  F02F         	goto	l11522
 35186   005EA8  EF65  F02F         	goto	l494
 35187   005EAC                     l11522:
 35188                           
 35189                           ; BSR set to: 5
 35190                           ; Switch size 1, requested type "simple"
 35191                           ; Number of cases is 3, Range of values is 0 to 3
 35192                           ; switch strategies available:
 35193                           ; Name         Instructions Cycles
 35194                           ; simple_byte           10     6 (average)
 35195                           ;	Chosen strategy is simple_byte
 35196   005EAC  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 35197   005EAE  0A00               	xorlw	0	; case 0
 35198   005EB0  B4D8               	btfsc	status,2,c
 35199   005EB2  EF31  F02F         	goto	l8558
 35200   005EB6  0A02               	xorlw	2	; case 2
 35201   005EB8  B4D8               	btfsc	status,2,c
 35202   005EBA  EF14  F02F         	goto	l8556
 35203   005EBE  0A01               	xorlw	1	; case 3
 35204   005EC0  B4D8               	btfsc	status,2,c
 35205   005EC2  EF14  F02F         	goto	l8556
 35206   005EC6  EF65  F02F         	goto	l494
 35207   005ECA                     l494:
 35208   005ECA  0012               	return		;funcret
 35209   005ECC                     __end_of_handleSelfEnumeration:
 35210                           	callstack 0
 35211                           
 35212 ;; *************** function _sendMessage5 *****************
 35213 ;; Defined at:
 35214 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 35215 ;; Parameters:    Size  Location     Type
 35216 ;;  opc             1    wreg     enum E22928
 35217 ;;  data1           1   37[COMRAM] unsigned char 
 35218 ;;  data2           1   38[COMRAM] unsigned char 
 35219 ;;  data3           1   39[COMRAM] unsigned char 
 35220 ;;  data4           1   40[COMRAM] unsigned char 
 35221 ;;  data5           1   41[COMRAM] unsigned char 
 35222 ;; Auto vars:     Size  Location     Type
 35223 ;;  opc             1   42[COMRAM] enum E22928
 35224 ;; Return value:  Size  Location     Type
 35225 ;;                  1    wreg      void 
 35226 ;; Registers used:
 35227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35228 ;; Tracked objects:
 35229 ;;		On entry : 0/0
 35230 ;;		On exit  : 0/0
 35231 ;;		Unchanged: 0/0
 35232 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35233 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35237 ;;Total ram usage:        6 bytes
 35238 ;; Hardware stack levels used: 1
 35239 ;; Hardware stack levels required when called: 5
 35240 ;; This function calls:
 35241 ;;		_sendMessage
 35242 ;; This function is called by:
 35243 ;;		_canProcessMessage
 35244 ;;		_teachProcessMessage
 35245 ;;		_teachCheckLen
 35246 ;;		_doNenrd
 35247 ;;		_doNnclr
 35248 ;;		_doEvlrn
 35249 ;;		_doReval
 35250 ;;		_doEvuln
 35251 ;;		_doReqev
 35252 ;;		_reqevCallback
 35253 ;;		_mnsProcessMessage
 35254 ;;		_mnsPoll
 35255 ;;		_mnsTRserviceDiscoveryCallback
 35256 ;;		_nvProcessMessage
 35257 ;;		_checkLen
 35258 ;; This function uses a non-reentrant model
 35259 ;;
 35260                           
 35261                           	psect	text86
 35262   007A50                     __ptext86:
 35263                           	callstack 0
 35264   007A50                     _sendMessage5:
 35265                           	callstack 118
 35266                           
 35267                           ;incstack = 0
 35268                           ;sendMessage5@opc stored from wreg
 35269   007A50  6E2B               	movwf	sendMessage5@opc^(0+1280),c
 35270   007A52                     
 35271                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 35272   007A52  0E06               	movlw	6
 35273   007A54  6E1B               	movwf	sendMessage@len^(0+1280),c
 35274   007A56  C526  F51C         	movff	sendMessage5@data1,sendMessage@data1
 35275   007A5A  C527  F51D         	movff	sendMessage5@data2,sendMessage@data2
 35276   007A5E  C528  F51E         	movff	sendMessage5@data3,sendMessage@data3
 35277   007A62  C529  F51F         	movff	sendMessage5@data4,sendMessage@data4
 35278   007A66  C52A  F520         	movff	sendMessage5@data5,sendMessage@data5
 35279   007A6A  0E00               	movlw	0
 35280   007A6C  6E21               	movwf	sendMessage@data6^(0+1280),c
 35281   007A6E  0E00               	movlw	0
 35282   007A70  6E22               	movwf	sendMessage@data7^(0+1280),c
 35283   007A72  502B               	movf	sendMessage5@opc^(0+1280),w,c
 35284   007A74  ECCD  F032         	call	_sendMessage
 35285   007A78  0012               	return		;funcret
 35286   007A7A                     __end_of_sendMessage5:
 35287                           	callstack 0
 35288                           
 35289 ;; *************** function _sendMessage *****************
 35290 ;; Defined at:
 35291 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 35292 ;; Parameters:    Size  Location     Type
 35293 ;;  opc             1    wreg     enum E22928
 35294 ;;  len             1   26[COMRAM] unsigned char 
 35295 ;;  data1           1   27[COMRAM] unsigned char 
 35296 ;;  data2           1   28[COMRAM] unsigned char 
 35297 ;;  data3           1   29[COMRAM] unsigned char 
 35298 ;;  data4           1   30[COMRAM] unsigned char 
 35299 ;;  data5           1   31[COMRAM] unsigned char 
 35300 ;;  data6           1   32[COMRAM] unsigned char 
 35301 ;;  data7           1   33[COMRAM] unsigned char 
 35302 ;; Auto vars:     Size  Location     Type
 35303 ;;  opc             1   36[COMRAM] enum E22928
 35304 ;; Return value:  Size  Location     Type
 35305 ;;                  1    wreg      void 
 35306 ;; Registers used:
 35307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35308 ;; Tracked objects:
 35309 ;;		On entry : 0/0
 35310 ;;		On exit  : 0/0
 35311 ;;		Unchanged: 0/0
 35312 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35313 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35316 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35317 ;;Total ram usage:       11 bytes
 35318 ;; Hardware stack levels used: 1
 35319 ;; Hardware stack levels required when called: 4
 35320 ;; This function calls:
 35321 ;;		_canSendMessage
 35322 ;; This function is called by:
 35323 ;;		_sendMessage2
 35324 ;;		_sendMessage3
 35325 ;;		_sendMessage4
 35326 ;;		_sendMessage5
 35327 ;;		_sendMessage6
 35328 ;;		_sendMessage7
 35329 ;;		_sendMessage0
 35330 ;;		_sendMessage1
 35331 ;; This function uses a non-reentrant model
 35332 ;;
 35333                           
 35334                           	psect	text87
 35335   00659A                     __ptext87:
 35336                           	callstack 0
 35337   00659A                     _sendMessage:
 35338                           	callstack 118
 35339                           
 35340                           ;incstack = 0
 35341                           ;sendMessage@opc stored from wreg
 35342   00659A  6E25               	movwf	sendMessage@opc^(0+1280),c
 35343   00659C                     
 35344                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 35345   00659C  C525  F6B8         	movff	sendMessage@opc,_tmpMessage+1
 35346   0065A0                     
 35347                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 35348   0065A0  C51B  F6B7         	movff	sendMessage@len,_tmpMessage
 35349   0065A4                     
 35350                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 35351   0065A4  C51C  F6B9         	movff	sendMessage@data1,_tmpMessage+2
 35352   0065A8                     
 35353                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 35354   0065A8  C51D  F6BA         	movff	sendMessage@data2,_tmpMessage+3
 35355   0065AC                     
 35356                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 35357   0065AC  C51E  F6BB         	movff	sendMessage@data3,_tmpMessage+4
 35358   0065B0                     
 35359                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 35360   0065B0  C51F  F6BC         	movff	sendMessage@data4,_tmpMessage+5
 35361   0065B4                     
 35362                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 35363   0065B4  C520  F6BD         	movff	sendMessage@data5,_tmpMessage+6
 35364   0065B8                     
 35365                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 35366   0065B8  C521  F6BE         	movff	sendMessage@data6,_tmpMessage+7
 35367   0065BC                     
 35368                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 35369   0065BC  C522  F6BF         	movff	sendMessage@data7,_tmpMessage+8
 35370   0065C0                     
 35371                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 35372   0065C0  0105               	movlb	5	; () banked
 35373   0065C2  518F               	movf	_transport& (0+255),w,b
 35374   0065C4  1190               	iorwf	(_transport+1)& (0+255),w,b
 35375   0065C6  B4D8               	btfsc	status,2,c
 35376   0065C8  EFE8  F032         	goto	u5111
 35377   0065CC  EFEA  F032         	goto	u5110
 35378   0065D0                     u5111:
 35379   0065D0  EF15  F033         	goto	l1868
 35380   0065D4                     u5110:
 35381   0065D4                     
 35382                           ; BSR set to: 5
 35383                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 35384   0065D4  C58F  F4F6         	movff	_transport,tblptrl
 35385   0065D8  C590  F4F7         	movff	_transport+1,tblptrh
 35386   0065DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35387   0065DC  6AF8               	clrf	tblptru,c
 35388   0065DE                     	endif
 35389   0065DE                     	if	0	;tblptru may be non-zero
 35390   0065DE                     	endif
 35391   0065DE  0009               	tblrd		*+
 35392   0065E0  50F5               	movf	tablat,w,c
 35393   0065E2  0009               	tblrd		*+
 35394   0065E4  10F5               	iorwf	tablat,w,c
 35395   0065E6  B4D8               	btfsc	status,2,c
 35396   0065E8  EFF8  F032         	goto	u5121
 35397   0065EC  EFFA  F032         	goto	u5120
 35398   0065F0                     u5121:
 35399   0065F0  EF15  F033         	goto	l1868
 35400   0065F4                     u5120:
 35401   0065F4                     
 35402                           ; BSR set to: 5
 35403                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 35404   0065F4  0EB7               	movlw	low _tmpMessage
 35405   0065F6  6E0D               	movwf	canSendMessage@mp^(0+1280),c
 35406   0065F8  0E06               	movlw	high _tmpMessage
 35407   0065FA  6E0E               	movwf	(canSendMessage@mp+1)^(0+1280),c
 35408   0065FC  C58F  F4F6         	movff	_transport,tblptrl
 35409   006600  C590  F4F7         	movff	_transport+1,tblptrh
 35410   006604                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35411   006604  6AF8               	clrf	tblptru,c
 35412   006606                     	endif
 35413   006606                     	if	0	;tblptru may be non-zero
 35414   006606                     	endif
 35415   006606  0009               	tblrd		*+
 35416   006608  C4F5 F523          	movff	tablat,??_sendMessage
 35417   00660C  0009               	tblrd		*+
 35418   00660E  C4F5 F524          	movff	tablat,??_sendMessage+1
 35419   006612  D802               	call	u5138
 35420   006614  EF15  F033         	goto	u5139
 35421   006618                     u5138:
 35422   006618  0005               	push	
 35423   00661A  6EFA               	movwf	pclath,c
 35424   00661C  5023               	movf	??_sendMessage^(0+1280),w,c
 35425   00661E  6EFD               	movwf	tosl,c
 35426   006620  5024               	movf	(??_sendMessage+1)^(0+1280),w,c
 35427   006622  6EFE               	movwf	tosh,c
 35428   006624  6AFF               	clrf	tosu,c
 35429   006626  50FA               	movf	pclath,w,c
 35430   006628  0012               	return		;indir
 35431   00662A                     u5139:
 35432   00662A                     l1868:
 35433   00662A  0012               	return		;funcret
 35434   00662C                     __end_of_sendMessage:
 35435                           	callstack 0
 35436                           
 35437 ;; *************** function _canSendMessage *****************
 35438 ;; Defined at:
 35439 ;;		line 570 in file "../../VLCBlib_PIC/can18_can_2.c"
 35440 ;; Parameters:    Size  Location     Type
 35441 ;;  mp              2   12[COMRAM] PTR struct Message
 35442 ;;		 -> tmpMessage(9), 
 35443 ;; Auto vars:     Size  Location     Type
 35444 ;;  txFifoObj       2   24[COMRAM] PTR unsigned char 
 35445 ;;		 -> RAM(16383), 
 35446 ;;  m               2   22[COMRAM] PTR struct Message
 35447 ;;		 -> rxBuffers(72), NULL(0), 
 35448 ;;  temp            2   20[COMRAM] unsigned short 
 35449 ;;  i               1    0        unsigned char 
 35450 ;; Return value:  Size  Location     Type
 35451 ;;                  1    wreg      enum E23618
 35452 ;; Registers used:
 35453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35454 ;; Tracked objects:
 35455 ;;		On entry : 0/0
 35456 ;;		On exit  : 0/0
 35457 ;;		Unchanged: 0/0
 35458 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35460 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35461 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35462 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35463 ;;Total ram usage:       14 bytes
 35464 ;; Hardware stack levels used: 1
 35465 ;; Hardware stack levels required when called: 3
 35466 ;; This function calls:
 35467 ;;		_getNextWriteMessage
 35468 ;;		_getNumRxBuffersInUse
 35469 ;;		_getNumTxBuffersInUse
 35470 ;;		_have
 35471 ;;		_isEvent
 35472 ;;		_startEnumeration
 35473 ;;		_updateModuleErrorStatus
 35474 ;; This function is called by:
 35475 ;;		_sendMessage
 35476 ;; This function uses a non-reentrant model
 35477 ;;
 35478                           
 35479                           	psect	text88
 35480   00235C                     __ptext88:
 35481                           	callstack 0
 35482   00235C                     _canSendMessage:
 35483                           	callstack 118
 35484   00235C                     
 35485                           ;../../VLCBlib_PIC/can18_can_2.c: 571:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          72:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 574:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 577:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 581
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 35486   00235C  EE20 F001          	lfsr	2,1
 35487   002360  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35488   002362  26D9               	addwf	fsr2l,f,c
 35489   002364  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35490   002366  22DA               	addwfc	fsr2h,f,c
 35491   002368  50DF               	movf	indf2,w,c
 35492   00236A  ECAC  F03B         	call	_isEvent
 35493   00236E  0900               	iorlw	0
 35494   002370  B4D8               	btfsc	status,2,c
 35495   002372  EFBD  F011         	goto	u4931
 35496   002376  EFBF  F011         	goto	u4930
 35497   00237A                     u4931:
 35498   00237A  EF74  F012         	goto	l446
 35499   00237E                     u4930:
 35500   00237E                     
 35501                           ;../../VLCBlib_PIC/can18_can_2.c: 582:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 35502   00237E  0E08               	movlw	8
 35503   002380  ECA3  F033         	call	_have
 35504   002384  0900               	iorlw	0
 35505   002386  B4D8               	btfsc	status,2,c
 35506   002388  EFC8  F011         	goto	u4941
 35507   00238C  EFCA  F011         	goto	u4940
 35508   002390                     u4941:
 35509   002390  EF74  F012         	goto	l446
 35510   002394                     u4940:
 35511   002394                     
 35512                           ;../../VLCBlib_PIC/can18_can_2.c: 584:             m = getNextWriteMessage(&rxQueue);
 35513   002394  0EC5               	movlw	low _rxQueue
 35514   002396  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 35515   002398  0E05               	movlw	high _rxQueue
 35516   00239A  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 35517   00239C  ECFE  F028         	call	_getNextWriteMessage	;wreg free
 35518   0023A0  C501  F517         	movff	?_getNextWriteMessage,canSendMessage@m
 35519   0023A4  C502  F518         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 35520   0023A8                     
 35521                           ;../../VLCBlib_PIC/can18_can_2.c: 585:             if (m == ((void*)0)) {
 35522   0023A8  5017               	movf	canSendMessage@m^(0+1280),w,c
 35523   0023AA  1018               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 35524   0023AC  A4D8               	btfss	status,2,c
 35525   0023AE  EFDB  F011         	goto	u4951
 35526   0023B2  EFDD  F011         	goto	u4950
 35527   0023B6                     u4951:
 35528   0023B6  EFE4  F011         	goto	l7504
 35529   0023BA                     u4950:
 35530   0023BA                     
 35531                           ;../../VLCBlib_PIC/can18_can_2.c: 587:                 canDiagnostics[0x08].asUint++;
 35532   0023BA  0106               	movlb	6	; () banked
 35533   0023BC  4BA1               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 35534   0023BE  2BA2               	incf	(_canDiagnostics+17)& (0+255),f,b
 35535   0023C0                     
 35536                           ; BSR set to: 6
 35537                           ;../../VLCBlib_PIC/can18_can_2.c: 588:                 updateModuleErrorStatus();
 35538   0023C0  EC16  F03E         	call	_updateModuleErrorStatus	;wreg free
 35539                           
 35540                           ;../../VLCBlib_PIC/can18_can_2.c: 590:             } else {
 35541   0023C4  EF5E  F012         	goto	l7522
 35542   0023C8                     l7504:
 35543                           
 35544                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->opc = mp->opc;
 35545   0023C8  EE20 F001          	lfsr	2,1
 35546   0023CC  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35547   0023CE  26D9               	addwf	fsr2l,f,c
 35548   0023D0  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35549   0023D2  22DA               	addwfc	fsr2h,f,c
 35550   0023D4  EE10 F001          	lfsr	1,1
 35551   0023D8  5017               	movf	canSendMessage@m^(0+1280),w,c
 35552   0023DA  26E1               	addwf	fsr1l,f,c
 35553   0023DC  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35554   0023DE  22E2               	addwfc	fsr1h,f,c
 35555   0023E0  C4DF F4E7          	movff	indf2,indf1
 35556   0023E4                     
 35557                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->len = mp->len;
 35558   0023E4  C50D  F4D9         	movff	canSendMessage@mp,fsr2l
 35559   0023E8  C50E  F4DA         	movff	canSendMessage@mp+1,fsr2h
 35560   0023EC  C517  F4E1         	movff	canSendMessage@m,fsr1l
 35561   0023F0  C518  F4E2         	movff	canSendMessage@m+1,fsr1h
 35562   0023F4  C4DF F4E7          	movff	indf2,indf1
 35563   0023F8                     
 35564                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[0] = mp->bytes[0];
 35565   0023F8  EE20 F002          	lfsr	2,2
 35566   0023FC  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35567   0023FE  26D9               	addwf	fsr2l,f,c
 35568   002400  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35569   002402  22DA               	addwfc	fsr2h,f,c
 35570   002404  EE10 F002          	lfsr	1,2
 35571   002408  5017               	movf	canSendMessage@m^(0+1280),w,c
 35572   00240A  26E1               	addwf	fsr1l,f,c
 35573   00240C  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35574   00240E  22E2               	addwfc	fsr1h,f,c
 35575   002410  C4DF F4E7          	movff	indf2,indf1
 35576   002414                     
 35577                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[1] = mp->bytes[1];
 35578   002414  EE20 F003          	lfsr	2,3
 35579   002418  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35580   00241A  26D9               	addwf	fsr2l,f,c
 35581   00241C  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35582   00241E  22DA               	addwfc	fsr2h,f,c
 35583   002420  EE10 F003          	lfsr	1,3
 35584   002424  5017               	movf	canSendMessage@m^(0+1280),w,c
 35585   002426  26E1               	addwf	fsr1l,f,c
 35586   002428  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35587   00242A  22E2               	addwfc	fsr1h,f,c
 35588   00242C  C4DF F4E7          	movff	indf2,indf1
 35589   002430                     
 35590                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[2] = mp->bytes[2];
 35591   002430  EE20 F004          	lfsr	2,4
 35592   002434  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35593   002436  26D9               	addwf	fsr2l,f,c
 35594   002438  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35595   00243A  22DA               	addwfc	fsr2h,f,c
 35596   00243C  EE10 F004          	lfsr	1,4
 35597   002440  5017               	movf	canSendMessage@m^(0+1280),w,c
 35598   002442  26E1               	addwf	fsr1l,f,c
 35599   002444  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35600   002446  22E2               	addwfc	fsr1h,f,c
 35601   002448  C4DF F4E7          	movff	indf2,indf1
 35602   00244C                     
 35603                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[3] = mp->bytes[3];
 35604   00244C  EE20 F005          	lfsr	2,5
 35605   002450  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35606   002452  26D9               	addwf	fsr2l,f,c
 35607   002454  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35608   002456  22DA               	addwfc	fsr2h,f,c
 35609   002458  EE10 F005          	lfsr	1,5
 35610   00245C  5017               	movf	canSendMessage@m^(0+1280),w,c
 35611   00245E  26E1               	addwf	fsr1l,f,c
 35612   002460  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35613   002462  22E2               	addwfc	fsr1h,f,c
 35614   002464  C4DF F4E7          	movff	indf2,indf1
 35615   002468                     
 35616                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[4] = mp->bytes[4];
 35617   002468  EE20 F006          	lfsr	2,6
 35618   00246C  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35619   00246E  26D9               	addwf	fsr2l,f,c
 35620   002470  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35621   002472  22DA               	addwfc	fsr2h,f,c
 35622   002474  EE10 F006          	lfsr	1,6
 35623   002478  5017               	movf	canSendMessage@m^(0+1280),w,c
 35624   00247A  26E1               	addwf	fsr1l,f,c
 35625   00247C  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35626   00247E  22E2               	addwfc	fsr1h,f,c
 35627   002480  C4DF F4E7          	movff	indf2,indf1
 35628   002484                     
 35629                           ;../../VLCBlib_PIC/can18_can_2.c: 599:                 m->bytes[5] = mp->bytes[5];
 35630   002484  EE20 F007          	lfsr	2,7
 35631   002488  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35632   00248A  26D9               	addwf	fsr2l,f,c
 35633   00248C  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35634   00248E  22DA               	addwfc	fsr2h,f,c
 35635   002490  EE10 F007          	lfsr	1,7
 35636   002494  5017               	movf	canSendMessage@m^(0+1280),w,c
 35637   002496  26E1               	addwf	fsr1l,f,c
 35638   002498  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35639   00249A  22E2               	addwfc	fsr1h,f,c
 35640   00249C  C4DF F4E7          	movff	indf2,indf1
 35641   0024A0                     
 35642                           ;../../VLCBlib_PIC/can18_can_2.c: 600:                 m->bytes[6] = mp->bytes[6];
 35643   0024A0  EE20 F008          	lfsr	2,8
 35644   0024A4  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35645   0024A6  26D9               	addwf	fsr2l,f,c
 35646   0024A8  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35647   0024AA  22DA               	addwfc	fsr2h,f,c
 35648   0024AC  EE10 F008          	lfsr	1,8
 35649   0024B0  5017               	movf	canSendMessage@m^(0+1280),w,c
 35650   0024B2  26E1               	addwf	fsr1l,f,c
 35651   0024B4  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35652   0024B6  22E2               	addwfc	fsr1h,f,c
 35653   0024B8  C4DF F4E7          	movff	indf2,indf1
 35654   0024BC                     l7522:
 35655                           
 35656                           ;../../VLCBlib_PIC/can18_can_2.c: 603:             temp = getNumRxBuffersInUse();
 35657   0024BC  ECA1  F036         	call	_getNumRxBuffersInUse	;wreg free
 35658   0024C0  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35659   0024C2  500F               	movf	??_canSendMessage^(0+1280),w,c
 35660   0024C4  6E15               	movwf	canSendMessage@temp^(0+1280),c
 35661   0024C6  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 35662   0024C8                     
 35663                           ;../../VLCBlib_PIC/can18_can_2.c: 604:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 35664   0024C8  5015               	movf	canSendMessage@temp^(0+1280),w,c
 35665   0024CA  0106               	movlb	6	; () banked
 35666   0024CC  5DB5               	subwf	(_canDiagnostics+36)& (0+255),w,b
 35667   0024CE  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 35668   0024D0  59B6               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 35669   0024D2  B0D8               	btfsc	status,0,c
 35670   0024D4  EF6E  F012         	goto	u4961
 35671   0024D8  EF70  F012         	goto	u4960
 35672   0024DC                     u4961:
 35673   0024DC  EF74  F012         	goto	l446
 35674   0024E0                     u4960:
 35675   0024E0                     
 35676                           ; BSR set to: 6
 35677                           ;../../VLCBlib_PIC/can18_can_2.c: 605:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 35678   0024E0  C515  F6B5         	movff	canSendMessage@temp,_canDiagnostics+36
 35679   0024E4  C516  F6B6         	movff	canSendMessage@temp+1,_canDiagnostics+37
 35680   0024E8                     l446:
 35681                           
 35682                           ;../../VLCBlib_PIC/can18_can_2.c: 612:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 35683   0024E8  0101               	movlb	1	; () banked
 35684   0024EA  B16C               	btfsc	108,0,b	;volatile
 35685   0024EC  EF7A  F012         	goto	u4971
 35686   0024F0  EF7C  F012         	goto	u4970
 35687   0024F4                     u4971:
 35688   0024F4  EF83  F012         	goto	l451
 35689   0024F8                     u4970:
 35690   0024F8                     
 35691                           ; BSR set to: 1
 35692                           ;../../VLCBlib_PIC/can18_can_2.c: 614:         canDiagnostics[0x05].asUint++;
 35693   0024F8  0106               	movlb	6	; () banked
 35694   0024FA  4B9B               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 35695   0024FC  2B9C               	incf	(_canDiagnostics+11)& (0+255),f,b
 35696   0024FE                     
 35697                           ; BSR set to: 6
 35698                           ;../../VLCBlib_PIC/can18_can_2.c: 615:         updateModuleErrorStatus();
 35699   0024FE  EC16  F03E         	call	_updateModuleErrorStatus	;wreg free
 35700   002502  EFC1  F013         	goto	l452
 35701   002506                     l451:
 35702                           
 35703                           ; BSR set to: 1
 35704                           ;../../VLCBlib_PIC/can18_can_2.c: 623:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 35705   002506  AD6C               	btfss	108,6,b	;volatile
 35706   002508  EF88  F012         	goto	u4981
 35707   00250C  EF8A  F012         	goto	u4980
 35708   002510                     u4981:
 35709   002510  EF8D  F012         	goto	l7536
 35710   002514                     u4980:
 35711   002514                     
 35712                           ; BSR set to: 1
 35713                           ;../../VLCBlib_PIC/can18_can_2.c: 624:         canDiagnostics[0x0C].asUint++;
 35714   002514  0106               	movlb	6	; () banked
 35715   002516  4BA9               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 35716   002518  2BAA               	incf	(_canDiagnostics+25)& (0+255),f,b
 35717   00251A                     l7536:
 35718                           
 35719                           ;../../VLCBlib_PIC/can18_can_2.c: 629:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 35720   00251A  0105               	movlb	5	; () banked
 35721   00251C  51A8               	movf	_canId& (0+255),w,b
 35722   00251E  A4D8               	btfss	status,2,c
 35723   002520  EF94  F012         	goto	u4991
 35724   002524  EF96  F012         	goto	u4990
 35725   002528                     u4991:
 35726   002528  EFA2  F012         	goto	l7542
 35727   00252C                     u4990:
 35728   00252C                     
 35729                           ; BSR set to: 5
 35730   00252C  51A5               	movf	_enumerationState& (0+255),w,b
 35731   00252E  A4D8               	btfss	status,2,c
 35732   002530  EF9C  F012         	goto	u5001
 35733   002534  EF9E  F012         	goto	u5000
 35734   002538                     u5001:
 35735   002538  EFA2  F012         	goto	l7542
 35736   00253C                     u5000:
 35737   00253C                     
 35738                           ; BSR set to: 5
 35739                           ;../../VLCBlib_PIC/can18_can_2.c: 630:         enumerationState = ENUMERATION_REQUIRED;
 35740   00253C  0E01               	movlw	1
 35741   00253E  6FA5               	movwf	_enumerationState& (0+255),b
 35742                           
 35743                           ;../../VLCBlib_PIC/can18_can_2.c: 631:         canId = 1;
 35744   002540  0E01               	movlw	1
 35745   002542  6FA8               	movwf	_canId& (0+255),b
 35746   002544                     l7542:
 35747                           
 35748                           ; BSR set to: 5
 35749                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj = (uint8_t*) C1FIFOUA2;
 35750   002544  C170 F519          	movff	368,canSendMessage@txFifoObj	;volatile
 35751   002548  C171 F51A          	movff	369,canSendMessage@txFifoObj+1	;volatile
 35752   00254C                     
 35753                           ; BSR set to: 5
 35754                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 35755   00254C  C5A8  F50F         	movff	_canId,??_canSendMessage
 35756   002550  0E7F               	movlw	127
 35757   002552  160F               	andwf	??_canSendMessage^(0+1280),f,c
 35758   002554  EE20 F001          	lfsr	2,1
 35759   002558  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35760   00255A  26D9               	addwf	fsr2l,f,c
 35761   00255C  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35762   00255E  22DA               	addwfc	fsr2h,f,c
 35763   002560  50DF               	movf	indf2,w,c
 35764   002562  6E10               	movwf	(??_canSendMessage+1)^(0+1280),c
 35765   002564  6A11               	clrf	(??_canSendMessage+2)^(0+1280),c
 35766   002566  0E59               	movlw	low _priorities
 35767   002568  2410               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 35768   00256A  6EF6               	movwf	tblptrl,c
 35769   00256C  0EFE               	movlw	high _priorities
 35770   00256E  2011               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 35771   002570  6EF7               	movwf	tblptrh,c
 35772   002572                     	if	1	;There are 3 active tblptr bytes
 35773   002572  6AF8               	clrf	tblptru,c
 35774   002574  0E00               	movlw	low (__mediumconst shr (0+16))
 35775   002576  22F8               	addwfc	tblptru,f,c
 35776   002578                     	endif
 35777   002578  0008               	tblrd		*
 35778   00257A  50F5               	movf	tablat,w,c
 35779   00257C  6E12               	movwf	(??_canSendMessage+3)^(0+1280),c
 35780   00257E  6A13               	clrf	(??_canSendMessage+4)^(0+1280),c
 35781   002580  0EA0               	movlw	low _canPri
 35782   002582  2412               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 35783   002584  6EF6               	movwf	tblptrl,c
 35784   002586  0EFF               	movlw	high _canPri
 35785   002588  2013               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 35786   00258A  6EF7               	movwf	tblptrh,c
 35787   00258C                     	if	1	;There are 3 active tblptr bytes
 35788   00258C  6AF8               	clrf	tblptru,c
 35789   00258E  0E00               	movlw	low (__mediumconst shr (0+16))
 35790   002590  22F8               	addwfc	tblptru,f,c
 35791   002592                     	endif
 35792   002592  0008               	tblrd		*
 35793   002594  C4F5 F514          	movff	tablat,??_canSendMessage+5
 35794   002598  0E01               	movlw	1
 35795   00259A  1614               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 35796   00259C  0E00               	movlw	0
 35797   00259E  B014               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 35798   0025A0  0E80               	movlw	128
 35799   0025A2  6E14               	movwf	(??_canSendMessage+5)^(0+1280),c
 35800   0025A4  5014               	movf	(??_canSendMessage+5)^(0+1280),w,c
 35801   0025A6  100F               	iorwf	??_canSendMessage^(0+1280),w,c
 35802   0025A8  C519  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 35803   0025AC  C51A  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 35804   0025B0  6EDF               	movwf	indf2,c
 35805   0025B2                     
 35806                           ; BSR set to: 5
 35807                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 35808   0025B2  EE20 F001          	lfsr	2,1
 35809   0025B6  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35810   0025B8  26D9               	addwf	fsr2l,f,c
 35811   0025BA  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35812   0025BC  22DA               	addwfc	fsr2h,f,c
 35813   0025BE  EE10 F001          	lfsr	1,1
 35814   0025C2  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35815   0025C4  26E1               	addwf	fsr1l,f,c
 35816   0025C6  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35817   0025C8  22E2               	addwfc	fsr1h,f,c
 35818   0025CA  50E7               	movf	indf1,w,c
 35819   0025CC  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35820   0025CE  6A10               	clrf	(??_canSendMessage+1)^(0+1280),c
 35821   0025D0  0E59               	movlw	low _priorities
 35822   0025D2  240F               	addwf	??_canSendMessage^(0+1280),w,c
 35823   0025D4  6EF6               	movwf	tblptrl,c
 35824   0025D6  0EFE               	movlw	high _priorities
 35825   0025D8  2010               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 35826   0025DA  6EF7               	movwf	tblptrh,c
 35827   0025DC                     	if	1	;There are 3 active tblptr bytes
 35828   0025DC  6AF8               	clrf	tblptru,c
 35829   0025DE  0E00               	movlw	low (__mediumconst shr (0+16))
 35830   0025E0  22F8               	addwfc	tblptru,f,c
 35831   0025E2                     	endif
 35832   0025E2  0008               	tblrd		*
 35833   0025E4  50F5               	movf	tablat,w,c
 35834   0025E6  6E11               	movwf	(??_canSendMessage+2)^(0+1280),c
 35835   0025E8  6A12               	clrf	(??_canSendMessage+3)^(0+1280),c
 35836   0025EA  0EA0               	movlw	low _canPri
 35837   0025EC  2411               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 35838   0025EE  6EF6               	movwf	tblptrl,c
 35839   0025F0  0EFF               	movlw	high _canPri
 35840   0025F2  2012               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 35841   0025F4  6EF7               	movwf	tblptrh,c
 35842   0025F6                     	if	1	;There are 3 active tblptr bytes
 35843   0025F6  6AF8               	clrf	tblptru,c
 35844   0025F8  0E00               	movlw	low (__mediumconst shr (0+16))
 35845   0025FA  22F8               	addwfc	tblptru,f,c
 35846   0025FC                     	endif
 35847   0025FC  0008               	tblrd		*
 35848   0025FE  C4F5 F513          	movff	tablat,??_canSendMessage+4
 35849   002602  90D8               	bcf	status,0,c
 35850   002604  3013               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 35851   002606  6EDF               	movwf	indf2,c
 35852   002608                     
 35853                           ; BSR set to: 5
 35854                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[4] = (mp->len&0xF);
 35855   002608  EE20 F004          	lfsr	2,4
 35856   00260C  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35857   00260E  26D9               	addwf	fsr2l,f,c
 35858   002610  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35859   002612  22DA               	addwfc	fsr2h,f,c
 35860   002614  C50D  F4E1         	movff	canSendMessage@mp,fsr1l
 35861   002618  C50E  F4E2         	movff	canSendMessage@mp+1,fsr1h
 35862   00261C  50E7               	movf	indf1,w,c
 35863   00261E  0B0F               	andlw	15
 35864   002620  6EDF               	movwf	indf2,c
 35865   002622                     
 35866                           ; BSR set to: 5
 35867                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[5] = 0;
 35868   002622  EE20 F005          	lfsr	2,5
 35869   002626  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35870   002628  26D9               	addwf	fsr2l,f,c
 35871   00262A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35872   00262C  22DA               	addwfc	fsr2h,f,c
 35873   00262E  6ADF               	clrf	indf2,c
 35874   002630                     
 35875                           ; BSR set to: 5
 35876                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[6] = 0;
 35877   002630  EE20 F006          	lfsr	2,6
 35878   002634  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35879   002636  26D9               	addwf	fsr2l,f,c
 35880   002638  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35881   00263A  22DA               	addwfc	fsr2h,f,c
 35882   00263C  6ADF               	clrf	indf2,c
 35883   00263E                     
 35884                           ; BSR set to: 5
 35885                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[7] = 0;
 35886   00263E  EE20 F007          	lfsr	2,7
 35887   002642  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35888   002644  26D9               	addwf	fsr2l,f,c
 35889   002646  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35890   002648  22DA               	addwfc	fsr2h,f,c
 35891   00264A  6ADF               	clrf	indf2,c
 35892   00264C                     
 35893                           ; BSR set to: 5
 35894                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[8] = (uint8_t)(mp->opc);
 35895   00264C  EE20 F001          	lfsr	2,1
 35896   002650  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35897   002652  26D9               	addwf	fsr2l,f,c
 35898   002654  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35899   002656  22DA               	addwfc	fsr2h,f,c
 35900   002658  EE10 F008          	lfsr	1,8
 35901   00265C  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35902   00265E  26E1               	addwf	fsr1l,f,c
 35903   002660  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35904   002662  22E2               	addwfc	fsr1h,f,c
 35905   002664  C4DF F4E7          	movff	indf2,indf1
 35906   002668                     
 35907                           ; BSR set to: 5
 35908                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[9] = mp->bytes[0];
 35909   002668  EE20 F002          	lfsr	2,2
 35910   00266C  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35911   00266E  26D9               	addwf	fsr2l,f,c
 35912   002670  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35913   002672  22DA               	addwfc	fsr2h,f,c
 35914   002674  EE10 F009          	lfsr	1,9
 35915   002678  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35916   00267A  26E1               	addwf	fsr1l,f,c
 35917   00267C  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35918   00267E  22E2               	addwfc	fsr1h,f,c
 35919   002680  C4DF F4E7          	movff	indf2,indf1
 35920   002684                     
 35921                           ; BSR set to: 5
 35922                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[10] = mp->bytes[1];
 35923   002684  EE20 F003          	lfsr	2,3
 35924   002688  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35925   00268A  26D9               	addwf	fsr2l,f,c
 35926   00268C  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35927   00268E  22DA               	addwfc	fsr2h,f,c
 35928   002690  EE10 F00A          	lfsr	1,10
 35929   002694  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35930   002696  26E1               	addwf	fsr1l,f,c
 35931   002698  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35932   00269A  22E2               	addwfc	fsr1h,f,c
 35933   00269C  C4DF F4E7          	movff	indf2,indf1
 35934   0026A0                     
 35935                           ; BSR set to: 5
 35936                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[11] = mp->bytes[2];
 35937   0026A0  EE20 F004          	lfsr	2,4
 35938   0026A4  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35939   0026A6  26D9               	addwf	fsr2l,f,c
 35940   0026A8  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35941   0026AA  22DA               	addwfc	fsr2h,f,c
 35942   0026AC  EE10 F00B          	lfsr	1,11
 35943   0026B0  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35944   0026B2  26E1               	addwf	fsr1l,f,c
 35945   0026B4  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35946   0026B6  22E2               	addwfc	fsr1h,f,c
 35947   0026B8  C4DF F4E7          	movff	indf2,indf1
 35948   0026BC                     
 35949                           ; BSR set to: 5
 35950                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[12] = mp->bytes[3];
 35951   0026BC  EE20 F005          	lfsr	2,5
 35952   0026C0  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35953   0026C2  26D9               	addwf	fsr2l,f,c
 35954   0026C4  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35955   0026C6  22DA               	addwfc	fsr2h,f,c
 35956   0026C8  EE10 F00C          	lfsr	1,12
 35957   0026CC  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35958   0026CE  26E1               	addwf	fsr1l,f,c
 35959   0026D0  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35960   0026D2  22E2               	addwfc	fsr1h,f,c
 35961   0026D4  C4DF F4E7          	movff	indf2,indf1
 35962   0026D8                     
 35963                           ; BSR set to: 5
 35964                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[13] = mp->bytes[4];
 35965   0026D8  EE20 F006          	lfsr	2,6
 35966   0026DC  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35967   0026DE  26D9               	addwf	fsr2l,f,c
 35968   0026E0  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35969   0026E2  22DA               	addwfc	fsr2h,f,c
 35970   0026E4  EE10 F00D          	lfsr	1,13
 35971   0026E8  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35972   0026EA  26E1               	addwf	fsr1l,f,c
 35973   0026EC  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35974   0026EE  22E2               	addwfc	fsr1h,f,c
 35975   0026F0  C4DF F4E7          	movff	indf2,indf1
 35976   0026F4                     
 35977                           ; BSR set to: 5
 35978                           ;../../VLCBlib_PIC/can18_can_2.c: 648:     txFifoObj[14] = mp->bytes[5];
 35979   0026F4  EE20 F007          	lfsr	2,7
 35980   0026F8  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35981   0026FA  26D9               	addwf	fsr2l,f,c
 35982   0026FC  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35983   0026FE  22DA               	addwfc	fsr2h,f,c
 35984   002700  EE10 F00E          	lfsr	1,14
 35985   002704  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35986   002706  26E1               	addwf	fsr1l,f,c
 35987   002708  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35988   00270A  22E2               	addwfc	fsr1h,f,c
 35989   00270C  C4DF F4E7          	movff	indf2,indf1
 35990   002710                     
 35991                           ; BSR set to: 5
 35992                           ;../../VLCBlib_PIC/can18_can_2.c: 649:     txFifoObj[15] = mp->bytes[6];
 35993   002710  EE20 F008          	lfsr	2,8
 35994   002714  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35995   002716  26D9               	addwf	fsr2l,f,c
 35996   002718  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35997   00271A  22DA               	addwfc	fsr2h,f,c
 35998   00271C  EE10 F00F          	lfsr	1,15
 35999   002720  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36000   002722  26E1               	addwf	fsr1l,f,c
 36001   002724  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36002   002726  22E2               	addwfc	fsr1h,f,c
 36003   002728  C4DF F4E7          	movff	indf2,indf1
 36004   00272C                     
 36005                           ; BSR set to: 5
 36006                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     canDiagnostics[0x06].asUint++;
 36007   00272C  0106               	movlb	6	; () banked
 36008   00272E  4B9D               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 36009   002730  2B9E               	incf	(_canDiagnostics+13)& (0+255),f,b
 36010   002732                     
 36011                           ; BSR set to: 6
 36012                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     C1FIFOCON2H |= 0x1;
 36013   002732  0101               	movlb	1	; () banked
 36014   002734  8169               	bsf	105,0,b	;volatile
 36015   002736                     
 36016                           ; BSR set to: 1
 36017                           ;../../VLCBlib_PIC/can18_can_2.c: 656:     temp = getNumTxBuffersInUse();
 36018   002736  ECB1  F035         	call	_getNumTxBuffersInUse	;wreg free
 36019   00273A  6E0F               	movwf	??_canSendMessage^(0+1280),c
 36020   00273C  500F               	movf	??_canSendMessage^(0+1280),w,c
 36021   00273E  6E15               	movwf	canSendMessage@temp^(0+1280),c
 36022   002740  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 36023   002742                     
 36024                           ;../../VLCBlib_PIC/can18_can_2.c: 657:     if (temp > canDiagnostics[0x11].asUint) {
 36025   002742  5015               	movf	canSendMessage@temp^(0+1280),w,c
 36026   002744  0106               	movlb	6	; () banked
 36027   002746  5DB3               	subwf	(_canDiagnostics+34)& (0+255),w,b
 36028   002748  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 36029   00274A  59B4               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 36030   00274C  B0D8               	btfsc	status,0,c
 36031   00274E  EFAB  F013         	goto	u5011
 36032   002752  EFAD  F013         	goto	u5010
 36033   002756                     u5011:
 36034   002756  EFB1  F013         	goto	l7582
 36035   00275A                     u5010:
 36036   00275A                     
 36037                           ; BSR set to: 6
 36038                           ;../../VLCBlib_PIC/can18_can_2.c: 658:         canDiagnostics[0x11].asUint = temp;
 36039   00275A  C515  F6B3         	movff	canSendMessage@temp,_canDiagnostics+34
 36040   00275E  C516  F6B4         	movff	canSendMessage@temp+1,_canDiagnostics+35
 36041   002762                     l7582:
 36042                           
 36043                           ; BSR set to: 6
 36044                           ;../../VLCBlib_PIC/can18_can_2.c: 661:     if (canId == 0) {
 36045   002762  0105               	movlb	5	; () banked
 36046   002764  51A8               	movf	_canId& (0+255),w,b
 36047   002766  A4D8               	btfss	status,2,c
 36048   002768  EFB8  F013         	goto	u5021
 36049   00276C  EFBA  F013         	goto	u5020
 36050   002770                     u5021:
 36051   002770  EFBF  F013         	goto	l7586
 36052   002774                     u5020:
 36053   002774                     
 36054                           ; BSR set to: 5
 36055                           ;../../VLCBlib_PIC/can18_can_2.c: 663:         startEnumeration(1);
 36056   002774  0E01               	movlw	1
 36057   002776  EC4C  F037         	call	_startEnumeration
 36058                           
 36059                           ;../../VLCBlib_PIC/can18_can_2.c: 664:     } else {
 36060   00277A  EFC1  F013         	goto	l452
 36061   00277E                     l7586:
 36062                           
 36063                           ; BSR set to: 5
 36064                           ;../../VLCBlib_PIC/can18_can_2.c: 666:         C1FIFOCON2H |= 0x2;
 36065   00277E  0101               	movlb	1	; () banked
 36066   002780  8369               	bsf	105,1,b	;volatile
 36067   002782                     l452:
 36068   002782  0012               	return		;funcret
 36069   002784                     __end_of_canSendMessage:
 36070                           	callstack 0
 36071                           
 36072 ;; *************** function _isEvent *****************
 36073 ;; Defined at:
 36074 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 36075 ;; Parameters:    Size  Location     Type
 36076 ;;  opc             1    wreg     unsigned char 
 36077 ;; Auto vars:     Size  Location     Type
 36078 ;;  opc             1    1[COMRAM] unsigned char 
 36079 ;; Return value:  Size  Location     Type
 36080 ;;                  1    wreg      enum E23474
 36081 ;; Registers used:
 36082 ;;		wreg, status,2, status,0
 36083 ;; Tracked objects:
 36084 ;;		On entry : 0/0
 36085 ;;		On exit  : 0/0
 36086 ;;		Unchanged: 0/0
 36087 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36092 ;;Total ram usage:        2 bytes
 36093 ;; Hardware stack levels used: 1
 36094 ;; Hardware stack levels required when called: 1
 36095 ;; This function calls:
 36096 ;;		Nothing
 36097 ;; This function is called by:
 36098 ;;		_canSendMessage
 36099 ;; This function uses a non-reentrant model
 36100 ;;
 36101                           
 36102                           	psect	text89
 36103   007758                     __ptext89:
 36104                           	callstack 0
 36105   007758                     _isEvent:
 36106                           	callstack 119
 36107                           
 36108                           ;incstack = 0
 36109                           ;isEvent@opc stored from wreg
 36110   007758  6E02               	movwf	isEvent@opc^(0+1280),c
 36111   00775A                     
 36112                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 36113   00775A  6A01               	clrf	_isEvent$5102^(0+1280),c
 36114   00775C  5002               	movf	isEvent@opc^(0+1280),w,c
 36115   00775E  0B90               	andlw	144
 36116   007760  0A90               	xorlw	144
 36117   007762  A4D8               	btfss	status,2,c
 36118   007764  EFB6  F03B         	goto	u4781
 36119   007768  EFB8  F03B         	goto	u4780
 36120   00776C                     u4781:
 36121   00776C  EFC5  F03B         	goto	l1838
 36122   007770                     u4780:
 36123   007770  5002               	movf	isEvent@opc^(0+1280),w,c
 36124   007772  0AFF               	xorlw	255
 36125   007774  0B06               	andlw	6
 36126   007776  0A06               	xorlw	6
 36127   007778  A4D8               	btfss	status,2,c
 36128   00777A  EFC1  F03B         	goto	u4791
 36129   00777E  EFC3  F03B         	goto	u4790
 36130   007782                     u4791:
 36131   007782  EFC5  F03B         	goto	l1838
 36132   007786                     u4790:
 36133   007786  0E01               	movlw	1
 36134   007788  6E01               	movwf	_isEvent$5102^(0+1280),c
 36135   00778A                     l1838:
 36136   00778A  5001               	movf	_isEvent$5102^(0+1280),w,c
 36137   00778C  0012               	return		;funcret
 36138   00778E                     __end_of_isEvent:
 36139                           	callstack 0
 36140                           
 36141 ;; *************** function _have *****************
 36142 ;; Defined at:
 36143 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 36144 ;; Parameters:    Size  Location     Type
 36145 ;;  id              1    wreg     unsigned char 
 36146 ;; Auto vars:     Size  Location     Type
 36147 ;;  id              1    2[COMRAM] unsigned char 
 36148 ;;  i               1    3[COMRAM] unsigned char 
 36149 ;; Return value:  Size  Location     Type
 36150 ;;                  1    wreg      enum E23601
 36151 ;; Registers used:
 36152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36153 ;; Tracked objects:
 36154 ;;		On entry : 0/0
 36155 ;;		On exit  : 0/0
 36156 ;;		Unchanged: 0/0
 36157 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36162 ;;Total ram usage:        4 bytes
 36163 ;; Hardware stack levels used: 1
 36164 ;; Hardware stack levels required when called: 1
 36165 ;; This function calls:
 36166 ;;		Nothing
 36167 ;; This function is called by:
 36168 ;;		_canSendMessage
 36169 ;;		_getParameterFlags
 36170 ;;		_getParameter
 36171 ;; This function uses a non-reentrant model
 36172 ;;
 36173                           
 36174                           	psect	text90
 36175   006746                     __ptext90:
 36176                           	callstack 0
 36177   006746                     _have:
 36178                           	callstack 119
 36179                           
 36180                           ;incstack = 0
 36181                           ;have@id stored from wreg
 36182   006746  6E03               	movwf	have@id^(0+1280),c
 36183   006748                     
 36184                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<6; i++) {
 36185   006748  6A04               	clrf	have@i^(0+1280),c
 36186   00674A                     l7390:
 36187                           
 36188                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 36189   00674A  5004               	movf	have@i^(0+1280),w,c
 36190   00674C  0D02               	mullw	2
 36191   00674E  0E89               	movlw	low _services
 36192   006750  24F3               	addwf	243,w,c
 36193   006752  6EF6               	movwf	tblptrl,c
 36194   006754  0EFF               	movlw	high _services
 36195   006756  20F4               	addwfc	244,w,c
 36196   006758  6EF7               	movwf	tblptrh,c
 36197   00675A                     	if	1	;There are 3 active tblptr bytes
 36198   00675A  6AF8               	clrf	tblptru,c
 36199   00675C  0E00               	movlw	low (__mediumconst shr (0+16))
 36200   00675E  22F8               	addwfc	tblptru,f,c
 36201   006760                     	endif
 36202   006760  0009               	tblrd		*+
 36203   006762  50F5               	movf	tablat,w,c
 36204   006764  0009               	tblrd		*+
 36205   006766  10F5               	iorwf	tablat,w,c
 36206   006768  B4D8               	btfsc	status,2,c
 36207   00676A  EFB9  F033         	goto	u4801
 36208   00676E  EFBB  F033         	goto	u4800
 36209   006772                     u4801:
 36210   006772  EFDE  F033         	goto	l7398
 36211   006776                     u4800:
 36212   006776  5004               	movf	have@i^(0+1280),w,c
 36213   006778  0D02               	mullw	2
 36214   00677A  0E89               	movlw	low _services
 36215   00677C  24F3               	addwf	243,w,c
 36216   00677E  6EF6               	movwf	tblptrl,c
 36217   006780  0EFF               	movlw	high _services
 36218   006782  20F4               	addwfc	244,w,c
 36219   006784  6EF7               	movwf	tblptrh,c
 36220   006786                     	if	1	;There are 3 active tblptr bytes
 36221   006786  6AF8               	clrf	tblptru,c
 36222   006788  0E00               	movlw	low (__mediumconst shr (0+16))
 36223   00678A  22F8               	addwfc	tblptru,f,c
 36224   00678C                     	endif
 36225   00678C  0009               	tblrd		*+
 36226   00678E  C4F5 F501          	movff	tablat,??_have
 36227   006792  0009               	tblrd		*+
 36228   006794  C4F5 F502          	movff	tablat,??_have+1
 36229   006798  C501  F4F6         	movff	??_have,tblptrl
 36230   00679C  C502  F4F7         	movff	??_have+1,tblptrh
 36231   0067A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36232   0067A0  6AF8               	clrf	tblptru,c
 36233   0067A2                     	endif
 36234   0067A2                     	if	0	;tblptru may be non-zero
 36235   0067A2                     	endif
 36236   0067A2  0008               	tblrd		*
 36237   0067A4  50F5               	movf	tablat,w,c
 36238   0067A6  1803               	xorwf	have@id^(0+1280),w,c
 36239   0067A8  A4D8               	btfss	status,2,c
 36240   0067AA  EFD9  F033         	goto	u4811
 36241   0067AE  EFDB  F033         	goto	u4810
 36242   0067B2                     u4811:
 36243   0067B2  EFDE  F033         	goto	l7398
 36244   0067B6                     u4810:
 36245   0067B6                     
 36246                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 36247   0067B6  0E01               	movlw	1
 36248   0067B8  EFE8  F033         	goto	l1769
 36249   0067BC                     l7398:
 36250                           
 36251                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 36252   0067BC  2A04               	incf	have@i^(0+1280),f,c
 36253   0067BE  0E05               	movlw	5
 36254   0067C0  6404               	cpfsgt	have@i^(0+1280),c
 36255   0067C2  EFE5  F033         	goto	u4821
 36256   0067C6  EFE7  F033         	goto	u4820
 36257   0067CA                     u4821:
 36258   0067CA  EFA5  F033         	goto	l7390
 36259   0067CE                     u4820:
 36260   0067CE                     
 36261                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 36262   0067CE  0E00               	movlw	0
 36263   0067D0                     l1769:
 36264   0067D0  0012               	return		;funcret
 36265   0067D2                     __end_of_have:
 36266                           	callstack 0
 36267                           
 36268 ;; *************** function _getNumTxBuffersInUse *****************
 36269 ;; Defined at:
 36270 ;;		line 532 in file "../../VLCBlib_PIC/can18_can_2.c"
 36271 ;; Parameters:    Size  Location     Type
 36272 ;;		None
 36273 ;; Auto vars:     Size  Location     Type
 36274 ;;  i16             2    4[COMRAM] short 
 36275 ;; Return value:  Size  Location     Type
 36276 ;;                  1    wreg      unsigned char 
 36277 ;; Registers used:
 36278 ;;		wreg, status,2, status,0
 36279 ;; Tracked objects:
 36280 ;;		On entry : 0/0
 36281 ;;		On exit  : 0/0
 36282 ;;		Unchanged: 0/0
 36283 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36286 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36287 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36288 ;;Total ram usage:        6 bytes
 36289 ;; Hardware stack levels used: 1
 36290 ;; Hardware stack levels required when called: 1
 36291 ;; This function calls:
 36292 ;;		Nothing
 36293 ;; This function is called by:
 36294 ;;		_canGetDiagnostic
 36295 ;;		_canSendMessage
 36296 ;; This function uses a non-reentrant model
 36297 ;;
 36298                           
 36299                           	psect	text91
 36300   006B62                     __ptext91:
 36301                           	callstack 0
 36302   006B62                     _getNumTxBuffersInUse:
 36303                           	callstack 119
 36304   006B62                     
 36305                           ;../../VLCBlib_PIC/can18_can_2.c: 533:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 36306   006B62  0101               	movlb	1	; () banked
 36307   006B64  B16C               	btfsc	108,0,b	;volatile
 36308   006B66  EFB7  F035         	goto	u4721
 36309   006B6A  EFB9  F035         	goto	u4720
 36310   006B6E                     u4721:
 36311   006B6E  EFBC  F035         	goto	l7350
 36312   006B72                     u4720:
 36313   006B72                     
 36314                           ; BSR set to: 1
 36315                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         return 32;
 36316   006B72  0E20               	movlw	32
 36317   006B74  EFED  F035         	goto	l435
 36318   006B78                     l7350:
 36319                           
 36320                           ; BSR set to: 1
 36321                           ;../../VLCBlib_PIC/can18_can_2.c: 536:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 538:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 36322   006B78  0E00               	movlw	0
 36323   006B7A  2570               	addwf	112,w,b	;volatile
 36324   006B7C  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36325   006B7E  0EC4               	movlw	196
 36326   006B80  2171               	addwfc	113,w,b	;volatile
 36327   006B82  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 36328   006B84  0EFF               	movlw	255
 36329   006B86  2172               	addwfc	114,w,b	;volatile
 36330   006B88  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 36331   006B8A  0EFF               	movlw	255
 36332   006B8C  2173               	addwfc	115,w,b	;volatile
 36333   006B8E  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 36334   006B90  0E05               	movlw	5
 36335   006B92  EFD0  F035         	goto	u4730
 36336   006B96                     u4735:
 36337   006B96  90D8               	bcf	status,0,c
 36338   006B98  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 36339   006B9A  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 36340   006B9C  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 36341   006B9E  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 36342   006BA0                     u4730:
 36343   006BA0  2EE8               	decfsz	wreg,f,c
 36344   006BA2  EFCB  F035         	goto	u4735
 36345   006BA6  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 36346   006BAA  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 36347                           
 36348                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 36349   006BAE  516D               	movf	109,w,b	;volatile
 36350   006BB0  0B1F               	andlw	31
 36351   006BB2  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36352   006BB4  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 36353   006BB6  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36354   006BB8  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 36355   006BBA  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36356   006BBC  A0D8               	btfss	status,0,c
 36357   006BBE  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36358   006BC0  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 36359                           
 36360                           ;../../VLCBlib_PIC/can18_can_2.c: 540:         if (i16 < 0) i16 += 32;
 36361   006BC2  BE06               	btfsc	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 36362   006BC4  EFE8  F035         	goto	u4740
 36363   006BC8  EFE6  F035         	goto	u4741
 36364   006BCC                     u4741:
 36365   006BCC  EFEC  F035         	goto	l7354
 36366   006BD0                     u4740:
 36367   006BD0                     
 36368                           ; BSR set to: 1
 36369   006BD0  0E20               	movlw	32
 36370   006BD2  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 36371   006BD4  0E00               	movlw	0
 36372   006BD6  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 36373   006BD8                     l7354:
 36374                           
 36375                           ; BSR set to: 1
 36376                           ;../../VLCBlib_PIC/can18_can_2.c: 541:         return (uint8_t)i16;
 36377   006BD8  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36378   006BDA                     l435:
 36379                           
 36380                           ; BSR set to: 1
 36381   006BDA  0012               	return		;funcret
 36382   006BDC                     __end_of_getNumTxBuffersInUse:
 36383                           	callstack 0
 36384                           
 36385 ;; *************** function _getNumRxBuffersInUse *****************
 36386 ;; Defined at:
 36387 ;;		line 550 in file "../../VLCBlib_PIC/can18_can_2.c"
 36388 ;; Parameters:    Size  Location     Type
 36389 ;;		None
 36390 ;; Auto vars:     Size  Location     Type
 36391 ;;  i16             2    4[COMRAM] short 
 36392 ;; Return value:  Size  Location     Type
 36393 ;;                  1    wreg      unsigned char 
 36394 ;; Registers used:
 36395 ;;		wreg, status,2, status,0
 36396 ;; Tracked objects:
 36397 ;;		On entry : 0/0
 36398 ;;		On exit  : 0/0
 36399 ;;		Unchanged: 0/0
 36400 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36403 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36404 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36405 ;;Total ram usage:        6 bytes
 36406 ;; Hardware stack levels used: 1
 36407 ;; Hardware stack levels required when called: 1
 36408 ;; This function calls:
 36409 ;;		Nothing
 36410 ;; This function is called by:
 36411 ;;		_canGetDiagnostic
 36412 ;;		_canSendMessage
 36413 ;;		_canReceiveMessage
 36414 ;; This function uses a non-reentrant model
 36415 ;;
 36416                           
 36417                           	psect	text92
 36418   006D42                     __ptext92:
 36419                           	callstack 0
 36420   006D42                     _getNumRxBuffersInUse:
 36421                           	callstack 119
 36422   006D42                     
 36423                           ;../../VLCBlib_PIC/can18_can_2.c: 551:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 36424   006D42  0101               	movlb	1	; () banked
 36425   006D44  A578               	btfss	120,2,b	;volatile
 36426   006D46  EFA7  F036         	goto	u4751
 36427   006D4A  EFA9  F036         	goto	u4750
 36428   006D4E                     u4751:
 36429   006D4E  EFAC  F036         	goto	l7366
 36430   006D52                     u4750:
 36431   006D52                     
 36432                           ; BSR set to: 1
 36433                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         return 32;
 36434   006D52  0E20               	movlw	32
 36435   006D54  EFDA  F036         	goto	l441
 36436   006D58                     l7366:
 36437                           
 36438                           ; BSR set to: 1
 36439                           ;../../VLCBlib_PIC/can18_can_2.c: 554:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 556:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 36440   006D58  517C               	movf	124,w,b	;volatile
 36441   006D5A  0800               	sublw	0
 36442   006D5C  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36443   006D5E  0E3E               	movlw	62
 36444   006D60  557D               	subfwb	125,w,b	;volatile
 36445   006D62  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 36446   006D64  0E00               	movlw	0
 36447   006D66  557E               	subfwb	126,w,b	;volatile
 36448   006D68  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 36449   006D6A  0E00               	movlw	0
 36450   006D6C  557F               	subfwb	127,w,b	;volatile
 36451   006D6E  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 36452   006D70  0E05               	movlw	5
 36453   006D72  EFC0  F036         	goto	u4760
 36454   006D76                     u4765:
 36455   006D76  90D8               	bcf	status,0,c
 36456   006D78  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 36457   006D7A  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 36458   006D7C  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 36459   006D7E  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 36460   006D80                     u4760:
 36461   006D80  2EE8               	decfsz	wreg,f,c
 36462   006D82  EFBB  F036         	goto	u4765
 36463   006D86  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 36464   006D8A  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 36465                           
 36466                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 36467   006D8E  5179               	movf	121,w,b	;volatile
 36468   006D90  0B1F               	andlw	31
 36469   006D92  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36470   006D94  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 36471   006D96  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36472   006D98  0E00               	movlw	0
 36473   006D9A  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36474                           
 36475                           ;../../VLCBlib_PIC/can18_can_2.c: 558:         if (i16 < 0) i16 += 32;
 36476   006D9C  BE06               	btfsc	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 36477   006D9E  EFD5  F036         	goto	u4770
 36478   006DA2  EFD3  F036         	goto	u4771
 36479   006DA6                     u4771:
 36480   006DA6  EFD9  F036         	goto	l7370
 36481   006DAA                     u4770:
 36482   006DAA                     
 36483                           ; BSR set to: 1
 36484   006DAA  0E20               	movlw	32
 36485   006DAC  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36486   006DAE  0E00               	movlw	0
 36487   006DB0  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36488   006DB2                     l7370:
 36489                           
 36490                           ; BSR set to: 1
 36491                           ;../../VLCBlib_PIC/can18_can_2.c: 559:         return (uint8_t) i16;
 36492   006DB2  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 36493   006DB4                     l441:
 36494                           
 36495                           ; BSR set to: 1
 36496   006DB4  0012               	return		;funcret
 36497   006DB6                     __end_of_getNumRxBuffersInUse:
 36498                           	callstack 0
 36499                           
 36500 ;; *************** function _getNextWriteMessage *****************
 36501 ;; Defined at:
 36502 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 36503 ;; Parameters:    Size  Location     Type
 36504 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 36505 ;;		 -> rxQueue(5), 
 36506 ;; Auto vars:     Size  Location     Type
 36507 ;;  wr              1   11[COMRAM] unsigned char 
 36508 ;; Return value:  Size  Location     Type
 36509 ;;                  2    0[COMRAM] PTR struct Message
 36510 ;; Registers used:
 36511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36512 ;; Tracked objects:
 36513 ;;		On entry : 0/0
 36514 ;;		On exit  : 0/0
 36515 ;;		Unchanged: 0/0
 36516 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36519 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36520 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36521 ;;Total ram usage:       12 bytes
 36522 ;; Hardware stack levels used: 1
 36523 ;; Hardware stack levels required when called: 1
 36524 ;; This function calls:
 36525 ;;		Nothing
 36526 ;; This function is called by:
 36527 ;;		_canSendMessage
 36528 ;; This function uses a non-reentrant model
 36529 ;;
 36530                           
 36531                           	psect	text93
 36532   0051FC                     __ptext93:
 36533                           	callstack 0
 36534   0051FC                     _getNextWriteMessage:
 36535                           	callstack 119
 36536   0051FC  EE20 F002          	lfsr	2,2
 36537   005200  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36538   005202  26D9               	addwf	fsr2l,f,c
 36539   005204  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36540   005206  22DA               	addwfc	fsr2h,f,c
 36541   005208  50DF               	movf	indf2,w,c
 36542   00520A  6E03               	movwf	??_getNextWriteMessage^(0+1280),c
 36543   00520C  6A04               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 36544   00520E  EE20 F004          	lfsr	2,4
 36545   005212  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36546   005214  26D9               	addwf	fsr2l,f,c
 36547   005216  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36548   005218  22DA               	addwfc	fsr2h,f,c
 36549   00521A  50DF               	movf	indf2,w,c
 36550   00521C  6E05               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 36551   00521E  0EFF               	movlw	255
 36552   005220  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36553   005222  6E06               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 36554   005224  6A07               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 36555   005226  0EFF               	movlw	255
 36556   005228  2207               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 36557   00522A  EE20 F003          	lfsr	2,3
 36558   00522E  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36559   005230  26D9               	addwf	fsr2l,f,c
 36560   005232  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36561   005234  22DA               	addwfc	fsr2h,f,c
 36562   005236  50DF               	movf	indf2,w,c
 36563   005238  6E08               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 36564   00523A  6A09               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 36565   00523C  0E01               	movlw	1
 36566   00523E  2608               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 36567   005240  0E00               	movlw	0
 36568   005242  2209               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 36569   005244  5006               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 36570   005246  1408               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 36571   005248  6E0A               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 36572   00524A  5007               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 36573   00524C  1409               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 36574   00524E  6E0B               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 36575   005250  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36576   005252  180A               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 36577   005254  E107               	bnz	u4831
 36578   005256  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36579   005258  180B               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 36580   00525A  A4D8               	btfss	status,2,c
 36581   00525C  EF32  F029         	goto	u4831
 36582   005260  EF34  F029         	goto	u4830
 36583   005264                     u4831:
 36584   005264  EF3A  F029         	goto	l7412
 36585   005268                     u4830:
 36586   005268  0E00               	movlw	0
 36587   00526A  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36588   00526C  0E00               	movlw	0
 36589   00526E  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36590   005270  EF79  F029         	goto	l966
 36591   005274                     l7412:
 36592   005274  EE20 F003          	lfsr	2,3
 36593   005278  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36594   00527A  26D9               	addwf	fsr2l,f,c
 36595   00527C  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36596   00527E  22DA               	addwfc	fsr2h,f,c
 36597   005280  50DF               	movf	indf2,w,c
 36598   005282  6E0C               	movwf	getNextWriteMessage@wr^(0+1280),c
 36599   005284  EE20 F003          	lfsr	2,3
 36600   005288  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36601   00528A  26D9               	addwf	fsr2l,f,c
 36602   00528C  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36603   00528E  22DA               	addwfc	fsr2h,f,c
 36604   005290  2ADF               	incf	indf2,f,c
 36605   005292  EE20 F004          	lfsr	2,4
 36606   005296  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36607   005298  26D9               	addwf	fsr2l,f,c
 36608   00529A  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36609   00529C  22DA               	addwfc	fsr2h,f,c
 36610   00529E  EE10 F003          	lfsr	1,3
 36611   0052A2  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36612   0052A4  26E1               	addwf	fsr1l,f,c
 36613   0052A6  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36614   0052A8  22E2               	addwfc	fsr1h,f,c
 36615   0052AA  50DE               	movf	postinc2,w,c
 36616   0052AC  5CE6               	subwf	postinc1,w,c
 36617   0052AE  A0D8               	btfss	status,0,c
 36618   0052B0  EF5C  F029         	goto	u4841
 36619   0052B4  EF5E  F029         	goto	u4840
 36620   0052B8                     u4841:
 36621   0052B8  EF65  F029         	goto	l7418
 36622   0052BC                     u4840:
 36623   0052BC  EE20 F003          	lfsr	2,3
 36624   0052C0  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36625   0052C2  26D9               	addwf	fsr2l,f,c
 36626   0052C4  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36627   0052C6  22DA               	addwfc	fsr2h,f,c
 36628   0052C8  6ADF               	clrf	indf2,c
 36629   0052CA                     l7418:
 36630   0052CA  500C               	movf	getNextWriteMessage@wr^(0+1280),w,c
 36631   0052CC  0D09               	mullw	9
 36632   0052CE  C4F3 F503          	movff	prodl,??_getNextWriteMessage
 36633   0052D2  C4F4 F504          	movff	prodh,??_getNextWriteMessage+1
 36634   0052D6  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 36635   0052DA  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 36636   0052DE  C4DE F505          	movff	postinc2,??_getNextWriteMessage+2
 36637   0052E2  C4DD F506          	movff	postdec2,??_getNextWriteMessage+3
 36638   0052E6  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36639   0052E8  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36640   0052EA  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36641   0052EC  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36642   0052EE  2006               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 36643   0052F0  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36644   0052F2                     l966:
 36645   0052F2  0012               	return		;funcret
 36646   0052F4                     __end_of_getNextWriteMessage:
 36647                           	callstack 0
 36648                           
 36649 ;; *************** function _processEnumeration *****************
 36650 ;; Defined at:
 36651 ;;		line 828 in file "../../VLCBlib_PIC/can18_can_2.c"
 36652 ;; Parameters:    Size  Location     Type
 36653 ;;		None
 36654 ;; Auto vars:     Size  Location     Type
 36655 ;;  i               1   27[COMRAM] unsigned char 
 36656 ;;  newCanId        1   26[COMRAM] unsigned char 
 36657 ;;  enumResult      1   25[COMRAM] unsigned char 
 36658 ;; Return value:  Size  Location     Type
 36659 ;;                  1    wreg      void 
 36660 ;; Registers used:
 36661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36662 ;; Tracked objects:
 36663 ;;		On entry : 0/0
 36664 ;;		On exit  : 0/0
 36665 ;;		Unchanged: 0/0
 36666 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36668 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36670 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36671 ;;Total ram usage:        7 bytes
 36672 ;; Hardware stack levels used: 1
 36673 ;; Hardware stack levels required when called: 7
 36674 ;; This function calls:
 36675 ;;		_setNewCanId
 36676 ;;		_startEnumeration
 36677 ;;		_tickGet
 36678 ;;		_updateModuleErrorStatus
 36679 ;; This function is called by:
 36680 ;;		_canPoll
 36681 ;; This function uses a non-reentrant model
 36682 ;;
 36683                           
 36684                           	psect	text94
 36685   003EEA                     __ptext94:
 36686                           	callstack 0
 36687   003EEA                     _processEnumeration:
 36688                           	callstack 117
 36689   003EEA                     
 36690                           ;../../VLCBlib_PIC/can18_can_2.c: 829:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 831:     switch (enumerationState) {
 36691   003EEA  EF3C  F020         	goto	l8500
 36692   003EEE                     l8440:
 36693                           
 36694                           ; BSR set to: 5
 36695                           ;../../VLCBlib_PIC/can18_can_2.c: 834:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 36696   003EEE  EC66  F036         	call	_tickGet	;wreg free
 36697   003EF2  0105               	movlb	5	; () banked
 36698   003EF4  5170               	movf	_enumerationStartTime& (0+255),w,b
 36699   003EF6  5C01               	subwf	?_tickGet^(0+1280),w,c
 36700   003EF8  6E16               	movwf	??_processEnumeration^(0+1280),c
 36701   003EFA  5171               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36702   003EFC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36703   003EFE  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36704   003F00  5172               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36705   003F02  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36706   003F04  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36707   003F06  5173               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36708   003F08  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36709   003F0A  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36710   003F0C  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36711   003F0E  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36712   003F10  E10B               	bnz	u5800
 36713   003F12  0ED5               	movlw	213
 36714   003F14  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36715   003F16  0E30               	movlw	48
 36716   003F18  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36717   003F1A  A0D8               	btfss	status,0,c
 36718   003F1C  EF92  F01F         	goto	u5801
 36719   003F20  EF94  F01F         	goto	u5800
 36720   003F24                     u5801:
 36721   003F24  EF56  F020         	goto	l520
 36722   003F28                     u5800:
 36723   003F28                     
 36724                           ; BSR set to: 5
 36725                           ;../../VLCBlib_PIC/can18_can_2.c: 838:                 startEnumeration(0);
 36726   003F28  0E00               	movlw	0
 36727   003F2A  EC4C  F037         	call	_startEnumeration
 36728   003F2E  EF56  F020         	goto	l520
 36729   003F32                     l8444:
 36730                           
 36731                           ; BSR set to: 5
 36732                           ;../../VLCBlib_PIC/can18_can_2.c: 846:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 36733   003F32  EC66  F036         	call	_tickGet	;wreg free
 36734   003F36  0105               	movlb	5	; () banked
 36735   003F38  5170               	movf	_enumerationStartTime& (0+255),w,b
 36736   003F3A  5C01               	subwf	?_tickGet^(0+1280),w,c
 36737   003F3C  6E16               	movwf	??_processEnumeration^(0+1280),c
 36738   003F3E  5171               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36739   003F40  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36740   003F42  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36741   003F44  5172               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36742   003F46  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36743   003F48  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36744   003F4A  5173               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36745   003F4C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36746   003F4E  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36747   003F50  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36748   003F52  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36749   003F54  E10B               	bnz	u5810
 36750   003F56  0E6B               	movlw	107
 36751   003F58  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36752   003F5A  0E18               	movlw	24
 36753   003F5C  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36754   003F5E  A0D8               	btfss	status,0,c
 36755   003F60  EFB4  F01F         	goto	u5811
 36756   003F64  EFB6  F01F         	goto	u5810
 36757   003F68                     u5811:
 36758   003F68  EF56  F020         	goto	l520
 36759   003F6C                     u5810:
 36760   003F6C                     
 36761                           ; BSR set to: 5
 36762                           ;../../VLCBlib_PIC/can18_can_2.c: 851:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 36763   003F6C  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36764   003F6E  EFBA  F01F         	goto	l8450
 36765   003F72                     l8448:
 36766                           
 36767                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                 }
 36768   003F72  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36769   003F74                     l8450:
 36770   003F74  0E31               	movlw	low _enumerationResults
 36771   003F76  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36772   003F78  6ED9               	movwf	fsr2l,c
 36773   003F7A  6ADA               	clrf	fsr2h,c
 36774   003F7C  0E06               	movlw	high _enumerationResults
 36775   003F7E  22DA               	addwfc	fsr2h,f,c
 36776   003F80  28DE               	incf	postinc2,w,c
 36777   003F82  A4D8               	btfss	status,2,c
 36778   003F84  EFC6  F01F         	goto	u5821
 36779   003F88  EFC8  F01F         	goto	u5820
 36780   003F8C                     u5821:
 36781   003F8C  EFD0  F01F         	goto	l8454
 36782   003F90                     u5820:
 36783   003F90  0E0F               	movlw	15
 36784   003F92  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36785   003F94  EFCE  F01F         	goto	u5831
 36786   003F98  EFD0  F01F         	goto	u5830
 36787   003F9C                     u5831:
 36788   003F9C  EFB9  F01F         	goto	l8448
 36789   003FA0                     u5830:
 36790   003FA0                     l8454:
 36791                           
 36792                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 36793   003FA0  0E31               	movlw	low _enumerationResults
 36794   003FA2  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36795   003FA4  6ED9               	movwf	fsr2l,c
 36796   003FA6  6ADA               	clrf	fsr2h,c
 36797   003FA8  0E06               	movlw	high _enumerationResults
 36798   003FAA  22DA               	addwfc	fsr2h,f,c
 36799   003FAC  50DF               	movf	indf2,w,c
 36800   003FAE  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 36801   003FB0  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 36802   003FB2  B4D8               	btfsc	status,2,c
 36803   003FB4  EFDE  F01F         	goto	u5841
 36804   003FB8  EFE0  F01F         	goto	u5840
 36805   003FBC                     u5841:
 36806   003FBC  EF08  F020         	goto	l8472
 36807   003FC0                     u5840:
 36808   003FC0                     
 36809                           ;../../VLCBlib_PIC/can18_can_2.c: 855:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 36810   003FC0  501C               	movf	processEnumeration@i^(0+1280),w,c
 36811   003FC2  0D08               	mullw	8
 36812   003FC4  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 36813   003FC8  EFE9  F01F         	goto	l8462
 36814   003FCC                     l8458:
 36815                           
 36816                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         enumResult >>= 1;
 36817   003FCC  90D8               	bcf	status,0,c
 36818   003FCE  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 36819   003FD0                     
 36820                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                     }
 36821   003FD0  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 36822   003FD2                     l8462:
 36823   003FD2  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 36824   003FD4  EFEE  F01F         	goto	u5851
 36825   003FD8  EFF0  F01F         	goto	u5850
 36826   003FDC                     u5851:
 36827   003FDC  EFE6  F01F         	goto	l8458
 36828   003FE0                     u5850:
 36829   003FE0                     
 36830                           ;../../VLCBlib_PIC/can18_can_2.c: 858:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 36831   003FE0  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 36832   003FE2  B4D8               	btfsc	status,2,c
 36833   003FE4  EFF6  F01F         	goto	u5861
 36834   003FE8  EFF8  F01F         	goto	u5860
 36835   003FEC                     u5861:
 36836   003FEC  EF08  F020         	goto	l8472
 36837   003FF0                     u5860:
 36838   003FF0  0E64               	movlw	100
 36839   003FF2  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 36840   003FF4  EFFE  F01F         	goto	u5871
 36841   003FF8  EF00  F020         	goto	u5870
 36842   003FFC                     u5871:
 36843   003FFC  EF08  F020         	goto	l8472
 36844   004000                     u5870:
 36845   004000                     
 36846                           ;../../VLCBlib_PIC/can18_can_2.c: 860:                         canId = newCanId;
 36847   004000  C51B  F5A8         	movff	processEnumeration@newCanId,_canId
 36848   004004                     
 36849                           ;../../VLCBlib_PIC/can18_can_2.c: 861:                         setNewCanId(canId);
 36850   004004  0105               	movlb	5	; () banked
 36851   004006  51A8               	movf	_canId& (0+255),w,b
 36852   004008  EC88  F03A         	call	_setNewCanId
 36853                           
 36854                           ;../../VLCBlib_PIC/can18_can_2.c: 862:                     } else {
 36855   00400C  EF0D  F020         	goto	l8480
 36856   004010                     l8472:
 36857                           
 36858                           ;../../VLCBlib_PIC/can18_can_2.c: 864:                         canDiagnostics[0x10].asUi
      +                          nt++;
 36859   004010  0106               	movlb	6	; () banked
 36860   004012  4BB1               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 36861   004014  2BB2               	incf	(_canDiagnostics+33)& (0+255),f,b
 36862   004016                     
 36863                           ; BSR set to: 6
 36864                           ;../../VLCBlib_PIC/can18_can_2.c: 865:                         updateModuleErrorStatus()
      +                          ;
 36865   004016  EC16  F03E         	call	_updateModuleErrorStatus	;wreg free
 36866   00401A                     l8480:
 36867                           
 36868                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 36869   00401A  0E03               	movlw	3
 36870   00401C  0105               	movlb	5	; () banked
 36871   00401E  19A5               	xorwf	_enumerationState& (0+255),w,b
 36872   004020  A4D8               	btfss	status,2,c
 36873   004022  EF15  F020         	goto	u5881
 36874   004026  EF17  F020         	goto	u5880
 36875   00402A                     u5881:
 36876   00402A  EF38  F020         	goto	l8496
 36877   00402E                     u5880:
 36878   00402E                     
 36879                           ; BSR set to: 5
 36880                           ;../../VLCBlib_PIC/can18_can_2.c: 877:                     for (i=0; i< 32; i++) {
 36881   00402E  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36882   004030                     l8488:
 36883                           
 36884                           ; BSR set to: 5
 36885                           ;../../VLCBlib_PIC/can18_can_2.c: 878:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 36886   004030  501C               	movf	processEnumeration@i^(0+1280),w,c
 36887   004032  6E16               	movwf	??_processEnumeration^(0+1280),c
 36888   004034  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 36889   004036  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 36890   004038  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 36891   00403A  0EF0               	movlw	240
 36892   00403C  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 36893   00403E  5016               	movf	??_processEnumeration^(0+1280),w,c
 36894   004040  0B0F               	andlw	15
 36895   004042  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 36896   004044  0EF0               	movlw	240
 36897   004046  1616               	andwf	??_processEnumeration^(0+1280),f,c
 36898   004048  0E00               	movlw	0
 36899   00404A  2416               	addwf	??_processEnumeration^(0+1280),w,c
 36900   00404C  6ED9               	movwf	fsr2l,c
 36901   00404E  0E3C               	movlw	60
 36902   004050  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 36903   004052  6EDA               	movwf	fsr2h,c
 36904   004054  51A8               	movf	_canId& (0+255),w,b
 36905   004056  0B7F               	andlw	127
 36906   004058  6EDF               	movwf	indf2,c
 36907   00405A                     
 36908                           ; BSR set to: 5
 36909                           ;../../VLCBlib_PIC/can18_can_2.c: 879:                     }
 36910   00405A  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36911   00405C                     
 36912                           ; BSR set to: 5
 36913   00405C  0E1F               	movlw	31
 36914   00405E  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36915   004060  EF34  F020         	goto	u5891
 36916   004064  EF36  F020         	goto	u5890
 36917   004068                     u5891:
 36918   004068  EF18  F020         	goto	l8488
 36919   00406C                     u5890:
 36920   00406C                     
 36921                           ; BSR set to: 5
 36922                           ;../../VLCBlib_PIC/can18_can_2.c: 881:                     C1FIFOCON2H |= 0x2;
 36923   00406C  0101               	movlb	1	; () banked
 36924   00406E  8369               	bsf	105,1,b	;volatile
 36925   004070                     l8496:
 36926                           
 36927                           ;../../VLCBlib_PIC/can18_can_2.c: 883:                 enumerationState = NO_ENUMERATION
      +                          ;
 36928   004070  0105               	movlb	5	; () banked
 36929   004072  6BA5               	clrf	_enumerationState& (0+255),b
 36930   004074  EF56  F020         	goto	l520
 36931   004078                     l8500:
 36932   004078  0105               	movlb	5	; () banked
 36933   00407A  51A5               	movf	_enumerationState& (0+255),w,b
 36934   00407C  6E16               	movwf	??_processEnumeration^(0+1280),c
 36935   00407E  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 36936                           
 36937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36938                           ; Switch size 1, requested type "simple"
 36939                           ; Number of cases is 1, Range of values is 0 to 0
 36940                           ; switch strategies available:
 36941                           ; Name         Instructions Cycles
 36942                           ; simple_byte            4     3 (average)
 36943                           ;	Chosen strategy is simple_byte
 36944   004080  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 36945   004082  0A00               	xorlw	0	; case 0
 36946   004084  B4D8               	btfsc	status,2,c
 36947   004086  EF47  F020         	goto	l11524
 36948   00408A  EF56  F020         	goto	l520
 36949   00408E                     l11524:
 36950                           
 36951                           ; BSR set to: 5
 36952                           ; Switch size 1, requested type "simple"
 36953                           ; Number of cases is 3, Range of values is 1 to 3
 36954                           ; switch strategies available:
 36955                           ; Name         Instructions Cycles
 36956                           ; simple_byte           10     6 (average)
 36957                           ;	Chosen strategy is simple_byte
 36958   00408E  5016               	movf	??_processEnumeration^(0+1280),w,c
 36959   004090  0A01               	xorlw	1	; case 1
 36960   004092  B4D8               	btfsc	status,2,c
 36961   004094  EF77  F01F         	goto	l8440
 36962   004098  0A03               	xorlw	3	; case 2
 36963   00409A  B4D8               	btfsc	status,2,c
 36964   00409C  EF99  F01F         	goto	l8444
 36965   0040A0  0A01               	xorlw	1	; case 3
 36966   0040A2  B4D8               	btfsc	status,2,c
 36967   0040A4  EF99  F01F         	goto	l8444
 36968   0040A8  EF56  F020         	goto	l520
 36969   0040AC                     l520:
 36970   0040AC  0012               	return		;funcret
 36971   0040AE                     __end_of_processEnumeration:
 36972                           	callstack 0
 36973                           
 36974 ;; *************** function _startEnumeration *****************
 36975 ;; Defined at:
 36976 ;;		line 777 in file "../../VLCBlib_PIC/can18_can_2.c"
 36977 ;; Parameters:    Size  Location     Type
 36978 ;;  txWaiting       1    wreg     enum E23474
 36979 ;; Auto vars:     Size  Location     Type
 36980 ;;  txWaiting       1   10[COMRAM] enum E23474
 36981 ;;  i               1   11[COMRAM] unsigned char 
 36982 ;; Return value:  Size  Location     Type
 36983 ;;                  1    wreg      void 
 36984 ;; Registers used:
 36985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36986 ;; Tracked objects:
 36987 ;;		On entry : 0/0
 36988 ;;		On exit  : 0/0
 36989 ;;		Unchanged: 0/0
 36990 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36995 ;;Total ram usage:        2 bytes
 36996 ;; Hardware stack levels used: 1
 36997 ;; Hardware stack levels required when called: 2
 36998 ;; This function calls:
 36999 ;;		_sendRTR
 37000 ;;		_tickGet
 37001 ;; This function is called by:
 37002 ;;		_canSendMessage
 37003 ;;		_processEnumeration
 37004 ;; This function uses a non-reentrant model
 37005 ;;
 37006                           
 37007                           	psect	text95
 37008   006E98                     __ptext95:
 37009                           	callstack 0
 37010   006E98                     _startEnumeration:
 37011                           	callstack 118
 37012                           
 37013                           ;incstack = 0
 37014                           ;startEnumeration@txWaiting stored from wreg
 37015   006E98  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 37016   006E9A                     
 37017                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          80:     for (i=1; i< (0x7F/8)+1; i++) {
 37018   006E9A  0E01               	movlw	1
 37019   006E9C  6E0C               	movwf	startEnumeration@i^(0+1280),c
 37020   006E9E                     l7428:
 37021                           
 37022                           ;../../VLCBlib_PIC/can18_can_2.c: 781:         enumerationResults[i] = 0;
 37023   006E9E  0E31               	movlw	low _enumerationResults
 37024   006EA0  240C               	addwf	startEnumeration@i^(0+1280),w,c
 37025   006EA2  6ED9               	movwf	fsr2l,c
 37026   006EA4  6ADA               	clrf	fsr2h,c
 37027   006EA6  0E06               	movlw	high _enumerationResults
 37028   006EA8  22DA               	addwfc	fsr2h,f,c
 37029   006EAA  6ADF               	clrf	indf2,c
 37030   006EAC                     
 37031                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     }
 37032   006EAC  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 37033   006EAE  0E0F               	movlw	15
 37034   006EB0  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 37035   006EB2  EF5D  F037         	goto	u4851
 37036   006EB6  EF5F  F037         	goto	u4850
 37037   006EBA                     u4851:
 37038   006EBA  EF4F  F037         	goto	l7428
 37039   006EBE                     u4850:
 37040   006EBE                     
 37041                           ;../../VLCBlib_PIC/can18_can_2.c: 783:     enumerationResults[0] = 1;
 37042   006EBE  0E01               	movlw	1
 37043   006EC0  0106               	movlb	6	; () banked
 37044   006EC2  6F31               	movwf	_enumerationResults& (0+255),b
 37045                           
 37046                           ;../../VLCBlib_PIC/can18_can_2.c: 785:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 37047   006EC4  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 37048   006EC6  A4D8               	btfss	status,2,c
 37049   006EC8  EF68  F037         	goto	u4861
 37050   006ECC  EF6A  F037         	goto	u4860
 37051   006ED0                     u4861:
 37052   006ED0  EF6F  F037         	goto	l7438
 37053   006ED4                     u4860:
 37054   006ED4                     
 37055                           ; BSR set to: 6
 37056   006ED4  0E02               	movlw	2
 37057   006ED6  0105               	movlb	5	; () banked
 37058   006ED8  6FA5               	movwf	_enumerationState& (0+255),b
 37059   006EDA  EF72  F037         	goto	l7440
 37060   006EDE                     l7438:
 37061                           
 37062                           ; BSR set to: 6
 37063   006EDE  0E03               	movlw	3
 37064   006EE0  0105               	movlb	5	; () banked
 37065   006EE2  6FA5               	movwf	_enumerationState& (0+255),b
 37066   006EE4                     l7440:
 37067                           
 37068                           ; BSR set to: 5
 37069                           ;../../VLCBlib_PIC/can18_can_2.c: 786:     enumerationStartTime.val = tickGet();
 37070   006EE4  EC66  F036         	call	_tickGet	;wreg free
 37071   006EE8  C501  F570         	movff	?_tickGet,_enumerationStartTime
 37072   006EEC  C502  F571         	movff	?_tickGet+1,_enumerationStartTime+1
 37073   006EF0  C503  F572         	movff	?_tickGet+2,_enumerationStartTime+2
 37074   006EF4  C504  F573         	movff	?_tickGet+3,_enumerationStartTime+3
 37075   006EF8                     
 37076                           ;../../VLCBlib_PIC/can18_can_2.c: 788:     canDiagnostics[0x0D].asUint++;
 37077   006EF8  0106               	movlb	6	; () banked
 37078   006EFA  4BAB               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 37079   006EFC  2BAC               	incf	(_canDiagnostics+27)& (0+255),f,b
 37080   006EFE                     
 37081                           ; BSR set to: 6
 37082                           ;../../VLCBlib_PIC/can18_can_2.c: 790:     sendRTR();
 37083   006EFE  ECF1  F03A         	call	_sendRTR	;wreg free
 37084   006F02  0012               	return		;funcret
 37085   006F04                     __end_of_startEnumeration:
 37086                           	callstack 0
 37087                           
 37088 ;; *************** function _sendRTR *****************
 37089 ;; Defined at:
 37090 ;;		line 680 in file "../../VLCBlib_PIC/can18_can_2.c"
 37091 ;; Parameters:    Size  Location     Type
 37092 ;;		None
 37093 ;; Auto vars:     Size  Location     Type
 37094 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37095 ;;		 -> RAM(16383), 
 37096 ;; Return value:  Size  Location     Type
 37097 ;;                  1    wreg      void 
 37098 ;; Registers used:
 37099 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37100 ;; Tracked objects:
 37101 ;;		On entry : 0/0
 37102 ;;		On exit  : 0/0
 37103 ;;		Unchanged: 0/0
 37104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37109 ;;Total ram usage:        2 bytes
 37110 ;; Hardware stack levels used: 1
 37111 ;; Hardware stack levels required when called: 1
 37112 ;; This function calls:
 37113 ;;		Nothing
 37114 ;; This function is called by:
 37115 ;;		_startEnumeration
 37116 ;; This function uses a non-reentrant model
 37117 ;;
 37118                           
 37119                           	psect	text96
 37120   0075E2                     __ptext96:
 37121                           	callstack 0
 37122   0075E2                     _sendRTR:
 37123                           	callstack 118
 37124   0075E2                     
 37125                           ;../../VLCBlib_PIC/can18_can_2.c: 681:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 37126   0075E2  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 37127   0075E6  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 37128   0075EA                     
 37129                           ;../../VLCBlib_PIC/can18_can_2.c: 682:     txFifoObj[0] = (canId & 0x7F);
 37130   0075EA  0105               	movlb	5	; () banked
 37131   0075EC  51A8               	movf	_canId& (0+255),w,b
 37132   0075EE  0B7F               	andlw	127
 37133   0075F0  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 37134   0075F4  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 37135   0075F8  6EDF               	movwf	indf2,c
 37136   0075FA                     
 37137                           ; BSR set to: 5
 37138                           ;../../VLCBlib_PIC/can18_can_2.c: 683:     txFifoObj[1] = 0;
 37139   0075FA  EE20 F001          	lfsr	2,1
 37140   0075FE  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37141   007600  26D9               	addwf	fsr2l,f,c
 37142   007602  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37143   007604  22DA               	addwfc	fsr2h,f,c
 37144   007606  6ADF               	clrf	indf2,c
 37145   007608                     
 37146                           ; BSR set to: 5
 37147                           ;../../VLCBlib_PIC/can18_can_2.c: 684:     txFifoObj[4] = 0x20;
 37148   007608  EE20 F004          	lfsr	2,4
 37149   00760C  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37150   00760E  26D9               	addwf	fsr2l,f,c
 37151   007610  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37152   007612  22DA               	addwfc	fsr2h,f,c
 37153   007614  0E20               	movlw	32
 37154   007616  6EDF               	movwf	indf2,c
 37155   007618                     
 37156                           ; BSR set to: 5
 37157                           ;../../VLCBlib_PIC/can18_can_2.c: 685:     C1TXQCONH |= (0x2 | 0x1);
 37158   007618  0E03               	movlw	3
 37159   00761A  0101               	movlb	1	; () banked
 37160   00761C  1351               	iorwf	81,f,b	;volatile
 37161   00761E                     
 37162                           ; BSR set to: 1
 37163                           ;../../VLCBlib_PIC/can18_can_2.c: 687:     canDiagnostics[0x06].asUint++;
 37164   00761E  0106               	movlb	6	; () banked
 37165   007620  4B9D               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 37166   007622  2B9E               	incf	(_canDiagnostics+13)& (0+255),f,b
 37167   007624                     
 37168                           ; BSR set to: 6
 37169   007624  0012               	return		;funcret
 37170   007626                     __end_of_sendRTR:
 37171                           	callstack 0
 37172                           
 37173 ;; *************** function _setNewCanId *****************
 37174 ;; Defined at:
 37175 ;;		line 896 in file "../../VLCBlib_PIC/can18_can_2.c"
 37176 ;; Parameters:    Size  Location     Type
 37177 ;;  newCanId        1    wreg     unsigned char 
 37178 ;; Auto vars:     Size  Location     Type
 37179 ;;  newCanId        1   20[COMRAM] unsigned char 
 37180 ;; Return value:  Size  Location     Type
 37181 ;;                  1    wreg      enum E23636
 37182 ;; Registers used:
 37183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37184 ;; Tracked objects:
 37185 ;;		On entry : 0/0
 37186 ;;		On exit  : 0/0
 37187 ;;		Unchanged: 0/0
 37188 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37193 ;;Total ram usage:        1 bytes
 37194 ;; Hardware stack levels used: 1
 37195 ;; Hardware stack levels required when called: 6
 37196 ;; This function calls:
 37197 ;;		_prepareSelfEnumResponse
 37198 ;;		_writeNVM
 37199 ;; This function is called by:
 37200 ;;		_processEnumeration
 37201 ;; This function uses a non-reentrant model
 37202 ;;
 37203                           
 37204                           	psect	text97
 37205   007510                     __ptext97:
 37206                           	callstack 0
 37207   007510                     _setNewCanId:
 37208                           	callstack 117
 37209                           
 37210                           ; BSR set to: 6
 37211                           ;incstack = 0
 37212                           ;setNewCanId@newCanId stored from wreg
 37213   007510  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 37214   007512                     
 37215                           ;../../VLCBlib_PIC/can18_can_2.c: 897:     if ((newCanId >= 1) && (newCanId <= 99)) {
 37216   007512  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 37217   007514  B4D8               	btfsc	status,2,c
 37218   007516  EF8F  F03A         	goto	u5441
 37219   00751A  EF91  F03A         	goto	u5440
 37220   00751E                     u5441:
 37221   00751E  EFAB  F03A         	goto	l524
 37222   007522                     u5440:
 37223   007522  0E64               	movlw	100
 37224   007524  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 37225   007526  EF97  F03A         	goto	u5451
 37226   00752A  EF99  F03A         	goto	u5450
 37227   00752E                     u5451:
 37228   00752E  EFAB  F03A         	goto	l524
 37229   007532                     u5450:
 37230   007532                     
 37231                           ;../../VLCBlib_PIC/can18_can_2.c: 898:         canId = newCanId;
 37232   007532  C515  F5A8         	movff	setNewCanId@newCanId,_canId
 37233   007536                     
 37234                           ;../../VLCBlib_PIC/can18_can_2.c: 900:         prepareSelfEnumResponse();
 37235   007536  ECEE  F035         	call	_prepareSelfEnumResponse	;wreg free
 37236                           
 37237                           ;../../VLCBlib_PIC/can18_can_2.c: 901:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 37238   00753A  0EFE               	movlw	254
 37239   00753C  6E0E               	movwf	writeNVM@index^(0+1280),c
 37240   00753E  0E03               	movlw	3
 37241   007540  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37242   007542  0E00               	movlw	0
 37243   007544  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37244   007546  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 37245   00754A  0E00               	movlw	0
 37246   00754C  ECB5  F038         	call	_writeNVM
 37247   007550                     
 37248                           ;../../VLCBlib_PIC/can18_can_2.c: 903:         canDiagnostics[0x0F].asUint++;
 37249   007550  0106               	movlb	6	; () banked
 37250   007552  4BAF               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 37251   007554  2BB0               	incf	(_canDiagnostics+31)& (0+255),f,b
 37252   007556                     l524:
 37253   007556  0012               	return		;funcret
 37254   007558                     __end_of_setNewCanId:
 37255                           	callstack 0
 37256                           
 37257 ;; *************** function _prepareSelfEnumResponse *****************
 37258 ;; Defined at:
 37259 ;;		line 389 in file "../../VLCBlib_PIC/can18_can_2.c"
 37260 ;; Parameters:    Size  Location     Type
 37261 ;;		None
 37262 ;; Auto vars:     Size  Location     Type
 37263 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37264 ;;		 -> RAM(16383), 
 37265 ;; Return value:  Size  Location     Type
 37266 ;;                  1    wreg      void 
 37267 ;; Registers used:
 37268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37269 ;; Tracked objects:
 37270 ;;		On entry : 0/0
 37271 ;;		On exit  : 0/0
 37272 ;;		Unchanged: 0/0
 37273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37278 ;;Total ram usage:        2 bytes
 37279 ;; Hardware stack levels used: 1
 37280 ;; Hardware stack levels required when called: 1
 37281 ;; This function calls:
 37282 ;;		Nothing
 37283 ;; This function is called by:
 37284 ;;		_canPowerUp
 37285 ;;		_setNewCanId
 37286 ;; This function uses a non-reentrant model
 37287 ;;
 37288                           
 37289                           	psect	text98
 37290   006BDC                     __ptext98:
 37291                           	callstack 0
 37292   006BDC                     _prepareSelfEnumResponse:
 37293                           	callstack 123
 37294   006BDC                     
 37295                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 37296   006BDC  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 37297   006BE0  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 37298                           
 37299                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37300   006BE4  EF21  F036         	goto	l7790
 37301   006BE8                     l7786:
 37302                           
 37303                           ; BSR set to: 1
 37304                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[0] = (canId & 0x7F);
 37305   006BE8  0105               	movlb	5	; () banked
 37306   006BEA  51A8               	movf	_canId& (0+255),w,b
 37307   006BEC  0B7F               	andlw	127
 37308   006BEE  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 37309   006BF2  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 37310   006BF6  6EDF               	movwf	indf2,c
 37311                           
 37312                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[1] = 0;
 37313   006BF8  EE20 F001          	lfsr	2,1
 37314   006BFC  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37315   006BFE  26D9               	addwf	fsr2l,f,c
 37316   006C00  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37317   006C02  22DA               	addwfc	fsr2h,f,c
 37318   006C04  6ADF               	clrf	indf2,c
 37319                           
 37320                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[4] = 0;
 37321   006C06  EE20 F004          	lfsr	2,4
 37322   006C0A  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37323   006C0C  26D9               	addwf	fsr2l,f,c
 37324   006C0E  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37325   006C10  22DA               	addwfc	fsr2h,f,c
 37326   006C12  6ADF               	clrf	indf2,c
 37327                           
 37328                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[5] = 0;
 37329   006C14  EE20 F005          	lfsr	2,5
 37330   006C18  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37331   006C1A  26D9               	addwf	fsr2l,f,c
 37332   006C1C  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37333   006C1E  22DA               	addwfc	fsr2h,f,c
 37334   006C20  6ADF               	clrf	indf2,c
 37335                           
 37336                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         txFifoObj[6] = 0;
 37337   006C22  EE20 F006          	lfsr	2,6
 37338   006C26  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37339   006C28  26D9               	addwf	fsr2l,f,c
 37340   006C2A  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37341   006C2C  22DA               	addwfc	fsr2h,f,c
 37342   006C2E  6ADF               	clrf	indf2,c
 37343                           
 37344                           ;../../VLCBlib_PIC/can18_can_2.c: 399:         txFifoObj[7] = 0;
 37345   006C30  EE20 F007          	lfsr	2,7
 37346   006C34  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37347   006C36  26D9               	addwf	fsr2l,f,c
 37348   006C38  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37349   006C3A  22DA               	addwfc	fsr2h,f,c
 37350   006C3C  6ADF               	clrf	indf2,c
 37351   006C3E                     
 37352                           ; BSR set to: 5
 37353                           ;../../VLCBlib_PIC/can18_can_2.c: 400:         C1FIFOCON1Hbits.UINC = 1;
 37354   006C3E  0101               	movlb	1	; () banked
 37355   006C40  815D               	bsf	93,0,b	;volatile
 37356   006C42                     l7790:
 37357                           
 37358                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37359   006C42  0101               	movlb	1	; () banked
 37360   006C44  B160               	btfsc	96,0,b	;volatile
 37361   006C46  EF27  F036         	goto	u5261
 37362   006C4A  EF29  F036         	goto	u5260
 37363   006C4E                     u5261:
 37364   006C4E  EFF4  F035         	goto	l7786
 37365   006C52                     u5260:
 37366   006C52                     
 37367                           ; BSR set to: 1
 37368   006C52  0012               	return		;funcret
 37369   006C54                     __end_of_prepareSelfEnumResponse:
 37370                           	callstack 0
 37371                           
 37372 ;; *************** function _APP_preProcessMessage *****************
 37373 ;; Defined at:
 37374 ;;		line 73 in file "../canargb_events.c"
 37375 ;; Parameters:    Size  Location     Type
 37376 ;;  m               2    0[COMRAM] PTR struct Message
 37377 ;;		 -> poll@m(9), 
 37378 ;; Auto vars:     Size  Location     Type
 37379 ;;		None
 37380 ;; Return value:  Size  Location     Type
 37381 ;;                  1    wreg      enum E23340
 37382 ;; Registers used:
 37383 ;;		wreg
 37384 ;; Tracked objects:
 37385 ;;		On entry : 0/0
 37386 ;;		On exit  : 0/0
 37387 ;;		Unchanged: 0/0
 37388 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37393 ;;Total ram usage:        2 bytes
 37394 ;; Hardware stack levels used: 1
 37395 ;; Hardware stack levels required when called: 1
 37396 ;; This function calls:
 37397 ;;		Nothing
 37398 ;; This function is called by:
 37399 ;;		_poll
 37400 ;; This function uses a non-reentrant model
 37401 ;;
 37402                           
 37403                           	psect	text99
 37404   007CAE                     __ptext99:
 37405                           	callstack 0
 37406   007CAE                     _APP_preProcessMessage:
 37407                           	callstack 124
 37408   007CAE                     
 37409                           ;../canargb_events.c: 74:     return NOT_PROCESSED;
 37410   007CAE  0E00               	movlw	0
 37411   007CB0  0012               	return		;funcret
 37412   007CB2                     __end_of_APP_preProcessMessage:
 37413                           	callstack 0
 37414                           
 37415 ;; *************** function _APP_postProcessMessage *****************
 37416 ;; Defined at:
 37417 ;;		line 79 in file "../canargb_events.c"
 37418 ;; Parameters:    Size  Location     Type
 37419 ;;  m               2    0[COMRAM] PTR struct Message
 37420 ;;		 -> poll@m(9), 
 37421 ;; Auto vars:     Size  Location     Type
 37422 ;;		None
 37423 ;; Return value:  Size  Location     Type
 37424 ;;                  1    wreg      enum E23340
 37425 ;; Registers used:
 37426 ;;		wreg
 37427 ;; Tracked objects:
 37428 ;;		On entry : 0/0
 37429 ;;		On exit  : 0/0
 37430 ;;		Unchanged: 0/0
 37431 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37436 ;;Total ram usage:        2 bytes
 37437 ;; Hardware stack levels used: 1
 37438 ;; Hardware stack levels required when called: 1
 37439 ;; This function calls:
 37440 ;;		Nothing
 37441 ;; This function is called by:
 37442 ;;		_poll
 37443 ;; This function uses a non-reentrant model
 37444 ;;
 37445                           
 37446                           	psect	text100
 37447   007CB2                     __ptext100:
 37448                           	callstack 0
 37449   007CB2                     _APP_postProcessMessage:
 37450                           	callstack 124
 37451   007CB2                     
 37452                           ;../canargb_events.c: 80:     return NOT_PROCESSED;
 37453   007CB2  0E00               	movlw	0
 37454   007CB4  0012               	return		;funcret
 37455   007CB6                     __end_of_APP_postProcessMessage:
 37456                           	callstack 0
 37457                           
 37458 ;; *************** function _loop *****************
 37459 ;; Defined at:
 37460 ;;		line 234 in file "../main.c"
 37461 ;; Parameters:    Size  Location     Type
 37462 ;;		None
 37463 ;; Auto vars:     Size  Location     Type
 37464 ;;		None
 37465 ;; Return value:  Size  Location     Type
 37466 ;;                  1    wreg      void 
 37467 ;; Registers used:
 37468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37469 ;; Tracked objects:
 37470 ;;		On entry : 0/0
 37471 ;;		On exit  : 0/0
 37472 ;;		Unchanged: 0/0
 37473 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37478 ;;Total ram usage:        4 bytes
 37479 ;; Hardware stack levels used: 1
 37480 ;; Hardware stack levels required when called: 3
 37481 ;; This function calls:
 37482 ;;		_doFlash
 37483 ;;		_refreshString
 37484 ;;		_tickGet
 37485 ;; This function is called by:
 37486 ;;		_main
 37487 ;; This function uses a non-reentrant model
 37488 ;;
 37489                           
 37490                           	psect	text101
 37491   007286                     __ptext101:
 37492                           	callstack 0
 37493   007286                     _loop:
 37494                           	callstack 123
 37495   007286                     
 37496                           ;../main.c: 236:     if ((tickGet() - flashTime.val) > (62500/2)) {
 37497   007286  EC66  F036         	call	_tickGet	;wreg free
 37498   00728A  0105               	movlb	5	; () banked
 37499   00728C  517C               	movf	_flashTime& (0+255),w,b
 37500   00728E  5C01               	subwf	?_tickGet^(0+1280),w,c
 37501   007290  6E0B               	movwf	??_loop^(0+1280),c
 37502   007292  517D               	movf	(_flashTime+1)& (0+255),w,b
 37503   007294  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 37504   007296  6E0C               	movwf	(??_loop+1)^(0+1280),c
 37505   007298  517E               	movf	(_flashTime+2)& (0+255),w,b
 37506   00729A  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 37507   00729C  6E0D               	movwf	(??_loop+2)^(0+1280),c
 37508   00729E  517F               	movf	(_flashTime+3)& (0+255),w,b
 37509   0072A0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 37510   0072A2  6E0E               	movwf	(??_loop+3)^(0+1280),c
 37511   0072A4  500E               	movf	(??_loop+3)^(0+1280),w,c
 37512   0072A6  100D               	iorwf	(??_loop+2)^(0+1280),w,c
 37513   0072A8  E10B               	bnz	u8340
 37514   0072AA  0E13               	movlw	19
 37515   0072AC  5C0B               	subwf	??_loop^(0+1280),w,c
 37516   0072AE  0E7A               	movlw	122
 37517   0072B0  580C               	subwfb	(??_loop+1)^(0+1280),w,c
 37518   0072B2  A0D8               	btfss	status,0,c
 37519   0072B4  EF5E  F039         	goto	u8341
 37520   0072B8  EF60  F039         	goto	u8340
 37521   0072BC                     u8341:
 37522   0072BC  EF6C  F039         	goto	l10806
 37523   0072C0                     u8340:
 37524   0072C0                     
 37525                           ; BSR set to: 5
 37526                           ;../main.c: 237:         doFlash();
 37527   0072C0  EC08  F024         	call	_doFlash	;wreg free
 37528   0072C4                     
 37529                           ;../main.c: 238:         flashTime.val = tickGet();
 37530   0072C4  EC66  F036         	call	_tickGet	;wreg free
 37531   0072C8  C501  F57C         	movff	?_tickGet,_flashTime
 37532   0072CC  C502  F57D         	movff	?_tickGet+1,_flashTime+1
 37533   0072D0  C503  F57E         	movff	?_tickGet+2,_flashTime+2
 37534   0072D4  C504  F57F         	movff	?_tickGet+3,_flashTime+3
 37535   0072D8                     l10806:
 37536                           
 37537                           ;../main.c: 241:     refreshString();
 37538   0072D8  EC66  F03D         	call	_refreshString	;wreg free
 37539   0072DC  0012               	return		;funcret
 37540   0072DE                     __end_of_loop:
 37541                           	callstack 0
 37542                           
 37543 ;; *************** function _refreshString *****************
 37544 ;; Defined at:
 37545 ;;		line 317 in file "../canargb_leds.c"
 37546 ;; Parameters:    Size  Location     Type
 37547 ;;		None
 37548 ;; Auto vars:     Size  Location     Type
 37549 ;;  ledno           1    0        unsigned char 
 37550 ;; Return value:  Size  Location     Type
 37551 ;;                  1    wreg      void 
 37552 ;; Registers used:
 37553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37554 ;; Tracked objects:
 37555 ;;		On entry : 0/0
 37556 ;;		On exit  : 0/0
 37557 ;;		Unchanged: 0/0
 37558 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37563 ;;Total ram usage:        0 bytes
 37564 ;; Hardware stack levels used: 1
 37565 ;; Hardware stack levels required when called: 2
 37566 ;; This function calls:
 37567 ;;		_sendByte
 37568 ;; This function is called by:
 37569 ;;		_loop
 37570 ;; This function uses a non-reentrant model
 37571 ;;
 37572                           
 37573                           	psect	text102
 37574   007ACC                     __ptext102:
 37575                           	callstack 0
 37576   007ACC                     _refreshString:
 37577                           	callstack 123
 37578   007ACC                     
 37579                           ;../canargb_leds.c: 318:     uint8_t ledno;;../canargb_leds.c: 322:     sendByte();
 37580   007ACC  ECED  F037         	call	_sendByte	;wreg free
 37581   007AD0                     
 37582                           ;../canargb_leds.c: 323:     if (refreshRequired) {
 37583   007AD0  0105               	movlb	5	; () banked
 37584   007AD2  5191               	movf	_refreshRequired& (0+255),w,b
 37585   007AD4  B4D8               	btfsc	status,2,c
 37586   007AD6  EF6F  F03D         	goto	u6771
 37587   007ADA  EF71  F03D         	goto	u6770
 37588   007ADE                     u6771:
 37589   007ADE  EF77  F03D         	goto	l2085
 37590   007AE2                     u6770:
 37591   007AE2                     
 37592                           ; BSR set to: 5
 37593                           ;../canargb_leds.c: 324:         refreshRequired = 0;
 37594   007AE2  6B91               	clrf	_refreshRequired& (0+255),b
 37595                           
 37596                           ;../canargb_leds.c: 331: LATCbits.LATC6 = flashState;
 37597   007AE4  B192               	btfsc	_flashState& (0+255),0,b
 37598   007AE6  D002               	bra	u6785
 37599   007AE8  9CC0               	bcf	192,6,c	;volatile
 37600   007AEA  D001               	bra	u6786
 37601   007AEC                     u6785:
 37602   007AEC  8CC0               	bsf	192,6,c	;volatile
 37603   007AEE                     u6786:
 37604   007AEE                     l2085:
 37605   007AEE  0012               	return		;funcret
 37606   007AF0                     __end_of_refreshString:
 37607                           	callstack 0
 37608                           
 37609 ;; *************** function _sendByte *****************
 37610 ;; Defined at:
 37611 ;;		line 254 in file "../canargb_leds.c"
 37612 ;; Parameters:    Size  Location     Type
 37613 ;;		None
 37614 ;; Auto vars:     Size  Location     Type
 37615 ;;  p               2    0[COMRAM] PTR unsigned char 
 37616 ;;		 -> leds(765), 
 37617 ;; Return value:  Size  Location     Type
 37618 ;;                  1    wreg      void 
 37619 ;; Registers used:
 37620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37621 ;; Tracked objects:
 37622 ;;		On entry : 0/0
 37623 ;;		On exit  : 0/0
 37624 ;;		Unchanged: 0/0
 37625 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37630 ;;Total ram usage:        2 bytes
 37631 ;; Hardware stack levels used: 1
 37632 ;; Hardware stack levels required when called: 1
 37633 ;; This function calls:
 37634 ;;		Nothing
 37635 ;; This function is called by:
 37636 ;;		_refreshString
 37637 ;; This function uses a non-reentrant model
 37638 ;;
 37639                           
 37640                           	psect	text103
 37641   006FDA                     __ptext103:
 37642                           	callstack 0
 37643   006FDA                     _sendByte:
 37644                           	callstack 123
 37645   006FDA                     
 37646                           ;../canargb_leds.c: 255:     uint8_t * p = leds;
 37647   006FDA  0E7C               	movlw	low _leds
 37648   006FDC  6E01               	movwf	sendByte@p^(0+1280),c
 37649   006FDE  0E0B               	movlw	high _leds
 37650   006FE0  6E02               	movwf	(sendByte@p+1)^(0+1280),c
 37651   006FE2                     
 37652                           ;../canargb_leds.c: 256:     if (first || (SPI1STATUSbits.TXBE == 1)) {
 37653   006FE2  0105               	movlb	5	; () banked
 37654   006FE4  51FD               	movf	_first& (0+255),w,b
 37655   006FE6  A4D8               	btfss	status,2,c
 37656   006FE8  EFF8  F037         	goto	u6611
 37657   006FEC  EFFA  F037         	goto	u6610
 37658   006FF0                     u6611:
 37659   006FF0  EF02  F038         	goto	l2062
 37660   006FF4                     u6610:
 37661   006FF4                     
 37662                           ; BSR set to: 5
 37663   006FF4  0100               	movlb	0	; () banked
 37664   006FF6  AB87               	btfss	135,5,b	;volatile
 37665   006FF8  EF00  F038         	goto	u6621
 37666   006FFC  EF02  F038         	goto	u6620
 37667   007000                     u6621:
 37668   007000  EF1F  F038         	goto	l2064
 37669   007004                     u6620:
 37670   007004                     l2062:
 37671                           
 37672                           ;../canargb_leds.c: 257:         first = 0;
 37673   007004  0105               	movlb	5	; () banked
 37674   007006  6BFD               	clrf	_first& (0+255),b
 37675   007008                     
 37676                           ; BSR set to: 5
 37677                           ;../canargb_leds.c: 258:         SPI1TXB = p[offset];
 37678   007008  5183               	movf	_offset& (0+255),w,b
 37679   00700A  2401               	addwf	sendByte@p^(0+1280),w,c
 37680   00700C  6ED9               	movwf	fsr2l,c
 37681   00700E  5184               	movf	(_offset+1)& (0+255),w,b
 37682   007010  2002               	addwfc	(sendByte@p+1)^(0+1280),w,c
 37683   007012  6EDA               	movwf	fsr2h,c
 37684   007014  50DF               	movf	indf2,w,c
 37685   007016  0100               	movlb	0	; () banked
 37686   007018  6F81               	movwf	129,b	;volatile
 37687   00701A                     
 37688                           ; BSR set to: 0
 37689                           ;../canargb_leds.c: 259:         offset++;
 37690   00701A  0105               	movlb	5	; () banked
 37691   00701C  4B83               	infsnz	_offset& (0+255),f,b
 37692   00701E  2B84               	incf	(_offset+1)& (0+255),f,b
 37693   007020                     
 37694                           ; BSR set to: 5
 37695                           ;../canargb_leds.c: 260:         if (offset == 0x2FF) {
 37696   007020  2983               	incf	_offset& (0+255),w,b
 37697   007022  E107               	bnz	u6631
 37698   007024  0E02               	movlw	2
 37699   007026  1984               	xorwf	(_offset+1)& (0+255),w,b
 37700   007028  A4D8               	btfss	status,2,c
 37701   00702A  EF19  F038         	goto	u6631
 37702   00702E  EF1B  F038         	goto	u6630
 37703   007032                     u6631:
 37704   007032  EF1F  F038         	goto	l2064
 37705   007036                     u6630:
 37706   007036                     
 37707                           ; BSR set to: 5
 37708                           ;../canargb_leds.c: 261:             offset = 0;
 37709   007036  0E00               	movlw	0
 37710   007038  6F84               	movwf	(_offset+1)& (0+255),b
 37711   00703A  0E00               	movlw	0
 37712   00703C  6F83               	movwf	_offset& (0+255),b
 37713   00703E                     l2064:
 37714   00703E  0012               	return		;funcret
 37715   007040                     __end_of_sendByte:
 37716                           	callstack 0
 37717                           
 37718 ;; *************** function _doFlash *****************
 37719 ;; Defined at:
 37720 ;;		line 290 in file "../canargb_leds.c"
 37721 ;; Parameters:    Size  Location     Type
 37722 ;;		None
 37723 ;; Auto vars:     Size  Location     Type
 37724 ;;  ledno           1    4[COMRAM] unsigned char 
 37725 ;; Return value:  Size  Location     Type
 37726 ;;                  1    wreg      void 
 37727 ;; Registers used:
 37728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37729 ;; Tracked objects:
 37730 ;;		On entry : 0/0
 37731 ;;		On exit  : 0/0
 37732 ;;		Unchanged: 0/0
 37733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37738 ;;Total ram usage:        1 bytes
 37739 ;; Hardware stack levels used: 1
 37740 ;; Hardware stack levels required when called: 2
 37741 ;; This function calls:
 37742 ;;		_getNV
 37743 ;; This function is called by:
 37744 ;;		_loop
 37745 ;; This function uses a non-reentrant model
 37746 ;;
 37747                           
 37748                           	psect	text104
 37749   004810                     __ptext104:
 37750                           	callstack 0
 37751   004810                     _doFlash:
 37752                           	callstack 123
 37753   004810                     
 37754                           ;../canargb_leds.c: 291:     uint8_t ledno;;../canargb_leds.c: 293:     flashState = 1-f
      +                          lashState;
 37755   004810  0105               	movlb	5	; () banked
 37756   004812  5192               	movf	_flashState& (0+255),w,b
 37757   004814  0801               	sublw	1
 37758   004816  6F92               	movwf	_flashState& (0+255),b
 37759   004818                     
 37760                           ; BSR set to: 5
 37761                           ;../canargb_leds.c: 295:     for (ledno=0; ledno < 255; ledno++) {
 37762   004818  6A05               	clrf	doFlash@ledno^(0+1280),c
 37763   00481A                     l9264:
 37764                           
 37765                           ;../canargb_leds.c: 296:         if (flashState) {
 37766   00481A  0105               	movlb	5	; () banked
 37767   00481C  5192               	movf	_flashState& (0+255),w,b
 37768   00481E  B4D8               	btfsc	status,2,c
 37769   004820  EF14  F024         	goto	u6751
 37770   004824  EF16  F024         	goto	u6750
 37771   004828                     u6751:
 37772   004828  EF5B  F024         	goto	l9268
 37773   00482C                     u6750:
 37774   00482C                     
 37775                           ; BSR set to: 5
 37776                           ;../canargb_leds.c: 297:             leds[ledno].r = ((uint8_t)getNV((ledPaletteIndexes[
      +                          ledno].asNibbles.flashOnPaletteIndex)*3));
 37777   00482C  0E00               	movlw	low _ledPaletteIndexes
 37778   00482E  2405               	addwf	doFlash@ledno^(0+1280),w,c
 37779   004830  6ED9               	movwf	fsr2l,c
 37780   004832  6ADA               	clrf	fsr2h,c
 37781   004834  0E07               	movlw	high _ledPaletteIndexes
 37782   004836  22DA               	addwfc	fsr2h,f,c
 37783   004838  50DF               	movf	223,w,c
 37784   00483A  0B0F               	andlw	15
 37785   00483C  0D03               	mullw	3
 37786   00483E  50F3               	movf	243,w,c
 37787   004840  ECC4  F039         	call	_getNV
 37788   004844  5005               	movf	doFlash@ledno^(0+1280),w,c
 37789   004846  0D03               	mullw	3
 37790   004848  0E7C               	movlw	low _leds
 37791   00484A  24F3               	addwf	243,w,c
 37792   00484C  6ED9               	movwf	fsr2l,c
 37793   00484E  0E0B               	movlw	high _leds
 37794   004850  20F4               	addwfc	prodh,w,c
 37795   004852  6EDA               	movwf	fsr2h,c
 37796   004854  C501  F4DF         	movff	?_getNV,indf2
 37797                           
 37798                           ;../canargb_leds.c: 298:             leds[ledno].g = ((uint8_t)getNV((ledPaletteIndexes[
      +                          ledno].asNibbles.flashOnPaletteIndex)*3+1));
 37799   004858  0E00               	movlw	low _ledPaletteIndexes
 37800   00485A  2405               	addwf	doFlash@ledno^(0+1280),w,c
 37801   00485C  6ED9               	movwf	fsr2l,c
 37802   00485E  6ADA               	clrf	fsr2h,c
 37803   004860  0E07               	movlw	high _ledPaletteIndexes
 37804   004862  22DA               	addwfc	fsr2h,f,c
 37805   004864  50DF               	movf	223,w,c
 37806   004866  0B0F               	andlw	15
 37807   004868  0D03               	mullw	3
 37808   00486A  28F3               	incf	243,w,c
 37809   00486C  ECC4  F039         	call	_getNV
 37810   004870  5005               	movf	doFlash@ledno^(0+1280),w,c
 37811   004872  0D03               	mullw	3
 37812   004874  0E7D               	movlw	low (_leds+1)
 37813   004876  24F3               	addwf	243,w,c
 37814   004878  6ED9               	movwf	fsr2l,c
 37815   00487A  0E0B               	movlw	high (_leds+1)
 37816   00487C  20F4               	addwfc	prodh,w,c
 37817   00487E  6EDA               	movwf	fsr2h,c
 37818   004880  C501  F4DF         	movff	?_getNV,indf2
 37819                           
 37820                           ;../canargb_leds.c: 299:             leds[ledno].b = ((uint8_t)getNV((ledPaletteIndexes[
      +                          ledno].asNibbles.flashOnPaletteIndex)*3+2));
 37821   004884  0E00               	movlw	low _ledPaletteIndexes
 37822   004886  2405               	addwf	doFlash@ledno^(0+1280),w,c
 37823   004888  6ED9               	movwf	fsr2l,c
 37824   00488A  6ADA               	clrf	fsr2h,c
 37825   00488C  0E07               	movlw	high _ledPaletteIndexes
 37826   00488E  22DA               	addwfc	fsr2h,f,c
 37827   004890  50DF               	movf	223,w,c
 37828   004892  0B0F               	andlw	15
 37829   004894  0D03               	mullw	3
 37830   004896  50F3               	movf	243,w,c
 37831   004898  0F02               	addlw	2
 37832   00489A  ECC4  F039         	call	_getNV
 37833   00489E  5005               	movf	doFlash@ledno^(0+1280),w,c
 37834   0048A0  0D03               	mullw	3
 37835   0048A2  0E7E               	movlw	low (_leds+2)
 37836   0048A4  24F3               	addwf	243,w,c
 37837   0048A6  6ED9               	movwf	fsr2l,c
 37838   0048A8  0E0B               	movlw	high (_leds+2)
 37839   0048AA  20F4               	addwfc	prodh,w,c
 37840   0048AC  6EDA               	movwf	fsr2h,c
 37841   0048AE  C501  F4DF         	movff	?_getNV,indf2
 37842                           
 37843                           ;../canargb_leds.c: 300:         } else {
 37844   0048B2  EF9E  F024         	goto	l9270
 37845   0048B6                     l9268:
 37846                           
 37847                           ; BSR set to: 5
 37848                           ;../canargb_leds.c: 301:             leds[ledno].r = ((uint8_t)getNV((ledPaletteIndexes[
      +                          ledno].asNibbles.flashOffPaletteIndex)*3));
 37849   0048B6  0E00               	movlw	low _ledPaletteIndexes
 37850   0048B8  2405               	addwf	doFlash@ledno^(0+1280),w,c
 37851   0048BA  6ED9               	movwf	fsr2l,c
 37852   0048BC  6ADA               	clrf	fsr2h,c
 37853   0048BE  0E07               	movlw	high _ledPaletteIndexes
 37854   0048C0  22DA               	addwfc	fsr2h,f,c
 37855   0048C2  38DF               	swapf	223,w,c
 37856   0048C4  0B0F               	andlw	15
 37857   0048C6  0D03               	mullw	3
 37858   0048C8  50F3               	movf	243,w,c
 37859   0048CA  ECC4  F039         	call	_getNV
 37860   0048CE  5005               	movf	doFlash@ledno^(0+1280),w,c
 37861   0048D0  0D03               	mullw	3
 37862   0048D2  0E7C               	movlw	low _leds
 37863   0048D4  24F3               	addwf	243,w,c
 37864   0048D6  6ED9               	movwf	fsr2l,c
 37865   0048D8  0E0B               	movlw	high _leds
 37866   0048DA  20F4               	addwfc	prodh,w,c
 37867   0048DC  6EDA               	movwf	fsr2h,c
 37868   0048DE  C501  F4DF         	movff	?_getNV,indf2
 37869                           
 37870                           ;../canargb_leds.c: 302:             leds[ledno].g = ((uint8_t)getNV((ledPaletteIndexes[
      +                          ledno].asNibbles.flashOffPaletteIndex)*3+1));
 37871   0048E2  0E00               	movlw	low _ledPaletteIndexes
 37872   0048E4  2405               	addwf	doFlash@ledno^(0+1280),w,c
 37873   0048E6  6ED9               	movwf	fsr2l,c
 37874   0048E8  6ADA               	clrf	fsr2h,c
 37875   0048EA  0E07               	movlw	high _ledPaletteIndexes
 37876   0048EC  22DA               	addwfc	fsr2h,f,c
 37877   0048EE  38DF               	swapf	223,w,c
 37878   0048F0  0B0F               	andlw	15
 37879   0048F2  0D03               	mullw	3
 37880   0048F4  28F3               	incf	243,w,c
 37881   0048F6  ECC4  F039         	call	_getNV
 37882   0048FA  5005               	movf	doFlash@ledno^(0+1280),w,c
 37883   0048FC  0D03               	mullw	3
 37884   0048FE  0E7D               	movlw	low (_leds+1)
 37885   004900  24F3               	addwf	243,w,c
 37886   004902  6ED9               	movwf	fsr2l,c
 37887   004904  0E0B               	movlw	high (_leds+1)
 37888   004906  20F4               	addwfc	prodh,w,c
 37889   004908  6EDA               	movwf	fsr2h,c
 37890   00490A  C501  F4DF         	movff	?_getNV,indf2
 37891                           
 37892                           ;../canargb_leds.c: 303:             leds[ledno].b = ((uint8_t)getNV((ledPaletteIndexes[
      +                          ledno].asNibbles.flashOffPaletteIndex)*3+2));
 37893   00490E  0E00               	movlw	low _ledPaletteIndexes
 37894   004910  2405               	addwf	doFlash@ledno^(0+1280),w,c
 37895   004912  6ED9               	movwf	fsr2l,c
 37896   004914  6ADA               	clrf	fsr2h,c
 37897   004916  0E07               	movlw	high _ledPaletteIndexes
 37898   004918  22DA               	addwfc	fsr2h,f,c
 37899   00491A  38DF               	swapf	223,w,c
 37900   00491C  0B0F               	andlw	15
 37901   00491E  0D03               	mullw	3
 37902   004920  50F3               	movf	243,w,c
 37903   004922  0F02               	addlw	2
 37904   004924  ECC4  F039         	call	_getNV
 37905   004928  5005               	movf	doFlash@ledno^(0+1280),w,c
 37906   00492A  0D03               	mullw	3
 37907   00492C  0E7E               	movlw	low (_leds+2)
 37908   00492E  24F3               	addwf	243,w,c
 37909   004930  6ED9               	movwf	fsr2l,c
 37910   004932  0E0B               	movlw	high (_leds+2)
 37911   004934  20F4               	addwfc	prodh,w,c
 37912   004936  6EDA               	movwf	fsr2h,c
 37913   004938  C501  F4DF         	movff	?_getNV,indf2
 37914   00493C                     l9270:
 37915                           
 37916                           ;../canargb_leds.c: 305:     }
 37917   00493C  2A05               	incf	doFlash@ledno^(0+1280),f,c
 37918   00493E  2805               	incf	doFlash@ledno^(0+1280),w,c
 37919   004940  A4D8               	btfss	status,2,c
 37920   004942  EFA5  F024         	goto	u6761
 37921   004946  EFA7  F024         	goto	u6760
 37922   00494A                     u6761:
 37923   00494A  EF0D  F024         	goto	l9264
 37924   00494E                     u6760:
 37925   00494E                     
 37926                           ;../canargb_leds.c: 306:     refreshRequired = 1;
 37927   00494E  0E01               	movlw	1
 37928   004950  0105               	movlb	5	; () banked
 37929   004952  6F91               	movwf	_refreshRequired& (0+255),b
 37930   004954                     
 37931                           ; BSR set to: 5
 37932   004954  0012               	return		;funcret
 37933   004956                     __end_of_doFlash:
 37934                           	callstack 0
 37935                           
 37936 ;; *************** function _getNV *****************
 37937 ;; Defined at:
 37938 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 37939 ;; Parameters:    Size  Location     Type
 37940 ;;  index           1    wreg     unsigned char 
 37941 ;; Auto vars:     Size  Location     Type
 37942 ;;  index           1    3[COMRAM] unsigned char 
 37943 ;; Return value:  Size  Location     Type
 37944 ;;                  2    0[COMRAM] short 
 37945 ;; Registers used:
 37946 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37947 ;; Tracked objects:
 37948 ;;		On entry : 0/0
 37949 ;;		On exit  : 0/0
 37950 ;;		Unchanged: 0/0
 37951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37956 ;;Total ram usage:        4 bytes
 37957 ;; Hardware stack levels used: 1
 37958 ;; Hardware stack levels required when called: 1
 37959 ;; This function calls:
 37960 ;;		Nothing
 37961 ;; This function is called by:
 37962 ;;		_nvProcessMessage
 37963 ;;		_nvTRnvrdCallback
 37964 ;;		_doFlash
 37965 ;; This function uses a non-reentrant model
 37966 ;;
 37967                           
 37968                           	psect	text105
 37969   007388                     __ptext105:
 37970                           	callstack 0
 37971   007388                     _getNV:
 37972                           	callstack 122
 37973                           
 37974                           ; BSR set to: 5
 37975                           ;incstack = 0
 37976                           ;getNV@index stored from wreg
 37977   007388  6E04               	movwf	getNV@index^(0+1280),c
 37978   00738A                     
 37979                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 48;
 37980   00738A  5004               	movf	getNV@index^(0+1280),w,c
 37981   00738C  A4D8               	btfss	status,2,c
 37982   00738E  EFCB  F039         	goto	u5721
 37983   007392  EFCD  F039         	goto	u5720
 37984   007396                     u5721:
 37985   007396  EFD3  F039         	goto	l8310
 37986   00739A                     u5720:
 37987   00739A  0E00               	movlw	0
 37988   00739C  6E02               	movwf	(?_getNV+1)^(0+1280),c
 37989   00739E  0E30               	movlw	48
 37990   0073A0  6E01               	movwf	?_getNV^(0+1280),c
 37991   0073A2  EFEC  F039         	goto	l1334
 37992   0073A6                     l8310:
 37993                           
 37994                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 48) return -CMDERR_INV_NV_IDX;
 37995   0073A6  0E30               	movlw	48
 37996   0073A8  6404               	cpfsgt	getNV@index^(0+1280),c
 37997   0073AA  EFD9  F039         	goto	u5731
 37998   0073AE  EFDB  F039         	goto	u5730
 37999   0073B2                     u5731:
 38000   0073B2  EFE1  F039         	goto	l8316
 38001   0073B6                     u5730:
 38002   0073B6  0EFF               	movlw	255
 38003   0073B8  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38004   0073BA  0EF6               	movlw	246
 38005   0073BC  6E01               	movwf	?_getNV^(0+1280),c
 38006   0073BE  EFEC  F039         	goto	l1334
 38007   0073C2                     l8316:
 38008                           
 38009                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 38010   0073C2  0E00               	movlw	low _nvCache
 38011   0073C4  2404               	addwf	getNV@index^(0+1280),w,c
 38012   0073C6  6ED9               	movwf	fsr2l,c
 38013   0073C8  6ADA               	clrf	fsr2h,c
 38014   0073CA  0E06               	movlw	high _nvCache
 38015   0073CC  22DA               	addwfc	fsr2h,f,c
 38016   0073CE  50DF               	movf	indf2,w,c
 38017   0073D0  6E03               	movwf	??_getNV^(0+1280),c
 38018   0073D2  5003               	movf	??_getNV^(0+1280),w,c
 38019   0073D4  6E01               	movwf	?_getNV^(0+1280),c
 38020   0073D6  6A02               	clrf	(?_getNV+1)^(0+1280),c
 38021   0073D8                     l1334:
 38022   0073D8  0012               	return		;funcret
 38023   0073DA                     __end_of_getNV:
 38024                           	callstack 0
 38025                           
 38026 ;; *************** function _initRomOps *****************
 38027 ;; Defined at:
 38028 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 38029 ;; Parameters:    Size  Location     Type
 38030 ;;		None
 38031 ;; Auto vars:     Size  Location     Type
 38032 ;;		None
 38033 ;; Return value:  Size  Location     Type
 38034 ;;                  1    wreg      void 
 38035 ;; Registers used:
 38036 ;;		wreg, status,2
 38037 ;; Tracked objects:
 38038 ;;		On entry : 0/0
 38039 ;;		On exit  : 0/0
 38040 ;;		Unchanged: 0/0
 38041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38046 ;;Total ram usage:        0 bytes
 38047 ;; Hardware stack levels used: 1
 38048 ;; Hardware stack levels required when called: 1
 38049 ;; This function calls:
 38050 ;;		Nothing
 38051 ;; This function is called by:
 38052 ;;		_main
 38053 ;; This function uses a non-reentrant model
 38054 ;;
 38055                           
 38056                           	psect	text106
 38057   007BFE                     __ptext106:
 38058                           	callstack 0
 38059   007BFE                     _initRomOps:
 38060                           	callstack 125
 38061   007BFE                     
 38062                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 38063   007BFE  0105               	movlb	5	; () banked
 38064   007C00  6B9B               	clrf	_flashFlags& (0+255),b
 38065   007C02                     
 38066                           ; BSR set to: 5
 38067                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 38068   007C02  0E00               	movlw	0
 38069   007C04  6F80               	movwf	_flashBlock& (0+255),b
 38070   007C06  0E08               	movlw	8
 38071   007C08  6F81               	movwf	(_flashBlock+1)& (0+255),b
 38072   007C0A  0E00               	movlw	0
 38073   007C0C  6F82               	movwf	(_flashBlock+2)& (0+255),b
 38074   007C0E                     
 38075                           ; BSR set to: 5
 38076                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 38077   007C0E  6AF8               	clrf	248,c	;volatile
 38078   007C10                     
 38079                           ; BSR set to: 5
 38080                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 38081   007C10  0100               	movlb	0	; () banked
 38082   007C12  9F41               	bcf	65,7,b	;volsfr
 38083   007C14                     
 38084                           ; BSR set to: 0
 38085   007C14  0012               	return		;funcret
 38086   007C16                     __end_of_initRomOps:
 38087                           	callstack 0
 38088                           
 38089 ;; *************** function _checkPowerOnPb *****************
 38090 ;; Defined at:
 38091 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 38092 ;; Parameters:    Size  Location     Type
 38093 ;;		None
 38094 ;; Auto vars:     Size  Location     Type
 38095 ;;  i               1   59[COMRAM] unsigned char 
 38096 ;; Return value:  Size  Location     Type
 38097 ;;                  1    wreg      void 
 38098 ;; Registers used:
 38099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38100 ;; Tracked objects:
 38101 ;;		On entry : 0/0
 38102 ;;		On exit  : 0/0
 38103 ;;		Unchanged: 0/0
 38104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38109 ;;Total ram usage:        1 bytes
 38110 ;; Hardware stack levels used: 1
 38111 ;; Hardware stack levels required when called: 11
 38112 ;; This function calls:
 38113 ;;		_APP_testMode
 38114 ;;		_factoryReset
 38115 ;;		_pbDownTimer
 38116 ;;		_pbUpTimer
 38117 ;;		_showStatus
 38118 ;; This function is called by:
 38119 ;;		_main
 38120 ;; This function uses a non-reentrant model
 38121 ;;
 38122                           
 38123                           	psect	text107
 38124   005F72                     __ptext107:
 38125                           	callstack 0
 38126   005F72                     _checkPowerOnPb:
 38127                           	callstack 115
 38128   005F72                     
 38129                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA2))) {
 38130   005F72  B4CE               	btfsc	206,2,c	;volatile
 38131   005F74  EFBE  F02F         	goto	u8391
 38132   005F78  EFC0  F02F         	goto	u8390
 38133   005F7C                     u8391:
 38134   005F7C  EF0B  F030         	goto	l1803
 38135   005F80                     u8390:
 38136   005F80                     
 38137                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 38138   005F80  0E1C               	movlw	28
 38139   005F82  EC7F  F02C         	call	_pbDownTimer
 38140   005F86  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38141   005F88                     
 38142                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 38143   005F88  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 38144   005F8A  A4D8               	btfss	status,2,c
 38145   005F8C  EFCA  F02F         	goto	u8401
 38146   005F90  EFCC  F02F         	goto	u8400
 38147   005F94                     u8401:
 38148   005F94  EFD0  F02F         	goto	l10850
 38149   005F98                     u8400:
 38150   005F98  EF0B  F030         	goto	l1803
 38151   005F9C                     l10846:
 38152                           
 38153                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 38154   005F9C  EF0B  F030         	goto	l1803
 38155   005FA0                     l10850:
 38156   005FA0  0E04               	movlw	4
 38157   005FA2  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 38158   005FA4  EFD6  F02F         	goto	u8411
 38159   005FA8  EFD8  F02F         	goto	u8410
 38160   005FAC                     u8411:
 38161   005FAC  EFDC  F02F         	goto	l10854
 38162   005FB0                     u8410:
 38163   005FB0                     
 38164                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 38165   005FB0  EC35  F01C         	call	_APP_testMode	;wreg free
 38166                           
 38167                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 38168   005FB4  EF0B  F030         	goto	l1803
 38169   005FB8                     l10854:
 38170   005FB8  0E07               	movlw	7
 38171   005FBA  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 38172   005FBC  EFE2  F02F         	goto	u8421
 38173   005FC0  EFE4  F02F         	goto	u8420
 38174   005FC4                     u8421:
 38175   005FC4  EF0B  F030         	goto	l1803
 38176   005FC8                     u8420:
 38177   005FC8                     
 38178                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 38179   005FC8  0E04               	movlw	4
 38180   005FCA  ECAB  F024         	call	_showStatus
 38181                           
 38182                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 38183   005FCE  0E05               	movlw	5
 38184   005FD0  EC1E  F02C         	call	_pbUpTimer
 38185   005FD4  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38186   005FD6                     
 38187                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 38188   005FD6  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 38189   005FD8  A4D8               	btfss	status,2,c
 38190   005FDA  EFF1  F02F         	goto	u8431
 38191   005FDE  EFF3  F02F         	goto	u8430
 38192   005FE2                     u8431:
 38193   005FE2  EFF5  F02F         	goto	l10862
 38194   005FE6                     u8430:
 38195   005FE6  EF0B  F030         	goto	l1803
 38196   005FEA                     l10862:
 38197                           
 38198                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 38199   005FEA  0E05               	movlw	5
 38200   005FEC  EC7F  F02C         	call	_pbDownTimer
 38201   005FF0  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38202   005FF2                     
 38203                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 38204   005FF2  0E01               	movlw	1
 38205   005FF4  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 38206   005FF6  EFFF  F02F         	goto	u8441
 38207   005FFA  EF01  F030         	goto	u8440
 38208   005FFE                     u8441:
 38209   005FFE  EFCE  F02F         	goto	l10846
 38210   006002                     u8440:
 38211   006002  0E04               	movlw	4
 38212   006004  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 38213   006006  EF07  F030         	goto	u8451
 38214   00600A  EF09  F030         	goto	u8450
 38215   00600E                     u8451:
 38216   00600E  EFCE  F02F         	goto	l10846
 38217   006012                     u8450:
 38218   006012                     
 38219                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 38220   006012  EC85  F027         	call	_factoryReset	;wreg free
 38221   006016                     l1803:
 38222   006016  0012               	return		;funcret
 38223   006018                     __end_of_checkPowerOnPb:
 38224                           	callstack 0
 38225                           
 38226 ;; *************** function _showStatus *****************
 38227 ;; Defined at:
 38228 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 38229 ;; Parameters:    Size  Location     Type
 38230 ;;  s               1    wreg     enum E23436
 38231 ;; Auto vars:     Size  Location     Type
 38232 ;;  s               1    2[COMRAM] enum E23436
 38233 ;; Return value:  Size  Location     Type
 38234 ;;                  1    wreg      void 
 38235 ;; Registers used:
 38236 ;;		wreg, status,2, status,0
 38237 ;; Tracked objects:
 38238 ;;		On entry : 0/0
 38239 ;;		On exit  : 0/0
 38240 ;;		Unchanged: 0/0
 38241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38245 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38246 ;;Total ram usage:        3 bytes
 38247 ;; Hardware stack levels used: 1
 38248 ;; Hardware stack levels required when called: 1
 38249 ;; This function calls:
 38250 ;;		Nothing
 38251 ;; This function is called by:
 38252 ;;		_setLEDsByMode
 38253 ;;		_checkPowerOnPb
 38254 ;;		_poll
 38255 ;; This function uses a non-reentrant model
 38256 ;;
 38257                           
 38258                           	psect	text108
 38259   004956                     __ptext108:
 38260                           	callstack 0
 38261   004956                     _showStatus:
 38262                           	callstack 122
 38263                           
 38264                           ;incstack = 0
 38265                           ;showStatus@s stored from wreg
 38266   004956  6E03               	movwf	showStatus@s^(0+1280),c
 38267   004958                     
 38268                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 38269   004958  EF0A  F025         	goto	l8276
 38270   00495C                     l1576:
 38271                           
 38272                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 38273   00495C  0105               	movlb	5	; () banked
 38274   00495E  6B89               	clrf	_ledState& (0+255),b
 38275                           
 38276                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 38277   004960  6B8A               	clrf	(_ledState+1)& (0+255),b
 38278                           
 38279                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 38280   004962  EF4B  F025         	goto	l1596
 38281   004966                     l8246:
 38282                           
 38283                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 38284   004966  0E01               	movlw	1
 38285   004968  0105               	movlb	5	; () banked
 38286   00496A  6F89               	movwf	_ledState& (0+255),b
 38287   00496C                     
 38288                           ; BSR set to: 5
 38289                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 38290   00496C  6B8A               	clrf	(_ledState+1)& (0+255),b
 38291                           
 38292                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 38293   00496E  EF4B  F025         	goto	l1596
 38294   004972                     l1579:
 38295                           
 38296                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 38297   004972  0105               	movlb	5	; () banked
 38298   004974  6B89               	clrf	_ledState& (0+255),b
 38299   004976                     
 38300                           ; BSR set to: 5
 38301                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 38302   004976  0E03               	movlw	3
 38303   004978  6F8A               	movwf	(_ledState+1)& (0+255),b
 38304                           
 38305                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 38306   00497A  EF4B  F025         	goto	l1596
 38307   00497E                     l1582:
 38308   00497E                     l1584:
 38309                           
 38310                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 38311   00497E  0105               	movlb	5	; () banked
 38312   004980  6B89               	clrf	_ledState& (0+255),b
 38313   004982                     
 38314                           ; BSR set to: 5
 38315                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 38316   004982  0E01               	movlw	1
 38317   004984  6F8A               	movwf	(_ledState+1)& (0+255),b
 38318                           
 38319                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 38320   004986  EF4B  F025         	goto	l1596
 38321   00498A                     l1585:
 38322                           
 38323                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 38324   00498A  0105               	movlb	5	; () banked
 38325   00498C  6B88               	clrf	(_flashCounter+1)& (0+255),b
 38326   00498E                     
 38327                           ; BSR set to: 5
 38328                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 38329   00498E  0E19               	movlw	25
 38330   004990  6F87               	movwf	_flashCounter& (0+255),b
 38331                           
 38332                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 38333   004992  0E02               	movlw	2
 38334   004994  6F89               	movwf	_ledState& (0+255),b
 38335                           
 38336                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 38337   004996  0E02               	movlw	2
 38338   004998  6F8A               	movwf	(_ledState+1)& (0+255),b
 38339                           
 38340                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 38341   00499A  EF4B  F025         	goto	l1596
 38342   00499E                     l8256:
 38343                           
 38344                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 38345   00499E  0105               	movlb	5	; () banked
 38346   0049A0  29A1               	incf	_mode_state& (0+255),w,b
 38347   0049A2  A4D8               	btfss	status,2,c
 38348   0049A4  EFD6  F024         	goto	u5661
 38349   0049A8  EFD8  F024         	goto	u5660
 38350   0049AC                     u5661:
 38351   0049AC  EFDC  F024         	goto	l8260
 38352   0049B0                     u5660:
 38353   0049B0                     
 38354                           ; BSR set to: 5
 38355                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 38356   0049B0  0E06               	movlw	6
 38357   0049B2  6F8A               	movwf	(_ledState+1)& (0+255),b
 38358                           
 38359                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 38360   0049B4  EF4B  F025         	goto	l1596
 38361   0049B8                     l8260:
 38362                           
 38363                           ; BSR set to: 5
 38364   0049B8  05A1               	decf	_mode_state& (0+255),w,b
 38365   0049BA  A4D8               	btfss	status,2,c
 38366   0049BC  EFE2  F024         	goto	u5671
 38367   0049C0  EFE4  F024         	goto	u5670
 38368   0049C4                     u5671:
 38369   0049C4  EF4B  F025         	goto	l1596
 38370   0049C8                     u5670:
 38371   0049C8                     
 38372                           ; BSR set to: 5
 38373                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 38374   0049C8  0E06               	movlw	6
 38375   0049CA  6F89               	movwf	_ledState& (0+255),b
 38376   0049CC  EF4B  F025         	goto	l1596
 38377   0049D0                     l8264:
 38378                           
 38379                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 38380   0049D0  0105               	movlb	5	; () banked
 38381   0049D2  29A1               	incf	_mode_state& (0+255),w,b
 38382   0049D4  A4D8               	btfss	status,2,c
 38383   0049D6  EFEF  F024         	goto	u5681
 38384   0049DA  EFF1  F024         	goto	u5680
 38385   0049DE                     u5681:
 38386   0049DE  EFF5  F024         	goto	l8268
 38387   0049E2                     u5680:
 38388   0049E2                     
 38389                           ; BSR set to: 5
 38390                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 38391   0049E2  0E08               	movlw	8
 38392   0049E4  6F8A               	movwf	(_ledState+1)& (0+255),b
 38393                           
 38394                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 38395   0049E6  EF4B  F025         	goto	l1596
 38396   0049EA                     l8268:
 38397                           
 38398                           ; BSR set to: 5
 38399   0049EA  05A1               	decf	_mode_state& (0+255),w,b
 38400   0049EC  A4D8               	btfss	status,2,c
 38401   0049EE  EFFB  F024         	goto	u5691
 38402   0049F2  EFFD  F024         	goto	u5690
 38403   0049F6                     u5691:
 38404   0049F6  EF4B  F025         	goto	l1596
 38405   0049FA                     u5690:
 38406   0049FA                     
 38407                           ; BSR set to: 5
 38408                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 38409   0049FA  0E08               	movlw	8
 38410   0049FC  6F89               	movwf	_ledState& (0+255),b
 38411   0049FE  EF4B  F025         	goto	l1596
 38412   004A02                     l1595:
 38413                           
 38414                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 38415   004A02  0105               	movlb	5	; () banked
 38416   004A04  6B88               	clrf	(_flashCounter+1)& (0+255),b
 38417                           
 38418                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 38419   004A06  6B87               	clrf	_flashCounter& (0+255),b
 38420   004A08                     
 38421                           ; BSR set to: 5
 38422                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 38423   004A08  0E02               	movlw	2
 38424   004A0A  6F89               	movwf	_ledState& (0+255),b
 38425                           
 38426                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 38427   004A0C  0E02               	movlw	2
 38428   004A0E  6F8A               	movwf	(_ledState+1)& (0+255),b
 38429                           
 38430                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 38431   004A10  EF4B  F025         	goto	l1596
 38432   004A14                     l8276:
 38433   004A14  5003               	movf	showStatus@s^(0+1280),w,c
 38434   004A16  6E01               	movwf	??_showStatus^(0+1280),c
 38435   004A18  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 38436                           
 38437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38438                           ; Switch size 1, requested type "simple"
 38439                           ; Number of cases is 1, Range of values is 0 to 0
 38440                           ; switch strategies available:
 38441                           ; Name         Instructions Cycles
 38442                           ; simple_byte            4     3 (average)
 38443                           ;	Chosen strategy is simple_byte
 38444   004A1A  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 38445   004A1C  0A00               	xorlw	0	; case 0
 38446   004A1E  B4D8               	btfsc	status,2,c
 38447   004A20  EF14  F025         	goto	l11526
 38448   004A24  EF4B  F025         	goto	l1596
 38449   004A28                     l11526:
 38450                           
 38451                           ; Switch size 1, requested type "simple"
 38452                           ; Number of cases is 13, Range of values is 0 to 12
 38453                           ; switch strategies available:
 38454                           ; Name         Instructions Cycles
 38455                           ; simple_byte           40    21 (average)
 38456                           ;	Chosen strategy is simple_byte
 38457   004A28  5001               	movf	??_showStatus^(0+1280),w,c
 38458   004A2A  0A00               	xorlw	0	; case 0
 38459   004A2C  B4D8               	btfsc	status,2,c
 38460   004A2E  EFAE  F024         	goto	l1576
 38461   004A32  0A01               	xorlw	1	; case 1
 38462   004A34  B4D8               	btfsc	status,2,c
 38463   004A36  EFB3  F024         	goto	l8246
 38464   004A3A  0A03               	xorlw	3	; case 2
 38465   004A3C  B4D8               	btfsc	status,2,c
 38466   004A3E  EFB9  F024         	goto	l1579
 38467   004A42  0A01               	xorlw	1	; case 3
 38468   004A44  B4D8               	btfsc	status,2,c
 38469   004A46  EFBF  F024         	goto	l1582
 38470   004A4A  0A07               	xorlw	7	; case 4
 38471   004A4C  B4D8               	btfsc	status,2,c
 38472   004A4E  EFC5  F024         	goto	l1585
 38473   004A52  0A01               	xorlw	1	; case 5
 38474   004A54  B4D8               	btfsc	status,2,c
 38475   004A56  EFBF  F024         	goto	l1584
 38476   004A5A  0A03               	xorlw	3	; case 6
 38477   004A5C  B4D8               	btfsc	status,2,c
 38478   004A5E  EFBF  F024         	goto	l1584
 38479   004A62  0A01               	xorlw	1	; case 7
 38480   004A64  B4D8               	btfsc	status,2,c
 38481   004A66  EFCF  F024         	goto	l8256
 38482   004A6A  0A0F               	xorlw	15	; case 8
 38483   004A6C  B4D8               	btfsc	status,2,c
 38484   004A6E  EFE8  F024         	goto	l8264
 38485   004A72  0A01               	xorlw	1	; case 9
 38486   004A74  B4D8               	btfsc	status,2,c
 38487   004A76  EFBF  F024         	goto	l1584
 38488   004A7A  0A03               	xorlw	3	; case 10
 38489   004A7C  B4D8               	btfsc	status,2,c
 38490   004A7E  EFBF  F024         	goto	l1584
 38491   004A82  0A01               	xorlw	1	; case 11
 38492   004A84  B4D8               	btfsc	status,2,c
 38493   004A86  EF01  F025         	goto	l1595
 38494   004A8A  0A07               	xorlw	7	; case 12
 38495   004A8C  B4D8               	btfsc	status,2,c
 38496   004A8E  EF01  F025         	goto	l1595
 38497   004A92  EF4B  F025         	goto	l1596
 38498   004A96                     l1596:
 38499   004A96  0012               	return		;funcret
 38500   004A98                     __end_of_showStatus:
 38501                           	callstack 0
 38502                           
 38503 ;; *************** function _pbUpTimer *****************
 38504 ;; Defined at:
 38505 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 38506 ;; Parameters:    Size  Location     Type
 38507 ;;  timeout         1    wreg     unsigned char 
 38508 ;; Auto vars:     Size  Location     Type
 38509 ;;  timeout         1   27[COMRAM] unsigned char 
 38510 ;; Return value:  Size  Location     Type
 38511 ;;                  1    wreg      unsigned char 
 38512 ;; Registers used:
 38513 ;;		wreg, status,2, status,0, cstack
 38514 ;; Tracked objects:
 38515 ;;		On entry : 0/0
 38516 ;;		On exit  : 0/0
 38517 ;;		Unchanged: 0/0
 38518 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38522 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38523 ;;Total ram usage:        5 bytes
 38524 ;; Hardware stack levels used: 1
 38525 ;; Hardware stack levels required when called: 3
 38526 ;; This function calls:
 38527 ;;		___lldiv
 38528 ;;		___lmul
 38529 ;;		_leds_poll
 38530 ;;		_tickGet
 38531 ;; This function is called by:
 38532 ;;		_checkPowerOnPb
 38533 ;; This function uses a non-reentrant model
 38534 ;;
 38535                           
 38536                           	psect	text109
 38537   00583C                     __ptext109:
 38538                           	callstack 0
 38539   00583C                     _pbUpTimer:
 38540                           	callstack 122
 38541                           
 38542                           ;incstack = 0
 38543                           ;pbUpTimer@timeout stored from wreg
 38544   00583C  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 38545   00583E                     
 38546                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 38547   00583E  EC66  F036         	call	_tickGet	;wreg free
 38548   005842  C501  F56C         	movff	?_tickGet,_pbTimer
 38549   005846  C502  F56D         	movff	?_tickGet+1,_pbTimer+1
 38550   00584A  C503  F56E         	movff	?_tickGet+2,_pbTimer+2
 38551   00584E  C504  F56F         	movff	?_tickGet+3,_pbTimer+3
 38552                           
 38553                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 38554   005852  EF5D  F02C         	goto	l1794
 38555   005856                     l10762:
 38556                           
 38557                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 38558   005856  EC88  F017         	call	_leds_poll	;wreg free
 38559                           
 38560                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 38561   00585A  EC66  F036         	call	_tickGet	;wreg free
 38562   00585E  0105               	movlb	5	; () banked
 38563   005860  516C               	movf	_pbTimer& (0+255),w,b
 38564   005862  5C01               	subwf	?_tickGet^(0+1280),w,c
 38565   005864  6E18               	movwf	??_pbUpTimer^(0+1280),c
 38566   005866  516D               	movf	(_pbTimer+1)& (0+255),w,b
 38567   005868  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 38568   00586A  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 38569   00586C  516E               	movf	(_pbTimer+2)& (0+255),w,b
 38570   00586E  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 38571   005870  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 38572   005872  516F               	movf	(_pbTimer+3)& (0+255),w,b
 38573   005874  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 38574   005876  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 38575   005878  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 38576   00587A  6E01               	movwf	___lmul@multiplier^(0+1280),c
 38577   00587C  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 38578   00587E  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 38579   005880  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 38580   005882  0E24               	movlw	36
 38581   005884  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 38582   005886  0EF4               	movlw	244
 38583   005888  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 38584   00588A  0E00               	movlw	0
 38585   00588C  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 38586   00588E  0E00               	movlw	0
 38587   005890  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 38588   005892  ECB8  F037         	call	___lmul	;wreg free
 38589   005896  5018               	movf	??_pbUpTimer^(0+1280),w,c
 38590   005898  5C01               	subwf	?___lmul^(0+1280),w,c
 38591   00589A  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 38592   00589C  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 38593   00589E  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 38594   0058A0  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 38595   0058A2  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 38596   0058A4  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 38597   0058A6  B0D8               	btfsc	status,0,c
 38598   0058A8  EF58  F02C         	goto	u8321
 38599   0058AC  EF5A  F02C         	goto	u8320
 38600   0058B0                     u8321:
 38601   0058B0  EF5D  F02C         	goto	l1794
 38602   0058B4                     u8320:
 38603   0058B4                     
 38604                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 38605   0058B4  0E00               	movlw	0
 38606   0058B6  EF7E  F02C         	goto	l1797
 38607   0058BA                     l1794:
 38608                           
 38609                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 38610   0058BA  B4CE               	btfsc	206,2,c	;volatile
 38611   0058BC  EF62  F02C         	goto	u8331
 38612   0058C0  EF64  F02C         	goto	u8330
 38613   0058C4                     u8331:
 38614   0058C4  EF2B  F02C         	goto	l10762
 38615   0058C8                     u8330:
 38616   0058C8                     
 38617                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 38618   0058C8  EC66  F036         	call	_tickGet	;wreg free
 38619   0058CC  0105               	movlb	5	; () banked
 38620   0058CE  516C               	movf	_pbTimer& (0+255),w,b
 38621   0058D0  5C01               	subwf	?_tickGet^(0+1280),w,c
 38622   0058D2  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 38623   0058D4  516D               	movf	(_pbTimer+1)& (0+255),w,b
 38624   0058D6  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 38625   0058D8  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 38626   0058DA  516E               	movf	(_pbTimer+2)& (0+255),w,b
 38627   0058DC  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 38628   0058DE  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 38629   0058E0  516F               	movf	(_pbTimer+3)& (0+255),w,b
 38630   0058E2  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 38631   0058E4  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 38632   0058E6  0E24               	movlw	36
 38633   0058E8  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 38634   0058EA  0EF4               	movlw	244
 38635   0058EC  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 38636   0058EE  0E00               	movlw	0
 38637   0058F0  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 38638   0058F2  0E00               	movlw	0
 38639   0058F4  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 38640   0058F6  EC5F  F030         	call	___lldiv	;wreg free
 38641   0058FA  500B               	movf	?___lldiv^(0+1280),w,c
 38642   0058FC                     l1797:
 38643   0058FC  0012               	return		;funcret
 38644   0058FE                     __end_of_pbUpTimer:
 38645                           	callstack 0
 38646                           
 38647 ;; *************** function _pbDownTimer *****************
 38648 ;; Defined at:
 38649 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 38650 ;; Parameters:    Size  Location     Type
 38651 ;;  timeout         1    wreg     unsigned char 
 38652 ;; Auto vars:     Size  Location     Type
 38653 ;;  timeout         1   27[COMRAM] unsigned char 
 38654 ;; Return value:  Size  Location     Type
 38655 ;;                  1    wreg      unsigned char 
 38656 ;; Registers used:
 38657 ;;		wreg, status,2, status,0, cstack
 38658 ;; Tracked objects:
 38659 ;;		On entry : 0/0
 38660 ;;		On exit  : 0/0
 38661 ;;		Unchanged: 0/0
 38662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38667 ;;Total ram usage:        5 bytes
 38668 ;; Hardware stack levels used: 1
 38669 ;; Hardware stack levels required when called: 3
 38670 ;; This function calls:
 38671 ;;		___lldiv
 38672 ;;		___lmul
 38673 ;;		_leds_poll
 38674 ;;		_tickGet
 38675 ;; This function is called by:
 38676 ;;		_checkPowerOnPb
 38677 ;; This function uses a non-reentrant model
 38678 ;;
 38679                           
 38680                           	psect	text110
 38681   0058FE                     __ptext110:
 38682                           	callstack 0
 38683   0058FE                     _pbDownTimer:
 38684                           	callstack 122
 38685                           
 38686                           ;incstack = 0
 38687                           ;pbDownTimer@timeout stored from wreg
 38688   0058FE  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 38689   005900                     
 38690                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 38691   005900  EC66  F036         	call	_tickGet	;wreg free
 38692   005904  C501  F56C         	movff	?_tickGet,_pbTimer
 38693   005908  C502  F56D         	movff	?_tickGet+1,_pbTimer+1
 38694   00590C  C503  F56E         	movff	?_tickGet+2,_pbTimer+2
 38695   005910  C504  F56F         	movff	?_tickGet+3,_pbTimer+3
 38696                           
 38697                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 38698   005914  EFBE  F02C         	goto	l1787
 38699   005918                     l10750:
 38700                           
 38701                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 38702   005918  EC88  F017         	call	_leds_poll	;wreg free
 38703                           
 38704                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 38705   00591C  EC66  F036         	call	_tickGet	;wreg free
 38706   005920  0105               	movlb	5	; () banked
 38707   005922  516C               	movf	_pbTimer& (0+255),w,b
 38708   005924  5C01               	subwf	?_tickGet^(0+1280),w,c
 38709   005926  6E18               	movwf	??_pbDownTimer^(0+1280),c
 38710   005928  516D               	movf	(_pbTimer+1)& (0+255),w,b
 38711   00592A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 38712   00592C  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 38713   00592E  516E               	movf	(_pbTimer+2)& (0+255),w,b
 38714   005930  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 38715   005932  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 38716   005934  516F               	movf	(_pbTimer+3)& (0+255),w,b
 38717   005936  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 38718   005938  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 38719   00593A  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 38720   00593C  6E01               	movwf	___lmul@multiplier^(0+1280),c
 38721   00593E  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 38722   005940  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 38723   005942  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 38724   005944  0E24               	movlw	36
 38725   005946  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 38726   005948  0EF4               	movlw	244
 38727   00594A  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 38728   00594C  0E00               	movlw	0
 38729   00594E  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 38730   005950  0E00               	movlw	0
 38731   005952  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 38732   005954  ECB8  F037         	call	___lmul	;wreg free
 38733   005958  5018               	movf	??_pbDownTimer^(0+1280),w,c
 38734   00595A  5C01               	subwf	?___lmul^(0+1280),w,c
 38735   00595C  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 38736   00595E  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 38737   005960  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 38738   005962  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 38739   005964  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 38740   005966  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 38741   005968  B0D8               	btfsc	status,0,c
 38742   00596A  EFB9  F02C         	goto	u8301
 38743   00596E  EFBB  F02C         	goto	u8300
 38744   005972                     u8301:
 38745   005972  EFBE  F02C         	goto	l1787
 38746   005976                     u8300:
 38747   005976                     
 38748                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 38749   005976  0E00               	movlw	0
 38750   005978  EFDF  F02C         	goto	l1790
 38751   00597C                     l1787:
 38752                           
 38753                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 38754   00597C  A4CE               	btfss	206,2,c	;volatile
 38755   00597E  EFC3  F02C         	goto	u8311
 38756   005982  EFC5  F02C         	goto	u8310
 38757   005986                     u8311:
 38758   005986  EF8C  F02C         	goto	l10750
 38759   00598A                     u8310:
 38760   00598A                     
 38761                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 38762   00598A  EC66  F036         	call	_tickGet	;wreg free
 38763   00598E  0105               	movlb	5	; () banked
 38764   005990  516C               	movf	_pbTimer& (0+255),w,b
 38765   005992  5C01               	subwf	?_tickGet^(0+1280),w,c
 38766   005994  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 38767   005996  516D               	movf	(_pbTimer+1)& (0+255),w,b
 38768   005998  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 38769   00599A  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 38770   00599C  516E               	movf	(_pbTimer+2)& (0+255),w,b
 38771   00599E  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 38772   0059A0  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 38773   0059A2  516F               	movf	(_pbTimer+3)& (0+255),w,b
 38774   0059A4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 38775   0059A6  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 38776   0059A8  0E24               	movlw	36
 38777   0059AA  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 38778   0059AC  0EF4               	movlw	244
 38779   0059AE  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 38780   0059B0  0E00               	movlw	0
 38781   0059B2  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 38782   0059B4  0E00               	movlw	0
 38783   0059B6  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 38784   0059B8  EC5F  F030         	call	___lldiv	;wreg free
 38785   0059BC  500B               	movf	?___lldiv^(0+1280),w,c
 38786   0059BE                     l1790:
 38787   0059BE  0012               	return		;funcret
 38788   0059C0                     __end_of_pbDownTimer:
 38789                           	callstack 0
 38790                           
 38791 ;; *************** function _leds_poll *****************
 38792 ;; Defined at:
 38793 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 38794 ;; Parameters:    Size  Location     Type
 38795 ;;		None
 38796 ;; Auto vars:     Size  Location     Type
 38797 ;;		None
 38798 ;; Return value:  Size  Location     Type
 38799 ;;                  1    wreg      void 
 38800 ;; Registers used:
 38801 ;;		wreg, status,2, status,0, cstack
 38802 ;; Tracked objects:
 38803 ;;		On entry : 0/0
 38804 ;;		On exit  : 0/0
 38805 ;;		Unchanged: 0/0
 38806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38811 ;;Total ram usage:        4 bytes
 38812 ;; Hardware stack levels used: 1
 38813 ;; Hardware stack levels required when called: 2
 38814 ;; This function calls:
 38815 ;;		___awdiv
 38816 ;;		_tickGet
 38817 ;; This function is called by:
 38818 ;;		_pbDownTimer
 38819 ;;		_pbUpTimer
 38820 ;;		_poll
 38821 ;; This function uses a non-reentrant model
 38822 ;;
 38823                           
 38824                           	psect	text111
 38825   002F10                     __ptext111:
 38826                           	callstack 0
 38827   002F10                     _leds_poll:
 38828                           	callstack 123
 38829   002F10                     
 38830                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 38831   002F10  EC66  F036         	call	_tickGet	;wreg free
 38832   002F14  0105               	movlb	5	; () banked
 38833   002F16  5160               	movf	_ledTimer& (0+255),w,b
 38834   002F18  5C01               	subwf	?_tickGet^(0+1280),w,c
 38835   002F1A  6E0B               	movwf	??_leds_poll^(0+1280),c
 38836   002F1C  5161               	movf	(_ledTimer+1)& (0+255),w,b
 38837   002F1E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 38838   002F20  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 38839   002F22  5162               	movf	(_ledTimer+2)& (0+255),w,b
 38840   002F24  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 38841   002F26  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 38842   002F28  5163               	movf	(_ledTimer+3)& (0+255),w,b
 38843   002F2A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 38844   002F2C  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 38845   002F2E  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 38846   002F30  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 38847   002F32  E10B               	bnz	u6440
 38848   002F34  0E72               	movlw	114
 38849   002F36  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 38850   002F38  0E02               	movlw	2
 38851   002F3A  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 38852   002F3C  A0D8               	btfss	status,0,c
 38853   002F3E  EFA3  F017         	goto	u6441
 38854   002F42  EFA5  F017         	goto	u6440
 38855   002F46                     u6441:
 38856   002F46  EF4C  F018         	goto	l9074
 38857   002F4A                     u6440:
 38858   002F4A                     
 38859                           ; BSR set to: 5
 38860                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 38861   002F4A  2B87               	incf	_flashCounter& (0+255),f,b
 38862                           
 38863                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 38864   002F4C  2B88               	incf	(_flashCounter+1)& (0+255),f,b
 38865   002F4E                     
 38866                           ; BSR set to: 5
 38867                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 38868   002F4E  EC66  F036         	call	_tickGet	;wreg free
 38869   002F52  C501  F560         	movff	?_tickGet,_ledTimer
 38870   002F56  C502  F561         	movff	?_tickGet+1,_ledTimer+1
 38871   002F5A  C503  F562         	movff	?_tickGet+2,_ledTimer+2
 38872   002F5E  C504  F563         	movff	?_tickGet+3,_ledTimer+3
 38873   002F62  EF4C  F018         	goto	l9074
 38874   002F66                     l1533:
 38875                           
 38876                           ; BSR set to: 5
 38877                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 38878   002F66  8CBF               	bsf	191,6,c	;volatile
 38879                           
 38880                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 38881   002F68  6B88               	clrf	(_flashCounter+1)& (0+255),b
 38882                           
 38883                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 38884   002F6A  EF18  F019         	goto	l9122
 38885   002F6E                     l1535:
 38886                           
 38887                           ; BSR set to: 5
 38888                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 38889   002F6E  9CBF               	bcf	191,6,c	;volatile
 38890                           
 38891                           ;../../VLCBlib_PIC/statusLeds2.c: 103:             flashCounter[1] = 0;
 38892   002F70  6B88               	clrf	(_flashCounter+1)& (0+255),b
 38893                           
 38894                           ;../../VLCBlib_PIC/statusLeds2.c: 104:             break;
 38895   002F72  EF18  F019         	goto	l9122
 38896   002F76                     l9028:
 38897                           
 38898                           ; BSR set to: 5
 38899                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 38900   002F76  C588  F501         	movff	_flashCounter+1,___awdiv@dividend
 38901   002F7A  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 38902   002F7C  0E00               	movlw	0
 38903   002F7E  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 38904   002F80  0E19               	movlw	25
 38905   002F82  6E03               	movwf	___awdiv@divisor^(0+1280),c
 38906   002F84  ECE0  F02C         	call	___awdiv	;wreg free
 38907   002F88  3A01               	swapf	?___awdiv^(0+1280),f,c
 38908   002F8A  4601               	rlncf	?___awdiv^(0+1280),f,c
 38909   002F8C  4601               	rlncf	?___awdiv^(0+1280),f,c
 38910   002F8E  50BF               	movf	191,w,c	;volatile
 38911   002F90  1801               	xorwf	?___awdiv^(0+1280),w,c
 38912   002F92  0BBF               	andlw	-65
 38913   002F94  1801               	xorwf	?___awdiv^(0+1280),w,c
 38914   002F96  6EBF               	movwf	191,c	;volatile
 38915   002F98                     
 38916                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 38917   002F98  0E31               	movlw	49
 38918   002F9A  0105               	movlb	5	; () banked
 38919   002F9C  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 38920   002F9E  EFD3  F017         	goto	u6451
 38921   002FA2  EFD5  F017         	goto	u6450
 38922   002FA6                     u6451:
 38923   002FA6  EF18  F019         	goto	l9122
 38924   002FAA                     u6450:
 38925   002FAA                     l9032:
 38926                           
 38927                           ; BSR set to: 5
 38928                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 38929   002FAA  6B88               	clrf	(_flashCounter+1)& (0+255),b
 38930   002FAC  EF18  F019         	goto	l9122
 38931   002FB0                     l9034:
 38932                           
 38933                           ; BSR set to: 5
 38934                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 38935   002FB0  C588  F501         	movff	_flashCounter+1,___awdiv@dividend
 38936   002FB4  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 38937   002FB6  0E00               	movlw	0
 38938   002FB8  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 38939   002FBA  0E32               	movlw	50
 38940   002FBC  6E03               	movwf	___awdiv@divisor^(0+1280),c
 38941   002FBE  ECE0  F02C         	call	___awdiv	;wreg free
 38942   002FC2  3A01               	swapf	?___awdiv^(0+1280),f,c
 38943   002FC4  4601               	rlncf	?___awdiv^(0+1280),f,c
 38944   002FC6  4601               	rlncf	?___awdiv^(0+1280),f,c
 38945   002FC8  50BF               	movf	191,w,c	;volatile
 38946   002FCA  1801               	xorwf	?___awdiv^(0+1280),w,c
 38947   002FCC  0BBF               	andlw	-65
 38948   002FCE  1801               	xorwf	?___awdiv^(0+1280),w,c
 38949   002FD0  6EBF               	movwf	191,c	;volatile
 38950   002FD2                     
 38951                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 38952   002FD2  0E63               	movlw	99
 38953   002FD4  0105               	movlb	5	; () banked
 38954   002FD6  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 38955   002FD8  EFF0  F017         	goto	u6461
 38956   002FDC  EFF2  F017         	goto	u6460
 38957   002FE0                     u6461:
 38958   002FE0  EF18  F019         	goto	l9122
 38959   002FE4                     u6460:
 38960   002FE4  EFD5  F017         	goto	l9032
 38961   002FE8                     l9040:
 38962                           
 38963                           ; BSR set to: 5
 38964                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 38965   002FE8  C588  F501         	movff	_flashCounter+1,___awdiv@dividend
 38966   002FEC  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 38967   002FEE  0E00               	movlw	0
 38968   002FF0  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 38969   002FF2  0E64               	movlw	100
 38970   002FF4  6E03               	movwf	___awdiv@divisor^(0+1280),c
 38971   002FF6  ECE0  F02C         	call	___awdiv	;wreg free
 38972   002FFA  3A01               	swapf	?___awdiv^(0+1280),f,c
 38973   002FFC  4601               	rlncf	?___awdiv^(0+1280),f,c
 38974   002FFE  4601               	rlncf	?___awdiv^(0+1280),f,c
 38975   003000  50BF               	movf	191,w,c	;volatile
 38976   003002  1801               	xorwf	?___awdiv^(0+1280),w,c
 38977   003004  0BBF               	andlw	-65
 38978   003006  1801               	xorwf	?___awdiv^(0+1280),w,c
 38979   003008  6EBF               	movwf	191,c	;volatile
 38980   00300A                     
 38981                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 38982   00300A  0EC7               	movlw	199
 38983   00300C  0105               	movlb	5	; () banked
 38984   00300E  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 38985   003010  EF0C  F018         	goto	u6471
 38986   003014  EF0E  F018         	goto	u6470
 38987   003018                     u6471:
 38988   003018  EF18  F019         	goto	l9122
 38989   00301C                     u6470:
 38990   00301C  EFD5  F017         	goto	l9032
 38991   003020                     l1542:
 38992                           
 38993                           ; BSR set to: 5
 38994                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 38995   003020  8CBF               	bsf	191,6,c	;volatile
 38996   003022                     
 38997                           ; BSR set to: 5
 38998                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 38999   003022  0E18               	movlw	24
 39000   003024  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 39001   003026  EF17  F018         	goto	u6481
 39002   00302A  EF19  F018         	goto	u6480
 39003   00302E                     u6481:
 39004   00302E  EF18  F019         	goto	l9122
 39005   003032                     u6480:
 39006   003032                     l9048:
 39007                           
 39008                           ; BSR set to: 5
 39009                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 39010   003032  6B88               	clrf	(_flashCounter+1)& (0+255),b
 39011                           
 39012                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 39013   003034  6B8A               	clrf	(_ledState+1)& (0+255),b
 39014   003036  EF18  F019         	goto	l9122
 39015   00303A                     l1544:
 39016                           
 39017                           ; BSR set to: 5
 39018                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 39019   00303A  9CBF               	bcf	191,6,c	;volatile
 39020   00303C                     
 39021                           ; BSR set to: 5
 39022                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 39023   00303C  0E18               	movlw	24
 39024   00303E  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 39025   003040  EF24  F018         	goto	u6491
 39026   003044  EF26  F018         	goto	u6490
 39027   003048                     u6491:
 39028   003048  EF18  F019         	goto	l9122
 39029   00304C                     u6490:
 39030   00304C                     l9052:
 39031                           
 39032                           ; BSR set to: 5
 39033                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 39034   00304C  6B88               	clrf	(_flashCounter+1)& (0+255),b
 39035   00304E                     
 39036                           ; BSR set to: 5
 39037                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 39038   00304E  0E01               	movlw	1
 39039   003050  6F8A               	movwf	(_ledState+1)& (0+255),b
 39040   003052  EF18  F019         	goto	l9122
 39041   003056                     l1546:
 39042                           
 39043                           ; BSR set to: 5
 39044                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 39045   003056  8CBF               	bsf	191,6,c	;volatile
 39046   003058                     
 39047                           ; BSR set to: 5
 39048                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 39049   003058  0E31               	movlw	49
 39050   00305A  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 39051   00305C  EF32  F018         	goto	u6501
 39052   003060  EF34  F018         	goto	u6500
 39053   003064                     u6501:
 39054   003064  EF18  F019         	goto	l9122
 39055   003068                     u6500:
 39056   003068  EF19  F018         	goto	l9048
 39057   00306C                     l1548:
 39058                           
 39059                           ; BSR set to: 5
 39060                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 39061   00306C  9CBF               	bcf	191,6,c	;volatile
 39062   00306E                     
 39063                           ; BSR set to: 5
 39064                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 39065   00306E  0E31               	movlw	49
 39066   003070  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 39067   003072  EF3D  F018         	goto	u6511
 39068   003076  EF3F  F018         	goto	u6510
 39069   00307A                     u6511:
 39070   00307A  EF18  F019         	goto	l9122
 39071   00307E                     u6510:
 39072   00307E  EF26  F018         	goto	l9052
 39073   003082                     l1550:
 39074                           
 39075                           ; BSR set to: 5
 39076                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 39077   003082  9CBF               	bcf	191,6,c	;volatile
 39078   003084                     
 39079                           ; BSR set to: 5
 39080                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 39081   003084  0E63               	movlw	99
 39082   003086  6588               	cpfsgt	(_flashCounter+1)& (0+255),b
 39083   003088  EF48  F018         	goto	u6521
 39084   00308C  EF4A  F018         	goto	u6520
 39085   003090                     u6521:
 39086   003090  EF18  F019         	goto	l9122
 39087   003094                     u6520:
 39088   003094  EF26  F018         	goto	l9052
 39089   003098                     l9074:
 39090   003098  0105               	movlb	5	; () banked
 39091   00309A  518A               	movf	(_ledState+1)& (0+255),w,b
 39092   00309C  6E0B               	movwf	??_leds_poll^(0+1280),c
 39093   00309E  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 39094                           
 39095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39096                           ; Switch size 1, requested type "simple"
 39097                           ; Number of cases is 1, Range of values is 0 to 0
 39098                           ; switch strategies available:
 39099                           ; Name         Instructions Cycles
 39100                           ; simple_byte            4     3 (average)
 39101                           ;	Chosen strategy is simple_byte
 39102   0030A0  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 39103   0030A2  0A00               	xorlw	0	; case 0
 39104   0030A4  B4D8               	btfsc	status,2,c
 39105   0030A6  EF57  F018         	goto	l11528
 39106   0030AA  EF18  F019         	goto	l9122
 39107   0030AE                     l11528:
 39108                           
 39109                           ; BSR set to: 5
 39110                           ; Switch size 1, requested type "simple"
 39111                           ; Number of cases is 10, Range of values is 0 to 9
 39112                           ; switch strategies available:
 39113                           ; Name         Instructions Cycles
 39114                           ; simple_byte           31    16 (average)
 39115                           ;	Chosen strategy is simple_byte
 39116   0030AE  500B               	movf	??_leds_poll^(0+1280),w,c
 39117   0030B0  0A00               	xorlw	0	; case 0
 39118   0030B2  B4D8               	btfsc	status,2,c
 39119   0030B4  EFB7  F017         	goto	l1535
 39120   0030B8  0A01               	xorlw	1	; case 1
 39121   0030BA  B4D8               	btfsc	status,2,c
 39122   0030BC  EFB3  F017         	goto	l1533
 39123   0030C0  0A03               	xorlw	3	; case 2
 39124   0030C2  B4D8               	btfsc	status,2,c
 39125   0030C4  EFBB  F017         	goto	l9028
 39126   0030C8  0A01               	xorlw	1	; case 3
 39127   0030CA  B4D8               	btfsc	status,2,c
 39128   0030CC  EFD8  F017         	goto	l9034
 39129   0030D0  0A07               	xorlw	7	; case 4
 39130   0030D2  B4D8               	btfsc	status,2,c
 39131   0030D4  EFF4  F017         	goto	l9040
 39132   0030D8  0A01               	xorlw	1	; case 5
 39133   0030DA  B4D8               	btfsc	status,2,c
 39134   0030DC  EF1D  F018         	goto	l1544
 39135   0030E0  0A03               	xorlw	3	; case 6
 39136   0030E2  B4D8               	btfsc	status,2,c
 39137   0030E4  EF10  F018         	goto	l1542
 39138   0030E8  0A01               	xorlw	1	; case 7
 39139   0030EA  B4D8               	btfsc	status,2,c
 39140   0030EC  EF36  F018         	goto	l1548
 39141   0030F0  0A0F               	xorlw	15	; case 8
 39142   0030F2  B4D8               	btfsc	status,2,c
 39143   0030F4  EF2B  F018         	goto	l1546
 39144   0030F8  0A01               	xorlw	1	; case 9
 39145   0030FA  B4D8               	btfsc	status,2,c
 39146   0030FC  EF41  F018         	goto	l1550
 39147   003100  EF18  F019         	goto	l9122
 39148   003104                     l1553:
 39149                           
 39150                           ; BSR set to: 5
 39151                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 39152   003104  8EBF               	bsf	191,7,c	;volatile
 39153                           
 39154                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 39155   003106  6B87               	clrf	_flashCounter& (0+255),b
 39156                           
 39157                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 39158   003108  EF4D  F019         	goto	l1572
 39159   00310C                     l1555:
 39160                           
 39161                           ; BSR set to: 5
 39162                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 39163   00310C  9EBF               	bcf	191,7,c	;volatile
 39164                           
 39165                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 39166   00310E  6B87               	clrf	_flashCounter& (0+255),b
 39167                           
 39168                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 39169   003110  EF4D  F019         	goto	l1572
 39170   003114                     l9076:
 39171                           
 39172                           ; BSR set to: 5
 39173                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 39174   003114  C587  F501         	movff	_flashCounter,___awdiv@dividend
 39175   003118  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39176   00311A  0E00               	movlw	0
 39177   00311C  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39178   00311E  0E19               	movlw	25
 39179   003120  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39180   003122  ECE0  F02C         	call	___awdiv	;wreg free
 39181   003126  3201               	rrcf	?___awdiv^(0+1280),f,c
 39182   003128  3201               	rrcf	?___awdiv^(0+1280),f,c
 39183   00312A  50BF               	movf	191,w,c	;volatile
 39184   00312C  1801               	xorwf	?___awdiv^(0+1280),w,c
 39185   00312E  0B7F               	andlw	-129
 39186   003130  1801               	xorwf	?___awdiv^(0+1280),w,c
 39187   003132  6EBF               	movwf	191,c	;volatile
 39188   003134                     
 39189                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 39190   003134  0E31               	movlw	49
 39191   003136  0105               	movlb	5	; () banked
 39192   003138  6587               	cpfsgt	_flashCounter& (0+255),b
 39193   00313A  EFA1  F018         	goto	u6531
 39194   00313E  EFA3  F018         	goto	u6530
 39195   003142                     u6531:
 39196   003142  EF4D  F019         	goto	l1572
 39197   003146                     u6530:
 39198   003146                     l9080:
 39199                           
 39200                           ; BSR set to: 5
 39201                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 39202   003146  6B87               	clrf	_flashCounter& (0+255),b
 39203   003148  EF4D  F019         	goto	l1572
 39204   00314C                     l9082:
 39205                           
 39206                           ; BSR set to: 5
 39207                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 39208   00314C  C587  F501         	movff	_flashCounter,___awdiv@dividend
 39209   003150  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39210   003152  0E00               	movlw	0
 39211   003154  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39212   003156  0E32               	movlw	50
 39213   003158  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39214   00315A  ECE0  F02C         	call	___awdiv	;wreg free
 39215   00315E  3201               	rrcf	?___awdiv^(0+1280),f,c
 39216   003160  3201               	rrcf	?___awdiv^(0+1280),f,c
 39217   003162  50BF               	movf	191,w,c	;volatile
 39218   003164  1801               	xorwf	?___awdiv^(0+1280),w,c
 39219   003166  0B7F               	andlw	-129
 39220   003168  1801               	xorwf	?___awdiv^(0+1280),w,c
 39221   00316A  6EBF               	movwf	191,c	;volatile
 39222   00316C                     
 39223                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 39224   00316C  0E63               	movlw	99
 39225   00316E  0105               	movlb	5	; () banked
 39226   003170  6587               	cpfsgt	_flashCounter& (0+255),b
 39227   003172  EFBD  F018         	goto	u6541
 39228   003176  EFBF  F018         	goto	u6540
 39229   00317A                     u6541:
 39230   00317A  EF4D  F019         	goto	l1572
 39231   00317E                     u6540:
 39232   00317E  EFA3  F018         	goto	l9080
 39233   003182                     l9088:
 39234                           
 39235                           ; BSR set to: 5
 39236                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 39237   003182  C587  F501         	movff	_flashCounter,___awdiv@dividend
 39238   003186  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39239   003188  0E00               	movlw	0
 39240   00318A  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39241   00318C  0E64               	movlw	100
 39242   00318E  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39243   003190  ECE0  F02C         	call	___awdiv	;wreg free
 39244   003194  3201               	rrcf	?___awdiv^(0+1280),f,c
 39245   003196  3201               	rrcf	?___awdiv^(0+1280),f,c
 39246   003198  50BF               	movf	191,w,c	;volatile
 39247   00319A  1801               	xorwf	?___awdiv^(0+1280),w,c
 39248   00319C  0B7F               	andlw	-129
 39249   00319E  1801               	xorwf	?___awdiv^(0+1280),w,c
 39250   0031A0  6EBF               	movwf	191,c	;volatile
 39251   0031A2                     
 39252                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 39253   0031A2  0EC7               	movlw	199
 39254   0031A4  0105               	movlb	5	; () banked
 39255   0031A6  6587               	cpfsgt	_flashCounter& (0+255),b
 39256   0031A8  EFD8  F018         	goto	u6551
 39257   0031AC  EFDA  F018         	goto	u6550
 39258   0031B0                     u6551:
 39259   0031B0  EF4D  F019         	goto	l1572
 39260   0031B4                     u6550:
 39261   0031B4  EFA3  F018         	goto	l9080
 39262   0031B8                     l1562:
 39263                           
 39264                           ; BSR set to: 5
 39265                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 39266   0031B8  8EBF               	bsf	191,7,c	;volatile
 39267   0031BA                     
 39268                           ; BSR set to: 5
 39269                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 39270   0031BA  0E18               	movlw	24
 39271   0031BC  6587               	cpfsgt	_flashCounter& (0+255),b
 39272   0031BE  EFE3  F018         	goto	u6561
 39273   0031C2  EFE5  F018         	goto	u6560
 39274   0031C6                     u6561:
 39275   0031C6  EF4D  F019         	goto	l1572
 39276   0031CA                     u6560:
 39277   0031CA                     l9096:
 39278                           
 39279                           ; BSR set to: 5
 39280                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 39281   0031CA  6B87               	clrf	_flashCounter& (0+255),b
 39282                           
 39283                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 39284   0031CC  6B89               	clrf	_ledState& (0+255),b
 39285   0031CE  EF4D  F019         	goto	l1572
 39286   0031D2                     l1564:
 39287                           
 39288                           ; BSR set to: 5
 39289                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 39290   0031D2  9EBF               	bcf	191,7,c	;volatile
 39291   0031D4                     
 39292                           ; BSR set to: 5
 39293                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 39294   0031D4  0E18               	movlw	24
 39295   0031D6  6587               	cpfsgt	_flashCounter& (0+255),b
 39296   0031D8  EFF0  F018         	goto	u6571
 39297   0031DC  EFF2  F018         	goto	u6570
 39298   0031E0                     u6571:
 39299   0031E0  EF4D  F019         	goto	l1572
 39300   0031E4                     u6570:
 39301   0031E4                     l9100:
 39302                           
 39303                           ; BSR set to: 5
 39304                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 39305   0031E4  6B87               	clrf	_flashCounter& (0+255),b
 39306   0031E6                     
 39307                           ; BSR set to: 5
 39308                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 39309   0031E6  0E01               	movlw	1
 39310   0031E8  6F89               	movwf	_ledState& (0+255),b
 39311   0031EA  EF4D  F019         	goto	l1572
 39312   0031EE                     l1566:
 39313                           
 39314                           ; BSR set to: 5
 39315                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 39316   0031EE  8EBF               	bsf	191,7,c	;volatile
 39317   0031F0                     
 39318                           ; BSR set to: 5
 39319                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 39320   0031F0  0E31               	movlw	49
 39321   0031F2  6587               	cpfsgt	_flashCounter& (0+255),b
 39322   0031F4  EFFE  F018         	goto	u6581
 39323   0031F8  EF00  F019         	goto	u6580
 39324   0031FC                     u6581:
 39325   0031FC  EF4D  F019         	goto	l1572
 39326   003200                     u6580:
 39327   003200  EFE5  F018         	goto	l9096
 39328   003204                     l1568:
 39329                           
 39330                           ; BSR set to: 5
 39331                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 39332   003204  9EBF               	bcf	191,7,c	;volatile
 39333   003206                     
 39334                           ; BSR set to: 5
 39335                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 39336   003206  0E31               	movlw	49
 39337   003208  6587               	cpfsgt	_flashCounter& (0+255),b
 39338   00320A  EF09  F019         	goto	u6591
 39339   00320E  EF0B  F019         	goto	u6590
 39340   003212                     u6591:
 39341   003212  EF4D  F019         	goto	l1572
 39342   003216                     u6590:
 39343   003216  EFF2  F018         	goto	l9100
 39344   00321A                     l1570:
 39345                           
 39346                           ; BSR set to: 5
 39347                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 39348   00321A  9EBF               	bcf	191,7,c	;volatile
 39349   00321C                     
 39350                           ; BSR set to: 5
 39351                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 39352   00321C  0E63               	movlw	99
 39353   00321E  6587               	cpfsgt	_flashCounter& (0+255),b
 39354   003220  EF14  F019         	goto	u6601
 39355   003224  EF16  F019         	goto	u6600
 39356   003228                     u6601:
 39357   003228  EF4D  F019         	goto	l1572
 39358   00322C                     u6600:
 39359   00322C  EFF2  F018         	goto	l9100
 39360   003230                     l9122:
 39361                           
 39362                           ; BSR set to: 5
 39363   003230  5189               	movf	_ledState& (0+255),w,b
 39364   003232  6E0B               	movwf	??_leds_poll^(0+1280),c
 39365   003234  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 39366                           
 39367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39368                           ; Switch size 1, requested type "simple"
 39369                           ; Number of cases is 1, Range of values is 0 to 0
 39370                           ; switch strategies available:
 39371                           ; Name         Instructions Cycles
 39372                           ; simple_byte            4     3 (average)
 39373                           ;	Chosen strategy is simple_byte
 39374   003236  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 39375   003238  0A00               	xorlw	0	; case 0
 39376   00323A  B4D8               	btfsc	status,2,c
 39377   00323C  EF22  F019         	goto	l11530
 39378   003240  EF4D  F019         	goto	l1572
 39379   003244                     l11530:
 39380                           
 39381                           ; BSR set to: 5
 39382                           ; Switch size 1, requested type "simple"
 39383                           ; Number of cases is 10, Range of values is 0 to 9
 39384                           ; switch strategies available:
 39385                           ; Name         Instructions Cycles
 39386                           ; simple_byte           31    16 (average)
 39387                           ;	Chosen strategy is simple_byte
 39388   003244  500B               	movf	??_leds_poll^(0+1280),w,c
 39389   003246  0A00               	xorlw	0	; case 0
 39390   003248  B4D8               	btfsc	status,2,c
 39391   00324A  EF86  F018         	goto	l1555
 39392   00324E  0A01               	xorlw	1	; case 1
 39393   003250  B4D8               	btfsc	status,2,c
 39394   003252  EF82  F018         	goto	l1553
 39395   003256  0A03               	xorlw	3	; case 2
 39396   003258  B4D8               	btfsc	status,2,c
 39397   00325A  EF8A  F018         	goto	l9076
 39398   00325E  0A01               	xorlw	1	; case 3
 39399   003260  B4D8               	btfsc	status,2,c
 39400   003262  EFA6  F018         	goto	l9082
 39401   003266  0A07               	xorlw	7	; case 4
 39402   003268  B4D8               	btfsc	status,2,c
 39403   00326A  EFC1  F018         	goto	l9088
 39404   00326E  0A01               	xorlw	1	; case 5
 39405   003270  B4D8               	btfsc	status,2,c
 39406   003272  EFE9  F018         	goto	l1564
 39407   003276  0A03               	xorlw	3	; case 6
 39408   003278  B4D8               	btfsc	status,2,c
 39409   00327A  EFDC  F018         	goto	l1562
 39410   00327E  0A01               	xorlw	1	; case 7
 39411   003280  B4D8               	btfsc	status,2,c
 39412   003282  EF02  F019         	goto	l1568
 39413   003286  0A0F               	xorlw	15	; case 8
 39414   003288  B4D8               	btfsc	status,2,c
 39415   00328A  EFF7  F018         	goto	l1566
 39416   00328E  0A01               	xorlw	1	; case 9
 39417   003290  B4D8               	btfsc	status,2,c
 39418   003292  EF0D  F019         	goto	l1570
 39419   003296  EF4D  F019         	goto	l1572
 39420   00329A                     l1572:
 39421                           
 39422                           ; BSR set to: 5
 39423   00329A  0012               	return		;funcret
 39424   00329C                     __end_of_leds_poll:
 39425                           	callstack 0
 39426                           
 39427 ;; *************** function ___lmul *****************
 39428 ;; Defined at:
 39429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 39430 ;; Parameters:    Size  Location     Type
 39431 ;;  multiplier      4    0[COMRAM] unsigned long 
 39432 ;;  multiplicand    4    4[COMRAM] unsigned long 
 39433 ;; Auto vars:     Size  Location     Type
 39434 ;;  product         4    8[COMRAM] unsigned long 
 39435 ;; Return value:  Size  Location     Type
 39436 ;;                  4    0[COMRAM] unsigned long 
 39437 ;; Registers used:
 39438 ;;		wreg, status,2, status,0
 39439 ;; Tracked objects:
 39440 ;;		On entry : 0/0
 39441 ;;		On exit  : 0/0
 39442 ;;		Unchanged: 0/0
 39443 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39447 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39448 ;;Total ram usage:       12 bytes
 39449 ;; Hardware stack levels used: 1
 39450 ;; Hardware stack levels required when called: 1
 39451 ;; This function calls:
 39452 ;;		Nothing
 39453 ;; This function is called by:
 39454 ;;		_pbDownTimer
 39455 ;;		_pbUpTimer
 39456 ;;		_poll
 39457 ;; This function uses a non-reentrant model
 39458 ;;
 39459                           
 39460                           	psect	text112
 39461   006F70                     __ptext112:
 39462                           	callstack 0
 39463   006F70                     ___lmul:
 39464                           	callstack 124
 39465   006F70  0E00               	movlw	0
 39466   006F72  6E09               	movwf	___lmul@product^(0+1280),c
 39467   006F74  0E00               	movlw	0
 39468   006F76  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 39469   006F78  0E00               	movlw	0
 39470   006F7A  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 39471   006F7C  0E00               	movlw	0
 39472   006F7E  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 39473   006F80                     l9152:
 39474   006F80  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 39475   006F82  EFC5  F037         	goto	u6641
 39476   006F86  EFC7  F037         	goto	u6640
 39477   006F8A                     u6641:
 39478   006F8A  EFCF  F037         	goto	l9156
 39479   006F8E                     u6640:
 39480   006F8E  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 39481   006F90  2609               	addwf	___lmul@product^(0+1280),f,c
 39482   006F92  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 39483   006F94  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 39484   006F96  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 39485   006F98  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 39486   006F9A  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 39487   006F9C  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 39488   006F9E                     l9156:
 39489   006F9E  90D8               	bcf	status,0,c
 39490   006FA0  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 39491   006FA2  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 39492   006FA4  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 39493   006FA6  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 39494   006FA8  90D8               	bcf	status,0,c
 39495   006FAA  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 39496   006FAC  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 39497   006FAE  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 39498   006FB0  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 39499   006FB2  5001               	movf	___lmul@multiplier^(0+1280),w,c
 39500   006FB4  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 39501   006FB6  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 39502   006FB8  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 39503   006FBA  A4D8               	btfss	status,2,c
 39504   006FBC  EFE2  F037         	goto	u6651
 39505   006FC0  EFE4  F037         	goto	u6650
 39506   006FC4                     u6651:
 39507   006FC4  EFC0  F037         	goto	l9152
 39508   006FC8                     u6650:
 39509   006FC8  C509  F501         	movff	___lmul@product,?___lmul
 39510   006FCC  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 39511   006FD0  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 39512   006FD4  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 39513   006FD8  0012               	return		;funcret
 39514   006FDA                     __end_of___lmul:
 39515                           	callstack 0
 39516                           
 39517 ;; *************** function ___lldiv *****************
 39518 ;; Defined at:
 39519 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 39520 ;; Parameters:    Size  Location     Type
 39521 ;;  dividend        4   10[COMRAM] unsigned long 
 39522 ;;  divisor         4   14[COMRAM] unsigned long 
 39523 ;; Auto vars:     Size  Location     Type
 39524 ;;  quotient        4   18[COMRAM] unsigned long 
 39525 ;;  counter         1   22[COMRAM] unsigned char 
 39526 ;; Return value:  Size  Location     Type
 39527 ;;                  4   10[COMRAM] unsigned long 
 39528 ;; Registers used:
 39529 ;;		wreg, status,2, status,0
 39530 ;; Tracked objects:
 39531 ;;		On entry : 0/0
 39532 ;;		On exit  : 0/0
 39533 ;;		Unchanged: 0/0
 39534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39536 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39538 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39539 ;;Total ram usage:       13 bytes
 39540 ;; Hardware stack levels used: 1
 39541 ;; Hardware stack levels required when called: 1
 39542 ;; This function calls:
 39543 ;;		Nothing
 39544 ;; This function is called by:
 39545 ;;		_pbDownTimer
 39546 ;;		_pbUpTimer
 39547 ;; This function uses a non-reentrant model
 39548 ;;
 39549                           
 39550                           	psect	text113
 39551   0060BE                     __ptext113:
 39552                           	callstack 0
 39553   0060BE                     ___lldiv:
 39554                           	callstack 123
 39555   0060BE  0E00               	movlw	0
 39556   0060C0  6E13               	movwf	___lldiv@quotient^(0+1280),c
 39557   0060C2  0E00               	movlw	0
 39558   0060C4  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 39559   0060C6  0E00               	movlw	0
 39560   0060C8  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 39561   0060CA  0E00               	movlw	0
 39562   0060CC  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 39563   0060CE  500F               	movf	___lldiv@divisor^(0+1280),w,c
 39564   0060D0  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 39565   0060D2  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 39566   0060D4  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 39567   0060D6  B4D8               	btfsc	status,2,c
 39568   0060D8  EF70  F030         	goto	u6661
 39569   0060DC  EF72  F030         	goto	u6660
 39570   0060E0                     u6661:
 39571   0060E0  EFA8  F030         	goto	l2132
 39572   0060E4                     u6660:
 39573   0060E4  0E01               	movlw	1
 39574   0060E6  6E17               	movwf	___lldiv@counter^(0+1280),c
 39575   0060E8  EF7C  F030         	goto	l9168
 39576   0060EC                     l9166:
 39577   0060EC  90D8               	bcf	status,0,c
 39578   0060EE  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 39579   0060F0  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 39580   0060F2  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 39581   0060F4  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 39582   0060F6  2A17               	incf	___lldiv@counter^(0+1280),f,c
 39583   0060F8                     l9168:
 39584   0060F8  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 39585   0060FA  EF81  F030         	goto	u6671
 39586   0060FE  EF83  F030         	goto	u6670
 39587   006102                     u6671:
 39588   006102  EF76  F030         	goto	l9166
 39589   006106                     u6670:
 39590   006106                     l9170:
 39591   006106  90D8               	bcf	status,0,c
 39592   006108  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 39593   00610A  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 39594   00610C  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 39595   00610E  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 39596   006110  500F               	movf	___lldiv@divisor^(0+1280),w,c
 39597   006112  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 39598   006114  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 39599   006116  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 39600   006118  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 39601   00611A  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 39602   00611C  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 39603   00611E  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 39604   006120  A0D8               	btfss	status,0,c
 39605   006122  EF95  F030         	goto	u6681
 39606   006126  EF97  F030         	goto	u6680
 39607   00612A                     u6681:
 39608   00612A  EFA0  F030         	goto	l9178
 39609   00612E                     u6680:
 39610   00612E  500F               	movf	___lldiv@divisor^(0+1280),w,c
 39611   006130  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 39612   006132  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 39613   006134  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 39614   006136  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 39615   006138  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 39616   00613A  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 39617   00613C  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 39618   00613E  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 39619   006140                     l9178:
 39620   006140  90D8               	bcf	status,0,c
 39621   006142  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 39622   006144  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 39623   006146  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 39624   006148  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 39625   00614A  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 39626   00614C  EF83  F030         	goto	l9170
 39627   006150                     l2132:
 39628   006150  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 39629   006154  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 39630   006158  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 39631   00615C  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 39632   006160  0012               	return		;funcret
 39633   006162                     __end_of___lldiv:
 39634                           	callstack 0
 39635                           
 39636 ;; *************** function _factoryReset *****************
 39637 ;; Defined at:
 39638 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 39639 ;; Parameters:    Size  Location     Type
 39640 ;;		None
 39641 ;; Auto vars:     Size  Location     Type
 39642 ;;  i               1   58[COMRAM] unsigned char 
 39643 ;; Return value:  Size  Location     Type
 39644 ;;                  1    wreg      void 
 39645 ;; Registers used:
 39646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39647 ;; Tracked objects:
 39648 ;;		On entry : 0/0
 39649 ;;		On exit  : 0/0
 39650 ;;		Unchanged: 0/0
 39651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39654 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39655 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39656 ;;Total ram usage:        5 bytes
 39657 ;; Hardware stack levels used: 1
 39658 ;; Hardware stack levels required when called: 10
 39659 ;; This function calls:
 39660 ;;		NULL
 39661 ;;		_APP_factoryReset
 39662 ;;		_canFactoryReset
 39663 ;;		_mnsFactoryReset
 39664 ;;		_nvFactoryReset
 39665 ;;		_teachFactoryReset
 39666 ;;		_writeNVM
 39667 ;; This function is called by:
 39668 ;;		_mnsProcessMessage
 39669 ;;		_checkPowerOnPb
 39670 ;;		_main
 39671 ;; This function uses a non-reentrant model
 39672 ;;
 39673                           
 39674                           	psect	text114
 39675   004F0A                     __ptext114:
 39676                           	callstack 0
 39677   004F0A                     _factoryReset:
 39678                           	callstack 114
 39679   004F0A                     
 39680                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<6; i++) {
 39681   004F0A  6A3B               	clrf	factoryReset@i^(0+1280),c
 39682   004F0C                     l8886:
 39683                           
 39684                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 39685   004F0C  503B               	movf	factoryReset@i^(0+1280),w,c
 39686   004F0E  0D02               	mullw	2
 39687   004F10  0E89               	movlw	low _services
 39688   004F12  24F3               	addwf	243,w,c
 39689   004F14  6EF6               	movwf	tblptrl,c
 39690   004F16  0EFF               	movlw	high _services
 39691   004F18  20F4               	addwfc	244,w,c
 39692   004F1A  6EF7               	movwf	tblptrh,c
 39693   004F1C                     	if	1	;There are 3 active tblptr bytes
 39694   004F1C  6AF8               	clrf	tblptru,c
 39695   004F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 39696   004F20  22F8               	addwfc	tblptru,f,c
 39697   004F22                     	endif
 39698   004F22  0009               	tblrd		*+
 39699   004F24  50F5               	movf	tablat,w,c
 39700   004F26  0009               	tblrd		*+
 39701   004F28  10F5               	iorwf	tablat,w,c
 39702   004F2A  B4D8               	btfsc	status,2,c
 39703   004F2C  EF9A  F027         	goto	u6291
 39704   004F30  EF9C  F027         	goto	u6290
 39705   004F34                     u6291:
 39706   004F34  EFED  F027         	goto	l8892
 39707   004F38                     u6290:
 39708   004F38  503B               	movf	factoryReset@i^(0+1280),w,c
 39709   004F3A  0D02               	mullw	2
 39710   004F3C  0E89               	movlw	low _services
 39711   004F3E  24F3               	addwf	243,w,c
 39712   004F40  6EF6               	movwf	tblptrl,c
 39713   004F42  0EFF               	movlw	high _services
 39714   004F44  20F4               	addwfc	244,w,c
 39715   004F46  6EF7               	movwf	tblptrh,c
 39716   004F48                     	if	1	;There are 3 active tblptr bytes
 39717   004F48  6AF8               	clrf	tblptru,c
 39718   004F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 39719   004F4C  22F8               	addwfc	tblptru,f,c
 39720   004F4E                     	endif
 39721   004F4E  0009               	tblrd		*+
 39722   004F50  C4F5 F537          	movff	tablat,??_factoryReset
 39723   004F54  0009               	tblrd		*+
 39724   004F56  C4F5 F538          	movff	tablat,??_factoryReset+1
 39725   004F5A  0E02               	movlw	2
 39726   004F5C  2637               	addwf	??_factoryReset^(0+1280),f,c
 39727   004F5E  0E00               	movlw	0
 39728   004F60  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 39729   004F62  C537  F4F6         	movff	??_factoryReset,tblptrl
 39730   004F66  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 39731   004F6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39732   004F6A  6AF8               	clrf	tblptru,c
 39733   004F6C                     	endif
 39734   004F6C                     	if	0	;tblptru may be non-zero
 39735   004F6C                     	endif
 39736   004F6C  0009               	tblrd		*+
 39737   004F6E  50F5               	movf	tablat,w,c
 39738   004F70  0009               	tblrd		*+
 39739   004F72  10F5               	iorwf	tablat,w,c
 39740   004F74  B4D8               	btfsc	status,2,c
 39741   004F76  EFBF  F027         	goto	u6301
 39742   004F7A  EFC1  F027         	goto	u6300
 39743   004F7E                     u6301:
 39744   004F7E  EFED  F027         	goto	l8892
 39745   004F82                     u6300:
 39746   004F82                     
 39747                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 39748   004F82  503B               	movf	factoryReset@i^(0+1280),w,c
 39749   004F84  0D02               	mullw	2
 39750   004F86  0E89               	movlw	low _services
 39751   004F88  24F3               	addwf	243,w,c
 39752   004F8A  6EF6               	movwf	tblptrl,c
 39753   004F8C  0EFF               	movlw	high _services
 39754   004F8E  20F4               	addwfc	244,w,c
 39755   004F90  6EF7               	movwf	tblptrh,c
 39756   004F92                     	if	1	;There are 3 active tblptr bytes
 39757   004F92  6AF8               	clrf	tblptru,c
 39758   004F94  0E00               	movlw	low (__mediumconst shr (0+16))
 39759   004F96  22F8               	addwfc	tblptru,f,c
 39760   004F98                     	endif
 39761   004F98  0009               	tblrd		*+
 39762   004F9A  C4F5 F537          	movff	tablat,??_factoryReset
 39763   004F9E  0009               	tblrd		*+
 39764   004FA0  C4F5 F538          	movff	tablat,??_factoryReset+1
 39765   004FA4  0E02               	movlw	2
 39766   004FA6  2637               	addwf	??_factoryReset^(0+1280),f,c
 39767   004FA8  0E00               	movlw	0
 39768   004FAA  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 39769   004FAC  C537  F4F6         	movff	??_factoryReset,tblptrl
 39770   004FB0  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 39771   004FB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39772   004FB4  6AF8               	clrf	tblptru,c
 39773   004FB6                     	endif
 39774   004FB6                     	if	0	;tblptru may be non-zero
 39775   004FB6                     	endif
 39776   004FB6  0009               	tblrd		*+
 39777   004FB8  C4F5 F539          	movff	tablat,??_factoryReset+2
 39778   004FBC  0009               	tblrd		*+
 39779   004FBE  C4F5 F53A          	movff	tablat,??_factoryReset+3
 39780   004FC2  D802               	call	u6318
 39781   004FC4  EFED  F027         	goto	u6319
 39782   004FC8                     u6318:
 39783   004FC8  0005               	push	
 39784   004FCA  6EFA               	movwf	pclath,c
 39785   004FCC  5039               	movf	(??_factoryReset+2)^(0+1280),w,c
 39786   004FCE  6EFD               	movwf	tosl,c
 39787   004FD0  503A               	movf	(??_factoryReset+3)^(0+1280),w,c
 39788   004FD2  6EFE               	movwf	tosh,c
 39789   004FD4  6AFF               	clrf	tosu,c
 39790   004FD6  50FA               	movf	pclath,w,c
 39791   004FD8  0012               	return		;indir
 39792   004FDA                     u6319:
 39793   004FDA                     l8892:
 39794                           
 39795                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 39796   004FDA  2A3B               	incf	factoryReset@i^(0+1280),f,c
 39797   004FDC  0E05               	movlw	5
 39798   004FDE  643B               	cpfsgt	factoryReset@i^(0+1280),c
 39799   004FE0  EFF4  F027         	goto	u6321
 39800   004FE4  EFF6  F027         	goto	u6320
 39801   004FE8                     u6321:
 39802   004FE8  EF86  F027         	goto	l8886
 39803   004FEC                     u6320:
 39804   004FEC                     
 39805                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 39806   004FEC  0EFA               	movlw	250
 39807   004FEE  6E0E               	movwf	writeNVM@index^(0+1280),c
 39808   004FF0  0E03               	movlw	3
 39809   004FF2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 39810   004FF4  0E00               	movlw	0
 39811   004FF6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 39812   004FF8  0E01               	movlw	1
 39813   004FFA  6E11               	movwf	writeNVM@value^(0+1280),c
 39814   004FFC  0E00               	movlw	0
 39815   004FFE  ECB5  F038         	call	_writeNVM
 39816   005002                     
 39817                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 39818   005002  EC4B  F03E         	call	_APP_factoryReset	;wreg free
 39819   005006  0012               	return		;funcret
 39820   005008                     __end_of_factoryReset:
 39821                           	callstack 0
 39822                           
 39823 ;; *************** function _nvFactoryReset *****************
 39824 ;; Defined at:
 39825 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 39826 ;; Parameters:    Size  Location     Type
 39827 ;;		None
 39828 ;; Auto vars:     Size  Location     Type
 39829 ;;  i               1   22[COMRAM] unsigned char 
 39830 ;; Return value:  Size  Location     Type
 39831 ;;                  1    wreg      void 
 39832 ;; Registers used:
 39833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39834 ;; Tracked objects:
 39835 ;;		On entry : 0/0
 39836 ;;		On exit  : 0/0
 39837 ;;		Unchanged: 0/0
 39838 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39843 ;;Total ram usage:        3 bytes
 39844 ;; Hardware stack levels used: 1
 39845 ;; Hardware stack levels required when called: 6
 39846 ;; This function calls:
 39847 ;;		_APP_nvDefault
 39848 ;;		_writeNVM
 39849 ;; This function is called by:
 39850 ;;		_factoryReset
 39851 ;; This function uses a non-reentrant model
 39852 ;;
 39853                           
 39854                           	psect	text115
 39855   00766A                     __ptext115:
 39856                           	callstack 0
 39857   00766A                     _nvFactoryReset:
 39858                           	callstack 117
 39859   00766A                     
 39860                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 48; i++) {
 39861   00766A  0E01               	movlw	1
 39862   00766C  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 39863   00766E                     l8288:
 39864                           
 39865                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 39866   00766E  0E00               	movlw	0
 39867   007670  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 39868   007672  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 39869   007674  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 39870   007676  0E02               	movlw	2
 39871   007678  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 39872   00767A  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 39873   00767E  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 39874   007682  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 39875   007684  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 39876   007686  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 39877   007688  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 39878   00768A  EC4C  F025         	call	_APP_nvDefault
 39879   00768E  6E11               	movwf	writeNVM@value^(0+1280),c
 39880   007690  0E00               	movlw	0
 39881   007692  ECB5  F038         	call	_writeNVM
 39882   007696                     
 39883                           ;../../VLCBlib_PIC/nv.c: 130:     }
 39884   007696  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 39885   007698  0E30               	movlw	48
 39886   00769A  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 39887   00769C  EF52  F03B         	goto	u5701
 39888   0076A0  EF54  F03B         	goto	u5700
 39889   0076A4                     u5701:
 39890   0076A4  EF37  F03B         	goto	l8288
 39891   0076A8                     u5700:
 39892   0076A8  0012               	return		;funcret
 39893   0076AA                     __end_of_nvFactoryReset:
 39894                           	callstack 0
 39895                           
 39896 ;; *************** function _mnsFactoryReset *****************
 39897 ;; Defined at:
 39898 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 39899 ;; Parameters:    Size  Location     Type
 39900 ;;		None
 39901 ;; Auto vars:     Size  Location     Type
 39902 ;;		None
 39903 ;; Return value:  Size  Location     Type
 39904 ;;                  1    wreg      void 
 39905 ;; Registers used:
 39906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39907 ;; Tracked objects:
 39908 ;;		On entry : 0/0
 39909 ;;		On exit  : 0/0
 39910 ;;		Unchanged: 0/0
 39911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39916 ;;Total ram usage:        0 bytes
 39917 ;; Hardware stack levels used: 1
 39918 ;; Hardware stack levels required when called: 6
 39919 ;; This function calls:
 39920 ;;		_writeNVM
 39921 ;; This function is called by:
 39922 ;;		_factoryReset
 39923 ;; This function uses a non-reentrant model
 39924 ;;
 39925                           
 39926                           	psect	text116
 39927   006F04                     __ptext116:
 39928                           	callstack 0
 39929   006F04                     _mnsFactoryReset:
 39930                           	callstack 117
 39931   006F04                     
 39932                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 39933   006F04  0105               	movlb	5	; () banked
 39934   006F06  6B8E               	clrf	(_nn+1)& (0+255),b
 39935                           
 39936                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 39937   006F08  6B8D               	clrf	_nn& (0+255),b
 39938   006F0A                     
 39939                           ; BSR set to: 5
 39940                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 39941   006F0A  0EFD               	movlw	253
 39942   006F0C  6E0E               	movwf	writeNVM@index^(0+1280),c
 39943   006F0E  0E03               	movlw	3
 39944   006F10  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 39945   006F12  0E00               	movlw	0
 39946   006F14  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 39947   006F16  C58E  F511         	movff	_nn+1,writeNVM@value
 39948   006F1A  0E00               	movlw	0
 39949   006F1C  ECB5  F038         	call	_writeNVM
 39950                           
 39951                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 39952   006F20  0EFC               	movlw	252
 39953   006F22  6E0E               	movwf	writeNVM@index^(0+1280),c
 39954   006F24  0E03               	movlw	3
 39955   006F26  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 39956   006F28  0E00               	movlw	0
 39957   006F2A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 39958   006F2C  C58D  F511         	movff	_nn,writeNVM@value
 39959   006F30  0E00               	movlw	0
 39960   006F32  ECB5  F038         	call	_writeNVM
 39961   006F36                     
 39962                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 39963   006F36  0105               	movlb	5	; () banked
 39964   006F38  69A1               	setf	_mode_state& (0+255),b
 39965   006F3A  69A0               	setf	_last_mode_state& (0+255),b
 39966                           
 39967                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 39968   006F3C  0EFB               	movlw	251
 39969   006F3E  6E0E               	movwf	writeNVM@index^(0+1280),c
 39970   006F40  0E03               	movlw	3
 39971   006F42  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 39972   006F44  0E00               	movlw	0
 39973   006F46  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 39974   006F48  C5A1  F511         	movff	_mode_state,writeNVM@value
 39975   006F4C  0E00               	movlw	0
 39976   006F4E  ECB5  F038         	call	_writeNVM
 39977   006F52                     
 39978                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 39979   006F52  0105               	movlb	5	; () banked
 39980   006F54  6BA4               	clrf	_mode_flags& (0+255),b
 39981   006F56  6B9F               	clrf	_last_mode_flags& (0+255),b
 39982                           
 39983                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 39984   006F58  0EF9               	movlw	249
 39985   006F5A  6E0E               	movwf	writeNVM@index^(0+1280),c
 39986   006F5C  0E03               	movlw	3
 39987   006F5E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 39988   006F60  0E00               	movlw	0
 39989   006F62  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 39990   006F64  C5A4  F511         	movff	_mode_flags,writeNVM@value
 39991   006F68  0E00               	movlw	0
 39992   006F6A  ECB5  F038         	call	_writeNVM
 39993   006F6E  0012               	return		;funcret
 39994   006F70                     __end_of_mnsFactoryReset:
 39995                           	callstack 0
 39996                           
 39997 ;; *************** function _canFactoryReset *****************
 39998 ;; Defined at:
 39999 ;;		line 210 in file "../../VLCBlib_PIC/can18_can_2.c"
 40000 ;; Parameters:    Size  Location     Type
 40001 ;;		None
 40002 ;; Auto vars:     Size  Location     Type
 40003 ;;		None
 40004 ;; Return value:  Size  Location     Type
 40005 ;;                  1    wreg      void 
 40006 ;; Registers used:
 40007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40008 ;; Tracked objects:
 40009 ;;		On entry : 0/0
 40010 ;;		On exit  : 0/0
 40011 ;;		Unchanged: 0/0
 40012 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40017 ;;Total ram usage:        0 bytes
 40018 ;; Hardware stack levels used: 1
 40019 ;; Hardware stack levels required when called: 6
 40020 ;; This function calls:
 40021 ;;		_writeNVM
 40022 ;; This function is called by:
 40023 ;;		_factoryReset
 40024 ;; This function uses a non-reentrant model
 40025 ;;
 40026                           
 40027                           	psect	text117
 40028   007BB0                     __ptext117:
 40029                           	callstack 0
 40030   007BB0                     _canFactoryReset:
 40031                           	callstack 117
 40032   007BB0                     
 40033                           ;../../VLCBlib_PIC/can18_can_2.c: 211:     canId = 0;
 40034   007BB0  0105               	movlb	5	; () banked
 40035   007BB2  6BA8               	clrf	_canId& (0+255),b
 40036   007BB4                     
 40037                           ; BSR set to: 5
 40038                           ;../../VLCBlib_PIC/can18_can_2.c: 212:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 40039   007BB4  0EFE               	movlw	254
 40040   007BB6  6E0E               	movwf	writeNVM@index^(0+1280),c
 40041   007BB8  0E03               	movlw	3
 40042   007BBA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40043   007BBC  0E00               	movlw	0
 40044   007BBE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40045   007BC0  C5A8  F511         	movff	_canId,writeNVM@value
 40046   007BC4  0E00               	movlw	0
 40047   007BC6  ECB5  F038         	call	_writeNVM
 40048   007BCA  0012               	return		;funcret
 40049   007BCC                     __end_of_canFactoryReset:
 40050                           	callstack 0
 40051                           
 40052 ;; *************** function _teachFactoryReset *****************
 40053 ;; Defined at:
 40054 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40055 ;; Parameters:    Size  Location     Type
 40056 ;;		None
 40057 ;; Auto vars:     Size  Location     Type
 40058 ;;		None
 40059 ;; Return value:  Size  Location     Type
 40060 ;;                  1    wreg      void 
 40061 ;; Registers used:
 40062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40063 ;; Tracked objects:
 40064 ;;		On entry : 0/0
 40065 ;;		On exit  : 0/0
 40066 ;;		Unchanged: 0/0
 40067 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40072 ;;Total ram usage:        0 bytes
 40073 ;; Hardware stack levels used: 1
 40074 ;; Hardware stack levels required when called: 8
 40075 ;; This function calls:
 40076 ;;		_clearAllEvents
 40077 ;; This function is called by:
 40078 ;;		_factoryReset
 40079 ;; This function uses a non-reentrant model
 40080 ;;
 40081                           
 40082                           	psect	text118
 40083   007C90                     __ptext118:
 40084                           	callstack 0
 40085   007C90                     _teachFactoryReset:
 40086                           	callstack 115
 40087   007C90                     
 40088                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 40089   007C90  ECAB  F03D         	call	_clearAllEvents	;wreg free
 40090   007C94  0012               	return		;funcret
 40091   007C96                     __end_of_teachFactoryReset:
 40092                           	callstack 0
 40093                           
 40094 ;; *************** function _APP_nvDefault *****************
 40095 ;; Defined at:
 40096 ;;		line 70 in file "../canargb_nvs.c"
 40097 ;; Parameters:    Size  Location     Type
 40098 ;;  index           1    wreg     unsigned char 
 40099 ;; Auto vars:     Size  Location     Type
 40100 ;;  index           1   10[COMRAM] unsigned char 
 40101 ;; Return value:  Size  Location     Type
 40102 ;;                  1    wreg      unsigned char 
 40103 ;; Registers used:
 40104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40105 ;; Tracked objects:
 40106 ;;		On entry : 0/0
 40107 ;;		On exit  : 0/0
 40108 ;;		Unchanged: 0/0
 40109 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40113 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40114 ;;Total ram usage:        3 bytes
 40115 ;; Hardware stack levels used: 1
 40116 ;; Hardware stack levels required when called: 2
 40117 ;; This function calls:
 40118 ;;		___awdiv
 40119 ;;		___awmod
 40120 ;; This function is called by:
 40121 ;;		_nvFactoryReset
 40122 ;; This function uses a non-reentrant model
 40123 ;;
 40124                           
 40125                           	psect	text119
 40126   004A98                     __ptext119:
 40127                           	callstack 0
 40128   004A98                     _APP_nvDefault:
 40129                           	callstack 120
 40130                           
 40131                           ;incstack = 0
 40132                           ;APP_nvDefault@index stored from wreg
 40133   004A98  6E0B               	movwf	APP_nvDefault@index^(0+1280),c
 40134   004A9A                     
 40135                           ;../canargb_nvs.c: 71:     index--;
 40136   004A9A  060B               	decf	APP_nvDefault@index^(0+1280),f,c
 40137                           
 40138                           ;../canargb_nvs.c: 72:     if (index < 48) {
 40139   004A9C  0E30               	movlw	48
 40140   004A9E  600B               	cpfslt	APP_nvDefault@index^(0+1280),c
 40141   004AA0  EF54  F025         	goto	u5401
 40142   004AA4  EF56  F025         	goto	u5400
 40143   004AA8                     u5401:
 40144   004AA8  EFDC  F025         	goto	l7906
 40145   004AAC                     u5400:
 40146   004AAC  EFBD  F025         	goto	l7904
 40147   004AB0                     l7890:
 40148                           
 40149                           ;../canargb_nvs.c: 75:                 return defaultColours[index/3].red;
 40150   004AB0  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 40151   004AB4  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40152   004AB6  0E00               	movlw	0
 40153   004AB8  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40154   004ABA  0E03               	movlw	3
 40155   004ABC  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40156   004ABE  ECE0  F02C         	call	___awdiv	;wreg free
 40157   004AC2  0E03               	movlw	3
 40158   004AC4  0201               	mulwf	?___awdiv^(0+1280),c
 40159   004AC6  C4F3 F509          	movff	prodl,??_APP_nvDefault
 40160   004ACA  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 40161   004ACE  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 40162   004AD0  50F3               	movf	prodl,w,c
 40163   004AD2  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 40164   004AD4  0E59               	movlw	low _defaultColours
 40165   004AD6  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 40166   004AD8  6EF6               	movwf	tblptrl,c
 40167   004ADA  0EFF               	movlw	high _defaultColours
 40168   004ADC  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 40169   004ADE  6EF7               	movwf	tblptrh,c
 40170   004AE0                     	if	1	;There are 3 active tblptr bytes
 40171   004AE0  6AF8               	clrf	tblptru,c
 40172   004AE2  0E00               	movlw	low (__mediumconst shr (0+16))
 40173   004AE4  22F8               	addwfc	tblptru,f,c
 40174   004AE6                     	endif
 40175   004AE6  0008               	tblrd		*
 40176   004AE8  50F5               	movf	tablat,w,c
 40177   004AEA  EFDD  F025         	goto	l2093
 40178   004AEE                     l7894:
 40179                           
 40180                           ;../canargb_nvs.c: 77:                 return defaultColours[index/3].green;
 40181   004AEE  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 40182   004AF2  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40183   004AF4  0E00               	movlw	0
 40184   004AF6  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40185   004AF8  0E03               	movlw	3
 40186   004AFA  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40187   004AFC  ECE0  F02C         	call	___awdiv	;wreg free
 40188   004B00  0E03               	movlw	3
 40189   004B02  0201               	mulwf	?___awdiv^(0+1280),c
 40190   004B04  C4F3 F509          	movff	prodl,??_APP_nvDefault
 40191   004B08  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 40192   004B0C  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 40193   004B0E  50F3               	movf	prodl,w,c
 40194   004B10  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 40195   004B12  0E01               	movlw	1
 40196   004B14  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 40197   004B16  0E00               	movlw	0
 40198   004B18  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 40199   004B1A  0E59               	movlw	low _defaultColours
 40200   004B1C  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 40201   004B1E  6EF6               	movwf	tblptrl,c
 40202   004B20  0EFF               	movlw	high _defaultColours
 40203   004B22  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 40204   004B24  6EF7               	movwf	tblptrh,c
 40205   004B26                     	if	1	;There are 3 active tblptr bytes
 40206   004B26  6AF8               	clrf	tblptru,c
 40207   004B28  0E00               	movlw	low (__mediumconst shr (0+16))
 40208   004B2A  22F8               	addwfc	tblptru,f,c
 40209   004B2C                     	endif
 40210   004B2C  0008               	tblrd		*
 40211   004B2E  50F5               	movf	tablat,w,c
 40212   004B30  EFDD  F025         	goto	l2093
 40213   004B34                     l7898:
 40214                           
 40215                           ;../canargb_nvs.c: 79:                 return defaultColours[index/3].blue;
 40216   004B34  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 40217   004B38  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40218   004B3A  0E00               	movlw	0
 40219   004B3C  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40220   004B3E  0E03               	movlw	3
 40221   004B40  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40222   004B42  ECE0  F02C         	call	___awdiv	;wreg free
 40223   004B46  0E03               	movlw	3
 40224   004B48  0201               	mulwf	?___awdiv^(0+1280),c
 40225   004B4A  C4F3 F509          	movff	prodl,??_APP_nvDefault
 40226   004B4E  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 40227   004B52  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 40228   004B54  50F3               	movf	prodl,w,c
 40229   004B56  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 40230   004B58  0E02               	movlw	2
 40231   004B5A  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 40232   004B5C  0E00               	movlw	0
 40233   004B5E  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 40234   004B60  0E59               	movlw	low _defaultColours
 40235   004B62  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 40236   004B64  6EF6               	movwf	tblptrl,c
 40237   004B66  0EFF               	movlw	high _defaultColours
 40238   004B68  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 40239   004B6A  6EF7               	movwf	tblptrh,c
 40240   004B6C                     	if	1	;There are 3 active tblptr bytes
 40241   004B6C  6AF8               	clrf	tblptru,c
 40242   004B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 40243   004B70  22F8               	addwfc	tblptru,f,c
 40244   004B72                     	endif
 40245   004B72  0008               	tblrd		*
 40246   004B74  50F5               	movf	tablat,w,c
 40247   004B76  EFDD  F025         	goto	l2093
 40248   004B7A                     l7904:
 40249   004B7A  C50B  F501         	movff	APP_nvDefault@index,___awmod@dividend
 40250   004B7E  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
 40251   004B80  0E00               	movlw	0
 40252   004B82  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
 40253   004B84  0E03               	movlw	3
 40254   004B86  6E03               	movwf	___awmod@divisor^(0+1280),c
 40255   004B88  ECBA  F02E         	call	___awmod	;wreg free
 40256                           
 40257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40258                           ; Switch size 1, requested type "simple"
 40259                           ; Number of cases is 1, Range of values is 0 to 0
 40260                           ; switch strategies available:
 40261                           ; Name         Instructions Cycles
 40262                           ; simple_byte            4     3 (average)
 40263                           ;	Chosen strategy is simple_byte
 40264   004B8C  5002               	movf	(?___awmod+1)^(0+1280),w,c
 40265   004B8E  0A00               	xorlw	0	; case 0
 40266   004B90  B4D8               	btfsc	status,2,c
 40267   004B92  EFCD  F025         	goto	l11532
 40268   004B96  EFDC  F025         	goto	l7906
 40269   004B9A                     l11532:
 40270                           
 40271                           ; Switch size 1, requested type "simple"
 40272                           ; Number of cases is 3, Range of values is 0 to 2
 40273                           ; switch strategies available:
 40274                           ; Name         Instructions Cycles
 40275                           ; simple_byte           10     6 (average)
 40276                           ;	Chosen strategy is simple_byte
 40277   004B9A  5001               	movf	?___awmod^(0+1280),w,c
 40278   004B9C  0A00               	xorlw	0	; case 0
 40279   004B9E  B4D8               	btfsc	status,2,c
 40280   004BA0  EF58  F025         	goto	l7890
 40281   004BA4  0A01               	xorlw	1	; case 1
 40282   004BA6  B4D8               	btfsc	status,2,c
 40283   004BA8  EF77  F025         	goto	l7894
 40284   004BAC  0A03               	xorlw	3	; case 2
 40285   004BAE  B4D8               	btfsc	status,2,c
 40286   004BB0  EF9A  F025         	goto	l7898
 40287   004BB4  EFDC  F025         	goto	l7906
 40288   004BB8                     l7906:
 40289                           
 40290                           ;../canargb_nvs.c: 82:     return 0;
 40291   004BB8  0E00               	movlw	0
 40292   004BBA                     l2093:
 40293   004BBA  0012               	return		;funcret
 40294   004BBC                     __end_of_APP_nvDefault:
 40295                           	callstack 0
 40296                           
 40297 ;; *************** function ___awmod *****************
 40298 ;; Defined at:
 40299 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 40300 ;; Parameters:    Size  Location     Type
 40301 ;;  dividend        2    0[COMRAM] int 
 40302 ;;  divisor         2    2[COMRAM] int 
 40303 ;; Auto vars:     Size  Location     Type
 40304 ;;  sign            1    5[COMRAM] unsigned char 
 40305 ;;  counter         1    4[COMRAM] unsigned char 
 40306 ;; Return value:  Size  Location     Type
 40307 ;;                  2    0[COMRAM] int 
 40308 ;; Registers used:
 40309 ;;		wreg, status,2, status,0
 40310 ;; Tracked objects:
 40311 ;;		On entry : 0/0
 40312 ;;		On exit  : 0/0
 40313 ;;		Unchanged: 0/0
 40314 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40318 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40319 ;;Total ram usage:        6 bytes
 40320 ;; Hardware stack levels used: 1
 40321 ;; Hardware stack levels required when called: 1
 40322 ;; This function calls:
 40323 ;;		Nothing
 40324 ;; This function is called by:
 40325 ;;		_APP_nvDefault
 40326 ;; This function uses a non-reentrant model
 40327 ;;
 40328                           
 40329                           	psect	text120
 40330   005D74                     __ptext120:
 40331                           	callstack 0
 40332   005D74                     ___awmod:
 40333                           	callstack 120
 40334   005D74  6A06               	clrf	___awmod@sign^(0+1280),c
 40335   005D76  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 40336   005D78  EFC2  F02E         	goto	u5200
 40337   005D7C  EFC0  F02E         	goto	u5201
 40338   005D80                     u5201:
 40339   005D80  EFC8  F02E         	goto	l7754
 40340   005D84                     u5200:
 40341   005D84  6C01               	negf	___awmod@dividend^(0+1280),c
 40342   005D86  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 40343   005D88  B0D8               	btfsc	status,0,c
 40344   005D8A  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 40345   005D8C  0E01               	movlw	1
 40346   005D8E  6E06               	movwf	___awmod@sign^(0+1280),c
 40347   005D90                     l7754:
 40348   005D90  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 40349   005D92  EFCF  F02E         	goto	u5210
 40350   005D96  EFCD  F02E         	goto	u5211
 40351   005D9A                     u5211:
 40352   005D9A  EFD3  F02E         	goto	l7758
 40353   005D9E                     u5210:
 40354   005D9E  6C03               	negf	___awmod@divisor^(0+1280),c
 40355   005DA0  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
 40356   005DA2  B0D8               	btfsc	status,0,c
 40357   005DA4  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
 40358   005DA6                     l7758:
 40359   005DA6  5003               	movf	___awmod@divisor^(0+1280),w,c
 40360   005DA8  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 40361   005DAA  B4D8               	btfsc	status,2,c
 40362   005DAC  EFDA  F02E         	goto	u5221
 40363   005DB0  EFDC  F02E         	goto	u5220
 40364   005DB4                     u5221:
 40365   005DB4  EF00  F02F         	goto	l7774
 40366   005DB8                     u5220:
 40367   005DB8  0E01               	movlw	1
 40368   005DBA  6E05               	movwf	___awmod@counter^(0+1280),c
 40369   005DBC  EFE4  F02E         	goto	l7764
 40370   005DC0                     l7762:
 40371   005DC0  90D8               	bcf	status,0,c
 40372   005DC2  3603               	rlcf	___awmod@divisor^(0+1280),f,c
 40373   005DC4  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 40374   005DC6  2A05               	incf	___awmod@counter^(0+1280),f,c
 40375   005DC8                     l7764:
 40376   005DC8  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 40377   005DCA  EFE9  F02E         	goto	u5231
 40378   005DCE  EFEB  F02E         	goto	u5230
 40379   005DD2                     u5231:
 40380   005DD2  EFE0  F02E         	goto	l7762
 40381   005DD6                     u5230:
 40382   005DD6                     l7766:
 40383   005DD6  5003               	movf	___awmod@divisor^(0+1280),w,c
 40384   005DD8  5C01               	subwf	___awmod@dividend^(0+1280),w,c
 40385   005DDA  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 40386   005DDC  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 40387   005DDE  A0D8               	btfss	status,0,c
 40388   005DE0  EFF4  F02E         	goto	u5241
 40389   005DE4  EFF6  F02E         	goto	u5240
 40390   005DE8                     u5241:
 40391   005DE8  EFFA  F02E         	goto	l7770
 40392   005DEC                     u5240:
 40393   005DEC  5003               	movf	___awmod@divisor^(0+1280),w,c
 40394   005DEE  5E01               	subwf	___awmod@dividend^(0+1280),f,c
 40395   005DF0  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 40396   005DF2  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 40397   005DF4                     l7770:
 40398   005DF4  90D8               	bcf	status,0,c
 40399   005DF6  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 40400   005DF8  3203               	rrcf	___awmod@divisor^(0+1280),f,c
 40401   005DFA  2E05               	decfsz	___awmod@counter^(0+1280),f,c
 40402   005DFC  EFEB  F02E         	goto	l7766
 40403   005E00                     l7774:
 40404   005E00  5006               	movf	___awmod@sign^(0+1280),w,c
 40405   005E02  B4D8               	btfsc	status,2,c
 40406   005E04  EF06  F02F         	goto	u5251
 40407   005E08  EF08  F02F         	goto	u5250
 40408   005E0C                     u5251:
 40409   005E0C  EF0C  F02F         	goto	l7778
 40410   005E10                     u5250:
 40411   005E10  6C01               	negf	___awmod@dividend^(0+1280),c
 40412   005E12  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 40413   005E14  B0D8               	btfsc	status,0,c
 40414   005E16  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 40415   005E18                     l7778:
 40416   005E18  C501  F501         	movff	___awmod@dividend,?___awmod
 40417   005E1C  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
 40418   005E20  0012               	return		;funcret
 40419   005E22                     __end_of___awmod:
 40420                           	callstack 0
 40421                           
 40422 ;; *************** function ___awdiv *****************
 40423 ;; Defined at:
 40424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 40425 ;; Parameters:    Size  Location     Type
 40426 ;;  dividend        2    0[COMRAM] int 
 40427 ;;  divisor         2    2[COMRAM] int 
 40428 ;; Auto vars:     Size  Location     Type
 40429 ;;  quotient        2    6[COMRAM] int 
 40430 ;;  sign            1    5[COMRAM] unsigned char 
 40431 ;;  counter         1    4[COMRAM] unsigned char 
 40432 ;; Return value:  Size  Location     Type
 40433 ;;                  2    0[COMRAM] int 
 40434 ;; Registers used:
 40435 ;;		wreg, status,2, status,0
 40436 ;; Tracked objects:
 40437 ;;		On entry : 0/0
 40438 ;;		On exit  : 0/0
 40439 ;;		Unchanged: 0/0
 40440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40442 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40445 ;;Total ram usage:        8 bytes
 40446 ;; Hardware stack levels used: 1
 40447 ;; Hardware stack levels required when called: 1
 40448 ;; This function calls:
 40449 ;;		Nothing
 40450 ;; This function is called by:
 40451 ;;		_leds_poll
 40452 ;;		_APP_nvDefault
 40453 ;; This function uses a non-reentrant model
 40454 ;;
 40455                           
 40456                           	psect	text121
 40457   0059C0                     __ptext121:
 40458                           	callstack 0
 40459   0059C0                     ___awdiv:
 40460                           	callstack 120
 40461   0059C0  6A06               	clrf	___awdiv@sign^(0+1280),c
 40462   0059C2  BE04               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 40463   0059C4  EFE8  F02C         	goto	u5140
 40464   0059C8  EFE6  F02C         	goto	u5141
 40465   0059CC                     u5141:
 40466   0059CC  EFEE  F02C         	goto	l7710
 40467   0059D0                     u5140:
 40468   0059D0  6C03               	negf	___awdiv@divisor^(0+1280),c
 40469   0059D2  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 40470   0059D4  B0D8               	btfsc	status,0,c
 40471   0059D6  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 40472   0059D8  0E01               	movlw	1
 40473   0059DA  6E06               	movwf	___awdiv@sign^(0+1280),c
 40474   0059DC                     l7710:
 40475   0059DC  BE02               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 40476   0059DE  EFF5  F02C         	goto	u5150
 40477   0059E2  EFF3  F02C         	goto	u5151
 40478   0059E6                     u5151:
 40479   0059E6  EFFB  F02C         	goto	l7716
 40480   0059EA                     u5150:
 40481   0059EA  6C01               	negf	___awdiv@dividend^(0+1280),c
 40482   0059EC  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 40483   0059EE  B0D8               	btfsc	status,0,c
 40484   0059F0  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 40485   0059F2  0E01               	movlw	1
 40486   0059F4  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 40487   0059F6                     l7716:
 40488   0059F6  0E00               	movlw	0
 40489   0059F8  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 40490   0059FA  0E00               	movlw	0
 40491   0059FC  6E07               	movwf	___awdiv@quotient^(0+1280),c
 40492   0059FE  5003               	movf	___awdiv@divisor^(0+1280),w,c
 40493   005A00  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 40494   005A02  B4D8               	btfsc	status,2,c
 40495   005A04  EF06  F02D         	goto	u5161
 40496   005A08  EF08  F02D         	goto	u5160
 40497   005A0C                     u5161:
 40498   005A0C  EF30  F02D         	goto	l7738
 40499   005A10                     u5160:
 40500   005A10  0E01               	movlw	1
 40501   005A12  6E05               	movwf	___awdiv@counter^(0+1280),c
 40502   005A14  EF10  F02D         	goto	l7724
 40503   005A18                     l7722:
 40504   005A18  90D8               	bcf	status,0,c
 40505   005A1A  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 40506   005A1C  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 40507   005A1E  2A05               	incf	___awdiv@counter^(0+1280),f,c
 40508   005A20                     l7724:
 40509   005A20  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 40510   005A22  EF15  F02D         	goto	u5171
 40511   005A26  EF17  F02D         	goto	u5170
 40512   005A2A                     u5171:
 40513   005A2A  EF0C  F02D         	goto	l7722
 40514   005A2E                     u5170:
 40515   005A2E                     l7726:
 40516   005A2E  90D8               	bcf	status,0,c
 40517   005A30  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 40518   005A32  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 40519   005A34  5003               	movf	___awdiv@divisor^(0+1280),w,c
 40520   005A36  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 40521   005A38  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 40522   005A3A  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 40523   005A3C  A0D8               	btfss	status,0,c
 40524   005A3E  EF23  F02D         	goto	u5181
 40525   005A42  EF25  F02D         	goto	u5180
 40526   005A46                     u5181:
 40527   005A46  EF2A  F02D         	goto	l7734
 40528   005A4A                     u5180:
 40529   005A4A  5003               	movf	___awdiv@divisor^(0+1280),w,c
 40530   005A4C  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 40531   005A4E  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 40532   005A50  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 40533   005A52  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 40534   005A54                     l7734:
 40535   005A54  90D8               	bcf	status,0,c
 40536   005A56  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 40537   005A58  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 40538   005A5A  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 40539   005A5C  EF17  F02D         	goto	l7726
 40540   005A60                     l7738:
 40541   005A60  5006               	movf	___awdiv@sign^(0+1280),w,c
 40542   005A62  B4D8               	btfsc	status,2,c
 40543   005A64  EF36  F02D         	goto	u5191
 40544   005A68  EF38  F02D         	goto	u5190
 40545   005A6C                     u5191:
 40546   005A6C  EF3C  F02D         	goto	l7742
 40547   005A70                     u5190:
 40548   005A70  6C07               	negf	___awdiv@quotient^(0+1280),c
 40549   005A72  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 40550   005A74  B0D8               	btfsc	status,0,c
 40551   005A76  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 40552   005A78                     l7742:
 40553   005A78  C507  F501         	movff	___awdiv@quotient,?___awdiv
 40554   005A7C  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 40555   005A80  0012               	return		;funcret
 40556   005A82                     __end_of___awdiv:
 40557                           	callstack 0
 40558                           
 40559 ;; *************** function _APP_factoryReset *****************
 40560 ;; Defined at:
 40561 ;;		line 125 in file "../main.c"
 40562 ;; Parameters:    Size  Location     Type
 40563 ;;		None
 40564 ;; Auto vars:     Size  Location     Type
 40565 ;;  io              1    0        unsigned char 
 40566 ;; Return value:  Size  Location     Type
 40567 ;;                  1    wreg      void 
 40568 ;; Registers used:
 40569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40570 ;; Tracked objects:
 40571 ;;		On entry : 0/0
 40572 ;;		On exit  : 0/0
 40573 ;;		Unchanged: 0/0
 40574 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40579 ;;Total ram usage:        0 bytes
 40580 ;; Hardware stack levels used: 1
 40581 ;; Hardware stack levels required when called: 9
 40582 ;; This function calls:
 40583 ;;		_factoryResetGlobalEvents
 40584 ;; This function is called by:
 40585 ;;		_factoryReset
 40586 ;; This function uses a non-reentrant model
 40587 ;;
 40588                           
 40589                           	psect	text122
 40590   007C96                     __ptext122:
 40591                           	callstack 0
 40592   007C96                     _APP_factoryReset:
 40593                           	callstack 114
 40594   007C96                     
 40595                           ;../main.c: 126:     uint8_t io;;../main.c: 128:     factoryResetGlobalEvents();
 40596   007C96  EC4E  F03E         	call	_factoryResetGlobalEvents	;wreg free
 40597   007C9A  0012               	return		;funcret
 40598   007C9C                     __end_of_APP_factoryReset:
 40599                           	callstack 0
 40600                           
 40601 ;; *************** function _factoryResetGlobalEvents *****************
 40602 ;; Defined at:
 40603 ;;		line 53 in file "../canargb_events.c"
 40604 ;; Parameters:    Size  Location     Type
 40605 ;;		None
 40606 ;; Auto vars:     Size  Location     Type
 40607 ;;		None
 40608 ;; Return value:  Size  Location     Type
 40609 ;;                  1    wreg      void 
 40610 ;; Registers used:
 40611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40612 ;; Tracked objects:
 40613 ;;		On entry : 0/0
 40614 ;;		On exit  : 0/0
 40615 ;;		Unchanged: 0/0
 40616 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40621 ;;Total ram usage:        0 bytes
 40622 ;; Hardware stack levels used: 1
 40623 ;; Hardware stack levels required when called: 8
 40624 ;; This function calls:
 40625 ;;		_clearAllEvents
 40626 ;; This function is called by:
 40627 ;;		_APP_factoryReset
 40628 ;; This function uses a non-reentrant model
 40629 ;;
 40630                           
 40631                           	psect	text123
 40632   007C9C                     __ptext123:
 40633                           	callstack 0
 40634   007C9C                     _factoryResetGlobalEvents:
 40635                           	callstack 114
 40636   007C9C                     
 40637                           ;../canargb_events.c: 55:     clearAllEvents();
 40638   007C9C  ECAB  F03D         	call	_clearAllEvents	;wreg free
 40639   007CA0  0012               	return		;funcret
 40640   007CA2                     __end_of_factoryResetGlobalEvents:
 40641                           	callstack 0
 40642                           
 40643 ;; *************** function _clearAllEvents *****************
 40644 ;; Defined at:
 40645 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40646 ;; Parameters:    Size  Location     Type
 40647 ;;		None
 40648 ;; Auto vars:     Size  Location     Type
 40649 ;;  tableIndex      1   53[COMRAM] unsigned char 
 40650 ;; Return value:  Size  Location     Type
 40651 ;;                  1    wreg      void 
 40652 ;; Registers used:
 40653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40654 ;; Tracked objects:
 40655 ;;		On entry : 0/0
 40656 ;;		On exit  : 0/0
 40657 ;;		Unchanged: 0/0
 40658 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40663 ;;Total ram usage:        1 bytes
 40664 ;; Hardware stack levels used: 1
 40665 ;; Hardware stack levels required when called: 7
 40666 ;; This function calls:
 40667 ;;		_rebuildHashtable
 40668 ;;		_removeTableEntry
 40669 ;; This function is called by:
 40670 ;;		_teachFactoryReset
 40671 ;;		_doNnclr
 40672 ;;		_factoryResetGlobalEvents
 40673 ;; This function uses a non-reentrant model
 40674 ;;
 40675                           
 40676                           	psect	text124
 40677   007B56                     __ptext124:
 40678                           	callstack 0
 40679   007B56                     _clearAllEvents:
 40680                           	callstack 116
 40681   007B56                     
 40682                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 40683   007B56  6A36               	clrf	clearAllEvents@tableIndex^(0+1280),c
 40684   007B58                     l7652:
 40685                           
 40686                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 40687   007B58  5036               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 40688   007B5A  EC80  F01E         	call	_removeTableEntry
 40689   007B5E                     
 40690                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 40691   007B5E  2A36               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 40692   007B60  2836               	incf	clearAllEvents@tableIndex^(0+1280),w,c
 40693   007B62  A4D8               	btfss	status,2,c
 40694   007B64  EFB6  F03D         	goto	u5081
 40695   007B68  EFB8  F03D         	goto	u5080
 40696   007B6C                     u5081:
 40697   007B6C  EFAC  F03D         	goto	l7652
 40698   007B70                     u5080:
 40699   007B70                     
 40700                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 40701   007B70  EC04  F028         	call	_rebuildHashtable	;wreg free
 40702   007B74  0012               	return		;funcret
 40703   007B76                     __end_of_clearAllEvents:
 40704                           	callstack 0
 40705                           
 40706 ;; *************** function _removeTableEntry *****************
 40707 ;; Defined at:
 40708 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40709 ;; Parameters:    Size  Location     Type
 40710 ;;  tableIndex      1    wreg     unsigned char 
 40711 ;; Auto vars:     Size  Location     Type
 40712 ;;  tableIndex      1   52[COMRAM] unsigned char 
 40713 ;;  i               1   51[COMRAM] unsigned char 
 40714 ;; Return value:  Size  Location     Type
 40715 ;;                  1    wreg      unsigned char 
 40716 ;; Registers used:
 40717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40718 ;; Tracked objects:
 40719 ;;		On entry : 0/0
 40720 ;;		On exit  : 0/0
 40721 ;;		Unchanged: 0/0
 40722 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40725 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40726 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40727 ;;Total ram usage:       14 bytes
 40728 ;; Hardware stack levels used: 1
 40729 ;; Hardware stack levels required when called: 6
 40730 ;; This function calls:
 40731 ;;		_flushFlashBlock
 40732 ;;		_rebuildHashtable
 40733 ;;		_writeNVM
 40734 ;; This function is called by:
 40735 ;;		_clearAllEvents
 40736 ;;		_removeEvent
 40737 ;; This function uses a non-reentrant model
 40738 ;;
 40739                           
 40740                           	psect	text125
 40741   003D00                     __ptext125:
 40742                           	callstack 0
 40743   003D00                     _removeTableEntry:
 40744                           	callstack 116
 40745                           
 40746                           ;incstack = 0
 40747                           ;removeTableEntry@tableIndex stored from wreg
 40748   003D00  6E35               	movwf	removeTableEntry@tableIndex^(0+1280),c
 40749   003D02                     
 40750                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*table
      +                          Index + 0, 0x00);
 40751   003D02  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 40752   003D04  6E28               	movwf	??_removeTableEntry^(0+1280),c
 40753   003D06  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 40754   003D08  0E01               	movlw	1
 40755   003D0A  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40756   003D0C  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 40757   003D10  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 40758   003D14  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 40759   003D16  50F3               	movf	prodl,w,c
 40760   003D18  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40761   003D1A  0E01               	movlw	1
 40762   003D1C  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40763   003D1E  50F3               	movf	prodl,w,c
 40764   003D20  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40765   003D22  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 40766   003D26  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 40767   003D2A  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 40768   003D2C  0E00               	movlw	0
 40769   003D2E  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 40770   003D30  6E0E               	movwf	writeNVM@index^(0+1280),c
 40771   003D32  0E00               	movlw	0
 40772   003D34  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 40773   003D36  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40774   003D38  0E01               	movlw	1
 40775   003D3A  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 40776   003D3C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40777   003D3E  0E00               	movlw	0
 40778   003D40  6E11               	movwf	writeNVM@value^(0+1280),c
 40779   003D42  0E01               	movlw	1
 40780   003D44  ECB5  F038         	call	_writeNVM
 40781                           
 40782                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 1, 0x00);
 40783   003D48  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 40784   003D4A  6E28               	movwf	??_removeTableEntry^(0+1280),c
 40785   003D4C  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 40786   003D4E  0E01               	movlw	1
 40787   003D50  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40788   003D52  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 40789   003D56  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 40790   003D5A  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 40791   003D5C  50F3               	movf	prodl,w,c
 40792   003D5E  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40793   003D60  0E01               	movlw	1
 40794   003D62  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40795   003D64  50F3               	movf	prodl,w,c
 40796   003D66  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40797   003D68  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 40798   003D6C  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 40799   003D70  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 40800   003D72  0E01               	movlw	1
 40801   003D74  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 40802   003D76  6E0E               	movwf	writeNVM@index^(0+1280),c
 40803   003D78  0E00               	movlw	0
 40804   003D7A  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 40805   003D7C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40806   003D7E  0E01               	movlw	1
 40807   003D80  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 40808   003D82  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40809   003D84  0E00               	movlw	0
 40810   003D86  6E11               	movwf	writeNVM@value^(0+1280),c
 40811   003D88  0E01               	movlw	1
 40812   003D8A  ECB5  F038         	call	_writeNVM
 40813                           
 40814                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 2, 0x00);
 40815   003D8E  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 40816   003D90  6E28               	movwf	??_removeTableEntry^(0+1280),c
 40817   003D92  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 40818   003D94  0E01               	movlw	1
 40819   003D96  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40820   003D98  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 40821   003D9C  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 40822   003DA0  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 40823   003DA2  50F3               	movf	prodl,w,c
 40824   003DA4  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40825   003DA6  0E01               	movlw	1
 40826   003DA8  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40827   003DAA  50F3               	movf	prodl,w,c
 40828   003DAC  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40829   003DAE  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 40830   003DB2  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 40831   003DB6  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 40832   003DB8  0E02               	movlw	2
 40833   003DBA  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 40834   003DBC  6E0E               	movwf	writeNVM@index^(0+1280),c
 40835   003DBE  0E00               	movlw	0
 40836   003DC0  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 40837   003DC2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40838   003DC4  0E01               	movlw	1
 40839   003DC6  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 40840   003DC8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40841   003DCA  0E00               	movlw	0
 40842   003DCC  6E11               	movwf	writeNVM@value^(0+1280),c
 40843   003DCE  0E01               	movlw	1
 40844   003DD0  ECB5  F038         	call	_writeNVM
 40845                           
 40846                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 3, 0x00);
 40847   003DD4  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 40848   003DD6  6E28               	movwf	??_removeTableEntry^(0+1280),c
 40849   003DD8  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 40850   003DDA  0E01               	movlw	1
 40851   003DDC  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40852   003DDE  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 40853   003DE2  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 40854   003DE6  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 40855   003DE8  50F3               	movf	prodl,w,c
 40856   003DEA  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40857   003DEC  0E01               	movlw	1
 40858   003DEE  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40859   003DF0  50F3               	movf	prodl,w,c
 40860   003DF2  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40861   003DF4  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 40862   003DF8  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 40863   003DFC  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 40864   003DFE  0E03               	movlw	3
 40865   003E00  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 40866   003E02  6E0E               	movwf	writeNVM@index^(0+1280),c
 40867   003E04  0E00               	movlw	0
 40868   003E06  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 40869   003E08  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40870   003E0A  0E01               	movlw	1
 40871   003E0C  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 40872   003E0E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40873   003E10  0E00               	movlw	0
 40874   003E12  6E11               	movwf	writeNVM@value^(0+1280),c
 40875   003E14  0E01               	movlw	1
 40876   003E16  ECB5  F038         	call	_writeNVM
 40877                           
 40878                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 4, 0x00);
 40879   003E1A  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 40880   003E1C  6E28               	movwf	??_removeTableEntry^(0+1280),c
 40881   003E1E  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 40882   003E20  0E01               	movlw	1
 40883   003E22  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40884   003E24  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 40885   003E28  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 40886   003E2C  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 40887   003E2E  50F3               	movf	prodl,w,c
 40888   003E30  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40889   003E32  0E01               	movlw	1
 40890   003E34  0228               	mulwf	??_removeTableEntry^(0+1280),c
 40891   003E36  50F3               	movf	prodl,w,c
 40892   003E38  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 40893   003E3A  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 40894   003E3E  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 40895   003E42  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 40896   003E44  0E04               	movlw	4
 40897   003E46  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 40898   003E48  6E0E               	movwf	writeNVM@index^(0+1280),c
 40899   003E4A  0E00               	movlw	0
 40900   003E4C  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 40901   003E4E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40902   003E50  0E01               	movlw	1
 40903   003E52  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 40904   003E54  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40905   003E56  0E00               	movlw	0
 40906   003E58  6E11               	movwf	writeNVM@value^(0+1280),c
 40907   003E5A  0E01               	movlw	1
 40908   003E5C  ECB5  F038         	call	_writeNVM
 40909   003E60                     
 40910                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<252; i++) {
 40911   003E60  6A34               	clrf	removeTableEntry@i^(0+1280),c
 40912   003E62                     l7598:
 40913                           
 40914                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x10000 +
      +                           (sizeof(Event) + 1 + 252)*tableIndex + (5 + i), 0x00);
 40915   003E62  5034               	movf	removeTableEntry@i^(0+1280),w,c
 40916   003E64  6E28               	movwf	??_removeTableEntry^(0+1280),c
 40917   003E66  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 40918   003E68  0E05               	movlw	5
 40919   003E6A  2628               	addwf	??_removeTableEntry^(0+1280),f,c
 40920   003E6C  0E00               	movlw	0
 40921   003E6E  2229               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 40922   003E70  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 40923   003E72  6E2A               	movwf	(??_removeTableEntry+2)^(0+1280),c
 40924   003E74  6A2B               	clrf	(??_removeTableEntry+3)^(0+1280),c
 40925   003E76  0E01               	movlw	1
 40926   003E78  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 40927   003E7A  C4F3 F52C          	movff	prodl,??_removeTableEntry+4
 40928   003E7E  C4F4 F52D          	movff	prodh,??_removeTableEntry+5
 40929   003E82  022B               	mulwf	(??_removeTableEntry+3)^(0+1280),c
 40930   003E84  50F3               	movf	prodl,w,c
 40931   003E86  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 40932   003E88  0E01               	movlw	1
 40933   003E8A  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 40934   003E8C  50F3               	movf	prodl,w,c
 40935   003E8E  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 40936   003E90  C52C  F52E         	movff	??_removeTableEntry+4,??_removeTableEntry+6
 40937   003E94  C52D  F52F         	movff	??_removeTableEntry+5,??_removeTableEntry+7
 40938   003E98  6A30               	clrf	(??_removeTableEntry+8)^(0+1280),c
 40939   003E9A  5028               	movf	??_removeTableEntry^(0+1280),w,c
 40940   003E9C  242E               	addwf	(??_removeTableEntry+6)^(0+1280),w,c
 40941   003E9E  6E31               	movwf	(??_removeTableEntry+9)^(0+1280),c
 40942   003EA0  5029               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 40943   003EA2  202F               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 40944   003EA4  6E32               	movwf	(??_removeTableEntry+10)^(0+1280),c
 40945   003EA6  0E00               	movlw	0
 40946   003EA8  BE29               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 40947   003EAA  0EFF               	movlw	255
 40948   003EAC  2030               	addwfc	(??_removeTableEntry+8)^(0+1280),w,c
 40949   003EAE  6E33               	movwf	(??_removeTableEntry+11)^(0+1280),c
 40950   003EB0  0E00               	movlw	0
 40951   003EB2  2431               	addwf	(??_removeTableEntry+9)^(0+1280),w,c
 40952   003EB4  6E0E               	movwf	writeNVM@index^(0+1280),c
 40953   003EB6  0E00               	movlw	0
 40954   003EB8  2032               	addwfc	(??_removeTableEntry+10)^(0+1280),w,c
 40955   003EBA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40956   003EBC  0E01               	movlw	1
 40957   003EBE  2033               	addwfc	(??_removeTableEntry+11)^(0+1280),w,c
 40958   003EC0  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40959   003EC2  0E00               	movlw	0
 40960   003EC4  6E11               	movwf	writeNVM@value^(0+1280),c
 40961   003EC6  0E01               	movlw	1
 40962   003EC8  ECB5  F038         	call	_writeNVM
 40963   003ECC                     
 40964                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 40965   003ECC  2A34               	incf	removeTableEntry@i^(0+1280),f,c
 40966   003ECE  0EFB               	movlw	251
 40967   003ED0  6434               	cpfsgt	removeTableEntry@i^(0+1280),c
 40968   003ED2  EF6D  F01F         	goto	u5031
 40969   003ED6  EF6F  F01F         	goto	u5030
 40970   003EDA                     u5031:
 40971   003EDA  EF31  F01F         	goto	l7598
 40972   003EDE                     u5030:
 40973   003EDE                     
 40974                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 40975   003EDE  EC50  F031         	call	_flushFlashBlock	;wreg free
 40976   003EE2                     
 40977                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 40978   003EE2  EC04  F028         	call	_rebuildHashtable	;wreg free
 40979   003EE6                     
 40980                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 40981   003EE6  0E00               	movlw	0
 40982   003EE8  0012               	return		;funcret
 40983   003EEA                     __end_of_removeTableEntry:
 40984                           	callstack 0
 40985                           
 40986 ;; *************** function _writeNVM *****************
 40987 ;; Defined at:
 40988 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 40989 ;; Parameters:    Size  Location     Type
 40990 ;;  type            1    wreg     enum E23276
 40991 ;;  index           3   13[COMRAM] unsigned um
 40992 ;;  value           1   16[COMRAM] unsigned char 
 40993 ;; Auto vars:     Size  Location     Type
 40994 ;;  type            1   19[COMRAM] enum E23276
 40995 ;; Return value:  Size  Location     Type
 40996 ;;                  1    wreg      unsigned char 
 40997 ;; Registers used:
 40998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40999 ;; Tracked objects:
 41000 ;;		On entry : 0/0
 41001 ;;		On exit  : 0/0
 41002 ;;		Unchanged: 0/0
 41003 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41008 ;;Total ram usage:        7 bytes
 41009 ;; Hardware stack levels used: 1
 41010 ;; Hardware stack levels required when called: 5
 41011 ;; This function calls:
 41012 ;;		_EEPROM_Write
 41013 ;;		_FLASH_Write
 41014 ;; This function is called by:
 41015 ;;		_bootProcessMessage
 41016 ;;		_canFactoryReset
 41017 ;;		_setNewCanId
 41018 ;;		_removeTableEntry
 41019 ;;		_addEvent
 41020 ;;		_writeEv
 41021 ;;		_mnsFactoryReset
 41022 ;;		_mnsProcessMessage
 41023 ;;		_mnsPoll
 41024 ;;		_nvFactoryReset
 41025 ;;		_setNV
 41026 ;;		_factoryReset
 41027 ;;		_saveNV
 41028 ;; This function uses a non-reentrant model
 41029 ;;
 41030                           
 41031                           	psect	text126
 41032   00716A                     __ptext126:
 41033                           	callstack 0
 41034   00716A                     _writeNVM:
 41035                           	callstack 116
 41036                           
 41037                           ;incstack = 0
 41038                           ;writeNVM@type stored from wreg
 41039   00716A  6E14               	movwf	writeNVM@type^(0+1280),c
 41040   00716C                     
 41041                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 41042   00716C  EFD0  F038         	goto	l7336
 41043   007170                     l7326:
 41044                           
 41045                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41046   007170  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 41047   007174  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41048   007178  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 41049   00717C  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 41050   007180  ECE6  F038         	call	_EEPROM_Write	;wreg free
 41051   007184  EFE5  F038         	goto	l1494
 41052   007188                     l7330:
 41053                           
 41054                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41055   007188  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 41056   00718C  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 41057   007190  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 41058   007194  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 41059   007198  ECFD  F026         	call	_FLASH_Write	;wreg free
 41060   00719C  EFE5  F038         	goto	l1494
 41061   0071A0                     l7336:
 41062   0071A0  5014               	movf	writeNVM@type^(0+1280),w,c
 41063   0071A2  6E12               	movwf	??_writeNVM^(0+1280),c
 41064   0071A4  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 41065                           
 41066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41067                           ; Switch size 1, requested type "simple"
 41068                           ; Number of cases is 1, Range of values is 0 to 0
 41069                           ; switch strategies available:
 41070                           ; Name         Instructions Cycles
 41071                           ; simple_byte            4     3 (average)
 41072                           ;	Chosen strategy is simple_byte
 41073   0071A6  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 41074   0071A8  0A00               	xorlw	0	; case 0
 41075   0071AA  B4D8               	btfsc	status,2,c
 41076   0071AC  EFDA  F038         	goto	l11534
 41077   0071B0  EFE5  F038         	goto	l1494
 41078   0071B4                     l11534:
 41079                           
 41080                           ; Switch size 1, requested type "simple"
 41081                           ; Number of cases is 2, Range of values is 0 to 1
 41082                           ; switch strategies available:
 41083                           ; Name         Instructions Cycles
 41084                           ; simple_byte            7     4 (average)
 41085                           ;	Chosen strategy is simple_byte
 41086   0071B4  5012               	movf	??_writeNVM^(0+1280),w,c
 41087   0071B6  0A00               	xorlw	0	; case 0
 41088   0071B8  B4D8               	btfsc	status,2,c
 41089   0071BA  EFB8  F038         	goto	l7326
 41090   0071BE  0A01               	xorlw	1	; case 1
 41091   0071C0  B4D8               	btfsc	status,2,c
 41092   0071C2  EFC4  F038         	goto	l7330
 41093   0071C6  EFE5  F038         	goto	l1494
 41094   0071CA                     l1494:
 41095   0071CA  0012               	return		;funcret
 41096   0071CC                     __end_of_writeNVM:
 41097                           	callstack 0
 41098                           
 41099 ;; *************** function _FLASH_Write *****************
 41100 ;; Defined at:
 41101 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 41102 ;; Parameters:    Size  Location     Type
 41103 ;;  index           3    5[COMRAM] unsigned um
 41104 ;;  value           1    8[COMRAM] unsigned char 
 41105 ;; Auto vars:     Size  Location     Type
 41106 ;;  oldValue        1    0        unsigned char 
 41107 ;; Return value:  Size  Location     Type
 41108 ;;                  1    wreg      unsigned char 
 41109 ;; Registers used:
 41110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41111 ;; Tracked objects:
 41112 ;;		On entry : 0/0
 41113 ;;		On exit  : 0/0
 41114 ;;		Unchanged: 0/0
 41115 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41119 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41120 ;;Total ram usage:        8 bytes
 41121 ;; Hardware stack levels used: 1
 41122 ;; Hardware stack levels required when called: 4
 41123 ;; This function calls:
 41124 ;;		_eraseFlashBlock
 41125 ;;		_flushFlashBlock
 41126 ;;		_loadFlashBlock
 41127 ;; This function is called by:
 41128 ;;		_writeNVM
 41129 ;; This function uses a non-reentrant model
 41130 ;;
 41131                           
 41132                           	psect	text127
 41133   004DFA                     __ptext127:
 41134                           	callstack 0
 41135   004DFA                     _FLASH_Write:
 41136                           	callstack 116
 41137   004DFA                     
 41138                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 41139   004DFA  0E00               	movlw	0
 41140   004DFC  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41141   004DFE  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41142   004E00  0EFF               	movlw	255
 41143   004E02  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41144   004E04  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41145   004E06  0EFF               	movlw	255
 41146   004E08  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 41147   004E0A  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 41148   004E0C  0105               	movlb	5	; () banked
 41149   004E0E  5180               	movf	_flashBlock& (0+255),w,b
 41150   004E10  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 41151   004E12  E10C               	bnz	u4660
 41152   004E14  5181               	movf	(_flashBlock+1)& (0+255),w,b
 41153   004E16  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 41154   004E18  E109               	bnz	u4660
 41155   004E1A  5182               	movf	(_flashBlock+2)& (0+255),w,b
 41156   004E1C  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 41157   004E1E  B4D8               	btfsc	status,2,c
 41158   004E20  EF14  F027         	goto	u4661
 41159   004E24  EF16  F027         	goto	u4660
 41160   004E28                     u4661:
 41161   004E28  EF39  F027         	goto	l7312
 41162   004E2C                     u4660:
 41163   004E2C                     
 41164                           ; BSR set to: 5
 41165                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 41166   004E2C  5180               	movf	_flashBlock& (0+255),w,b
 41167   004E2E  1181               	iorwf	(_flashBlock+1)& (0+255),w,b
 41168   004E30  1182               	iorwf	(_flashBlock+2)& (0+255),w,b
 41169   004E32  B4D8               	btfsc	status,2,c
 41170   004E34  EF1E  F027         	goto	u4671
 41171   004E38  EF20  F027         	goto	u4670
 41172   004E3C                     u4671:
 41173   004E3C  EF2D  F027         	goto	l7308
 41174   004E40                     u4670:
 41175   004E40                     
 41176                           ; BSR set to: 5
 41177                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 41178   004E40  A39B               	btfss	_flashFlags& (0+255),1,b
 41179   004E42  EF25  F027         	goto	u4681
 41180   004E46  EF27  F027         	goto	u4680
 41181   004E4A                     u4681:
 41182   004E4A  EF2B  F027         	goto	l1487
 41183   004E4E                     u4680:
 41184   004E4E                     
 41185                           ; BSR set to: 5
 41186                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 41187   004E4E  EC2D  F034         	call	_eraseFlashBlock	;wreg free
 41188   004E52                     
 41189                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 41190   004E52  0105               	movlb	5	; () banked
 41191   004E54  939B               	bcf	_flashFlags& (0+255),1,b
 41192   004E56                     l1487:
 41193                           
 41194                           ; BSR set to: 5
 41195                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 41196   004E56  EC50  F031         	call	_flushFlashBlock	;wreg free
 41197   004E5A                     l7308:
 41198                           
 41199                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 41200   004E5A  0E00               	movlw	0
 41201   004E5C  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41202   004E5E  0105               	movlb	5	; () banked
 41203   004E60  6F80               	movwf	_flashBlock& (0+255),b
 41204   004E62  0EFF               	movlw	255
 41205   004E64  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41206   004E66  6F81               	movwf	(_flashBlock+1)& (0+255),b
 41207   004E68  0EFF               	movlw	255
 41208   004E6A  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 41209   004E6C  6F82               	movwf	(_flashBlock+2)& (0+255),b
 41210   004E6E                     
 41211                           ; BSR set to: 5
 41212                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 41213   004E6E  EC9A  F039         	call	_loadFlashBlock	;wreg free
 41214   004E72                     l7312:
 41215                           
 41216                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 41217   004E72  0EFF               	movlw	255
 41218   004E74  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41219   004E76  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41220   004E78  0E00               	movlw	0
 41221   004E7A  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41222   004E7C  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41223   004E7E  0E00               	movlw	0
 41224   004E80  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 41225   004E82  6ED9               	movwf	fsr2l,c
 41226   004E84  0E37               	movlw	55
 41227   004E86  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 41228   004E88  6EDA               	movwf	fsr2h,c
 41229   004E8A  50DF               	movf	indf2,w,c
 41230   004E8C  0AFF               	xorlw	255
 41231   004E8E  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 41232   004E90  0900               	iorlw	0
 41233   004E92  A4D8               	btfss	status,2,c
 41234   004E94  EF4E  F027         	goto	u4691
 41235   004E98  EF52  F027         	goto	u4690
 41236   004E9C                     u4691:
 41237   004E9C  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 41238   004E9E  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 41239   004EA0  EF53  F027         	goto	u4708
 41240   004EA4                     u4690:
 41241   004EA4  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 41242   004EA6                     u4708:
 41243   004EA6  0105               	movlb	5	; () banked
 41244   004EA8  319B               	rrcf	_flashFlags& (0+255),w,b
 41245   004EAA  0B01               	andlw	1
 41246   004EAC  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 41247   004EAE  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 41248   004EB0  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 41249   004EB2  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 41250   004EB4  519B               	movf	_flashFlags& (0+255),w,b
 41251   004EB6  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 41252   004EB8  0BFD               	andlw	-3
 41253   004EBA  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 41254   004EBC  6F9B               	movwf	_flashFlags& (0+255),b
 41255   004EBE                     
 41256                           ; BSR set to: 5
 41257                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 41258   004EBE  0EFF               	movlw	255
 41259   004EC0  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41260   004EC2  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41261   004EC4  0E00               	movlw	0
 41262   004EC6  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41263   004EC8  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41264   004ECA  0E00               	movlw	0
 41265   004ECC  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 41266   004ECE  6ED9               	movwf	fsr2l,c
 41267   004ED0  0E37               	movlw	55
 41268   004ED2  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 41269   004ED4  6EDA               	movwf	fsr2h,c
 41270   004ED6  5009               	movf	FLASH_Write@value^(0+1280),w,c
 41271   004ED8  18DE               	xorwf	postinc2,w,c
 41272   004EDA  B4D8               	btfsc	status,2,c
 41273   004EDC  EF72  F027         	goto	u4711
 41274   004EE0  EF74  F027         	goto	u4710
 41275   004EE4                     u4711:
 41276   004EE4  EF83  F027         	goto	l7320
 41277   004EE8                     u4710:
 41278   004EE8                     
 41279                           ; BSR set to: 5
 41280                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 41281   004EE8  819B               	bsf	_flashFlags& (0+255),0,b
 41282   004EEA                     
 41283                           ; BSR set to: 5
 41284                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 41285   004EEA  0EFF               	movlw	255
 41286   004EEC  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41287   004EEE  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41288   004EF0  0E00               	movlw	0
 41289   004EF2  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41290   004EF4  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41291   004EF6  0E00               	movlw	0
 41292   004EF8  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 41293   004EFA  6ED9               	movwf	fsr2l,c
 41294   004EFC  0E37               	movlw	55
 41295   004EFE  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 41296   004F00  6EDA               	movwf	fsr2h,c
 41297   004F02  C509  F4DF         	movff	FLASH_Write@value,indf2
 41298   004F06                     l7320:
 41299                           
 41300                           ; BSR set to: 5
 41301                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 41302   004F06  0E00               	movlw	0
 41303   004F08                     
 41304                           ; BSR set to: 5
 41305   004F08  0012               	return		;funcret
 41306   004F0A                     __end_of_FLASH_Write:
 41307                           	callstack 0
 41308                           
 41309 ;; *************** function _loadFlashBlock *****************
 41310 ;; Defined at:
 41311 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 41312 ;; Parameters:    Size  Location     Type
 41313 ;;		None
 41314 ;; Auto vars:     Size  Location     Type
 41315 ;;		None
 41316 ;; Return value:  Size  Location     Type
 41317 ;;                  1    wreg      void 
 41318 ;; Registers used:
 41319 ;;		wreg, status,2
 41320 ;; Tracked objects:
 41321 ;;		On entry : 0/0
 41322 ;;		On exit  : 0/0
 41323 ;;		Unchanged: 0/0
 41324 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41327 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41329 ;;Total ram usage:        3 bytes
 41330 ;; Hardware stack levels used: 1
 41331 ;; Hardware stack levels required when called: 1
 41332 ;; This function calls:
 41333 ;;		Nothing
 41334 ;; This function is called by:
 41335 ;;		_FLASH_Write
 41336 ;; This function uses a non-reentrant model
 41337 ;;
 41338                           
 41339                           	psect	text128
 41340   007334                     __ptext128:
 41341                           	callstack 0
 41342   007334                     _loadFlashBlock:
 41343                           	callstack 118
 41344   007334                     l1476:
 41345                           
 41346                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 41347   007334  0100               	movlb	0	; () banked
 41348   007336  B140               	btfsc	64,0,b	;volatile
 41349   007338  EFA0  F039         	goto	u4581
 41350   00733C  EFA2  F039         	goto	u4580
 41351   007340                     u4581:
 41352   007340  EF9A  F039         	goto	l1476
 41353   007344                     u4580:
 41354   007344                     
 41355                           ; BSR set to: 0
 41356                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 41357   007344  C582  F045         	movff	_flashBlock+2,69	;volatile
 41358   007348                     
 41359                           ; BSR set to: 0
 41360                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 41361   007348  C580  F501         	movff	_flashBlock,??_loadFlashBlock
 41362   00734C  C581  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 41363   007350  C582  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 41364   007354  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 41365   007358  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 41366   00735C  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 41367   00735E  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 41368   007360  6F44               	movwf	68,b	;volatile
 41369   007362                     
 41370                           ; BSR set to: 0
 41371                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 41372   007362  C580  F043         	movff	_flashBlock,67	;volatile
 41373                           
 41374                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 41375   007366  5141               	movf	65,w,b	;volsfr
 41376   007368  0BF8               	andlw	-8
 41377   00736A  0902               	iorlw	2
 41378   00736C  6F41               	movwf	65,b	;volsfr
 41379   00736E                     
 41380                           ; BSR set to: 0
 41381                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 41382   00736E  8140               	bsf	64,0,b	;volatile
 41383   007370                     l1479:
 41384                           
 41385                           ; BSR set to: 0
 41386                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 41387   007370  B140               	btfsc	64,0,b	;volatile
 41388   007372  EFBD  F039         	goto	u4591
 41389   007376  EFBF  F039         	goto	u4590
 41390   00737A                     u4591:
 41391   00737A  EFB8  F039         	goto	l1479
 41392   00737E                     u4590:
 41393   00737E                     
 41394                           ; BSR set to: 0
 41395                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 41396   00737E  0E07               	movlw	7
 41397   007380  1341               	iorwf	65,f,b	;volsfr
 41398   007382                     
 41399                           ; BSR set to: 0
 41400                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 41401   007382  0105               	movlb	5	; () banked
 41402   007384  6B9B               	clrf	_flashFlags& (0+255),b
 41403   007386                     
 41404                           ; BSR set to: 5
 41405   007386  0012               	return		;funcret
 41406   007388                     __end_of_loadFlashBlock:
 41407                           	callstack 0
 41408                           
 41409 ;; *************** function _flushFlashBlock *****************
 41410 ;; Defined at:
 41411 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 41412 ;; Parameters:    Size  Location     Type
 41413 ;;		None
 41414 ;; Auto vars:     Size  Location     Type
 41415 ;;  interruptEna    1    4[COMRAM] unsigned char 
 41416 ;; Return value:  Size  Location     Type
 41417 ;;                  1    wreg      void 
 41418 ;; Registers used:
 41419 ;;		wreg, status,2, cstack
 41420 ;; Tracked objects:
 41421 ;;		On entry : 0/0
 41422 ;;		On exit  : 0/0
 41423 ;;		Unchanged: 0/0
 41424 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41429 ;;Total ram usage:        1 bytes
 41430 ;; Hardware stack levels used: 1
 41431 ;; Hardware stack levels required when called: 3
 41432 ;; This function calls:
 41433 ;;		_APP_isSuitableTimeToWriteFlash
 41434 ;;		_eraseFlashBlock
 41435 ;; This function is called by:
 41436 ;;		_removeTableEntry
 41437 ;;		_addEvent
 41438 ;;		_FLASH_Write
 41439 ;;		_poll
 41440 ;; This function uses a non-reentrant model
 41441 ;;
 41442                           
 41443                           	psect	text129
 41444   0062A0                     __ptext129:
 41445                           	callstack 0
 41446   0062A0                     _flushFlashBlock:
 41447                           	callstack 116
 41448   0062A0                     
 41449                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 41450   0062A0  0105               	movlb	5	; () banked
 41451   0062A2  B19B               	btfsc	_flashFlags& (0+255),0,b
 41452   0062A4  EF56  F031         	goto	u4501
 41453   0062A8  EF58  F031         	goto	u4500
 41454   0062AC                     u4501:
 41455   0062AC  EF5A  F031         	goto	l7162
 41456   0062B0                     u4500:
 41457   0062B0  EF9E  F031         	goto	l1462
 41458   0062B4                     l7162:
 41459                           
 41460                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41461   0062B4  ECE6  F03D         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41462   0062B8  0900               	iorlw	0
 41463   0062BA  B4D8               	btfsc	status,2,c
 41464   0062BC  EF62  F031         	goto	u4511
 41465   0062C0  EF64  F031         	goto	u4510
 41466   0062C4                     u4511:
 41467   0062C4  EF5A  F031         	goto	l7162
 41468   0062C8                     u4510:
 41469   0062C8                     
 41470                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 41471   0062C8  0105               	movlb	5	; () banked
 41472   0062CA  A39B               	btfss	_flashFlags& (0+255),1,b
 41473   0062CC  EF6A  F031         	goto	u4521
 41474   0062D0  EF6C  F031         	goto	u4520
 41475   0062D4                     u4521:
 41476   0062D4  EF6E  F031         	goto	l7166
 41477   0062D8                     u4520:
 41478   0062D8                     
 41479                           ; BSR set to: 5
 41480                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 41481   0062D8  EC2D  F034         	call	_eraseFlashBlock	;wreg free
 41482   0062DC                     l7166:
 41483                           
 41484                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 41485   0062DC  0E00               	movlw	0
 41486   0062DE  BED6               	btfsc	214,7,c	;volatile
 41487   0062E0  0E01               	movlw	1
 41488   0062E2  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 41489   0062E4                     
 41490                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 41491   0062E4  9ED6               	bcf	214,7,c	;volatile
 41492   0062E6                     l1467:
 41493                           
 41494                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 41495   0062E6  0100               	movlb	0	; () banked
 41496   0062E8  B140               	btfsc	64,0,b	;volatile
 41497   0062EA  EF79  F031         	goto	u4531
 41498   0062EE  EF7B  F031         	goto	u4530
 41499   0062F2                     u4531:
 41500   0062F2  EF73  F031         	goto	l1467
 41501   0062F6                     u4530:
 41502   0062F6                     
 41503                           ; BSR set to: 0
 41504                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 41505   0062F6  C580  F043         	movff	_flashBlock,67	;volatile
 41506   0062FA  C581  F044         	movff	_flashBlock+1,68	;volatile
 41507   0062FE  C582  F045         	movff	_flashBlock+2,69	;volatile
 41508   006302                     
 41509                           ; BSR set to: 0
 41510                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 41511   006302  5141               	movf	65,w,b	;volsfr
 41512   006304  0BF8               	andlw	-8
 41513   006306  0905               	iorlw	5
 41514   006308  6F41               	movwf	65,b	;volsfr
 41515                           
 41516                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 41517   00630A  0E55               	movlw	85
 41518   00630C  6F42               	movwf	66,b	;volatile
 41519                           
 41520                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 41521   00630E  0EAA               	movlw	170
 41522   006310  6F42               	movwf	66,b	;volatile
 41523   006312                     
 41524                           ; BSR set to: 0
 41525                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 41526   006312  8140               	bsf	64,0,b	;volatile
 41527   006314                     l1470:
 41528                           
 41529                           ; BSR set to: 0
 41530                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 41531   006314  B140               	btfsc	64,0,b	;volatile
 41532   006316  EF8F  F031         	goto	u4541
 41533   00631A  EF91  F031         	goto	u4540
 41534   00631E                     u4541:
 41535   00631E  EF8A  F031         	goto	l1470
 41536   006322                     u4540:
 41537   006322                     
 41538                           ; BSR set to: 0
 41539                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 41540   006322  0E07               	movlw	7
 41541   006324  1341               	iorwf	65,f,b	;volsfr
 41542                           
 41543                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 41544   006326  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 41545   006328  B4D8               	btfsc	status,2,c
 41546   00632A  EF99  F031         	goto	u4551
 41547   00632E  EF9B  F031         	goto	u4550
 41548   006332                     u4551:
 41549   006332  EF9C  F031         	goto	l1473
 41550   006336                     u4550:
 41551   006336                     
 41552                           ; BSR set to: 0
 41553                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 41554   006336  8ED6               	bsf	214,7,c	;volatile
 41555   006338                     l1473:
 41556                           
 41557                           ; BSR set to: 0
 41558                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 41559   006338  0105               	movlb	5	; () banked
 41560   00633A  6B9B               	clrf	_flashFlags& (0+255),b
 41561   00633C                     l1462:
 41562                           
 41563                           ; BSR set to: 5
 41564   00633C  0012               	return		;funcret
 41565   00633E                     __end_of_flushFlashBlock:
 41566                           	callstack 0
 41567                           
 41568 ;; *************** function _eraseFlashBlock *****************
 41569 ;; Defined at:
 41570 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 41571 ;; Parameters:    Size  Location     Type
 41572 ;;		None
 41573 ;; Auto vars:     Size  Location     Type
 41574 ;;  interruptEna    1    3[COMRAM] unsigned char 
 41575 ;; Return value:  Size  Location     Type
 41576 ;;                  1    wreg      void 
 41577 ;; Registers used:
 41578 ;;		wreg, status,2, cstack
 41579 ;; Tracked objects:
 41580 ;;		On entry : 0/0
 41581 ;;		On exit  : 0/0
 41582 ;;		Unchanged: 0/0
 41583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41588 ;;Total ram usage:        4 bytes
 41589 ;; Hardware stack levels used: 1
 41590 ;; Hardware stack levels required when called: 2
 41591 ;; This function calls:
 41592 ;;		_APP_isSuitableTimeToWriteFlash
 41593 ;; This function is called by:
 41594 ;;		_flushFlashBlock
 41595 ;;		_FLASH_Write
 41596 ;; This function uses a non-reentrant model
 41597 ;;
 41598                           
 41599                           	psect	text130
 41600   00685A                     __ptext130:
 41601                           	callstack 0
 41602   00685A                     _eraseFlashBlock:
 41603                           	callstack 116
 41604   00685A                     l7118:
 41605                           
 41606                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 41607   00685A  ECE6  F03D         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41608   00685E  0900               	iorlw	0
 41609   006860  B4D8               	btfsc	status,2,c
 41610   006862  EF35  F034         	goto	u4451
 41611   006866  EF37  F034         	goto	u4450
 41612   00686A                     u4451:
 41613   00686A  EF2D  F034         	goto	l7118
 41614   00686E                     u4450:
 41615   00686E                     
 41616                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 41617   00686E  0E00               	movlw	0
 41618   006870  BED6               	btfsc	214,7,c	;volatile
 41619   006872  0E01               	movlw	1
 41620   006874  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 41621   006876                     l1451:
 41622                           
 41623                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 41624   006876  0100               	movlb	0	; () banked
 41625   006878  B140               	btfsc	64,0,b	;volatile
 41626   00687A  EF41  F034         	goto	u4461
 41627   00687E  EF43  F034         	goto	u4460
 41628   006882                     u4461:
 41629   006882  EF3B  F034         	goto	l1451
 41630   006886                     u4460:
 41631   006886                     
 41632                           ; BSR set to: 0
 41633                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 41634   006886  C582  F045         	movff	_flashBlock+2,69	;volatile
 41635   00688A                     
 41636                           ; BSR set to: 0
 41637                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 41638   00688A  C580  F501         	movff	_flashBlock,??_eraseFlashBlock
 41639   00688E  C581  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 41640   006892  C582  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 41641   006896  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 41642   00689A  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 41643   00689E  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 41644   0068A0  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 41645   0068A2  6F44               	movwf	68,b	;volatile
 41646                           
 41647                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 41648   0068A4  5141               	movf	65,w,b	;volsfr
 41649   0068A6  0BF8               	andlw	-8
 41650   0068A8  0906               	iorlw	6
 41651   0068AA  6F41               	movwf	65,b	;volsfr
 41652   0068AC                     
 41653                           ; BSR set to: 0
 41654                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 41655   0068AC  9ED6               	bcf	214,7,c	;volatile
 41656                           
 41657                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 41658   0068AE  0E55               	movlw	85
 41659   0068B0  6F42               	movwf	66,b	;volatile
 41660                           
 41661                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 41662   0068B2  0EAA               	movlw	170
 41663   0068B4  6F42               	movwf	66,b	;volatile
 41664   0068B6                     
 41665                           ; BSR set to: 0
 41666                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 41667   0068B6  8140               	bsf	64,0,b	;volatile
 41668   0068B8                     l1454:
 41669                           
 41670                           ; BSR set to: 0
 41671                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 41672   0068B8  B140               	btfsc	64,0,b	;volatile
 41673   0068BA  EF61  F034         	goto	u4471
 41674   0068BE  EF63  F034         	goto	u4470
 41675   0068C2                     u4471:
 41676   0068C2  EF5C  F034         	goto	l1454
 41677   0068C6                     u4470:
 41678   0068C6                     
 41679                           ; BSR set to: 0
 41680                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 41681   0068C6  0E07               	movlw	7
 41682   0068C8  1341               	iorwf	65,f,b	;volsfr
 41683                           
 41684                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 41685   0068CA  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 41686   0068CC  B4D8               	btfsc	status,2,c
 41687   0068CE  EF6B  F034         	goto	u4481
 41688   0068D2  EF6D  F034         	goto	u4480
 41689   0068D6                     u4481:
 41690   0068D6  EF6E  F034         	goto	l1458
 41691   0068DA                     u4480:
 41692   0068DA                     
 41693                           ; BSR set to: 0
 41694                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 41695   0068DA  8ED6               	bsf	214,7,c	;volatile
 41696   0068DC                     l1458:
 41697                           
 41698                           ; BSR set to: 0
 41699   0068DC  0012               	return		;funcret
 41700   0068DE                     __end_of_eraseFlashBlock:
 41701                           	callstack 0
 41702                           
 41703 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41704 ;; Defined at:
 41705 ;;		line 255 in file "../main.c"
 41706 ;; Parameters:    Size  Location     Type
 41707 ;;		None
 41708 ;; Auto vars:     Size  Location     Type
 41709 ;;		None
 41710 ;; Return value:  Size  Location     Type
 41711 ;;                  1    wreg      enum E23231
 41712 ;; Registers used:
 41713 ;;		wreg
 41714 ;; Tracked objects:
 41715 ;;		On entry : 0/0
 41716 ;;		On exit  : 0/0
 41717 ;;		Unchanged: 0/0
 41718 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41723 ;;Total ram usage:        0 bytes
 41724 ;; Hardware stack levels used: 1
 41725 ;; Hardware stack levels required when called: 1
 41726 ;; This function calls:
 41727 ;;		Nothing
 41728 ;; This function is called by:
 41729 ;;		_eraseFlashBlock
 41730 ;;		_flushFlashBlock
 41731 ;; This function uses a non-reentrant model
 41732 ;;
 41733                           
 41734                           	psect	text131
 41735   007BCC                     __ptext131:
 41736                           	callstack 0
 41737   007BCC                     _APP_isSuitableTimeToWriteFlash:
 41738                           	callstack 116
 41739   007BCC                     
 41740                           ;../main.c: 256:     if (DMAnCON0bits.DGO) return BAD_TIME;
 41741   007BCC  0100               	movlb	0	; () banked
 41742   007BCE  ABFC               	btfss	252,5,b	;volatile
 41743   007BD0  EFEC  F03D         	goto	u4411
 41744   007BD4  EFEE  F03D         	goto	u4410
 41745   007BD8                     u4411:
 41746   007BD8  EFF1  F03D         	goto	l7086
 41747   007BDC                     u4410:
 41748   007BDC                     
 41749                           ; BSR set to: 0
 41750   007BDC  0E00               	movlw	0
 41751   007BDE  EFF2  F03D         	goto	l87
 41752   007BE2                     l7086:
 41753                           
 41754                           ; BSR set to: 0
 41755                           ;../main.c: 257:     return GOOD_TIME;
 41756   007BE2  0E01               	movlw	1
 41757   007BE4                     l87:
 41758                           
 41759                           ; BSR set to: 0
 41760   007BE4  0012               	return		;funcret
 41761   007BE6                     __end_of_APP_isSuitableTimeToWriteFlash:
 41762                           	callstack 0
 41763                           
 41764 ;; *************** function _EEPROM_Write *****************
 41765 ;; Defined at:
 41766 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 41767 ;; Parameters:    Size  Location     Type
 41768 ;;  index           3    8[COMRAM] unsigned um
 41769 ;;  value           1   11[COMRAM] unsigned char 
 41770 ;; Auto vars:     Size  Location     Type
 41771 ;;  interruptEna    1    0        unsigned char 
 41772 ;; Return value:  Size  Location     Type
 41773 ;;                  1    wreg      unsigned char 
 41774 ;; Registers used:
 41775 ;;		wreg, status,2, status,0, cstack
 41776 ;; Tracked objects:
 41777 ;;		On entry : 0/0
 41778 ;;		On exit  : 0/0
 41779 ;;		Unchanged: 0/0
 41780 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41785 ;;Total ram usage:        4 bytes
 41786 ;; Hardware stack levels used: 1
 41787 ;; Hardware stack levels required when called: 2
 41788 ;; This function calls:
 41789 ;;		_EEPROM_Read
 41790 ;;		_EEPROM_WriteNoVerify
 41791 ;;		_updateModuleErrorStatus
 41792 ;; This function is called by:
 41793 ;;		_writeNVM
 41794 ;; This function uses a non-reentrant model
 41795 ;;
 41796                           
 41797                           	psect	text132
 41798   0071CC                     __ptext132:
 41799                           	callstack 0
 41800   0071CC                     _EEPROM_Write:
 41801                           	callstack 118
 41802   0071CC  50D6               	movf	214,w,c	;volatile
 41803   0071CE                     l7282:
 41804                           
 41805                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 41806   0071CE  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 41807   0071D2  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 41808   0071D6  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 41809   0071DA  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 41810   0071DE  EC20  F038         	call	_EEPROM_WriteNoVerify	;wreg free
 41811   0071E2                     
 41812                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 41813   0071E2  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 41814   0071E6  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 41815   0071EA  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 41816   0071EE  EC15  F03A         	call	_EEPROM_Read	;wreg free
 41817   0071F2  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 41818   0071F4  A4D8               	btfss	status,2,c
 41819   0071F6  EFFF  F038         	goto	u4651
 41820   0071FA  EF01  F039         	goto	u4650
 41821   0071FE                     u4651:
 41822   0071FE  EF03  F039         	goto	l7288
 41823   007202                     u4650:
 41824   007202  EF0A  F039         	goto	l7292
 41825   007206                     l7288:
 41826                           
 41827                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 41828   007206  0105               	movlb	5	; () banked
 41829   007208  4BB3               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 41830   00720A  2BB4               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 41831   00720C                     
 41832                           ; BSR set to: 5
 41833                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 41834   00720C  EC16  F03E         	call	_updateModuleErrorStatus	;wreg free
 41835                           
 41836                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 41837   007210  EFE7  F038         	goto	l7282
 41838   007214                     l7292:
 41839                           
 41840                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 41841   007214  0E07               	movlw	7
 41842   007216  0100               	movlb	0	; () banked
 41843   007218  1341               	iorwf	65,f,b	;volsfr
 41844                           
 41845                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 41846   00721A  0E00               	movlw	0
 41847   00721C  6F43               	movwf	67,b	;volatile
 41848   00721E  0E00               	movlw	0
 41849   007220  6F44               	movwf	68,b	;volatile
 41850   007222  0E00               	movlw	0
 41851   007224  6F45               	movwf	69,b	;volatile
 41852   007226                     
 41853                           ; BSR set to: 0
 41854                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 41855   007226  0E00               	movlw	0
 41856   007228                     
 41857                           ; BSR set to: 0
 41858   007228  0012               	return		;funcret
 41859   00722A                     __end_of_EEPROM_Write:
 41860                           	callstack 0
 41861                           
 41862 ;; *************** function _updateModuleErrorStatus *****************
 41863 ;; Defined at:
 41864 ;;		line 638 in file "../../VLCBlib_PIC/mns.c"
 41865 ;; Parameters:    Size  Location     Type
 41866 ;;		None
 41867 ;; Auto vars:     Size  Location     Type
 41868 ;;		None
 41869 ;; Return value:  Size  Location     Type
 41870 ;;                  1    wreg      void 
 41871 ;; Registers used:
 41872 ;;		wreg, status,2, status,0
 41873 ;; Tracked objects:
 41874 ;;		On entry : 0/0
 41875 ;;		On exit  : 0/0
 41876 ;;		Unchanged: 0/0
 41877 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41882 ;;Total ram usage:        0 bytes
 41883 ;; Hardware stack levels used: 1
 41884 ;; Hardware stack levels required when called: 1
 41885 ;; This function calls:
 41886 ;;		Nothing
 41887 ;; This function is called by:
 41888 ;;		_canSendMessage
 41889 ;;		_processEnumeration
 41890 ;;		_EEPROM_Write
 41891 ;; This function uses a non-reentrant model
 41892 ;;
 41893                           
 41894                           	psect	text133
 41895   007C2C                     __ptext133:
 41896                           	callstack 0
 41897   007C2C                     _updateModuleErrorStatus:
 41898                           	callstack 119
 41899   007C2C                     
 41900                           ;../../VLCBlib_PIC/mns.c: 639:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 41901   007C2C  0105               	movlb	5	; () banked
 41902   007C2E  29AD               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 41903   007C30  B4D8               	btfsc	status,2,c
 41904   007C32  EF1D  F03E         	goto	u4491
 41905   007C36  EF1F  F03E         	goto	u4490
 41906   007C3A                     u4491:
 41907   007C3A  EF20  F03E         	goto	l1176
 41908   007C3E                     u4490:
 41909   007C3E                     
 41910                           ; BSR set to: 5
 41911                           ;../../VLCBlib_PIC/mns.c: 640:         mnsDiagnostics[0x01].asBytes.lo++;
 41912   007C3E  2BAD               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 41913   007C40                     l1176:
 41914                           
 41915                           ; BSR set to: 5
 41916   007C40  0012               	return		;funcret
 41917   007C42                     __end_of_updateModuleErrorStatus:
 41918                           	callstack 0
 41919                           
 41920 ;; *************** function _EEPROM_WriteNoVerify *****************
 41921 ;; Defined at:
 41922 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 41923 ;; Parameters:    Size  Location     Type
 41924 ;;  index           3    0[COMRAM] unsigned um
 41925 ;;  value           1    3[COMRAM] unsigned char 
 41926 ;; Auto vars:     Size  Location     Type
 41927 ;;  interruptEna    1    7[COMRAM] unsigned char 
 41928 ;; Return value:  Size  Location     Type
 41929 ;;                  1    wreg      unsigned char 
 41930 ;; Registers used:
 41931 ;;		wreg, status,2
 41932 ;; Tracked objects:
 41933 ;;		On entry : 0/0
 41934 ;;		On exit  : 0/0
 41935 ;;		Unchanged: 0/0
 41936 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41939 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41940 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41941 ;;Total ram usage:        8 bytes
 41942 ;; Hardware stack levels used: 1
 41943 ;; Hardware stack levels required when called: 1
 41944 ;; This function calls:
 41945 ;;		Nothing
 41946 ;; This function is called by:
 41947 ;;		_EEPROM_Write
 41948 ;; This function uses a non-reentrant model
 41949 ;;
 41950                           
 41951                           	psect	text134
 41952   007040                     __ptext134:
 41953                           	callstack 0
 41954   007040                     _EEPROM_WriteNoVerify:
 41955                           	callstack 118
 41956   007040                     
 41957                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 41958   007040  0E00               	movlw	0
 41959   007042  BED6               	btfsc	214,7,c	;volatile
 41960   007044  0E01               	movlw	1
 41961   007046  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 41962   007048                     l1436:
 41963                           
 41964                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 41965   007048  0100               	movlb	0	; () banked
 41966   00704A  B140               	btfsc	64,0,b	;volatile
 41967   00704C  EF2A  F038         	goto	u4561
 41968   007050  EF2C  F038         	goto	u4560
 41969   007054                     u4561:
 41970   007054  EF24  F038         	goto	l1436
 41971   007058                     u4560:
 41972   007058                     
 41973                           ; BSR set to: 0
 41974                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 41975   007058  0E38               	movlw	56
 41976   00705A  6F45               	movwf	69,b	;volatile
 41977                           
 41978                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 41979   00705C  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 41980   007060  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 41981   007064  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 41982   007068  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 41983   00706C  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 41984   007070  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 41985   007072  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 41986   007074  6F44               	movwf	68,b	;volatile
 41987   007076                     
 41988                           ; BSR set to: 0
 41989                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 41990   007076  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 41991   00707A                     
 41992                           ; BSR set to: 0
 41993                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 41994   00707A  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 41995                           
 41996                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 41997   00707E  5141               	movf	65,w,b	;volsfr
 41998   007080  0BF8               	andlw	-8
 41999   007082  0903               	iorlw	3
 42000   007084  6F41               	movwf	65,b	;volsfr
 42001   007086                     
 42002                           ; BSR set to: 0
 42003                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 42004   007086  9ED6               	bcf	214,7,c	;volatile
 42005                           
 42006                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 42007   007088  0E55               	movlw	85
 42008   00708A  6F42               	movwf	66,b	;volatile
 42009                           
 42010                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 42011   00708C  0EAA               	movlw	170
 42012   00708E  6F42               	movwf	66,b	;volatile
 42013   007090                     
 42014                           ; BSR set to: 0
 42015                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 42016   007090  8140               	bsf	64,0,b	;volatile
 42017                           
 42018                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 42019   007092  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 42020   007094  B4D8               	btfsc	status,2,c
 42021   007096  EF4F  F038         	goto	u4571
 42022   00709A  EF51  F038         	goto	u4570
 42023   00709E                     u4571:
 42024   00709E  EF52  F038         	goto	l1440
 42025   0070A2                     u4570:
 42026   0070A2                     
 42027                           ; BSR set to: 0
 42028                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 42029   0070A2  8ED6               	bsf	214,7,c	;volatile
 42030   0070A4                     l1440:
 42031                           
 42032                           ; BSR set to: 0
 42033   0070A4  0012               	return		;funcret
 42034   0070A6                     __end_of_EEPROM_WriteNoVerify:
 42035                           	callstack 0
 42036                           
 42037 ;; *************** function _rebuildHashtable *****************
 42038 ;; Defined at:
 42039 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42040 ;; Parameters:    Size  Location     Type
 42041 ;;		None
 42042 ;; Auto vars:     Size  Location     Type
 42043 ;;  ev              2    0        short 
 42044 ;;  a               2    0        int 
 42045 ;;  chainIdx        1   38[COMRAM] unsigned char 
 42046 ;;  tableIndex      1   37[COMRAM] unsigned char 
 42047 ;;  hash            1   36[COMRAM] unsigned char 
 42048 ;; Return value:  Size  Location     Type
 42049 ;;                  1    wreg      void 
 42050 ;; Registers used:
 42051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42052 ;; Tracked objects:
 42053 ;;		On entry : 0/0
 42054 ;;		On exit  : 0/0
 42055 ;;		Unchanged: 0/0
 42056 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42058 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42059 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42061 ;;Total ram usage:        6 bytes
 42062 ;; Hardware stack levels used: 1
 42063 ;; Hardware stack levels required when called: 4
 42064 ;; This function calls:
 42065 ;;		_getEN
 42066 ;;		_getHash
 42067 ;;		_getNN
 42068 ;; This function is called by:
 42069 ;;		_teachPowerUp
 42070 ;;		_clearAllEvents
 42071 ;;		_removeTableEntry
 42072 ;;		_addEvent
 42073 ;;		_mnsProcessMessage
 42074 ;; This function uses a non-reentrant model
 42075 ;;
 42076                           
 42077                           	psect	text135
 42078   005008                     __ptext135:
 42079                           	callstack 0
 42080   005008                     _rebuildHashtable:
 42081                           	callstack 120
 42082   005008                     
 42083                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 42084   005008  6A25               	clrf	rebuildHashtable@hash^(0+1280),c
 42085   00500A                     l947:
 42086                           
 42087                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 42088   00500A  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 42089   00500C                     l7456:
 42090                           
 42091                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 42092   00500C  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42093   00500E  0D14               	mullw	20
 42094   005010  0EFC               	movlw	low _eventChains
 42095   005012  24F3               	addwf	243,w,c
 42096   005014  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42097   005016  0E08               	movlw	high _eventChains
 42098   005018  20F4               	addwfc	prodh,w,c
 42099   00501A  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42100   00501C  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42101   00501E  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42102   005020  6ED9               	movwf	fsr2l,c
 42103   005022  0E00               	movlw	0
 42104   005024  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42105   005026  6EDA               	movwf	fsr2h,c
 42106   005028  0EFF               	movlw	255
 42107   00502A  6EDF               	movwf	indf2,c
 42108   00502C                     
 42109                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 42110   00502C  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 42111   00502E  0E13               	movlw	19
 42112   005030  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 42113   005032  EF1D  F028         	goto	u4871
 42114   005036  EF1F  F028         	goto	u4870
 42115   00503A                     u4871:
 42116   00503A  EF06  F028         	goto	l7456
 42117   00503E                     u4870:
 42118   00503E                     
 42119                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 42120   00503E  2A25               	incf	rebuildHashtable@hash^(0+1280),f,c
 42121   005040  0E1F               	movlw	31
 42122   005042  6425               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 42123   005044  EF26  F028         	goto	u4881
 42124   005048  EF28  F028         	goto	u4880
 42125   00504C                     u4881:
 42126   00504C  EF05  F028         	goto	l947
 42127   005050                     u4880:
 42128   005050                     
 42129                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<255; ta
      +                          bleIndex++) {
 42130   005050  6A26               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 42131   005052                     l7470:
 42132                           
 42133                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 42134   005052  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42135   005054  EC0C  F030         	call	_getEN
 42136   005058  500D               	movf	?_getEN^(0+1280),w,c
 42137   00505A  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 42138   00505C  B4D8               	btfsc	status,2,c
 42139   00505E  EF33  F028         	goto	u4891
 42140   005062  EF35  F028         	goto	u4890
 42141   005066                     u4891:
 42142   005066  EF78  F028         	goto	l7488
 42143   00506A                     u4890:
 42144   00506A                     
 42145                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 42146   00506A  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42147   00506C  ECDE  F025         	call	_getNN
 42148   005070  C50D  F51C         	movff	?_getNN,getHash@nn
 42149   005074  C50E  F51D         	movff	?_getNN+1,getHash@nn+1
 42150   005078  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42151   00507A  EC0C  F030         	call	_getEN
 42152   00507E  C50D  F51E         	movff	?_getEN,getHash@en
 42153   005082  C50E  F51F         	movff	?_getEN+1,getHash@en+1
 42154   005086  ECBB  F03D         	call	_getHash	;wreg free
 42155   00508A  6E25               	movwf	rebuildHashtable@hash^(0+1280),c
 42156   00508C                     
 42157                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 42158   00508C  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 42159   00508E                     l7480:
 42160                           
 42161                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 42162   00508E  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42163   005090  0D14               	mullw	20
 42164   005092  0EFC               	movlw	low _eventChains
 42165   005094  24F3               	addwf	243,w,c
 42166   005096  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42167   005098  0E08               	movlw	high _eventChains
 42168   00509A  20F4               	addwfc	prodh,w,c
 42169   00509C  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42170   00509E  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42171   0050A0  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42172   0050A2  6ED9               	movwf	fsr2l,c
 42173   0050A4  0E00               	movlw	0
 42174   0050A6  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42175   0050A8  6EDA               	movwf	fsr2h,c
 42176   0050AA  28DE               	incf	postinc2,w,c
 42177   0050AC  A4D8               	btfss	status,2,c
 42178   0050AE  EF5B  F028         	goto	u4901
 42179   0050B2  EF5D  F028         	goto	u4900
 42180   0050B6                     u4901:
 42181   0050B6  EF6F  F028         	goto	l7484
 42182   0050BA                     u4900:
 42183   0050BA                     
 42184                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 42185   0050BA  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42186   0050BC  0D14               	mullw	20
 42187   0050BE  0EFC               	movlw	low _eventChains
 42188   0050C0  24F3               	addwf	243,w,c
 42189   0050C2  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42190   0050C4  0E08               	movlw	high _eventChains
 42191   0050C6  20F4               	addwfc	prodh,w,c
 42192   0050C8  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42193   0050CA  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42194   0050CC  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42195   0050CE  6ED9               	movwf	fsr2l,c
 42196   0050D0  0E00               	movlw	0
 42197   0050D2  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42198   0050D4  6EDA               	movwf	fsr2h,c
 42199   0050D6  C526  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 42200                           
 42201                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 42202   0050DA  EF78  F028         	goto	l7488
 42203   0050DE                     l7484:
 42204                           
 42205                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 42206   0050DE  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 42207   0050E0  0E13               	movlw	19
 42208   0050E2  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 42209   0050E4  EF76  F028         	goto	u4911
 42210   0050E8  EF78  F028         	goto	u4910
 42211   0050EC                     u4911:
 42212   0050EC  EF47  F028         	goto	l7480
 42213   0050F0                     u4910:
 42214   0050F0                     l7488:
 42215                           
 42216                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 42217   0050F0  2A26               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 42218   0050F2  2826               	incf	rebuildHashtable@tableIndex^(0+1280),w,c
 42219   0050F4  A4D8               	btfss	status,2,c
 42220   0050F6  EF7F  F028         	goto	u4921
 42221   0050FA  EF81  F028         	goto	u4920
 42222   0050FE                     u4921:
 42223   0050FE  EF29  F028         	goto	l7470
 42224   005102                     u4920:
 42225   005102  0012               	return		;funcret
 42226   005104                     __end_of_rebuildHashtable:
 42227                           	callstack 0
 42228                           
 42229 ;; *************** function _getNN *****************
 42230 ;; Defined at:
 42231 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42232 ;; Parameters:    Size  Location     Type
 42233 ;;  tableIndex      1    wreg     unsigned char 
 42234 ;; Auto vars:     Size  Location     Type
 42235 ;;  tableIndex      1   26[COMRAM] unsigned char 
 42236 ;;  lo              2   23[COMRAM] unsigned short 
 42237 ;;  hi              2   21[COMRAM] unsigned short 
 42238 ;;  flags           1   25[COMRAM] unsigned char 
 42239 ;; Return value:  Size  Location     Type
 42240 ;;                  2   12[COMRAM] unsigned short 
 42241 ;; Registers used:
 42242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42243 ;; Tracked objects:
 42244 ;;		On entry : 0/0
 42245 ;;		On exit  : 0/0
 42246 ;;		Unchanged: 0/0
 42247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42249 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42250 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42251 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42252 ;;Total ram usage:       15 bytes
 42253 ;; Hardware stack levels used: 1
 42254 ;; Hardware stack levels required when called: 3
 42255 ;; This function calls:
 42256 ;;		_readNVM
 42257 ;; This function is called by:
 42258 ;;		_nerdCallback
 42259 ;;		_doNenrd
 42260 ;;		_reqevCallback
 42261 ;;		_findEvent
 42262 ;;		_rebuildHashtable
 42263 ;; This function uses a non-reentrant model
 42264 ;;
 42265                           
 42266                           	psect	text136
 42267   004BBC                     __ptext136:
 42268                           	callstack 0
 42269   004BBC                     _getNN:
 42270                           	callstack 120
 42271                           
 42272                           ;incstack = 0
 42273                           ;getNN@tableIndex stored from wreg
 42274   004BBC  6E1B               	movwf	getNN@tableIndex^(0+1280),c
 42275   004BBE                     
 42276                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 255) {
 42277   004BBE  281B               	incf	getNN@tableIndex^(0+1280),w,c
 42278   004BC0  A4D8               	btfss	status,2,c
 42279   004BC2  EFE5  F025         	goto	u4631
 42280   004BC6  EFE7  F025         	goto	u4630
 42281   004BCA                     u4631:
 42282   004BCA  EFED  F025         	goto	l7258
 42283   004BCE                     u4630:
 42284   004BCE                     
 42285                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 42286   004BCE  0E00               	movlw	0
 42287   004BD0  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 42288   004BD2  0E08               	movlw	8
 42289   004BD4  6E0D               	movwf	?_getNN^(0+1280),c
 42290   004BD6  EF6E  F026         	goto	l931
 42291   004BDA                     l7258:
 42292                           
 42293                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4);
 42294   004BDA  501B               	movf	getNN@tableIndex^(0+1280),w,c
 42295   004BDC  6E0F               	movwf	??_getNN^(0+1280),c
 42296   004BDE  6A10               	clrf	(??_getNN+1)^(0+1280),c
 42297   004BE0  0E01               	movlw	1
 42298   004BE2  020F               	mulwf	??_getNN^(0+1280),c
 42299   004BE4  C4F3 F511          	movff	prodl,??_getNN+2
 42300   004BE8  C4F4 F512          	movff	prodh,??_getNN+3
 42301   004BEC  0210               	mulwf	(??_getNN+1)^(0+1280),c
 42302   004BEE  50F3               	movf	prodl,w,c
 42303   004BF0  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 42304   004BF2  0E01               	movlw	1
 42305   004BF4  020F               	mulwf	??_getNN^(0+1280),c
 42306   004BF6  50F3               	movf	prodl,w,c
 42307   004BF8  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 42308   004BFA  C511  F513         	movff	??_getNN+2,??_getNN+4
 42309   004BFE  C512  F514         	movff	??_getNN+3,??_getNN+5
 42310   004C02  6A15               	clrf	(??_getNN+6)^(0+1280),c
 42311   004C04  0E04               	movlw	4
 42312   004C06  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 42313   004C08  6E07               	movwf	readNVM@index^(0+1280),c
 42314   004C0A  0E00               	movlw	0
 42315   004C0C  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 42316   004C0E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 42317   004C10  0E01               	movlw	1
 42318   004C12  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 42319   004C14  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 42320   004C16  0E01               	movlw	1
 42321   004C18  ECDB  F036         	call	_readNVM
 42322   004C1C  5007               	movf	?_readNVM^(0+1280),w,c
 42323   004C1E  6E1A               	movwf	getNN@flags^(0+1280),c
 42324   004C20                     
 42325                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 42326   004C20  A01A               	btfss	getNN@flags^(0+1280),0,c
 42327   004C22  EF15  F026         	goto	u4641
 42328   004C26  EF17  F026         	goto	u4640
 42329   004C2A                     u4641:
 42330   004C2A  EF1D  F026         	goto	l7264
 42331   004C2E                     u4640:
 42332   004C2E                     
 42333                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 42334   004C2E  C58D  F50D         	movff	_nn,?_getNN
 42335   004C32  C58E  F50E         	movff	_nn+1,?_getNN+1
 42336   004C36  EF6E  F026         	goto	l931
 42337   004C3A                     l7264:
 42338                           
 42339                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+1);
 42340   004C3A  501B               	movf	getNN@tableIndex^(0+1280),w,c
 42341   004C3C  6E0F               	movwf	??_getNN^(0+1280),c
 42342   004C3E  6A10               	clrf	(??_getNN+1)^(0+1280),c
 42343   004C40  0E01               	movlw	1
 42344   004C42  020F               	mulwf	??_getNN^(0+1280),c
 42345   004C44  C4F3 F511          	movff	prodl,??_getNN+2
 42346   004C48  C4F4 F512          	movff	prodh,??_getNN+3
 42347   004C4C  0210               	mulwf	(??_getNN+1)^(0+1280),c
 42348   004C4E  50F3               	movf	prodl,w,c
 42349   004C50  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 42350   004C52  0E01               	movlw	1
 42351   004C54  020F               	mulwf	??_getNN^(0+1280),c
 42352   004C56  50F3               	movf	prodl,w,c
 42353   004C58  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 42354   004C5A  C511  F513         	movff	??_getNN+2,??_getNN+4
 42355   004C5E  C512  F514         	movff	??_getNN+3,??_getNN+5
 42356   004C62  6A15               	clrf	(??_getNN+6)^(0+1280),c
 42357   004C64  0E01               	movlw	1
 42358   004C66  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 42359   004C68  6E07               	movwf	readNVM@index^(0+1280),c
 42360   004C6A  0E00               	movlw	0
 42361   004C6C  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 42362   004C6E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 42363   004C70  0E01               	movlw	1
 42364   004C72  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 42365   004C74  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 42366   004C76  0E01               	movlw	1
 42367   004C78  ECDB  F036         	call	_readNVM
 42368   004C7C  5007               	movf	?_readNVM^(0+1280),w,c
 42369   004C7E  6E18               	movwf	getNN@lo^(0+1280),c
 42370   004C80  6A19               	clrf	(getNN@lo+1)^(0+1280),c
 42371                           
 42372                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0);
 42373   004C82  501B               	movf	getNN@tableIndex^(0+1280),w,c
 42374   004C84  6E0F               	movwf	??_getNN^(0+1280),c
 42375   004C86  6A10               	clrf	(??_getNN+1)^(0+1280),c
 42376   004C88  0E01               	movlw	1
 42377   004C8A  020F               	mulwf	??_getNN^(0+1280),c
 42378   004C8C  C4F3 F511          	movff	prodl,??_getNN+2
 42379   004C90  C4F4 F512          	movff	prodh,??_getNN+3
 42380   004C94  0210               	mulwf	(??_getNN+1)^(0+1280),c
 42381   004C96  50F3               	movf	prodl,w,c
 42382   004C98  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 42383   004C9A  0E01               	movlw	1
 42384   004C9C  020F               	mulwf	??_getNN^(0+1280),c
 42385   004C9E  50F3               	movf	prodl,w,c
 42386   004CA0  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 42387   004CA2  C511  F513         	movff	??_getNN+2,??_getNN+4
 42388   004CA6  C512  F514         	movff	??_getNN+3,??_getNN+5
 42389   004CAA  6A15               	clrf	(??_getNN+6)^(0+1280),c
 42390   004CAC  0E00               	movlw	0
 42391   004CAE  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 42392   004CB0  6E07               	movwf	readNVM@index^(0+1280),c
 42393   004CB2  0E00               	movlw	0
 42394   004CB4  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 42395   004CB6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 42396   004CB8  0E01               	movlw	1
 42397   004CBA  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 42398   004CBC  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 42399   004CBE  0E01               	movlw	1
 42400   004CC0  ECDB  F036         	call	_readNVM
 42401   004CC4  5007               	movf	?_readNVM^(0+1280),w,c
 42402   004CC6  6E16               	movwf	getNN@hi^(0+1280),c
 42403   004CC8  6A17               	clrf	(getNN@hi+1)^(0+1280),c
 42404   004CCA                     
 42405                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 42406   004CCA  5016               	movf	getNN@hi^(0+1280),w,c
 42407   004CCC  6E10               	movwf	(??_getNN+1)^(0+1280),c
 42408   004CCE  6A0F               	clrf	??_getNN^(0+1280),c
 42409   004CD0  5018               	movf	getNN@lo^(0+1280),w,c
 42410   004CD2  100F               	iorwf	??_getNN^(0+1280),w,c
 42411   004CD4  6E0D               	movwf	?_getNN^(0+1280),c
 42412   004CD6  5019               	movf	(getNN@lo+1)^(0+1280),w,c
 42413   004CD8  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 42414   004CDA  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 42415   004CDC                     l931:
 42416   004CDC  0012               	return		;funcret
 42417   004CDE                     __end_of_getNN:
 42418                           	callstack 0
 42419                           
 42420 ;; *************** function _getHash *****************
 42421 ;; Defined at:
 42422 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42423 ;; Parameters:    Size  Location     Type
 42424 ;;  nn              2   27[COMRAM] unsigned short 
 42425 ;;  en              2   29[COMRAM] unsigned short 
 42426 ;; Auto vars:     Size  Location     Type
 42427 ;;  hash            1   32[COMRAM] unsigned char 
 42428 ;; Return value:  Size  Location     Type
 42429 ;;                  1    wreg      unsigned char 
 42430 ;; Registers used:
 42431 ;;		wreg, status,2, status,0, prodl, prodh
 42432 ;; Tracked objects:
 42433 ;;		On entry : 0/0
 42434 ;;		On exit  : 0/0
 42435 ;;		Unchanged: 0/0
 42436 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42440 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42441 ;;Total ram usage:        6 bytes
 42442 ;; Hardware stack levels used: 1
 42443 ;; Hardware stack levels required when called: 1
 42444 ;; This function calls:
 42445 ;;		Nothing
 42446 ;; This function is called by:
 42447 ;;		_findEvent
 42448 ;;		_rebuildHashtable
 42449 ;; This function uses a non-reentrant model
 42450 ;;
 42451                           
 42452                           	psect	text137
 42453   007B76                     __ptext137:
 42454                           	callstack 0
 42455   007B76                     _getHash:
 42456                           	callstack 122
 42457   007B76                     
 42458                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 42459   007B76  501D               	movf	(getHash@nn+1)^(0+1280),w,c
 42460   007B78  181C               	xorwf	getHash@nn^(0+1280),w,c
 42461   007B7A  6E21               	movwf	getHash@hash^(0+1280),c
 42462   007B7C                     
 42463                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 42464   007B7C  501F               	movf	(getHash@en+1)^(0+1280),w,c
 42465   007B7E  181E               	xorwf	getHash@en^(0+1280),w,c
 42466   007B80  6E20               	movwf	??_getHash^(0+1280),c
 42467   007B82  5021               	movf	getHash@hash^(0+1280),w,c
 42468   007B84  0D07               	mullw	7
 42469   007B86  50F3               	movf	243,w,c
 42470   007B88  2420               	addwf	??_getHash^(0+1280),w,c
 42471   007B8A  6E21               	movwf	getHash@hash^(0+1280),c
 42472   007B8C                     
 42473                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 42474   007B8C  0E1F               	movlw	31
 42475   007B8E  1621               	andwf	getHash@hash^(0+1280),f,c
 42476   007B90                     
 42477                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 42478   007B90  5021               	movf	getHash@hash^(0+1280),w,c
 42479   007B92  0012               	return		;funcret
 42480   007B94                     __end_of_getHash:
 42481                           	callstack 0
 42482                           
 42483 ;; *************** function _getEN *****************
 42484 ;; Defined at:
 42485 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42486 ;; Parameters:    Size  Location     Type
 42487 ;;  tableIndex      1    wreg     unsigned char 
 42488 ;; Auto vars:     Size  Location     Type
 42489 ;;  tableIndex      1   25[COMRAM] unsigned char 
 42490 ;;  lo              2   23[COMRAM] unsigned short 
 42491 ;;  hi              2   21[COMRAM] unsigned short 
 42492 ;; Return value:  Size  Location     Type
 42493 ;;                  2   12[COMRAM] unsigned short 
 42494 ;; Registers used:
 42495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42496 ;; Tracked objects:
 42497 ;;		On entry : 0/0
 42498 ;;		On exit  : 0/0
 42499 ;;		Unchanged: 0/0
 42500 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42502 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42503 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42504 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42505 ;;Total ram usage:       14 bytes
 42506 ;; Hardware stack levels used: 1
 42507 ;; Hardware stack levels required when called: 3
 42508 ;; This function calls:
 42509 ;;		_readNVM
 42510 ;; This function is called by:
 42511 ;;		_doNnevn
 42512 ;;		_nerdCallback
 42513 ;;		_doNenrd
 42514 ;;		_doRqevn
 42515 ;;		_reqevCallback
 42516 ;;		_addEvent
 42517 ;;		_findEvent
 42518 ;;		_rebuildHashtable
 42519 ;; This function uses a non-reentrant model
 42520 ;;
 42521                           
 42522                           	psect	text138
 42523   006018                     __ptext138:
 42524                           	callstack 0
 42525   006018                     _getEN:
 42526                           	callstack 120
 42527                           
 42528                           ;incstack = 0
 42529                           ;getEN@tableIndex stored from wreg
 42530   006018  6E1A               	movwf	getEN@tableIndex^(0+1280),c
 42531   00601A                     
 42532                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3);
 42533   00601A  501A               	movf	getEN@tableIndex^(0+1280),w,c
 42534   00601C  6E0F               	movwf	??_getEN^(0+1280),c
 42535   00601E  6A10               	clrf	(??_getEN+1)^(0+1280),c
 42536   006020  0E01               	movlw	1
 42537   006022  020F               	mulwf	??_getEN^(0+1280),c
 42538   006024  C4F3 F511          	movff	prodl,??_getEN+2
 42539   006028  C4F4 F512          	movff	prodh,??_getEN+3
 42540   00602C  0210               	mulwf	(??_getEN+1)^(0+1280),c
 42541   00602E  50F3               	movf	prodl,w,c
 42542   006030  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 42543   006032  0E01               	movlw	1
 42544   006034  020F               	mulwf	??_getEN^(0+1280),c
 42545   006036  50F3               	movf	prodl,w,c
 42546   006038  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 42547   00603A  C511  F513         	movff	??_getEN+2,??_getEN+4
 42548   00603E  C512  F514         	movff	??_getEN+3,??_getEN+5
 42549   006042  6A15               	clrf	(??_getEN+6)^(0+1280),c
 42550   006044  0E03               	movlw	3
 42551   006046  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 42552   006048  6E07               	movwf	readNVM@index^(0+1280),c
 42553   00604A  0E00               	movlw	0
 42554   00604C  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 42555   00604E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 42556   006050  0E01               	movlw	1
 42557   006052  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 42558   006054  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 42559   006056  0E01               	movlw	1
 42560   006058  ECDB  F036         	call	_readNVM
 42561   00605C  5007               	movf	?_readNVM^(0+1280),w,c
 42562   00605E  6E18               	movwf	getEN@lo^(0+1280),c
 42563   006060  6A19               	clrf	(getEN@lo+1)^(0+1280),c
 42564                           
 42565                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2);
 42566   006062  501A               	movf	getEN@tableIndex^(0+1280),w,c
 42567   006064  6E0F               	movwf	??_getEN^(0+1280),c
 42568   006066  6A10               	clrf	(??_getEN+1)^(0+1280),c
 42569   006068  0E01               	movlw	1
 42570   00606A  020F               	mulwf	??_getEN^(0+1280),c
 42571   00606C  C4F3 F511          	movff	prodl,??_getEN+2
 42572   006070  C4F4 F512          	movff	prodh,??_getEN+3
 42573   006074  0210               	mulwf	(??_getEN+1)^(0+1280),c
 42574   006076  50F3               	movf	prodl,w,c
 42575   006078  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 42576   00607A  0E01               	movlw	1
 42577   00607C  020F               	mulwf	??_getEN^(0+1280),c
 42578   00607E  50F3               	movf	prodl,w,c
 42579   006080  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 42580   006082  C511  F513         	movff	??_getEN+2,??_getEN+4
 42581   006086  C512  F514         	movff	??_getEN+3,??_getEN+5
 42582   00608A  6A15               	clrf	(??_getEN+6)^(0+1280),c
 42583   00608C  0E02               	movlw	2
 42584   00608E  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 42585   006090  6E07               	movwf	readNVM@index^(0+1280),c
 42586   006092  0E00               	movlw	0
 42587   006094  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 42588   006096  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 42589   006098  0E01               	movlw	1
 42590   00609A  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 42591   00609C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 42592   00609E  0E01               	movlw	1
 42593   0060A0  ECDB  F036         	call	_readNVM
 42594   0060A4  5007               	movf	?_readNVM^(0+1280),w,c
 42595   0060A6  6E16               	movwf	getEN@hi^(0+1280),c
 42596   0060A8  6A17               	clrf	(getEN@hi+1)^(0+1280),c
 42597   0060AA                     
 42598                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 42599   0060AA  5016               	movf	getEN@hi^(0+1280),w,c
 42600   0060AC  6E10               	movwf	(??_getEN+1)^(0+1280),c
 42601   0060AE  6A0F               	clrf	??_getEN^(0+1280),c
 42602   0060B0  5018               	movf	getEN@lo^(0+1280),w,c
 42603   0060B2  100F               	iorwf	??_getEN^(0+1280),w,c
 42604   0060B4  6E0D               	movwf	?_getEN^(0+1280),c
 42605   0060B6  5019               	movf	(getEN@lo+1)^(0+1280),w,c
 42606   0060B8  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 42607   0060BA  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 42608   0060BC  0012               	return		;funcret
 42609   0060BE                     __end_of_getEN:
 42610                           	callstack 0
 42611                           
 42612 ;; *************** function _readNVM *****************
 42613 ;; Defined at:
 42614 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 42615 ;; Parameters:    Size  Location     Type
 42616 ;;  type            1    wreg     enum E23276
 42617 ;;  index           3    6[COMRAM] unsigned um
 42618 ;; Auto vars:     Size  Location     Type
 42619 ;;  type            1   11[COMRAM] enum E23276
 42620 ;; Return value:  Size  Location     Type
 42621 ;;                  2    6[COMRAM] short 
 42622 ;; Registers used:
 42623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42624 ;; Tracked objects:
 42625 ;;		On entry : 0/0
 42626 ;;		On exit  : 0/0
 42627 ;;		Unchanged: 0/0
 42628 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42633 ;;Total ram usage:        6 bytes
 42634 ;; Hardware stack levels used: 1
 42635 ;; Hardware stack levels required when called: 2
 42636 ;; This function calls:
 42637 ;;		_EEPROM_Read
 42638 ;;		_FLASH_Read
 42639 ;; This function is called by:
 42640 ;;		_bootPowerUp
 42641 ;;		_canPowerUp
 42642 ;;		_getEv
 42643 ;;		_getEVs
 42644 ;;		_getNN
 42645 ;;		_getEN
 42646 ;;		_mnsPowerUp
 42647 ;;		_loadNvCache
 42648 ;;		_main
 42649 ;; This function uses a non-reentrant model
 42650 ;;
 42651                           
 42652                           	psect	text139
 42653   006DB6                     __ptext139:
 42654                           	callstack 0
 42655   006DB6                     _readNVM:
 42656                           	callstack 124
 42657                           
 42658                           ;incstack = 0
 42659                           ;readNVM@type stored from wreg
 42660   006DB6  6E0C               	movwf	readNVM@type^(0+1280),c
 42661   006DB8                     
 42662                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 42663   006DB8  EFFF  F036         	goto	l7148
 42664   006DBC                     l7134:
 42665                           
 42666                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 42667   006DBC  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 42668   006DC0  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 42669   006DC4  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 42670   006DC6  EC15  F03A         	call	_EEPROM_Read	;wreg free
 42671   006DCA  6E0A               	movwf	??_readNVM^(0+1280),c
 42672   006DCC  500A               	movf	??_readNVM^(0+1280),w,c
 42673   006DCE  6E07               	movwf	?_readNVM^(0+1280),c
 42674   006DD0  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 42675   006DD2  EF14  F037         	goto	l1502
 42676   006DD6                     l7138:
 42677                           
 42678                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 42679   006DD6  C507  F501         	movff	readNVM@index,FLASH_Read@address
 42680   006DDA  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 42681   006DDE  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 42682   006DE2  EC2A  F036         	call	_FLASH_Read	;wreg free
 42683   006DE6  6E0A               	movwf	??_readNVM^(0+1280),c
 42684   006DE8  500A               	movf	??_readNVM^(0+1280),w,c
 42685   006DEA  6E07               	movwf	?_readNVM^(0+1280),c
 42686   006DEC  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 42687   006DEE  EF14  F037         	goto	l1502
 42688   006DF2                     l7142:
 42689                           
 42690                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 42691   006DF2  0EFF               	movlw	255
 42692   006DF4  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 42693   006DF6  0E02               	movlw	2
 42694   006DF8  6E07               	movwf	?_readNVM^(0+1280),c
 42695   006DFA  EF14  F037         	goto	l1502
 42696   006DFE                     l7148:
 42697   006DFE  500C               	movf	readNVM@type^(0+1280),w,c
 42698   006E00  6E0A               	movwf	??_readNVM^(0+1280),c
 42699   006E02  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 42700                           
 42701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42702                           ; Switch size 1, requested type "simple"
 42703                           ; Number of cases is 1, Range of values is 0 to 0
 42704                           ; switch strategies available:
 42705                           ; Name         Instructions Cycles
 42706                           ; simple_byte            4     3 (average)
 42707                           ;	Chosen strategy is simple_byte
 42708   006E04  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 42709   006E06  0A00               	xorlw	0	; case 0
 42710   006E08  B4D8               	btfsc	status,2,c
 42711   006E0A  EF09  F037         	goto	l11536
 42712   006E0E  EFF9  F036         	goto	l7142
 42713   006E12                     l11536:
 42714                           
 42715                           ; Switch size 1, requested type "simple"
 42716                           ; Number of cases is 2, Range of values is 0 to 1
 42717                           ; switch strategies available:
 42718                           ; Name         Instructions Cycles
 42719                           ; simple_byte            7     4 (average)
 42720                           ;	Chosen strategy is simple_byte
 42721   006E12  500A               	movf	??_readNVM^(0+1280),w,c
 42722   006E14  0A00               	xorlw	0	; case 0
 42723   006E16  B4D8               	btfsc	status,2,c
 42724   006E18  EFDE  F036         	goto	l7134
 42725   006E1C  0A01               	xorlw	1	; case 1
 42726   006E1E  B4D8               	btfsc	status,2,c
 42727   006E20  EFEB  F036         	goto	l7138
 42728   006E24  EFF9  F036         	goto	l7142
 42729   006E28                     l1502:
 42730   006E28  0012               	return		;funcret
 42731   006E2A                     __end_of_readNVM:
 42732                           	callstack 0
 42733                           
 42734 ;; *************** function _FLASH_Read *****************
 42735 ;; Defined at:
 42736 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 42737 ;; Parameters:    Size  Location     Type
 42738 ;;  address         3    0[COMRAM] unsigned um
 42739 ;; Auto vars:     Size  Location     Type
 42740 ;;		None
 42741 ;; Return value:  Size  Location     Type
 42742 ;;                  1    wreg      unsigned char 
 42743 ;; Registers used:
 42744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42745 ;; Tracked objects:
 42746 ;;		On entry : 0/0
 42747 ;;		On exit  : 0/0
 42748 ;;		Unchanged: 0/0
 42749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42750 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42752 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42754 ;;Total ram usage:        6 bytes
 42755 ;; Hardware stack levels used: 1
 42756 ;; Hardware stack levels required when called: 1
 42757 ;; This function calls:
 42758 ;;		Nothing
 42759 ;; This function is called by:
 42760 ;;		_readNVM
 42761 ;; This function uses a non-reentrant model
 42762 ;;
 42763                           
 42764                           	psect	text140
 42765   006C54                     __ptext140:
 42766                           	callstack 0
 42767   006C54                     _FLASH_Read:
 42768                           	callstack 124
 42769   006C54                     
 42770                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 42771   006C54  0E00               	movlw	0
 42772   006C56  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 42773   006C58  6E04               	movwf	??_FLASH_Read^(0+1280),c
 42774   006C5A  0EFF               	movlw	255
 42775   006C5C  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 42776   006C5E  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 42777   006C60  0EFF               	movlw	255
 42778   006C62  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 42779   006C64  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 42780   006C66  0105               	movlb	5	; () banked
 42781   006C68  5180               	movf	_flashBlock& (0+255),w,b
 42782   006C6A  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 42783   006C6C  E10A               	bnz	u4441
 42784   006C6E  5181               	movf	(_flashBlock+1)& (0+255),w,b
 42785   006C70  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 42786   006C72  E107               	bnz	u4441
 42787   006C74  5182               	movf	(_flashBlock+2)& (0+255),w,b
 42788   006C76  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 42789   006C78  A4D8               	btfss	status,2,c
 42790   006C7A  EF41  F036         	goto	u4441
 42791   006C7E  EF43  F036         	goto	u4440
 42792   006C82                     u4441:
 42793   006C82  EF52  F036         	goto	l1443
 42794   006C86                     u4440:
 42795   006C86                     
 42796                           ; BSR set to: 5
 42797                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 42798   006C86  0EFF               	movlw	255
 42799   006C88  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 42800   006C8A  6E04               	movwf	??_FLASH_Read^(0+1280),c
 42801   006C8C  0E00               	movlw	0
 42802   006C8E  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 42803   006C90  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 42804   006C92  0E00               	movlw	0
 42805   006C94  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 42806   006C96  6ED9               	movwf	fsr2l,c
 42807   006C98  0E37               	movlw	55
 42808   006C9A  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 42809   006C9C  6EDA               	movwf	fsr2h,c
 42810   006C9E  50DF               	movf	indf2,w,c
 42811   006CA0  EF65  F036         	goto	l1444
 42812   006CA4                     l1443:
 42813                           
 42814                           ; BSR set to: 5
 42815                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 42816   006CA4  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 42817   006CA8                     
 42818                           ; BSR set to: 5
 42819                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 42820   006CA8  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 42821   006CAC  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 42822   006CB0  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 42823   006CB4  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 42824   006CB8  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 42825   006CBC  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 42826   006CBE  5004               	movf	??_FLASH_Read^(0+1280),w,c
 42827   006CC0  6EF7               	movwf	247,c	;volatile
 42828   006CC2                     
 42829                           ; BSR set to: 5
 42830                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 42831   006CC2  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 42832   006CC6  0008               	tblrd		*	;# 
 42833                           
 42834                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 42835   006CC8  50F5               	movf	245,w,c	;volatile
 42836   006CCA                     l1444:
 42837   006CCA  0012               	return		;funcret
 42838   006CCC                     __end_of_FLASH_Read:
 42839                           	callstack 0
 42840                           
 42841 ;; *************** function _EEPROM_Read *****************
 42842 ;; Defined at:
 42843 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 42844 ;; Parameters:    Size  Location     Type
 42845 ;;  index           3    0[COMRAM] unsigned um
 42846 ;; Auto vars:     Size  Location     Type
 42847 ;;		None
 42848 ;; Return value:  Size  Location     Type
 42849 ;;                  1    wreg      unsigned char 
 42850 ;; Registers used:
 42851 ;;		wreg, status,2
 42852 ;; Tracked objects:
 42853 ;;		On entry : 0/0
 42854 ;;		On exit  : 0/0
 42855 ;;		Unchanged: 0/0
 42856 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42857 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42861 ;;Total ram usage:        6 bytes
 42862 ;; Hardware stack levels used: 1
 42863 ;; Hardware stack levels required when called: 1
 42864 ;; This function calls:
 42865 ;;		Nothing
 42866 ;; This function is called by:
 42867 ;;		_EEPROM_Write
 42868 ;;		_readNVM
 42869 ;; This function uses a non-reentrant model
 42870 ;;
 42871                           
 42872                           	psect	text141
 42873   00742A                     __ptext141:
 42874                           	callstack 0
 42875   00742A                     _EEPROM_Read:
 42876                           	callstack 124
 42877   00742A                     l1421:
 42878                           
 42879                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 42880   00742A  0100               	movlb	0	; () banked
 42881   00742C  B140               	btfsc	64,0,b	;volatile
 42882   00742E  EF1B  F03A         	goto	u4421
 42883   007432  EF1D  F03A         	goto	u4420
 42884   007436                     u4421:
 42885   007436  EF15  F03A         	goto	l1421
 42886   00743A                     u4420:
 42887   00743A                     
 42888                           ; BSR set to: 0
 42889                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 42890   00743A  0E38               	movlw	56
 42891   00743C  6F45               	movwf	69,b	;volatile
 42892                           
 42893                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 42894   00743E  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 42895   007442  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 42896   007446  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 42897   00744A  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 42898   00744E  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 42899   007452  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 42900   007454  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 42901   007456  6F44               	movwf	68,b	;volatile
 42902   007458                     
 42903                           ; BSR set to: 0
 42904                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 42905   007458  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 42906                           
 42907                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 42908   00745C  0EF8               	movlw	-8
 42909   00745E  1741               	andwf	65,f,b	;volsfr
 42910   007460                     
 42911                           ; BSR set to: 0
 42912                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 42913   007460  8140               	bsf	64,0,b	;volatile
 42914   007462                     l1424:
 42915                           
 42916                           ; BSR set to: 0
 42917                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 42918   007462  B140               	btfsc	64,0,b	;volatile
 42919   007464  EF36  F03A         	goto	u4431
 42920   007468  EF38  F03A         	goto	u4430
 42921   00746C                     u4431:
 42922   00746C  EF31  F03A         	goto	l1424
 42923   007470                     u4430:
 42924   007470                     
 42925                           ; BSR set to: 0
 42926                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 42927   007470  0E07               	movlw	7
 42928   007472  1341               	iorwf	65,f,b	;volsfr
 42929                           
 42930                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 42931   007474  5146               	movf	70,w,b	;volatile
 42932   007476                     
 42933                           ; BSR set to: 0
 42934   007476  0012               	return		;funcret
 42935   007478                     __end_of_EEPROM_Read:
 42936                           	callstack 0
 42937                           
 42938 ;; *************** function _APP_testMode *****************
 42939 ;; Defined at:
 42940 ;;		line 138 in file "../main.c"
 42941 ;; Parameters:    Size  Location     Type
 42942 ;;		None
 42943 ;; Auto vars:     Size  Location     Type
 42944 ;;  i               1   16[COMRAM] unsigned char 
 42945 ;;  step            1   15[COMRAM] unsigned char 
 42946 ;;  c               1   14[COMRAM] unsigned char 
 42947 ;; Return value:  Size  Location     Type
 42948 ;;                  1    wreg      void 
 42949 ;; Registers used:
 42950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42951 ;; Tracked objects:
 42952 ;;		On entry : 0/0
 42953 ;;		On exit  : 0/0
 42954 ;;		Unchanged: 0/0
 42955 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42957 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42959 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42960 ;;Total ram usage:        7 bytes
 42961 ;; Hardware stack levels used: 1
 42962 ;; Hardware stack levels required when called: 2
 42963 ;; This function calls:
 42964 ;;		_initARGB
 42965 ;;		_tickGet
 42966 ;;		_updateLedRange
 42967 ;; This function is called by:
 42968 ;;		_checkPowerOnPb
 42969 ;; This function uses a non-reentrant model
 42970 ;;
 42971                           
 42972                           	psect	text142
 42973   00386A                     __ptext142:
 42974                           	callstack 0
 42975   00386A                     _APP_testMode:
 42976                           	callstack 123
 42977   00386A                     
 42978                           ;../main.c: 139:     uint8_t step;;../main.c: 140:     uint8_t i,c;;../main.c: 142:     
      +                          initARGB();
 42979   00386A  EC57  F020         	call	_initARGB	;wreg free
 42980   00386E                     
 42981                           ;../main.c: 143:     ANSELA = 0x00;
 42982   00386E  0104               	movlb	4	; () banked
 42983   003870  6B00               	clrf	0,b	;volatile
 42984   003872                     
 42985                           ; BSR set to: 4
 42986                           ;../main.c: 144:     ANSELB = 0x00;
 42987   003872  6B08               	clrf	8,b	;volatile
 42988   003874                     
 42989                           ; BSR set to: 4
 42990                           ;../main.c: 145:     ANSELC = 0x00;
 42991   003874  6B10               	clrf	16,b	;volatile
 42992   003876                     
 42993                           ; BSR set to: 4
 42994                           ;../main.c: 148:     (INTCON0bits.GIE = 1);
 42995   003876  8ED6               	bsf	214,7,c	;volatile
 42996   003878                     
 42997                           ; BSR set to: 4
 42998                           ;../main.c: 150:     testTime.val = tickGet();
 42999   003878  EC66  F036         	call	_tickGet	;wreg free
 43000   00387C  C501  F578         	movff	?_tickGet,_testTime
 43001   003880  C502  F579         	movff	?_tickGet+1,_testTime+1
 43002   003884  C503  F57A         	movff	?_tickGet+2,_testTime+2
 43003   003888  C504  F57B         	movff	?_tickGet+3,_testTime+3
 43004   00388C                     
 43005                           ;../main.c: 152:     step = 0;
 43006   00388C  6A10               	clrf	APP_testMode@step^(0+1280),c
 43007   00388E                     l9196:
 43008                           
 43009                           ;../main.c: 154:         if ((tickGet() - testTime.val) > (4 * 62500)) {
 43010   00388E  EC66  F036         	call	_tickGet	;wreg free
 43011   003892  0105               	movlb	5	; () banked
 43012   003894  5178               	movf	_testTime& (0+255),w,b
 43013   003896  5C01               	subwf	?_tickGet^(0+1280),w,c
 43014   003898  6E0B               	movwf	??_APP_testMode^(0+1280),c
 43015   00389A  5179               	movf	(_testTime+1)& (0+255),w,b
 43016   00389C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 43017   00389E  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 43018   0038A0  517A               	movf	(_testTime+2)& (0+255),w,b
 43019   0038A2  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 43020   0038A4  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 43021   0038A6  517B               	movf	(_testTime+3)& (0+255),w,b
 43022   0038A8  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 43023   0038AA  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 43024   0038AC  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 43025   0038AE  E10D               	bnz	u6690
 43026   0038B0  0E91               	movlw	145
 43027   0038B2  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 43028   0038B4  0ED0               	movlw	208
 43029   0038B6  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 43030   0038B8  0E03               	movlw	3
 43031   0038BA  580D               	subwfb	(??_APP_testMode+2)^(0+1280),w,c
 43032   0038BC  A0D8               	btfss	status,0,c
 43033   0038BE  EF63  F01C         	goto	u6691
 43034   0038C2  EF65  F01C         	goto	u6690
 43035   0038C6                     u6691:
 43036   0038C6  EF4A  F01D         	goto	l9246
 43037   0038CA                     u6690:
 43038   0038CA                     
 43039                           ; BSR set to: 5
 43040                           ;../main.c: 155:             testTime.val = tickGet();
 43041   0038CA  EC66  F036         	call	_tickGet	;wreg free
 43042   0038CE  C501  F578         	movff	?_tickGet,_testTime
 43043   0038D2  C502  F579         	movff	?_tickGet+1,_testTime+1
 43044   0038D6  C503  F57A         	movff	?_tickGet+2,_testTime+2
 43045   0038DA  C504  F57B         	movff	?_tickGet+3,_testTime+3
 43046   0038DE                     
 43047                           ;../main.c: 156:             step++;
 43048   0038DE  2A10               	incf	APP_testMode@step^(0+1280),f,c
 43049   0038E0                     
 43050                           ;../main.c: 157:             if (step >= 6) step = 0;
 43051   0038E0  0E05               	movlw	5
 43052   0038E2  6410               	cpfsgt	APP_testMode@step^(0+1280),c
 43053   0038E4  EF76  F01C         	goto	u6701
 43054   0038E8  EF78  F01C         	goto	u6700
 43055   0038EC                     u6701:
 43056   0038EC  EF2F  F01D         	goto	l9244
 43057   0038F0                     u6700:
 43058   0038F0  6A10               	clrf	APP_testMode@step^(0+1280),c
 43059   0038F2  EF2F  F01D         	goto	l9244
 43060   0038F6                     l9206:
 43061                           
 43062                           ;../main.c: 161:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x99));
 43063   0038F6  0EFE               	movlw	254
 43064   0038F8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43065   0038FA  0E99               	movlw	153
 43066   0038FC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43067   0038FE  0E00               	movlw	0
 43068   003900  EC13  F03B         	call	_updateLedRange
 43069                           
 43070                           ;../main.c: 162:                     break;
 43071   003904  EF4A  F01D         	goto	l9246
 43072   003908                     l9208:
 43073                           
 43074                           ;../main.c: 164:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xAA));
 43075   003908  0EFE               	movlw	254
 43076   00390A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43077   00390C  0EAA               	movlw	170
 43078   00390E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43079   003910  0E00               	movlw	0
 43080   003912  EC13  F03B         	call	_updateLedRange
 43081                           
 43082                           ;../main.c: 165:                     break;
 43083   003916  EF4A  F01D         	goto	l9246
 43084   00391A                     l9210:
 43085                           
 43086                           ;../main.c: 167:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xBB));
 43087   00391A  0EFE               	movlw	254
 43088   00391C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43089   00391E  0EBB               	movlw	187
 43090   003920  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43091   003922  0E00               	movlw	0
 43092   003924  EC13  F03B         	call	_updateLedRange
 43093                           
 43094                           ;../main.c: 168:                     break;
 43095   003928  EF4A  F01D         	goto	l9246
 43096   00392C                     l9212:
 43097                           
 43098                           ;../main.c: 170:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 43099   00392C  0EFE               	movlw	254
 43100   00392E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43101   003930  0E00               	movlw	0
 43102   003932  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43103   003934  0E00               	movlw	0
 43104   003936  EC13  F03B         	call	_updateLedRange
 43105   00393A                     
 43106                           ;../main.c: 171:                     for (i=0,c=1; i<255; i++) {
 43107   00393A  6A11               	clrf	APP_testMode@i^(0+1280),c
 43108   00393C  0E01               	movlw	1
 43109   00393E  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43110   003940                     l9222:
 43111                           
 43112                           ;../main.c: 172:                         ledPaletteIndexes[i].asByte = c;
 43113   003940  0E00               	movlw	low _ledPaletteIndexes
 43114   003942  2411               	addwf	APP_testMode@i^(0+1280),w,c
 43115   003944  6ED9               	movwf	fsr2l,c
 43116   003946  6ADA               	clrf	fsr2h,c
 43117   003948  0E07               	movlw	high _ledPaletteIndexes
 43118   00394A  22DA               	addwfc	fsr2h,f,c
 43119   00394C  C50F  F4DF         	movff	APP_testMode@c,indf2
 43120   003950                     
 43121                           ;../main.c: 173:                         c++;
 43122   003950  2A0F               	incf	APP_testMode@c^(0+1280),f,c
 43123   003952                     
 43124                           ;../main.c: 174:                         if (c >= 0x10) c=1;
 43125   003952  0E0F               	movlw	15
 43126   003954  640F               	cpfsgt	APP_testMode@c^(0+1280),c
 43127   003956  EFAF  F01C         	goto	u6711
 43128   00395A  EFB1  F01C         	goto	u6710
 43129   00395E                     u6711:
 43130   00395E  EFB3  F01C         	goto	l9230
 43131   003962                     u6710:
 43132   003962  0E01               	movlw	1
 43133   003964  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43134   003966                     l9230:
 43135                           
 43136                           ;../main.c: 175:                     }
 43137   003966  2A11               	incf	APP_testMode@i^(0+1280),f,c
 43138   003968  2811               	incf	APP_testMode@i^(0+1280),w,c
 43139   00396A  A4D8               	btfss	status,2,c
 43140   00396C  EFBA  F01C         	goto	u6721
 43141   003970  EFBC  F01C         	goto	u6720
 43142   003974                     u6721:
 43143   003974  EFA0  F01C         	goto	l9222
 43144   003978                     u6720:
 43145   003978  EF4A  F01D         	goto	l9246
 43146   00397C                     l9234:
 43147                           
 43148                           ;../main.c: 178:                     updateLedRange(0, 19, (PaletteIndex)((uint8_t)0x0F)
      +                          );
 43149   00397C  0E13               	movlw	19
 43150   00397E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43151   003980  0E0F               	movlw	15
 43152   003982  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43153   003984  0E00               	movlw	0
 43154   003986  EC13  F03B         	call	_updateLedRange
 43155                           
 43156                           ;../main.c: 179:                     updateLedRange(20, 39, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 43157   00398A  0E27               	movlw	39
 43158   00398C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43159   00398E  0EF0               	movlw	240
 43160   003990  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43161   003992  0E14               	movlw	20
 43162   003994  EC13  F03B         	call	_updateLedRange
 43163                           
 43164                           ;../main.c: 180:                     updateLedRange(40, 59, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 43165   003998  0E3B               	movlw	59
 43166   00399A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43167   00399C  0E0F               	movlw	15
 43168   00399E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43169   0039A0  0E28               	movlw	40
 43170   0039A2  EC13  F03B         	call	_updateLedRange
 43171                           
 43172                           ;../main.c: 181:                     updateLedRange(60, 79, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 43173   0039A6  0E4F               	movlw	79
 43174   0039A8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43175   0039AA  0EF0               	movlw	240
 43176   0039AC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43177   0039AE  0E3C               	movlw	60
 43178   0039B0  EC13  F03B         	call	_updateLedRange
 43179                           
 43180                           ;../main.c: 182:                     updateLedRange(80, 99, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 43181   0039B4  0E63               	movlw	99
 43182   0039B6  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43183   0039B8  0E0F               	movlw	15
 43184   0039BA  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43185   0039BC  0E50               	movlw	80
 43186   0039BE  EC13  F03B         	call	_updateLedRange
 43187                           
 43188                           ;../main.c: 183:                     updateLedRange(100, 119, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43189   0039C2  0E77               	movlw	119
 43190   0039C4  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43191   0039C6  0EF0               	movlw	240
 43192   0039C8  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43193   0039CA  0E64               	movlw	100
 43194   0039CC  EC13  F03B         	call	_updateLedRange
 43195                           
 43196                           ;../main.c: 184:                     updateLedRange(120, 139, (PaletteIndex)((uint8_t)0x
      +                          0F));
 43197   0039D0  0E8B               	movlw	139
 43198   0039D2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43199   0039D4  0E0F               	movlw	15
 43200   0039D6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43201   0039D8  0E78               	movlw	120
 43202   0039DA  EC13  F03B         	call	_updateLedRange
 43203                           
 43204                           ;../main.c: 185:                     updateLedRange(140, 159, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43205   0039DE  0E9F               	movlw	159
 43206   0039E0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43207   0039E2  0EF0               	movlw	240
 43208   0039E4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43209   0039E6  0E8C               	movlw	140
 43210   0039E8  EC13  F03B         	call	_updateLedRange
 43211                           
 43212                           ;../main.c: 186:                     updateLedRange(160, 179, (PaletteIndex)((uint8_t)0x
      +                          0F));
 43213   0039EC  0EB3               	movlw	179
 43214   0039EE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43215   0039F0  0E0F               	movlw	15
 43216   0039F2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43217   0039F4  0EA0               	movlw	160
 43218   0039F6  EC13  F03B         	call	_updateLedRange
 43219                           
 43220                           ;../main.c: 187:                     updateLedRange(180, 199, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43221   0039FA  0EC7               	movlw	199
 43222   0039FC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43223   0039FE  0EF0               	movlw	240
 43224   003A00  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43225   003A02  0EB4               	movlw	180
 43226   003A04  EC13  F03B         	call	_updateLedRange
 43227                           
 43228                           ;../main.c: 188:                     updateLedRange(200, 219, (PaletteIndex)((uint8_t)0x
      +                          0F));
 43229   003A08  0EDB               	movlw	219
 43230   003A0A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43231   003A0C  0E0F               	movlw	15
 43232   003A0E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43233   003A10  0EC8               	movlw	200
 43234   003A12  EC13  F03B         	call	_updateLedRange
 43235                           
 43236                           ;../main.c: 189:                     updateLedRange(220, 239, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43237   003A16  0EEF               	movlw	239
 43238   003A18  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43239   003A1A  0EF0               	movlw	240
 43240   003A1C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43241   003A1E  0EDC               	movlw	220
 43242   003A20  EC13  F03B         	call	_updateLedRange
 43243                           
 43244                           ;../main.c: 190:                     updateLedRange(240, 255 -1, (PaletteIndex)((uint8_t
      +                          )0x0F));
 43245   003A24  0EFE               	movlw	254
 43246   003A26  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43247   003A28  0E0F               	movlw	15
 43248   003A2A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43249   003A2C  0EF0               	movlw	240
 43250   003A2E  EC13  F03B         	call	_updateLedRange
 43251                           
 43252                           ;../main.c: 191:                     break;
 43253   003A32  EF4A  F01D         	goto	l9246
 43254   003A36                     l9236:
 43255                           
 43256                           ;../main.c: 193:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 43257   003A36  0EFE               	movlw	254
 43258   003A38  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43259   003A3A  0E00               	movlw	0
 43260   003A3C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43261   003A3E  0E00               	movlw	0
 43262   003A40  EC13  F03B         	call	_updateLedRange
 43263   003A44                     
 43264                           ;../main.c: 194:                     i=0;
 43265   003A44  6A11               	clrf	APP_testMode@i^(0+1280),c
 43266   003A46                     
 43267                           ;../main.c: 195:                     subtestTime.val = tickGet();
 43268   003A46  EC66  F036         	call	_tickGet	;wreg free
 43269   003A4A  C501  F574         	movff	?_tickGet,_subtestTime
 43270   003A4E  C502  F575         	movff	?_tickGet+1,_subtestTime+1
 43271   003A52  C503  F576         	movff	?_tickGet+2,_subtestTime+2
 43272   003A56  C504  F577         	movff	?_tickGet+3,_subtestTime+3
 43273                           
 43274                           ;../main.c: 196:                     break;
 43275   003A5A  EF4A  F01D         	goto	l9246
 43276   003A5E                     l9244:
 43277   003A5E  5010               	movf	APP_testMode@step^(0+1280),w,c
 43278                           
 43279                           ; Switch size 1, requested type "simple"
 43280                           ; Number of cases is 6, Range of values is 0 to 5
 43281                           ; switch strategies available:
 43282                           ; Name         Instructions Cycles
 43283                           ; simple_byte           19    10 (average)
 43284                           ;	Chosen strategy is simple_byte
 43285   003A60  0A00               	xorlw	0	; case 0
 43286   003A62  B4D8               	btfsc	status,2,c
 43287   003A64  EF7B  F01C         	goto	l9206
 43288   003A68  0A01               	xorlw	1	; case 1
 43289   003A6A  B4D8               	btfsc	status,2,c
 43290   003A6C  EF84  F01C         	goto	l9208
 43291   003A70  0A03               	xorlw	3	; case 2
 43292   003A72  B4D8               	btfsc	status,2,c
 43293   003A74  EF8D  F01C         	goto	l9210
 43294   003A78  0A01               	xorlw	1	; case 3
 43295   003A7A  B4D8               	btfsc	status,2,c
 43296   003A7C  EF96  F01C         	goto	l9212
 43297   003A80  0A07               	xorlw	7	; case 4
 43298   003A82  B4D8               	btfsc	status,2,c
 43299   003A84  EFBE  F01C         	goto	l9234
 43300   003A88  0A01               	xorlw	1	; case 5
 43301   003A8A  B4D8               	btfsc	status,2,c
 43302   003A8C  EF1B  F01D         	goto	l9236
 43303   003A90  EF4A  F01D         	goto	l9246
 43304   003A94                     l9246:
 43305                           
 43306                           ;../main.c: 199:         if (step == 5) {
 43307   003A94  0E05               	movlw	5
 43308   003A96  1810               	xorwf	APP_testMode@step^(0+1280),w,c
 43309   003A98  A4D8               	btfss	status,2,c
 43310   003A9A  EF51  F01D         	goto	u6731
 43311   003A9E  EF53  F01D         	goto	u6730
 43312   003AA2                     u6731:
 43313   003AA2  EF47  F01C         	goto	l9196
 43314   003AA6                     u6730:
 43315   003AA6                     
 43316                           ;../main.c: 200:             if ((tickGet() - subtestTime.val) > (62500/10)) {
 43317   003AA6  EC66  F036         	call	_tickGet	;wreg free
 43318   003AAA  0105               	movlb	5	; () banked
 43319   003AAC  5174               	movf	_subtestTime& (0+255),w,b
 43320   003AAE  5C01               	subwf	?_tickGet^(0+1280),w,c
 43321   003AB0  6E0B               	movwf	??_APP_testMode^(0+1280),c
 43322   003AB2  5175               	movf	(_subtestTime+1)& (0+255),w,b
 43323   003AB4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 43324   003AB6  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 43325   003AB8  5176               	movf	(_subtestTime+2)& (0+255),w,b
 43326   003ABA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 43327   003ABC  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 43328   003ABE  5177               	movf	(_subtestTime+3)& (0+255),w,b
 43329   003AC0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 43330   003AC2  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 43331   003AC4  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 43332   003AC6  100D               	iorwf	(??_APP_testMode+2)^(0+1280),w,c
 43333   003AC8  E10B               	bnz	u6740
 43334   003ACA  0E6B               	movlw	107
 43335   003ACC  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 43336   003ACE  0E18               	movlw	24
 43337   003AD0  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 43338   003AD2  A0D8               	btfss	status,0,c
 43339   003AD4  EF6E  F01D         	goto	u6741
 43340   003AD8  EF70  F01D         	goto	u6740
 43341   003ADC                     u6741:
 43342   003ADC  EF47  F01C         	goto	l9196
 43343   003AE0                     u6740:
 43344   003AE0                     
 43345                           ; BSR set to: 5
 43346                           ;../main.c: 201:                 subtestTime.val = tickGet();
 43347   003AE0  EC66  F036         	call	_tickGet	;wreg free
 43348   003AE4  C501  F574         	movff	?_tickGet,_subtestTime
 43349   003AE8  C502  F575         	movff	?_tickGet+1,_subtestTime+1
 43350   003AEC  C503  F576         	movff	?_tickGet+2,_subtestTime+2
 43351   003AF0  C504  F577         	movff	?_tickGet+3,_subtestTime+3
 43352   003AF4                     
 43353                           ;../main.c: 202:                 updateLedRange(i,i, (PaletteIndex)((uint8_t)0xFF));
 43354   003AF4  C511  F501         	movff	APP_testMode@i,updateLedRange@end_ledno
 43355   003AF8  0EFF               	movlw	255
 43356   003AFA  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43357   003AFC  5011               	movf	APP_testMode@i^(0+1280),w,c
 43358   003AFE  EC13  F03B         	call	_updateLedRange
 43359   003B02                     
 43360                           ;../main.c: 203:                 i++;
 43361   003B02  2A11               	incf	APP_testMode@i^(0+1280),f,c
 43362   003B04  EF47  F01C         	goto	l9196
 43363   003B08  0012               	return		;funcret
 43364   003B0A                     __end_of_APP_testMode:
 43365                           	callstack 0
 43366                           
 43367 ;; *************** function _updateLedRange *****************
 43368 ;; Defined at:
 43369 ;;		line 270 in file "../canargb_leds.c"
 43370 ;; Parameters:    Size  Location     Type
 43371 ;;  start_ledno     1    wreg     unsigned char 
 43372 ;;  end_ledno       1    0[COMRAM] unsigned char 
 43373 ;;  colourIndexP    1    1[COMRAM] struct PaletteIndex
 43374 ;; Auto vars:     Size  Location     Type
 43375 ;;  start_ledno     1    2[COMRAM] unsigned char 
 43376 ;;  ledno           1    3[COMRAM] unsigned char 
 43377 ;; Return value:  Size  Location     Type
 43378 ;;                  1    wreg      void 
 43379 ;; Registers used:
 43380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43381 ;; Tracked objects:
 43382 ;;		On entry : 0/0
 43383 ;;		On exit  : 0/0
 43384 ;;		Unchanged: 0/0
 43385 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43390 ;;Total ram usage:        4 bytes
 43391 ;; Hardware stack levels used: 1
 43392 ;; Hardware stack levels required when called: 1
 43393 ;; This function calls:
 43394 ;;		Nothing
 43395 ;; This function is called by:
 43396 ;;		_APP_testMode
 43397 ;;		_setup
 43398 ;;		_APP_processConsumedEvent
 43399 ;; This function uses a non-reentrant model
 43400 ;;
 43401                           
 43402                           	psect	text143
 43403   007626                     __ptext143:
 43404                           	callstack 0
 43405   007626                     _updateLedRange:
 43406                           	callstack 124
 43407                           
 43408                           ;incstack = 0
 43409                           ;updateLedRange@start_ledno stored from wreg
 43410   007626  6E03               	movwf	updateLedRange@start_ledno^(0+1280),c
 43411   007628                     
 43412                           ;../canargb_leds.c: 271:     uint8_t ledno;;../canargb_leds.c: 272:     if (end_ledno >=
      +                           255) end_ledno = 255 -1;
 43413   007628  2801               	incf	updateLedRange@end_ledno^(0+1280),w,c
 43414   00762A  A4D8               	btfss	status,2,c
 43415   00762C  EF1A  F03B         	goto	u5411
 43416   007630  EF1C  F03B         	goto	u5410
 43417   007634                     u5411:
 43418   007634  EF1E  F03B         	goto	l7920
 43419   007638                     u5410:
 43420   007638  0EFE               	movlw	254
 43421   00763A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43422   00763C                     l7920:
 43423                           
 43424                           ;../canargb_leds.c: 274:     for(ledno=start_ledno; ledno<=end_ledno; ledno++) {
 43425   00763C  C503  F504         	movff	updateLedRange@start_ledno,updateLedRange@ledno
 43426   007640  EF2B  F03B         	goto	l7926
 43427   007644                     l7922:
 43428                           
 43429                           ;../canargb_leds.c: 275:         ledPaletteIndexes[ledno] = colourIndexPair;
 43430   007644  0E00               	movlw	low _ledPaletteIndexes
 43431   007646  2404               	addwf	updateLedRange@ledno^(0+1280),w,c
 43432   007648  6ED9               	movwf	fsr2l,c
 43433   00764A  6ADA               	clrf	fsr2h,c
 43434   00764C  0E07               	movlw	high _ledPaletteIndexes
 43435   00764E  22DA               	addwfc	fsr2h,f,c
 43436   007650  C502  F4DF         	movff	updateLedRange@colourIndexPair,indf2
 43437   007654                     
 43438                           ;../canargb_leds.c: 276:     }
 43439   007654  2A04               	incf	updateLedRange@ledno^(0+1280),f,c
 43440   007656                     l7926:
 43441   007656  5004               	movf	updateLedRange@ledno^(0+1280),w,c
 43442   007658  5C01               	subwf	updateLedRange@end_ledno^(0+1280),w,c
 43443   00765A  B0D8               	btfsc	status,0,c
 43444   00765C  EF32  F03B         	goto	u5421
 43445   007660  EF34  F03B         	goto	u5420
 43446   007664                     u5421:
 43447   007664  EF22  F03B         	goto	l7922
 43448   007668                     u5420:
 43449   007668  0012               	return		;funcret
 43450   00766A                     __end_of_updateLedRange:
 43451                           	callstack 0
 43452                           
 43453 ;; *************** function _tickGet *****************
 43454 ;; Defined at:
 43455 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 43456 ;; Parameters:    Size  Location     Type
 43457 ;;		None
 43458 ;; Auto vars:     Size  Location     Type
 43459 ;;  currentTime     4    6[COMRAM] struct _TickValue
 43460 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 43461 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 43462 ;; Return value:  Size  Location     Type
 43463 ;;                  4    0[COMRAM] unsigned long 
 43464 ;; Registers used:
 43465 ;;		wreg, status,2, status,0
 43466 ;; Tracked objects:
 43467 ;;		On entry : 0/0
 43468 ;;		On exit  : 0/0
 43469 ;;		Unchanged: 0/0
 43470 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43472 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43474 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43475 ;;Total ram usage:       10 bytes
 43476 ;; Hardware stack levels used: 1
 43477 ;; Hardware stack levels required when called: 1
 43478 ;; This function calls:
 43479 ;;		Nothing
 43480 ;; This function is called by:
 43481 ;;		_APP_testMode
 43482 ;;		_setup
 43483 ;;		_loop
 43484 ;;		_canPowerUp
 43485 ;;		_startEnumeration
 43486 ;;		_handleSelfEnumeration
 43487 ;;		_processEnumeration
 43488 ;;		_mnsPowerUp
 43489 ;;		_mnsPoll
 43490 ;;		_leds_powerUp
 43491 ;;		_leds_poll
 43492 ;;		_pbDownTimer
 43493 ;;		_pbUpTimer
 43494 ;;		_poll
 43495 ;; This function uses a non-reentrant model
 43496 ;;
 43497                           
 43498                           	psect	text144
 43499   006CCC                     __ptext144:
 43500                           	callstack 0
 43501   006CCC                     _tickGet:
 43502                           	callstack 124
 43503   006CCC                     
 43504                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 43505   006CCC  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 43506                           
 43507                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 43508   006CCE  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 43509                           
 43510                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 43511   006CD0  9EA1               	bcf	1185,7,c	;volatile
 43512   006CD2                     l7206:
 43513                           
 43514                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 43515   006CD2  0E00               	movlw	0
 43516   006CD4  BEB1               	btfsc	1201,7,c	;volatile
 43517   006CD6  0E01               	movlw	1
 43518   006CD8  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 43519   006CDA                     
 43520                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 43521   006CDA  C318 F507          	movff	792,tickGet@currentTime	;volatile
 43522   006CDE                     
 43523                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 43524   006CDE  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 43525                           
 43526                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 43527   006CE2  0E00               	movlw	0
 43528   006CE4  BEB1               	btfsc	1201,7,c	;volatile
 43529   006CE6  0E01               	movlw	1
 43530   006CE8  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 43531   006CEA                     
 43532                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 43533   006CEA  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 43534   006CEC  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 43535   006CEE  A4D8               	btfss	status,2,c
 43536   006CF0  EF7C  F036         	goto	u4601
 43537   006CF4  EF7E  F036         	goto	u4600
 43538   006CF8                     u4601:
 43539   006CF8  EF69  F036         	goto	l7206
 43540   006CFC                     u4600:
 43541   006CFC                     
 43542                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 43543   006CFC  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 43544   006CFE  B4D8               	btfsc	status,2,c
 43545   006D00  EF84  F036         	goto	u4611
 43546   006D04  EF86  F036         	goto	u4610
 43547   006D08                     u4611:
 43548   006D08  EF92  F036         	goto	l7224
 43549   006D0C                     u4610:
 43550   006D0C                     
 43551                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 43552   006D0C  9EB1               	bcf	1201,7,c	;volatile
 43553   006D0E                     
 43554                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 43555   006D0E  0105               	movlb	5	; () banked
 43556   006D10  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 43557   006D12                     
 43558                           ; BSR set to: 5
 43559                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 43560   006D12  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 43561   006D14  A4D8               	btfss	status,2,c
 43562   006D16  EF8F  F036         	goto	u4621
 43563   006D1A  EF91  F036         	goto	u4620
 43564   006D1E                     u4621:
 43565   006D1E  EF92  F036         	goto	l7224
 43566   006D22                     u4620:
 43567   006D22                     
 43568                           ; BSR set to: 5
 43569                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 43570   006D22  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 43571   006D24                     l7224:
 43572                           
 43573                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 43574   006D24  0105               	movlb	5	; () banked
 43575   006D26  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 43576   006D28  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 43577   006D2A                     
 43578                           ; BSR set to: 5
 43579                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 43580   006D2A  5199               	movf	_timerExtension2& (0+255),w,b	;volatile
 43581   006D2C  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 43582   006D2E                     
 43583                           ; BSR set to: 5
 43584                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 43585   006D2E  8EA1               	bsf	1185,7,c	;volatile
 43586   006D30                     
 43587                           ; BSR set to: 5
 43588                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 43589   006D30  C507  F501         	movff	tickGet@currentTime,?_tickGet
 43590   006D34  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 43591   006D38  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 43592   006D3C  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 43593   006D40                     
 43594                           ; BSR set to: 5
 43595   006D40  0012               	return		;funcret
 43596   006D42                     __end_of_tickGet:
 43597                           	callstack 0
 43598                           
 43599 ;; *************** function _initARGB *****************
 43600 ;; Defined at:
 43601 ;;		line 59 in file "../canargb_leds.c"
 43602 ;; Parameters:    Size  Location     Type
 43603 ;;		None
 43604 ;; Auto vars:     Size  Location     Type
 43605 ;;  ledno           1    0[COMRAM] unsigned char 
 43606 ;; Return value:  Size  Location     Type
 43607 ;;                  1    wreg      void 
 43608 ;; Registers used:
 43609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 43610 ;; Tracked objects:
 43611 ;;		On entry : 0/0
 43612 ;;		On exit  : 0/0
 43613 ;;		Unchanged: 0/0
 43614 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43619 ;;Total ram usage:        1 bytes
 43620 ;; Hardware stack levels used: 1
 43621 ;; Hardware stack levels required when called: 1
 43622 ;; This function calls:
 43623 ;;		Nothing
 43624 ;; This function is called by:
 43625 ;;		_APP_testMode
 43626 ;;		_setup
 43627 ;; This function uses a non-reentrant model
 43628 ;;
 43629                           
 43630                           	psect	text145
 43631   0040AE                     __ptext145:
 43632                           	callstack 0
 43633   0040AE                     _initARGB:
 43634                           	callstack 124
 43635   0040AE                     
 43636                           ;../canargb_leds.c: 60:     uint8_t ledno;;../canargb_leds.c: 62:     flashState = 0;
 43637   0040AE  0105               	movlb	5	; () banked
 43638   0040B0  6B92               	clrf	_flashState& (0+255),b
 43639                           
 43640                           ;../canargb_leds.c: 63:     refreshRequired = 0;
 43641   0040B2  6B91               	clrf	_refreshRequired& (0+255),b
 43642                           
 43643                           ;../canargb_leds.c: 65:     for (ledno=0; ledno <255; ledno++) {
 43644   0040B4  6A01               	clrf	initARGB@ledno^(0+1280),c
 43645   0040B6                     l8330:
 43646                           
 43647                           ;../canargb_leds.c: 66:         leds[ledno].r = 0;
 43648   0040B6  5001               	movf	initARGB@ledno^(0+1280),w,c
 43649   0040B8  0D03               	mullw	3
 43650   0040BA  0E7C               	movlw	low _leds
 43651   0040BC  24F3               	addwf	243,w,c
 43652   0040BE  6ED9               	movwf	fsr2l,c
 43653   0040C0  0E0B               	movlw	high _leds
 43654   0040C2  20F4               	addwfc	prodh,w,c
 43655   0040C4  6EDA               	movwf	fsr2h,c
 43656   0040C6  6ADF               	clrf	indf2,c
 43657                           
 43658                           ;../canargb_leds.c: 67:         leds[ledno].g = 0;
 43659   0040C8  5001               	movf	initARGB@ledno^(0+1280),w,c
 43660   0040CA  0D03               	mullw	3
 43661   0040CC  0E7D               	movlw	low (_leds+1)
 43662   0040CE  24F3               	addwf	243,w,c
 43663   0040D0  6ED9               	movwf	fsr2l,c
 43664   0040D2  0E0B               	movlw	high (_leds+1)
 43665   0040D4  20F4               	addwfc	prodh,w,c
 43666   0040D6  6EDA               	movwf	fsr2h,c
 43667   0040D8  6ADF               	clrf	indf2,c
 43668                           
 43669                           ;../canargb_leds.c: 68:         leds[ledno].b = 0;
 43670   0040DA  5001               	movf	initARGB@ledno^(0+1280),w,c
 43671   0040DC  0D03               	mullw	3
 43672   0040DE  0E7E               	movlw	low (_leds+2)
 43673   0040E0  24F3               	addwf	243,w,c
 43674   0040E2  6ED9               	movwf	fsr2l,c
 43675   0040E4  0E0B               	movlw	high (_leds+2)
 43676   0040E6  20F4               	addwfc	prodh,w,c
 43677   0040E8  6EDA               	movwf	fsr2h,c
 43678   0040EA  6ADF               	clrf	indf2,c
 43679   0040EC                     
 43680                           ;../canargb_leds.c: 69:         ledPaletteIndexes[ledno].asNibbles.flashOnPaletteIndex =
      +                           0;
 43681   0040EC  0E00               	movlw	low _ledPaletteIndexes
 43682   0040EE  2401               	addwf	initARGB@ledno^(0+1280),w,c
 43683   0040F0  6ED9               	movwf	fsr2l,c
 43684   0040F2  6ADA               	clrf	fsr2h,c
 43685   0040F4  0E07               	movlw	high _ledPaletteIndexes
 43686   0040F6  22DA               	addwfc	fsr2h,f,c
 43687   0040F8  0EF0               	movlw	-16
 43688   0040FA  16DF               	andwf	223,f,c
 43689   0040FC                     
 43690                           ;../canargb_leds.c: 70:         ledPaletteIndexes[ledno].asNibbles.flashOffPaletteIndex 
      +                          = 0;
 43691   0040FC  0E00               	movlw	low _ledPaletteIndexes
 43692   0040FE  2401               	addwf	initARGB@ledno^(0+1280),w,c
 43693   004100  6ED9               	movwf	fsr2l,c
 43694   004102  6ADA               	clrf	fsr2h,c
 43695   004104  0E07               	movlw	high _ledPaletteIndexes
 43696   004106  22DA               	addwfc	fsr2h,f,c
 43697   004108  0E0F               	movlw	-241
 43698   00410A  16DF               	andwf	223,f,c
 43699   00410C                     
 43700                           ;../canargb_leds.c: 71:     }
 43701   00410C  2A01               	incf	initARGB@ledno^(0+1280),f,c
 43702   00410E  2801               	incf	initARGB@ledno^(0+1280),w,c
 43703   004110  A4D8               	btfss	status,2,c
 43704   004112  EF8D  F020         	goto	u5741
 43705   004116  EF8F  F020         	goto	u5740
 43706   00411A                     u5741:
 43707   00411A  EF5B  F020         	goto	l8330
 43708   00411E                     u5740:
 43709   00411E                     
 43710                           ;../canargb_leds.c: 106:     TRISC = 0;
 43711   00411E  6AC8               	clrf	200,c	;volatile
 43712   004120                     
 43713                           ;../canargb_leds.c: 107:     RC0PPS = 0x43;
 43714   004120  0E43               	movlw	67
 43715   004122  0102               	movlb	2	; () banked
 43716   004124  6F11               	movwf	17,b	;volatile
 43717                           
 43718                           ;../canargb_leds.c: 108:     RC1PPS = 0x32;
 43719   004126  0E32               	movlw	50
 43720   004128  6F12               	movwf	18,b	;volatile
 43721                           
 43722                           ;../canargb_leds.c: 109:     RC2PPS = 0x31;
 43723   00412A  0E31               	movlw	49
 43724   00412C  6F13               	movwf	19,b	;volatile
 43725                           
 43726                           ;../canargb_leds.c: 110:     RC3PPS = 0x01;
 43727   00412E  0E01               	movlw	1
 43728   004130  6F14               	movwf	20,b	;volatile
 43729                           
 43730                           ;../canargb_leds.c: 111:     RC4PPS = 0x02;
 43731   004132  0E02               	movlw	2
 43732   004134  6F15               	movwf	21,b	;volatile
 43733                           
 43734                           ;../canargb_leds.c: 112:     RC5PPS = 0x04;
 43735   004136  0E04               	movlw	4
 43736   004138  6F16               	movwf	22,b	;volatile
 43737   00413A                     
 43738                           ; BSR set to: 2
 43739                           ;../canargb_leds.c: 113:     RC6PPS = 0x00;
 43740   00413A  6B17               	clrf	23,b	;volatile
 43741   00413C                     
 43742                           ; BSR set to: 2
 43743                           ;../canargb_leds.c: 116:     {;../canargb_leds.c: 117:         SPI1CON0bits.LSBF=0;
 43744   00413C  0100               	movlb	0	; () banked
 43745   00413E  9584               	bcf	132,2,b	;volatile
 43746   004140                     
 43747                           ; BSR set to: 0
 43748                           ;../canargb_leds.c: 118:         SPI1CON0bits.BMODE=1;
 43749   004140  8184               	bsf	132,0,b	;volatile
 43750   004142                     
 43751                           ; BSR set to: 0
 43752                           ;../canargb_leds.c: 119:         SPI1CON0bits.MST=1;
 43753   004142  8384               	bsf	132,1,b	;volatile
 43754                           
 43755                           ;../canargb_leds.c: 121:         SPI1TWIDTHbits.TWIDTH=0;
 43756   004144  0EF8               	movlw	-8
 43757   004146  1788               	andwf	136,f,b	;volatile
 43758                           
 43759                           ;../canargb_leds.c: 122:         SPI1TCNT=0;
 43760   004148  0E00               	movlw	0
 43761   00414A  6F83               	movwf	131,b	;volatile
 43762   00414C  0E00               	movlw	0
 43763   00414E  6F82               	movwf	130,b	;volatile
 43764   004150                     
 43765                           ; BSR set to: 0
 43766                           ;../canargb_leds.c: 124:         SPI1CON1bits.SMP=0;
 43767   004150  9F85               	bcf	133,7,b	;volatile
 43768   004152                     
 43769                           ; BSR set to: 0
 43770                           ;../canargb_leds.c: 125:         SPI1CON1bits.CKE=1;
 43771   004152  8D85               	bsf	133,6,b	;volatile
 43772   004154                     
 43773                           ; BSR set to: 0
 43774                           ;../canargb_leds.c: 126:         SPI1CON1bits.CKP=0;
 43775   004154  9B85               	bcf	133,5,b	;volatile
 43776   004156                     
 43777                           ; BSR set to: 0
 43778                           ;../canargb_leds.c: 128:         SPI1CON2bits.SSET=0;
 43779   004156  9586               	bcf	134,2,b	;volatile
 43780   004158                     
 43781                           ; BSR set to: 0
 43782                           ;../canargb_leds.c: 129:         SPI1CON1bits.SSP=1;
 43783   004158  8585               	bsf	133,2,b	;volatile
 43784   00415A                     
 43785                           ; BSR set to: 0
 43786                           ;../canargb_leds.c: 130:         SPI1CON2bits.TXR=1;
 43787   00415A  8386               	bsf	134,1,b	;volatile
 43788   00415C                     
 43789                           ; BSR set to: 0
 43790                           ;../canargb_leds.c: 131:         SPI1CON2bits.RXR=0;
 43791   00415C  9186               	bcf	134,0,b	;volatile
 43792   00415E                     
 43793                           ; BSR set to: 0
 43794                           ;../canargb_leds.c: 133:         SPI1CLKbits.CLKSEL=0b00000;
 43795   00415E  6B8C               	clrf	140,b	;volatile
 43796                           
 43797                           ;../canargb_leds.c: 137:         SPI1BAUDbits.BAUD = 39;
 43798   004160  0E27               	movlw	39
 43799   004162  6F89               	movwf	137,b	;volatile
 43800   004164                     
 43801                           ; BSR set to: 0
 43802                           ;../canargb_leds.c: 139:         SPI1INTF=0;
 43803   004164  6B8A               	clrf	138,b	;volatile
 43804   004166                     
 43805                           ; BSR set to: 0
 43806                           ;../canargb_leds.c: 140:         SPI1CON0bits.EN=1;
 43807   004166  8F84               	bsf	132,7,b	;volatile
 43808   004168                     
 43809                           ; BSR set to: 0
 43810                           ;../canargb_leds.c: 141:     };../canargb_leds.c: 144:     {;../canargb_leds.c: 145:    
      +                               CLCSELECT = 0;
 43811   004168  6BD5               	clrf	213,b	;volatile
 43812                           
 43813                           ;../canargb_leds.c: 146:         CLCnCON = 0x82;
 43814   00416A  0E82               	movlw	130
 43815   00416C  6FD6               	movwf	214,b	;volatile
 43816                           
 43817                           ;../canargb_leds.c: 147:         CLCnPOL = 0x0E;
 43818   00416E  0E0E               	movlw	14
 43819   004170  6FD7               	movwf	215,b	;volatile
 43820                           
 43821                           ;../canargb_leds.c: 148:         CLCnSEL0 = 0x41;
 43822   004172  0E41               	movlw	65
 43823   004174  6FD8               	movwf	216,b	;volatile
 43824                           
 43825                           ;../canargb_leds.c: 149:         CLCnSEL1 = 0x41;
 43826   004176  0E41               	movlw	65
 43827   004178  6FD9               	movwf	217,b	;volatile
 43828                           
 43829                           ;../canargb_leds.c: 150:         CLCnSEL2 = 0x41;
 43830   00417A  0E41               	movlw	65
 43831   00417C  6FDA               	movwf	218,b	;volatile
 43832                           
 43833                           ;../canargb_leds.c: 151:         CLCnSEL3 = 0x41;
 43834   00417E  0E41               	movlw	65
 43835   004180  6FDB               	movwf	219,b	;volatile
 43836                           
 43837                           ;../canargb_leds.c: 152:         CLCnGLS0 = 1;
 43838   004182  0E01               	movlw	1
 43839   004184  6FDC               	movwf	220,b	;volatile
 43840   004186                     
 43841                           ; BSR set to: 0
 43842                           ;../canargb_leds.c: 153:         CLCnGLS1 = 0;
 43843   004186  6BDD               	clrf	221,b	;volatile
 43844   004188                     
 43845                           ; BSR set to: 0
 43846                           ;../canargb_leds.c: 154:         CLCnGLS2 = 0;
 43847   004188  6BDE               	clrf	222,b	;volatile
 43848   00418A                     
 43849                           ; BSR set to: 0
 43850                           ;../canargb_leds.c: 155:         CLCnGLS3 = 0;
 43851   00418A  6BDF               	clrf	223,b	;volatile
 43852   00418C                     
 43853                           ; BSR set to: 0
 43854                           ;../canargb_leds.c: 156:     };../canargb_leds.c: 159:     {;../canargb_leds.c: 160:    
      +                               T2CON = 0x0;
 43855   00418C  0103               	movlb	3	; () banked
 43856   00418E  6B24               	clrf	36,b	;volatile
 43857                           
 43858                           ;../canargb_leds.c: 161:         T2CLKCON = 0x02;
 43859   004190  0E02               	movlw	2
 43860   004192  6F26               	movwf	38,b	;volatile
 43861                           
 43862                           ;../canargb_leds.c: 162:         T2HLT = 0x11;
 43863   004194  0E11               	movlw	17
 43864   004196  6F25               	movwf	37,b	;volatile
 43865                           
 43866                           ;../canargb_leds.c: 163:         T2RST = 0x12;
 43867   004198  0E12               	movlw	18
 43868   00419A  6F27               	movwf	39,b	;volatile
 43869                           
 43870                           ;../canargb_leds.c: 167:         T2PR = 51;
 43871   00419C  0E33               	movlw	51
 43872   00419E  6F23               	movwf	35,b	;volatile
 43873   0041A0                     
 43874                           ; BSR set to: 3
 43875                           ;../canargb_leds.c: 169:     };../canargb_leds.c: 172:     {;../canargb_leds.c: 173:    
      +                               T4CON = 0x0;
 43876   0041A0  6B30               	clrf	48,b	;volatile
 43877                           
 43878                           ;../canargb_leds.c: 174:         T4CLKCON = 0x02;
 43879   0041A2  0E02               	movlw	2
 43880   0041A4  6F32               	movwf	50,b	;volatile
 43881                           
 43882                           ;../canargb_leds.c: 175:         T4HLT = 0x11;
 43883   0041A6  0E11               	movlw	17
 43884   0041A8  6F31               	movwf	49,b	;volatile
 43885                           
 43886                           ;../canargb_leds.c: 176:         T4RST = 0x12;
 43887   0041AA  0E12               	movlw	18
 43888   0041AC  6F33               	movwf	51,b	;volatile
 43889                           
 43890                           ;../canargb_leds.c: 180:         T4PR = 29;
 43891   0041AE  0E1D               	movlw	29
 43892   0041B0  6F2F               	movwf	47,b	;volatile
 43893                           
 43894                           ;../canargb_leds.c: 182:     };../canargb_leds.c: 186:     {;../canargb_leds.c: 187:    
      +                               CLCSELECT = 1;
 43895   0041B2  0E01               	movlw	1
 43896   0041B4  0100               	movlb	0	; () banked
 43897   0041B6  6FD5               	movwf	213,b	;volatile
 43898                           
 43899                           ;../canargb_leds.c: 188:         CLCnCON = 0x82;
 43900   0041B8  0E82               	movlw	130
 43901   0041BA  6FD6               	movwf	214,b	;volatile
 43902                           
 43903                           ;../canargb_leds.c: 189:         CLCnPOL = 0x8E;
 43904   0041BC  0E8E               	movlw	142
 43905   0041BE  6FD7               	movwf	215,b	;volatile
 43906                           
 43907                           ;../canargb_leds.c: 190:         CLCnSEL0 = 0x14;
 43908   0041C0  0E14               	movlw	20
 43909   0041C2  6FD8               	movwf	216,b	;volatile
 43910                           
 43911                           ;../canargb_leds.c: 191:         CLCnSEL1 = 0x14;
 43912   0041C4  0E14               	movlw	20
 43913   0041C6  6FD9               	movwf	217,b	;volatile
 43914                           
 43915                           ;../canargb_leds.c: 192:         CLCnSEL2 = 0x14;
 43916   0041C8  0E14               	movlw	20
 43917   0041CA  6FDA               	movwf	218,b	;volatile
 43918                           
 43919                           ;../canargb_leds.c: 193:         CLCnSEL3 = 0x14;
 43920   0041CC  0E14               	movlw	20
 43921   0041CE  6FDB               	movwf	219,b	;volatile
 43922                           
 43923                           ;../canargb_leds.c: 194:         CLCnGLS0 = 0x01;
 43924   0041D0  0E01               	movlw	1
 43925   0041D2  6FDC               	movwf	220,b	;volatile
 43926   0041D4                     
 43927                           ; BSR set to: 0
 43928                           ;../canargb_leds.c: 195:         CLCnGLS1 = 0x00;
 43929   0041D4  6BDD               	clrf	221,b	;volatile
 43930   0041D6                     
 43931                           ; BSR set to: 0
 43932                           ;../canargb_leds.c: 196:         CLCnGLS2 = 0x00;
 43933   0041D6  6BDE               	clrf	222,b	;volatile
 43934   0041D8                     
 43935                           ; BSR set to: 0
 43936                           ;../canargb_leds.c: 197:         CLCnGLS3 = 0x00;
 43937   0041D8  6BDF               	clrf	223,b	;volatile
 43938                           
 43939                           ;../canargb_leds.c: 198:     };../canargb_leds.c: 202:     {;../canargb_leds.c: 203:    
      +                               CLCSELECT = 3;
 43940   0041DA  0E03               	movlw	3
 43941   0041DC  6FD5               	movwf	213,b	;volatile
 43942                           
 43943                           ;../canargb_leds.c: 204:         CLCnCON = 0x82;
 43944   0041DE  0E82               	movlw	130
 43945   0041E0  6FD6               	movwf	214,b	;volatile
 43946                           
 43947                           ;../canargb_leds.c: 205:         CLCnPOL = 0x8E;
 43948   0041E2  0E8E               	movlw	142
 43949   0041E4  6FD7               	movwf	215,b	;volatile
 43950                           
 43951                           ;../canargb_leds.c: 206:         CLCnSEL0 = 0x16;
 43952   0041E6  0E16               	movlw	22
 43953   0041E8  6FD8               	movwf	216,b	;volatile
 43954                           
 43955                           ;../canargb_leds.c: 207:         CLCnSEL1 = 0x16;
 43956   0041EA  0E16               	movlw	22
 43957   0041EC  6FD9               	movwf	217,b	;volatile
 43958                           
 43959                           ;../canargb_leds.c: 208:         CLCnSEL2 = 0x16;
 43960   0041EE  0E16               	movlw	22
 43961   0041F0  6FDA               	movwf	218,b	;volatile
 43962                           
 43963                           ;../canargb_leds.c: 209:         CLCnSEL3 = 0x16;
 43964   0041F2  0E16               	movlw	22
 43965   0041F4  6FDB               	movwf	219,b	;volatile
 43966                           
 43967                           ;../canargb_leds.c: 210:         CLCnGLS0 = 0x01;
 43968   0041F6  0E01               	movlw	1
 43969   0041F8  6FDC               	movwf	220,b	;volatile
 43970   0041FA                     
 43971                           ; BSR set to: 0
 43972                           ;../canargb_leds.c: 211:         CLCnGLS1 = 0x00;
 43973   0041FA  6BDD               	clrf	221,b	;volatile
 43974   0041FC                     
 43975                           ; BSR set to: 0
 43976                           ;../canargb_leds.c: 212:         CLCnGLS2 = 0x00;
 43977   0041FC  6BDE               	clrf	222,b	;volatile
 43978   0041FE                     
 43979                           ; BSR set to: 0
 43980                           ;../canargb_leds.c: 213:         CLCnGLS3 = 0x00;
 43981   0041FE  6BDF               	clrf	223,b	;volatile
 43982   004200                     
 43983                           ; BSR set to: 0
 43984                           ;../canargb_leds.c: 214:     };../canargb_leds.c: 217:     {;../canargb_leds.c: 218:    
      +                               MD1CON0 = 0;
 43985   004200  6B6A               	clrf	106,b	;volatile
 43986   004202                     
 43987                           ; BSR set to: 0
 43988                           ;../canargb_leds.c: 219:         MD1CON1 = 0;
 43989   004202  6B6B               	clrf	107,b	;volatile
 43990                           
 43991                           ;../canargb_leds.c: 220:         MD1CARH = 0x10;
 43992   004204  0E10               	movlw	16
 43993   004206  6F6E               	movwf	110,b	;volatile
 43994                           
 43995                           ;../canargb_leds.c: 221:         MD1CARL = 0x14;
 43996   004208  0E14               	movlw	20
 43997   00420A  6F6D               	movwf	109,b	;volatile
 43998                           
 43999                           ;../canargb_leds.c: 222:         MD1SRC = 0x1F;
 44000   00420C  0E1F               	movlw	31
 44001   00420E  6F6C               	movwf	108,b	;volatile
 44002   004210                     
 44003                           ; BSR set to: 0
 44004                           ;../canargb_leds.c: 223:     };../canargb_leds.c: 226:     {;../canargb_leds.c: 227:    
      +                               DMASELECT=0;
 44005   004210  6BE8               	clrf	232,b	;volatile
 44006                           
 44007                           ;../canargb_leds.c: 228:         DMAnCON1bits.DMODE=0b00;
 44008   004212  0E3F               	movlw	-193
 44009   004214  17FD               	andwf	253,f,b	;volatile
 44010                           
 44011                           ;../canargb_leds.c: 229:         DMAnCON1bits.SMR=0b00;
 44012   004216  0EE7               	movlw	-25
 44013   004218  17FD               	andwf	253,f,b	;volatile
 44014                           
 44015                           ;../canargb_leds.c: 230:         DMAnCON1bits.SMODE=0b01;
 44016   00421A  51FD               	movf	253,w,b	;volatile
 44017   00421C  0BF9               	andlw	-7
 44018   00421E  0902               	iorlw	2
 44019   004220  6FFD               	movwf	253,b	;volatile
 44020   004222                     
 44021                           ; BSR set to: 0
 44022                           ;../canargb_leds.c: 231:         DMAnCON1bits.SSTP=1;
 44023   004222  81FD               	bsf	253,0,b	;volatile
 44024                           
 44025                           ;../canargb_leds.c: 232:         DMAnSSZ=0x300;
 44026   004224  0E03               	movlw	3
 44027   004226  6FF8               	movwf	248,b	;volatile
 44028   004228  0E00               	movlw	0
 44029   00422A  6FF7               	movwf	247,b	;volatile
 44030                           
 44031                           ;../canargb_leds.c: 233:         DMAnSSA=(__uint24)&leds;
 44032   00422C  0E7C               	movlw	low _leds
 44033   00422E  6FF9               	movwf	249,b	;volatile
 44034   004230  0E0B               	movlw	high _leds
 44035   004232  6FFA               	movwf	250,b	;volatile
 44036   004234  0E00               	movlw	low (_leds shr (0+16))
 44037   004236  6FFB               	movwf	251,b	;volatile
 44038                           
 44039                           ;../canargb_leds.c: 234:         DMAnDSZ=1;
 44040   004238  0E00               	movlw	0
 44041   00423A  6FEF               	movwf	239,b	;volatile
 44042   00423C  0E01               	movlw	1
 44043   00423E  6FEE               	movwf	238,b	;volatile
 44044                           
 44045                           ;../canargb_leds.c: 235:         DMAnDSA=(uint16_t)&SPI1TXB;
 44046   004240  0E00               	movlw	0
 44047   004242  6FF1               	movwf	241,b	;volatile
 44048   004244  0E81               	movlw	129
 44049   004246  6FF0               	movwf	240,b	;volatile
 44050                           
 44051                           ;../canargb_leds.c: 236:         DMAnSIRQ=0x19;
 44052   004248  0E19               	movlw	25
 44053   00424A  6FFF               	movwf	255,b	;volatile
 44054   00424C                     
 44055                           ; BSR set to: 0
 44056                           ;../canargb_leds.c: 237:         DMAnAIRQ=0;
 44057   00424C  6BFE               	clrf	254,b	;volatile
 44058   00424E                     
 44059                           ; BSR set to: 0
 44060                           ;../canargb_leds.c: 244:     };../canargb_leds.c: 247:     T2CONbits.ON = 1;
 44061   00424E  0103               	movlb	3	; () banked
 44062   004250  8F24               	bsf	36,7,b	;volatile
 44063   004252                     
 44064                           ; BSR set to: 3
 44065                           ;../canargb_leds.c: 248:     T4CONbits.ON = 1;
 44066   004252  8F30               	bsf	48,7,b	;volatile
 44067   004254                     
 44068                           ; BSR set to: 3
 44069                           ;../canargb_leds.c: 249:     MD1CON0bits.EN = 1;
 44070   004254  0100               	movlb	0	; () banked
 44071   004256  8F6A               	bsf	106,7,b	;volatile
 44072   004258                     
 44073                           ; BSR set to: 0
 44074   004258  0012               	return		;funcret
 44075   00425A                     __end_of_initARGB:
 44076                           	callstack 0
 44077                           
 44078 ;; *************** function _receiveOverrun *****************
 44079 ;; Defined at:
 44080 ;;		line 370 in file "../../VLCBlib_PIC/can18_can_2.c"
 44081 ;; Parameters:    Size  Location     Type
 44082 ;;		None
 44083 ;; Auto vars:     Size  Location     Type
 44084 ;;		None
 44085 ;; Return value:  Size  Location     Type
 44086 ;;                  1    wreg      void 
 44087 ;; Registers used:
 44088 ;;		status,2, status,0
 44089 ;; Tracked objects:
 44090 ;;		On entry : 0/0
 44091 ;;		On exit  : 0/0
 44092 ;;		Unchanged: 0/0
 44093 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44098 ;;Total ram usage:        0 bytes
 44099 ;; Hardware stack levels used: 1
 44100 ;; This function calls:
 44101 ;;		Nothing
 44102 ;; This function is called by:
 44103 ;;		Interrupt level 2
 44104 ;; This function uses a non-reentrant model
 44105 ;;
 44106                           
 44107                           	psect	text146
 44108   00782C                     __ptext146:
 44109                           	callstack 0
 44110   00782C                     _receiveOverrun:
 44111                           	callstack 114
 44112   00782C                     
 44113                           ;../../VLCBlib_PIC/can18_can_2.c: 371:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 44114   00782C  0101               	movlb	1	; () banked
 44115   00782E  A778               	btfss	120,3,b	;volatile
 44116   007830  EF1C  F03C         	goto	i2u865_41
 44117   007834  EF1E  F03C         	goto	i2u865_40
 44118   007838                     i2u865_41:
 44119   007838  EF23  F03C         	goto	i2l10948
 44120   00783C                     i2u865_40:
 44121   00783C                     
 44122                           ; BSR set to: 1
 44123                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         canDiagnostics[0x08].asUint++;
 44124   00783C  0106               	movlb	6	; () banked
 44125   00783E  4BA1               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44126   007840  2BA2               	incf	(_canDiagnostics+17)& (0+255),f,b
 44127   007842                     
 44128                           ; BSR set to: 6
 44129                           ;../../VLCBlib_PIC/can18_can_2.c: 375:         C1FIFOSTA3Lbits.RXOVIF = 0;
 44130   007842  0101               	movlb	1	; () banked
 44131   007844  9778               	bcf	120,3,b	;volatile
 44132   007846                     i2l10948:
 44133                           
 44134                           ; BSR set to: 1
 44135                           ;../../VLCBlib_PIC/can18_can_2.c: 377:     if (C1INTHbits.IVMIF == 1) {
 44136   007846  AF1D               	btfss	29,7,b	;volatile
 44137   007848  EF28  F03C         	goto	i2u866_41
 44138   00784C  EF2A  F03C         	goto	i2u866_40
 44139   007850                     i2u866_41:
 44140   007850  EF2F  F03C         	goto	i2l392
 44141   007854                     i2u866_40:
 44142   007854                     
 44143                           ; BSR set to: 1
 44144                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         canDiagnostics[0x01].asUint++;
 44145   007854  0106               	movlb	6	; () banked
 44146   007856  4B93               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 44147   007858  2B94               	incf	(_canDiagnostics+3)& (0+255),f,b
 44148   00785A                     
 44149                           ; BSR set to: 6
 44150                           ;../../VLCBlib_PIC/can18_can_2.c: 381:         C1INTHbits.IVMIF = 0;
 44151   00785A  0101               	movlb	1	; () banked
 44152   00785C  9F1D               	bcf	29,7,b	;volatile
 44153   00785E                     i2l392:
 44154                           
 44155                           ; BSR set to: 1
 44156   00785E  0011               	retfie		f
 44157   007860                     __end_of_receiveOverrun:
 44158                           	callstack 0
 44159                           
 44160 ;; *************** function _TMR0_ISR *****************
 44161 ;; Defined at:
 44162 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 44163 ;; Parameters:    Size  Location     Type
 44164 ;;		None
 44165 ;; Auto vars:     Size  Location     Type
 44166 ;;		None
 44167 ;; Return value:  Size  Location     Type
 44168 ;;                  1    wreg      void 
 44169 ;; Registers used:
 44170 ;;		wreg, status,2, status,0
 44171 ;; Tracked objects:
 44172 ;;		On entry : 0/0
 44173 ;;		On exit  : 0/0
 44174 ;;		Unchanged: 0/0
 44175 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44180 ;;Total ram usage:        0 bytes
 44181 ;; Hardware stack levels used: 1
 44182 ;; This function calls:
 44183 ;;		Nothing
 44184 ;; This function is called by:
 44185 ;;		Interrupt level 2
 44186 ;; This function uses a non-reentrant model
 44187 ;;
 44188                           
 44189                           	psect	text147
 44190   007AA4                     __ptext147:
 44191                           	callstack 0
 44192   007AA4                     _TMR0_ISR:
 44193                           	callstack 114
 44194   007AA4                     
 44195                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 44196   007AA4  AEB1               	btfss	1201,7,c	;volatile
 44197   007AA6  EF57  F03D         	goto	i2u867_41
 44198   007AAA  EF59  F03D         	goto	i2u867_40
 44199   007AAE                     i2u867_41:
 44200   007AAE  EF65  F03D         	goto	i2l1633
 44201   007AB2                     i2u867_40:
 44202   007AB2                     
 44203                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 44204   007AB2  9EB1               	bcf	1201,7,c	;volatile
 44205   007AB4                     
 44206                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 44207   007AB4  0105               	movlb	5	; () banked
 44208   007AB6  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 44209   007AB8                     
 44210                           ; BSR set to: 5
 44211                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 44212   007AB8  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44213   007ABA  A4D8               	btfss	status,2,c
 44214   007ABC  EF62  F03D         	goto	i2u868_41
 44215   007AC0  EF64  F03D         	goto	i2u868_40
 44216   007AC4                     i2u868_41:
 44217   007AC4  EF65  F03D         	goto	i2l1633
 44218   007AC8                     i2u868_40:
 44219   007AC8                     
 44220                           ; BSR set to: 5
 44221                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 44222   007AC8  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 44223   007ACA                     i2l1633:
 44224   007ACA  0011               	retfie		f
 44225   007ACC                     __end_of_TMR0_ISR:
 44226                           	callstack 0
 44227                           
 44228 ;; *************** function _DEFAULT_ISR *****************
 44229 ;; Defined at:
 44230 ;;		line 1369 in file "../../VLCBlib_PIC/vlcb.c"
 44231 ;; Parameters:    Size  Location     Type
 44232 ;;		None
 44233 ;; Auto vars:     Size  Location     Type
 44234 ;;		None
 44235 ;; Return value:  Size  Location     Type
 44236 ;;                  1    wreg      void 
 44237 ;; Registers used:
 44238 ;;		None
 44239 ;; Tracked objects:
 44240 ;;		On entry : 0/0
 44241 ;;		On exit  : 0/0
 44242 ;;		Unchanged: 0/0
 44243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44248 ;;Total ram usage:        0 bytes
 44249 ;; Hardware stack levels used: 1
 44250 ;; This function calls:
 44251 ;;		Nothing
 44252 ;; This function is called by:
 44253 ;;		Interrupt level 2
 44254 ;; This function uses a non-reentrant model
 44255 ;;
 44256                           
 44257                           	psect	text148
 44258   007CBC                     __ptext148:
 44259                           	callstack 0
 44260   007CBC                     _DEFAULT_ISR:
 44261                           	callstack 114
 44262   007CBC  0011               	retfie		f
 44263   007CBE                     __end_of_DEFAULT_ISR:
 44264                           	callstack 0
 44265                           
 44266                           ;
 44267                           ; H/W Interrupt Vector Table @ 0x900
 44268                           ;
 44269                           
 44270                           	psect	ivt0x900
 44271   000900                     __pivt0x900:
 44272                           	callstack 0
 44273   000900                     ivt0x900_base:
 44274                           	callstack 0
 44275                           
 44276                           ; Vector 0 : SWINT
 44277   000900  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44278                           
 44279                           ; Vector 1 : HLVD
 44280   000902  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44281                           
 44282                           ; Vector 2 : OSF
 44283   000904  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44284                           
 44285                           ; Vector 3 : CSW
 44286   000906  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44287                           
 44288                           ; Vector 4 : TU16A
 44289   000908  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44290                           
 44291                           ; Vector 5 : CLC1
 44292   00090A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44293                           
 44294                           ; Vector 6 : CAN
 44295   00090C  1E0B               	dw	_receiveOverrun shr (0+2)
 44296                           
 44297                           ; Vector 7 : IOC
 44298   00090E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44299                           
 44300                           ; Vector 8 : INT0
 44301   000910  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44302                           
 44303                           ; Vector 9 : ZCD
 44304   000912  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44305                           
 44306                           ; Vector 10 : AD
 44307   000914  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44308                           
 44309                           ; Vector 11 : ACT
 44310   000916  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44311                           
 44312                           ; Vector 12 : CM1
 44313   000918  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44314                           
 44315                           ; Vector 13 : SMT1
 44316   00091A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44317                           
 44318                           ; Vector 14 : SMT1PRA
 44319   00091C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44320                           
 44321                           ; Vector 15 : SMT1PWA
 44322   00091E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44323                           
 44324                           ; Vector 16 : ADCH1
 44325   000920  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44326                           
 44327                           ; Vector 17 : ADCH2
 44328   000922  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44329                           
 44330                           ; Vector 18 : ADCH3
 44331   000924  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44332                           
 44333                           ; Vector 19 : ADCH4
 44334   000926  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44335                           
 44336                           ; Vector 20 : DMA1SCNT
 44337   000928  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44338                           
 44339                           ; Vector 21 : DMA1DCNT
 44340   00092A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44341                           
 44342                           ; Vector 22 : DMA1OR
 44343   00092C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44344                           
 44345                           ; Vector 23 : DMA1A
 44346   00092E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44347                           
 44348                           ; Vector 24 : SPI1RX
 44349   000930  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44350                           
 44351                           ; Vector 25 : SPI1TX
 44352   000932  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44353                           
 44354                           ; Vector 26 : SPI1
 44355   000934  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44356                           
 44357                           ; Vector 27 : TMR2
 44358   000936  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44359                           
 44360                           ; Vector 28 : TMR1
 44361   000938  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44362                           
 44363                           ; Vector 29 : TMR1G
 44364   00093A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44365                           
 44366                           ; Vector 30 : CCP1
 44367   00093C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44368                           
 44369                           ; Vector 31 : TMR0
 44370   00093E  1EA9               	dw	_TMR0_ISR shr (0+2)
 44371                           
 44372                           ; Vector 32 : U1RX
 44373   000940  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44374                           
 44375                           ; Vector 33 : U1TX
 44376   000942  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44377                           
 44378                           ; Vector 34 : U1E
 44379   000944  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44380                           
 44381                           ; Vector 35 : U1
 44382   000946  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44383                           
 44384                           ; Vector 36 : CANRX
 44385   000948  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44386                           
 44387                           ; Vector 37 : CANTX
 44388   00094A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44389                           
 44390                           ; Vector 38 : PWM1PR
 44391   00094C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44392                           
 44393                           ; Vector 39 : PWM1
 44394   00094E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44395                           
 44396                           ; Vector 40 : SPI2RX
 44397   000950  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44398                           
 44399                           ; Vector 41 : SPI2TX
 44400   000952  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44401                           
 44402                           ; Vector 42 : SPI2
 44403   000954  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44404                           
 44405                           ; Vector 43 : TU16B
 44406   000956  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44407                           
 44408                           ; Vector 44 : TMR3
 44409   000958  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44410                           
 44411                           ; Vector 45 : TMR3G
 44412   00095A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44413                           
 44414                           ; Vector 46 : PWM2PR
 44415   00095C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44416                           
 44417                           ; Vector 47 : PWM2
 44418   00095E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44419                           
 44420                           ; Vector 48 : INT1
 44421   000960  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44422                           
 44423                           ; Vector 49 : CLC2
 44424   000962  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44425                           
 44426                           ; Vector 50 : CWG1
 44427   000964  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44428                           
 44429                           ; Vector 51 : NCO1
 44430   000966  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44431                           
 44432                           ; Vector 52 : DMA2SCNT
 44433   000968  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44434                           
 44435                           ; Vector 53 : DMA2DCNT
 44436   00096A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44437                           
 44438                           ; Vector 54 : DMA2OR
 44439   00096C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44440                           
 44441                           ; Vector 55 : DMA2A
 44442   00096E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44443                           
 44444                           ; Vector 56 : I2C1RX
 44445   000970  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44446                           
 44447                           ; Vector 57 : I2C1TX
 44448   000972  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44449                           
 44450                           ; Vector 58 : I2C1
 44451   000974  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44452                           
 44453                           ; Vector 59 : I2C1E
 44454   000976  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44455                           
 44456                           ; Vector 60 : Undefined
 44457   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 44458                           
 44459                           ; Vector 61 : CLC3
 44460   00097A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44461                           
 44462                           ; Vector 62 : PWM3PR
 44463   00097C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44464                           
 44465                           ; Vector 63 : PWM3
 44466   00097E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44467                           
 44468                           ; Vector 64 : U2RX
 44469   000980  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44470                           
 44471                           ; Vector 65 : U2TX
 44472   000982  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44473                           
 44474                           ; Vector 66 : U2E
 44475   000984  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44476                           
 44477                           ; Vector 67 : U2
 44478   000986  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44479                           
 44480                           ; Vector 68 : TMR5
 44481   000988  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44482                           
 44483                           ; Vector 69 : TMR5G
 44484   00098A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44485                           
 44486                           ; Vector 70 : CCP2
 44487   00098C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44488                           
 44489                           ; Vector 71 : SCAN
 44490   00098E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44491                           
 44492                           ; Vector 72 : U3RX
 44493   000990  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44494                           
 44495                           ; Vector 73 : U3TX
 44496   000992  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44497                           
 44498                           ; Vector 74 : U3E
 44499   000994  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44500                           
 44501                           ; Vector 75 : U3
 44502   000996  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44503                           
 44504                           ; Vector 76 : Undefined
 44505   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 44506                           
 44507                           ; Vector 77 : CLC4
 44508   00099A  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44509                           
 44510                           ; Vector 78 : PWM4PR
 44511   00099C  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44512                           
 44513                           ; Vector 79 : PWM4
 44514   00099E  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44515                           
 44516                           ; Vector 80 : INT2
 44517   0009A0  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44518                           
 44519                           ; Vector 81 : CLC5
 44520   0009A2  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44521                           
 44522                           ; Vector 82 : CWG2
 44523   0009A4  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44524                           
 44525                           ; Vector 83 : NCO2
 44526   0009A6  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44527                           
 44528                           ; Vector 84 : DMA3SCNT
 44529   0009A8  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44530                           
 44531                           ; Vector 85 : DMA3DCNT
 44532   0009AA  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44533                           
 44534                           ; Vector 86 : DMA3OR
 44535   0009AC  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44536                           
 44537                           ; Vector 87 : DMA3A
 44538   0009AE  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44539                           
 44540                           ; Vector 88 : CCP3
 44541   0009B0  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44542                           
 44543                           ; Vector 89 : CLC6
 44544   0009B2  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44545                           
 44546                           ; Vector 90 : CWG3
 44547   0009B4  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44548                           
 44549                           ; Vector 91 : TMR4
 44550   0009B6  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44551                           
 44552                           ; Vector 92 : DMA4SCNT
 44553   0009B8  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44554                           
 44555                           ; Vector 93 : DMA4DCNT
 44556   0009BA  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44557                           
 44558                           ; Vector 94 : DMA4OR
 44559   0009BC  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44560                           
 44561                           ; Vector 95 : DMA4A
 44562   0009BE  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44563                           
 44564                           ; Vector 96 : U4RX
 44565   0009C0  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44566                           
 44567                           ; Vector 97 : U4TX
 44568   0009C2  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44569                           
 44570                           ; Vector 98 : U4E
 44571   0009C4  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44572                           
 44573                           ; Vector 99 : U4
 44574   0009C6  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44575                           
 44576                           ; Vector 100 : DMA5SCNT
 44577   0009C8  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44578                           
 44579                           ; Vector 101 : DMA5DCNT
 44580   0009CA  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44581                           
 44582                           ; Vector 102 : DMA5OR
 44583   0009CC  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44584                           
 44585                           ; Vector 103 : DMA5A
 44586   0009CE  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44587                           
 44588                           ; Vector 104 : U5RX
 44589   0009D0  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44590                           
 44591                           ; Vector 105 : U5TX
 44592   0009D2  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44593                           
 44594                           ; Vector 106 : U5E
 44595   0009D4  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44596                           
 44597                           ; Vector 107 : U5
 44598   0009D6  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44599                           
 44600                           ; Vector 108 : DMA6SCNT
 44601   0009D8  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44602                           
 44603                           ; Vector 109 : DMA6DCNT
 44604   0009DA  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44605                           
 44606                           ; Vector 110 : DMA6OR
 44607   0009DC  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44608                           
 44609                           ; Vector 111 : DMA6A
 44610   0009DE  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44611                           
 44612                           ; Vector 112 : Undefined
 44613   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 44614                           
 44615                           ; Vector 113 : CLC7
 44616   0009E2  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44617                           
 44618                           ; Vector 114 : CM2
 44619   0009E4  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44620                           
 44621                           ; Vector 115 : NCO3
 44622   0009E6  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44623                           
 44624                           ; Vector 116 : DMA7SCNT
 44625   0009E8  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44626                           
 44627                           ; Vector 117 : DMA7DCNT
 44628   0009EA  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44629                           
 44630                           ; Vector 118 : DMA7OR
 44631   0009EC  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44632                           
 44633                           ; Vector 119 : DMA7A
 44634   0009EE  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44635                           
 44636                           ; Vector 120 : NVM
 44637   0009F0  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44638                           
 44639                           ; Vector 121 : CLC8
 44640   0009F2  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44641                           
 44642                           ; Vector 122 : CRC
 44643   0009F4  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44644                           
 44645                           ; Vector 123 : TMR6
 44646   0009F6  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44647                           
 44648                           ; Vector 124 : DMA8SCNT
 44649   0009F8  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44650                           
 44651                           ; Vector 125 : DMA8DCNT
 44652   0009FA  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44653                           
 44654                           ; Vector 126 : DMA8OR
 44655   0009FC  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44656                           
 44657                           ; Vector 127 : DMA8A
 44658   0009FE  1F2F               	dw	_DEFAULT_ISR shr (0+2)
 44659   000A00                     ivt0x900_undefint:
 44660                           	callstack 0
 44661   000A00  00FF               	reset	
 44662                           
 44663                           	psect	rparam
 44664   000001                     ___rparam_used  equ	1
 44665   000000                     ___param_bank   equ	0
 44666   000000                     __Lparam        equ	__Lrparam
 44667   000000                     __Hparam        equ	__Hrparam
 44668                           
 44669                           	psect	config
 44670                           
 44671                           ;Config register CONFIG1 @ 0x300000
 44672                           ;	External Oscillator Selection
 44673                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 44674                           ;	Reset Oscillator Selection
 44675                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 44676   300000                     	org	3145728
 44677   300000  FA                 	db	250
 44678                           
 44679                           ;Config register CONFIG2 @ 0x300001
 44680                           ;	Clock out Enable bit
 44681                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 44682                           ;	PRLOCKED One-Way Set Enable bit
 44683                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 44684                           ;	Clock Switch Enable bit
 44685                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 44686                           ;	JTAG Enable bit
 44687                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 44688                           ;	Fail-Safe Clock Monitor Enable bit
 44689                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 44690                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 44691                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 44692                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 44693                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 44694   300001                     	org	3145729
 44695   300001  EF                 	db	239
 44696                           
 44697                           ;Config register CONFIG3 @ 0x300002
 44698                           ;	MCLR Enable bit
 44699                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 44700                           ;	Power-up timer selection bits
 44701                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 44702                           ;	Multi-vector enable bit
 44703                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 44704                           ;	IVTLOCK bit One-way set enable bit
 44705                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 44706                           ;	Low Power BOR Enable bit
 44707                           ;	LPBOREN = OFF, Low-Power BOR disabled
 44708                           ;	Brown-out Reset Enable bits
 44709                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 44710   300002                     	org	3145730
 44711   300002  FD                 	db	253
 44712                           
 44713                           ;Config register CONFIG4 @ 0x300003
 44714                           ;	Brown-out Reset Voltage Selection bits
 44715                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 44716                           ;	ZCD Disable bit
 44717                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 44718                           ;	PPSLOCK bit One-Way Set Enable bit
 44719                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 44720                           ;	Stack Full/Underflow Reset Enable bit
 44721                           ;	STVREN = ON, Stack full/underflow will cause Reset
 44722                           ;	Low Voltage Programming Enable bit
 44723                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 44724                           ;	Extended Instruction Set Enable bit
 44725                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 44726   300003                     	org	3145731
 44727   300003  FD                 	db	253
 44728                           
 44729                           ;Config register CONFIG5 @ 0x300004
 44730                           ;	WDT Period selection bits
 44731                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 44732                           ;	WDT operating mode
 44733                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 44734   300004                     	org	3145732
 44735   300004  9F                 	db	159
 44736                           
 44737                           ;Config register CONFIG6 @ 0x300005
 44738                           ;	WDT Window Select bits
 44739                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 44740                           ;	WDT input clock selector
 44741                           ;	WDTCCS = SC, Software Control
 44742   300005                     	org	3145733
 44743   300005  FF                 	db	255
 44744                           
 44745                           ;Config register CONFIG7 @ 0x300006
 44746                           ;	Boot Block Size selection bits
 44747                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 44748                           ;	Boot Block enable bit
 44749                           ;	BBEN = ON, Boot block enabled
 44750                           ;	Storage Area Flash enable bit
 44751                           ;	SAFEN = OFF, SAF disabled
 44752                           ;	Background Debugger
 44753                           ;	DEBUG = 0x1, unprogrammed default
 44754   300006                     	org	3145734
 44755   300006  F7                 	db	247
 44756                           
 44757                           ;Config register CONFIG8 @ 0x300007
 44758                           ;	Boot Block Write Protection bit
 44759                           ;	WRTB = ON, Boot Block Write protected
 44760                           ;	Configuration Register Write Protection bit
 44761                           ;	WRTC = ON, Configuration registers Write protected
 44762                           ;	Data EEPROM Write Protection bit
 44763                           ;	WRTD = OFF, Data EEPROM not Write protected
 44764                           ;	SAF Write protection bit
 44765                           ;	WRTSAF = OFF, SAF not Write Protected
 44766                           ;	Application Block write protection bit
 44767                           ;	WRTAPP = OFF, Application Block not write protected
 44768   300007                     	org	3145735
 44769   300007  FC                 	db	252
 44770                           
 44771                           ;Config register CONFIG9 @ 0x300008
 44772                           ;	CRC on boot output pin selection
 44773                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 44774                           ;	CRC on boot output pin enable bit
 44775                           ;	BPEN = OFF, CRC on boot output pin disabled
 44776                           ;	CRC on boot output pin open drain bit
 44777                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 44778   300008                     	org	3145736
 44779   300008  FF                 	db	255
 44780                           
 44781                           ;Config register CONFIG10 @ 0x300009
 44782                           ;	PFM and Data EEPROM Code Protection bit
 44783                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 44784   300009                     	org	3145737
 44785   300009  FF                 	db	255
 44786                           
 44787                           ;Config register CONFIG11 @ 0x30000A
 44788                           ;	CRC on boot scan enable for boot area
 44789                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 44790                           ;	CRC on boot Continue on Error for boot areas bit
 44791                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 44792                           ;	CRC on boot application code scan enable
 44793                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 44794                           ;	CRC on boot SAF area scan enable
 44795                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 44796                           ;	CRC on boot Data EEPROM scan enable
 44797                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 44798                           ;	CRC on boot Config fuses scan enable
 44799                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 44800                           ;	CRC on boot Continue on Error for non-boot areas bit
 44801                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 44802                           ;	Boot on CRC Enable bit
 44803                           ;	BOOTPOR = OFF, CRC on boot will not run
 44804   30000A                     	org	3145738
 44805   30000A  FF                 	db	255
 44806                           
 44807                           ;Config register CONFIG12 @ 0x30000B
 44808                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 44809                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 44810   30000B                     	org	3145739
 44811   30000B  FF                 	db	255
 44812                           
 44813                           ;Config register CONFIG13 @ 0x30000C
 44814                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 44815                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 44816   30000C                     	org	3145740
 44817   30000C  FF                 	db	255
 44818                           
 44819                           ;Config register CONFIG14 @ 0x30000D
 44820                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 44821                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 44822   30000D                     	org	3145741
 44823   30000D  FF                 	db	255
 44824                           
 44825                           ;Config register CONFIG15 @ 0x30000E
 44826                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 44827                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 44828   30000E                     	org	3145742
 44829   30000E  FF                 	db	255
 44830                           
 44831                           ;Config register CONFIG16 @ 0x30000F
 44832                           ;	Boot Sector Seed for CRC on boot bits 31-24
 44833                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 44834   30000F                     	org	3145743
 44835   30000F  FF                 	db	255
 44836                           
 44837                           ;Config register CONFIG17 @ 0x300010
 44838                           ;	Boot Sector Seed for CRC on boot bits 23-16
 44839                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 44840   300010                     	org	3145744
 44841   300010  FF                 	db	255
 44842                           
 44843                           ;Config register CONFIG18 @ 0x300011
 44844                           ;	Boot Sector Seed for CRC on boot bits 15-8
 44845                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 44846   300011                     	org	3145745
 44847   300011  FF                 	db	255
 44848                           
 44849                           ;Config register CONFIG19 @ 0x300012
 44850                           ;	Boot Sector Seed for CRC on boot bits 7-0
 44851                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 44852   300012                     	org	3145746
 44853   300012  FF                 	db	255
 44854                           
 44855                           ;Config register CONFIG20 @ 0x300013
 44856                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 44857                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 44858   300013                     	org	3145747
 44859   300013  FF                 	db	255
 44860                           
 44861                           ;Config register CONFIG21 @ 0x300014
 44862                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 44863                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 44864   300014                     	org	3145748
 44865   300014  FF                 	db	255
 44866                           
 44867                           ;Config register CONFIG22 @ 0x300015
 44868                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 44869                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 44870   300015                     	org	3145749
 44871   300015  FF                 	db	255
 44872                           
 44873                           ;Config register CONFIG23 @ 0x300016
 44874                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 44875                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 44876   300016                     	org	3145750
 44877   300016  FF                 	db	255
 44878                           
 44879                           ;Config register CONFIG24 @ 0x300017
 44880                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 44881                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 44882   300017                     	org	3145751
 44883   300017  FF                 	db	255
 44884                           
 44885                           ;Config register CONFIG25 @ 0x300018
 44886                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 44887                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 44888   300018                     	org	3145752
 44889   300018  FF                 	db	255
 44890                           
 44891                           ;Config register CONFIG26 @ 0x300019
 44892                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 44893                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 44894   300019                     	org	3145753
 44895   300019  FF                 	db	255
 44896                           
 44897                           ;Config register CONFIG27 @ 0x30001A
 44898                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 44899                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 44900   30001A                     	org	3145754
 44901   30001A  FF                 	db	255
 44902                           
 44903                           ;Config register CONFIG28 @ 0x30001B
 44904                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 44905                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 44906   30001B                     	org	3145755
 44907   30001B  FF                 	db	255
 44908                           
 44909                           ;Config register CONFIG29 @ 0x30001C
 44910                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 44911                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 44912   30001C                     	org	3145756
 44913   30001C  FF                 	db	255
 44914                           
 44915                           ;Config register CONFIG30 @ 0x30001D
 44916                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 44917                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 44918   30001D                     	org	3145757
 44919   30001D  FF                 	db	255
 44920                           
 44921                           ;Config register CONFIG31 @ 0x30001E
 44922                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 44923                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 44924   30001E                     	org	3145758
 44925   30001E  FF                 	db	255
 44926                           
 44927                           ;Config register CONFIG32 @ 0x30001F
 44928                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 44929                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 44930   30001F                     	org	3145759
 44931   30001F  FF                 	db	255
 44932                           
 44933                           ;Config register CONFIG33 @ 0x300020
 44934                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 44935                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 44936   300020                     	org	3145760
 44937   300020  FF                 	db	255
 44938                           
 44939                           ;Config register CONFIG34 @ 0x300021
 44940                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 44941                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 44942   300021                     	org	3145761
 44943   300021  FF                 	db	255
 44944                           
 44945                           ;Config register CONFIG35 @ 0x300022
 44946                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 44947                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 44948   300022                     	org	3145762
 44949   300022  FF                 	db	255
 44950                           tosu	equ	0x4FF
 44951                           tosh	equ	0x4FE
 44952                           tosl	equ	0x4FD
 44953                           stkptr	equ	0x4FC
 44954                           pclatu	equ	0x4FB
 44955                           pclath	equ	0x4FA
 44956                           pcl	equ	0x4F9
 44957                           tblptru	equ	0x4F8
 44958                           tblptrh	equ	0x4F7
 44959                           tblptrl	equ	0x4F6
 44960                           tablat	equ	0x4F5
 44961                           prodh	equ	0x4F4
 44962                           prodl	equ	0x4F3
 44963                           indf0	equ	0x4EF
 44964                           postinc0	equ	0x4EE
 44965                           postdec0	equ	0x4ED
 44966                           preinc0	equ	0x4EC
 44967                           plusw0	equ	0x4EB
 44968                           fsr0h	equ	0x4EA
 44969                           fsr0l	equ	0x4E9
 44970                           wreg	equ	0x4E8
 44971                           indf1	equ	0x4E7
 44972                           postinc1	equ	0x4E6
 44973                           postdec1	equ	0x4E5
 44974                           preinc1	equ	0x4E4
 44975                           plusw1	equ	0x4E3
 44976                           fsr1h	equ	0x4E2
 44977                           fsr1l	equ	0x4E1
 44978                           bsr	equ	0x4E0
 44979                           indf2	equ	0x4DF
 44980                           postinc2	equ	0x4DE
 44981                           postdec2	equ	0x4DD
 44982                           preinc2	equ	0x4DC
 44983                           plusw2	equ	0x4DB
 44984                           fsr2h	equ	0x4DA
 44985                           fsr2l	equ	0x4D9
 44986                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    422
    Data        3
    BSS         2214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160     45     158
    BANK6           256      0     192
    BANK7           256      0     255
    BANK8           256      0     252
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    canTransport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventConsumerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S1136MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    S343$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S343$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S343Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S343Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    S343Transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    sendByte@p	PTR unsigned char  size(2) Largest target is 765
		 -> leds(BIGRAM[765]), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[6] size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 6
		 -> canTransport(CODE[6]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 


Critical Paths under _main in COMRAM

    _setup->_tickGet
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_consumerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_findEvent
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _pollTimedResponse->_reqevCallback
    _getEv->_readNVM
    _nerdCallback->_sendMessage7
    _setNV->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage4->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _mnsPoll->_sendMessage5
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _sendMessage7->_sendMessage
    _findEvent->_getHash
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _getEVs->_readNVM
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _sendMessage5->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_startEnumeration
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _startEnumeration->_tickGet
    _setNewCanId->_writeNVM
    _loop->_tickGet
    _refreshString->_sendByte
    _doFlash->_getNV
    _checkPowerOnPb->_factoryReset
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lldiv->_tickGet
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read
    _APP_testMode->_tickGet

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  188907
                                             92 COMRAM     3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     582
                           _initARGB
              _setTimedResponseDelay
                            _tickGet
                     _updateLedRange
                          _updateRGB
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0    4604
                                             40 COMRAM     5     5      0
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1395
                                             39 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     450
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     382
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     735
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          20    20      0    1037
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     497
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  157874
                                             30 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   72431
                                             83 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5601
                                             48 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6035
                                             43 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9898
                                             46 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8660
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     296
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6080
                                             43 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11131
                                             58 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3604
                                             53 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   12633
                                             77 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7    5100
                                             70 COMRAM     7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            24    17      7    4985
                                             46 COMRAM    24    17      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             16    14      2     780
                                             20 COMRAM    16    14      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   21461
                                             60 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6722
                                             45 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _getEv                                               16    14      2     352
                                             12 COMRAM    16    14      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2603
                                             45 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3505
                                             45 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2723
                                             45 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2788
                                             45 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2    3097
                                             45 COMRAM     8     6      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11787
                                             83 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1     944
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1       1
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2   30184
                                             83 COMRAM     7     5      2
                                              0 BANK5     30    30      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
           _canWaitForTxQueueToDrain *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3     155
                                              4 COMRAM     4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             37 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage4                                         5     1      4    2403
                                             37 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2418
                                             37 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         5     5      0     319
                                              5 COMRAM     4     4      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _canWaitForTxQueueToDrain                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     6     4      2     203
                                              6 COMRAM     4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5890
                                             43 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             37 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2    8152
                                             83 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             37 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0      29
                                              0 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1244
                                             33 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2841
                                             48 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2795
                                             43 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                             9     7      2     992
                                             27 COMRAM     9     7      2
                             _getEVs
                     _updateLedRange
                          _updateRGB
 ---------------------------------------------------------------------------------
 (2) _updateRGB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getEVs                                              15    15      0     395
                                             12 COMRAM    15    15      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     200
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2745
                                             83 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2635
                                             37 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    2266
                                             26 COMRAM    11     3      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             12 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     222
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1739
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1739
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     903
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     720
                                             83 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0     631
                                             10 COMRAM     4     4      0
                            _doFlash
                      _refreshString
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _refreshString                                        1     1      0      23
                           _sendByte
 ---------------------------------------------------------------------------------
 (3) _sendByte                                             2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              1     1      0     397
                                              4 COMRAM     1     1      0
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   13922
                                             59 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     529
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     166
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0   10909
                                             54 COMRAM     5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0    3664
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0    1507
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        3     3      0     763
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     318
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0     654
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0     654
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     1     1      0    3664
           _factoryResetGlobalEvents
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0    3664
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3664
                                             53 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    14    14      0    2269
                                             39 COMRAM    14    14      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     654
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     228
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      91
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1327
                                             33 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               15    13      2     432
                                             12 COMRAM    15    13      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             27 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               14    12      2     351
                                             12 COMRAM    14    12      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _readNVM                                              6     3      3     247
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (2) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (4) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         7     7      0     783
                                             10 COMRAM     7     7      0
                           _initARGB
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _updateLedRange                                       4     2      2     186
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _initARGB                                             1     1      0     156
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _initARGB
       _tickGet
       _updateLedRange
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
             _rebuildHashtable
               _getEN
                 _readNVM
                   _EEPROM_Read
                   _FLASH_Read
               _getHash
                 _getEN (ARG)
                 _getNN (ARG)
                   _readNVM
               _getNN
             _removeTableEntry
               _flushFlashBlock
                 _APP_isSuitableTimeToWriteFlash
                 _eraseFlashBlock
                   _APP_isSuitableTimeToWriteFlash
               _rebuildHashtable
               _writeNVM
                 _APP_nvDefault (ARG)
                   ___awdiv
                   ___awmod
                 _EEPROM_Write (ARG)
                   _EEPROM_Read
                   _EEPROM_WriteNoVerify
                   _updateModuleErrorStatus
                 _FLASH_Write (ARG)
                   _eraseFlashBlock
                   _flushFlashBlock
                   _loadFlashBlock
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     _doFlash
       _getNV
     _refreshString
       _sendByte
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _bootProcessMessage *
       _writeNVM
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
           _sendRTR
           _tickGet
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
       _sendMessage5
         _getParameterFlags (ARG)
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
             _updateModuleErrorStatus
         _tableIndexToEvtIdx (ARG)
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
       _APP_processConsumedEvent
         _getEVs
           _readNVM
         _updateLedRange
         _updateRGB
       _consumerEventCheckLen
         _checkLen
           _sendMessage5
       _findEvent
         _getEN
         _getHash
         _getNN
       _isConsumedEvent
         _APP_isConsumedEvent
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumerEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _canWaitForTxQueueToDrain *
       _consumerEsdData *
       _consumerGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
         _getParameterFlags
         _have
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
         _getParameter (ARG)
         _sendMessage (ARG)
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
         _APP_nvValueChanged
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
           _readNVM
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
             _findEvent
             _flushFlashBlock
             _getEN
             _rebuildHashtable
             _writeEv
               _writeNVM
             _writeNVM
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _getEN
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
       _doRqevn
         _getEN
         _sendMessage3
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _initARGB
     _setTimedResponseDelay
     _tickGet
     _updateLedRange
     _updateRGB

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0    1405     11.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRhh        472      0       0      0.0%
BITBIGSFRhllh      270      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0     252     98.4%
BITBANK7           256      0       0      0.0%
BANK7              256      0     255     99.6%
BITBANK6           256      0       0      0.0%
BANK6              256      0     192     75.0%
BITBIGSFRhllll     215      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     45     158     98.8%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     95      95    100.0%
BITBIGSFRlllh       78      0       0      0.0%
BITBIGSFRllllll     64      0       0      0.0%
BITBIGSFRlllllh     60      0       0      0.0%
BITBIGSFRlh         55      0       0      0.0%
BITBIGSFRllllh      43      0       0      0.0%
BITBIGSFRhlllh       3      0       0      0.0%
BITBIGSFRhlh         2      0       0      0.0%
BITBIGSFRllhh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    2357      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Apr 20 14:50:56 2025

                      nerdCallback@nodeNumber 0530                           findEvent@tableIndex 052E  
                   __end_of_pollTimedResponse 5B42                        ?_handleSelfEnumeration 0501  
                            sendMessage@data1 051C                              sendMessage@data2 051D  
                            sendMessage@data3 051E                              sendMessage@data4 051F  
                            sendMessage@data5 0520                              sendMessage@data6 0521  
                            sendMessage@data7 0522                           findEvent@nodeNumber 0522  
               __end_of_setTimedResponseDelay 7C70                                 ?_APP_addEvent 0547  
                        _getNumRxBuffersInUse 6D42                                            l55 7C9A  
                                          l83 72DC                                            l87 7BE4  
                                          l79 759C                         _timedResponseCallback 0585  
                         _timedResponseOpcode 05A2                                  ___awdiv@sign 0506  
                                          _nn 058D                              ?_flushFlashBlock 0501  
                     __end_of_eraseFlashBlock 68DE                                           l123 6506  
                                         l132 77FC                                           l133 7828  
                                         l134 7804                                           l118 5596  
                                         l119 55BA                                           l402 5692  
                                         l413 7C8E                                           l430 5F1A  
                                         l431 5F26                                           l520 40AC  
                                         l424 5F70                                           l345 7BCA  
                                         l441 6DB4                                           l610 7C66  
                                         l426 5EEA                                           l418 7B54  
                                         l435 6BDA                                           l451 2506  
                                         l524 7556                                           l452 2782  
                                         l460 7C42                                           l532 6928  
                                         l348 4590                                           l605 37B6  
                                         l446 24E8                                           l470 3CFE  
                                         l614 791E                                           l463 7C52  
                                         l535 695C                        __end_of_updateLedRange 766A  
                                         l624 7C2A                                           l800 69E0  
                                         l536 695E                                           l385 46BE  
                                         l466 7624                                           l730 76E6  
                                         l619 7BAE                                           l539 7C5C  
                                         l484 6F02                                           l812 794E  
                                         l725 7C94                                           l469 3B52  
                                         l805 788E                                           l398 6C52  
                                         l494 5ECA                                           l830 6E96  
                                         l910 6598                                           l822 74EA  
                                         l750 18FE                                           l574 7756  
                                         l823 750E                                           l840 749E  
                                         l736 1EBC                                           l817 7B74  
                                         l905 5D72                                           l841 74C2  
                                         l753 1992                                           l593 36A8  
                                         l826 7BFC                                           l762 1AE2  
                                         l931 4CDC                                           l915 629E  
                                         l835 6A62                                           l747 184A  
                                         l579 3868                                           l924 6356  
                                         l844 797C                                           l588 369C  
                                         l925 63D8                                           l941 7C88  
                                         l861 6AE2                                           l853 54D2  
                                         l935 60BC                                           l919 7CA4  
                                         l944 7B92                                           l848 583A  
                                         l881 77C0                                           l865 454C  
                                         l874 5768                                           l938 7C82  
                                         l947 500A                                           l971 5BFE  
                                         l948 5050                                           l957 5102  
                                         l886 3EE8                                           l966 52F2  
                                         l896 352A                               checkPowerOnPb@i 053C  
                                         l898 3582                            _enumerationResults 0631  
            ??_APP_isSuitableTimeToWriteFlash 0501               ?_APP_isSuitableTimeToWriteFlash 0501  
                                         _evs 0800                                           _pop 5B42  
                               _APP_nvDefault 4A98                                  ___awmod@sign 0506  
                                         prod 04F3                                           tosl 04FD  
                                         wreg 04E8                  tableIndexToEvtIdx@tableIndex 0501  
                     APP_nvValueChanged@index 0501                       APP_nvValueChanged@value 0501  
                                 _subtestTime 0574           __end_of_mnsTRallDiagnosticsCallback 4DFA  
                 _mnsTRallDiagnosticsCallback 4CDE                                          l1103 0CC0  
                                        l1121 0E58                                          l1202 21EE  
                                        l1122 0EC2                                          l1204 2212  
                                        l1213 78EE                                          l1222 75E0  
                                        l2102 7CBA                                          l1072 6F6E  
                                        l1152 15C6                                          l1080 475A  
                                        l1209 235A                                          l1161 1688  
                                        l1081 478E                                          l1314 76A8  
                                        l1330 7106                                          l1171 6854  
                                        l1227 43D8                                          l1323 78BE  
                                        l1075 46F2                                          l2052 411E  
                                        l2132 6150                                          l2116 6FC8  
                                        l1172 6858                                          l2053 4258  
                                        l1421 742A                                          l2117 6FD8  
                                        l1093 16E4                                          l1085 480E  
                                        l1077 4722                                          l1502 6E28  
                                        l1334 73D8                                          l2062 7004  
                                        l1342 66B8                                          l1254 6470  
                                        l2071 7668                                          l1191 2048  
                                        l1263 77F4                                          l1079 4756  
                                        l1319 7720                                          l1424 7462  
                                        l1440 70A4                                          l1176 7C40  
                                        l2064 703E                                          l1433 7228  
                                        l2081 4954                                          l1418 7C14  
                                        l2074 7C76                                          l1258 4DF8  
                                        l1427 7476                                          l1443 6CA4  
                                        l1451 6876                                          l2139 6160  
                                        l1347 2F0E                                          l1444 6CCA  
                                        l1436 7048                                          l1196 20B8  
                                        l1453 6886                                          l2093 4BBA  
                                        l1533 2F66                                          l2085 7AEE  
                                        l1454 68B8                                          l1470 6314  
                                        l1462 633C                                          l1550 3082  
                                        l1542 3020                                          l1198 20F4  
                                        l1374 7332                                          l1535 2F6E  
                                        l2336 5A80                                          l1544 303A  
                                        l1368 7B32                                          l1528 7AA0  
                                        l1473 6338                                          l1465 62C8  
                                        l1553 3104                                          l1626 6D40  
                                        l1458 68DC                                          l1482 7386  
                                        l1570 321A                                          l1562 31B8  
                                        l1546 3056                                          l1467 62E6  
                                        l1555 310C                                          l1803 6016  
                                        l2099 7CA8                                          l1619 7168  
                                        l1476 7334                                          l1564 31D2  
                                        l1572 329A                                          l1548 306C  
                                        l1652 724C                                          l1469 62F6  
                                        l2349 5E20                                          l1661 5B40  
                                        l1478 7344                                          l1494 71CA  
                                        l1566 31EE                                          l1582 497E  
                                        l1646 7C7C                                          l1479 7370  
                                        l1487 4E56                                          l1568 3204  
                                        l1584 497E                                          l1576 495C  
                                        l1912 7CB0                                          l1656 7270  
                                        l1489 4F08                                          l1585 498A  
                                        l1921 5332                                          l1657 7284  
                                        l1906 7CA0                                          l1922 53E8  
                                        l1834 6200                                          l1666 5B00  
                                        l1595 4A02                                          l1579 4972  
                                        l1915 7CB4                                          l1763 6744  
                                        l1851 79FA                                          l1819 2B46  
                                        l1596 4A96                                          l1860 79A6  
                                        l1828 2B62                                          l1909 7CAC  
                                        l1781 51FA                                          l1790 59BE  
                                        l1838 778A                                          l1854 79D0  
                                        l1918 7B10                                          l1775 5006  
                                        l1839 778C                                          l1863 7A4E  
                                        l1848 7A24                                          l1784 7C6E  
                                        l1880 5C22                                          l1769 67D0  
                                        l1857 7A78                                          l1873 5C0E  
                                        l1794 58BA                                          l1882 5C9A  
                                        l1787 597C                                          l1875 5C1C  
                              _bootloaderType 05AA                                          l1868 662A  
                                        l1876 5C1E                                          l1797 58FC  
                                        l1877 5C5A                                          l7110 6CA8  
                                        l7102 6C54                                          l2782 7428  
                                        l1878 5C20                                          l7112 6CC2  
                                        l7104 6C86                                          l7120 686E  
                                        l7200 737E                                          l8000 61FE  
                                        l7210 6CDE                                          l7130 68DA  
                                        l7122 688A                                          l7202 7382  
                                        l8010 7932                                          l7220 6D12  
                                        l7212 6CEA                                          l7204 6CCC  
                                        l7132 6DB8                                          l7124 68AC  
                                        l7116 685A                                          l7300 4E2C  
                                        l8004 7C90                                          l7230 6D30  
                                        l7222 6D22                                          l7214 6CFC  
                                        l7206 6CD2                                          l7142 6DF2  
                                        l7134 6DBC                                          l7126 68B6  
                                        l7118 685A                                          l7310 4E6E  
                                        l7302 4E40                                          l8006 79D4  
                                        l8102 7980                                          l8014 793E  
                                        l7216 6D0C                                          l7224 6D24  
                                        l7208 6CDA                                          l7080 7BCC  
                                        l7128 68C6                                          l7320 4F06  
                                        l7304 4E4E                                          l7312 4E72  
                                        l7240 7608                                          l7400 67BE  
                                        l8120 63D6                                          l8104 6340  
                                        l8032 6730                                          l8024 66BE  
                                        l8200 42BE                                          l8040 722C  
                                        l8008 7922                                          l9000 72DE  
                                        l7226 6D2A                                          l7218 6D0E  
                                        l7090 742A                                          l7138 6DD6  
                                        l7154 7C2C                                          l7082 7BDC  
                                        l7170 6302                                          l7162 62B4  
                                        l7314 4EBE                                          l7306 4E52  
                                        l7330 7188                                          l8130 6F52  
                                        l7242 7618                                          l7234 75E2  
                                        l7402 67CE                                          l8114 6358  
                                        l8106 6350                                          l8034 6732  
                                        l8026 66EA                                          l8018 66BC  
                                        l8050 7260                                          l8042 7230  
                                        l9002 72EE                                          l7228 6D2E  
                                        l7092 743A                                          l7148 6DFE  
                                        l7260 4C20                                          l7252 4BBE  
                                        l7180 7058                                          l7156 7C3E  
                                        l7172 6312                                          l7164 62D8  
                                        l7316 4EE8                                          l7308 4E5A  
                                        l7324 716C                                          l8124 6F04  
                                        l9100 31E4                                          l7244 761E  
                                        l7236 75EA                                          l7412 5274  
                                        l7500 23BA                                          l8116 63C4  
                                        l8036 6742                                          l8028 672A  
                                        l8212 42FA                                          l8204 42D2  
                                        l8132 425C                                          l8052 7276  
                                        l8044 7240                                          l8300 78AE  
                                        l8060 7C80                                          l7094 7458  
                                        l7246 601A                                          l7270 7B76  
                                        l7262 4C2E                                          l7254 4BCE  
                                        l7190 70A2                                          l7182 7076  
                                        l7086 7BE2                                          l7174 6322  
                                        l7166 62DC                                          l7158 62A0  
                                        l7318 4EEA                                          l7326 7170  
                                        l8126 6F0A                                          l9102 31E6  
                                        l9030 2F98                                          l9022 2F10  
                                        l8310 73A6                                          l7238 75FA  
                                        l7430 6EAC                                          l7422 6E9A  
                                        l7414 5292                                          l7406 51FC  
                                        l7350 6B78                                          l7342 6B62  
                                        l7510 2414                                          l7502 23C0  
                                        l8118 63C6                                          l8150 4278  
                                        l8142 426C                                          l8134 4260  
                                        l8230 432A                                          l8054 727A  
                                        l8046 7246                                          l8070 6204  
                                        l9014 7314                                          l9006 72F4  
                                        l8400 4222                                          l9200 38DE  
                                        l7096 7460                                          l7248 60AA  
                                        l7272 7B7C                                          l7264 4C3A  
                                        l7184 707A                                          l7280 71CC  
                                        l7176 6336                                          l7168 62E4  
                                        l7192 7334                                          l7336 71A0  
                                        l7600 3ECC                                          l8128 6F36  
                                        l9104 31F0                                          l9040 2FE8  
                                        l9032 2FAA                                          l9024 2F4A  
                                        l8312 73B6                                          l8304 738A  
                                        l7440 6EE4                                          l7432 6EAE  
                                        l7416 52BC                                          l7408 5268  
                                        l7360 6D52                                          l7352 6BD0  
                                        l7344 6B72                                          l7520 24A0  
                                        l7512 2430                                          l7504 23C8  
                                        l8064 79FE                                          l8208 42E6  
                                        l8232 79AA                                          l8048 7250  
                                        l8240 78DE                                          l8320 7CA6  
                                        l8056 7C86                                          l8072 6214  
                                        l9016 732A                                          l9008 7302  
                                        l8402 424C                                          l8330 40B6  
                                        l9210 391A                                          l9202 38E0  
                                        l7098 7470                                          l7274 7B8C  
                                        l7266 4CCA                                          l7258 4BDA  
                                        l7186 7086                                          l7178 7040  
                                        l7290 720C                                          l7282 71CE  
                                        l7194 7348                                          l7602 3ECE  
                                        l9114 321C                                          l9050 303C  
                                        l9042 300A                                          l9034 2FB0  
                                        l9122 3230                                          l9026 2F4E  
                                        l8250 4976                                          l8306 739A  
                                        l7442 6EF8                                          l7434 6EBE  
                                        l7418 52CA                                          l7370 6DB2  
                                        l7354 6BD8                                          l7530 24FE  
                                        l7514 244C                                          l7506 23E4  
                                        l7522 24BC                                          l8170 4292  
                                        l8162 4284                                          l8146 4272  
                                        l8138 4266                                          l8234 78C2  
                                        l8410 77F8                                          l8082 623C  
                                        l9018 7330                                          l8066 7AF0  
                                        l8090 77B4                                          l8404 424E  
                                        l8340 4120                                          l8332 40EC  
                                        l8324 40AE                                          l9212 392C  
                                        l9204 38F0                                          l7276 7B90  
                                        l7460 502E                                          l7188 7090  
                                        l7292 7214                                          l7284 71E2  
                                        l7196 7362                                          l7604 3EDE  
                                        l9108 3206                                          l9060 306E  
                                        l9052 304C                                          l9036 2FD2  
                                        l9028 2F76                                          l8260 49B8  
                                        l8252 4982                                          l8244 4958  
                                        l8316 73C2                                          l9140 6FF4  
                                        l7444 6EFE                                          l7436 6ED4  
                                        l7428 6E9E                                          l8500 4078  
                                        l7380 7786                                          l7540 253C  
                                        l7524 24C8                                          l7516 2468  
                                        l7508 23F8                                          l7700 65F4  
                                        l7620 5CD4                                          l7612 5CBC  
                                        l8180 42B2                                          l8236 78D2  
                                        l8412 780C                                          l8076 6220  
                                        l8420 68E0                                          l9300 5504  
                                        l8406 4252                                          l8350 4150  
                                        l8342 413A                                          l8334 40FC  
                                        l9230 3966                                          l9222 3940  
                                        l9214 393A                                          l9206 38F6  
                                        l7470 5052                                          l7462 503E  
                                        l7446 5008                                          l7294 7226  
                                        l7198 736E                                          l7606 3EE2  
                                        l7710 59DC                                          l7702 59C0  
                                        l9150 6F70                                          l9054 304E  
                                        l9046 3022                                          l8270 49FA  
                                        l8262 49C8                                          l8254 498E  
                                        l8246 4966                                          l9142 7008  
                                        l7438 6EDE                                          l7366 6D58  
                                        l7358 6D42                                          l7390 674A  
                                        l7374 775A                                          l7550 2622  
                                        l7542 2544                                          l7534 2514  
                                        l7526 24E0                                          l7518 2484  
                                        l7630 5D26                                          l7622 5CF4  
                                        l7614 5CD2                                          l8174 4298  
                                        l8166 428A                                          l8158 427E  
                                        l8510 7B3A                                          l8078 6230  
                                        l8094 77BA                                          l8086 778E  
                                        l8430 6936                                          l8422 68E2  
                                        l9310 5536                                          l9302 552A  
                                        l8408 4254                                          l8360 415A  
                                        l8352 4152                                          l8344 413C  
                                        l8336 410C                                          l9240 3A46  
                                        l9232 3968                                          l9224 3950  
                                        l9216 393C                                          l9208 3908  
                                        l7480 508E                                          l7472 506A  
                                        l7464 5040                                          l7456 500C  
                                        l7288 7206                                          l7608 3EE6  
                                        l7720 5A10                                          l7712 59EA  
                                        l7704 59C2                                          l9160 60BE  
                                        l9152 6F80                                          l9080 3146  
                                        l9056 3058                                          l9048 3032  
                                        l8272 4A08                                          l8264 49D0  
                                        l8256 499E                                          l8248 496C  
                                        l9144 701A                                          l9136 6FDA  
                                        l8440 3EEE                                          l7368 6DAA  
                                        l7392 6776                                          l7384 6748  
                                        l7376 775C                                          l7560 2684  
                                        l7552 2630                                          l7544 254C  
                                        l7536 251A                                          l7528 24F8  
                                        l8600 5384                                          l7640 5D5E  
                                        l7632 5D3E                                          l7624 5D04  
                                        l8520 7B46                                          l7800 32C8  
                                        l8088 77A4                                          l9320 6472  
                                        l8432 693E                                          l8424 68F6  
                                        l9312 5546                                          l8370 4168  
                                        l8362 415C                                          l8354 4154  
                                        l8346 4140                                          l8338 410E  
                                        l9250 3AE0                                          l9234 397C  
                                        l9226 3952                                          l7490 50F2  
                                        l7482 50BA                                          l7474 508C  
                                        l7458 502C                                          l7298 4DFA  
                                        l7730 5A4A                                          l7722 5A18  
                                        l7714 59F2                                          l7706 59D0  
                                        l8290 7696                                          l8282 766A  
                                        l9170 6106                                          l9162 60CE  
                                        l9154 6F8E                                          l9090 31A2  
                                        l9082 314C                                          l9066 3084  
                                        l9074 3098                                          l8266 49E2  
                                        l8258 49B0                                          l9146 7020  
                                        l9138 6FE2                                          l8450 3F74  
                                        l8442 3F28                                          l7394 67B6  
                                        l7378 7770                                          l7570 2710  
                                        l7562 26A0                                          l7554 263E  
                                        l7546 25B2                                          l7538 252C  
                                        l8530 5B78                                          l8610 53CC  
                                        l8602 5392                                          l7634 5D56  
                                        l8522 7C42                                          l8418 7812  
                                        l8514 7B40                                          l8098 7CA2  
                                        l7810 32FE                                          l7802 32CA  
                                        l9322 6492                                          l8434 6958  
                                        l8426 6906                                          l9314 5556  
                                        l9306 5530                                          l9410 4652  
                                        l9402 4646                                          l8380 41A0  
                                        l8372 4186                                          l8364 415E  
                                        l8356 4156                                          l8348 4142  
                                        l9252 3AF4                                          l9236 3A36  
                                        l9228 3962                                          l9244 3A5E  
                                        l7484 50DE                                          l7652 7B58  
                                        l7740 5A70                                          l7732 5A52  
                                        l7724 5A20                                          l7716 59F6  
                                        l7708 59D8                                          l8292 7698  
                                        l9180 614A                                          l9172 6110  
                                        l9164 60E4                                          l9156 6F9E  
                                        l9084 316C                                          l9076 3114  
                                        l8268 49EA                                          l8276 4A14  
                                        l9260 4818                                          l9148 7036  
                                        l8460 3FD0                                          l8452 3F90  
                                        l8444 3F32                                          l7580 275A  
                                        l7572 272C                                          l7564 26BC  
                                        l7556 264C                                          l7548 2608  
                                        l7492 235C                                          l8532 5BB0  
                                        l8524 5B42                                          l8612 53D0  
                                        l8604 53A0                                          l7628 5D0A  
                                        l8188 42B8                                          l8508 7B36  
                                        l8620 7B96                                          l7660 650A  
                                        l7812 3416                                          l9332 64BA  
                                        l8428 6918                                          l9308 5534  
                                        l9420 4656                                          l9404 4646  
                                        l8390 41FC                                          l8382 41D4  
                                        l8374 4188                                          l8366 4164  
                                        l8358 4158                                          l9254 3B02  
                                        l9238 3A44                                          l9246 3A94  
                                        l9190 3876                                          l9182 386A  
                                        l7486 50E0                                          l7590 3D02  
                                        l7654 7B5E                                          l7646 7B56  
                                        l7742 5A78                                          l7734 5A54  
                                        l7726 5A2E                                          l7718 59FE  
                                        l7750 5D84                                          l9174 612E  
                                        l9166 60EC                                          l9158 6FA8  
                                        l9094 31BA                                          l9078 3134  
                                        l9270 493C                                          l8470 4004  
                                        l8462 3FD2                                          l8454 3FA0  
                                        l8446 3F6C                                          l8438 3EEA  
                                        l7398 67BC                                          l7582 2762  
                                        l7574 2732                                          l7566 26D8  
                                        l7558 2668                                          l7494 237E  
                                        l8550 740A                                          l8542 73DA  
                                        l8534 5BBE                                          l8526 5B6C  
                                        l8614 53E0                                          l8606 53B0  
                                        l7638 5D5C                                          l8294 7892  
                                        l8622 7B9A                                          l7662 651A  
                                        l7814 3426                                          l7830 3532  
                                        l7806 32DE                                          l8710 44BA  
                                        l8702 4470                                          l9334 64D2  
                                        l9326 6498                                          l9510 5620  
                                        l9318 55A2                                          l9422 4658  
                                        l9406 464A                                          l8392 41FE  
                                        l8384 41D6                                          l8376 418A  
                                        l8368 4166                                          l7920 763C  
                                        l9248 3AA6                                          l9192 3878  
                                        l9184 386E                                          l7488 50F0  
                                        l7592 3E60                                          l7656 7B60  
                                        l7736 5A5A                                          l7728 5A34  
                                        l7760 5DB8                                          l7752 5D8C  
                                        l7904 4B7A                                          l8288 766E  
                                        l9176 613E                                          l9168 60F8  
                                        l9096 31CA                                          l9088 3182  
                                        l9272 493E                                          l9264 481A  
                                        l9280 7AE2                                          l8480 401A  
                                        l8464 3FE0                                          l8456 3FC0  
                                        l8472 4010                                          l8448 3F72  
                                        l7584 2774                                          l7576 2736  
                                        l7568 26F4                                          l7496 2394  
                                        l7680 65A0                                          l8560 5E74  
                                        l8544 73EE                                          l8552 740E  
                                        l8536 5BE8                                          l8608 53BE  
                                        l8296 78A2                                          l8632 7BA0  
                                        l7672 6536                                          l7824 34B8  
                                        l7816 3470                                          l7808 32EC  
                                        l7840 3550                                          l8720 44FA  
                                        l8712 44C0                                          l8704 4480  
                                        l8800 5464                                          l8640 699A  
                                        l9344 64D8                                          l9504 55FE  
                                        l9440 466C                                          l9424 465C  
                                        l9408 464E                                          l9360 457A  
                                        l9352 454E                                          l9256 7C6A  
                                        l8394 4200                                          l8386 41D8  
                                        l8378 418C                                          l7922 7644  
                                        l9194 388C                                          l9186 3872  
                                        l7658 7B70                                          l7914 7C96  
                                        l7738 5A60                                          l7770 5DF4  
                                        l7762 5DC0                                          l7754 5D90  
                                        l7746 5D74                                          l7906 4BB8  
                                        l7930 7BB0                                          l9178 6140  
                                        l9098 31D4                                          l9274 494E  
                                        l9266 482C                                          l9258 4810  
                                        l8490 405A                                          l8482 402E  
                                        l8474 4016                                          l8466 3FF0  
                                        l8458 3FCC                                          l7586 277E  
                                        l7578 2742                                          l7498 23A8  
                                        l7690 65B4                                          l7682 65A4  
                                        l8562 5E78                                          l8554 5E24  
                                        l8546 73FA                                          l8538 5BF6  
                                        l8810 7862                                          l7674 6596  
                                        l7666 6520                                          l7850 357C  
                                        l7842 356E                                          l7826 3518  
                                        l7818 34B6                                          l7834 3538  
                                        l8730 7954                                          l8706 4488  
                                        l8802 5476                                          l8642 69C0  
                                        l8650 69CC                                          l8634 6960  
                                        l9514 5626                                          l9290 54E6  
                                        l9282 54D4                                          l9450 4672  
                                        l9442 4670                                          l9434 4664  
                                        l9426 4660                                          l9418 4656  
                                        l9370 459C                                          l9362 4588  
                                        l9354 4554                                          l9610 773A  
                                        l9602 7722                                          l8396 4202  
                                        l8388 41FA                                          l7924 7654  
                                        l7916 7628                                          l9196 388E  
                                        l9188 3874                                          l7772 5DFA  
                                        l7764 5DC8                                          l7756 5D9E  
                                        l7748 5D76                                          l7932 7BB4  
                                        l9268 48B6                                          l9276 7ACC  
                                        l8492 405C                                          l8468 4000  
                                        l7692 65B8                                          l7684 65A8  
                                        l8564 5E7E                                          l8556 5E28  
                                        l8548 73FE                                          l8580 7C60  
                                        l7860 67EA                                          l7940 5EF6  
                                        l8820 7872                                          l8812 7866  
                                        l8900 63DA                                          l7668 6530  
                                        l7852 3580                                          l7836 354A  
                                        l7828 351A                                          l8732 7962  
                                        l8724 452E                                          l8708 4498  
                                        l8716 44DA                                          l8804 5484  
                                        l8636 6970                                          l9516 563E  
                                        l9620 35C2                                          l9292 54E6  
                                        l9284 54DA                                          l9460 467C  
                                        l9452 4672                                          l9436 4664  
                                        l9380 45EA                                          l9372 45B2  
                                        l9364 4594                                          l9356 455C  
                                        l9612 773C                            doEvuln@eventNumber 053D  
                                        l8398 4210                                          l7926 7656  
                                        l7918 7638                                          l9198 38CA  
                                        l7598 3E62                                          l7782 7C9C  
                                        l7766 5DD6                                          l7774 5E00  
                                        l7758 5DA6                                          l9278 7AD0  
                                        l7790 6C42                                          l8494 406C  
                                        l7694 65BC                                          l7686 65AC  
                                        l7678 659C                                          l8558 5E62  
                                        l9550 3B4C                                          l9542 7C8A  
                                        l7870 6818                                          l7862 67EC  
                                        l7942 5F08                                          l7934 5ECE  
                                        l8830 6E3A                                          l8902 63EA  
                                        l8670 580E                                          l8662 57AC  
                                        l8654 576A                                          l8734 7BE6  
                                        l8750 74FC                                          l8742 74C8  
                                        l8718 44EC                                          l8638 698A  
                                        l8646 69C6                                          l9630 3624  
                                        l9470 4688                                          l9462 467E  
                                        l9454 4676                                          l9438 4668  
                                        l9390 460C                                          l9382 45EC  
                                        l9374 45B6                                          l9358 4560  
                                        l9614 774C                                          ?_pop 0501  
                                        l7776 5E10                                          l7768 5DEC  
                                        l7784 6BDC                                          l7960 7550  
                                        l7952 7512                                          l8488 4030  
                                        l8496 4070                                          l7696 65C0  
                                        l7688 65B0                                          l7792 7A52  
                                        l8568 5E96                                          l9560 3B68  
                                        l9544 3B0A                                          l7928 7C70  
                                        l8584 52F6                                          l8576 7C16  
                                        l7880 6852                                          l7872 682E  
                                        l7864 6802                                          l7856 67D2  
                                        l7936 5EDE                                          l8816 786C  
                                        l8840 6E6E                                          l8920 4D4C  
                                        l8912 4CDE                                          l7848 3578  
                                        l8672 5812                                          l8664 57CC  
                                        l8656 576C                                          l8680 6A7A  
                                        l8728 7950                                          l8744 74D6  
                                        l8736 74C4                                          l8808 54B8  
                                        l8760 748A                                          l8752 7478  
                                        l9528 565C                                          l9640 3648  
                                        l9624 35C8                                          l9616 3584  
                                        l9720 76E2                                          l9712 76B2  
                                        l9704 76AA                                          l9480 46AE  
                                        l9472 468C                                          l9464 4680  
                                        l9456 4678                                          l9392 461E  
                                        l9384 45EE                                          l9376 45D2  
                                        l9608 7726                                          l7778 5E18  
                                        l7890 4AB0                                          l7786 6BE8  
                                        l7954 7522                                          l7698 65D4  
                                        l9570 3BAA                                          l9562 3B74  
                                        l9546 3B1E                                          l8586 5316  
                                        l7970 7A28                                          l7882 6856  
                                        l7874 6830                                          l7866 6804  
                                        l7858 67D4                                          l7946 5F32  
                                        l8826 7878                                          l8850 56D0  
                                        l8842 6E94                                          l8834 6E40  
                                        l8930 4DF6                                          l8922 4DAE  
                                        l8914 4D28                                          l8906 63F0  
                                        l7794 329C                                          l8674 5820  
                                        l8666 57DE                                          l8658 577C  
                                        l8682 6A8A                                          l8770 69EC  
                                        l8746 74E8                                          l8690 43F0  
                                        l8762 749C                                          l9626 35E8  
                                        l9618 35A2                                          l9650 3654  
                                        l9722 76E4                                          l9714 76C6  
                                        l9706 76AE                                          l9298 54E8  
                                        l9490 46BC                                          l9482 46B2  
                                        l9466 4682                                          l9458 467A  
                                        l9394 462C                                          l9474 4692  
                                        l9386 45F2                                          l9378 45DC  
                                        l7788 6C3E                                          l7956 7532  
                                        l9572 3BB0                                          l9564 3B8C  
                                        l9556 3B62                                          l9548 3B30  
                                        l8596 5334                                          l8588 532C  
                                        l7972 7CAA                                          l7876 6840  
                                        l7868 6816                                          l7948 5F60  
                                        l8860 5726                                          l8836 6E4E  
                                        l8828 6E2A                                          l8940 77D8  
                                        l8916 4D46                                          l8908 646E  
                                        l7796 32B2                                          l8772 69FC  
                                        l8748 74EC                                          l8692 4400  
                                        l8780 53EC                                          l8764 74A0  
                                        l9812 196A                                          l9732 1714  
                                        l9724 16E6                                          l9492 55BC  
                                        l9628 3606                                          l9716 76C8  
                                        l9484 46B4                                          l9476 4696  
                                        l9468 4684                                          l9388 45F6  
                                        l7894 4AEE                                          l7886 4A9A  
                                        l7958 7536                                          l9574 3BB6  
                                        l9566 3B94                                          l8598 5374  
                                        l7990 6194                                          l8870 75A2  
                                        l7878 6842                                          l7982 790E  
                                        l8862 5748                                          l8854 56D6  
                                        l8846 5696                                          l8838 6E60  
                                        l8942 77F2                                          l8934 77C2  
                                        l7798 32C2                                          l8686 6ABA  
                                        l8678 6A64                                          l8790 541E  
                                        l8782 53F4                                          l8766 74B0  
                                        l8758 747C                                          l9910 1C0C  
                                        l9822 19A6                                          l9806 1912  
                                        l9750 1786                                          l9734 1734  
                                        l9726 16EA                                          l9494 55D4  
                                        l9670 3752                                          l9638 362A  
                                        l9646 364E                                          l7966 7C54  
                                        l9718 76D8                                          l9486 46B8  
                                        l9478 469A                                          l8880 4F0A  
                                        l9576 3BD0                                          l9584 3BDC  
                                        l9568 3B9C                                          l7992 61B4  
                                        l8872 75AC                                          l7976 78F2  
                                        l8864 5766                                          l8856 5704  
                                        l8848 569E                                          l8936 77D2  
                                        l8928 4DC4                                          l8776 6A2C  
                                        l8768 69E4                                          l8696 4430  
                                        l8688 43DA                                          l8792 542E  
                                        l8784 5404                                          l9904 1C04  
                                        l9752 17A6                                          l9744 175E  
                                        l9736 1752                                          l9728 170E  
                                        l9672 3788                                          l9656 3670  
                                        l8960 70F4                                          l8952 70AA  
                                        l9488 46BA                                          l7898 4B34  
                                        l8890 4F82                                          l9594 3C16  
                                        l9586 3BF6                                          l9578 3BD6  
                                        l7994 61D2                                          l7986 6162  
                                        l8874 75B6                                          l7978 7902  
                                        l8970 6644                                          l8858 5712  
                                        l8778 6A48                                          l8698 4440  
                                        l8794 5436                                          l9930 1C7E  
                                        l9834 1A36                                          l9754 17C4  
                                        l9738 1758                                          l9498 55DA  
                                        l9690 3840                                          l9658 369C  
                                        l8962 70F6                                          l8954 70D2  
                                        l8946 70A6                                          l8892 4FDA  
                                        l9596 3CF6                                          l9588 3C0E  
                                        l7996 61F8                                          l7988 617C  
                                        l8868 759E                                          l8980 66A8  
                                        l8972 665E                                          l8964 662E  
                                        l8796 5446                                          l8788 541A  
                                        l9924 1C76                                          l9916 1C34  
                                        l9836 1A56                                          l9828 1A0E  
                                        l9780 1834                                          l9764 17E6  
                                        l9772 1808                                          l9692 3850  
                                        l9684 37C6                                          l9668 36AC  
                                        l8894 4FDC                                          l8886 4F0C  
                                        l8878 75C0                                          l8982 66B6  
                                        l8966 663E                                          l8798 544A  
                                        l9950 1CFE                                          l9918 1C54  
                                        l9870 1B28                                          l9862 1AF0  
                                        l9854 1AA0                                          l9790 185E  
                                        l9774 180A                                          l9694 3860  
                                        l9686 37DC                                          l9678 379C  
                                        l8958 70E4                                          l8896 4FEC  
                                        l8888 4F38                                          l8992 7B1E  
                                        l8976 6664                                          l9944 1CE8  
                                        l9936 1CA6                                          l9856 1AC0  
                                        l9848 1A78                                          l9696 3866  
                                        l9688 383A                                          l8898 5002  
                                        l8986 7B14                                          l8978 6684  
                                        l9970 1D8E                                          l9938 1CC6  
                                        l9890 1B9A                                          l9778 1810  
                                        l8988 7B18                                          l9964 1D68  
                                        l9956 1D26                                          l9884 1B92  
                                        l9876 1B50                                          l9868 1B20  
                                        l9796 18D6                                          l8998 7B24  
                                        l9958 1D46                                          l9878 1B70  
                                        l9976 1DB6                                          l9896 1BC2  
                                        l9984 1E2E                                          l9898 1BE2  
                                        l9994 46C0                                          l9996 46DA  
                      __end_of_checkPowerOnPb 6018                                          l9998 46E8  
                                        u5000 253C                                          u5001 2538  
                                        u5010 275A                                          _T2PR 0323  
                                        u5011 2756                                          u5020 2774  
                                        u5100 6530                                          u5021 2770  
                                        u5101 652C                                          u5030 3EDE  
                                        u5110 65D4                                          u5031 3EDA  
                                        u5111 65D0                                          u5200 5D84  
                                        u5120 65F4                                          u6000 5392  
                                        u5040 5D04                                          u5201 5D80  
                                        u5121 65F0                                          u6001 538E  
                                        u5041 5D00                                          _IPR5 0367  
                                        u4410 7BDC                                          u5210 5D9E  
                                        u6010 53B0                                          u5050 5D3E  
                                        _T4PR 032F                                          u4411 7BD8  
                                        u5211 5D9A                                          u6011 53AC  
                                        u5051 5D3A                                          u4420 743A  
                                        u4500 62B0                                          u5140 59D0  
                                        u5220 5DB8                                          u6020 53BE  
                                        u5060 5D56                                          u5300 3426  
                                        u6100 4400                                          u4421 7436  
                                        u4501 62AC                                          u5141 59CC  
                                        u5221 5DB4                                          u6021 53BA  
                                        u5061 5D52                                          u5301 3422  
                                        u6101 43FC                                          u4430 7470  
                                        u4510 62C8                                          u5150 59EA  
                                        u5230 5DD6                                          u6030 53E0  
                                        u5070 5D6E                                          u5310 352A  
                                        u6110 4440                                          u4431 746C  
                                        u4511 62C4                                          u5151 59E6  
                                        u5231 5DD2                                          u6031 53DC  
                                        u5071 5D6A                                          u5311 3526  
                                        u6111 443C                                          u4600 6CFC  
                                        u4440 6C86                                          u4520 62D8  
                                        u5080 7B70                                          u5160 5A10  
                                        u5240 5DEC                                          u5400 4AAC  
                                        u5320 354A                                          u6120 4480  
                                        u6200 5404                                          u6040 6970  
                                        u7000 35E8                             doEvuln@nodeNumber 053B  
                                        u4601 6CF8                                          u4441 6C82  
                                        u4521 62D4                                          u5081 7B6C  
                                        u5161 5A0C                                          u5241 5DE8  
                                        u5401 4AA8                                          u5321 3546  
                                        u6121 447C                                          u6201 5400  
                                        u6041 696C                                          u7001 35E4  
                                        u4610 6D0C                                          u5410 7638  
                                        u4450 686E                                          u4530 62F6  
                                        u5170 5A2E                                          u5250 5E10  
                                        u5138 6618                                          u5090 651A  
                                        u5330 356E                                          u6130 4498  
                                        u6210 542E                                          u6050 698A  
                                        u7010 3606                                          u4611 6D08  
                                        u5411 7634                                          u4451 686A  
                                        u4531 62F2                                          u5171 5A2A  
                                        u5251 5E0C                                          u5139 662A  
                                        u5091 6516                                          u5331 356A  
                                        u6131 4494                                          u6211 542A  
                                        u6051 6986                                          u7011 3602  
                                        u4620 6D22                                          u5420 7668  
                                        u4460 6886                                          u4540 6322  
                                        u5180 5A4A                                          u6300 4F82  
                                        u5260 6C52                                          u5500 61D2  
                                        u5340 67EA                                          u6140 44FA  
                                        u6220 5446                                          u6060 699A  
                                        u7020 3624                                          u7100 76D8  
                                        u4621 6D1E                                          u5421 7664  
                                        u4461 6882                                          u4541 631E  
                                        u5181 5A46                                          u6301 4F7E  
                                        u5261 6C4E                                          u5501 61CE  
                                        u5341 67E6                                          u6141 44F6  
                                        u6221 5442                                          u6061 6996  
                                        u7021 3620                                          u7101 76D4  
                                        u4630 4BCE                                          u4470 68C6  
                                        u4550 6336                                          u4710 4EE8  
                                        u5190 5A70                                          u5350 6802  
                                        u5510 7932                                          u5430 5EDE  
                                        u5270 32C2                                          u6070 577C  
                                        u6150 74E8                                          u6230 5484  
                                        u7110 170E                                          u7030 3648  
                                        u4631 4BCA                                          u4471 68C2  
                                        u4551 6332                                          u4711 4EE4  
                                        u5191 5A6C                                          u5351 67FE  
                                        u5511 792E                                          u5431 5EDA  
                                        u5271 32BE                                          u6071 5778  
                                        u6151 74E4                                          u6231 5480  
                                        u7111 170A                                          u7031 3644  
                                        u4640 4C2E                                          u4560 7058  
                                        u4480 68DA                                          u6320 4FEC  
                                        u5440 7522                                          u4720 6B72  
                                        u4800 6776                                          u8000 2178  
                                        u5520 66EA                                          u5360 6816  
                                        u6400 663E                                          u6240 6E3A  
                                        u5280 32DA                                          u6080 57DE  
                                        u5600 77B4                                          u6160 74FC  
                                        u7200 185A                                          u7120 1734  
                                        u7040 366C                                          u4641 4C2A  
                                        u4561 7054                                          u4481 68D6  
                                        u6321 4FE8                                          u5441 751E  
                                        u4721 6B6E                                          u4801 6772  
                                        u8001 2174                                          u5521 66E6  
                                        u5361 6812                                          u6401 663A  
                                        u6241 6E36                                          u5281 32D6  
                                        u6081 57DA                                          u5601 77B0  
                                        u6161 74F8                                          u7201 1856  
                                        u7121 1730                                          u7041 3668  
                                        u4570 70A2                                          u4490 7C3E  
                                        u4650 7202                                          u5450 7532  
                                        u4730 6BA0                                          u4810 67B6  
                                        u5610 6350                                          u8010 218C  
                                        u5530 672A                                          u5370 682E  
                                        u6410 665E                                          u6250 6E60  
                                        u6330 63EA                                          u5290 32FE  
                                        u6090 6A8A                                          u6170 749C  
                                        u7210 18FA                                          u7130 1752  
                                        u7050 3798                                          u4571 709E  
                                        u4491 7C3A                                          u4651 71FE  
                                        u5451 752E                                          u4811 67B2  
                                        u5611 634C                                          u8011 2188  
                                        u5531 6726                                          u5371 682A  
                                        u6411 665A                                          u6251 6E5C  
                                        u6331 63E6                                          u5291 32FA  
                                        u6091 6A86                                          u6171 7498  
                                        u7211 18F6                                          u7131 174E  
                                        u7051 3794                                          u4900 50BA  
                                        u4580 7344                                          u4708 4EA6  
                                        u4660 4E2C                                          u5700 76A8  
                                        u6500 3068                                          u4740 6BD0  
                                        u4820 67CE                                          u5620 63D6  
                                        u8020 21E8                                          u5540 6742  
                                        u5380 6840                                          u5460 7902  
                                        u6260 56D0                                          u6340 4D28  
                                        u6420 72EE                                          u6180 74B0  
                                        u7300 1ADE                                          u7220 190E  
                                        u7140 1782                                          u7060 37B2  
                                        u8100 2B7C                                          u4901 50B6  
                                        u4581 7340                                          u4661 4E28  
                                        u5701 76A4                                          u6501 3064  
                                        u4741 6BCC                                          u4821 67CA  
                                        u5621 63D2                                          u8021 21E4  
                                        u5541 673E                                          u5381 683C  
                                        u5461 78FE                                          u6261 56CC  
                                        u6341 4D24                                          u6421 72EA  
                                        u6181 74AC                                          u7301 1ADA  
                                        u7221 190A                                          u7141 177E  
                                        u7061 37AE                                          u8101 2B78  
                                        u4910 50F0                                          u4590 737E  
                                        u4670 4E40                                          u6318 4FC8  
                                        u6510 307E                                          u4830 5268  
                                        u4750 6D52                                          u5470 617C  
                                        u8030 2220                                          u5390 6852  
                                        u5630 42AE                                          u5550 7240  
                                        u5710 78A2                                          u6270 5712  
                                        u6430 7310                                          u6190 69FC  
                                        u7310 1AF0                                          u7230 198E  
                                        u7150 17A6                                          u7070 37C6  
                                        u8110 2BA2                                          u4911 50EC  
                                        u4591 737A                                          u4671 4E3C  
                                        u6319 4FDA                                          u6511 307A  
                                        u4831 5264                                          u4751 6D4E  
                                        u4735 6B96                                          u5471 6178  
                                        u8031 221C                                          u5391 684E  
                                        u5631 42AA                                          u5551 723C  
                                        u5711 789E                                          u6271 570E  
                                        u6431 730C                                          u6191 69F8  
                                        u7311 1AEC                                          u7231 198A  
                                        u7151 17A2                                          u7071 37C2  
                                        u8111 2B9E                                          u4920 5102  
                                        u4680 4E4E                                          u6600 322C  
                                        u6520 3094                                          u6440 2F4A  
                                        u5720 739A                                          u5800 3F28  
                                        u4840 52BC                                          u4760 6D80  
                                        u5480 6194                                          u8040 2230  
                                        u5640 4326                                          u5560 7260  
                                        u6280 5726                                          u6360 4DC0  
                                        u7400 1C72                                          u7320 1B4C  
                                        u7240 19A2                                          u7160 17C4  
                                        u7080 37DC                                          u8200 2E18  
                                        u8120 2BC4                                          u4921 50FE  
                                        u4681 4E4A                                          u6601 3228  
                                        u6521 3090                                          u6441 2F46  
                                        u5721 7396                                          u5801 3F24  
                                        u4841 52B8                                          u5481 6190  
                                        u8041 222C                                          u5561 725C  
                                        u6281 5722                                          u6361 4DBC  
                                        u7401 1C6E                                          u7321 1B48  
                                        u7241 199E                                          u7161 17C0  
                                        u7081 37D8                                          u8201 2E14  
                                        u8121 2BC0                                          u4690 4EA4  
                                        u6290 4F38                                          u6530 3146  
                                        u6450 2FAA                                          u5730 73B6  
                                        u6610 6FF4                                          u4850 6EBE  
                                        u5810 3F6C                                          u4770 6DAA  
                                        u4930 237E                                          u5490 61B4  
                                        u8050 226A                                          u5570 7270  
                                        u5650 78D2                                          u6370 77D2  
                                        u7410 1CA2                                          u7330 1B70  
                                        u7250 1A32                                          u7170 17E2  
                                        u7090 3860                                          u8210 2E70  
                                        u8130 2BE0                                          u4691 4E9C  
                                        u6291 4F34                                          u6531 3142  
                                        u6451 2FA6                                          u5731 73B2  
                                        u6611 6FF0                                          u4851 6EBA  
                                        u5811 3F68                                          u4771 6DA6  
                                        u4931 237A                                          u5491 61B0  
                                        u8051 2266                                          u5571 726C  
                                        u5651 78CE                                          u6371 77CE  
                                        u7411 1C9E                                          u7331 1B6C  
                                        u7251 1A2E                                          u7171 17DE  
                                        u7091 385C                                          u8211 2E6C  
                                        u8131 2BDC                                          u5740 411E  
                                        u6700 38F0                                          u6540 317E  
                                        u6460 2FE4                                          u8300 5976  
                                        u5660 49B0                                          u6620 7004  
                                        u4860 6ED4                                          u5820 3F90  
                                        u4780 7770                                          u4940 2394  
                                        u8060 22A6                                          u5900 7C52  
                                        u5580 6214                                          u7420 1CC6  
                                        u7340 1B8E                                          u7260 1A56  
                                        u7180 1804                                          u8140 2C40  
                                        u8220 7126                                          u6380 70E0  
                                        u7500 474E                                          u5741 411A  
                                        u6701 38EC                                          u6541 317A  
                                        u6461 2FE0                                          u8301 5972  
                                        u5661 49AC                                          u6621 7000  
                                        u4861 6ED0                                          u5821 3F8C  
                                        u4765 6D76                                          u4781 776C  
                                        u4941 2390                                          u8061 22A2  
                                        u5901 7C4E                                          u5581 6210  
                                        u7421 1CC2                                          u7341 1B8A  
                                        u7261 1A52                                          u7181 1800  
                                        u8141 2C3C                                          u8221 7122  
                                        u6381 70DC                                          u7501 474A  
                                        u6710 3962                                          u4870 503E  
                                        u6550 31B4                                          u6470 301C  
                                        u8310 598A                                          u5670 49C8  
                                        u6630 7036                                          u5830 3FA0  
                                        u4790 7786                                          u4950 23BA  
                                        u5910 5B6C                                          u8070 22DC  
                                        u5590 6230                                          u6358 4D92  
                                        u7430 1CE4                                          u7350 1BBE  
                                        u7270 1A74                                          u7190 1834  
                                        u8150 2CAC                                          u5750 68F6  
                                        u8230 7158                                          u6390 7106  
                                        u7510 4786                                          u6711 395E  
                                        u4871 503A                                          u6551 31B0  
                                        u6471 3018                                          u8311 5986  
                                        u5671 49C4                                          u6631 7032  
                                        u5831 3F9C                                          u4791 7782  
                                        u4951 23B6                                          u5911 5B68  
                                        u8071 22D8                                          u5647 431C  
                                        u5591 622C                                          u6359 4DA6  
                                        u7431 1CE0                                          u7351 1BBA  
                                        u7271 1A70                                          u7191 1830  
                                        u8151 2CA8                                          u5751 68F2  
                                        u8231 7152                                          u6391 7102  
                                        u7511 4782                                          u6720 3978  
                                        u4880 5050                                          u6640 6F8E  
                                        u6560 31CA                                          u6480 3032  
                                        u8320 58B4                                          u5680 49E2  
                                        u8400 5F98                                          u5840 3FC0  
                                        u4960 24E0                                          u5920 5BE8  
                                        u8080 2318                                          u7440 1D22  
                                        u7360 1BE2                                          u7280 1A9C  
                                        u7600 0D56                                          u8160 2CC8  
                                        u5760 6906                                          u6800 5546  
                                        u7520 47E2                                          u6721 3974  
                                        u4881 504C                                          u6641 6F8A  
                                        u6561 31C6                                          u6481 302E  
                                        u8321 58B0                                          u5681 49DE  
                                        u8401 5F94                                          u5841 3FBC  
                                        u4961 24DC                                          u5921 5BE4  
                                        u8081 2314                                          u7441 1D1E  
                                        u7361 1BDE                                          u7281 1A98  
                                        u7601 0D52                                          u8161 2CC4  
                                        u5761 6902                                          u6801 5542  
                                        u7521 47DE                                          u6730 3AA6  
                                        u4890 506A                                          u6650 6FC8  
                                        u6570 31E4                                          u6490 304C  
                                        u8330 58C8                                          u5690 49FA  
                                        u8410 5FB0                                          u5850 3FE0  
                                        u4970 24F8                                          u5930 7428  
                                        u8250 5A94                                          u7450 1D46  
                                        u7370 1C00                                          u7290 1AC0  
                                        u7610 0D72                                          u7530 0A18  
                                        u8170 2CFA                                          u5770 6918  
                                        u6810 5556                                          u8090 7712  
                                        u6731 3AA2                                          u4891 5066  
                                        u6651 6FC4                                          u6571 31E0  
                                        u6491 3048                                          u8331 58C4  
                                        u5691 49F6                                          u8411 5FAC  
                                        u5851 3FDC                                          u4971 24F4  
                                        u5931 7424                                          u8251 5A90  
                                        u7451 1D42                                          u7371 1BFC  
                                        u7291 1ABC                                          u7611 0D6E  
                                        u7531 0A14                                          u8171 2CF6  
                                        u5771 6914                                          u6811 5552  
                                        u8091 770E                                          u6740 3AE0  
                                        u6660 60E4                                          u6580 3200  
                                        u8420 5FC8                                          u8340 72C0  
                                        u5860 3FF0                                          u4980 2514  
                                        u8260 5AAA                                          u7460 1D64  
                                        u7380 1C30                                          u6900 561C  
                                        u7700 0FD2                                          u7620 0DAC  
                                        u7540 0A34                                          u8180 2D5C  
                                        u5780 6936                                          u6820 55BA  
                                        u6741 3ADC                                          u6661 60E0  
                                        u6581 31FC                                          u8421 5FC4  
                                        u8341 72BC                                          u5861 3FEC  
                                        u4981 2510                                          u8261 5AA6  
                                        u7461 1D60                                          u7381 1C2C  
                                        u6901 5618                                          u7701 0FCE  
                                        u7621 0DA8                                          u7541 0A30  
                                        u8181 2D58                                          u5781 6932  
                                        u8245 715C                                          u6821 55B6  
                                        u6670 6106                                          u6590 3216  
                                        u8430 5FE6                                          u6750 482C  
                                        u5870 4000                                          u4990 252C  
                                        u5950 5E74                                          u7470 1DB2  
                                        u7390 1C54                                          u6830 6492  
                                        u6910 563E                                          u7710 1014  
                                        u7630 0E22                                          u7550 0C18  
                                        u8190 2DB6                                          u8510 294C  
                                        u5790 6954                                          u8350 5146  
                                        u6671 6102                                          u6591 3212  
                                        u8431 5FE2                                          u6751 4828  
                                        u5871 3FFC                                          u4991 2528  
                                        u5951 5E70                                          u7471 1DAE  
                                        u7391 1C50                                          u6831 648E  
                                        u6911 563A                                          u7711 1010  
                                        u7631 0E1E                                          u7551 0C14  
                                        u8191 2DB2                                          u8511 2948  
                                        u5791 6950                                          u8351 5142  
                                        u6680 612E                                          u8440 6002  
                                        u6760 494E                                          u5880 402E  
                                        u5944 5E3E                                          u6920 3B30  
                                        u5960 5312                                          u8280 5AEA  
                                        u6840 64B6                                          u7640 0E3E  
                                        u7560 0C52                                          u8520 2966  
                                        u7480 46E8                                          u8360 5190  
                                        u6681 612A                                          u8441 5FFE  
                                        u6761 494A                                          u5881 402A  
                                        u5945 5E3A                                          u6921 3B2C  
                                        u5961 530C                                          u8281 5AE6  
                                        u6841 64B2                                          u7641 0E3A  
                                        u7561 0C4E                                          u8521 2962  
                                        u7481 46E4                                          u8361 518C  
                                        u6690 38CA                                          u8450 6012  
                                        u6770 7AE2                                          u5890 406C  
                                        u6930 3B62                                          u5970 5314  
                                        u8290 5AFC                                          u7810 14EE  
                                        u7730 10D8                                          u7650 0E78  
                                        u7570 0C6E                                          u8610 2B04  
                                        u8530 2992                                          u6850 4588  
                                        u7490 471E                                          u6691 38C6  
                                        u8451 600E                                          u6771 7ADE  
                                        u5891 4068                                          u6931 3B5E  
                                        u8291 5AF8                                          u7811 14EA  
                                        u7731 10D4                                          u7651 0E74  
                                        u7571 0C6A                                          u8611 2B00  
                                        u8531 298E                                          u6851 4584  
                                        u7491 471A                                          u6940 3B8C  
                                        u5980 532C                                          u7900 1FA0  
                                        u7820 1538                                          u7740 115C  
                                        u7580 0D12                                          u8620 2B22  
                                        u8508 2926                                          u8460 27EE  
                                        u6860 45D2                                          u8380 51FA  
                                        u8700 5C36                                          u6941 3B88  
                                        u5981 5328                                          u7901 1F9C  
                                        u7821 1534                                          u7741 1158  
                                        u7581 0D0E                                          u8621 2B1E  
                                        u8509 2938                                          u8461 27EA  
                                        u6861 45CE                                          u8381 51F6  
                                        u8701 5C32                                          u8390 5F80  
                                        u6950 3BD0                                          u5990 5384  
                                        u7910 1FB0                                          u8278 5AB6  
                                        u7830 1548                                          u7750 1196  
                                        u7670 0EDC                                          u7590 0D34  
                                        u8630 2B32                                          u8550 29E4  
                                        u8470 284E                                          u6790 552A  
                                        u6870 460C                                          u8710 5C48  
                                        u8391 5F7C                                          u6951 3BCC  
                                        u5991 5380                                          u7911 1FAC  
                                        u8279 5AD2                                          u7831 1544  
                                        u7751 1192                                          u7671 0ED8  
                                        u7591 0D30                                          u8631 2B2E  
                                        u8551 29E0                                          u8471 284A  
                                        u6791 5526                                          u6871 4608  
                                        u8711 5C44                                          u6960 3C0E  
                                        u7920 1FC0                                          u6880 55D4  
                                        u7840 15BE                                          u7808 14B6  
                                        u7760 11E2                                          u7728 109E  
                                        u7680 0F16                                          u8640 2B58  
                                        u8608 2AE2                                          u8560 29F6  
                                        u8480 2896                                          u8720 5C5A  
                                        u6785 7AEC                                          u6961 3C0A  
                                        u7921 1FBC                                          u6881 55D0  
                                        u7841 15BA                                          u7809 14CA  
                                        u7761 11DE                                          u7729 10BE  
                                        u7681 0F12                                          u8641 2B54  
                                        u8609 2AF4                                          u8561 29F2  
                                        u8481 2892                                          u8721 5C56  
                                        u6786 7AEE                                          u7930 2014  
                                        u7850 1ED0                                          u6890 55FA  
                                        u7770 126A                                          u7690 0F48  
                                        u8570 2A1C                                          u8490 28E0  
                                        u6970 774C                                          u8378 51D6  
                                        u8730 5C96                                          u7931 2010  
                                        u7851 1ECC                                          u6891 55F6  
                                        u7771 1266                                          u7691 0F44  
                                        u8571 2A18                                          u8491 28DC  
                                        u6971 7748                                          u8379 51E8  
                                        u8731 5C92                                          u7940 2040  
                                        u7860 1F0C                                          u6980 35A2  
                                        u7668 0EB0                                          u8580 2A4A  
                                        u8548 29C2                                          u7941 203C  
                                        u7861 1F08                                          u6981 359E  
                                        u7669 0EC2                                          u8581 2A46  
                                        u8549 29D4                                          u7950 2056  
                                        u7870 1F1A                                          u6990 35C2  
                                        u8590 2A94                                          u7951 2052  
                                        u7871 1F16                                          u6991 35BE  
                                        u8591 2A90                                          u7960 20AA  
                                        u7880 1F5E                                          u7961 20A6  
                                        u7881 1F5A                                          u7970 20C6  
                                        u7890 1F72                                          u8690 5C1C  
                                        u7971 20C2                                          u7891 1F6E  
                                        u8691 5C18                                          u7980 2102  
                                        u7788 13BA                                          u7981 20FE  
                                        u7789 13CE                                          u7990 213C  
                                        u7798 1438                                          u7991 2138  
                                        u7799 144C                       getNumTxBuffersInUse@i16 0505  
                                        _have 6746                                          _main 5C00  
                                        _leds 0B7C                                          _name 0848  
                                        _loop 7286                                          _poll 2784  
                  __end_of_mnsTRrqnpnCallback 77F6                                          fsr1h 04E2  
                                        fsr2h 04DA                                          indf1 04E7  
                                        indf2 04DF                                          fsr1l 04E1  
                                        fsr2l 04D9                             ?_removeTableEntry 0501  
                                        pop@q 0501                                          prodh 04F4  
                                        prodl 04F3                                          start 0A02  
                                ?_loadNvCache 0501                                  bootPowerUp@a 0510  
                                bootPowerUp@b 050D                                  bootPowerUp@i 050F  
                          ??_removeTableEntry 0528                                 ?_APP_testMode 0501  
                              _SPI1STATUSbits 0087                               getEN@tableIndex 051A  
                                ___param_bank 0000                                ??_APP_addEvent 054E  
                       ?_getNumRxBuffersInUse 0501                             findServiceIndex@i 0504  
                        __end_of_EEPROM_Write 722A                                   _uptimeTimer 0564  
                                       ??_pop 0503                                         l10000 46F6  
                                       l10010 474E                                         l10002 4710  
                                       l10020 4798                                         l10012 475E  
                                       l10022 479C                                         l10014 4778  
                                       l10006 4726                                         l10200 0E64  
                                       l10112 0C36                                         l10104 0C00  
                                       l10040 47E2                                         l10024 47A0  
                                       l10016 4786                                         l10008 4740  
                                       l11000 5C5E                                         l10202 0E78  
                                       l10130 0C8E                                         l10114 0C52  
                                       l10106 0C18                                         l10050 0A34  
                                       l10042 47EC                                         l10034 47BC  
                                       l10026 47B4                                         l10018 4792  
                                       l11010 5C96                                         l11002 5C62  
                                       l10300 1538                                         l10220 0F48  
                                       l10204 0E86                                         l10124 0C88  
                                       l10116 0C6E                                         l10060 0AA4  
                                       l10052 0A52                                         l10044 0A06  
                                       l10036 47D0                                         l10028 47B8  
                                       l11020 5CAC                                         l11012 5C9E  
                                       l11004 5C6C                                _SPI1TWIDTHbits 0088  
                                       l10310 157C                                         l10302 1548  
                                       l10230 0FF8                                         l10214 0EFA  
                                       l10206 0EC4                                         l10118 0C82  
                                       l10150 0CFA                                         l10062 0AA8  
                                       l10054 0A72                                         l10038 47D2  
                                       l11022 5CB0                                         l11014 5CA4  
                                       l11006 5C6E                                         l10312 1582  
                                       l10304 1550                                         l10232 1014  
                                       l10240 1036                                         l10216 0F16  
                                       l10208 0EDC                                         l10136 0C94  
                                       l10144 0C9A                                         l10072 0AC6  
                                       l10064 0AB6                                         l10056 0A88  
                                       l10048 0A1C                                         l11016 5CA6  
                                       l11008 5C72                                         l10410 1F34  
                                       l10402 1EBE                                         l10314 1598  
                                       l10306 1554                                         l10242 10C6  
                                       l10226 0F66                                         l10218 0F2C  
                                       l10170 0D72                                         l10162 0D38  
                                       l10066 0ABC                                         l10058 0A9E  
                                       l11018 5CAA                                         l10500 22B8  
                                       l10420 1F72                                         l10412 1F38  
                                       l10404 1ED0                                         l10316 15BE  
                                       l10308 1562                                         l10260 117A  
                                       l10252 1144                                         l10244 10D8  
                                       l10228 0FD2                                         l10156 0D16  
                                       l10084 0B74                                         l10068 0AC0  
                                       l10092 0B94                                         l10148 0CC4  
                                       l10510 2326                                         l10502 22C6  
                                       l10430 1FC0                                         l10422 1F88  
                                       l10414 1F4C                                         l10406 1F0C  
                                       l10350 1632                                         l10342 1612  
                                       l10334 15F2                                         l10326 15D2  
                                       l10318 15CA                                         l10262 1196  
                                       l10254 115C                                         l10246 10F6  
                                       l10190 0E22                                         l10094 0BDA  
                                       l10078 0AEC                                         l10512 232A  
                                       l10504 22CA                                         l10440 202E  
                                       l10432 1FD6                                         l10424 1F8C  
                                       l10416 1F5E                                         l10408 1F1A  
                                       l10352 1634                                         l10344 1614  
                                       l10336 15F4                                         l10328 15D4  
                                       l10360 1652                                         l10280 12EA  
                                       l10264 11B0                                         l10192 0E3E  
                                       l10184 0DDC                                         l10176 0D90  
                                       l10168 0D5A                                         l10506 22DC  
                                       l10450 20AE                                         l10442 2040  
                                       l10522 233C                                         l10426 1FA0  
                                       l10434 1FDA                                         l10418 1F60  
                                       l10266 11C6                                         l10186 0DF0  
                                       l10178 0DAC                                         l10098 0BE0  
                                       l10530 76EC                                         l10508 2318  
                                       l10460 20EC                                         l10452 20B0  
                                       l10444 2056                                         l10436 2014  
                                       l10428 1FB0                                         l10268 11E2  
                                       l10276 1200                                         l10188 0E12  
                                       l10372 168E                                         l10604 2D18  
                                       l10540 2B64                                         l10700 713C  
                                       l10532 7700                                         l10524 76E8  
                                       l10470 217C                                         l10454 20C6  
                                       l10446 206E                                         l10438 2028  
                                       l11510 16AE                                         l10294 150C  
                                       l10286 14D6                                         l10278 126A  
                                       l10198 0E60                                         l10622 2D9E  
                                       l10606 2D42                                         l10542 2B7C  
                                       l10710 715E                                         l10702 7144  
                                       l10534 7702                                         l10800 7286  
                                       l10472 218C                                         l10480 21AC  
                                       l10464 2102                                         l10456 20CA  
                                       l10448 20AA                                         l11520 5B22  
                                       l10720 5A82                                         l11512 36CC  
                                       l10296 151C                                         l10288 14EE  
                                       l11504 2EF0                                         l10624 2DB6  
                                       l10632 2DD4                                         l10608 2D5C  
                                       l10616 2D72                                         l10560 2BE0  
                                       l10552 2BA6                                         l10712 7160  
                                       l10704 7146                                         l10536 7712  
                                       l11530 3244                                         l10810 7C02  
                                       l10802 72C0                                         l11522 5EAC  
                                       l10490 2220                                         l10482 21E8  
                                       l10474 2194                                         l10466 213C  
                                       l10458 20DE                                         l10730 5AD8  
                                       l11514 567C                                         l10298 1528  
                                       l11506 0BB4                                         l10634 2DFE  
                                       l10570 2C32                                         l10562 2C0C  
                                       l10546 2B82                                         l10714 7162  
                                       l10706 7148                                         l10538 771C  
                                       l11532 4B9A                                         l10812 7C0E  
                                       l10804 72C4                                         l11524 408E  
                                       l10492 2230                                         l10484 21EA  
                                       l10476 21A2                                         l10468 2178  
                                       l10732 5AEA                                         l10724 5A98  
                                       l11516 64F8                                         l11508 0CE4  
                                       l10636 2E18                                         l10644 2E48  
                                       l10572 2C40                                         l10580 2C74  
                                       l10564 2C12                                         l10900 2950  
                                       l10716 7166                                         l10708 715C  
                                       l10820 510E                                         l11534 71B4  
                                       l10750 5918                                         l11526 4A28  
                                       l10814 7C10                                         l10806 72D8  
                                       l10494 226A                                         l10486 2202  
                                       l10478 21A8                                         l10734 5AEC  
                                       l10742 5B0E                                         l10726 5AAA  
                                       l11518 1E4E                                         l10646 2E62  
                                       l10582 2C7A                                         l10558 2BC8  
                                       l10670 2ED0                                         l10910 29F6  
                                       l10902 2954                                         l10718 7C78  
                                       l10830 511A                                         l10822 5112  
                                       l11536 6E12                                         l11528 30AE  
                                       l10752 5976                                         l10760 583E  
                                       l10840 5F72                                         l10808 7BFE  
                                       l10496 22A6                                         l10488 220A  
                                       l10728 5AB0                                         l10648 2E70  
                                       l10656 2EA4                                         l10584 2C9C  
                                       l10568 2C18                                         l10920 2A1E  
                                       l10912 2A0C                                         l10904 2966  
                                       l10680 7A8C                                         l10832 5146  
                                       l10824 5118                                         l10816 5104  
                                       l10762 5856                                         l10850 5FA0  
                                       l10842 5F80                                         l10498 22B4  
                                       l10738 5B06                                         l10658 2EC6  
                                       l10594 2CE2                                         l10586 2CAC  
                                       l10930 2B12                                         l10922 2A4A  
                                       l10914 2A1C                                         l10906 2992  
                                       l10690 7110                                         l10682 710A  
                                       l10834 5190                                         l10818 510A  
                                       l10756 598A                                         l10748 5900  
                                       l10764 58B4                                         l10852 5FB0  
                                       l10844 5F88                                         l10772 7CAE  
                                       l10596 2CFA                                         l10588 2CC8  
                                       l10940 2B5C                                         l10932 2B22  
                                       l10924 2A94                                         l10908 29E4  
                                       l10692 7112                                         l10684 710C  
                                       l10836 51E8                                         l10780 7558  
                                       l10862 5FEA                                         l10854 5FB8  
                                       l10846 5F9C                                         l10934 2B32  
                                       l10926 2B04                                         l10870 2784  
                                       l10694 7116                                         l10678 7A7A  
                                       l10838 51EA                                         l10790 7572  
                                       l10782 7562                                         l10768 58C8  
                                       l10864 5FF2                                         l10856 5FC8  
                                       l10776 7CB2                                         l10928 2B0E  
                                       l10936 2B46                                         l10880 2852  
                                       l10872 27EE                                         l10696 7126  
                                       l10792 7574                                         l10784 7568  
                                       l10866 6002                                         l10858 5FD6  
                                       l10938 2B58                                         l10890 2896  
                                       l10882 2866                                         l10874 27F2  
                                       l10698 713A                                         l10794 7576  
                                       l10786 756C                                         l10868 6012  
                                       l10892 28E0                                         l10876 2806  
                                       l10796 758A                                         l10788 7570  
                                       l10894 2938                                         l10878 284E  
                                       l10798 7598                                         l10990 5C26  
                                       l10974 5C00                                         l10896 293C  
                                       l10888 286A                                         l10992 5C36  
                                       l10898 294C                                         l10994 5C38  
                                       l10996 5C48                                         l10988 5C24  
                                       l10998 5C4A                                         ?_have 0501  
                                       ?_main 0501                                _defaultColours FF59  
                         processEnumeration@i 051C                               __end_of___awdiv 5A82  
                                       ?_loop 0501                               __end_of___awmod 5E22  
                                       ?_poll 0501                               __end_of___lldiv 6162  
                             ___awdiv@divisor 0503                                         _T2CON 0324  
                                       _T4CON 0330                                         _T2HLT 0325  
                             ?_updateLedRange 0501                                         _T4HLT 0331  
                             reqevCallback@ev 0538                          __end_of_factoryReset 5008  
                                       _T2RST 0327                             _initTimedResponse 7C78  
                                       _T4RST 0333                                         i2l392 785E  
                              ?_APP_nvDefault 0501                               ___awdiv@counter 0505  
                             __end_of_canPoll 7C90                      __end_of_nvTRnvrdCallback 7334  
                             __end_of_doFlash 4956              __end_of_factoryResetGlobalEvents 7CA2  
                              _APP_nvValidate 7CA6                                         _TMR0H 0319  
                                       _TMR0L 0318                                         _TRISC 04C8  
                             __end_of_doEvlrn 583C                               __end_of_doNenrd 6A64  
                nvProcessMessage@valueOrError 0558                               __end_of_doEvuln 6AE4  
                             __end_of_doNnclr 797E                               __end_of_doNnevn 7510  
                             __end_of_doReqev 454E                               __end_of_doReval 54D4  
                             __end_of_doRqevn 74C4                               __end_of_getHash 7B94  
                         ___lmul@multiplicand 0505                            ?_initTimedResponse 0501  
                          __p_paramBlock_text 0820                                 ?_leds_powerUp 0501  
                            __end_of_TMR0_ISR 7ACC                               __end_of_isEvent 778E  
              APP_processConsumedEvent@action 0520                                         _canId 05A8  
                                       _getEN 6018                                         _getNN 4BBC  
                                       _getNV 7388                                         _getEv 6202  
                        _enumerationStartTime 0570                               __end_of_readNVM 6E2A  
                                       _first 05FD                                         _errno 05A3  
                                       _setNV 662C                                         _numEv 7CA2  
                       __end_of_refreshString 7AF0                                         have@i 0504  
                       _consumerEventCheckLen 7C16                                         _setup 7558  
                         canReceiveMessage@mp 0514                               __end_of_sendRTR 7626  
                __end_of_getNumTxBuffersInUse 6BDC                                         main@i 055D  
                             __end_of_mnsPoll 235C                                 setNV@oldValue 0518  
                      APP_preProcessMessage@m 0501                               __end_of_tickGet 6D42  
                             ?_checkPowerOnPb 0501                                         pclath 04FA  
                                       tablat 04F5                           ??_initTimedResponse 0501  
             mnsTRallDiagnosticsCallback@step 052F               mnsTRallDiagnosticsCallback@type 0501  
                                       poll@i 05F1                                         poll@m 05F2  
                             __end_of_powerUp 51FC                       reqevCallback@tableIndex 053C  
                                       status 04D8                                 ?_nvGetESDdata 0501  
                     reqevCallback@nodeNumber 053A                               __end_of_writeEv 659A  
                    ?_updateModuleErrorStatus 0501                    __end_of_startTimedResponse 7286  
                            ?_nvGetDiagnostic 0507                                ??_APP_testMode 050B  
                processEnumeration@enumResult 051A                               __initialization 6AE4  
                                __end_of_have 67D2                                  __end_of_main 5CBC  
                                __end_of_name 0850                                  __end_of_loop 72DE  
                                __end_of_poll 2B64                                 ?_nerdCallback 052E  
                      __end_of_defaultColours FF89                          __end_of_getParameter 43DA  
                   __end_of_initTimedResponse 7C7E                        __end_of_APP_nvValidate 7CAA  
                                      ??_have 0501                                  ?_setNewCanId 0501  
                                      ??_main 055D                              ?_eraseFlashBlock 0501  
                                      ??_loop 050B                                  ?_sendMessage 051B  
                                      ??_poll 05EC                         __end_of_reqevCallback 576A  
                               __activetblptr 0003                             ??_consumerEsdData 0501  
                                 readNVM@type 050C                             startEnumeration@i 050C  
                              ??_leds_powerUp 050B              __end_of_canWaitForTxQueueToDrain 7C54  
                     APP_postProcessMessage@m 0501                      ??_APP_postProcessMessage 0503  
                                      _C1CONH 0101                                        _C1CONL 0100  
                                      _C1CONT 0103                                        _C1CONU 0102  
                                      ?_getEN 050D                                        ?_getNN 050D  
                                      ?_getNV 0501                                        ?_getEv 050D  
                            __end_of_addEvent 3584                                        ?_setNV 0515  
                                _canTransport FFF9                                        ?_numEv 0501  
                            ___awdiv@dividend 0501                                        ?_setup 0501  
                         APP_nvValidate@index 0501                             ??_consumerPowerUp 0501  
                                      _ANSELA 0400                                        _ANSELB 0408  
                                      _ANSELC 0410                                        _MD1SRC 006C  
                         APP_nvValidate@value 0501                                        _RB2PPS 020B  
                                      _RC0PPS 0211                                        _RC1PPS 0212  
                                      _RC2PPS 0213                                        _RC3PPS 0214  
                                      _RC4PPS 0215                                        _RC5PPS 0216  
                            reqevCallback@nEv 0535                                        _RC6PPS 0217  
                                      i2l1633 7ACA                                        i2l1891 7CBC  
                                      _TABLAT 04F5                       ??_CAN1_OperationModeGet 0501  
                              ??_nvGetESDdata 0501                       ??_CAN1_OperationModeSet 0501  
                                      _NVMADR 0043                                        _TMR0IE 250F  
                                      _TMR0IF 258F                                        _TMR0IP 1B2F  
                            __end_of_checkLen 6202                                  ?_removeEvent 0536  
                              _clearAllEvents 7B56                      __end_of_APP_factoryReset 7C9C  
                                 initTicker@i 0504                             ?_findServiceIndex 0501  
                            _rebuildHashtable 5008                             _canProcessMessage 55BC  
APP_processConsumedEvent@colourPixelIndexPair 0523                                 teachPowerUp@i 0528  
                    reqevCallback@eventNumber 0536                    __end_of_APP_nvValueChanged 7CBC  
                          ??_findServiceIndex 0501                            _processEnumeration 3EEA  
                          ?_canProcessMessage 0554                    ??_APP_processConsumedEvent 051E  
                      ??_getNumRxBuffersInUse 0501                                teachCheckLen@m 0531  
                                      ___lmul 6F70                      __end_of_mnsGetDiagnostic 78F0  
                        consumerEsdData@index 0501                                ??_nerdCallback 0530  
                                      _canPri FFA0                              __end_of_initARGB 425A  
                                   ??___awdiv 0505                                        _doNerd 7BE6  
                                   ??___awmod 0505                         _APP_preProcessMessage 7CAE  
                                      _getEVs 633E                                     ??___lldiv 0513  
                               _nvDiagnostics 05B9                                     ??_canPoll 051D  
                                   ??_doFlash 0505                               getParameter@idx 0509  
                                      _memcpy 73DA                                     ??_doEvlrn 0554  
                                   ??_doNenrd 052C                                     ??_doEvuln 053F  
                                   ??_doNnclr 0537                                        _offset 0583  
                                      clear_0 6B0A                                        clear_1 6B1C  
                                      clear_2 6B2A                                     ??_doNnevn 052A  
                                      clear_3 6B3C                                        clear_4 6B48  
                                   ??_doReqev 0534                                     ??_doReval 052D  
                            ___awdiv@quotient 0507                               ___awmod@divisor 0503  
                                   ??_doRqevn 052A                           ?_processEnumeration 0501  
                                      have@id 0503                                     ??_getHash 0520  
                             ??_APP_nvDefault 0509                           ??_canProcessMessage 0556  
                                      isa$std 0001                               ___awmod@counter 0505  
                             ?_APP_nvValidate 0501                                        main@t1 055E  
                                      main@t2 055F                                     ??_isEvent 0501  
                            __end_of_sendByte 7040                                     ??_readNVM 050A  
                    nerdCallback@serviceIndex 052E                             _canReceiveMessage 3B0A  
                  __end_of_teachGetDiagnostic 7950                              _nvProcessMessage 2B64  
                                   ??_sendRTR 0501                                     ??_mnsPoll 052C  
                                      pop@ret 0508                             ??_mnsFactoryReset 0515  
                                ivt0x900_base 0900                                  __mediumconst FE58  
          APP_processConsumedEvent@tableIndex 051E                                     ??_tickGet 0505  
                            __end_of_services FF95                            _tableIndexToEvtIdx 7C84  
                 findServiceIndex@serviceType 0503                                        tblptrh 04F7  
                                      tblptrl 04F6                             doEvlrn@nodeNumber 054E  
                                      tblptru 04F8                                  ??_FLASH_Read 0504  
                           nvProcessMessage@m 0554                        ?_consumerEventCheckLen 0531  
                          ?_canReceiveMessage 0510                                     ??_powerUp 0529  
                      getParameterFlags@flags 0505             mnsTRserviceDiscoveryCallback@step 052F  
           mnsTRserviceDiscoveryCallback@type 0501                       consumerProcessMessage@m 0554  
                        __end_of_APP_addEvent 7B12                                     ??_writeEv 0517  
                                __p_name_text 0848                           addEvent@eventNumber 0531  
                nvTRnvrdCallback@valueOrError 0530                              __end_of_writeNVM 71CC  
                         ?_tableIndexToEvtIdx 0501                        __end_of_clearAllEvents 7B76  
                       mnsGetDiagnostic@index 0509                          ??_processEnumeration 0516  
                            ??_receiveOverrun 0501                                    __accesstop 0560  
                     __end_of__initialization 6B5C                     __end_of_canProcessMessage 5694  
               __end_of_consumerGetDiagnostic 7920                           ??_canReceiveMessage 0512  
                           EEPROM_Write@index 0509                                nvGetESDdata@id 0501  
                            APP_testMode@step 0510                             EEPROM_Write@value 050C  
                               doEvuln@result 053F                                 ___rparam_used 0001  
                          teachCheckLen@learn 0534                                    _eeBootFlag 0594  
                     ??_handleSelfEnumeration 050B                     ?_factoryResetGlobalEvents 0501  
                               ?_teachPowerUp 0501                              FLASH_Write@index 0506  
                           _getParameterFlags 67D2                              FLASH_Write@value 0509  
                              __pcstackCOMRAM 0501     mnsTRserviceDiscoveryCallback@serviceIndex 052E  
                                __pidataBANK5 7CB6                                    _canEsdData 7B34  
                          ?_getParameterFlags 0501                                     ?_TMR0_ISR 0501  
                               __end_of_getEN 60BE                                 __end_of_getNN 4CDE  
                               __end_of_getNV 73DA                                 __end_of_getEv 62A0  
                          __end_of_FLASH_Read 6CCC                                 __end_of_setNV 66BA  
                               __end_of_numEv 7CA6                                 __end_of_setup 759E  
                        ??_tableIndexToEvtIdx 0501                             _ledPaletteIndexes 0700  
                        _getNumTxBuffersInUse 6B62                     __end_of_canReceiveMessage 3D00  
                nvTRnvrdCallback@serviceIndex 052E                    __end_of_bootProcessMessage 6508  
                  consumerGetDiagnostic@index 0509                           ??_getParameterFlags 0505  
                                  _canService FFEB                             ??_isConsumedEvent 0501  
                                  addEvent@en 0543                                    _canPowerUp 454E  
                   reqevCallback@serviceIndex 052E                          __end_of_APP_testMode 3B0A  
                  rebuildHashtable@tableIndex 0526                               _refreshRequired 0591  
                                     ??_getEN 050F                                       ??_getNN 050F  
                                     ??_getNV 0503                                       ??_getEv 050F  
                                     ??_setNV 0516                                 ?_sendMessage2 0526  
                               ?_sendMessage3 0526                                 ?_sendMessage4 0526  
                               ?_sendMessage5 0526                                 ?_sendMessage6 0526  
                               ?_sendMessage7 0526                                       ??_numEv 0501  
                       _setupModePreviousMode 059E                                       ??_setup 050B  
                                canEsdData@id 0501                                  readNVM@index 0507  
                    mnsProcessMessage@newMode 055A                             initTicker@divider 0503  
                                _EEPROM_Write 71CC                                    __pbssBANK5 0560  
                                  __pbssBANK6 0600                                    __pbssBANK7 0700  
                                  __pbssBANK8 0800                                  loadNvCache@i 0511  
                             ?_clearAllEvents 0501                    startTimedResponse@callback 0506  
                             canSendMessage@m 0517                    APP_processConsumedEvent@ev 0524  
                         setNewCanId@newCanId 0515                     __end_of_getParameterFlags 685A  
                              _loadFlashBlock 7334                                  _factoryReset 4F0A  
                              ??_teachPowerUp 0528                                 _setLEDsByMode 759E  
                                     IVTBASEH 045E                                       IVTBASEL 045D  
                                     IVTBASEU 045F                                 addEvent@evVal 0534  
                               addEvent@evNum 0533                                    __pivt0x900 0900  
                              _canDiagnostics 0691                                   mnsPowerUp@i 050D  
                          mnsProcessMessage@d 0558                            mnsProcessMessage@i 0556  
                          mnsProcessMessage@m 0554                          __end_of_leds_powerUp 7AA2  
                                  _bl_version FF95                     ?_canWaitForTxQueueToDrain 0501  
                      ?_APP_preProcessMessage 0501                                       ?___lmul 0501  
                           _bootloaderVersion 05A9                                    ??_TMR0_ISR 0501  
                                     ?_doNerd 0501                                       _C1TRECU 0136  
                                     ?_getEVs 0501                              ??_updateLedRange 0503  
                                     _C1TXQUA 0158                                     _C1FIFOUA1 0164  
                                   _C1FIFOUA2 0170                                     _C1FIFOUA3 017C  
                       ?_getNumTxBuffersInUse 0501                                       ?_memcpy 0501  
                               _C1BDIAG0Hbits 0139                                     ?_addEvent 052F  
                          _mnsTRrqnpnCallback 77C2                                ___lmul@product 0509  
                               _C1BDIAG0Lbits 0138                                     _C1NBTCFGH 0105  
                                   _C1NBTCFGL 0104                                     _C1NBTCFGT 0107  
                                   _C1NBTCFGU 0106                         _setTimedResponseDelay 7C68  
                                     _MD1CARH 006E                                       _MD1CARL 006D  
                                     _MD1CON0 006A                                       _MD1CON1 006B  
                        __end_of_nvGetESDdata 7B34                                       _CLCnCON 00D6  
                                     _CLCnPOL 00D7                                       _DMAnDSA 00F0  
                                     _DMAnDSZ 00EE                              _canGetDiagnostic 5ECC  
                                  _flashBlock 0580                                       _DMAnSSA 00F9  
                                  _flashFlags 059B                                       _DMAnSSZ 00F7  
                               ??_DEFAULT_ISR 0501                                       i2l10950 7854  
                                     i2l10942 782C                                       i2l10960 7AB2  
                                     i2l10952 785A                                       i2l10944 783C  
                                     i2l10962 7AB4                                       i2l10946 7842  
                                     i2l10964 7AB8                                       i2l10948 7846  
                                     i2l10966 7AC8                                       i2l10958 7AA4  
                                _DMAnCON0bits 00FC                                     ?_checkLen 052C  
                                _DMAnCON1bits 00FD                                    _flashState 0592  
                           ?_nvTRnvrdCallback 052E                             reqevCallback@step 052F  
                         ?_mnsTRrqnpnCallback 052E                              ??_checkPowerOnPb 053C  
                                     _IVTLOCK 0459                                       _TBLPTRH 04F7  
                                     _TBLPTRL 04F6                                       _TBLPTRU 04F8  
                                   _C1TXQCONH 0151                                     _C1TXQCONL 0150  
             flushFlashBlock@interruptEnabled 0505                                     _C1TXQCONT 0153  
                                   _C1TXQCONU 0152                                       _NVMADRH 0044  
                                     _NVMADRL 0043                                       _SPI1TXB 0081  
                                     _NVMADRU 0045                                       _NVMDATL 0046  
                          ??_nvTRnvrdCallback 0530                                   _C1FIFOCON1H 015D  
                                 _C1FIFOCON2H 0169                                   _C1FIFOCON1L 015C  
                                 _C1FIFOCON3H 0175                                   _C1FIFOCON2L 0168  
                                 _C1FIFOCON3L 0174                                   _C1FIFOCON1T 015F  
                                 _C1FIFOCON1U 015E                                   _C1FIFOCON2T 016B  
                                 _C1FIFOCON2U 016A                                   _C1FIFOCON3T 0177  
                                 _C1FIFOCON3U 0176                                       _NVMLOCK 0042  
                              ??_sendMessage2 0528                                ??_sendMessage3 0529  
                              ??_sendMessage4 052A                                ??_sendMessage5 052B  
                              ??_sendMessage6 052C                                ??_sendMessage7 052D  
                            _teachDiagnostics 05CA                          __end_of_nerdCallback 6E98  
                   isConsumedEvent@eventIndex 0501                                     ?_initARGB 0501  
                              checkLen@needed 052E                                  _getParameter 425A  
                      __end_of_loadFlashBlock 7388                               _timerExtension1 059A  
                             _timerExtension2 0599                  __end_of_eventConsumerService FFB3  
                              ?_setLEDsByMode 0501                        mnsTRrqnpnCallback@step 052F  
                      mnsTRrqnpnCallback@type 0501                canReceiveMessage@incomingCanId 0513  
                         _consumerDiagnostics 05BF                                 initARGB@ledno 0501  
                                   ?_sendByte 0501                                   poll@handled 05F0  
                        ??_mnsTRrqnpnCallback 0530                             __end_of_findEvent 5D74  
                                     __Hparam 0000                   consumerEventCheckLen@needed 0533  
                                     __Lparam 0000                               _consumerEsdData 7B94  
                                   _CLCSELECT 00D5                        _APP_postProcessMessage 7CB2  
                          pbDownTimer@timeout 051C                                   ?_canEsdData 0501  
                           __end_of_pbUpTimer 58FE                                     _DMASELECT 00E8  
                            pbUpTimer@timeout 051C                                 APP_testMode@c 050F  
                               APP_testMode@i 0511                                    _initTicker 7108  
                                     ___awdiv 59C0                                    _initRomOps 7BFE  
                                     ___awmod 5D74                                       ___lldiv 60BE  
                                     _canPoll 7C8A                                       _doFlash 4810  
                                  ??_addEvent 0536                                       _doEvlrn 576A  
                                  _paramBlock 0820                                       _doNenrd 69E2  
                          canProcessMessage@m 0554                                       _doEvuln 6A64  
                                     _doNnclr 7950                                       _doNnevn 74C4  
                                     _doReqev 43DA                                       _doReval 53EA  
                                     __pcinit 6AE4                                 _teachCheckLen 6960  
                                     _doRqevn 7478                             __end_of_leds_poll 329C  
                          _startTimedResponse 722A                                       __ramtop 4000  
                                     _getHash 7B76                                     ?_writeNVM 050E  
                          doEvlrn@eventNumber 0550                                       __ptext0 5C00  
                                     __ptext1 7558                                       __ptext2 7C68  
                                     __ptext3 5104                                       __ptext4 76E8  
                                     __ptext5 46C0                                       __ptext6 7722  
                                     __ptext7 454E                                       __ptext8 54D4  
                                     __ptext9 76AA                               _consumerPowerUp 7722  
                                     _isEvent 7758                                       _pbTimer 056C  
                          APP_nvDefault@index 050B                               getEv@tableIndex 051C  
                            _EnumerationState 05A6                             ??_canFactoryReset 0515  
                           _mnsProcessMessage 0A06                                       _nvCache 0600  
                                  _mode_flags 05A4                                   ?_canPowerUp 0501  
                                     _readNVM 6DB6                     startEnumeration@txWaiting 050B  
                                  getNN@flags 051A                                _nvFactoryReset 766A  
                                     getEN@hi 0516                                     _T2CONbits 0324  
                                     getEN@lo 0518                             ??_teachGetESDdata 0501  
                    __end_of_rebuildHashtable 5104                                    ??_checkLen 0530  
                                     getNN@hi 0516                                       getNN@lo 0518  
                                  _mode_state 05A1                              ___awmod@dividend 0501  
                          doReqev@eventNumber 0531                                       _sendRTR 75E2  
                                     _mnsPoll 1EBE                                     _T4CONbits 0330  
                          ?_mnsProcessMessage 0554                                       _tickGet 6CCC  
                                _flashCounter 0587                             doNenrd@tableIndex 0531  
                         ?_startTimedResponse 0505                                  _isEvent$5102 0501  
                                  getNV@index 0504                                       _rxQueue 05C5  
                           doNenrd@nodeNumber 052C                      ??_consumerProcessMessage 0556  
                                     _powerUp 5104                         canReceiveMessage@temp 0516  
                          doRqevn@eventNumber 052A                                    _mnsService FFDD  
                           __end_of_nvService FFDD                                    _mnsPowerUp 46C0  
                           __end_of_nvPowerUp 7722                           __end_of_DEFAULT_ISR 7CBE  
                                     _writeEv 6508                          end_of_initialization 6B5C  
                                  ??_initARGB 0501                           ??_mnsProcessMessage 05CE  
                                writeNVM@type 0514                                    getEv@evNum 050D  
            prepareSelfEnumResponse@txFifoObj 0501                                       memcpy@d 0507  
                                     memcpy@n 0505                                       memcpy@s 0509  
                  APP_nvValueChanged@oldValue 0502                                 ??_EEPROM_Read 0504  
                             ?_loadFlashBlock 0501                 __end_of_CAN1_OperationModeGet 7C5E  
               __end_of_CAN1_OperationModeSet 6960                             ?_APP_factoryReset 0501  
                            _startEnumeration 6E98                                    ??_sendByte 0501  
                             ___lldiv@divisor 050F                                  writeEv@evVal 0516  
                    __end_of_nvProcessMessage 2F10                                  writeEv@evNum 0515  
                             ___lldiv@counter 0517                          ??_startTimedResponse 0508  
                     pollTimedResponse@result 053F                            ??_APP_factoryReset 0537  
             eraseFlashBlock@interruptEnabled 0504                             __end_of_updateRGB 7C78  
                            ??_APP_nvValidate 0502                                 ??_FLASH_Write 050A  
                        nvGetDiagnostic@index 0509                                       postdec1 04E5  
                                     postdec2 04DD                        ??_getNumTxBuffersInUse 0501  
                                     postinc0 04EE                                       postinc1 04E6  
                                     postinc2 04DE                     updateLedRange@start_ledno 0503  
                             _mnsFactoryReset 6F04                             ?_mnsGetDiagnostic 0507  
        EEPROM_WriteNoVerify@interruptEnabled 0508                       _prepareSelfEnumResponse 6BDC  
                      ?_setTimedResponseDelay 0501                                  _APP_addEvent 7AF0  
                              ?_teachCheckLen 0531                     __end_of_mnsProcessMessage 16E6  
                          doNnevn@eventNumber 052A                                  doFlash@ledno 0505  
                                  _tmpMessage 06B7                            ??_mnsGetDiagnostic 0509  
              startTimedResponse@serviceIndex 0505                        __end_of_nvFactoryReset 76AA  
                                  ??_writeNVM 0512                                    _showStatus 4956  
                                   _PORTAbits 04CE                                    _previousNN 058B  
                     ??_consumerEventCheckLen 0534                            _APP_nvValueChanged 7CBA  
                   _timedResponseServiceIndex 0598                                    _priorities FE59  
                               ??_pbDownTimer 0518                               sendMessage2@opc 0528  
                        __end_of_teachPowerUp 76E8                               sendMessage3@opc 0529  
                             sendMessage4@opc 052A                               sendMessage5@opc 052B  
                             sendMessage6@opc 052C                               sendMessage7@opc 052D  
                           _eventTeachService FFB3                                     _TRISAbits 04C6  
                                   _TRISBbits 04C7                        _mnsProcessMessage$3754 0557  
                          _timedResponseDelay 0593                                   showStatus@s 0503  
                             loadNvCache@temp 050F                           ?_APP_nvValueChanged 0501  
                               ??_bootEsdData 0501                                    isEvent@opc 0502  
                             ??_setLEDsByMode 0504                           teachCheckLen@needed 0533  
                     __end_of_consumerEsdData 7BB0               ??_mnsTRserviceDiscoveryCallback 0530  
                           ??_flushFlashBlock 0505                            _teachGetDiagnostic 7920  
                           _heartbeatSequence 059C                           _teachProcessMessage 16E6  
                          canSendMessage@temp 0515                             removeTableEntry@i 0534  
                               ??_bootPowerUp 050D                                  _APP_testMode 386A  
                             _isConsumedEvent 7C5E                 __end_of_handleSelfEnumeration 5ECC  
                         __end_of_EEPROM_Read 7478                       __end_of_consumerPowerUp 7758  
                         ?_teachGetDiagnostic 0507                             _canTransmitFailed 05A7  
                                 ?_initTicker 0501                                   ?_initRomOps 0501  
                        ??_APP_nvValueChanged 0503                          __end_of_sendMessage2 7A26  
                        __end_of_sendMessage3 79FC                          __end_of_sendMessage4 79D2  
                        __end_of_sendMessage5 7A7A                          __end_of_sendMessage6 79A8  
                        __end_of_sendMessage7 7A50                                __end_of___lmul 6FDA  
                              __end_of_canPri FFA5                                __end_of_doNerd 7BFE  
                  removeTableEntry@tableIndex 0535                                __end_of_getEVs 63DA  
                             ?_nvFactoryReset 0501                              _removeTableEntry 3D00  
                              __end_of_memcpy 742A                            canReceiveMessage@m 0510  
                        ?_teachProcessMessage 0554                     __end_of_eventTeachService FFC1  
                         __end_of_FLASH_Write 4F0A                     consumerProcessMessage@enn 0559  
                       __end_of_APP_nvDefault 4BBC                     consumerProcessMessage@ret 055B  
                        _eventConsumerService FFA5                                _canSendMessage 235C  
                                 _DEFAULT_ISR 7CBC                                  _name_absaddr 0848  
                         start_initialization 6AE4                              ??_clearAllEvents 0536  
                   ?_APP_processConsumedEvent 051C                                  _leds_powerUp 7A7A  
                        ??_teachGetDiagnostic 0509                                   __end_of_pop 5C00  
                               factoryReset@i 053B                                   ?_mnsPowerUp 0501  
                         _APP_isConsumedEvent 7CAA                  ?_mnsTRallDiagnosticsCallback 052E  
                __end_of_EEPROM_WriteNoVerify 70A6                                 _refreshString 7ACC  
                         __end_of_pbDownTimer 59C0                            _bootProcessMessage 6472  
                         _getNextWriteMessage 51FC                                  _nvGetESDdata 7B12  
                    __end_of_canGetDiagnostic 5F72                       ??_APP_preProcessMessage 0503  
                     __end_of_mnsFactoryReset 6F70                                 ??_loadNvCache 050D  
                       _consumerGetDiagnostic 78F0                           __end_of_bootEsdData 782A  
                         ?_bootProcessMessage 0554                                  doEvlrn@evVal 0553  
                                doEvlrn@evNum 0552                               numEv@tableIndex 0501  
                   ??_prepareSelfEnumResponse 0501                        startTimedResponse@type 0508  
                  __end_of_evtIdxToTableIndex 7C84                      rebuildHashtable@chainIdx 0527  
                                    ??___lmul 0509                               ??_teachCheckLen 0535  
                                doNenrd@index 0530                          ?_APP_isConsumedEvent 0501  
                                    ??_doNerd 0509                                      ??_getEVs 050D  
                         bootProcessMessage@m 0554                            addEvent@forceOwnNN 0535  
                                 _MD1CON0bits 006A                                  _nerdCallback 6E2A  
                                 __pdataBANK5 05FB                       _updateModuleErrorStatus 7C2C  
                         __end_of_bootService FFCF                                      ??_memcpy 0507  
                         __end_of_bootPowerUp 55BC                        __end_of_canSendMessage 2784  
                                 ?_showStatus 0501                          ?_getNextWriteMessage 0501  
                       ??_teachProcessMessage 0556                                   __pbssBIGRAM 08FC  
                               _reqevCallback 5694                          ??_bootProcessMessage 0556  
                           ??_nvGetDiagnostic 0509                              canSendMessage@mp 050D  
                               __pcstackBANK5 05CE                                    setNV@index 0519  
                                  setNV@value 0515           APP_processConsumedEvent@start_ledno 0521  
                          addEvent@tableIndex 0546                                ?_refreshString 0501  
                  setTimedResponseDelay@delay 0501                                     addEvent@e 0545  
                          addEvent@nodeNumber 052F                 ??_mnsTRallDiagnosticsCallback 0530  
                    _factoryResetGlobalEvents 7C9C                       __end_of_isConsumedEvent 7C68  
                            ?_consumerEsdData 0501                                   _EEPROM_Read 742A  
                          initTicker@priority 0502                       ?_APP_postProcessMessage 0501  
                           ??_eraseFlashBlock 0501                     APP_processConsumedEvent@m 051C  
                              mnsPowerUp@temp 050E                                  doNnevn@count 052C  
                        teachProcessMessage@m 0554                               _canFactoryReset 7BB0  
       __end_of_mnsTRserviceDiscoveryCallback 6472                 _mnsTRserviceDiscoveryCallback 63DA  
                mnsTRallDiagnosticsCallback@d 0534                                    nvPowerUp@i 0512  
                             tickGet@IntFlag1 0506                               tickGet@IntFlag2 0505  
                      _consumerProcessMessage 3584                               _teachGetESDdata 7860  
                       ??_APP_isConsumedEvent 0501                                  ??_canEsdData 0501  
                                    _C1FIFOBA 014C                                 __pmediumconst FE58  
                            ?_consumerPowerUp 0501                              getEVs@tableIndex 051A  
                                    ?___awdiv 0501                                     __ptext100 7CB2  
                                   __ptext101 7286                                     __ptext110 58FE  
                                   __ptext102 7ACC                                     __ptext111 2F10  
                                   __ptext103 6FDA                                     __ptext120 5D74  
                                   __ptext112 6F70                                     __ptext104 4810  
                                   __ptext121 59C0                                     __ptext113 60BE  
                                   __ptext105 7388                                     __ptext130 685A  
                                   __ptext122 7C96                                     __ptext114 4F0A  
                                   __ptext106 7BFE                                     __ptext131 7BCC  
                                   __ptext123 7C9C                                     __ptext115 766A  
                                   __ptext107 5F72                                     __ptext140 6C54  
                                   __ptext132 71CC                                     __ptext124 7B56  
                                   __ptext116 6F04                                     __ptext108 4956  
                                   __ptext141 742A                                     __ptext133 7C2C  
                                   __ptext125 3D00                                     __ptext117 7BB0  
                                   __ptext109 583C                                   _FLASH_Write 4DFA  
                                   __ptext142 386A                                     __ptext134 7040  
                                   __ptext126 716A                                     __ptext118 7C90  
                                   __ptext143 7626                                     __ptext135 5008  
                                   __ptext127 4DFA                                     __ptext119 4A98  
                                   __ptext144 6CCC                                     __ptext136 4BBC  
                                   __ptext128 7334                                     __ptext145 40AE  
                                   __ptext137 7B76                                     __ptext129 62A0  
                                   __ptext146 782C                                     __ptext138 6018  
                                   __ptext147 7AA4                                     __ptext139 6DB6  
                                   __ptext148 7CBC                                      _C1MASK0H 0191  
                                    ?___awmod 0501                                      _C1MASK0L 0190  
                                    _C1MASK0T 0193                                      _C1MASK0U 0192  
                                   _findEvent 5CBC                                      ?___lldiv 050B  
                         __end_of_loadNvCache 7108                                  doReqev@evVal 0534  
                                doReqev@evNum 0533                               getNN@tableIndex 051B  
                                    ?_canPoll 0501                                  doReval@enNum 052E  
                                    ?_doFlash 0501                                  doReval@evVal 0530  
                                doReval@evNum 052C                                     _flashTime 057C  
                                    ?_doEvlrn 054E                                      ?_doNenrd 0501  
                                    ?_doEvuln 053B                                      ?_doNnclr 0501  
                                    ?_doNnevn 0501                                      ?_doReqev 052F  
                                    ?_doReval 052C                             teachGetESDdata@id 0501  
                                    ?_doRqevn 0501                         ??_getNextWriteMessage 0503  
                                    ?_getHash 051C                                 ??_setNewCanId 0515  
                                   _pbUpTimer 583C                               ?_canSendMessage 050D  
                               ??_sendMessage 0523                                      ?_isEvent 0501  
                            _findServiceIndex 66BA                              nerdCallback@step 052F  
                            nerdCallback@type 0501                                ?_reqevCallback 052E  
                                ??_canPowerUp 050D                                _heartbeatTimer 0568  
                                 __smallconst FE58                                      ?_readNVM 0507  
                                  _C1FLTCON0L 0180                      __end_of_startEnumeration 6F04  
                                  _C1FLTOBJ0H 018D                                    _C1FLTOBJ0L 018C  
                                  _C1FLTOBJ0T 018F                                    _C1FLTOBJ0U 018E  
                                  _C1CONHbits 0101                                     _leds_poll 2F10  
                                    ?_sendRTR 0501                                      ?_mnsPoll 0501  
                           ?_rebuildHashtable 0501               __end_of_prepareSelfEnumResponse 6C54  
            CAN1_OperationModeSet@requestMode 0502                                      ?_tickGet 0501  
     mnsTRallDiagnosticsCallback@serviceIndex 052E                                      _CANRXPPS 023D  
                                 _pbDownTimer 58FE                                    _C1CONTbits 0103  
                                  _C1CONUbits 0102                                     checkLen@m 052C  
                            ??_loadFlashBlock 0501                                      ?_powerUp 0501  
                          ??_rebuildHashtable 0522                                      _T2CLKCON 0326  
                                    _CLCnGLS0 00DC                                      _CLCnGLS1 00DD  
                                    _CLCnGLS2 00DE                                      _CLCnGLS3 00DF  
                                    _CLCnSEL0 00D8                                      _CLCnSEL1 00D9  
                                    _CLCnSEL2 00DA                                      _CLCnSEL3 00DB  
                                    ?_writeEv 0515                                      _DMAnAIRQ 00FE  
                                    _T4CLKCON 0332                                    _C1INTHbits 011D  
                                    _DMAnSIRQ 00FF                                   _bootEsdData 77F6  
                          __end_of_canEsdData 7B56                                    _C1INTTbits 011F  
                                  _C1INTUbits 011E                                   _flashBuffer 05FB  
                      consumerEventCheckLen@m 0531                                doReval@evIndex 052D  
              __end_of_APP_postProcessMessage 7CB6                       getNumRxBuffersInUse@i16 0505  
                                   _nvService FFCF                           consumerPowerUp@temp 0501  
                               ??_removeEvent 053A                                  _SPI1BAUDbits 0089  
                                    _LATBbits 04BF                                      _LATCbits 04C0  
                                   _nvPowerUp 76E8                             findEvent@chainIdx 052D  
                      ?_consumerGetDiagnostic 0507                      _canWaitForTxQueueToDrain 7C42  
                                    _IPR0bits 0362                                      _PIE0bits 049E  
                        rebuildHashtable@hash 0525                              ?_mnsFactoryReset 0501  
                                   _rxBuffers 0649                                     getHash@en 051E  
                                   getHash@nn 051C                                _flashFlushTime 0641  
                                _SPI1CON0bits 0084                                      _IVTBASEH 045E  
                                    _IVTBASEL 045D                                  _SPI1CON1bits 0085  
                                    _IVTBASEU 045F                                  _SPI1CON2bits 0086  
      __end_of_APP_isSuitableTimeToWriteFlash 7BE6                _APP_isSuitableTimeToWriteFlash 7BCC  
                                 _bootService FFC1                            __end_of_canService FFF9  
                                _teachPowerUp 76AA                                   _bootPowerUp 54D4  
                                    _PIR0bits 04AE                            __end_of_canPowerUp 46C0  
                           ?_nvProcessMessage 0554                       ??_setTimedResponseDelay 0501  
                           doReqev@tableIndex 0536                                      _SPI1INTF 008A  
                                    _SPI1TCNT 0082                                _mnsDiagnostics 05AB  
                   ??_updateModuleErrorStatus 0501                                      i2u865_40 783C  
                                    i2u865_41 7838                                      i2u866_40 7854  
                                    i2u866_41 7850                                      i2u867_40 7AB2  
                                    i2u867_41 7AAE                                      i2u868_40 7AC8  
                                    i2u868_41 7AC4                              ivt0x900_undefint 0A00  
                           doReqev@nodeNumber 052F                                   _pbWasPushed 059D  
                                    _TMR0_ISR 7AA4                            ??_nvProcessMessage 0556  
                   EEPROM_WriteNoVerify@index 0501                                    ?_findEvent 0522  
                   EEPROM_WriteNoVerify@value 0504                                     _updateRGB 7C70  
                        _EEPROM_WriteNoVerify 7040              consumerProcessMessage@tableIndex 055C  
               updateLedRange@colourIndexPair 0502                             _teachFactoryReset 7C90  
                                  ?_pbUpTimer 0501                                sendMessage@len 051B  
                              sendMessage@opc 0525                             _timedResponseTime 0645  
                           _timedResponseStep 0595                             _timedResponseType 0596  
                            _enumerationState 05A5                                  doRqevn@count 052C  
                                   _transport 058F                            ?_teachFactoryReset 0501  
               APP_processConsumedEvent@onOff 051F                    canReceiveMessage@rxFifoObj 0518  
                                  ?_leds_poll 0501                               _flushFlashBlock 62A0  
               __end_of_consumerEventCheckLen 7C2C                               ??_refreshString 0503  
                         __end_of_setNewCanId 7558                           __end_of_sendMessage 662C  
                         ??_teachFactoryReset 0537                               checkLen@service 052F  
                                 _INTCON0bits 04D6                            __end_of_bl_version FFA0  
                           ___lmul@multiplier 0501                                  _sendMessage2 79FC  
                                _sendMessage3 79D2                                  _sendMessage4 79A8  
                                _sendMessage5 7A50                                  _sendMessage6 797E  
                                _sendMessage7 7A26                               nvFactoryReset@i 0517  
                     __end_of_canFactoryReset 7BCC             APP_processConsumedEvent@end_ledno 0522  
                    __end_of_removeTableEntry 3EEA                              ?_isConsumedEvent 0501  
                     __end_of_teachGetESDdata 7890                                    ?_nvPowerUp 0501  
                                 _loadNvCache 70A6                                      __Hrparam 0000  
                                 _eventChains 08FC                      evtIdxToTableIndex@evtIdx 0501  
                     APP_addEvent@eventNumber 0549                                     memcpy@tmp 050B  
                       _CAN1_OperationModeGet 7C54                                      __Lrparam 0000  
                       _CAN1_OperationModeSet 68DE                             doReval@tableIndex 052F  
                            ??_nvFactoryReset 0515                                  ??_initTicker 0501  
                         __end_of_removeEvent 77C2                                  ??_initRomOps 0501  
                      removeEvent@eventNumber 0538              __end_of_APP_processConsumedEvent 53EA  
                   __end_of_teachFactoryReset 7C96                         ?_EEPROM_WriteNoVerify 0501  
                                    _addEvent 329C                                    ?_updateRGB 0501  
              ?_mnsTRserviceDiscoveryCallback 052E                               ??_reqevCallback 0530  
                          doNenrd@eventNumber 052E                                  ?_DEFAULT_ISR 0501  
                                    _checkLen 6162                                    _T0CON0bits 031A  
                                  _T0CON1bits 031B               __end_of_updateModuleErrorStatus 7C42  
                                   sendByte@p 0501                                    _FLASH_Read 6C54  
                       getNextWriteMessage@wr 050C                                      __ptext10 70A6  
                                    __ptext11 7A7A                                      __ptext20 55BC  
                                    __ptext12 7C78                                      __ptext21 6472  
                                    __ptext13 7108                                      __ptext30 69E2  
                                    __ptext22 16E6                                      __ptext14 68DE  
                                    __ptext31 7C7E                                      __ptext23 6960  
                                    __ptext15 7C54                                      __ptext40 63DA  
                                    __ptext32 6A64                                      __ptext24 7478  
                                    __ptext16 2784                                      __ptext41 4CDE  
                                    __ptext33 778E                                      __ptext25 53EA  
                                    __ptext17 2B64                                      __ptext50 7CA6  
                                    __ptext42 77C2                                      __ptext34 576A  
                                    __ptext26 43DA                                      __ptext18 0A06  
                                    __ptext51 7B12                                      __ptext43 6E2A  
                                    __ptext35 7AF0                                      __ptext27 74C4  
                                    __ptext19 3584                                      __ptext60 7920  
                                    __ptext52 7B94                                      __ptext44 5694  
                                    __ptext36 329C                                      __ptext28 7950  
                                    __ptext61 722A                                      __ptext53 7B34  
                                    __ptext45 7CA2                                      __ptext37 6508  
                                    __ptext29 7BE6                                      __ptext70 1EBE  
                                    __ptext62 797E                                      __ptext54 77F6  
                                    __ptext46 6202                                      __ptext38 5A82  
                                    __ptext71 759E                                      __ptext63 79A8  
                                    __ptext55 7860                                      __ptext47 7C84  
                                    __ptext39 72DE                                      __ptext80 7C70  
                                    __ptext72 79FC                                      __ptext64 79D2  
                                    __ptext56 7890                                      __ptext48 662C  
                                    __ptext81 633E                                      __ptext73 7A26  
                                    __ptext65 425A                                      __ptext57 78C0  
                                    __ptext49 7CBA                                      __ptext90 6746  
                                    __ptext82 3B0A                                      __ptext74 7C5E  
                                    __ptext66 67D2                                      __ptext58 78F0  
                                    __ptext91 6B62                                      __ptext83 5B42  
                                    __ptext75 7CAA                                      __ptext67 66BA  
                                    __ptext59 5ECC                                      __ptext92 6D42  
                                    __ptext84 73DA                                      __ptext76 5CBC  
                                    __ptext68 7C42                                      __ptext93 51FC  
                                    __ptext85 5E22                                      __ptext77 7C16  
                                    __ptext69 7C8A                                      __ptext94 3EEA  
                                    __ptext86 7A50                                      __ptext78 6162  
                                    __ptext95 6E98                                      __ptext87 659A  
                                    __ptext79 52F4                                      __ptext96 75E2  
                                    __ptext88 235C                                      __ptext97 7510  
                                    __ptext89 7758                                      __ptext98 6BDC  
                                    __ptext99 7CAE                  __end_of_getNumRxBuffersInUse 6DB6  
                                ??_mnsPowerUp 050D                                      _ledTimer 0560  
                                    _ledState 0589                                 ?_EEPROM_Write 0509  
                 CAN1_OperationModeSet@status 0501                                      _initARGB 40AE  
                                 _OSCCON1bits 00AD                                   _OSCCON3bits 00AF  
                          __end_of_initTicker 716A                            __end_of_initRomOps 7C16  
                                    doNnevn@i 052D                            __end_of_paramBlock 0840  
                              canPowerUp@temp 050D                         __end_of_setLEDsByMode 75E2  
                               ?_factoryReset 0501                              _nvTRnvrdCallback 72DE  
                               findEvent@hash 052C                                      doRqevn@i 052D  
                           ?_canGetDiagnostic 0507                                      _sendByte 6FDA  
                                 getEVs@evIdx 051B                                   _IVTLOCKbits 0459  
               __end_of_APP_preProcessMessage 7CB2                            ??_canGetDiagnostic 0509  
                                 _SPI1CLKbits 008C                                      isa$xinst 0000  
                                    _testTime 0578                                      _services FF89  
                              _receiveOverrun 782C                      clearAllEvents@tableIndex 0536  
                             _nvGetDiagnostic 7890                                   ??_findEvent 0526  
                       _handleSelfEnumeration 5E22                       canSendMessage@txFifoObj 0519  
                          __end_of_mnsService FFEB                       __end_of_flushFlashBlock 633E  
                           writeEv@tableIndex 0524                            __end_of_mnsPowerUp 4810  
                                ??_showStatus 0501                                   ??_pbUpTimer 0518  
                                    _writeNVM 716A                              sendRTR@txFifoObj 0501  
                  processEnumeration@newCanId 051B                        APP_addEvent@forceOwnNN 054D  
                                 _setNewCanId 7510                                   _sendMessage 659A  
          handleSelfEnumeration@receivedCanId 050F                                 writeNVM@index 050E  
                     updateLedRange@end_ledno 0501                                 writeNVM@value 0511  
                                 ??_leds_poll 050B                    ??_factoryResetGlobalEvents 0537  
                          _evtIdxToTableIndex 7C7E                         canGetDiagnostic@index 050A  
                                 _NVMCON0bits 0040                                   _NVMCON1bits 0041  
                                    memcpy@d1 0501                                      memcpy@s1 0503  
                             _eraseFlashBlock 685A                             APP_addEvent@evVal 054C  
                           APP_addEvent@evNum 054B                       teachGetDiagnostic@index 0509  
                              ??_EEPROM_Write 050D                    __end_of_processEnumeration 40AE  
                                 getHash@hash 0521                               _C1FIFOCON1Hbits 015D  
                                    intlevel2 0000                           ?_evtIdxToTableIndex 0501  
                             _C1FIFOCON3Hbits 0175                                 ?_getParameter 0501  
                        getNextWriteMessage@q 0501                              ?_canFactoryReset 0501  
                                ?_EEPROM_Read 0501                              ___lldiv@dividend 050B  
                              ??_factoryReset 0537                                   ??_nvPowerUp 0512  
                       removeEvent@tableIndex 053A                              ?_teachGetESDdata 0501  
                    __end_of_findServiceIndex 6746                                   _removeEvent 778E  
                      APP_addEvent@nodeNumber 0547                       ?_consumerProcessMessage 0554  
                          __end_of_showStatus 4A98                mnsTRrqnpnCallback@serviceIndex 052E  
                       removeEvent@nodeNumber 0536                        ?_CAN1_OperationModeGet 0501  
                      ?_CAN1_OperationModeSet 0501                            _paramBlock_absaddr 0820  
                      __end_of_receiveOverrun 7860                           updateLedRange@ledno 0504  
                          __end_of_priorities FF59                              ??_canSendMessage 050F  
                 __end_of_teachProcessMessage 1EBE                    __end_of_tableIndexToEvtIdx 7C8A  
                        __end_of_canTransport FFFF                                  ?_FLASH_Write 0506  
                          tickGet@currentTime 0507                        ??_EEPROM_WriteNoVerify 0505  
                                    powerUp@i 052D                          ??_evtIdxToTableIndex 0501  
                           _pollTimedResponse 5A82                         __end_of_teachCheckLen 69E2  
                                 ??_updateRGB 0501                            ?_pollTimedResponse 0501  
                    _APP_processConsumedEvent 52F4                             FLASH_Read@address 0501  
                            _APP_factoryReset 7C96                       nerdCallback@eventNumber 0532  
               APP_isConsumedEvent@tableIndex 0501                              ___lldiv@quotient 0513  
                              _updateLedRange 7626                             ?_startEnumeration 0501  
                                ?_pbDownTimer 0501                                   findEvent@en 052A  
                                 findEvent@nn 0528                          findEvent@eventNumber 0524  
                                 ?_FLASH_Read 0501                                 bootEsdData@id 0501  
                  ??_canWaitForTxQueueToDrain 0501                           ??_pollTimedResponse 053D  
                            _mnsGetDiagnostic 78C0                            ??_startEnumeration 050B  
                _timedResponseAllServicesFlag 0597                               _C1FIFOSTA2Hbits 016D  
                     ??_consumerGetDiagnostic 0509                               _C1FIFOSTA1Lbits 0160  
                             _C1FIFOSTA3Hbits 0179                                ??_getParameter 0506  
                             _C1FIFOSTA2Lbits 016C                                  ?_bootEsdData 0501  
                             _C1FIFOSTA3Lbits 0178                             sendMessage2@data1 0526  
                           sendMessage2@data2 0527                             sendMessage3@data1 0526  
                           sendMessage3@data2 0527                             sendMessage3@data3 0528  
                           sendMessage4@data1 0526                             sendMessage4@data2 0527  
                           sendMessage4@data3 0528                             sendMessage4@data4 0529  
                           sendMessage5@data1 0526                             sendMessage5@data2 0527  
                           sendMessage5@data3 0528                             sendMessage5@data4 0529  
                           sendMessage5@data5 052A                             sendMessage6@data1 0526  
                           sendMessage6@data2 0527                             sendMessage6@data3 0528  
                           sendMessage6@data4 0529                             sendMessage6@data5 052A  
                           sendMessage6@data6 052B                              bootPowerUp@found 050E  
                             _last_mode_flags 059F                             sendMessage7@data1 0526  
                           sendMessage7@data2 0527                             sendMessage7@data3 0528  
                           sendMessage7@data4 0529                             sendMessage7@data5 052A  
                           sendMessage7@data6 052B                             sendMessage7@data7 052C  
              __end_of_consumerProcessMessage 386A                                _checkPowerOnPb 5F72  
                            EEPROM_Read@index 0501                      ?_prepareSelfEnumResponse 0501  
                             _last_mode_state 05A0                   __end_of_APP_isConsumedEvent 7CAE  
                     __end_of_nvGetDiagnostic 78C0                                  ?_bootPowerUp 0501  
                             ?_receiveOverrun 0501                          nvTRnvrdCallback@step 052F  
                        nvTRnvrdCallback@type 0501                   __end_of_getNextWriteMessage 52F4  
