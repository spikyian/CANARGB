

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 22 15:57:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=2
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1,group=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1,group=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=4,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=4,class=CODE,space=0,delta=1
   167                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   170                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   171   000000                     
   172                           ; Generated 24/03/2025 GMT
   173                           ; 
   174                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution. Publication is not required when
   188                           ;        this file is used in an embedded application.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18F27Q83 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206   0004E0                     bsr             equ	1248
   207   0004E9                     fsr0            equ	1257
   208   0004EA                     fsr0h           equ	1258
   209   0004E9                     fsr0l           equ	1257
   210   0004E1                     fsr1            equ	1249
   211   0004E2                     fsr1h           equ	1250
   212   0004E1                     fsr1l           equ	1249
   213   0004D9                     fsr2            equ	1241
   214   0004DA                     fsr2h           equ	1242
   215   0004D9                     fsr2l           equ	1241
   216   0004EF                     indf0           equ	1263
   217   0004E7                     indf1           equ	1255
   218   0004DF                     indf2           equ	1247
   219   0004D6                     intcon          equ	1238
   220   000041                     nvmcon          equ	65
   221   0004F9                     pcl             equ	1273
   222   0004FA                     pclath          equ	1274
   223   0004FB                     pclatu          equ	1275
   224   0004EB                     plusw0          equ	1259
   225   0004E3                     plusw1          equ	1251
   226   0004DB                     plusw2          equ	1243
   227   0004ED                     postdec0        equ	1261
   228   0004E5                     postdec1        equ	1253
   229   0004DD                     postdec2        equ	1245
   230   0004EE                     postinc0        equ	1262
   231   0004E6                     postinc1        equ	1254
   232   0004DE                     postinc2        equ	1246
   233   0004EC                     preinc0         equ	1260
   234   0004E4                     preinc1         equ	1252
   235   0004DC                     preinc2         equ	1244
   236   0004F3                     prod            equ	1267
   237   0004F4                     prodh           equ	1268
   238   0004F3                     prodl           equ	1267
   239   0004D8                     status          equ	1240
   240   0004F5                     tablat          equ	1269
   241   0004F6                     tblptr          equ	1270
   242   0004F7                     tblptrh         equ	1271
   243   0004F6                     tblptrl         equ	1270
   244   0004F8                     tblptru         equ	1272
   245   0004FD                     tosl            equ	1277
   246   0004E8                     wreg            equ	1256
   247   000038                     BOOTREG         equ	56	;# 
   248   000039                     CLKRCON         equ	57	;# 
   249   00003A                     CLKRCLK         equ	58	;# 
   250   000040                     NVMCON0         equ	64	;# 
   251   000041                     NVMCON1         equ	65	;# 
   252   000042                     NVMLOCK         equ	66	;# 
   253   000043                     NVMADR          equ	67	;# 
   254   000043                     NVMADRL         equ	67	;# 
   255   000044                     NVMADRH         equ	68	;# 
   256   000045                     NVMADRU         equ	69	;# 
   257   000046                     NVMDAT          equ	70	;# 
   258   000046                     NVMDATL         equ	70	;# 
   259   000047                     NVMDATH         equ	71	;# 
   260   000048                     VREGCON         equ	72	;# 
   261   000049                     BORCON          equ	73	;# 
   262   00004A                     HLVDCON0        equ	74	;# 
   263   00004B                     HLVDCON1        equ	75	;# 
   264   00004C                     ZCDCON          equ	76	;# 
   265   000060                     PMD0            equ	96	;# 
   266   000061                     PMD1            equ	97	;# 
   267   000062                     PMD2            equ	98	;# 
   268   000063                     PMD3            equ	99	;# 
   269   000064                     PMD4            equ	100	;# 
   270   000065                     PMD5            equ	101	;# 
   271   000066                     PMD6            equ	102	;# 
   272   000067                     PMD7            equ	103	;# 
   273   000068                     PMD8            equ	104	;# 
   274   00006A                     MD1CON0         equ	106	;# 
   275   00006B                     MD1CON1         equ	107	;# 
   276   00006C                     MD1SRC          equ	108	;# 
   277   00006D                     MD1CARL         equ	109	;# 
   278   00006E                     MD1CARH         equ	110	;# 
   279   00006F                     CMOUT           equ	111	;# 
   280   000070                     CM1CON0         equ	112	;# 
   281   000071                     CM1CON1         equ	113	;# 
   282   000072                     CM1NCH          equ	114	;# 
   283   000073                     CM1PCH          equ	115	;# 
   284   000074                     CM2CON0         equ	116	;# 
   285   000075                     CM2CON1         equ	117	;# 
   286   000076                     CM2NCH          equ	118	;# 
   287   000077                     CM2PCH          equ	119	;# 
   288   000078                     WDTCON0         equ	120	;# 
   289   000079                     WDTCON1         equ	121	;# 
   290   00007A                     WDTPSL          equ	122	;# 
   291   00007B                     WDTPSH          equ	123	;# 
   292   00007C                     WDTTMR          equ	124	;# 
   293   00007D                     DAC1DAT         equ	125	;# 
   294   00007D                     DAC1DATL        equ	125	;# 
   295   00007F                     DAC1CON         equ	127	;# 
   296   000080                     SPI1RXB         equ	128	;# 
   297   000081                     SPI1TXB         equ	129	;# 
   298   000082                     SPI1TCNT        equ	130	;# 
   299   000082                     SPI1TCNTL       equ	130	;# 
   300   000083                     SPI1TCNTH       equ	131	;# 
   301   000084                     SPI1CON0        equ	132	;# 
   302   000085                     SPI1CON1        equ	133	;# 
   303   000086                     SPI1CON2        equ	134	;# 
   304   000087                     SPI1STATUS      equ	135	;# 
   305   000088                     SPI1TWIDTH      equ	136	;# 
   306   000089                     SPI1BAUD        equ	137	;# 
   307   00008A                     SPI1INTF        equ	138	;# 
   308   00008B                     SPI1INTE        equ	139	;# 
   309   00008C                     SPI1CLK         equ	140	;# 
   310   00008D                     SPI2RXB         equ	141	;# 
   311   00008E                     SPI2TXB         equ	142	;# 
   312   00008F                     SPI2TCNT        equ	143	;# 
   313   00008F                     SPI2TCNTL       equ	143	;# 
   314   000090                     SPI2TCNTH       equ	144	;# 
   315   000091                     SPI2CON0        equ	145	;# 
   316   000092                     SPI2CON1        equ	146	;# 
   317   000093                     SPI2CON2        equ	147	;# 
   318   000094                     SPI2STATUS      equ	148	;# 
   319   000095                     SPI2TWIDTH      equ	149	;# 
   320   000096                     SPI2BAUD        equ	150	;# 
   321   000097                     SPI2INTF        equ	151	;# 
   322   000098                     SPI2INTE        equ	152	;# 
   323   000099                     SPI2CLK         equ	153	;# 
   324   0000AC                     ACTCON          equ	172	;# 
   325   0000AD                     OSCCON1         equ	173	;# 
   326   0000AE                     OSCCON2         equ	174	;# 
   327   0000AF                     OSCCON3         equ	175	;# 
   328   0000B0                     OSCTUNE         equ	176	;# 
   329   0000B1                     OSCFRQ          equ	177	;# 
   330   0000B1                     OSCFREQ         equ	177	;# 
   331   0000B2                     OSCSTAT         equ	178	;# 
   332   0000B2                     OSCSTAT1        equ	178	;# 
   333   0000B3                     OSCEN           equ	179	;# 
   334   0000B4                     PRLOCK          equ	180	;# 
   335   0000B5                     SCANPR          equ	181	;# 
   336   0000B6                     DMA1PR          equ	182	;# 
   337   0000B7                     DMA2PR          equ	183	;# 
   338   0000B8                     DMA3PR          equ	184	;# 
   339   0000B9                     DMA4PR          equ	185	;# 
   340   0000BA                     DMA5PR          equ	186	;# 
   341   0000BB                     DMA6PR          equ	187	;# 
   342   0000BC                     DMA7PR          equ	188	;# 
   343   0000BD                     DMA8PR          equ	189	;# 
   344   0000BE                     MAINPR          equ	190	;# 
   345   0000BF                     ISRPR           equ	191	;# 
   346   0000D4                     CLCDATA         equ	212	;# 
   347   0000D5                     CLCSELECT       equ	213	;# 
   348   0000D6                     CLCnCON         equ	214	;# 
   349   0000D7                     CLCnPOL         equ	215	;# 
   350   0000D8                     CLCnSEL0        equ	216	;# 
   351   0000D9                     CLCnSEL1        equ	217	;# 
   352   0000DA                     CLCnSEL2        equ	218	;# 
   353   0000DB                     CLCnSEL3        equ	219	;# 
   354   0000DC                     CLCnGLS0        equ	220	;# 
   355   0000DD                     CLCnGLS1        equ	221	;# 
   356   0000DE                     CLCnGLS2        equ	222	;# 
   357   0000DF                     CLCnGLS3        equ	223	;# 
   358   0000E8                     DMASELECT       equ	232	;# 
   359   0000E9                     DMAnBUF         equ	233	;# 
   360   0000EA                     DMAnDCNT        equ	234	;# 
   361   0000EA                     DMAnDCNTL       equ	234	;# 
   362   0000EB                     DMAnDCNTH       equ	235	;# 
   363   0000EC                     DMAnDPTR        equ	236	;# 
   364   0000EC                     DMAnDPTRL       equ	236	;# 
   365   0000ED                     DMAnDPTRH       equ	237	;# 
   366   0000EE                     DMAnDSZ         equ	238	;# 
   367   0000EE                     DMAnDSZL        equ	238	;# 
   368   0000EF                     DMAnDSZH        equ	239	;# 
   369   0000F0                     DMAnDSA         equ	240	;# 
   370   0000F0                     DMAnDSAL        equ	240	;# 
   371   0000F1                     DMAnDSAH        equ	241	;# 
   372   0000F2                     DMAnSCNT        equ	242	;# 
   373   0000F2                     DMAnSCNTL       equ	242	;# 
   374   0000F3                     DMAnSCNTH       equ	243	;# 
   375   0000F4                     DMAnSPTR        equ	244	;# 
   376   0000F4                     DMAnSPTRL       equ	244	;# 
   377   0000F5                     DMAnSPTRH       equ	245	;# 
   378   0000F6                     DMAnSPTRU       equ	246	;# 
   379   0000F7                     DMAnSSZ         equ	247	;# 
   380   0000F7                     DMAnSSZL        equ	247	;# 
   381   0000F8                     DMAnSSZH        equ	248	;# 
   382   0000F9                     DMAnSSA         equ	249	;# 
   383   0000F9                     DMAnSSAL        equ	249	;# 
   384   0000FA                     DMAnSSAH        equ	250	;# 
   385   0000FB                     DMAnSSAU        equ	251	;# 
   386   0000FC                     DMAnCON0        equ	252	;# 
   387   0000FD                     DMAnCON1        equ	253	;# 
   388   0000FE                     DMAnAIRQ        equ	254	;# 
   389   0000FF                     DMAnSIRQ        equ	255	;# 
   390   000100                     C1CONL          equ	256	;# 
   391   000101                     C1CONH          equ	257	;# 
   392   000102                     C1CONU          equ	258	;# 
   393   000103                     C1CONT          equ	259	;# 
   394   000104                     C1NBTCFGL       equ	260	;# 
   395   000105                     C1NBTCFGH       equ	261	;# 
   396   000106                     C1NBTCFGU       equ	262	;# 
   397   000107                     C1NBTCFGT       equ	263	;# 
   398   000108                     C1DBTCFGL       equ	264	;# 
   399   000109                     C1DBTCFGH       equ	265	;# 
   400   00010A                     C1DBTCFGU       equ	266	;# 
   401   00010B                     C1DBTCFGT       equ	267	;# 
   402   00010C                     C1TDCL          equ	268	;# 
   403   00010D                     C1TDCH          equ	269	;# 
   404   00010E                     C1TDCU          equ	270	;# 
   405   000110                     C1TBC           equ	272	;# 
   406   000110                     C1TBCL          equ	272	;# 
   407   000111                     C1TBCH          equ	273	;# 
   408   000112                     C1TBCU          equ	274	;# 
   409   000113                     C1TBCT          equ	275	;# 
   410   000114                     C1TSCONL        equ	276	;# 
   411   000115                     C1TSCONH        equ	277	;# 
   412   000116                     C1TSCONU        equ	278	;# 
   413   000117                     C1TSCONT        equ	279	;# 
   414   000118                     C1VECL          equ	280	;# 
   415   000119                     C1VECH          equ	281	;# 
   416   00011A                     C1VECU          equ	282	;# 
   417   00011B                     C1VECT          equ	283	;# 
   418   00011C                     C1INTL          equ	284	;# 
   419   00011D                     C1INTH          equ	285	;# 
   420   00011E                     C1INTU          equ	286	;# 
   421   00011F                     C1INTT          equ	287	;# 
   422   000120                     C1RXIF          equ	288	;# 
   423   000120                     C1RXIFL         equ	288	;# 
   424   000121                     C1RXIFH         equ	289	;# 
   425   000122                     C1RXIFU         equ	290	;# 
   426   000123                     C1RXIFT         equ	291	;# 
   427   000124                     C1TXIF          equ	292	;# 
   428   000124                     C1TXIFL         equ	292	;# 
   429   000125                     C1TXIFH         equ	293	;# 
   430   000126                     C1TXIFU         equ	294	;# 
   431   000127                     C1TXIFT         equ	295	;# 
   432   000128                     C1RXOVIF        equ	296	;# 
   433   000128                     C1RXOVIFL       equ	296	;# 
   434   000129                     C1RXOVIFH       equ	297	;# 
   435   00012A                     C1RXOVIFU       equ	298	;# 
   436   00012B                     C1RXOVIFT       equ	299	;# 
   437   00012C                     C1TXATIF        equ	300	;# 
   438   00012C                     C1TXATIFL       equ	300	;# 
   439   00012D                     C1TXATIFH       equ	301	;# 
   440   00012E                     C1TXATIFU       equ	302	;# 
   441   00012F                     C1TXATIFT       equ	303	;# 
   442   000130                     C1TXREQ         equ	304	;# 
   443   000130                     C1TXREQL        equ	304	;# 
   444   000131                     C1TXREQH        equ	305	;# 
   445   000132                     C1TXREQU        equ	306	;# 
   446   000133                     C1TXREQT        equ	307	;# 
   447   000134                     C1TRECL         equ	308	;# 
   448   000135                     C1TRECH         equ	309	;# 
   449   000136                     C1TRECU         equ	310	;# 
   450   000137                     C1TRECT         equ	311	;# 
   451   000138                     C1BDIAG0L       equ	312	;# 
   452   000139                     C1BDIAG0H       equ	313	;# 
   453   00013C                     C1BDIAG1L       equ	316	;# 
   454   00013D                     C1BDIAG1H       equ	317	;# 
   455   00013E                     C1BDIAG1U       equ	318	;# 
   456   00013F                     C1BDIAG1T       equ	319	;# 
   457   000140                     C1TEFCONL       equ	320	;# 
   458   000141                     C1TEFCONH       equ	321	;# 
   459   000142                     C1TEFCONU       equ	322	;# 
   460   000143                     C1TEFCONT       equ	323	;# 
   461   000144                     C1TEFSTAL       equ	324	;# 
   462   000145                     C1TEFSTAH       equ	325	;# 
   463   000146                     C1TEFSTAU       equ	326	;# 
   464   000147                     C1TEFSTAT       equ	327	;# 
   465   000148                     C1TEFUA         equ	328	;# 
   466   000148                     C1TEFUAL        equ	328	;# 
   467   000149                     C1TEFUAH        equ	329	;# 
   468   00014A                     C1TEFUAU        equ	330	;# 
   469   00014B                     C1TEFUAT        equ	331	;# 
   470   00014C                     C1FIFOBA        equ	332	;# 
   471   00014C                     C1FIFOBAL       equ	332	;# 
   472   00014D                     C1FIFOBAH       equ	333	;# 
   473   00014E                     C1FIFOBAU       equ	334	;# 
   474   00014F                     C1FIFOBAT       equ	335	;# 
   475   000150                     C1TXQCONL       equ	336	;# 
   476   000151                     C1TXQCONH       equ	337	;# 
   477   000152                     C1TXQCONU       equ	338	;# 
   478   000153                     C1TXQCONT       equ	339	;# 
   479   000154                     C1TXQSTAL       equ	340	;# 
   480   000155                     C1TXQSTAH       equ	341	;# 
   481   000156                     C1TXQSTAU       equ	342	;# 
   482   000157                     C1TXQSTAT       equ	343	;# 
   483   000158                     C1TXQUA         equ	344	;# 
   484   000158                     C1TXQUAL        equ	344	;# 
   485   000159                     C1TXQUAH        equ	345	;# 
   486   00015A                     C1TXQUAU        equ	346	;# 
   487   00015B                     C1TXQUAT        equ	347	;# 
   488   00015C                     C1FIFOCON1      equ	348	;# 
   489   00015C                     C1FIFOCON1L     equ	348	;# 
   490   00015D                     C1FIFOCON1H     equ	349	;# 
   491   00015E                     C1FIFOCON1U     equ	350	;# 
   492   00015F                     C1FIFOCON1T     equ	351	;# 
   493   000160                     C1FIFOSTA1      equ	352	;# 
   494   000160                     C1FIFOSTA1L     equ	352	;# 
   495   000161                     C1FIFOSTA1H     equ	353	;# 
   496   000162                     C1FIFOSTA1U     equ	354	;# 
   497   000163                     C1FIFOSTA1T     equ	355	;# 
   498   000164                     C1FIFOUA1       equ	356	;# 
   499   000164                     C1FIFOUA1L      equ	356	;# 
   500   000165                     C1FIFOUA1H      equ	357	;# 
   501   000166                     C1FIFOUA1U      equ	358	;# 
   502   000167                     C1FIFOUA1T      equ	359	;# 
   503   000168                     C1FIFOCON2      equ	360	;# 
   504   000168                     C1FIFOCON2L     equ	360	;# 
   505   000169                     C1FIFOCON2H     equ	361	;# 
   506   00016A                     C1FIFOCON2U     equ	362	;# 
   507   00016B                     C1FIFOCON2T     equ	363	;# 
   508   00016C                     C1FIFOSTA2      equ	364	;# 
   509   00016C                     C1FIFOSTA2L     equ	364	;# 
   510   00016D                     C1FIFOSTA2H     equ	365	;# 
   511   00016E                     C1FIFOSTA2U     equ	366	;# 
   512   00016F                     C1FIFOSTA2T     equ	367	;# 
   513   000170                     C1FIFOUA2       equ	368	;# 
   514   000170                     C1FIFOUA2L      equ	368	;# 
   515   000171                     C1FIFOUA2H      equ	369	;# 
   516   000172                     C1FIFOUA2U      equ	370	;# 
   517   000173                     C1FIFOUA2T      equ	371	;# 
   518   000174                     C1FIFOCON3      equ	372	;# 
   519   000174                     C1FIFOCON3L     equ	372	;# 
   520   000175                     C1FIFOCON3H     equ	373	;# 
   521   000176                     C1FIFOCON3U     equ	374	;# 
   522   000177                     C1FIFOCON3T     equ	375	;# 
   523   000178                     C1FIFOSTA3      equ	376	;# 
   524   000178                     C1FIFOSTA3L     equ	376	;# 
   525   000179                     C1FIFOSTA3H     equ	377	;# 
   526   00017A                     C1FIFOSTA3U     equ	378	;# 
   527   00017B                     C1FIFOSTA3T     equ	379	;# 
   528   00017C                     C1FIFOUA3       equ	380	;# 
   529   00017C                     C1FIFOUA3L      equ	380	;# 
   530   00017D                     C1FIFOUA3H      equ	381	;# 
   531   00017E                     C1FIFOUA3U      equ	382	;# 
   532   00017F                     C1FIFOUA3T      equ	383	;# 
   533   000180                     C1FLTCON0L      equ	384	;# 
   534   000181                     C1FLTCON0H      equ	385	;# 
   535   000182                     C1FLTCON0U      equ	386	;# 
   536   000183                     C1FLTCON0T      equ	387	;# 
   537   000184                     C1FLTCON1L      equ	388	;# 
   538   000185                     C1FLTCON1H      equ	389	;# 
   539   000186                     C1FLTCON1U      equ	390	;# 
   540   000187                     C1FLTCON1T      equ	391	;# 
   541   000188                     C1FLTCON2L      equ	392	;# 
   542   000189                     C1FLTCON2H      equ	393	;# 
   543   00018A                     C1FLTCON2U      equ	394	;# 
   544   00018B                     C1FLTCON2T      equ	395	;# 
   545   00018C                     C1FLTOBJ0       equ	396	;# 
   546   00018C                     C1FLTOBJ0L      equ	396	;# 
   547   00018D                     C1FLTOBJ0H      equ	397	;# 
   548   00018E                     C1FLTOBJ0U      equ	398	;# 
   549   00018F                     C1FLTOBJ0T      equ	399	;# 
   550   000190                     C1MASK0         equ	400	;# 
   551   000190                     C1MASK0L        equ	400	;# 
   552   000191                     C1MASK0H        equ	401	;# 
   553   000192                     C1MASK0U        equ	402	;# 
   554   000193                     C1MASK0T        equ	403	;# 
   555   000194                     C1FLTOBJ1       equ	404	;# 
   556   000194                     C1FLTOBJ1L      equ	404	;# 
   557   000195                     C1FLTOBJ1H      equ	405	;# 
   558   000196                     C1FLTOBJ1U      equ	406	;# 
   559   000197                     C1FLTOBJ1T      equ	407	;# 
   560   000198                     C1MASK1         equ	408	;# 
   561   000198                     C1MASK1L        equ	408	;# 
   562   000199                     C1MASK1H        equ	409	;# 
   563   00019A                     C1MASK1U        equ	410	;# 
   564   00019B                     C1MASK1T        equ	411	;# 
   565   00019C                     C1FLTOBJ2       equ	412	;# 
   566   00019C                     C1FLTOBJ2L      equ	412	;# 
   567   00019D                     C1FLTOBJ2H      equ	413	;# 
   568   00019E                     C1FLTOBJ2U      equ	414	;# 
   569   00019F                     C1FLTOBJ2T      equ	415	;# 
   570   0001A0                     C1MASK2         equ	416	;# 
   571   0001A0                     C1MASK2L        equ	416	;# 
   572   0001A1                     C1MASK2H        equ	417	;# 
   573   0001A2                     C1MASK2U        equ	418	;# 
   574   0001A3                     C1MASK2T        equ	419	;# 
   575   0001A4                     C1FLTOBJ3       equ	420	;# 
   576   0001A4                     C1FLTOBJ3L      equ	420	;# 
   577   0001A5                     C1FLTOBJ3H      equ	421	;# 
   578   0001A6                     C1FLTOBJ3U      equ	422	;# 
   579   0001A7                     C1FLTOBJ3T      equ	423	;# 
   580   0001A8                     C1MASK3         equ	424	;# 
   581   0001A8                     C1MASK3L        equ	424	;# 
   582   0001A9                     C1MASK3H        equ	425	;# 
   583   0001AA                     C1MASK3U        equ	426	;# 
   584   0001AB                     C1MASK3T        equ	427	;# 
   585   0001AC                     C1FLTOBJ4       equ	428	;# 
   586   0001AC                     C1FLTOBJ4L      equ	428	;# 
   587   0001AD                     C1FLTOBJ4H      equ	429	;# 
   588   0001AE                     C1FLTOBJ4U      equ	430	;# 
   589   0001AF                     C1FLTOBJ4T      equ	431	;# 
   590   0001B0                     C1MASK4         equ	432	;# 
   591   0001B0                     C1MASK4L        equ	432	;# 
   592   0001B1                     C1MASK4H        equ	433	;# 
   593   0001B2                     C1MASK4U        equ	434	;# 
   594   0001B3                     C1MASK4T        equ	435	;# 
   595   0001B4                     C1FLTOBJ5       equ	436	;# 
   596   0001B4                     C1FLTOBJ5L      equ	436	;# 
   597   0001B5                     C1FLTOBJ5H      equ	437	;# 
   598   0001B6                     C1FLTOBJ5U      equ	438	;# 
   599   0001B7                     C1FLTOBJ5T      equ	439	;# 
   600   0001B8                     C1MASK5         equ	440	;# 
   601   0001B8                     C1MASK5L        equ	440	;# 
   602   0001B9                     C1MASK5H        equ	441	;# 
   603   0001BA                     C1MASK5U        equ	442	;# 
   604   0001BB                     C1MASK5T        equ	443	;# 
   605   0001BC                     C1FLTOBJ6       equ	444	;# 
   606   0001BC                     C1FLTOBJ6L      equ	444	;# 
   607   0001BD                     C1FLTOBJ6H      equ	445	;# 
   608   0001BE                     C1FLTOBJ6U      equ	446	;# 
   609   0001BF                     C1FLTOBJ6T      equ	447	;# 
   610   0001C0                     C1MASK6         equ	448	;# 
   611   0001C0                     C1MASK6L        equ	448	;# 
   612   0001C1                     C1MASK6H        equ	449	;# 
   613   0001C2                     C1MASK6U        equ	450	;# 
   614   0001C3                     C1MASK6T        equ	451	;# 
   615   0001C4                     C1FLTOBJ7       equ	452	;# 
   616   0001C4                     C1FLTOBJ7L      equ	452	;# 
   617   0001C5                     C1FLTOBJ7H      equ	453	;# 
   618   0001C6                     C1FLTOBJ7U      equ	454	;# 
   619   0001C7                     C1FLTOBJ7T      equ	455	;# 
   620   0001C8                     C1MASK7         equ	456	;# 
   621   0001C8                     C1MASK7L        equ	456	;# 
   622   0001C9                     C1MASK7H        equ	457	;# 
   623   0001CA                     C1MASK7U        equ	458	;# 
   624   0001CB                     C1MASK7T        equ	459	;# 
   625   0001CC                     C1FLTOBJ8       equ	460	;# 
   626   0001CC                     C1FLTOBJ8L      equ	460	;# 
   627   0001CD                     C1FLTOBJ8H      equ	461	;# 
   628   0001CE                     C1FLTOBJ8U      equ	462	;# 
   629   0001CF                     C1FLTOBJ8T      equ	463	;# 
   630   0001D0                     C1MASK8         equ	464	;# 
   631   0001D0                     C1MASK8L        equ	464	;# 
   632   0001D1                     C1MASK8H        equ	465	;# 
   633   0001D2                     C1MASK8U        equ	466	;# 
   634   0001D3                     C1MASK8T        equ	467	;# 
   635   0001D4                     C1FLTOBJ9       equ	468	;# 
   636   0001D4                     C1FLTOBJ9L      equ	468	;# 
   637   0001D5                     C1FLTOBJ9H      equ	469	;# 
   638   0001D6                     C1FLTOBJ9U      equ	470	;# 
   639   0001D7                     C1FLTOBJ9T      equ	471	;# 
   640   0001D8                     C1MASK9         equ	472	;# 
   641   0001D8                     C1MASK9L        equ	472	;# 
   642   0001D9                     C1MASK9H        equ	473	;# 
   643   0001DA                     C1MASK9U        equ	474	;# 
   644   0001DB                     C1MASK9T        equ	475	;# 
   645   0001DC                     C1FLTOBJ10      equ	476	;# 
   646   0001DC                     C1FLTOBJ10L     equ	476	;# 
   647   0001DD                     C1FLTOBJ10H     equ	477	;# 
   648   0001DE                     C1FLTOBJ10U     equ	478	;# 
   649   0001DF                     C1FLTOBJ10T     equ	479	;# 
   650   0001E0                     C1MASK10        equ	480	;# 
   651   0001E0                     C1MASK10L       equ	480	;# 
   652   0001E1                     C1MASK10H       equ	481	;# 
   653   0001E2                     C1MASK10U       equ	482	;# 
   654   0001E3                     C1MASK10T       equ	483	;# 
   655   0001E4                     C1FLTOBJ11      equ	484	;# 
   656   0001E4                     C1FLTOBJ11L     equ	484	;# 
   657   0001E5                     C1FLTOBJ11H     equ	485	;# 
   658   0001E6                     C1FLTOBJ11U     equ	486	;# 
   659   0001E7                     C1FLTOBJ11T     equ	487	;# 
   660   0001E8                     C1MASK11        equ	488	;# 
   661   0001E8                     C1MASK11L       equ	488	;# 
   662   0001E9                     C1MASK11H       equ	489	;# 
   663   0001EA                     C1MASK11U       equ	490	;# 
   664   0001EB                     C1MASK11T       equ	491	;# 
   665   000200                     PPSLOCK         equ	512	;# 
   666   000201                     RA0PPS          equ	513	;# 
   667   000202                     RA1PPS          equ	514	;# 
   668   000203                     RA2PPS          equ	515	;# 
   669   000204                     RA3PPS          equ	516	;# 
   670   000205                     RA4PPS          equ	517	;# 
   671   000206                     RA5PPS          equ	518	;# 
   672   000207                     RA6PPS          equ	519	;# 
   673   000208                     RA7PPS          equ	520	;# 
   674   000209                     RB0PPS          equ	521	;# 
   675   00020A                     RB1PPS          equ	522	;# 
   676   00020B                     RB2PPS          equ	523	;# 
   677   00020C                     RB3PPS          equ	524	;# 
   678   00020D                     RB4PPS          equ	525	;# 
   679   00020E                     RB5PPS          equ	526	;# 
   680   00020F                     RB6PPS          equ	527	;# 
   681   000210                     RB7PPS          equ	528	;# 
   682   000211                     RC0PPS          equ	529	;# 
   683   000212                     RC1PPS          equ	530	;# 
   684   000213                     RC2PPS          equ	531	;# 
   685   000214                     RC3PPS          equ	532	;# 
   686   000215                     RC4PPS          equ	533	;# 
   687   000216                     RC5PPS          equ	534	;# 
   688   000217                     RC6PPS          equ	535	;# 
   689   000218                     RC7PPS          equ	536	;# 
   690   00023D                     CANRXPPS        equ	573	;# 
   691   00023E                     INT0PPS         equ	574	;# 
   692   00023F                     INT1PPS         equ	575	;# 
   693   000240                     INT2PPS         equ	576	;# 
   694   000241                     T0CKIPPS        equ	577	;# 
   695   000242                     T1CKIPPS        equ	578	;# 
   696   000243                     T1GPPS          equ	579	;# 
   697   000244                     T3CKIPPS        equ	580	;# 
   698   000245                     T3GPPS          equ	581	;# 
   699   000246                     T5CKIPPS        equ	582	;# 
   700   000247                     T5GPPS          equ	583	;# 
   701   000248                     T2INPPS         equ	584	;# 
   702   000249                     T4INPPS         equ	585	;# 
   703   00024A                     T6INPPS         equ	586	;# 
   704   00024B                     TUIN0PPS        equ	587	;# 
   705   00024C                     TUIN1PPS        equ	588	;# 
   706   00024F                     CCP1PPS         equ	591	;# 
   707   000250                     CCP2PPS         equ	592	;# 
   708   000251                     CCP3PPS         equ	593	;# 
   709   000253                     PWM1ERSPPS      equ	595	;# 
   710   000254                     PWM2ERSPPS      equ	596	;# 
   711   000255                     PWM3ERSPPS      equ	597	;# 
   712   000256                     PWM4ERSPPS      equ	598	;# 
   713   000257                     PWMIN0PPS       equ	599	;# 
   714   000258                     PWMIN1PPS       equ	600	;# 
   715   000259                     SMT1WINPPS      equ	601	;# 
   716   00025A                     SMT1SIGPPS      equ	602	;# 
   717   00025B                     CWG1PPS         equ	603	;# 
   718   00025B                     CWG1INPPS       equ	603	;# 
   719   00025C                     CWG2PPS         equ	604	;# 
   720   00025C                     CWG2INPPS       equ	604	;# 
   721   00025D                     CWG3PPS         equ	605	;# 
   722   00025D                     CWG3INPPS       equ	605	;# 
   723   00025E                     MD1CARLPPS      equ	606	;# 
   724   00025E                     MDCARLPPS       equ	606	;# 
   725   00025F                     MD1CARHPPS      equ	607	;# 
   726   00025F                     MDCARHPPS       equ	607	;# 
   727   000260                     MD1SRCPPS       equ	608	;# 
   728   000260                     MDSRCPPS        equ	608	;# 
   729   000261                     CLCIN0PPS       equ	609	;# 
   730   000262                     CLCIN1PPS       equ	610	;# 
   731   000263                     CLCIN2PPS       equ	611	;# 
   732   000264                     CLCIN3PPS       equ	612	;# 
   733   000265                     CLCIN4PPS       equ	613	;# 
   734   000266                     CLCIN5PPS       equ	614	;# 
   735   000267                     CLCIN6PPS       equ	615	;# 
   736   000268                     CLCIN7PPS       equ	616	;# 
   737   000269                     ADACTPPS        equ	617	;# 
   738   00026A                     SPI1SCKPPS      equ	618	;# 
   739   00026B                     SPI1SDIPPS      equ	619	;# 
   740   00026C                     SPI1SSPPS       equ	620	;# 
   741   00026D                     SPI2SCKPPS      equ	621	;# 
   742   00026E                     SPI2SDIPPS      equ	622	;# 
   743   00026F                     SPI2SSPPS       equ	623	;# 
   744   000270                     I2C1SDAPPS      equ	624	;# 
   745   000271                     I2C1SCLPPS      equ	625	;# 
   746   000272                     U1RXPPS         equ	626	;# 
   747   000273                     U1CTSPPS        equ	627	;# 
   748   000274                     U2RXPPS         equ	628	;# 
   749   000275                     U2CTSPPS        equ	629	;# 
   750   000276                     U3RXPPS         equ	630	;# 
   751   000277                     U3CTSPPS        equ	631	;# 
   752   000278                     U4RXPPS         equ	632	;# 
   753   000279                     U4CTSPPS        equ	633	;# 
   754   00027A                     U5RXPPS         equ	634	;# 
   755   00027B                     U5CTSPPS        equ	635	;# 
   756   000286                     RC4I2C          equ	646	;# 
   757   000287                     RC3I2C          equ	647	;# 
   758   000288                     RB2I2C          equ	648	;# 
   759   000289                     RB1I2C          equ	649	;# 
   760   00028A                     I2C1RXB         equ	650	;# 
   761   00028B                     I2C1TXB         equ	651	;# 
   762   00028C                     I2C1CNTL        equ	652	;# 
   763   00028D                     I2C1CNTH        equ	653	;# 
   764   00028E                     I2C1ADB0        equ	654	;# 
   765   00028F                     I2C1ADB1        equ	655	;# 
   766   000290                     I2C1ADR0        equ	656	;# 
   767   000291                     I2C1ADR1        equ	657	;# 
   768   000292                     I2C1ADR2        equ	658	;# 
   769   000293                     I2C1ADR3        equ	659	;# 
   770   000294                     I2C1CON0        equ	660	;# 
   771   000295                     I2C1CON1        equ	661	;# 
   772   000296                     I2C1CON2        equ	662	;# 
   773   000297                     I2C1ERR         equ	663	;# 
   774   000298                     I2C1STAT0       equ	664	;# 
   775   000299                     I2C1STAT1       equ	665	;# 
   776   00029A                     I2C1PIR         equ	666	;# 
   777   00029B                     I2C1PIE         equ	667	;# 
   778   00029C                     I2C1BTO         equ	668	;# 
   779   00029D                     I2C1BAUD        equ	669	;# 
   780   00029E                     I2C1CLK         equ	670	;# 
   781   00029F                     I2C1BTOC        equ	671	;# 
   782   0002A1                     U1RXB           equ	673	;# 
   783   0002A1                     U1RXBL          equ	673	;# 
   784   0002A2                     U1RXCHK         equ	674	;# 
   785   0002A3                     U1TXB           equ	675	;# 
   786   0002A3                     U1TXBL          equ	675	;# 
   787   0002A4                     U1TXCHK         equ	676	;# 
   788   0002A5                     U1P1            equ	677	;# 
   789   0002A5                     U1P1L           equ	677	;# 
   790   0002A6                     U1P1H           equ	678	;# 
   791   0002A7                     U1P2            equ	679	;# 
   792   0002A7                     U1P2L           equ	679	;# 
   793   0002A8                     U1P2H           equ	680	;# 
   794   0002A9                     U1P3            equ	681	;# 
   795   0002A9                     U1P3L           equ	681	;# 
   796   0002AA                     U1P3H           equ	682	;# 
   797   0002AB                     U1CON0          equ	683	;# 
   798   0002AC                     U1CON1          equ	684	;# 
   799   0002AD                     U1CON2          equ	685	;# 
   800   0002AE                     U1BRG           equ	686	;# 
   801   0002AE                     U1BRGL          equ	686	;# 
   802   0002AF                     U1BRGH          equ	687	;# 
   803   0002B0                     U1FIFO          equ	688	;# 
   804   0002B1                     U1UIR           equ	689	;# 
   805   0002B2                     U1ERRIR         equ	690	;# 
   806   0002B3                     U1ERRIE         equ	691	;# 
   807   0002B4                     U2RXB           equ	692	;# 
   808   0002B4                     U2RXBL          equ	692	;# 
   809   0002B5                     U2RXCHK         equ	693	;# 
   810   0002B6                     U2TXB           equ	694	;# 
   811   0002B6                     U2TXBL          equ	694	;# 
   812   0002B7                     U2TXCHK         equ	695	;# 
   813   0002B8                     U2P1            equ	696	;# 
   814   0002B8                     U2P1L           equ	696	;# 
   815   0002B9                     U2P1H           equ	697	;# 
   816   0002BA                     U2P2            equ	698	;# 
   817   0002BA                     U2P2L           equ	698	;# 
   818   0002BB                     U2P2H           equ	699	;# 
   819   0002BC                     U2P3            equ	700	;# 
   820   0002BC                     U2P3L           equ	700	;# 
   821   0002BD                     U2P3H           equ	701	;# 
   822   0002BE                     U2CON0          equ	702	;# 
   823   0002BF                     U2CON1          equ	703	;# 
   824   0002C0                     U2CON2          equ	704	;# 
   825   0002C1                     U2BRG           equ	705	;# 
   826   0002C1                     U2BRGL          equ	705	;# 
   827   0002C2                     U2BRGH          equ	706	;# 
   828   0002C3                     U2FIFO          equ	707	;# 
   829   0002C4                     U2UIR           equ	708	;# 
   830   0002C5                     U2ERRIR         equ	709	;# 
   831   0002C6                     U2ERRIE         equ	710	;# 
   832   0002C7                     U3RXB           equ	711	;# 
   833   0002C7                     U3RXBL          equ	711	;# 
   834   0002C9                     U3TXB           equ	713	;# 
   835   0002C9                     U3TXBL          equ	713	;# 
   836   0002CB                     U3P1            equ	715	;# 
   837   0002CB                     U3P1L           equ	715	;# 
   838   0002CD                     U3P2            equ	717	;# 
   839   0002CD                     U3P2L           equ	717	;# 
   840   0002CF                     U3P3            equ	719	;# 
   841   0002CF                     U3P3L           equ	719	;# 
   842   0002D1                     U3CON0          equ	721	;# 
   843   0002D2                     U3CON1          equ	722	;# 
   844   0002D3                     U3CON2          equ	723	;# 
   845   0002D4                     U3BRG           equ	724	;# 
   846   0002D4                     U3BRGL          equ	724	;# 
   847   0002D5                     U3BRGH          equ	725	;# 
   848   0002D6                     U3FIFO          equ	726	;# 
   849   0002D7                     U3UIR           equ	727	;# 
   850   0002D8                     U3ERRIR         equ	728	;# 
   851   0002D9                     U3ERRIE         equ	729	;# 
   852   0002DA                     U4RXB           equ	730	;# 
   853   0002DA                     U4RXBL          equ	730	;# 
   854   0002DC                     U4TXB           equ	732	;# 
   855   0002DC                     U4TXBL          equ	732	;# 
   856   0002DE                     U4P1            equ	734	;# 
   857   0002DE                     U4P1L           equ	734	;# 
   858   0002E0                     U4P2            equ	736	;# 
   859   0002E0                     U4P2L           equ	736	;# 
   860   0002E2                     U4P3            equ	738	;# 
   861   0002E2                     U4P3L           equ	738	;# 
   862   0002E4                     U4CON0          equ	740	;# 
   863   0002E5                     U4CON1          equ	741	;# 
   864   0002E6                     U4CON2          equ	742	;# 
   865   0002E7                     U4BRG           equ	743	;# 
   866   0002E7                     U4BRGL          equ	743	;# 
   867   0002E8                     U4BRGH          equ	744	;# 
   868   0002E9                     U4FIFO          equ	745	;# 
   869   0002EA                     U4UIR           equ	746	;# 
   870   0002EB                     U4ERRIR         equ	747	;# 
   871   0002EC                     U4ERRIE         equ	748	;# 
   872   0002ED                     U5RXB           equ	749	;# 
   873   0002ED                     U5RXBL          equ	749	;# 
   874   0002EF                     U5TXB           equ	751	;# 
   875   0002EF                     U5TXBL          equ	751	;# 
   876   0002F1                     U5P1            equ	753	;# 
   877   0002F1                     U5P1L           equ	753	;# 
   878   0002F3                     U5P2            equ	755	;# 
   879   0002F3                     U5P2L           equ	755	;# 
   880   0002F5                     U5P3            equ	757	;# 
   881   0002F5                     U5P3L           equ	757	;# 
   882   0002F7                     U5CON0          equ	759	;# 
   883   0002F8                     U5CON1          equ	760	;# 
   884   0002F9                     U5CON2          equ	761	;# 
   885   0002FA                     U5BRG           equ	762	;# 
   886   0002FA                     U5BRGL          equ	762	;# 
   887   0002FB                     U5BRGH          equ	763	;# 
   888   0002FC                     U5FIFO          equ	764	;# 
   889   0002FD                     U5UIR           equ	765	;# 
   890   0002FE                     U5ERRIR         equ	766	;# 
   891   0002FF                     U5ERRIE         equ	767	;# 
   892   000300                     SMT1TMR         equ	768	;# 
   893   000300                     SMT1TMRL        equ	768	;# 
   894   000301                     SMT1TMRH        equ	769	;# 
   895   000302                     SMT1TMRU        equ	770	;# 
   896   000303                     SMT1CPR         equ	771	;# 
   897   000303                     SMT1CPRL        equ	771	;# 
   898   000304                     SMT1CPRH        equ	772	;# 
   899   000305                     SMT1CPRU        equ	773	;# 
   900   000306                     SMT1CPW         equ	774	;# 
   901   000306                     SMT1CPWL        equ	774	;# 
   902   000307                     SMT1CPWH        equ	775	;# 
   903   000308                     SMT1CPWU        equ	776	;# 
   904   000309                     SMT1PR          equ	777	;# 
   905   000309                     SMT1PRL         equ	777	;# 
   906   00030A                     SMT1PRH         equ	778	;# 
   907   00030B                     SMT1PRU         equ	779	;# 
   908   00030C                     SMT1CON0        equ	780	;# 
   909   00030D                     SMT1CON1        equ	781	;# 
   910   00030E                     SMT1STAT        equ	782	;# 
   911   00030F                     SMT1CLK         equ	783	;# 
   912   000310                     SMT1SIG         equ	784	;# 
   913   000311                     SMT1WIN         equ	785	;# 
   914   000318                     TMR0L           equ	792	;# 
   915   000318                     TMR0            equ	792	;# 
   916   000319                     TMR0H           equ	793	;# 
   917   000319                     PR0             equ	793	;# 
   918   00031A                     T0CON0          equ	794	;# 
   919   00031B                     T0CON1          equ	795	;# 
   920   00031C                     TMR1            equ	796	;# 
   921   00031C                     TMR1L           equ	796	;# 
   922   00031D                     TMR1H           equ	797	;# 
   923   00031E                     T1CON           equ	798	;# 
   924   00031E                     TMR1CON         equ	798	;# 
   925   00031F                     T1GCON          equ	799	;# 
   926   00031F                     TMR1GCON        equ	799	;# 
   927   000320                     T1GATE          equ	800	;# 
   928   000320                     TMR1GATE        equ	800	;# 
   929   000321                     T1CLK           equ	801	;# 
   930   000321                     TMR1CLK         equ	801	;# 
   931   000321                     PR1             equ	801	;# 
   932   000322                     T2TMR           equ	802	;# 
   933   000322                     TMR2            equ	802	;# 
   934   000323                     T2PR            equ	803	;# 
   935   000323                     PR2             equ	803	;# 
   936   000324                     T2CON           equ	804	;# 
   937   000325                     T2HLT           equ	805	;# 
   938   000326                     T2CLKCON        equ	806	;# 
   939   000326                     T2CLK           equ	806	;# 
   940   000327                     T2RST           equ	807	;# 
   941   000328                     TMR3            equ	808	;# 
   942   000328                     TMR3L           equ	808	;# 
   943   000329                     TMR3H           equ	809	;# 
   944   00032A                     T3CON           equ	810	;# 
   945   00032A                     TMR3CON         equ	810	;# 
   946   00032B                     T3GCON          equ	811	;# 
   947   00032B                     TMR3GCON        equ	811	;# 
   948   00032C                     T3GATE          equ	812	;# 
   949   00032C                     TMR3GATE        equ	812	;# 
   950   00032D                     T3CLK           equ	813	;# 
   951   00032D                     TMR3CLK         equ	813	;# 
   952   00032D                     PR3             equ	813	;# 
   953   00032E                     T4TMR           equ	814	;# 
   954   00032E                     TMR4            equ	814	;# 
   955   00032F                     T4PR            equ	815	;# 
   956   00032F                     PR4             equ	815	;# 
   957   000330                     T4CON           equ	816	;# 
   958   000331                     T4HLT           equ	817	;# 
   959   000332                     T4CLKCON        equ	818	;# 
   960   000332                     T4CLK           equ	818	;# 
   961   000333                     T4RST           equ	819	;# 
   962   000334                     TMR5            equ	820	;# 
   963   000334                     TMR5L           equ	820	;# 
   964   000335                     TMR5H           equ	821	;# 
   965   000336                     T5CON           equ	822	;# 
   966   000336                     TMR5CON         equ	822	;# 
   967   000337                     T5GCON          equ	823	;# 
   968   000337                     TMR5GCON        equ	823	;# 
   969   000338                     T5GATE          equ	824	;# 
   970   000338                     TMR5GATE        equ	824	;# 
   971   000339                     T5CLK           equ	825	;# 
   972   000339                     TMR5CLK         equ	825	;# 
   973   000339                     PR5             equ	825	;# 
   974   00033A                     T6TMR           equ	826	;# 
   975   00033A                     TMR6            equ	826	;# 
   976   00033B                     T6PR            equ	827	;# 
   977   00033B                     PR6             equ	827	;# 
   978   00033C                     T6CON           equ	828	;# 
   979   00033D                     T6HLT           equ	829	;# 
   980   00033E                     T6CLKCON        equ	830	;# 
   981   00033E                     T6CLK           equ	830	;# 
   982   00033F                     T6RST           equ	831	;# 
   983   000340                     CCPR1           equ	832	;# 
   984   000340                     CCPR1L          equ	832	;# 
   985   000341                     CCPR1H          equ	833	;# 
   986   000342                     CCP1CON         equ	834	;# 
   987   000343                     CCP1CAP         equ	835	;# 
   988   000344                     CCPR2           equ	836	;# 
   989   000344                     CCPR2L          equ	836	;# 
   990   000345                     CCPR2H          equ	837	;# 
   991   000346                     CCP2CON         equ	838	;# 
   992   000347                     CCP2CAP         equ	839	;# 
   993   000348                     CCPR3           equ	840	;# 
   994   000348                     CCPR3L          equ	840	;# 
   995   000349                     CCPR3H          equ	841	;# 
   996   00034A                     CCP3CON         equ	842	;# 
   997   00034B                     CCP3CAP         equ	843	;# 
   998   00034C                     CCPTMRS0        equ	844	;# 
   999   00034F                     CRCDATA         equ	847	;# 
  1000   00034F                     CRCDATAL        equ	847	;# 
  1001   000350                     CRCDATAH        equ	848	;# 
  1002   000351                     CRCDATAU        equ	849	;# 
  1003   000352                     CRCDATAT        equ	850	;# 
  1004   000353                     CRCOUT          equ	851	;# 
  1005   000353                     CRCSHFT         equ	851	;# 
  1006   000353                     CRCXOR          equ	851	;# 
  1007   000353                     CRCOUTL         equ	851	;# 
  1008   000353                     CRCSHFTL        equ	851	;# 
  1009   000353                     CRCSHIFTL       equ	851	;# 
  1010   000353                     CRCXORL         equ	851	;# 
  1011   000354                     CRCOUTH         equ	852	;# 
  1012   000354                     CRCSHFTH        equ	852	;# 
  1013   000354                     CRCSHIFTH       equ	852	;# 
  1014   000354                     CRCXORH         equ	852	;# 
  1015   000355                     CRCOUTU         equ	853	;# 
  1016   000355                     CRCSHFTU        equ	853	;# 
  1017   000355                     CRCSHIFTU       equ	853	;# 
  1018   000355                     CRCXORU         equ	853	;# 
  1019   000356                     CRCOUTT         equ	854	;# 
  1020   000356                     CRCSHFTT        equ	854	;# 
  1021   000356                     CRCSHIFTT       equ	854	;# 
  1022   000356                     CRCXORT         equ	854	;# 
  1023   000357                     CRCCON0         equ	855	;# 
  1024   000358                     CRCCON1         equ	856	;# 
  1025   000359                     CRCCON2         equ	857	;# 
  1026   00035A                     SCANLADR        equ	858	;# 
  1027   00035A                     SCANLADRL       equ	858	;# 
  1028   00035B                     SCANLADRH       equ	859	;# 
  1029   00035C                     SCANLADRU       equ	860	;# 
  1030   00035D                     SCANHADR        equ	861	;# 
  1031   00035D                     SCANHADRL       equ	861	;# 
  1032   00035E                     SCANHADRH       equ	862	;# 
  1033   00035F                     SCANHADRU       equ	863	;# 
  1034   000360                     SCANCON0        equ	864	;# 
  1035   000361                     SCANTRIG        equ	865	;# 
  1036   000362                     IPR0            equ	866	;# 
  1037   000363                     IPR1            equ	867	;# 
  1038   000364                     IPR2            equ	868	;# 
  1039   000365                     IPR3            equ	869	;# 
  1040   000366                     IPR4            equ	870	;# 
  1041   000367                     IPR5            equ	871	;# 
  1042   000368                     IPR6            equ	872	;# 
  1043   000369                     IPR7            equ	873	;# 
  1044   00036A                     IPR8            equ	874	;# 
  1045   00036B                     IPR9            equ	875	;# 
  1046   00036C                     IPR10           equ	876	;# 
  1047   00036D                     IPR11           equ	877	;# 
  1048   00036E                     IPR12           equ	878	;# 
  1049   00036F                     IPR13           equ	879	;# 
  1050   000370                     IPR14           equ	880	;# 
  1051   000371                     IPR15           equ	881	;# 
  1052   000373                     STATUS_CSHAD    equ	883	;# 
  1053   000374                     WREG_CSHAD      equ	884	;# 
  1054   000375                     BSR_CSHAD       equ	885	;# 
  1055   000376                     SHADCON         equ	886	;# 
  1056   000377                     STATUS_SHAD     equ	887	;# 
  1057   000378                     WREG_SHAD       equ	888	;# 
  1058   000379                     BSR_SHAD        equ	889	;# 
  1059   00037A                     PCLATH_SHAD     equ	890	;# 
  1060   00037B                     PCLATU_SHAD     equ	891	;# 
  1061   00037C                     FSR0SH          equ	892	;# 
  1062   00037C                     FSR0L_SHAD      equ	892	;# 
  1063   00037D                     FSR0H_SHAD      equ	893	;# 
  1064   00037E                     FSR1SH          equ	894	;# 
  1065   00037E                     FSR1L_SHAD      equ	894	;# 
  1066   00037F                     FSR1H_SHAD      equ	895	;# 
  1067   000380                     FSR2SH          equ	896	;# 
  1068   000380                     FSR2L_SHAD      equ	896	;# 
  1069   000381                     FSR2H_SHAD      equ	897	;# 
  1070   000382                     PRODSH          equ	898	;# 
  1071   000382                     PRODL_SHAD      equ	898	;# 
  1072   000383                     PRODH_SHAD      equ	899	;# 
  1073   000387                     TU16ACON0       equ	903	;# 
  1074   000388                     TU16ACON1       equ	904	;# 
  1075   000389                     TU16AHLT        equ	905	;# 
  1076   00038A                     TU16APS         equ	906	;# 
  1077   00038B                     TU16ATMR        equ	907	;# 
  1078   00038B                     TU16ACR         equ	907	;# 
  1079   00038B                     TU16ATMRL       equ	907	;# 
  1080   00038B                     TU16ACRL        equ	907	;# 
  1081   00038C                     TU16ATMRH       equ	908	;# 
  1082   00038C                     TU16ACRH        equ	908	;# 
  1083   00038D                     TU16APR         equ	909	;# 
  1084   00038D                     TU16APRL        equ	909	;# 
  1085   00038E                     TU16APRH        equ	910	;# 
  1086   00038F                     TU16ACLK        equ	911	;# 
  1087   000390                     TU16AERS        equ	912	;# 
  1088   000393                     TU16BCON0       equ	915	;# 
  1089   000394                     TU16BCON1       equ	916	;# 
  1090   000395                     TU16BHLT        equ	917	;# 
  1091   000396                     TU16BPS         equ	918	;# 
  1092   000397                     TU16BTMR        equ	919	;# 
  1093   000397                     TU16BCR         equ	919	;# 
  1094   000397                     TU16BTMRL       equ	919	;# 
  1095   000397                     TU16BCRL        equ	919	;# 
  1096   000398                     TU16BTMRH       equ	920	;# 
  1097   000398                     TU16BCRH        equ	920	;# 
  1098   000399                     TU16BPR         equ	921	;# 
  1099   000399                     TU16BPRL        equ	921	;# 
  1100   00039A                     TU16BPRH        equ	922	;# 
  1101   00039B                     TU16BCLK        equ	923	;# 
  1102   00039C                     TU16BERS        equ	924	;# 
  1103   0003BB                     TUCHAIN         equ	955	;# 
  1104   0003BC                     CWG1CLK         equ	956	;# 
  1105   0003BC                     CWG1CLKCON      equ	956	;# 
  1106   0003BD                     CWG1ISM         equ	957	;# 
  1107   0003BE                     CWG1DBR         equ	958	;# 
  1108   0003BF                     CWG1DBF         equ	959	;# 
  1109   0003C0                     CWG1CON0        equ	960	;# 
  1110   0003C1                     CWG1CON1        equ	961	;# 
  1111   0003C2                     CWG1AS0         equ	962	;# 
  1112   0003C3                     CWG1AS1         equ	963	;# 
  1113   0003C4                     CWG1STR         equ	964	;# 
  1114   0003C5                     CWG2CLK         equ	965	;# 
  1115   0003C5                     CWG2CLKCON      equ	965	;# 
  1116   0003C6                     CWG2ISM         equ	966	;# 
  1117   0003C7                     CWG2DBR         equ	967	;# 
  1118   0003C8                     CWG2DBF         equ	968	;# 
  1119   0003C9                     CWG2CON0        equ	969	;# 
  1120   0003CA                     CWG2CON1        equ	970	;# 
  1121   0003CB                     CWG2AS0         equ	971	;# 
  1122   0003CC                     CWG2AS1         equ	972	;# 
  1123   0003CD                     CWG2STR         equ	973	;# 
  1124   0003CE                     CWG3CLK         equ	974	;# 
  1125   0003CE                     CWG3CLKCON      equ	974	;# 
  1126   0003CF                     CWG3ISM         equ	975	;# 
  1127   0003D0                     CWG3DBR         equ	976	;# 
  1128   0003D1                     CWG3DBF         equ	977	;# 
  1129   0003D2                     CWG3CON0        equ	978	;# 
  1130   0003D3                     CWG3CON1        equ	979	;# 
  1131   0003D4                     CWG3AS0         equ	980	;# 
  1132   0003D5                     CWG3AS1         equ	981	;# 
  1133   0003D6                     CWG3STR         equ	982	;# 
  1134   0003D7                     FVRCON          equ	983	;# 
  1135   0003D8                     ADCPCON         equ	984	;# 
  1136   0003D8                     ADCP            equ	984	;# 
  1137   0003D9                     ADLTH           equ	985	;# 
  1138   0003D9                     ADLTHL          equ	985	;# 
  1139   0003DA                     ADLTHH          equ	986	;# 
  1140   0003DB                     ADUTH           equ	987	;# 
  1141   0003DB                     ADUTHL          equ	987	;# 
  1142   0003DC                     ADUTHH          equ	988	;# 
  1143   0003DD                     ADERR           equ	989	;# 
  1144   0003DD                     ADERRL          equ	989	;# 
  1145   0003DE                     ADERRH          equ	990	;# 
  1146   0003DF                     ADSTPT          equ	991	;# 
  1147   0003DF                     ADSTPTL         equ	991	;# 
  1148   0003E0                     ADSTPTH         equ	992	;# 
  1149   0003E1                     ADFLTR          equ	993	;# 
  1150   0003E1                     ADFLTRL         equ	993	;# 
  1151   0003E2                     ADFLTRH         equ	994	;# 
  1152   0003E3                     ADACC           equ	995	;# 
  1153   0003E3                     ADACCL          equ	995	;# 
  1154   0003E4                     ADACCH          equ	996	;# 
  1155   0003E5                     ADACCU          equ	997	;# 
  1156   0003E6                     ADCNT           equ	998	;# 
  1157   0003E7                     ADRPT           equ	999	;# 
  1158   0003E8                     ADPREV          equ	1000	;# 
  1159   0003E8                     ADPREVL         equ	1000	;# 
  1160   0003E9                     ADPREVH         equ	1001	;# 
  1161   0003EA                     ADRES           equ	1002	;# 
  1162   0003EA                     ADRESL          equ	1002	;# 
  1163   0003EB                     ADRESH          equ	1003	;# 
  1164   0003EC                     ADPCH           equ	1004	;# 
  1165   0003EE                     ADACQ           equ	1006	;# 
  1166   0003EE                     ADACQL          equ	1006	;# 
  1167   0003EF                     ADACQH          equ	1007	;# 
  1168   0003F0                     ADCAP           equ	1008	;# 
  1169   0003F1                     ADPRE           equ	1009	;# 
  1170   0003F1                     ADPREL          equ	1009	;# 
  1171   0003F2                     ADPREH          equ	1010	;# 
  1172   0003F3                     ADCON0          equ	1011	;# 
  1173   0003F4                     ADCON1          equ	1012	;# 
  1174   0003F5                     ADCON2          equ	1013	;# 
  1175   0003F6                     ADCON3          equ	1014	;# 
  1176   0003F7                     ADSTAT          equ	1015	;# 
  1177   0003F8                     ADREF           equ	1016	;# 
  1178   0003F9                     ADACT           equ	1017	;# 
  1179   0003FA                     ADCLK           equ	1018	;# 
  1180   0003FB                     ADCTX           equ	1019	;# 
  1181   0003FC                     ADCSEL1         equ	1020	;# 
  1182   0003FD                     ADCSEL2         equ	1021	;# 
  1183   0003FE                     ADCSEL3         equ	1022	;# 
  1184   0003FF                     ADCSEL4         equ	1023	;# 
  1185   000400                     ANSELA          equ	1024	;# 
  1186   000401                     WPUA            equ	1025	;# 
  1187   000402                     ODCONA          equ	1026	;# 
  1188   000403                     SLRCONA         equ	1027	;# 
  1189   000404                     INLVLA          equ	1028	;# 
  1190   000405                     IOCAP           equ	1029	;# 
  1191   000406                     IOCAN           equ	1030	;# 
  1192   000407                     IOCAF           equ	1031	;# 
  1193   000408                     ANSELB          equ	1032	;# 
  1194   000409                     WPUB            equ	1033	;# 
  1195   00040A                     ODCONB          equ	1034	;# 
  1196   00040B                     SLRCONB         equ	1035	;# 
  1197   00040C                     INLVLB          equ	1036	;# 
  1198   00040D                     IOCBP           equ	1037	;# 
  1199   00040E                     IOCBN           equ	1038	;# 
  1200   00040F                     IOCBF           equ	1039	;# 
  1201   000410                     ANSELC          equ	1040	;# 
  1202   000411                     WPUC            equ	1041	;# 
  1203   000412                     ODCONC          equ	1042	;# 
  1204   000413                     SLRCONC         equ	1043	;# 
  1205   000414                     INLVLC          equ	1044	;# 
  1206   000415                     IOCCP           equ	1045	;# 
  1207   000416                     IOCCN           equ	1046	;# 
  1208   000417                     IOCCF           equ	1047	;# 
  1209   000421                     WPUE            equ	1057	;# 
  1210   000424                     INLVLE          equ	1060	;# 
  1211   000425                     IOCEP           equ	1061	;# 
  1212   000426                     IOCEN           equ	1062	;# 
  1213   000427                     IOCEF           equ	1063	;# 
  1214   000440                     NCO1ACC         equ	1088	;# 
  1215   000440                     NCO1ACCL        equ	1088	;# 
  1216   000441                     NCO1ACCH        equ	1089	;# 
  1217   000442                     NCO1ACCU        equ	1090	;# 
  1218   000443                     NCO1INC         equ	1091	;# 
  1219   000443                     NCO1INCL        equ	1091	;# 
  1220   000444                     NCO1INCH        equ	1092	;# 
  1221   000445                     NCO1INCU        equ	1093	;# 
  1222   000446                     NCO1CON         equ	1094	;# 
  1223   000447                     NCO1CLK         equ	1095	;# 
  1224   000448                     NCO2ACC         equ	1096	;# 
  1225   000448                     NCO2ACCL        equ	1096	;# 
  1226   000449                     NCO2ACCH        equ	1097	;# 
  1227   00044A                     NCO2ACCU        equ	1098	;# 
  1228   00044B                     NCO2INC         equ	1099	;# 
  1229   00044B                     NCO2INCL        equ	1099	;# 
  1230   00044C                     NCO2INCH        equ	1100	;# 
  1231   00044D                     NCO2INCU        equ	1101	;# 
  1232   00044E                     NCO2CON         equ	1102	;# 
  1233   00044F                     NCO2CLK         equ	1103	;# 
  1234   000450                     NCO3ACC         equ	1104	;# 
  1235   000450                     NCO3ACCL        equ	1104	;# 
  1236   000451                     NCO3ACCH        equ	1105	;# 
  1237   000452                     NCO3ACCU        equ	1106	;# 
  1238   000453                     NCO3INC         equ	1107	;# 
  1239   000453                     NCO3INCL        equ	1107	;# 
  1240   000454                     NCO3INCH        equ	1108	;# 
  1241   000455                     NCO3INCU        equ	1109	;# 
  1242   000456                     NCO3CON         equ	1110	;# 
  1243   000457                     NCO3CLK         equ	1111	;# 
  1244   000458                     FSCMCON         equ	1112	;# 
  1245   000459                     IVTLOCK         equ	1113	;# 
  1246   00045A                     IVTAD           equ	1114	;# 
  1247   00045A                     IVTADL          equ	1114	;# 
  1248   00045B                     IVTADH          equ	1115	;# 
  1249   00045C                     IVTADU          equ	1116	;# 
  1250   00045D                     IVTBASE         equ	1117	;# 
  1251   00045D                     IVTBASEL        equ	1117	;# 
  1252   00045E                     IVTBASEH        equ	1118	;# 
  1253   00045F                     IVTBASEU        equ	1119	;# 
  1254   000460                     PWM1ERS         equ	1120	;# 
  1255   000461                     PWM1CLK         equ	1121	;# 
  1256   000462                     PWM1LDS         equ	1122	;# 
  1257   000463                     PWM1PR          equ	1123	;# 
  1258   000463                     PWM1PRL         equ	1123	;# 
  1259   000464                     PWM1PRH         equ	1124	;# 
  1260   000465                     PWM1CPRE        equ	1125	;# 
  1261   000466                     PWM1PIPOS       equ	1126	;# 
  1262   000467                     PWM1GIR         equ	1127	;# 
  1263   000468                     PWM1GIE         equ	1128	;# 
  1264   000469                     PWM1CON         equ	1129	;# 
  1265   00046A                     PWM1S1CFG       equ	1130	;# 
  1266   00046B                     PWM1S1P1        equ	1131	;# 
  1267   00046B                     PWM1S1P1L       equ	1131	;# 
  1268   00046C                     PWM1S1P1H       equ	1132	;# 
  1269   00046D                     PWM1S1P2        equ	1133	;# 
  1270   00046D                     PWM1S1P2L       equ	1133	;# 
  1271   00046E                     PWM1S1P2H       equ	1134	;# 
  1272   00046F                     PWM2ERS         equ	1135	;# 
  1273   000470                     PWM2CLK         equ	1136	;# 
  1274   000471                     PWM2LDS         equ	1137	;# 
  1275   000472                     PWM2PR          equ	1138	;# 
  1276   000472                     PWM2PRL         equ	1138	;# 
  1277   000473                     PWM2PRH         equ	1139	;# 
  1278   000474                     PWM2CPRE        equ	1140	;# 
  1279   000475                     PWM2PIPOS       equ	1141	;# 
  1280   000476                     PWM2GIR         equ	1142	;# 
  1281   000477                     PWM2GIE         equ	1143	;# 
  1282   000478                     PWM2CON         equ	1144	;# 
  1283   000479                     PWM2S1CFG       equ	1145	;# 
  1284   00047A                     PWM2S1P1        equ	1146	;# 
  1285   00047A                     PWM2S1P1L       equ	1146	;# 
  1286   00047B                     PWM2S1P1H       equ	1147	;# 
  1287   00047C                     PWM2S1P2        equ	1148	;# 
  1288   00047C                     PWM2S1P2L       equ	1148	;# 
  1289   00047D                     PWM2S1P2H       equ	1149	;# 
  1290   00047E                     PWM3ERS         equ	1150	;# 
  1291   00047F                     PWM3CLK         equ	1151	;# 
  1292   000480                     PWM3LDS         equ	1152	;# 
  1293   000481                     PWM3PR          equ	1153	;# 
  1294   000481                     PWM3PRL         equ	1153	;# 
  1295   000482                     PWM3PRH         equ	1154	;# 
  1296   000483                     PWM3CPRE        equ	1155	;# 
  1297   000484                     PWM3PIPOS       equ	1156	;# 
  1298   000485                     PWM3GIR         equ	1157	;# 
  1299   000486                     PWM3GIE         equ	1158	;# 
  1300   000487                     PWM3CON         equ	1159	;# 
  1301   000488                     PWM3S1CFG       equ	1160	;# 
  1302   000489                     PWM3S1P1        equ	1161	;# 
  1303   000489                     PWM3S1P1L       equ	1161	;# 
  1304   00048A                     PWM3S1P1H       equ	1162	;# 
  1305   00048B                     PWM3S1P2        equ	1163	;# 
  1306   00048B                     PWM3S1P2L       equ	1163	;# 
  1307   00048C                     PWM3S1P2H       equ	1164	;# 
  1308   00048D                     PWM4ERS         equ	1165	;# 
  1309   00048E                     PWM4CLK         equ	1166	;# 
  1310   00048F                     PWM4LDS         equ	1167	;# 
  1311   000490                     PWM4PR          equ	1168	;# 
  1312   000490                     PWM4PRL         equ	1168	;# 
  1313   000491                     PWM4PRH         equ	1169	;# 
  1314   000492                     PWM4CPRE        equ	1170	;# 
  1315   000493                     PWM4PIPOS       equ	1171	;# 
  1316   000494                     PWM4GIR         equ	1172	;# 
  1317   000495                     PWM4GIE         equ	1173	;# 
  1318   000496                     PWM4CON         equ	1174	;# 
  1319   000497                     PWM4S1CFG       equ	1175	;# 
  1320   000498                     PWM4S1P1        equ	1176	;# 
  1321   000498                     PWM4S1P1L       equ	1176	;# 
  1322   000499                     PWM4S1P1H       equ	1177	;# 
  1323   00049A                     PWM4S1P2        equ	1178	;# 
  1324   00049A                     PWM4S1P2L       equ	1178	;# 
  1325   00049B                     PWM4S1P2H       equ	1179	;# 
  1326   00049C                     PWMLOAD         equ	1180	;# 
  1327   00049D                     PWMEN           equ	1181	;# 
  1328   00049E                     PIE0            equ	1182	;# 
  1329   00049F                     PIE1            equ	1183	;# 
  1330   0004A0                     PIE2            equ	1184	;# 
  1331   0004A1                     PIE3            equ	1185	;# 
  1332   0004A2                     PIE4            equ	1186	;# 
  1333   0004A3                     PIE5            equ	1187	;# 
  1334   0004A4                     PIE6            equ	1188	;# 
  1335   0004A5                     PIE7            equ	1189	;# 
  1336   0004A6                     PIE8            equ	1190	;# 
  1337   0004A7                     PIE9            equ	1191	;# 
  1338   0004A8                     PIE10           equ	1192	;# 
  1339   0004A9                     PIE11           equ	1193	;# 
  1340   0004AA                     PIE12           equ	1194	;# 
  1341   0004AB                     PIE13           equ	1195	;# 
  1342   0004AC                     PIE14           equ	1196	;# 
  1343   0004AD                     PIE15           equ	1197	;# 
  1344   0004AE                     PIR0            equ	1198	;# 
  1345   0004AF                     PIR1            equ	1199	;# 
  1346   0004B0                     PIR2            equ	1200	;# 
  1347   0004B1                     PIR3            equ	1201	;# 
  1348   0004B2                     PIR4            equ	1202	;# 
  1349   0004B3                     PIR5            equ	1203	;# 
  1350   0004B4                     PIR6            equ	1204	;# 
  1351   0004B5                     PIR7            equ	1205	;# 
  1352   0004B6                     PIR8            equ	1206	;# 
  1353   0004B7                     PIR9            equ	1207	;# 
  1354   0004B8                     PIR10           equ	1208	;# 
  1355   0004B9                     PIR11           equ	1209	;# 
  1356   0004BA                     PIR12           equ	1210	;# 
  1357   0004BB                     PIR13           equ	1211	;# 
  1358   0004BC                     PIR14           equ	1212	;# 
  1359   0004BD                     PIR15           equ	1213	;# 
  1360   0004BE                     LATA            equ	1214	;# 
  1361   0004BF                     LATB            equ	1215	;# 
  1362   0004C0                     LATC            equ	1216	;# 
  1363   0004C6                     TRISA           equ	1222	;# 
  1364   0004C7                     TRISB           equ	1223	;# 
  1365   0004C8                     TRISC           equ	1224	;# 
  1366   0004CA                     TRISE           equ	1226	;# 
  1367   0004CE                     PORTA           equ	1230	;# 
  1368   0004CF                     PORTB           equ	1231	;# 
  1369   0004D0                     PORTC           equ	1232	;# 
  1370   0004D2                     PORTE           equ	1234	;# 
  1371   0004D6                     INTCON0         equ	1238	;# 
  1372   0004D7                     INTCON1         equ	1239	;# 
  1373   0004D8                     STATUS          equ	1240	;# 
  1374   0004D9                     FSR2            equ	1241	;# 
  1375   0004D9                     FSR2L           equ	1241	;# 
  1376   0004DA                     FSR2H           equ	1242	;# 
  1377   0004DB                     PLUSW2          equ	1243	;# 
  1378   0004DC                     PREINC2         equ	1244	;# 
  1379   0004DD                     POSTDEC2        equ	1245	;# 
  1380   0004DE                     POSTINC2        equ	1246	;# 
  1381   0004DF                     INDF2           equ	1247	;# 
  1382   0004E0                     BSR             equ	1248	;# 
  1383   0004E1                     FSR1            equ	1249	;# 
  1384   0004E1                     FSR1L           equ	1249	;# 
  1385   0004E2                     FSR1H           equ	1250	;# 
  1386   0004E3                     PLUSW1          equ	1251	;# 
  1387   0004E4                     PREINC1         equ	1252	;# 
  1388   0004E5                     POSTDEC1        equ	1253	;# 
  1389   0004E6                     POSTINC1        equ	1254	;# 
  1390   0004E7                     INDF1           equ	1255	;# 
  1391   0004E8                     WREG            equ	1256	;# 
  1392   0004E9                     FSR0            equ	1257	;# 
  1393   0004E9                     FSR0L           equ	1257	;# 
  1394   0004EA                     FSR0H           equ	1258	;# 
  1395   0004EB                     PLUSW0          equ	1259	;# 
  1396   0004EC                     PREINC0         equ	1260	;# 
  1397   0004ED                     POSTDEC0        equ	1261	;# 
  1398   0004EE                     POSTINC0        equ	1262	;# 
  1399   0004EF                     INDF0           equ	1263	;# 
  1400   0004F0                     PCON0           equ	1264	;# 
  1401   0004F1                     PCON1           equ	1265	;# 
  1402   0004F2                     CPUDOZE         equ	1266	;# 
  1403   0004F3                     PROD            equ	1267	;# 
  1404   0004F3                     PRODL           equ	1267	;# 
  1405   0004F4                     PRODH           equ	1268	;# 
  1406   0004F5                     TABLAT          equ	1269	;# 
  1407   0004F6                     TBLPTR          equ	1270	;# 
  1408   0004F6                     TBLPTRL         equ	1270	;# 
  1409   0004F7                     TBLPTRH         equ	1271	;# 
  1410   0004F8                     TBLPTRU         equ	1272	;# 
  1411   0004F9                     PCLAT           equ	1273	;# 
  1412   0004F9                     PCL             equ	1273	;# 
  1413   0004FA                     PCLATH          equ	1274	;# 
  1414   0004FB                     PCLATU          equ	1275	;# 
  1415   0004FC                     STKPTR          equ	1276	;# 
  1416   0004FD                     TOS             equ	1277	;# 
  1417   0004FD                     TOSL            equ	1277	;# 
  1418   0004FE                     TOSH            equ	1278	;# 
  1419   0004FF                     TOSU            equ	1279	;# 
  1420   000038                     BOOTREG         equ	56	;# 
  1421   000039                     CLKRCON         equ	57	;# 
  1422   00003A                     CLKRCLK         equ	58	;# 
  1423   000040                     NVMCON0         equ	64	;# 
  1424   000041                     NVMCON1         equ	65	;# 
  1425   000042                     NVMLOCK         equ	66	;# 
  1426   000043                     NVMADR          equ	67	;# 
  1427   000043                     NVMADRL         equ	67	;# 
  1428   000044                     NVMADRH         equ	68	;# 
  1429   000045                     NVMADRU         equ	69	;# 
  1430   000046                     NVMDAT          equ	70	;# 
  1431   000046                     NVMDATL         equ	70	;# 
  1432   000047                     NVMDATH         equ	71	;# 
  1433   000048                     VREGCON         equ	72	;# 
  1434   000049                     BORCON          equ	73	;# 
  1435   00004A                     HLVDCON0        equ	74	;# 
  1436   00004B                     HLVDCON1        equ	75	;# 
  1437   00004C                     ZCDCON          equ	76	;# 
  1438   000060                     PMD0            equ	96	;# 
  1439   000061                     PMD1            equ	97	;# 
  1440   000062                     PMD2            equ	98	;# 
  1441   000063                     PMD3            equ	99	;# 
  1442   000064                     PMD4            equ	100	;# 
  1443   000065                     PMD5            equ	101	;# 
  1444   000066                     PMD6            equ	102	;# 
  1445   000067                     PMD7            equ	103	;# 
  1446   000068                     PMD8            equ	104	;# 
  1447   00006A                     MD1CON0         equ	106	;# 
  1448   00006B                     MD1CON1         equ	107	;# 
  1449   00006C                     MD1SRC          equ	108	;# 
  1450   00006D                     MD1CARL         equ	109	;# 
  1451   00006E                     MD1CARH         equ	110	;# 
  1452   00006F                     CMOUT           equ	111	;# 
  1453   000070                     CM1CON0         equ	112	;# 
  1454   000071                     CM1CON1         equ	113	;# 
  1455   000072                     CM1NCH          equ	114	;# 
  1456   000073                     CM1PCH          equ	115	;# 
  1457   000074                     CM2CON0         equ	116	;# 
  1458   000075                     CM2CON1         equ	117	;# 
  1459   000076                     CM2NCH          equ	118	;# 
  1460   000077                     CM2PCH          equ	119	;# 
  1461   000078                     WDTCON0         equ	120	;# 
  1462   000079                     WDTCON1         equ	121	;# 
  1463   00007A                     WDTPSL          equ	122	;# 
  1464   00007B                     WDTPSH          equ	123	;# 
  1465   00007C                     WDTTMR          equ	124	;# 
  1466   00007D                     DAC1DAT         equ	125	;# 
  1467   00007D                     DAC1DATL        equ	125	;# 
  1468   00007F                     DAC1CON         equ	127	;# 
  1469   000080                     SPI1RXB         equ	128	;# 
  1470   000081                     SPI1TXB         equ	129	;# 
  1471   000082                     SPI1TCNT        equ	130	;# 
  1472   000082                     SPI1TCNTL       equ	130	;# 
  1473   000083                     SPI1TCNTH       equ	131	;# 
  1474   000084                     SPI1CON0        equ	132	;# 
  1475   000085                     SPI1CON1        equ	133	;# 
  1476   000086                     SPI1CON2        equ	134	;# 
  1477   000087                     SPI1STATUS      equ	135	;# 
  1478   000088                     SPI1TWIDTH      equ	136	;# 
  1479   000089                     SPI1BAUD        equ	137	;# 
  1480   00008A                     SPI1INTF        equ	138	;# 
  1481   00008B                     SPI1INTE        equ	139	;# 
  1482   00008C                     SPI1CLK         equ	140	;# 
  1483   00008D                     SPI2RXB         equ	141	;# 
  1484   00008E                     SPI2TXB         equ	142	;# 
  1485   00008F                     SPI2TCNT        equ	143	;# 
  1486   00008F                     SPI2TCNTL       equ	143	;# 
  1487   000090                     SPI2TCNTH       equ	144	;# 
  1488   000091                     SPI2CON0        equ	145	;# 
  1489   000092                     SPI2CON1        equ	146	;# 
  1490   000093                     SPI2CON2        equ	147	;# 
  1491   000094                     SPI2STATUS      equ	148	;# 
  1492   000095                     SPI2TWIDTH      equ	149	;# 
  1493   000096                     SPI2BAUD        equ	150	;# 
  1494   000097                     SPI2INTF        equ	151	;# 
  1495   000098                     SPI2INTE        equ	152	;# 
  1496   000099                     SPI2CLK         equ	153	;# 
  1497   0000AC                     ACTCON          equ	172	;# 
  1498   0000AD                     OSCCON1         equ	173	;# 
  1499   0000AE                     OSCCON2         equ	174	;# 
  1500   0000AF                     OSCCON3         equ	175	;# 
  1501   0000B0                     OSCTUNE         equ	176	;# 
  1502   0000B1                     OSCFRQ          equ	177	;# 
  1503   0000B1                     OSCFREQ         equ	177	;# 
  1504   0000B2                     OSCSTAT         equ	178	;# 
  1505   0000B2                     OSCSTAT1        equ	178	;# 
  1506   0000B3                     OSCEN           equ	179	;# 
  1507   0000B4                     PRLOCK          equ	180	;# 
  1508   0000B5                     SCANPR          equ	181	;# 
  1509   0000B6                     DMA1PR          equ	182	;# 
  1510   0000B7                     DMA2PR          equ	183	;# 
  1511   0000B8                     DMA3PR          equ	184	;# 
  1512   0000B9                     DMA4PR          equ	185	;# 
  1513   0000BA                     DMA5PR          equ	186	;# 
  1514   0000BB                     DMA6PR          equ	187	;# 
  1515   0000BC                     DMA7PR          equ	188	;# 
  1516   0000BD                     DMA8PR          equ	189	;# 
  1517   0000BE                     MAINPR          equ	190	;# 
  1518   0000BF                     ISRPR           equ	191	;# 
  1519   0000D4                     CLCDATA         equ	212	;# 
  1520   0000D5                     CLCSELECT       equ	213	;# 
  1521   0000D6                     CLCnCON         equ	214	;# 
  1522   0000D7                     CLCnPOL         equ	215	;# 
  1523   0000D8                     CLCnSEL0        equ	216	;# 
  1524   0000D9                     CLCnSEL1        equ	217	;# 
  1525   0000DA                     CLCnSEL2        equ	218	;# 
  1526   0000DB                     CLCnSEL3        equ	219	;# 
  1527   0000DC                     CLCnGLS0        equ	220	;# 
  1528   0000DD                     CLCnGLS1        equ	221	;# 
  1529   0000DE                     CLCnGLS2        equ	222	;# 
  1530   0000DF                     CLCnGLS3        equ	223	;# 
  1531   0000E8                     DMASELECT       equ	232	;# 
  1532   0000E9                     DMAnBUF         equ	233	;# 
  1533   0000EA                     DMAnDCNT        equ	234	;# 
  1534   0000EA                     DMAnDCNTL       equ	234	;# 
  1535   0000EB                     DMAnDCNTH       equ	235	;# 
  1536   0000EC                     DMAnDPTR        equ	236	;# 
  1537   0000EC                     DMAnDPTRL       equ	236	;# 
  1538   0000ED                     DMAnDPTRH       equ	237	;# 
  1539   0000EE                     DMAnDSZ         equ	238	;# 
  1540   0000EE                     DMAnDSZL        equ	238	;# 
  1541   0000EF                     DMAnDSZH        equ	239	;# 
  1542   0000F0                     DMAnDSA         equ	240	;# 
  1543   0000F0                     DMAnDSAL        equ	240	;# 
  1544   0000F1                     DMAnDSAH        equ	241	;# 
  1545   0000F2                     DMAnSCNT        equ	242	;# 
  1546   0000F2                     DMAnSCNTL       equ	242	;# 
  1547   0000F3                     DMAnSCNTH       equ	243	;# 
  1548   0000F4                     DMAnSPTR        equ	244	;# 
  1549   0000F4                     DMAnSPTRL       equ	244	;# 
  1550   0000F5                     DMAnSPTRH       equ	245	;# 
  1551   0000F6                     DMAnSPTRU       equ	246	;# 
  1552   0000F7                     DMAnSSZ         equ	247	;# 
  1553   0000F7                     DMAnSSZL        equ	247	;# 
  1554   0000F8                     DMAnSSZH        equ	248	;# 
  1555   0000F9                     DMAnSSA         equ	249	;# 
  1556   0000F9                     DMAnSSAL        equ	249	;# 
  1557   0000FA                     DMAnSSAH        equ	250	;# 
  1558   0000FB                     DMAnSSAU        equ	251	;# 
  1559   0000FC                     DMAnCON0        equ	252	;# 
  1560   0000FD                     DMAnCON1        equ	253	;# 
  1561   0000FE                     DMAnAIRQ        equ	254	;# 
  1562   0000FF                     DMAnSIRQ        equ	255	;# 
  1563   000100                     C1CONL          equ	256	;# 
  1564   000101                     C1CONH          equ	257	;# 
  1565   000102                     C1CONU          equ	258	;# 
  1566   000103                     C1CONT          equ	259	;# 
  1567   000104                     C1NBTCFGL       equ	260	;# 
  1568   000105                     C1NBTCFGH       equ	261	;# 
  1569   000106                     C1NBTCFGU       equ	262	;# 
  1570   000107                     C1NBTCFGT       equ	263	;# 
  1571   000108                     C1DBTCFGL       equ	264	;# 
  1572   000109                     C1DBTCFGH       equ	265	;# 
  1573   00010A                     C1DBTCFGU       equ	266	;# 
  1574   00010B                     C1DBTCFGT       equ	267	;# 
  1575   00010C                     C1TDCL          equ	268	;# 
  1576   00010D                     C1TDCH          equ	269	;# 
  1577   00010E                     C1TDCU          equ	270	;# 
  1578   000110                     C1TBC           equ	272	;# 
  1579   000110                     C1TBCL          equ	272	;# 
  1580   000111                     C1TBCH          equ	273	;# 
  1581   000112                     C1TBCU          equ	274	;# 
  1582   000113                     C1TBCT          equ	275	;# 
  1583   000114                     C1TSCONL        equ	276	;# 
  1584   000115                     C1TSCONH        equ	277	;# 
  1585   000116                     C1TSCONU        equ	278	;# 
  1586   000117                     C1TSCONT        equ	279	;# 
  1587   000118                     C1VECL          equ	280	;# 
  1588   000119                     C1VECH          equ	281	;# 
  1589   00011A                     C1VECU          equ	282	;# 
  1590   00011B                     C1VECT          equ	283	;# 
  1591   00011C                     C1INTL          equ	284	;# 
  1592   00011D                     C1INTH          equ	285	;# 
  1593   00011E                     C1INTU          equ	286	;# 
  1594   00011F                     C1INTT          equ	287	;# 
  1595   000120                     C1RXIF          equ	288	;# 
  1596   000120                     C1RXIFL         equ	288	;# 
  1597   000121                     C1RXIFH         equ	289	;# 
  1598   000122                     C1RXIFU         equ	290	;# 
  1599   000123                     C1RXIFT         equ	291	;# 
  1600   000124                     C1TXIF          equ	292	;# 
  1601   000124                     C1TXIFL         equ	292	;# 
  1602   000125                     C1TXIFH         equ	293	;# 
  1603   000126                     C1TXIFU         equ	294	;# 
  1604   000127                     C1TXIFT         equ	295	;# 
  1605   000128                     C1RXOVIF        equ	296	;# 
  1606   000128                     C1RXOVIFL       equ	296	;# 
  1607   000129                     C1RXOVIFH       equ	297	;# 
  1608   00012A                     C1RXOVIFU       equ	298	;# 
  1609   00012B                     C1RXOVIFT       equ	299	;# 
  1610   00012C                     C1TXATIF        equ	300	;# 
  1611   00012C                     C1TXATIFL       equ	300	;# 
  1612   00012D                     C1TXATIFH       equ	301	;# 
  1613   00012E                     C1TXATIFU       equ	302	;# 
  1614   00012F                     C1TXATIFT       equ	303	;# 
  1615   000130                     C1TXREQ         equ	304	;# 
  1616   000130                     C1TXREQL        equ	304	;# 
  1617   000131                     C1TXREQH        equ	305	;# 
  1618   000132                     C1TXREQU        equ	306	;# 
  1619   000133                     C1TXREQT        equ	307	;# 
  1620   000134                     C1TRECL         equ	308	;# 
  1621   000135                     C1TRECH         equ	309	;# 
  1622   000136                     C1TRECU         equ	310	;# 
  1623   000137                     C1TRECT         equ	311	;# 
  1624   000138                     C1BDIAG0L       equ	312	;# 
  1625   000139                     C1BDIAG0H       equ	313	;# 
  1626   00013C                     C1BDIAG1L       equ	316	;# 
  1627   00013D                     C1BDIAG1H       equ	317	;# 
  1628   00013E                     C1BDIAG1U       equ	318	;# 
  1629   00013F                     C1BDIAG1T       equ	319	;# 
  1630   000140                     C1TEFCONL       equ	320	;# 
  1631   000141                     C1TEFCONH       equ	321	;# 
  1632   000142                     C1TEFCONU       equ	322	;# 
  1633   000143                     C1TEFCONT       equ	323	;# 
  1634   000144                     C1TEFSTAL       equ	324	;# 
  1635   000145                     C1TEFSTAH       equ	325	;# 
  1636   000146                     C1TEFSTAU       equ	326	;# 
  1637   000147                     C1TEFSTAT       equ	327	;# 
  1638   000148                     C1TEFUA         equ	328	;# 
  1639   000148                     C1TEFUAL        equ	328	;# 
  1640   000149                     C1TEFUAH        equ	329	;# 
  1641   00014A                     C1TEFUAU        equ	330	;# 
  1642   00014B                     C1TEFUAT        equ	331	;# 
  1643   00014C                     C1FIFOBA        equ	332	;# 
  1644   00014C                     C1FIFOBAL       equ	332	;# 
  1645   00014D                     C1FIFOBAH       equ	333	;# 
  1646   00014E                     C1FIFOBAU       equ	334	;# 
  1647   00014F                     C1FIFOBAT       equ	335	;# 
  1648   000150                     C1TXQCONL       equ	336	;# 
  1649   000151                     C1TXQCONH       equ	337	;# 
  1650   000152                     C1TXQCONU       equ	338	;# 
  1651   000153                     C1TXQCONT       equ	339	;# 
  1652   000154                     C1TXQSTAL       equ	340	;# 
  1653   000155                     C1TXQSTAH       equ	341	;# 
  1654   000156                     C1TXQSTAU       equ	342	;# 
  1655   000157                     C1TXQSTAT       equ	343	;# 
  1656   000158                     C1TXQUA         equ	344	;# 
  1657   000158                     C1TXQUAL        equ	344	;# 
  1658   000159                     C1TXQUAH        equ	345	;# 
  1659   00015A                     C1TXQUAU        equ	346	;# 
  1660   00015B                     C1TXQUAT        equ	347	;# 
  1661   00015C                     C1FIFOCON1      equ	348	;# 
  1662   00015C                     C1FIFOCON1L     equ	348	;# 
  1663   00015D                     C1FIFOCON1H     equ	349	;# 
  1664   00015E                     C1FIFOCON1U     equ	350	;# 
  1665   00015F                     C1FIFOCON1T     equ	351	;# 
  1666   000160                     C1FIFOSTA1      equ	352	;# 
  1667   000160                     C1FIFOSTA1L     equ	352	;# 
  1668   000161                     C1FIFOSTA1H     equ	353	;# 
  1669   000162                     C1FIFOSTA1U     equ	354	;# 
  1670   000163                     C1FIFOSTA1T     equ	355	;# 
  1671   000164                     C1FIFOUA1       equ	356	;# 
  1672   000164                     C1FIFOUA1L      equ	356	;# 
  1673   000165                     C1FIFOUA1H      equ	357	;# 
  1674   000166                     C1FIFOUA1U      equ	358	;# 
  1675   000167                     C1FIFOUA1T      equ	359	;# 
  1676   000168                     C1FIFOCON2      equ	360	;# 
  1677   000168                     C1FIFOCON2L     equ	360	;# 
  1678   000169                     C1FIFOCON2H     equ	361	;# 
  1679   00016A                     C1FIFOCON2U     equ	362	;# 
  1680   00016B                     C1FIFOCON2T     equ	363	;# 
  1681   00016C                     C1FIFOSTA2      equ	364	;# 
  1682   00016C                     C1FIFOSTA2L     equ	364	;# 
  1683   00016D                     C1FIFOSTA2H     equ	365	;# 
  1684   00016E                     C1FIFOSTA2U     equ	366	;# 
  1685   00016F                     C1FIFOSTA2T     equ	367	;# 
  1686   000170                     C1FIFOUA2       equ	368	;# 
  1687   000170                     C1FIFOUA2L      equ	368	;# 
  1688   000171                     C1FIFOUA2H      equ	369	;# 
  1689   000172                     C1FIFOUA2U      equ	370	;# 
  1690   000173                     C1FIFOUA2T      equ	371	;# 
  1691   000174                     C1FIFOCON3      equ	372	;# 
  1692   000174                     C1FIFOCON3L     equ	372	;# 
  1693   000175                     C1FIFOCON3H     equ	373	;# 
  1694   000176                     C1FIFOCON3U     equ	374	;# 
  1695   000177                     C1FIFOCON3T     equ	375	;# 
  1696   000178                     C1FIFOSTA3      equ	376	;# 
  1697   000178                     C1FIFOSTA3L     equ	376	;# 
  1698   000179                     C1FIFOSTA3H     equ	377	;# 
  1699   00017A                     C1FIFOSTA3U     equ	378	;# 
  1700   00017B                     C1FIFOSTA3T     equ	379	;# 
  1701   00017C                     C1FIFOUA3       equ	380	;# 
  1702   00017C                     C1FIFOUA3L      equ	380	;# 
  1703   00017D                     C1FIFOUA3H      equ	381	;# 
  1704   00017E                     C1FIFOUA3U      equ	382	;# 
  1705   00017F                     C1FIFOUA3T      equ	383	;# 
  1706   000180                     C1FLTCON0L      equ	384	;# 
  1707   000181                     C1FLTCON0H      equ	385	;# 
  1708   000182                     C1FLTCON0U      equ	386	;# 
  1709   000183                     C1FLTCON0T      equ	387	;# 
  1710   000184                     C1FLTCON1L      equ	388	;# 
  1711   000185                     C1FLTCON1H      equ	389	;# 
  1712   000186                     C1FLTCON1U      equ	390	;# 
  1713   000187                     C1FLTCON1T      equ	391	;# 
  1714   000188                     C1FLTCON2L      equ	392	;# 
  1715   000189                     C1FLTCON2H      equ	393	;# 
  1716   00018A                     C1FLTCON2U      equ	394	;# 
  1717   00018B                     C1FLTCON2T      equ	395	;# 
  1718   00018C                     C1FLTOBJ0       equ	396	;# 
  1719   00018C                     C1FLTOBJ0L      equ	396	;# 
  1720   00018D                     C1FLTOBJ0H      equ	397	;# 
  1721   00018E                     C1FLTOBJ0U      equ	398	;# 
  1722   00018F                     C1FLTOBJ0T      equ	399	;# 
  1723   000190                     C1MASK0         equ	400	;# 
  1724   000190                     C1MASK0L        equ	400	;# 
  1725   000191                     C1MASK0H        equ	401	;# 
  1726   000192                     C1MASK0U        equ	402	;# 
  1727   000193                     C1MASK0T        equ	403	;# 
  1728   000194                     C1FLTOBJ1       equ	404	;# 
  1729   000194                     C1FLTOBJ1L      equ	404	;# 
  1730   000195                     C1FLTOBJ1H      equ	405	;# 
  1731   000196                     C1FLTOBJ1U      equ	406	;# 
  1732   000197                     C1FLTOBJ1T      equ	407	;# 
  1733   000198                     C1MASK1         equ	408	;# 
  1734   000198                     C1MASK1L        equ	408	;# 
  1735   000199                     C1MASK1H        equ	409	;# 
  1736   00019A                     C1MASK1U        equ	410	;# 
  1737   00019B                     C1MASK1T        equ	411	;# 
  1738   00019C                     C1FLTOBJ2       equ	412	;# 
  1739   00019C                     C1FLTOBJ2L      equ	412	;# 
  1740   00019D                     C1FLTOBJ2H      equ	413	;# 
  1741   00019E                     C1FLTOBJ2U      equ	414	;# 
  1742   00019F                     C1FLTOBJ2T      equ	415	;# 
  1743   0001A0                     C1MASK2         equ	416	;# 
  1744   0001A0                     C1MASK2L        equ	416	;# 
  1745   0001A1                     C1MASK2H        equ	417	;# 
  1746   0001A2                     C1MASK2U        equ	418	;# 
  1747   0001A3                     C1MASK2T        equ	419	;# 
  1748   0001A4                     C1FLTOBJ3       equ	420	;# 
  1749   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1750   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1751   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1752   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1753   0001A8                     C1MASK3         equ	424	;# 
  1754   0001A8                     C1MASK3L        equ	424	;# 
  1755   0001A9                     C1MASK3H        equ	425	;# 
  1756   0001AA                     C1MASK3U        equ	426	;# 
  1757   0001AB                     C1MASK3T        equ	427	;# 
  1758   0001AC                     C1FLTOBJ4       equ	428	;# 
  1759   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1760   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1761   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1762   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1763   0001B0                     C1MASK4         equ	432	;# 
  1764   0001B0                     C1MASK4L        equ	432	;# 
  1765   0001B1                     C1MASK4H        equ	433	;# 
  1766   0001B2                     C1MASK4U        equ	434	;# 
  1767   0001B3                     C1MASK4T        equ	435	;# 
  1768   0001B4                     C1FLTOBJ5       equ	436	;# 
  1769   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1770   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1771   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1772   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1773   0001B8                     C1MASK5         equ	440	;# 
  1774   0001B8                     C1MASK5L        equ	440	;# 
  1775   0001B9                     C1MASK5H        equ	441	;# 
  1776   0001BA                     C1MASK5U        equ	442	;# 
  1777   0001BB                     C1MASK5T        equ	443	;# 
  1778   0001BC                     C1FLTOBJ6       equ	444	;# 
  1779   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1780   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1781   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1782   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1783   0001C0                     C1MASK6         equ	448	;# 
  1784   0001C0                     C1MASK6L        equ	448	;# 
  1785   0001C1                     C1MASK6H        equ	449	;# 
  1786   0001C2                     C1MASK6U        equ	450	;# 
  1787   0001C3                     C1MASK6T        equ	451	;# 
  1788   0001C4                     C1FLTOBJ7       equ	452	;# 
  1789   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1790   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1791   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1792   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1793   0001C8                     C1MASK7         equ	456	;# 
  1794   0001C8                     C1MASK7L        equ	456	;# 
  1795   0001C9                     C1MASK7H        equ	457	;# 
  1796   0001CA                     C1MASK7U        equ	458	;# 
  1797   0001CB                     C1MASK7T        equ	459	;# 
  1798   0001CC                     C1FLTOBJ8       equ	460	;# 
  1799   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1800   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1801   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1802   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1803   0001D0                     C1MASK8         equ	464	;# 
  1804   0001D0                     C1MASK8L        equ	464	;# 
  1805   0001D1                     C1MASK8H        equ	465	;# 
  1806   0001D2                     C1MASK8U        equ	466	;# 
  1807   0001D3                     C1MASK8T        equ	467	;# 
  1808   0001D4                     C1FLTOBJ9       equ	468	;# 
  1809   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1810   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1811   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1812   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1813   0001D8                     C1MASK9         equ	472	;# 
  1814   0001D8                     C1MASK9L        equ	472	;# 
  1815   0001D9                     C1MASK9H        equ	473	;# 
  1816   0001DA                     C1MASK9U        equ	474	;# 
  1817   0001DB                     C1MASK9T        equ	475	;# 
  1818   0001DC                     C1FLTOBJ10      equ	476	;# 
  1819   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1820   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1821   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1822   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1823   0001E0                     C1MASK10        equ	480	;# 
  1824   0001E0                     C1MASK10L       equ	480	;# 
  1825   0001E1                     C1MASK10H       equ	481	;# 
  1826   0001E2                     C1MASK10U       equ	482	;# 
  1827   0001E3                     C1MASK10T       equ	483	;# 
  1828   0001E4                     C1FLTOBJ11      equ	484	;# 
  1829   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1830   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1831   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1832   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1833   0001E8                     C1MASK11        equ	488	;# 
  1834   0001E8                     C1MASK11L       equ	488	;# 
  1835   0001E9                     C1MASK11H       equ	489	;# 
  1836   0001EA                     C1MASK11U       equ	490	;# 
  1837   0001EB                     C1MASK11T       equ	491	;# 
  1838   000200                     PPSLOCK         equ	512	;# 
  1839   000201                     RA0PPS          equ	513	;# 
  1840   000202                     RA1PPS          equ	514	;# 
  1841   000203                     RA2PPS          equ	515	;# 
  1842   000204                     RA3PPS          equ	516	;# 
  1843   000205                     RA4PPS          equ	517	;# 
  1844   000206                     RA5PPS          equ	518	;# 
  1845   000207                     RA6PPS          equ	519	;# 
  1846   000208                     RA7PPS          equ	520	;# 
  1847   000209                     RB0PPS          equ	521	;# 
  1848   00020A                     RB1PPS          equ	522	;# 
  1849   00020B                     RB2PPS          equ	523	;# 
  1850   00020C                     RB3PPS          equ	524	;# 
  1851   00020D                     RB4PPS          equ	525	;# 
  1852   00020E                     RB5PPS          equ	526	;# 
  1853   00020F                     RB6PPS          equ	527	;# 
  1854   000210                     RB7PPS          equ	528	;# 
  1855   000211                     RC0PPS          equ	529	;# 
  1856   000212                     RC1PPS          equ	530	;# 
  1857   000213                     RC2PPS          equ	531	;# 
  1858   000214                     RC3PPS          equ	532	;# 
  1859   000215                     RC4PPS          equ	533	;# 
  1860   000216                     RC5PPS          equ	534	;# 
  1861   000217                     RC6PPS          equ	535	;# 
  1862   000218                     RC7PPS          equ	536	;# 
  1863   00023D                     CANRXPPS        equ	573	;# 
  1864   00023E                     INT0PPS         equ	574	;# 
  1865   00023F                     INT1PPS         equ	575	;# 
  1866   000240                     INT2PPS         equ	576	;# 
  1867   000241                     T0CKIPPS        equ	577	;# 
  1868   000242                     T1CKIPPS        equ	578	;# 
  1869   000243                     T1GPPS          equ	579	;# 
  1870   000244                     T3CKIPPS        equ	580	;# 
  1871   000245                     T3GPPS          equ	581	;# 
  1872   000246                     T5CKIPPS        equ	582	;# 
  1873   000247                     T5GPPS          equ	583	;# 
  1874   000248                     T2INPPS         equ	584	;# 
  1875   000249                     T4INPPS         equ	585	;# 
  1876   00024A                     T6INPPS         equ	586	;# 
  1877   00024B                     TUIN0PPS        equ	587	;# 
  1878   00024C                     TUIN1PPS        equ	588	;# 
  1879   00024F                     CCP1PPS         equ	591	;# 
  1880   000250                     CCP2PPS         equ	592	;# 
  1881   000251                     CCP3PPS         equ	593	;# 
  1882   000253                     PWM1ERSPPS      equ	595	;# 
  1883   000254                     PWM2ERSPPS      equ	596	;# 
  1884   000255                     PWM3ERSPPS      equ	597	;# 
  1885   000256                     PWM4ERSPPS      equ	598	;# 
  1886   000257                     PWMIN0PPS       equ	599	;# 
  1887   000258                     PWMIN1PPS       equ	600	;# 
  1888   000259                     SMT1WINPPS      equ	601	;# 
  1889   00025A                     SMT1SIGPPS      equ	602	;# 
  1890   00025B                     CWG1PPS         equ	603	;# 
  1891   00025B                     CWG1INPPS       equ	603	;# 
  1892   00025C                     CWG2PPS         equ	604	;# 
  1893   00025C                     CWG2INPPS       equ	604	;# 
  1894   00025D                     CWG3PPS         equ	605	;# 
  1895   00025D                     CWG3INPPS       equ	605	;# 
  1896   00025E                     MD1CARLPPS      equ	606	;# 
  1897   00025E                     MDCARLPPS       equ	606	;# 
  1898   00025F                     MD1CARHPPS      equ	607	;# 
  1899   00025F                     MDCARHPPS       equ	607	;# 
  1900   000260                     MD1SRCPPS       equ	608	;# 
  1901   000260                     MDSRCPPS        equ	608	;# 
  1902   000261                     CLCIN0PPS       equ	609	;# 
  1903   000262                     CLCIN1PPS       equ	610	;# 
  1904   000263                     CLCIN2PPS       equ	611	;# 
  1905   000264                     CLCIN3PPS       equ	612	;# 
  1906   000265                     CLCIN4PPS       equ	613	;# 
  1907   000266                     CLCIN5PPS       equ	614	;# 
  1908   000267                     CLCIN6PPS       equ	615	;# 
  1909   000268                     CLCIN7PPS       equ	616	;# 
  1910   000269                     ADACTPPS        equ	617	;# 
  1911   00026A                     SPI1SCKPPS      equ	618	;# 
  1912   00026B                     SPI1SDIPPS      equ	619	;# 
  1913   00026C                     SPI1SSPPS       equ	620	;# 
  1914   00026D                     SPI2SCKPPS      equ	621	;# 
  1915   00026E                     SPI2SDIPPS      equ	622	;# 
  1916   00026F                     SPI2SSPPS       equ	623	;# 
  1917   000270                     I2C1SDAPPS      equ	624	;# 
  1918   000271                     I2C1SCLPPS      equ	625	;# 
  1919   000272                     U1RXPPS         equ	626	;# 
  1920   000273                     U1CTSPPS        equ	627	;# 
  1921   000274                     U2RXPPS         equ	628	;# 
  1922   000275                     U2CTSPPS        equ	629	;# 
  1923   000276                     U3RXPPS         equ	630	;# 
  1924   000277                     U3CTSPPS        equ	631	;# 
  1925   000278                     U4RXPPS         equ	632	;# 
  1926   000279                     U4CTSPPS        equ	633	;# 
  1927   00027A                     U5RXPPS         equ	634	;# 
  1928   00027B                     U5CTSPPS        equ	635	;# 
  1929   000286                     RC4I2C          equ	646	;# 
  1930   000287                     RC3I2C          equ	647	;# 
  1931   000288                     RB2I2C          equ	648	;# 
  1932   000289                     RB1I2C          equ	649	;# 
  1933   00028A                     I2C1RXB         equ	650	;# 
  1934   00028B                     I2C1TXB         equ	651	;# 
  1935   00028C                     I2C1CNTL        equ	652	;# 
  1936   00028D                     I2C1CNTH        equ	653	;# 
  1937   00028E                     I2C1ADB0        equ	654	;# 
  1938   00028F                     I2C1ADB1        equ	655	;# 
  1939   000290                     I2C1ADR0        equ	656	;# 
  1940   000291                     I2C1ADR1        equ	657	;# 
  1941   000292                     I2C1ADR2        equ	658	;# 
  1942   000293                     I2C1ADR3        equ	659	;# 
  1943   000294                     I2C1CON0        equ	660	;# 
  1944   000295                     I2C1CON1        equ	661	;# 
  1945   000296                     I2C1CON2        equ	662	;# 
  1946   000297                     I2C1ERR         equ	663	;# 
  1947   000298                     I2C1STAT0       equ	664	;# 
  1948   000299                     I2C1STAT1       equ	665	;# 
  1949   00029A                     I2C1PIR         equ	666	;# 
  1950   00029B                     I2C1PIE         equ	667	;# 
  1951   00029C                     I2C1BTO         equ	668	;# 
  1952   00029D                     I2C1BAUD        equ	669	;# 
  1953   00029E                     I2C1CLK         equ	670	;# 
  1954   00029F                     I2C1BTOC        equ	671	;# 
  1955   0002A1                     U1RXB           equ	673	;# 
  1956   0002A1                     U1RXBL          equ	673	;# 
  1957   0002A2                     U1RXCHK         equ	674	;# 
  1958   0002A3                     U1TXB           equ	675	;# 
  1959   0002A3                     U1TXBL          equ	675	;# 
  1960   0002A4                     U1TXCHK         equ	676	;# 
  1961   0002A5                     U1P1            equ	677	;# 
  1962   0002A5                     U1P1L           equ	677	;# 
  1963   0002A6                     U1P1H           equ	678	;# 
  1964   0002A7                     U1P2            equ	679	;# 
  1965   0002A7                     U1P2L           equ	679	;# 
  1966   0002A8                     U1P2H           equ	680	;# 
  1967   0002A9                     U1P3            equ	681	;# 
  1968   0002A9                     U1P3L           equ	681	;# 
  1969   0002AA                     U1P3H           equ	682	;# 
  1970   0002AB                     U1CON0          equ	683	;# 
  1971   0002AC                     U1CON1          equ	684	;# 
  1972   0002AD                     U1CON2          equ	685	;# 
  1973   0002AE                     U1BRG           equ	686	;# 
  1974   0002AE                     U1BRGL          equ	686	;# 
  1975   0002AF                     U1BRGH          equ	687	;# 
  1976   0002B0                     U1FIFO          equ	688	;# 
  1977   0002B1                     U1UIR           equ	689	;# 
  1978   0002B2                     U1ERRIR         equ	690	;# 
  1979   0002B3                     U1ERRIE         equ	691	;# 
  1980   0002B4                     U2RXB           equ	692	;# 
  1981   0002B4                     U2RXBL          equ	692	;# 
  1982   0002B5                     U2RXCHK         equ	693	;# 
  1983   0002B6                     U2TXB           equ	694	;# 
  1984   0002B6                     U2TXBL          equ	694	;# 
  1985   0002B7                     U2TXCHK         equ	695	;# 
  1986   0002B8                     U2P1            equ	696	;# 
  1987   0002B8                     U2P1L           equ	696	;# 
  1988   0002B9                     U2P1H           equ	697	;# 
  1989   0002BA                     U2P2            equ	698	;# 
  1990   0002BA                     U2P2L           equ	698	;# 
  1991   0002BB                     U2P2H           equ	699	;# 
  1992   0002BC                     U2P3            equ	700	;# 
  1993   0002BC                     U2P3L           equ	700	;# 
  1994   0002BD                     U2P3H           equ	701	;# 
  1995   0002BE                     U2CON0          equ	702	;# 
  1996   0002BF                     U2CON1          equ	703	;# 
  1997   0002C0                     U2CON2          equ	704	;# 
  1998   0002C1                     U2BRG           equ	705	;# 
  1999   0002C1                     U2BRGL          equ	705	;# 
  2000   0002C2                     U2BRGH          equ	706	;# 
  2001   0002C3                     U2FIFO          equ	707	;# 
  2002   0002C4                     U2UIR           equ	708	;# 
  2003   0002C5                     U2ERRIR         equ	709	;# 
  2004   0002C6                     U2ERRIE         equ	710	;# 
  2005   0002C7                     U3RXB           equ	711	;# 
  2006   0002C7                     U3RXBL          equ	711	;# 
  2007   0002C9                     U3TXB           equ	713	;# 
  2008   0002C9                     U3TXBL          equ	713	;# 
  2009   0002CB                     U3P1            equ	715	;# 
  2010   0002CB                     U3P1L           equ	715	;# 
  2011   0002CD                     U3P2            equ	717	;# 
  2012   0002CD                     U3P2L           equ	717	;# 
  2013   0002CF                     U3P3            equ	719	;# 
  2014   0002CF                     U3P3L           equ	719	;# 
  2015   0002D1                     U3CON0          equ	721	;# 
  2016   0002D2                     U3CON1          equ	722	;# 
  2017   0002D3                     U3CON2          equ	723	;# 
  2018   0002D4                     U3BRG           equ	724	;# 
  2019   0002D4                     U3BRGL          equ	724	;# 
  2020   0002D5                     U3BRGH          equ	725	;# 
  2021   0002D6                     U3FIFO          equ	726	;# 
  2022   0002D7                     U3UIR           equ	727	;# 
  2023   0002D8                     U3ERRIR         equ	728	;# 
  2024   0002D9                     U3ERRIE         equ	729	;# 
  2025   0002DA                     U4RXB           equ	730	;# 
  2026   0002DA                     U4RXBL          equ	730	;# 
  2027   0002DC                     U4TXB           equ	732	;# 
  2028   0002DC                     U4TXBL          equ	732	;# 
  2029   0002DE                     U4P1            equ	734	;# 
  2030   0002DE                     U4P1L           equ	734	;# 
  2031   0002E0                     U4P2            equ	736	;# 
  2032   0002E0                     U4P2L           equ	736	;# 
  2033   0002E2                     U4P3            equ	738	;# 
  2034   0002E2                     U4P3L           equ	738	;# 
  2035   0002E4                     U4CON0          equ	740	;# 
  2036   0002E5                     U4CON1          equ	741	;# 
  2037   0002E6                     U4CON2          equ	742	;# 
  2038   0002E7                     U4BRG           equ	743	;# 
  2039   0002E7                     U4BRGL          equ	743	;# 
  2040   0002E8                     U4BRGH          equ	744	;# 
  2041   0002E9                     U4FIFO          equ	745	;# 
  2042   0002EA                     U4UIR           equ	746	;# 
  2043   0002EB                     U4ERRIR         equ	747	;# 
  2044   0002EC                     U4ERRIE         equ	748	;# 
  2045   0002ED                     U5RXB           equ	749	;# 
  2046   0002ED                     U5RXBL          equ	749	;# 
  2047   0002EF                     U5TXB           equ	751	;# 
  2048   0002EF                     U5TXBL          equ	751	;# 
  2049   0002F1                     U5P1            equ	753	;# 
  2050   0002F1                     U5P1L           equ	753	;# 
  2051   0002F3                     U5P2            equ	755	;# 
  2052   0002F3                     U5P2L           equ	755	;# 
  2053   0002F5                     U5P3            equ	757	;# 
  2054   0002F5                     U5P3L           equ	757	;# 
  2055   0002F7                     U5CON0          equ	759	;# 
  2056   0002F8                     U5CON1          equ	760	;# 
  2057   0002F9                     U5CON2          equ	761	;# 
  2058   0002FA                     U5BRG           equ	762	;# 
  2059   0002FA                     U5BRGL          equ	762	;# 
  2060   0002FB                     U5BRGH          equ	763	;# 
  2061   0002FC                     U5FIFO          equ	764	;# 
  2062   0002FD                     U5UIR           equ	765	;# 
  2063   0002FE                     U5ERRIR         equ	766	;# 
  2064   0002FF                     U5ERRIE         equ	767	;# 
  2065   000300                     SMT1TMR         equ	768	;# 
  2066   000300                     SMT1TMRL        equ	768	;# 
  2067   000301                     SMT1TMRH        equ	769	;# 
  2068   000302                     SMT1TMRU        equ	770	;# 
  2069   000303                     SMT1CPR         equ	771	;# 
  2070   000303                     SMT1CPRL        equ	771	;# 
  2071   000304                     SMT1CPRH        equ	772	;# 
  2072   000305                     SMT1CPRU        equ	773	;# 
  2073   000306                     SMT1CPW         equ	774	;# 
  2074   000306                     SMT1CPWL        equ	774	;# 
  2075   000307                     SMT1CPWH        equ	775	;# 
  2076   000308                     SMT1CPWU        equ	776	;# 
  2077   000309                     SMT1PR          equ	777	;# 
  2078   000309                     SMT1PRL         equ	777	;# 
  2079   00030A                     SMT1PRH         equ	778	;# 
  2080   00030B                     SMT1PRU         equ	779	;# 
  2081   00030C                     SMT1CON0        equ	780	;# 
  2082   00030D                     SMT1CON1        equ	781	;# 
  2083   00030E                     SMT1STAT        equ	782	;# 
  2084   00030F                     SMT1CLK         equ	783	;# 
  2085   000310                     SMT1SIG         equ	784	;# 
  2086   000311                     SMT1WIN         equ	785	;# 
  2087   000318                     TMR0L           equ	792	;# 
  2088   000318                     TMR0            equ	792	;# 
  2089   000319                     TMR0H           equ	793	;# 
  2090   000319                     PR0             equ	793	;# 
  2091   00031A                     T0CON0          equ	794	;# 
  2092   00031B                     T0CON1          equ	795	;# 
  2093   00031C                     TMR1            equ	796	;# 
  2094   00031C                     TMR1L           equ	796	;# 
  2095   00031D                     TMR1H           equ	797	;# 
  2096   00031E                     T1CON           equ	798	;# 
  2097   00031E                     TMR1CON         equ	798	;# 
  2098   00031F                     T1GCON          equ	799	;# 
  2099   00031F                     TMR1GCON        equ	799	;# 
  2100   000320                     T1GATE          equ	800	;# 
  2101   000320                     TMR1GATE        equ	800	;# 
  2102   000321                     T1CLK           equ	801	;# 
  2103   000321                     TMR1CLK         equ	801	;# 
  2104   000321                     PR1             equ	801	;# 
  2105   000322                     T2TMR           equ	802	;# 
  2106   000322                     TMR2            equ	802	;# 
  2107   000323                     T2PR            equ	803	;# 
  2108   000323                     PR2             equ	803	;# 
  2109   000324                     T2CON           equ	804	;# 
  2110   000325                     T2HLT           equ	805	;# 
  2111   000326                     T2CLKCON        equ	806	;# 
  2112   000326                     T2CLK           equ	806	;# 
  2113   000327                     T2RST           equ	807	;# 
  2114   000328                     TMR3            equ	808	;# 
  2115   000328                     TMR3L           equ	808	;# 
  2116   000329                     TMR3H           equ	809	;# 
  2117   00032A                     T3CON           equ	810	;# 
  2118   00032A                     TMR3CON         equ	810	;# 
  2119   00032B                     T3GCON          equ	811	;# 
  2120   00032B                     TMR3GCON        equ	811	;# 
  2121   00032C                     T3GATE          equ	812	;# 
  2122   00032C                     TMR3GATE        equ	812	;# 
  2123   00032D                     T3CLK           equ	813	;# 
  2124   00032D                     TMR3CLK         equ	813	;# 
  2125   00032D                     PR3             equ	813	;# 
  2126   00032E                     T4TMR           equ	814	;# 
  2127   00032E                     TMR4            equ	814	;# 
  2128   00032F                     T4PR            equ	815	;# 
  2129   00032F                     PR4             equ	815	;# 
  2130   000330                     T4CON           equ	816	;# 
  2131   000331                     T4HLT           equ	817	;# 
  2132   000332                     T4CLKCON        equ	818	;# 
  2133   000332                     T4CLK           equ	818	;# 
  2134   000333                     T4RST           equ	819	;# 
  2135   000334                     TMR5            equ	820	;# 
  2136   000334                     TMR5L           equ	820	;# 
  2137   000335                     TMR5H           equ	821	;# 
  2138   000336                     T5CON           equ	822	;# 
  2139   000336                     TMR5CON         equ	822	;# 
  2140   000337                     T5GCON          equ	823	;# 
  2141   000337                     TMR5GCON        equ	823	;# 
  2142   000338                     T5GATE          equ	824	;# 
  2143   000338                     TMR5GATE        equ	824	;# 
  2144   000339                     T5CLK           equ	825	;# 
  2145   000339                     TMR5CLK         equ	825	;# 
  2146   000339                     PR5             equ	825	;# 
  2147   00033A                     T6TMR           equ	826	;# 
  2148   00033A                     TMR6            equ	826	;# 
  2149   00033B                     T6PR            equ	827	;# 
  2150   00033B                     PR6             equ	827	;# 
  2151   00033C                     T6CON           equ	828	;# 
  2152   00033D                     T6HLT           equ	829	;# 
  2153   00033E                     T6CLKCON        equ	830	;# 
  2154   00033E                     T6CLK           equ	830	;# 
  2155   00033F                     T6RST           equ	831	;# 
  2156   000340                     CCPR1           equ	832	;# 
  2157   000340                     CCPR1L          equ	832	;# 
  2158   000341                     CCPR1H          equ	833	;# 
  2159   000342                     CCP1CON         equ	834	;# 
  2160   000343                     CCP1CAP         equ	835	;# 
  2161   000344                     CCPR2           equ	836	;# 
  2162   000344                     CCPR2L          equ	836	;# 
  2163   000345                     CCPR2H          equ	837	;# 
  2164   000346                     CCP2CON         equ	838	;# 
  2165   000347                     CCP2CAP         equ	839	;# 
  2166   000348                     CCPR3           equ	840	;# 
  2167   000348                     CCPR3L          equ	840	;# 
  2168   000349                     CCPR3H          equ	841	;# 
  2169   00034A                     CCP3CON         equ	842	;# 
  2170   00034B                     CCP3CAP         equ	843	;# 
  2171   00034C                     CCPTMRS0        equ	844	;# 
  2172   00034F                     CRCDATA         equ	847	;# 
  2173   00034F                     CRCDATAL        equ	847	;# 
  2174   000350                     CRCDATAH        equ	848	;# 
  2175   000351                     CRCDATAU        equ	849	;# 
  2176   000352                     CRCDATAT        equ	850	;# 
  2177   000353                     CRCOUT          equ	851	;# 
  2178   000353                     CRCSHFT         equ	851	;# 
  2179   000353                     CRCXOR          equ	851	;# 
  2180   000353                     CRCOUTL         equ	851	;# 
  2181   000353                     CRCSHFTL        equ	851	;# 
  2182   000353                     CRCSHIFTL       equ	851	;# 
  2183   000353                     CRCXORL         equ	851	;# 
  2184   000354                     CRCOUTH         equ	852	;# 
  2185   000354                     CRCSHFTH        equ	852	;# 
  2186   000354                     CRCSHIFTH       equ	852	;# 
  2187   000354                     CRCXORH         equ	852	;# 
  2188   000355                     CRCOUTU         equ	853	;# 
  2189   000355                     CRCSHFTU        equ	853	;# 
  2190   000355                     CRCSHIFTU       equ	853	;# 
  2191   000355                     CRCXORU         equ	853	;# 
  2192   000356                     CRCOUTT         equ	854	;# 
  2193   000356                     CRCSHFTT        equ	854	;# 
  2194   000356                     CRCSHIFTT       equ	854	;# 
  2195   000356                     CRCXORT         equ	854	;# 
  2196   000357                     CRCCON0         equ	855	;# 
  2197   000358                     CRCCON1         equ	856	;# 
  2198   000359                     CRCCON2         equ	857	;# 
  2199   00035A                     SCANLADR        equ	858	;# 
  2200   00035A                     SCANLADRL       equ	858	;# 
  2201   00035B                     SCANLADRH       equ	859	;# 
  2202   00035C                     SCANLADRU       equ	860	;# 
  2203   00035D                     SCANHADR        equ	861	;# 
  2204   00035D                     SCANHADRL       equ	861	;# 
  2205   00035E                     SCANHADRH       equ	862	;# 
  2206   00035F                     SCANHADRU       equ	863	;# 
  2207   000360                     SCANCON0        equ	864	;# 
  2208   000361                     SCANTRIG        equ	865	;# 
  2209   000362                     IPR0            equ	866	;# 
  2210   000363                     IPR1            equ	867	;# 
  2211   000364                     IPR2            equ	868	;# 
  2212   000365                     IPR3            equ	869	;# 
  2213   000366                     IPR4            equ	870	;# 
  2214   000367                     IPR5            equ	871	;# 
  2215   000368                     IPR6            equ	872	;# 
  2216   000369                     IPR7            equ	873	;# 
  2217   00036A                     IPR8            equ	874	;# 
  2218   00036B                     IPR9            equ	875	;# 
  2219   00036C                     IPR10           equ	876	;# 
  2220   00036D                     IPR11           equ	877	;# 
  2221   00036E                     IPR12           equ	878	;# 
  2222   00036F                     IPR13           equ	879	;# 
  2223   000370                     IPR14           equ	880	;# 
  2224   000371                     IPR15           equ	881	;# 
  2225   000373                     STATUS_CSHAD    equ	883	;# 
  2226   000374                     WREG_CSHAD      equ	884	;# 
  2227   000375                     BSR_CSHAD       equ	885	;# 
  2228   000376                     SHADCON         equ	886	;# 
  2229   000377                     STATUS_SHAD     equ	887	;# 
  2230   000378                     WREG_SHAD       equ	888	;# 
  2231   000379                     BSR_SHAD        equ	889	;# 
  2232   00037A                     PCLATH_SHAD     equ	890	;# 
  2233   00037B                     PCLATU_SHAD     equ	891	;# 
  2234   00037C                     FSR0SH          equ	892	;# 
  2235   00037C                     FSR0L_SHAD      equ	892	;# 
  2236   00037D                     FSR0H_SHAD      equ	893	;# 
  2237   00037E                     FSR1SH          equ	894	;# 
  2238   00037E                     FSR1L_SHAD      equ	894	;# 
  2239   00037F                     FSR1H_SHAD      equ	895	;# 
  2240   000380                     FSR2SH          equ	896	;# 
  2241   000380                     FSR2L_SHAD      equ	896	;# 
  2242   000381                     FSR2H_SHAD      equ	897	;# 
  2243   000382                     PRODSH          equ	898	;# 
  2244   000382                     PRODL_SHAD      equ	898	;# 
  2245   000383                     PRODH_SHAD      equ	899	;# 
  2246   000387                     TU16ACON0       equ	903	;# 
  2247   000388                     TU16ACON1       equ	904	;# 
  2248   000389                     TU16AHLT        equ	905	;# 
  2249   00038A                     TU16APS         equ	906	;# 
  2250   00038B                     TU16ATMR        equ	907	;# 
  2251   00038B                     TU16ACR         equ	907	;# 
  2252   00038B                     TU16ATMRL       equ	907	;# 
  2253   00038B                     TU16ACRL        equ	907	;# 
  2254   00038C                     TU16ATMRH       equ	908	;# 
  2255   00038C                     TU16ACRH        equ	908	;# 
  2256   00038D                     TU16APR         equ	909	;# 
  2257   00038D                     TU16APRL        equ	909	;# 
  2258   00038E                     TU16APRH        equ	910	;# 
  2259   00038F                     TU16ACLK        equ	911	;# 
  2260   000390                     TU16AERS        equ	912	;# 
  2261   000393                     TU16BCON0       equ	915	;# 
  2262   000394                     TU16BCON1       equ	916	;# 
  2263   000395                     TU16BHLT        equ	917	;# 
  2264   000396                     TU16BPS         equ	918	;# 
  2265   000397                     TU16BTMR        equ	919	;# 
  2266   000397                     TU16BCR         equ	919	;# 
  2267   000397                     TU16BTMRL       equ	919	;# 
  2268   000397                     TU16BCRL        equ	919	;# 
  2269   000398                     TU16BTMRH       equ	920	;# 
  2270   000398                     TU16BCRH        equ	920	;# 
  2271   000399                     TU16BPR         equ	921	;# 
  2272   000399                     TU16BPRL        equ	921	;# 
  2273   00039A                     TU16BPRH        equ	922	;# 
  2274   00039B                     TU16BCLK        equ	923	;# 
  2275   00039C                     TU16BERS        equ	924	;# 
  2276   0003BB                     TUCHAIN         equ	955	;# 
  2277   0003BC                     CWG1CLK         equ	956	;# 
  2278   0003BC                     CWG1CLKCON      equ	956	;# 
  2279   0003BD                     CWG1ISM         equ	957	;# 
  2280   0003BE                     CWG1DBR         equ	958	;# 
  2281   0003BF                     CWG1DBF         equ	959	;# 
  2282   0003C0                     CWG1CON0        equ	960	;# 
  2283   0003C1                     CWG1CON1        equ	961	;# 
  2284   0003C2                     CWG1AS0         equ	962	;# 
  2285   0003C3                     CWG1AS1         equ	963	;# 
  2286   0003C4                     CWG1STR         equ	964	;# 
  2287   0003C5                     CWG2CLK         equ	965	;# 
  2288   0003C5                     CWG2CLKCON      equ	965	;# 
  2289   0003C6                     CWG2ISM         equ	966	;# 
  2290   0003C7                     CWG2DBR         equ	967	;# 
  2291   0003C8                     CWG2DBF         equ	968	;# 
  2292   0003C9                     CWG2CON0        equ	969	;# 
  2293   0003CA                     CWG2CON1        equ	970	;# 
  2294   0003CB                     CWG2AS0         equ	971	;# 
  2295   0003CC                     CWG2AS1         equ	972	;# 
  2296   0003CD                     CWG2STR         equ	973	;# 
  2297   0003CE                     CWG3CLK         equ	974	;# 
  2298   0003CE                     CWG3CLKCON      equ	974	;# 
  2299   0003CF                     CWG3ISM         equ	975	;# 
  2300   0003D0                     CWG3DBR         equ	976	;# 
  2301   0003D1                     CWG3DBF         equ	977	;# 
  2302   0003D2                     CWG3CON0        equ	978	;# 
  2303   0003D3                     CWG3CON1        equ	979	;# 
  2304   0003D4                     CWG3AS0         equ	980	;# 
  2305   0003D5                     CWG3AS1         equ	981	;# 
  2306   0003D6                     CWG3STR         equ	982	;# 
  2307   0003D7                     FVRCON          equ	983	;# 
  2308   0003D8                     ADCPCON         equ	984	;# 
  2309   0003D8                     ADCP            equ	984	;# 
  2310   0003D9                     ADLTH           equ	985	;# 
  2311   0003D9                     ADLTHL          equ	985	;# 
  2312   0003DA                     ADLTHH          equ	986	;# 
  2313   0003DB                     ADUTH           equ	987	;# 
  2314   0003DB                     ADUTHL          equ	987	;# 
  2315   0003DC                     ADUTHH          equ	988	;# 
  2316   0003DD                     ADERR           equ	989	;# 
  2317   0003DD                     ADERRL          equ	989	;# 
  2318   0003DE                     ADERRH          equ	990	;# 
  2319   0003DF                     ADSTPT          equ	991	;# 
  2320   0003DF                     ADSTPTL         equ	991	;# 
  2321   0003E0                     ADSTPTH         equ	992	;# 
  2322   0003E1                     ADFLTR          equ	993	;# 
  2323   0003E1                     ADFLTRL         equ	993	;# 
  2324   0003E2                     ADFLTRH         equ	994	;# 
  2325   0003E3                     ADACC           equ	995	;# 
  2326   0003E3                     ADACCL          equ	995	;# 
  2327   0003E4                     ADACCH          equ	996	;# 
  2328   0003E5                     ADACCU          equ	997	;# 
  2329   0003E6                     ADCNT           equ	998	;# 
  2330   0003E7                     ADRPT           equ	999	;# 
  2331   0003E8                     ADPREV          equ	1000	;# 
  2332   0003E8                     ADPREVL         equ	1000	;# 
  2333   0003E9                     ADPREVH         equ	1001	;# 
  2334   0003EA                     ADRES           equ	1002	;# 
  2335   0003EA                     ADRESL          equ	1002	;# 
  2336   0003EB                     ADRESH          equ	1003	;# 
  2337   0003EC                     ADPCH           equ	1004	;# 
  2338   0003EE                     ADACQ           equ	1006	;# 
  2339   0003EE                     ADACQL          equ	1006	;# 
  2340   0003EF                     ADACQH          equ	1007	;# 
  2341   0003F0                     ADCAP           equ	1008	;# 
  2342   0003F1                     ADPRE           equ	1009	;# 
  2343   0003F1                     ADPREL          equ	1009	;# 
  2344   0003F2                     ADPREH          equ	1010	;# 
  2345   0003F3                     ADCON0          equ	1011	;# 
  2346   0003F4                     ADCON1          equ	1012	;# 
  2347   0003F5                     ADCON2          equ	1013	;# 
  2348   0003F6                     ADCON3          equ	1014	;# 
  2349   0003F7                     ADSTAT          equ	1015	;# 
  2350   0003F8                     ADREF           equ	1016	;# 
  2351   0003F9                     ADACT           equ	1017	;# 
  2352   0003FA                     ADCLK           equ	1018	;# 
  2353   0003FB                     ADCTX           equ	1019	;# 
  2354   0003FC                     ADCSEL1         equ	1020	;# 
  2355   0003FD                     ADCSEL2         equ	1021	;# 
  2356   0003FE                     ADCSEL3         equ	1022	;# 
  2357   0003FF                     ADCSEL4         equ	1023	;# 
  2358   000400                     ANSELA          equ	1024	;# 
  2359   000401                     WPUA            equ	1025	;# 
  2360   000402                     ODCONA          equ	1026	;# 
  2361   000403                     SLRCONA         equ	1027	;# 
  2362   000404                     INLVLA          equ	1028	;# 
  2363   000405                     IOCAP           equ	1029	;# 
  2364   000406                     IOCAN           equ	1030	;# 
  2365   000407                     IOCAF           equ	1031	;# 
  2366   000408                     ANSELB          equ	1032	;# 
  2367   000409                     WPUB            equ	1033	;# 
  2368   00040A                     ODCONB          equ	1034	;# 
  2369   00040B                     SLRCONB         equ	1035	;# 
  2370   00040C                     INLVLB          equ	1036	;# 
  2371   00040D                     IOCBP           equ	1037	;# 
  2372   00040E                     IOCBN           equ	1038	;# 
  2373   00040F                     IOCBF           equ	1039	;# 
  2374   000410                     ANSELC          equ	1040	;# 
  2375   000411                     WPUC            equ	1041	;# 
  2376   000412                     ODCONC          equ	1042	;# 
  2377   000413                     SLRCONC         equ	1043	;# 
  2378   000414                     INLVLC          equ	1044	;# 
  2379   000415                     IOCCP           equ	1045	;# 
  2380   000416                     IOCCN           equ	1046	;# 
  2381   000417                     IOCCF           equ	1047	;# 
  2382   000421                     WPUE            equ	1057	;# 
  2383   000424                     INLVLE          equ	1060	;# 
  2384   000425                     IOCEP           equ	1061	;# 
  2385   000426                     IOCEN           equ	1062	;# 
  2386   000427                     IOCEF           equ	1063	;# 
  2387   000440                     NCO1ACC         equ	1088	;# 
  2388   000440                     NCO1ACCL        equ	1088	;# 
  2389   000441                     NCO1ACCH        equ	1089	;# 
  2390   000442                     NCO1ACCU        equ	1090	;# 
  2391   000443                     NCO1INC         equ	1091	;# 
  2392   000443                     NCO1INCL        equ	1091	;# 
  2393   000444                     NCO1INCH        equ	1092	;# 
  2394   000445                     NCO1INCU        equ	1093	;# 
  2395   000446                     NCO1CON         equ	1094	;# 
  2396   000447                     NCO1CLK         equ	1095	;# 
  2397   000448                     NCO2ACC         equ	1096	;# 
  2398   000448                     NCO2ACCL        equ	1096	;# 
  2399   000449                     NCO2ACCH        equ	1097	;# 
  2400   00044A                     NCO2ACCU        equ	1098	;# 
  2401   00044B                     NCO2INC         equ	1099	;# 
  2402   00044B                     NCO2INCL        equ	1099	;# 
  2403   00044C                     NCO2INCH        equ	1100	;# 
  2404   00044D                     NCO2INCU        equ	1101	;# 
  2405   00044E                     NCO2CON         equ	1102	;# 
  2406   00044F                     NCO2CLK         equ	1103	;# 
  2407   000450                     NCO3ACC         equ	1104	;# 
  2408   000450                     NCO3ACCL        equ	1104	;# 
  2409   000451                     NCO3ACCH        equ	1105	;# 
  2410   000452                     NCO3ACCU        equ	1106	;# 
  2411   000453                     NCO3INC         equ	1107	;# 
  2412   000453                     NCO3INCL        equ	1107	;# 
  2413   000454                     NCO3INCH        equ	1108	;# 
  2414   000455                     NCO3INCU        equ	1109	;# 
  2415   000456                     NCO3CON         equ	1110	;# 
  2416   000457                     NCO3CLK         equ	1111	;# 
  2417   000458                     FSCMCON         equ	1112	;# 
  2418   000459                     IVTLOCK         equ	1113	;# 
  2419   00045A                     IVTAD           equ	1114	;# 
  2420   00045A                     IVTADL          equ	1114	;# 
  2421   00045B                     IVTADH          equ	1115	;# 
  2422   00045C                     IVTADU          equ	1116	;# 
  2423   00045D                     IVTBASE         equ	1117	;# 
  2424   00045D                     IVTBASEL        equ	1117	;# 
  2425   00045E                     IVTBASEH        equ	1118	;# 
  2426   00045F                     IVTBASEU        equ	1119	;# 
  2427   000460                     PWM1ERS         equ	1120	;# 
  2428   000461                     PWM1CLK         equ	1121	;# 
  2429   000462                     PWM1LDS         equ	1122	;# 
  2430   000463                     PWM1PR          equ	1123	;# 
  2431   000463                     PWM1PRL         equ	1123	;# 
  2432   000464                     PWM1PRH         equ	1124	;# 
  2433   000465                     PWM1CPRE        equ	1125	;# 
  2434   000466                     PWM1PIPOS       equ	1126	;# 
  2435   000467                     PWM1GIR         equ	1127	;# 
  2436   000468                     PWM1GIE         equ	1128	;# 
  2437   000469                     PWM1CON         equ	1129	;# 
  2438   00046A                     PWM1S1CFG       equ	1130	;# 
  2439   00046B                     PWM1S1P1        equ	1131	;# 
  2440   00046B                     PWM1S1P1L       equ	1131	;# 
  2441   00046C                     PWM1S1P1H       equ	1132	;# 
  2442   00046D                     PWM1S1P2        equ	1133	;# 
  2443   00046D                     PWM1S1P2L       equ	1133	;# 
  2444   00046E                     PWM1S1P2H       equ	1134	;# 
  2445   00046F                     PWM2ERS         equ	1135	;# 
  2446   000470                     PWM2CLK         equ	1136	;# 
  2447   000471                     PWM2LDS         equ	1137	;# 
  2448   000472                     PWM2PR          equ	1138	;# 
  2449   000472                     PWM2PRL         equ	1138	;# 
  2450   000473                     PWM2PRH         equ	1139	;# 
  2451   000474                     PWM2CPRE        equ	1140	;# 
  2452   000475                     PWM2PIPOS       equ	1141	;# 
  2453   000476                     PWM2GIR         equ	1142	;# 
  2454   000477                     PWM2GIE         equ	1143	;# 
  2455   000478                     PWM2CON         equ	1144	;# 
  2456   000479                     PWM2S1CFG       equ	1145	;# 
  2457   00047A                     PWM2S1P1        equ	1146	;# 
  2458   00047A                     PWM2S1P1L       equ	1146	;# 
  2459   00047B                     PWM2S1P1H       equ	1147	;# 
  2460   00047C                     PWM2S1P2        equ	1148	;# 
  2461   00047C                     PWM2S1P2L       equ	1148	;# 
  2462   00047D                     PWM2S1P2H       equ	1149	;# 
  2463   00047E                     PWM3ERS         equ	1150	;# 
  2464   00047F                     PWM3CLK         equ	1151	;# 
  2465   000480                     PWM3LDS         equ	1152	;# 
  2466   000481                     PWM3PR          equ	1153	;# 
  2467   000481                     PWM3PRL         equ	1153	;# 
  2468   000482                     PWM3PRH         equ	1154	;# 
  2469   000483                     PWM3CPRE        equ	1155	;# 
  2470   000484                     PWM3PIPOS       equ	1156	;# 
  2471   000485                     PWM3GIR         equ	1157	;# 
  2472   000486                     PWM3GIE         equ	1158	;# 
  2473   000487                     PWM3CON         equ	1159	;# 
  2474   000488                     PWM3S1CFG       equ	1160	;# 
  2475   000489                     PWM3S1P1        equ	1161	;# 
  2476   000489                     PWM3S1P1L       equ	1161	;# 
  2477   00048A                     PWM3S1P1H       equ	1162	;# 
  2478   00048B                     PWM3S1P2        equ	1163	;# 
  2479   00048B                     PWM3S1P2L       equ	1163	;# 
  2480   00048C                     PWM3S1P2H       equ	1164	;# 
  2481   00048D                     PWM4ERS         equ	1165	;# 
  2482   00048E                     PWM4CLK         equ	1166	;# 
  2483   00048F                     PWM4LDS         equ	1167	;# 
  2484   000490                     PWM4PR          equ	1168	;# 
  2485   000490                     PWM4PRL         equ	1168	;# 
  2486   000491                     PWM4PRH         equ	1169	;# 
  2487   000492                     PWM4CPRE        equ	1170	;# 
  2488   000493                     PWM4PIPOS       equ	1171	;# 
  2489   000494                     PWM4GIR         equ	1172	;# 
  2490   000495                     PWM4GIE         equ	1173	;# 
  2491   000496                     PWM4CON         equ	1174	;# 
  2492   000497                     PWM4S1CFG       equ	1175	;# 
  2493   000498                     PWM4S1P1        equ	1176	;# 
  2494   000498                     PWM4S1P1L       equ	1176	;# 
  2495   000499                     PWM4S1P1H       equ	1177	;# 
  2496   00049A                     PWM4S1P2        equ	1178	;# 
  2497   00049A                     PWM4S1P2L       equ	1178	;# 
  2498   00049B                     PWM4S1P2H       equ	1179	;# 
  2499   00049C                     PWMLOAD         equ	1180	;# 
  2500   00049D                     PWMEN           equ	1181	;# 
  2501   00049E                     PIE0            equ	1182	;# 
  2502   00049F                     PIE1            equ	1183	;# 
  2503   0004A0                     PIE2            equ	1184	;# 
  2504   0004A1                     PIE3            equ	1185	;# 
  2505   0004A2                     PIE4            equ	1186	;# 
  2506   0004A3                     PIE5            equ	1187	;# 
  2507   0004A4                     PIE6            equ	1188	;# 
  2508   0004A5                     PIE7            equ	1189	;# 
  2509   0004A6                     PIE8            equ	1190	;# 
  2510   0004A7                     PIE9            equ	1191	;# 
  2511   0004A8                     PIE10           equ	1192	;# 
  2512   0004A9                     PIE11           equ	1193	;# 
  2513   0004AA                     PIE12           equ	1194	;# 
  2514   0004AB                     PIE13           equ	1195	;# 
  2515   0004AC                     PIE14           equ	1196	;# 
  2516   0004AD                     PIE15           equ	1197	;# 
  2517   0004AE                     PIR0            equ	1198	;# 
  2518   0004AF                     PIR1            equ	1199	;# 
  2519   0004B0                     PIR2            equ	1200	;# 
  2520   0004B1                     PIR3            equ	1201	;# 
  2521   0004B2                     PIR4            equ	1202	;# 
  2522   0004B3                     PIR5            equ	1203	;# 
  2523   0004B4                     PIR6            equ	1204	;# 
  2524   0004B5                     PIR7            equ	1205	;# 
  2525   0004B6                     PIR8            equ	1206	;# 
  2526   0004B7                     PIR9            equ	1207	;# 
  2527   0004B8                     PIR10           equ	1208	;# 
  2528   0004B9                     PIR11           equ	1209	;# 
  2529   0004BA                     PIR12           equ	1210	;# 
  2530   0004BB                     PIR13           equ	1211	;# 
  2531   0004BC                     PIR14           equ	1212	;# 
  2532   0004BD                     PIR15           equ	1213	;# 
  2533   0004BE                     LATA            equ	1214	;# 
  2534   0004BF                     LATB            equ	1215	;# 
  2535   0004C0                     LATC            equ	1216	;# 
  2536   0004C6                     TRISA           equ	1222	;# 
  2537   0004C7                     TRISB           equ	1223	;# 
  2538   0004C8                     TRISC           equ	1224	;# 
  2539   0004CA                     TRISE           equ	1226	;# 
  2540   0004CE                     PORTA           equ	1230	;# 
  2541   0004CF                     PORTB           equ	1231	;# 
  2542   0004D0                     PORTC           equ	1232	;# 
  2543   0004D2                     PORTE           equ	1234	;# 
  2544   0004D6                     INTCON0         equ	1238	;# 
  2545   0004D7                     INTCON1         equ	1239	;# 
  2546   0004D8                     STATUS          equ	1240	;# 
  2547   0004D9                     FSR2            equ	1241	;# 
  2548   0004D9                     FSR2L           equ	1241	;# 
  2549   0004DA                     FSR2H           equ	1242	;# 
  2550   0004DB                     PLUSW2          equ	1243	;# 
  2551   0004DC                     PREINC2         equ	1244	;# 
  2552   0004DD                     POSTDEC2        equ	1245	;# 
  2553   0004DE                     POSTINC2        equ	1246	;# 
  2554   0004DF                     INDF2           equ	1247	;# 
  2555   0004E0                     BSR             equ	1248	;# 
  2556   0004E1                     FSR1            equ	1249	;# 
  2557   0004E1                     FSR1L           equ	1249	;# 
  2558   0004E2                     FSR1H           equ	1250	;# 
  2559   0004E3                     PLUSW1          equ	1251	;# 
  2560   0004E4                     PREINC1         equ	1252	;# 
  2561   0004E5                     POSTDEC1        equ	1253	;# 
  2562   0004E6                     POSTINC1        equ	1254	;# 
  2563   0004E7                     INDF1           equ	1255	;# 
  2564   0004E8                     WREG            equ	1256	;# 
  2565   0004E9                     FSR0            equ	1257	;# 
  2566   0004E9                     FSR0L           equ	1257	;# 
  2567   0004EA                     FSR0H           equ	1258	;# 
  2568   0004EB                     PLUSW0          equ	1259	;# 
  2569   0004EC                     PREINC0         equ	1260	;# 
  2570   0004ED                     POSTDEC0        equ	1261	;# 
  2571   0004EE                     POSTINC0        equ	1262	;# 
  2572   0004EF                     INDF0           equ	1263	;# 
  2573   0004F0                     PCON0           equ	1264	;# 
  2574   0004F1                     PCON1           equ	1265	;# 
  2575   0004F2                     CPUDOZE         equ	1266	;# 
  2576   0004F3                     PROD            equ	1267	;# 
  2577   0004F3                     PRODL           equ	1267	;# 
  2578   0004F4                     PRODH           equ	1268	;# 
  2579   0004F5                     TABLAT          equ	1269	;# 
  2580   0004F6                     TBLPTR          equ	1270	;# 
  2581   0004F6                     TBLPTRL         equ	1270	;# 
  2582   0004F7                     TBLPTRH         equ	1271	;# 
  2583   0004F8                     TBLPTRU         equ	1272	;# 
  2584   0004F9                     PCLAT           equ	1273	;# 
  2585   0004F9                     PCL             equ	1273	;# 
  2586   0004FA                     PCLATH          equ	1274	;# 
  2587   0004FB                     PCLATU          equ	1275	;# 
  2588   0004FC                     STKPTR          equ	1276	;# 
  2589   0004FD                     TOS             equ	1277	;# 
  2590   0004FD                     TOSL            equ	1277	;# 
  2591   0004FE                     TOSH            equ	1278	;# 
  2592   0004FF                     TOSU            equ	1279	;# 
  2593   000038                     BOOTREG         equ	56	;# 
  2594   000039                     CLKRCON         equ	57	;# 
  2595   00003A                     CLKRCLK         equ	58	;# 
  2596   000040                     NVMCON0         equ	64	;# 
  2597   000041                     NVMCON1         equ	65	;# 
  2598   000042                     NVMLOCK         equ	66	;# 
  2599   000043                     NVMADR          equ	67	;# 
  2600   000043                     NVMADRL         equ	67	;# 
  2601   000044                     NVMADRH         equ	68	;# 
  2602   000045                     NVMADRU         equ	69	;# 
  2603   000046                     NVMDAT          equ	70	;# 
  2604   000046                     NVMDATL         equ	70	;# 
  2605   000047                     NVMDATH         equ	71	;# 
  2606   000048                     VREGCON         equ	72	;# 
  2607   000049                     BORCON          equ	73	;# 
  2608   00004A                     HLVDCON0        equ	74	;# 
  2609   00004B                     HLVDCON1        equ	75	;# 
  2610   00004C                     ZCDCON          equ	76	;# 
  2611   000060                     PMD0            equ	96	;# 
  2612   000061                     PMD1            equ	97	;# 
  2613   000062                     PMD2            equ	98	;# 
  2614   000063                     PMD3            equ	99	;# 
  2615   000064                     PMD4            equ	100	;# 
  2616   000065                     PMD5            equ	101	;# 
  2617   000066                     PMD6            equ	102	;# 
  2618   000067                     PMD7            equ	103	;# 
  2619   000068                     PMD8            equ	104	;# 
  2620   00006A                     MD1CON0         equ	106	;# 
  2621   00006B                     MD1CON1         equ	107	;# 
  2622   00006C                     MD1SRC          equ	108	;# 
  2623   00006D                     MD1CARL         equ	109	;# 
  2624   00006E                     MD1CARH         equ	110	;# 
  2625   00006F                     CMOUT           equ	111	;# 
  2626   000070                     CM1CON0         equ	112	;# 
  2627   000071                     CM1CON1         equ	113	;# 
  2628   000072                     CM1NCH          equ	114	;# 
  2629   000073                     CM1PCH          equ	115	;# 
  2630   000074                     CM2CON0         equ	116	;# 
  2631   000075                     CM2CON1         equ	117	;# 
  2632   000076                     CM2NCH          equ	118	;# 
  2633   000077                     CM2PCH          equ	119	;# 
  2634   000078                     WDTCON0         equ	120	;# 
  2635   000079                     WDTCON1         equ	121	;# 
  2636   00007A                     WDTPSL          equ	122	;# 
  2637   00007B                     WDTPSH          equ	123	;# 
  2638   00007C                     WDTTMR          equ	124	;# 
  2639   00007D                     DAC1DAT         equ	125	;# 
  2640   00007D                     DAC1DATL        equ	125	;# 
  2641   00007F                     DAC1CON         equ	127	;# 
  2642   000080                     SPI1RXB         equ	128	;# 
  2643   000081                     SPI1TXB         equ	129	;# 
  2644   000082                     SPI1TCNT        equ	130	;# 
  2645   000082                     SPI1TCNTL       equ	130	;# 
  2646   000083                     SPI1TCNTH       equ	131	;# 
  2647   000084                     SPI1CON0        equ	132	;# 
  2648   000085                     SPI1CON1        equ	133	;# 
  2649   000086                     SPI1CON2        equ	134	;# 
  2650   000087                     SPI1STATUS      equ	135	;# 
  2651   000088                     SPI1TWIDTH      equ	136	;# 
  2652   000089                     SPI1BAUD        equ	137	;# 
  2653   00008A                     SPI1INTF        equ	138	;# 
  2654   00008B                     SPI1INTE        equ	139	;# 
  2655   00008C                     SPI1CLK         equ	140	;# 
  2656   00008D                     SPI2RXB         equ	141	;# 
  2657   00008E                     SPI2TXB         equ	142	;# 
  2658   00008F                     SPI2TCNT        equ	143	;# 
  2659   00008F                     SPI2TCNTL       equ	143	;# 
  2660   000090                     SPI2TCNTH       equ	144	;# 
  2661   000091                     SPI2CON0        equ	145	;# 
  2662   000092                     SPI2CON1        equ	146	;# 
  2663   000093                     SPI2CON2        equ	147	;# 
  2664   000094                     SPI2STATUS      equ	148	;# 
  2665   000095                     SPI2TWIDTH      equ	149	;# 
  2666   000096                     SPI2BAUD        equ	150	;# 
  2667   000097                     SPI2INTF        equ	151	;# 
  2668   000098                     SPI2INTE        equ	152	;# 
  2669   000099                     SPI2CLK         equ	153	;# 
  2670   0000AC                     ACTCON          equ	172	;# 
  2671   0000AD                     OSCCON1         equ	173	;# 
  2672   0000AE                     OSCCON2         equ	174	;# 
  2673   0000AF                     OSCCON3         equ	175	;# 
  2674   0000B0                     OSCTUNE         equ	176	;# 
  2675   0000B1                     OSCFRQ          equ	177	;# 
  2676   0000B1                     OSCFREQ         equ	177	;# 
  2677   0000B2                     OSCSTAT         equ	178	;# 
  2678   0000B2                     OSCSTAT1        equ	178	;# 
  2679   0000B3                     OSCEN           equ	179	;# 
  2680   0000B4                     PRLOCK          equ	180	;# 
  2681   0000B5                     SCANPR          equ	181	;# 
  2682   0000B6                     DMA1PR          equ	182	;# 
  2683   0000B7                     DMA2PR          equ	183	;# 
  2684   0000B8                     DMA3PR          equ	184	;# 
  2685   0000B9                     DMA4PR          equ	185	;# 
  2686   0000BA                     DMA5PR          equ	186	;# 
  2687   0000BB                     DMA6PR          equ	187	;# 
  2688   0000BC                     DMA7PR          equ	188	;# 
  2689   0000BD                     DMA8PR          equ	189	;# 
  2690   0000BE                     MAINPR          equ	190	;# 
  2691   0000BF                     ISRPR           equ	191	;# 
  2692   0000D4                     CLCDATA         equ	212	;# 
  2693   0000D5                     CLCSELECT       equ	213	;# 
  2694   0000D6                     CLCnCON         equ	214	;# 
  2695   0000D7                     CLCnPOL         equ	215	;# 
  2696   0000D8                     CLCnSEL0        equ	216	;# 
  2697   0000D9                     CLCnSEL1        equ	217	;# 
  2698   0000DA                     CLCnSEL2        equ	218	;# 
  2699   0000DB                     CLCnSEL3        equ	219	;# 
  2700   0000DC                     CLCnGLS0        equ	220	;# 
  2701   0000DD                     CLCnGLS1        equ	221	;# 
  2702   0000DE                     CLCnGLS2        equ	222	;# 
  2703   0000DF                     CLCnGLS3        equ	223	;# 
  2704   0000E8                     DMASELECT       equ	232	;# 
  2705   0000E9                     DMAnBUF         equ	233	;# 
  2706   0000EA                     DMAnDCNT        equ	234	;# 
  2707   0000EA                     DMAnDCNTL       equ	234	;# 
  2708   0000EB                     DMAnDCNTH       equ	235	;# 
  2709   0000EC                     DMAnDPTR        equ	236	;# 
  2710   0000EC                     DMAnDPTRL       equ	236	;# 
  2711   0000ED                     DMAnDPTRH       equ	237	;# 
  2712   0000EE                     DMAnDSZ         equ	238	;# 
  2713   0000EE                     DMAnDSZL        equ	238	;# 
  2714   0000EF                     DMAnDSZH        equ	239	;# 
  2715   0000F0                     DMAnDSA         equ	240	;# 
  2716   0000F0                     DMAnDSAL        equ	240	;# 
  2717   0000F1                     DMAnDSAH        equ	241	;# 
  2718   0000F2                     DMAnSCNT        equ	242	;# 
  2719   0000F2                     DMAnSCNTL       equ	242	;# 
  2720   0000F3                     DMAnSCNTH       equ	243	;# 
  2721   0000F4                     DMAnSPTR        equ	244	;# 
  2722   0000F4                     DMAnSPTRL       equ	244	;# 
  2723   0000F5                     DMAnSPTRH       equ	245	;# 
  2724   0000F6                     DMAnSPTRU       equ	246	;# 
  2725   0000F7                     DMAnSSZ         equ	247	;# 
  2726   0000F7                     DMAnSSZL        equ	247	;# 
  2727   0000F8                     DMAnSSZH        equ	248	;# 
  2728   0000F9                     DMAnSSA         equ	249	;# 
  2729   0000F9                     DMAnSSAL        equ	249	;# 
  2730   0000FA                     DMAnSSAH        equ	250	;# 
  2731   0000FB                     DMAnSSAU        equ	251	;# 
  2732   0000FC                     DMAnCON0        equ	252	;# 
  2733   0000FD                     DMAnCON1        equ	253	;# 
  2734   0000FE                     DMAnAIRQ        equ	254	;# 
  2735   0000FF                     DMAnSIRQ        equ	255	;# 
  2736   000100                     C1CONL          equ	256	;# 
  2737   000101                     C1CONH          equ	257	;# 
  2738   000102                     C1CONU          equ	258	;# 
  2739   000103                     C1CONT          equ	259	;# 
  2740   000104                     C1NBTCFGL       equ	260	;# 
  2741   000105                     C1NBTCFGH       equ	261	;# 
  2742   000106                     C1NBTCFGU       equ	262	;# 
  2743   000107                     C1NBTCFGT       equ	263	;# 
  2744   000108                     C1DBTCFGL       equ	264	;# 
  2745   000109                     C1DBTCFGH       equ	265	;# 
  2746   00010A                     C1DBTCFGU       equ	266	;# 
  2747   00010B                     C1DBTCFGT       equ	267	;# 
  2748   00010C                     C1TDCL          equ	268	;# 
  2749   00010D                     C1TDCH          equ	269	;# 
  2750   00010E                     C1TDCU          equ	270	;# 
  2751   000110                     C1TBC           equ	272	;# 
  2752   000110                     C1TBCL          equ	272	;# 
  2753   000111                     C1TBCH          equ	273	;# 
  2754   000112                     C1TBCU          equ	274	;# 
  2755   000113                     C1TBCT          equ	275	;# 
  2756   000114                     C1TSCONL        equ	276	;# 
  2757   000115                     C1TSCONH        equ	277	;# 
  2758   000116                     C1TSCONU        equ	278	;# 
  2759   000117                     C1TSCONT        equ	279	;# 
  2760   000118                     C1VECL          equ	280	;# 
  2761   000119                     C1VECH          equ	281	;# 
  2762   00011A                     C1VECU          equ	282	;# 
  2763   00011B                     C1VECT          equ	283	;# 
  2764   00011C                     C1INTL          equ	284	;# 
  2765   00011D                     C1INTH          equ	285	;# 
  2766   00011E                     C1INTU          equ	286	;# 
  2767   00011F                     C1INTT          equ	287	;# 
  2768   000120                     C1RXIF          equ	288	;# 
  2769   000120                     C1RXIFL         equ	288	;# 
  2770   000121                     C1RXIFH         equ	289	;# 
  2771   000122                     C1RXIFU         equ	290	;# 
  2772   000123                     C1RXIFT         equ	291	;# 
  2773   000124                     C1TXIF          equ	292	;# 
  2774   000124                     C1TXIFL         equ	292	;# 
  2775   000125                     C1TXIFH         equ	293	;# 
  2776   000126                     C1TXIFU         equ	294	;# 
  2777   000127                     C1TXIFT         equ	295	;# 
  2778   000128                     C1RXOVIF        equ	296	;# 
  2779   000128                     C1RXOVIFL       equ	296	;# 
  2780   000129                     C1RXOVIFH       equ	297	;# 
  2781   00012A                     C1RXOVIFU       equ	298	;# 
  2782   00012B                     C1RXOVIFT       equ	299	;# 
  2783   00012C                     C1TXATIF        equ	300	;# 
  2784   00012C                     C1TXATIFL       equ	300	;# 
  2785   00012D                     C1TXATIFH       equ	301	;# 
  2786   00012E                     C1TXATIFU       equ	302	;# 
  2787   00012F                     C1TXATIFT       equ	303	;# 
  2788   000130                     C1TXREQ         equ	304	;# 
  2789   000130                     C1TXREQL        equ	304	;# 
  2790   000131                     C1TXREQH        equ	305	;# 
  2791   000132                     C1TXREQU        equ	306	;# 
  2792   000133                     C1TXREQT        equ	307	;# 
  2793   000134                     C1TRECL         equ	308	;# 
  2794   000135                     C1TRECH         equ	309	;# 
  2795   000136                     C1TRECU         equ	310	;# 
  2796   000137                     C1TRECT         equ	311	;# 
  2797   000138                     C1BDIAG0L       equ	312	;# 
  2798   000139                     C1BDIAG0H       equ	313	;# 
  2799   00013C                     C1BDIAG1L       equ	316	;# 
  2800   00013D                     C1BDIAG1H       equ	317	;# 
  2801   00013E                     C1BDIAG1U       equ	318	;# 
  2802   00013F                     C1BDIAG1T       equ	319	;# 
  2803   000140                     C1TEFCONL       equ	320	;# 
  2804   000141                     C1TEFCONH       equ	321	;# 
  2805   000142                     C1TEFCONU       equ	322	;# 
  2806   000143                     C1TEFCONT       equ	323	;# 
  2807   000144                     C1TEFSTAL       equ	324	;# 
  2808   000145                     C1TEFSTAH       equ	325	;# 
  2809   000146                     C1TEFSTAU       equ	326	;# 
  2810   000147                     C1TEFSTAT       equ	327	;# 
  2811   000148                     C1TEFUA         equ	328	;# 
  2812   000148                     C1TEFUAL        equ	328	;# 
  2813   000149                     C1TEFUAH        equ	329	;# 
  2814   00014A                     C1TEFUAU        equ	330	;# 
  2815   00014B                     C1TEFUAT        equ	331	;# 
  2816   00014C                     C1FIFOBA        equ	332	;# 
  2817   00014C                     C1FIFOBAL       equ	332	;# 
  2818   00014D                     C1FIFOBAH       equ	333	;# 
  2819   00014E                     C1FIFOBAU       equ	334	;# 
  2820   00014F                     C1FIFOBAT       equ	335	;# 
  2821   000150                     C1TXQCONL       equ	336	;# 
  2822   000151                     C1TXQCONH       equ	337	;# 
  2823   000152                     C1TXQCONU       equ	338	;# 
  2824   000153                     C1TXQCONT       equ	339	;# 
  2825   000154                     C1TXQSTAL       equ	340	;# 
  2826   000155                     C1TXQSTAH       equ	341	;# 
  2827   000156                     C1TXQSTAU       equ	342	;# 
  2828   000157                     C1TXQSTAT       equ	343	;# 
  2829   000158                     C1TXQUA         equ	344	;# 
  2830   000158                     C1TXQUAL        equ	344	;# 
  2831   000159                     C1TXQUAH        equ	345	;# 
  2832   00015A                     C1TXQUAU        equ	346	;# 
  2833   00015B                     C1TXQUAT        equ	347	;# 
  2834   00015C                     C1FIFOCON1      equ	348	;# 
  2835   00015C                     C1FIFOCON1L     equ	348	;# 
  2836   00015D                     C1FIFOCON1H     equ	349	;# 
  2837   00015E                     C1FIFOCON1U     equ	350	;# 
  2838   00015F                     C1FIFOCON1T     equ	351	;# 
  2839   000160                     C1FIFOSTA1      equ	352	;# 
  2840   000160                     C1FIFOSTA1L     equ	352	;# 
  2841   000161                     C1FIFOSTA1H     equ	353	;# 
  2842   000162                     C1FIFOSTA1U     equ	354	;# 
  2843   000163                     C1FIFOSTA1T     equ	355	;# 
  2844   000164                     C1FIFOUA1       equ	356	;# 
  2845   000164                     C1FIFOUA1L      equ	356	;# 
  2846   000165                     C1FIFOUA1H      equ	357	;# 
  2847   000166                     C1FIFOUA1U      equ	358	;# 
  2848   000167                     C1FIFOUA1T      equ	359	;# 
  2849   000168                     C1FIFOCON2      equ	360	;# 
  2850   000168                     C1FIFOCON2L     equ	360	;# 
  2851   000169                     C1FIFOCON2H     equ	361	;# 
  2852   00016A                     C1FIFOCON2U     equ	362	;# 
  2853   00016B                     C1FIFOCON2T     equ	363	;# 
  2854   00016C                     C1FIFOSTA2      equ	364	;# 
  2855   00016C                     C1FIFOSTA2L     equ	364	;# 
  2856   00016D                     C1FIFOSTA2H     equ	365	;# 
  2857   00016E                     C1FIFOSTA2U     equ	366	;# 
  2858   00016F                     C1FIFOSTA2T     equ	367	;# 
  2859   000170                     C1FIFOUA2       equ	368	;# 
  2860   000170                     C1FIFOUA2L      equ	368	;# 
  2861   000171                     C1FIFOUA2H      equ	369	;# 
  2862   000172                     C1FIFOUA2U      equ	370	;# 
  2863   000173                     C1FIFOUA2T      equ	371	;# 
  2864   000174                     C1FIFOCON3      equ	372	;# 
  2865   000174                     C1FIFOCON3L     equ	372	;# 
  2866   000175                     C1FIFOCON3H     equ	373	;# 
  2867   000176                     C1FIFOCON3U     equ	374	;# 
  2868   000177                     C1FIFOCON3T     equ	375	;# 
  2869   000178                     C1FIFOSTA3      equ	376	;# 
  2870   000178                     C1FIFOSTA3L     equ	376	;# 
  2871   000179                     C1FIFOSTA3H     equ	377	;# 
  2872   00017A                     C1FIFOSTA3U     equ	378	;# 
  2873   00017B                     C1FIFOSTA3T     equ	379	;# 
  2874   00017C                     C1FIFOUA3       equ	380	;# 
  2875   00017C                     C1FIFOUA3L      equ	380	;# 
  2876   00017D                     C1FIFOUA3H      equ	381	;# 
  2877   00017E                     C1FIFOUA3U      equ	382	;# 
  2878   00017F                     C1FIFOUA3T      equ	383	;# 
  2879   000180                     C1FLTCON0L      equ	384	;# 
  2880   000181                     C1FLTCON0H      equ	385	;# 
  2881   000182                     C1FLTCON0U      equ	386	;# 
  2882   000183                     C1FLTCON0T      equ	387	;# 
  2883   000184                     C1FLTCON1L      equ	388	;# 
  2884   000185                     C1FLTCON1H      equ	389	;# 
  2885   000186                     C1FLTCON1U      equ	390	;# 
  2886   000187                     C1FLTCON1T      equ	391	;# 
  2887   000188                     C1FLTCON2L      equ	392	;# 
  2888   000189                     C1FLTCON2H      equ	393	;# 
  2889   00018A                     C1FLTCON2U      equ	394	;# 
  2890   00018B                     C1FLTCON2T      equ	395	;# 
  2891   00018C                     C1FLTOBJ0       equ	396	;# 
  2892   00018C                     C1FLTOBJ0L      equ	396	;# 
  2893   00018D                     C1FLTOBJ0H      equ	397	;# 
  2894   00018E                     C1FLTOBJ0U      equ	398	;# 
  2895   00018F                     C1FLTOBJ0T      equ	399	;# 
  2896   000190                     C1MASK0         equ	400	;# 
  2897   000190                     C1MASK0L        equ	400	;# 
  2898   000191                     C1MASK0H        equ	401	;# 
  2899   000192                     C1MASK0U        equ	402	;# 
  2900   000193                     C1MASK0T        equ	403	;# 
  2901   000194                     C1FLTOBJ1       equ	404	;# 
  2902   000194                     C1FLTOBJ1L      equ	404	;# 
  2903   000195                     C1FLTOBJ1H      equ	405	;# 
  2904   000196                     C1FLTOBJ1U      equ	406	;# 
  2905   000197                     C1FLTOBJ1T      equ	407	;# 
  2906   000198                     C1MASK1         equ	408	;# 
  2907   000198                     C1MASK1L        equ	408	;# 
  2908   000199                     C1MASK1H        equ	409	;# 
  2909   00019A                     C1MASK1U        equ	410	;# 
  2910   00019B                     C1MASK1T        equ	411	;# 
  2911   00019C                     C1FLTOBJ2       equ	412	;# 
  2912   00019C                     C1FLTOBJ2L      equ	412	;# 
  2913   00019D                     C1FLTOBJ2H      equ	413	;# 
  2914   00019E                     C1FLTOBJ2U      equ	414	;# 
  2915   00019F                     C1FLTOBJ2T      equ	415	;# 
  2916   0001A0                     C1MASK2         equ	416	;# 
  2917   0001A0                     C1MASK2L        equ	416	;# 
  2918   0001A1                     C1MASK2H        equ	417	;# 
  2919   0001A2                     C1MASK2U        equ	418	;# 
  2920   0001A3                     C1MASK2T        equ	419	;# 
  2921   0001A4                     C1FLTOBJ3       equ	420	;# 
  2922   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2923   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2924   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2925   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2926   0001A8                     C1MASK3         equ	424	;# 
  2927   0001A8                     C1MASK3L        equ	424	;# 
  2928   0001A9                     C1MASK3H        equ	425	;# 
  2929   0001AA                     C1MASK3U        equ	426	;# 
  2930   0001AB                     C1MASK3T        equ	427	;# 
  2931   0001AC                     C1FLTOBJ4       equ	428	;# 
  2932   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2933   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2934   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2935   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2936   0001B0                     C1MASK4         equ	432	;# 
  2937   0001B0                     C1MASK4L        equ	432	;# 
  2938   0001B1                     C1MASK4H        equ	433	;# 
  2939   0001B2                     C1MASK4U        equ	434	;# 
  2940   0001B3                     C1MASK4T        equ	435	;# 
  2941   0001B4                     C1FLTOBJ5       equ	436	;# 
  2942   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2943   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2944   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2945   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2946   0001B8                     C1MASK5         equ	440	;# 
  2947   0001B8                     C1MASK5L        equ	440	;# 
  2948   0001B9                     C1MASK5H        equ	441	;# 
  2949   0001BA                     C1MASK5U        equ	442	;# 
  2950   0001BB                     C1MASK5T        equ	443	;# 
  2951   0001BC                     C1FLTOBJ6       equ	444	;# 
  2952   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2953   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2954   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2955   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2956   0001C0                     C1MASK6         equ	448	;# 
  2957   0001C0                     C1MASK6L        equ	448	;# 
  2958   0001C1                     C1MASK6H        equ	449	;# 
  2959   0001C2                     C1MASK6U        equ	450	;# 
  2960   0001C3                     C1MASK6T        equ	451	;# 
  2961   0001C4                     C1FLTOBJ7       equ	452	;# 
  2962   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2963   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2964   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2965   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2966   0001C8                     C1MASK7         equ	456	;# 
  2967   0001C8                     C1MASK7L        equ	456	;# 
  2968   0001C9                     C1MASK7H        equ	457	;# 
  2969   0001CA                     C1MASK7U        equ	458	;# 
  2970   0001CB                     C1MASK7T        equ	459	;# 
  2971   0001CC                     C1FLTOBJ8       equ	460	;# 
  2972   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2973   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2974   0001CE                     C1FLTOBJ8U      equ	462	;# 
  2975   0001CF                     C1FLTOBJ8T      equ	463	;# 
  2976   0001D0                     C1MASK8         equ	464	;# 
  2977   0001D0                     C1MASK8L        equ	464	;# 
  2978   0001D1                     C1MASK8H        equ	465	;# 
  2979   0001D2                     C1MASK8U        equ	466	;# 
  2980   0001D3                     C1MASK8T        equ	467	;# 
  2981   0001D4                     C1FLTOBJ9       equ	468	;# 
  2982   0001D4                     C1FLTOBJ9L      equ	468	;# 
  2983   0001D5                     C1FLTOBJ9H      equ	469	;# 
  2984   0001D6                     C1FLTOBJ9U      equ	470	;# 
  2985   0001D7                     C1FLTOBJ9T      equ	471	;# 
  2986   0001D8                     C1MASK9         equ	472	;# 
  2987   0001D8                     C1MASK9L        equ	472	;# 
  2988   0001D9                     C1MASK9H        equ	473	;# 
  2989   0001DA                     C1MASK9U        equ	474	;# 
  2990   0001DB                     C1MASK9T        equ	475	;# 
  2991   0001DC                     C1FLTOBJ10      equ	476	;# 
  2992   0001DC                     C1FLTOBJ10L     equ	476	;# 
  2993   0001DD                     C1FLTOBJ10H     equ	477	;# 
  2994   0001DE                     C1FLTOBJ10U     equ	478	;# 
  2995   0001DF                     C1FLTOBJ10T     equ	479	;# 
  2996   0001E0                     C1MASK10        equ	480	;# 
  2997   0001E0                     C1MASK10L       equ	480	;# 
  2998   0001E1                     C1MASK10H       equ	481	;# 
  2999   0001E2                     C1MASK10U       equ	482	;# 
  3000   0001E3                     C1MASK10T       equ	483	;# 
  3001   0001E4                     C1FLTOBJ11      equ	484	;# 
  3002   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3003   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3004   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3005   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3006   0001E8                     C1MASK11        equ	488	;# 
  3007   0001E8                     C1MASK11L       equ	488	;# 
  3008   0001E9                     C1MASK11H       equ	489	;# 
  3009   0001EA                     C1MASK11U       equ	490	;# 
  3010   0001EB                     C1MASK11T       equ	491	;# 
  3011   000200                     PPSLOCK         equ	512	;# 
  3012   000201                     RA0PPS          equ	513	;# 
  3013   000202                     RA1PPS          equ	514	;# 
  3014   000203                     RA2PPS          equ	515	;# 
  3015   000204                     RA3PPS          equ	516	;# 
  3016   000205                     RA4PPS          equ	517	;# 
  3017   000206                     RA5PPS          equ	518	;# 
  3018   000207                     RA6PPS          equ	519	;# 
  3019   000208                     RA7PPS          equ	520	;# 
  3020   000209                     RB0PPS          equ	521	;# 
  3021   00020A                     RB1PPS          equ	522	;# 
  3022   00020B                     RB2PPS          equ	523	;# 
  3023   00020C                     RB3PPS          equ	524	;# 
  3024   00020D                     RB4PPS          equ	525	;# 
  3025   00020E                     RB5PPS          equ	526	;# 
  3026   00020F                     RB6PPS          equ	527	;# 
  3027   000210                     RB7PPS          equ	528	;# 
  3028   000211                     RC0PPS          equ	529	;# 
  3029   000212                     RC1PPS          equ	530	;# 
  3030   000213                     RC2PPS          equ	531	;# 
  3031   000214                     RC3PPS          equ	532	;# 
  3032   000215                     RC4PPS          equ	533	;# 
  3033   000216                     RC5PPS          equ	534	;# 
  3034   000217                     RC6PPS          equ	535	;# 
  3035   000218                     RC7PPS          equ	536	;# 
  3036   00023D                     CANRXPPS        equ	573	;# 
  3037   00023E                     INT0PPS         equ	574	;# 
  3038   00023F                     INT1PPS         equ	575	;# 
  3039   000240                     INT2PPS         equ	576	;# 
  3040   000241                     T0CKIPPS        equ	577	;# 
  3041   000242                     T1CKIPPS        equ	578	;# 
  3042   000243                     T1GPPS          equ	579	;# 
  3043   000244                     T3CKIPPS        equ	580	;# 
  3044   000245                     T3GPPS          equ	581	;# 
  3045   000246                     T5CKIPPS        equ	582	;# 
  3046   000247                     T5GPPS          equ	583	;# 
  3047   000248                     T2INPPS         equ	584	;# 
  3048   000249                     T4INPPS         equ	585	;# 
  3049   00024A                     T6INPPS         equ	586	;# 
  3050   00024B                     TUIN0PPS        equ	587	;# 
  3051   00024C                     TUIN1PPS        equ	588	;# 
  3052   00024F                     CCP1PPS         equ	591	;# 
  3053   000250                     CCP2PPS         equ	592	;# 
  3054   000251                     CCP3PPS         equ	593	;# 
  3055   000253                     PWM1ERSPPS      equ	595	;# 
  3056   000254                     PWM2ERSPPS      equ	596	;# 
  3057   000255                     PWM3ERSPPS      equ	597	;# 
  3058   000256                     PWM4ERSPPS      equ	598	;# 
  3059   000257                     PWMIN0PPS       equ	599	;# 
  3060   000258                     PWMIN1PPS       equ	600	;# 
  3061   000259                     SMT1WINPPS      equ	601	;# 
  3062   00025A                     SMT1SIGPPS      equ	602	;# 
  3063   00025B                     CWG1PPS         equ	603	;# 
  3064   00025B                     CWG1INPPS       equ	603	;# 
  3065   00025C                     CWG2PPS         equ	604	;# 
  3066   00025C                     CWG2INPPS       equ	604	;# 
  3067   00025D                     CWG3PPS         equ	605	;# 
  3068   00025D                     CWG3INPPS       equ	605	;# 
  3069   00025E                     MD1CARLPPS      equ	606	;# 
  3070   00025E                     MDCARLPPS       equ	606	;# 
  3071   00025F                     MD1CARHPPS      equ	607	;# 
  3072   00025F                     MDCARHPPS       equ	607	;# 
  3073   000260                     MD1SRCPPS       equ	608	;# 
  3074   000260                     MDSRCPPS        equ	608	;# 
  3075   000261                     CLCIN0PPS       equ	609	;# 
  3076   000262                     CLCIN1PPS       equ	610	;# 
  3077   000263                     CLCIN2PPS       equ	611	;# 
  3078   000264                     CLCIN3PPS       equ	612	;# 
  3079   000265                     CLCIN4PPS       equ	613	;# 
  3080   000266                     CLCIN5PPS       equ	614	;# 
  3081   000267                     CLCIN6PPS       equ	615	;# 
  3082   000268                     CLCIN7PPS       equ	616	;# 
  3083   000269                     ADACTPPS        equ	617	;# 
  3084   00026A                     SPI1SCKPPS      equ	618	;# 
  3085   00026B                     SPI1SDIPPS      equ	619	;# 
  3086   00026C                     SPI1SSPPS       equ	620	;# 
  3087   00026D                     SPI2SCKPPS      equ	621	;# 
  3088   00026E                     SPI2SDIPPS      equ	622	;# 
  3089   00026F                     SPI2SSPPS       equ	623	;# 
  3090   000270                     I2C1SDAPPS      equ	624	;# 
  3091   000271                     I2C1SCLPPS      equ	625	;# 
  3092   000272                     U1RXPPS         equ	626	;# 
  3093   000273                     U1CTSPPS        equ	627	;# 
  3094   000274                     U2RXPPS         equ	628	;# 
  3095   000275                     U2CTSPPS        equ	629	;# 
  3096   000276                     U3RXPPS         equ	630	;# 
  3097   000277                     U3CTSPPS        equ	631	;# 
  3098   000278                     U4RXPPS         equ	632	;# 
  3099   000279                     U4CTSPPS        equ	633	;# 
  3100   00027A                     U5RXPPS         equ	634	;# 
  3101   00027B                     U5CTSPPS        equ	635	;# 
  3102   000286                     RC4I2C          equ	646	;# 
  3103   000287                     RC3I2C          equ	647	;# 
  3104   000288                     RB2I2C          equ	648	;# 
  3105   000289                     RB1I2C          equ	649	;# 
  3106   00028A                     I2C1RXB         equ	650	;# 
  3107   00028B                     I2C1TXB         equ	651	;# 
  3108   00028C                     I2C1CNTL        equ	652	;# 
  3109   00028D                     I2C1CNTH        equ	653	;# 
  3110   00028E                     I2C1ADB0        equ	654	;# 
  3111   00028F                     I2C1ADB1        equ	655	;# 
  3112   000290                     I2C1ADR0        equ	656	;# 
  3113   000291                     I2C1ADR1        equ	657	;# 
  3114   000292                     I2C1ADR2        equ	658	;# 
  3115   000293                     I2C1ADR3        equ	659	;# 
  3116   000294                     I2C1CON0        equ	660	;# 
  3117   000295                     I2C1CON1        equ	661	;# 
  3118   000296                     I2C1CON2        equ	662	;# 
  3119   000297                     I2C1ERR         equ	663	;# 
  3120   000298                     I2C1STAT0       equ	664	;# 
  3121   000299                     I2C1STAT1       equ	665	;# 
  3122   00029A                     I2C1PIR         equ	666	;# 
  3123   00029B                     I2C1PIE         equ	667	;# 
  3124   00029C                     I2C1BTO         equ	668	;# 
  3125   00029D                     I2C1BAUD        equ	669	;# 
  3126   00029E                     I2C1CLK         equ	670	;# 
  3127   00029F                     I2C1BTOC        equ	671	;# 
  3128   0002A1                     U1RXB           equ	673	;# 
  3129   0002A1                     U1RXBL          equ	673	;# 
  3130   0002A2                     U1RXCHK         equ	674	;# 
  3131   0002A3                     U1TXB           equ	675	;# 
  3132   0002A3                     U1TXBL          equ	675	;# 
  3133   0002A4                     U1TXCHK         equ	676	;# 
  3134   0002A5                     U1P1            equ	677	;# 
  3135   0002A5                     U1P1L           equ	677	;# 
  3136   0002A6                     U1P1H           equ	678	;# 
  3137   0002A7                     U1P2            equ	679	;# 
  3138   0002A7                     U1P2L           equ	679	;# 
  3139   0002A8                     U1P2H           equ	680	;# 
  3140   0002A9                     U1P3            equ	681	;# 
  3141   0002A9                     U1P3L           equ	681	;# 
  3142   0002AA                     U1P3H           equ	682	;# 
  3143   0002AB                     U1CON0          equ	683	;# 
  3144   0002AC                     U1CON1          equ	684	;# 
  3145   0002AD                     U1CON2          equ	685	;# 
  3146   0002AE                     U1BRG           equ	686	;# 
  3147   0002AE                     U1BRGL          equ	686	;# 
  3148   0002AF                     U1BRGH          equ	687	;# 
  3149   0002B0                     U1FIFO          equ	688	;# 
  3150   0002B1                     U1UIR           equ	689	;# 
  3151   0002B2                     U1ERRIR         equ	690	;# 
  3152   0002B3                     U1ERRIE         equ	691	;# 
  3153   0002B4                     U2RXB           equ	692	;# 
  3154   0002B4                     U2RXBL          equ	692	;# 
  3155   0002B5                     U2RXCHK         equ	693	;# 
  3156   0002B6                     U2TXB           equ	694	;# 
  3157   0002B6                     U2TXBL          equ	694	;# 
  3158   0002B7                     U2TXCHK         equ	695	;# 
  3159   0002B8                     U2P1            equ	696	;# 
  3160   0002B8                     U2P1L           equ	696	;# 
  3161   0002B9                     U2P1H           equ	697	;# 
  3162   0002BA                     U2P2            equ	698	;# 
  3163   0002BA                     U2P2L           equ	698	;# 
  3164   0002BB                     U2P2H           equ	699	;# 
  3165   0002BC                     U2P3            equ	700	;# 
  3166   0002BC                     U2P3L           equ	700	;# 
  3167   0002BD                     U2P3H           equ	701	;# 
  3168   0002BE                     U2CON0          equ	702	;# 
  3169   0002BF                     U2CON1          equ	703	;# 
  3170   0002C0                     U2CON2          equ	704	;# 
  3171   0002C1                     U2BRG           equ	705	;# 
  3172   0002C1                     U2BRGL          equ	705	;# 
  3173   0002C2                     U2BRGH          equ	706	;# 
  3174   0002C3                     U2FIFO          equ	707	;# 
  3175   0002C4                     U2UIR           equ	708	;# 
  3176   0002C5                     U2ERRIR         equ	709	;# 
  3177   0002C6                     U2ERRIE         equ	710	;# 
  3178   0002C7                     U3RXB           equ	711	;# 
  3179   0002C7                     U3RXBL          equ	711	;# 
  3180   0002C9                     U3TXB           equ	713	;# 
  3181   0002C9                     U3TXBL          equ	713	;# 
  3182   0002CB                     U3P1            equ	715	;# 
  3183   0002CB                     U3P1L           equ	715	;# 
  3184   0002CD                     U3P2            equ	717	;# 
  3185   0002CD                     U3P2L           equ	717	;# 
  3186   0002CF                     U3P3            equ	719	;# 
  3187   0002CF                     U3P3L           equ	719	;# 
  3188   0002D1                     U3CON0          equ	721	;# 
  3189   0002D2                     U3CON1          equ	722	;# 
  3190   0002D3                     U3CON2          equ	723	;# 
  3191   0002D4                     U3BRG           equ	724	;# 
  3192   0002D4                     U3BRGL          equ	724	;# 
  3193   0002D5                     U3BRGH          equ	725	;# 
  3194   0002D6                     U3FIFO          equ	726	;# 
  3195   0002D7                     U3UIR           equ	727	;# 
  3196   0002D8                     U3ERRIR         equ	728	;# 
  3197   0002D9                     U3ERRIE         equ	729	;# 
  3198   0002DA                     U4RXB           equ	730	;# 
  3199   0002DA                     U4RXBL          equ	730	;# 
  3200   0002DC                     U4TXB           equ	732	;# 
  3201   0002DC                     U4TXBL          equ	732	;# 
  3202   0002DE                     U4P1            equ	734	;# 
  3203   0002DE                     U4P1L           equ	734	;# 
  3204   0002E0                     U4P2            equ	736	;# 
  3205   0002E0                     U4P2L           equ	736	;# 
  3206   0002E2                     U4P3            equ	738	;# 
  3207   0002E2                     U4P3L           equ	738	;# 
  3208   0002E4                     U4CON0          equ	740	;# 
  3209   0002E5                     U4CON1          equ	741	;# 
  3210   0002E6                     U4CON2          equ	742	;# 
  3211   0002E7                     U4BRG           equ	743	;# 
  3212   0002E7                     U4BRGL          equ	743	;# 
  3213   0002E8                     U4BRGH          equ	744	;# 
  3214   0002E9                     U4FIFO          equ	745	;# 
  3215   0002EA                     U4UIR           equ	746	;# 
  3216   0002EB                     U4ERRIR         equ	747	;# 
  3217   0002EC                     U4ERRIE         equ	748	;# 
  3218   0002ED                     U5RXB           equ	749	;# 
  3219   0002ED                     U5RXBL          equ	749	;# 
  3220   0002EF                     U5TXB           equ	751	;# 
  3221   0002EF                     U5TXBL          equ	751	;# 
  3222   0002F1                     U5P1            equ	753	;# 
  3223   0002F1                     U5P1L           equ	753	;# 
  3224   0002F3                     U5P2            equ	755	;# 
  3225   0002F3                     U5P2L           equ	755	;# 
  3226   0002F5                     U5P3            equ	757	;# 
  3227   0002F5                     U5P3L           equ	757	;# 
  3228   0002F7                     U5CON0          equ	759	;# 
  3229   0002F8                     U5CON1          equ	760	;# 
  3230   0002F9                     U5CON2          equ	761	;# 
  3231   0002FA                     U5BRG           equ	762	;# 
  3232   0002FA                     U5BRGL          equ	762	;# 
  3233   0002FB                     U5BRGH          equ	763	;# 
  3234   0002FC                     U5FIFO          equ	764	;# 
  3235   0002FD                     U5UIR           equ	765	;# 
  3236   0002FE                     U5ERRIR         equ	766	;# 
  3237   0002FF                     U5ERRIE         equ	767	;# 
  3238   000300                     SMT1TMR         equ	768	;# 
  3239   000300                     SMT1TMRL        equ	768	;# 
  3240   000301                     SMT1TMRH        equ	769	;# 
  3241   000302                     SMT1TMRU        equ	770	;# 
  3242   000303                     SMT1CPR         equ	771	;# 
  3243   000303                     SMT1CPRL        equ	771	;# 
  3244   000304                     SMT1CPRH        equ	772	;# 
  3245   000305                     SMT1CPRU        equ	773	;# 
  3246   000306                     SMT1CPW         equ	774	;# 
  3247   000306                     SMT1CPWL        equ	774	;# 
  3248   000307                     SMT1CPWH        equ	775	;# 
  3249   000308                     SMT1CPWU        equ	776	;# 
  3250   000309                     SMT1PR          equ	777	;# 
  3251   000309                     SMT1PRL         equ	777	;# 
  3252   00030A                     SMT1PRH         equ	778	;# 
  3253   00030B                     SMT1PRU         equ	779	;# 
  3254   00030C                     SMT1CON0        equ	780	;# 
  3255   00030D                     SMT1CON1        equ	781	;# 
  3256   00030E                     SMT1STAT        equ	782	;# 
  3257   00030F                     SMT1CLK         equ	783	;# 
  3258   000310                     SMT1SIG         equ	784	;# 
  3259   000311                     SMT1WIN         equ	785	;# 
  3260   000318                     TMR0L           equ	792	;# 
  3261   000318                     TMR0            equ	792	;# 
  3262   000319                     TMR0H           equ	793	;# 
  3263   000319                     PR0             equ	793	;# 
  3264   00031A                     T0CON0          equ	794	;# 
  3265   00031B                     T0CON1          equ	795	;# 
  3266   00031C                     TMR1            equ	796	;# 
  3267   00031C                     TMR1L           equ	796	;# 
  3268   00031D                     TMR1H           equ	797	;# 
  3269   00031E                     T1CON           equ	798	;# 
  3270   00031E                     TMR1CON         equ	798	;# 
  3271   00031F                     T1GCON          equ	799	;# 
  3272   00031F                     TMR1GCON        equ	799	;# 
  3273   000320                     T1GATE          equ	800	;# 
  3274   000320                     TMR1GATE        equ	800	;# 
  3275   000321                     T1CLK           equ	801	;# 
  3276   000321                     TMR1CLK         equ	801	;# 
  3277   000321                     PR1             equ	801	;# 
  3278   000322                     T2TMR           equ	802	;# 
  3279   000322                     TMR2            equ	802	;# 
  3280   000323                     T2PR            equ	803	;# 
  3281   000323                     PR2             equ	803	;# 
  3282   000324                     T2CON           equ	804	;# 
  3283   000325                     T2HLT           equ	805	;# 
  3284   000326                     T2CLKCON        equ	806	;# 
  3285   000326                     T2CLK           equ	806	;# 
  3286   000327                     T2RST           equ	807	;# 
  3287   000328                     TMR3            equ	808	;# 
  3288   000328                     TMR3L           equ	808	;# 
  3289   000329                     TMR3H           equ	809	;# 
  3290   00032A                     T3CON           equ	810	;# 
  3291   00032A                     TMR3CON         equ	810	;# 
  3292   00032B                     T3GCON          equ	811	;# 
  3293   00032B                     TMR3GCON        equ	811	;# 
  3294   00032C                     T3GATE          equ	812	;# 
  3295   00032C                     TMR3GATE        equ	812	;# 
  3296   00032D                     T3CLK           equ	813	;# 
  3297   00032D                     TMR3CLK         equ	813	;# 
  3298   00032D                     PR3             equ	813	;# 
  3299   00032E                     T4TMR           equ	814	;# 
  3300   00032E                     TMR4            equ	814	;# 
  3301   00032F                     T4PR            equ	815	;# 
  3302   00032F                     PR4             equ	815	;# 
  3303   000330                     T4CON           equ	816	;# 
  3304   000331                     T4HLT           equ	817	;# 
  3305   000332                     T4CLKCON        equ	818	;# 
  3306   000332                     T4CLK           equ	818	;# 
  3307   000333                     T4RST           equ	819	;# 
  3308   000334                     TMR5            equ	820	;# 
  3309   000334                     TMR5L           equ	820	;# 
  3310   000335                     TMR5H           equ	821	;# 
  3311   000336                     T5CON           equ	822	;# 
  3312   000336                     TMR5CON         equ	822	;# 
  3313   000337                     T5GCON          equ	823	;# 
  3314   000337                     TMR5GCON        equ	823	;# 
  3315   000338                     T5GATE          equ	824	;# 
  3316   000338                     TMR5GATE        equ	824	;# 
  3317   000339                     T5CLK           equ	825	;# 
  3318   000339                     TMR5CLK         equ	825	;# 
  3319   000339                     PR5             equ	825	;# 
  3320   00033A                     T6TMR           equ	826	;# 
  3321   00033A                     TMR6            equ	826	;# 
  3322   00033B                     T6PR            equ	827	;# 
  3323   00033B                     PR6             equ	827	;# 
  3324   00033C                     T6CON           equ	828	;# 
  3325   00033D                     T6HLT           equ	829	;# 
  3326   00033E                     T6CLKCON        equ	830	;# 
  3327   00033E                     T6CLK           equ	830	;# 
  3328   00033F                     T6RST           equ	831	;# 
  3329   000340                     CCPR1           equ	832	;# 
  3330   000340                     CCPR1L          equ	832	;# 
  3331   000341                     CCPR1H          equ	833	;# 
  3332   000342                     CCP1CON         equ	834	;# 
  3333   000343                     CCP1CAP         equ	835	;# 
  3334   000344                     CCPR2           equ	836	;# 
  3335   000344                     CCPR2L          equ	836	;# 
  3336   000345                     CCPR2H          equ	837	;# 
  3337   000346                     CCP2CON         equ	838	;# 
  3338   000347                     CCP2CAP         equ	839	;# 
  3339   000348                     CCPR3           equ	840	;# 
  3340   000348                     CCPR3L          equ	840	;# 
  3341   000349                     CCPR3H          equ	841	;# 
  3342   00034A                     CCP3CON         equ	842	;# 
  3343   00034B                     CCP3CAP         equ	843	;# 
  3344   00034C                     CCPTMRS0        equ	844	;# 
  3345   00034F                     CRCDATA         equ	847	;# 
  3346   00034F                     CRCDATAL        equ	847	;# 
  3347   000350                     CRCDATAH        equ	848	;# 
  3348   000351                     CRCDATAU        equ	849	;# 
  3349   000352                     CRCDATAT        equ	850	;# 
  3350   000353                     CRCOUT          equ	851	;# 
  3351   000353                     CRCSHFT         equ	851	;# 
  3352   000353                     CRCXOR          equ	851	;# 
  3353   000353                     CRCOUTL         equ	851	;# 
  3354   000353                     CRCSHFTL        equ	851	;# 
  3355   000353                     CRCSHIFTL       equ	851	;# 
  3356   000353                     CRCXORL         equ	851	;# 
  3357   000354                     CRCOUTH         equ	852	;# 
  3358   000354                     CRCSHFTH        equ	852	;# 
  3359   000354                     CRCSHIFTH       equ	852	;# 
  3360   000354                     CRCXORH         equ	852	;# 
  3361   000355                     CRCOUTU         equ	853	;# 
  3362   000355                     CRCSHFTU        equ	853	;# 
  3363   000355                     CRCSHIFTU       equ	853	;# 
  3364   000355                     CRCXORU         equ	853	;# 
  3365   000356                     CRCOUTT         equ	854	;# 
  3366   000356                     CRCSHFTT        equ	854	;# 
  3367   000356                     CRCSHIFTT       equ	854	;# 
  3368   000356                     CRCXORT         equ	854	;# 
  3369   000357                     CRCCON0         equ	855	;# 
  3370   000358                     CRCCON1         equ	856	;# 
  3371   000359                     CRCCON2         equ	857	;# 
  3372   00035A                     SCANLADR        equ	858	;# 
  3373   00035A                     SCANLADRL       equ	858	;# 
  3374   00035B                     SCANLADRH       equ	859	;# 
  3375   00035C                     SCANLADRU       equ	860	;# 
  3376   00035D                     SCANHADR        equ	861	;# 
  3377   00035D                     SCANHADRL       equ	861	;# 
  3378   00035E                     SCANHADRH       equ	862	;# 
  3379   00035F                     SCANHADRU       equ	863	;# 
  3380   000360                     SCANCON0        equ	864	;# 
  3381   000361                     SCANTRIG        equ	865	;# 
  3382   000362                     IPR0            equ	866	;# 
  3383   000363                     IPR1            equ	867	;# 
  3384   000364                     IPR2            equ	868	;# 
  3385   000365                     IPR3            equ	869	;# 
  3386   000366                     IPR4            equ	870	;# 
  3387   000367                     IPR5            equ	871	;# 
  3388   000368                     IPR6            equ	872	;# 
  3389   000369                     IPR7            equ	873	;# 
  3390   00036A                     IPR8            equ	874	;# 
  3391   00036B                     IPR9            equ	875	;# 
  3392   00036C                     IPR10           equ	876	;# 
  3393   00036D                     IPR11           equ	877	;# 
  3394   00036E                     IPR12           equ	878	;# 
  3395   00036F                     IPR13           equ	879	;# 
  3396   000370                     IPR14           equ	880	;# 
  3397   000371                     IPR15           equ	881	;# 
  3398   000373                     STATUS_CSHAD    equ	883	;# 
  3399   000374                     WREG_CSHAD      equ	884	;# 
  3400   000375                     BSR_CSHAD       equ	885	;# 
  3401   000376                     SHADCON         equ	886	;# 
  3402   000377                     STATUS_SHAD     equ	887	;# 
  3403   000378                     WREG_SHAD       equ	888	;# 
  3404   000379                     BSR_SHAD        equ	889	;# 
  3405   00037A                     PCLATH_SHAD     equ	890	;# 
  3406   00037B                     PCLATU_SHAD     equ	891	;# 
  3407   00037C                     FSR0SH          equ	892	;# 
  3408   00037C                     FSR0L_SHAD      equ	892	;# 
  3409   00037D                     FSR0H_SHAD      equ	893	;# 
  3410   00037E                     FSR1SH          equ	894	;# 
  3411   00037E                     FSR1L_SHAD      equ	894	;# 
  3412   00037F                     FSR1H_SHAD      equ	895	;# 
  3413   000380                     FSR2SH          equ	896	;# 
  3414   000380                     FSR2L_SHAD      equ	896	;# 
  3415   000381                     FSR2H_SHAD      equ	897	;# 
  3416   000382                     PRODSH          equ	898	;# 
  3417   000382                     PRODL_SHAD      equ	898	;# 
  3418   000383                     PRODH_SHAD      equ	899	;# 
  3419   000387                     TU16ACON0       equ	903	;# 
  3420   000388                     TU16ACON1       equ	904	;# 
  3421   000389                     TU16AHLT        equ	905	;# 
  3422   00038A                     TU16APS         equ	906	;# 
  3423   00038B                     TU16ATMR        equ	907	;# 
  3424   00038B                     TU16ACR         equ	907	;# 
  3425   00038B                     TU16ATMRL       equ	907	;# 
  3426   00038B                     TU16ACRL        equ	907	;# 
  3427   00038C                     TU16ATMRH       equ	908	;# 
  3428   00038C                     TU16ACRH        equ	908	;# 
  3429   00038D                     TU16APR         equ	909	;# 
  3430   00038D                     TU16APRL        equ	909	;# 
  3431   00038E                     TU16APRH        equ	910	;# 
  3432   00038F                     TU16ACLK        equ	911	;# 
  3433   000390                     TU16AERS        equ	912	;# 
  3434   000393                     TU16BCON0       equ	915	;# 
  3435   000394                     TU16BCON1       equ	916	;# 
  3436   000395                     TU16BHLT        equ	917	;# 
  3437   000396                     TU16BPS         equ	918	;# 
  3438   000397                     TU16BTMR        equ	919	;# 
  3439   000397                     TU16BCR         equ	919	;# 
  3440   000397                     TU16BTMRL       equ	919	;# 
  3441   000397                     TU16BCRL        equ	919	;# 
  3442   000398                     TU16BTMRH       equ	920	;# 
  3443   000398                     TU16BCRH        equ	920	;# 
  3444   000399                     TU16BPR         equ	921	;# 
  3445   000399                     TU16BPRL        equ	921	;# 
  3446   00039A                     TU16BPRH        equ	922	;# 
  3447   00039B                     TU16BCLK        equ	923	;# 
  3448   00039C                     TU16BERS        equ	924	;# 
  3449   0003BB                     TUCHAIN         equ	955	;# 
  3450   0003BC                     CWG1CLK         equ	956	;# 
  3451   0003BC                     CWG1CLKCON      equ	956	;# 
  3452   0003BD                     CWG1ISM         equ	957	;# 
  3453   0003BE                     CWG1DBR         equ	958	;# 
  3454   0003BF                     CWG1DBF         equ	959	;# 
  3455   0003C0                     CWG1CON0        equ	960	;# 
  3456   0003C1                     CWG1CON1        equ	961	;# 
  3457   0003C2                     CWG1AS0         equ	962	;# 
  3458   0003C3                     CWG1AS1         equ	963	;# 
  3459   0003C4                     CWG1STR         equ	964	;# 
  3460   0003C5                     CWG2CLK         equ	965	;# 
  3461   0003C5                     CWG2CLKCON      equ	965	;# 
  3462   0003C6                     CWG2ISM         equ	966	;# 
  3463   0003C7                     CWG2DBR         equ	967	;# 
  3464   0003C8                     CWG2DBF         equ	968	;# 
  3465   0003C9                     CWG2CON0        equ	969	;# 
  3466   0003CA                     CWG2CON1        equ	970	;# 
  3467   0003CB                     CWG2AS0         equ	971	;# 
  3468   0003CC                     CWG2AS1         equ	972	;# 
  3469   0003CD                     CWG2STR         equ	973	;# 
  3470   0003CE                     CWG3CLK         equ	974	;# 
  3471   0003CE                     CWG3CLKCON      equ	974	;# 
  3472   0003CF                     CWG3ISM         equ	975	;# 
  3473   0003D0                     CWG3DBR         equ	976	;# 
  3474   0003D1                     CWG3DBF         equ	977	;# 
  3475   0003D2                     CWG3CON0        equ	978	;# 
  3476   0003D3                     CWG3CON1        equ	979	;# 
  3477   0003D4                     CWG3AS0         equ	980	;# 
  3478   0003D5                     CWG3AS1         equ	981	;# 
  3479   0003D6                     CWG3STR         equ	982	;# 
  3480   0003D7                     FVRCON          equ	983	;# 
  3481   0003D8                     ADCPCON         equ	984	;# 
  3482   0003D8                     ADCP            equ	984	;# 
  3483   0003D9                     ADLTH           equ	985	;# 
  3484   0003D9                     ADLTHL          equ	985	;# 
  3485   0003DA                     ADLTHH          equ	986	;# 
  3486   0003DB                     ADUTH           equ	987	;# 
  3487   0003DB                     ADUTHL          equ	987	;# 
  3488   0003DC                     ADUTHH          equ	988	;# 
  3489   0003DD                     ADERR           equ	989	;# 
  3490   0003DD                     ADERRL          equ	989	;# 
  3491   0003DE                     ADERRH          equ	990	;# 
  3492   0003DF                     ADSTPT          equ	991	;# 
  3493   0003DF                     ADSTPTL         equ	991	;# 
  3494   0003E0                     ADSTPTH         equ	992	;# 
  3495   0003E1                     ADFLTR          equ	993	;# 
  3496   0003E1                     ADFLTRL         equ	993	;# 
  3497   0003E2                     ADFLTRH         equ	994	;# 
  3498   0003E3                     ADACC           equ	995	;# 
  3499   0003E3                     ADACCL          equ	995	;# 
  3500   0003E4                     ADACCH          equ	996	;# 
  3501   0003E5                     ADACCU          equ	997	;# 
  3502   0003E6                     ADCNT           equ	998	;# 
  3503   0003E7                     ADRPT           equ	999	;# 
  3504   0003E8                     ADPREV          equ	1000	;# 
  3505   0003E8                     ADPREVL         equ	1000	;# 
  3506   0003E9                     ADPREVH         equ	1001	;# 
  3507   0003EA                     ADRES           equ	1002	;# 
  3508   0003EA                     ADRESL          equ	1002	;# 
  3509   0003EB                     ADRESH          equ	1003	;# 
  3510   0003EC                     ADPCH           equ	1004	;# 
  3511   0003EE                     ADACQ           equ	1006	;# 
  3512   0003EE                     ADACQL          equ	1006	;# 
  3513   0003EF                     ADACQH          equ	1007	;# 
  3514   0003F0                     ADCAP           equ	1008	;# 
  3515   0003F1                     ADPRE           equ	1009	;# 
  3516   0003F1                     ADPREL          equ	1009	;# 
  3517   0003F2                     ADPREH          equ	1010	;# 
  3518   0003F3                     ADCON0          equ	1011	;# 
  3519   0003F4                     ADCON1          equ	1012	;# 
  3520   0003F5                     ADCON2          equ	1013	;# 
  3521   0003F6                     ADCON3          equ	1014	;# 
  3522   0003F7                     ADSTAT          equ	1015	;# 
  3523   0003F8                     ADREF           equ	1016	;# 
  3524   0003F9                     ADACT           equ	1017	;# 
  3525   0003FA                     ADCLK           equ	1018	;# 
  3526   0003FB                     ADCTX           equ	1019	;# 
  3527   0003FC                     ADCSEL1         equ	1020	;# 
  3528   0003FD                     ADCSEL2         equ	1021	;# 
  3529   0003FE                     ADCSEL3         equ	1022	;# 
  3530   0003FF                     ADCSEL4         equ	1023	;# 
  3531   000400                     ANSELA          equ	1024	;# 
  3532   000401                     WPUA            equ	1025	;# 
  3533   000402                     ODCONA          equ	1026	;# 
  3534   000403                     SLRCONA         equ	1027	;# 
  3535   000404                     INLVLA          equ	1028	;# 
  3536   000405                     IOCAP           equ	1029	;# 
  3537   000406                     IOCAN           equ	1030	;# 
  3538   000407                     IOCAF           equ	1031	;# 
  3539   000408                     ANSELB          equ	1032	;# 
  3540   000409                     WPUB            equ	1033	;# 
  3541   00040A                     ODCONB          equ	1034	;# 
  3542   00040B                     SLRCONB         equ	1035	;# 
  3543   00040C                     INLVLB          equ	1036	;# 
  3544   00040D                     IOCBP           equ	1037	;# 
  3545   00040E                     IOCBN           equ	1038	;# 
  3546   00040F                     IOCBF           equ	1039	;# 
  3547   000410                     ANSELC          equ	1040	;# 
  3548   000411                     WPUC            equ	1041	;# 
  3549   000412                     ODCONC          equ	1042	;# 
  3550   000413                     SLRCONC         equ	1043	;# 
  3551   000414                     INLVLC          equ	1044	;# 
  3552   000415                     IOCCP           equ	1045	;# 
  3553   000416                     IOCCN           equ	1046	;# 
  3554   000417                     IOCCF           equ	1047	;# 
  3555   000421                     WPUE            equ	1057	;# 
  3556   000424                     INLVLE          equ	1060	;# 
  3557   000425                     IOCEP           equ	1061	;# 
  3558   000426                     IOCEN           equ	1062	;# 
  3559   000427                     IOCEF           equ	1063	;# 
  3560   000440                     NCO1ACC         equ	1088	;# 
  3561   000440                     NCO1ACCL        equ	1088	;# 
  3562   000441                     NCO1ACCH        equ	1089	;# 
  3563   000442                     NCO1ACCU        equ	1090	;# 
  3564   000443                     NCO1INC         equ	1091	;# 
  3565   000443                     NCO1INCL        equ	1091	;# 
  3566   000444                     NCO1INCH        equ	1092	;# 
  3567   000445                     NCO1INCU        equ	1093	;# 
  3568   000446                     NCO1CON         equ	1094	;# 
  3569   000447                     NCO1CLK         equ	1095	;# 
  3570   000448                     NCO2ACC         equ	1096	;# 
  3571   000448                     NCO2ACCL        equ	1096	;# 
  3572   000449                     NCO2ACCH        equ	1097	;# 
  3573   00044A                     NCO2ACCU        equ	1098	;# 
  3574   00044B                     NCO2INC         equ	1099	;# 
  3575   00044B                     NCO2INCL        equ	1099	;# 
  3576   00044C                     NCO2INCH        equ	1100	;# 
  3577   00044D                     NCO2INCU        equ	1101	;# 
  3578   00044E                     NCO2CON         equ	1102	;# 
  3579   00044F                     NCO2CLK         equ	1103	;# 
  3580   000450                     NCO3ACC         equ	1104	;# 
  3581   000450                     NCO3ACCL        equ	1104	;# 
  3582   000451                     NCO3ACCH        equ	1105	;# 
  3583   000452                     NCO3ACCU        equ	1106	;# 
  3584   000453                     NCO3INC         equ	1107	;# 
  3585   000453                     NCO3INCL        equ	1107	;# 
  3586   000454                     NCO3INCH        equ	1108	;# 
  3587   000455                     NCO3INCU        equ	1109	;# 
  3588   000456                     NCO3CON         equ	1110	;# 
  3589   000457                     NCO3CLK         equ	1111	;# 
  3590   000458                     FSCMCON         equ	1112	;# 
  3591   000459                     IVTLOCK         equ	1113	;# 
  3592   00045A                     IVTAD           equ	1114	;# 
  3593   00045A                     IVTADL          equ	1114	;# 
  3594   00045B                     IVTADH          equ	1115	;# 
  3595   00045C                     IVTADU          equ	1116	;# 
  3596   00045D                     IVTBASE         equ	1117	;# 
  3597   00045D                     IVTBASEL        equ	1117	;# 
  3598   00045E                     IVTBASEH        equ	1118	;# 
  3599   00045F                     IVTBASEU        equ	1119	;# 
  3600   000460                     PWM1ERS         equ	1120	;# 
  3601   000461                     PWM1CLK         equ	1121	;# 
  3602   000462                     PWM1LDS         equ	1122	;# 
  3603   000463                     PWM1PR          equ	1123	;# 
  3604   000463                     PWM1PRL         equ	1123	;# 
  3605   000464                     PWM1PRH         equ	1124	;# 
  3606   000465                     PWM1CPRE        equ	1125	;# 
  3607   000466                     PWM1PIPOS       equ	1126	;# 
  3608   000467                     PWM1GIR         equ	1127	;# 
  3609   000468                     PWM1GIE         equ	1128	;# 
  3610   000469                     PWM1CON         equ	1129	;# 
  3611   00046A                     PWM1S1CFG       equ	1130	;# 
  3612   00046B                     PWM1S1P1        equ	1131	;# 
  3613   00046B                     PWM1S1P1L       equ	1131	;# 
  3614   00046C                     PWM1S1P1H       equ	1132	;# 
  3615   00046D                     PWM1S1P2        equ	1133	;# 
  3616   00046D                     PWM1S1P2L       equ	1133	;# 
  3617   00046E                     PWM1S1P2H       equ	1134	;# 
  3618   00046F                     PWM2ERS         equ	1135	;# 
  3619   000470                     PWM2CLK         equ	1136	;# 
  3620   000471                     PWM2LDS         equ	1137	;# 
  3621   000472                     PWM2PR          equ	1138	;# 
  3622   000472                     PWM2PRL         equ	1138	;# 
  3623   000473                     PWM2PRH         equ	1139	;# 
  3624   000474                     PWM2CPRE        equ	1140	;# 
  3625   000475                     PWM2PIPOS       equ	1141	;# 
  3626   000476                     PWM2GIR         equ	1142	;# 
  3627   000477                     PWM2GIE         equ	1143	;# 
  3628   000478                     PWM2CON         equ	1144	;# 
  3629   000479                     PWM2S1CFG       equ	1145	;# 
  3630   00047A                     PWM2S1P1        equ	1146	;# 
  3631   00047A                     PWM2S1P1L       equ	1146	;# 
  3632   00047B                     PWM2S1P1H       equ	1147	;# 
  3633   00047C                     PWM2S1P2        equ	1148	;# 
  3634   00047C                     PWM2S1P2L       equ	1148	;# 
  3635   00047D                     PWM2S1P2H       equ	1149	;# 
  3636   00047E                     PWM3ERS         equ	1150	;# 
  3637   00047F                     PWM3CLK         equ	1151	;# 
  3638   000480                     PWM3LDS         equ	1152	;# 
  3639   000481                     PWM3PR          equ	1153	;# 
  3640   000481                     PWM3PRL         equ	1153	;# 
  3641   000482                     PWM3PRH         equ	1154	;# 
  3642   000483                     PWM3CPRE        equ	1155	;# 
  3643   000484                     PWM3PIPOS       equ	1156	;# 
  3644   000485                     PWM3GIR         equ	1157	;# 
  3645   000486                     PWM3GIE         equ	1158	;# 
  3646   000487                     PWM3CON         equ	1159	;# 
  3647   000488                     PWM3S1CFG       equ	1160	;# 
  3648   000489                     PWM3S1P1        equ	1161	;# 
  3649   000489                     PWM3S1P1L       equ	1161	;# 
  3650   00048A                     PWM3S1P1H       equ	1162	;# 
  3651   00048B                     PWM3S1P2        equ	1163	;# 
  3652   00048B                     PWM3S1P2L       equ	1163	;# 
  3653   00048C                     PWM3S1P2H       equ	1164	;# 
  3654   00048D                     PWM4ERS         equ	1165	;# 
  3655   00048E                     PWM4CLK         equ	1166	;# 
  3656   00048F                     PWM4LDS         equ	1167	;# 
  3657   000490                     PWM4PR          equ	1168	;# 
  3658   000490                     PWM4PRL         equ	1168	;# 
  3659   000491                     PWM4PRH         equ	1169	;# 
  3660   000492                     PWM4CPRE        equ	1170	;# 
  3661   000493                     PWM4PIPOS       equ	1171	;# 
  3662   000494                     PWM4GIR         equ	1172	;# 
  3663   000495                     PWM4GIE         equ	1173	;# 
  3664   000496                     PWM4CON         equ	1174	;# 
  3665   000497                     PWM4S1CFG       equ	1175	;# 
  3666   000498                     PWM4S1P1        equ	1176	;# 
  3667   000498                     PWM4S1P1L       equ	1176	;# 
  3668   000499                     PWM4S1P1H       equ	1177	;# 
  3669   00049A                     PWM4S1P2        equ	1178	;# 
  3670   00049A                     PWM4S1P2L       equ	1178	;# 
  3671   00049B                     PWM4S1P2H       equ	1179	;# 
  3672   00049C                     PWMLOAD         equ	1180	;# 
  3673   00049D                     PWMEN           equ	1181	;# 
  3674   00049E                     PIE0            equ	1182	;# 
  3675   00049F                     PIE1            equ	1183	;# 
  3676   0004A0                     PIE2            equ	1184	;# 
  3677   0004A1                     PIE3            equ	1185	;# 
  3678   0004A2                     PIE4            equ	1186	;# 
  3679   0004A3                     PIE5            equ	1187	;# 
  3680   0004A4                     PIE6            equ	1188	;# 
  3681   0004A5                     PIE7            equ	1189	;# 
  3682   0004A6                     PIE8            equ	1190	;# 
  3683   0004A7                     PIE9            equ	1191	;# 
  3684   0004A8                     PIE10           equ	1192	;# 
  3685   0004A9                     PIE11           equ	1193	;# 
  3686   0004AA                     PIE12           equ	1194	;# 
  3687   0004AB                     PIE13           equ	1195	;# 
  3688   0004AC                     PIE14           equ	1196	;# 
  3689   0004AD                     PIE15           equ	1197	;# 
  3690   0004AE                     PIR0            equ	1198	;# 
  3691   0004AF                     PIR1            equ	1199	;# 
  3692   0004B0                     PIR2            equ	1200	;# 
  3693   0004B1                     PIR3            equ	1201	;# 
  3694   0004B2                     PIR4            equ	1202	;# 
  3695   0004B3                     PIR5            equ	1203	;# 
  3696   0004B4                     PIR6            equ	1204	;# 
  3697   0004B5                     PIR7            equ	1205	;# 
  3698   0004B6                     PIR8            equ	1206	;# 
  3699   0004B7                     PIR9            equ	1207	;# 
  3700   0004B8                     PIR10           equ	1208	;# 
  3701   0004B9                     PIR11           equ	1209	;# 
  3702   0004BA                     PIR12           equ	1210	;# 
  3703   0004BB                     PIR13           equ	1211	;# 
  3704   0004BC                     PIR14           equ	1212	;# 
  3705   0004BD                     PIR15           equ	1213	;# 
  3706   0004BE                     LATA            equ	1214	;# 
  3707   0004BF                     LATB            equ	1215	;# 
  3708   0004C0                     LATC            equ	1216	;# 
  3709   0004C6                     TRISA           equ	1222	;# 
  3710   0004C7                     TRISB           equ	1223	;# 
  3711   0004C8                     TRISC           equ	1224	;# 
  3712   0004CA                     TRISE           equ	1226	;# 
  3713   0004CE                     PORTA           equ	1230	;# 
  3714   0004CF                     PORTB           equ	1231	;# 
  3715   0004D0                     PORTC           equ	1232	;# 
  3716   0004D2                     PORTE           equ	1234	;# 
  3717   0004D6                     INTCON0         equ	1238	;# 
  3718   0004D7                     INTCON1         equ	1239	;# 
  3719   0004D8                     STATUS          equ	1240	;# 
  3720   0004D9                     FSR2            equ	1241	;# 
  3721   0004D9                     FSR2L           equ	1241	;# 
  3722   0004DA                     FSR2H           equ	1242	;# 
  3723   0004DB                     PLUSW2          equ	1243	;# 
  3724   0004DC                     PREINC2         equ	1244	;# 
  3725   0004DD                     POSTDEC2        equ	1245	;# 
  3726   0004DE                     POSTINC2        equ	1246	;# 
  3727   0004DF                     INDF2           equ	1247	;# 
  3728   0004E0                     BSR             equ	1248	;# 
  3729   0004E1                     FSR1            equ	1249	;# 
  3730   0004E1                     FSR1L           equ	1249	;# 
  3731   0004E2                     FSR1H           equ	1250	;# 
  3732   0004E3                     PLUSW1          equ	1251	;# 
  3733   0004E4                     PREINC1         equ	1252	;# 
  3734   0004E5                     POSTDEC1        equ	1253	;# 
  3735   0004E6                     POSTINC1        equ	1254	;# 
  3736   0004E7                     INDF1           equ	1255	;# 
  3737   0004E8                     WREG            equ	1256	;# 
  3738   0004E9                     FSR0            equ	1257	;# 
  3739   0004E9                     FSR0L           equ	1257	;# 
  3740   0004EA                     FSR0H           equ	1258	;# 
  3741   0004EB                     PLUSW0          equ	1259	;# 
  3742   0004EC                     PREINC0         equ	1260	;# 
  3743   0004ED                     POSTDEC0        equ	1261	;# 
  3744   0004EE                     POSTINC0        equ	1262	;# 
  3745   0004EF                     INDF0           equ	1263	;# 
  3746   0004F0                     PCON0           equ	1264	;# 
  3747   0004F1                     PCON1           equ	1265	;# 
  3748   0004F2                     CPUDOZE         equ	1266	;# 
  3749   0004F3                     PROD            equ	1267	;# 
  3750   0004F3                     PRODL           equ	1267	;# 
  3751   0004F4                     PRODH           equ	1268	;# 
  3752   0004F5                     TABLAT          equ	1269	;# 
  3753   0004F6                     TBLPTR          equ	1270	;# 
  3754   0004F6                     TBLPTRL         equ	1270	;# 
  3755   0004F7                     TBLPTRH         equ	1271	;# 
  3756   0004F8                     TBLPTRU         equ	1272	;# 
  3757   0004F9                     PCLAT           equ	1273	;# 
  3758   0004F9                     PCL             equ	1273	;# 
  3759   0004FA                     PCLATH          equ	1274	;# 
  3760   0004FB                     PCLATU          equ	1275	;# 
  3761   0004FC                     STKPTR          equ	1276	;# 
  3762   0004FD                     TOS             equ	1277	;# 
  3763   0004FD                     TOSL            equ	1277	;# 
  3764   0004FE                     TOSH            equ	1278	;# 
  3765   0004FF                     TOSU            equ	1279	;# 
  3766   000038                     BOOTREG         equ	56	;# 
  3767   000039                     CLKRCON         equ	57	;# 
  3768   00003A                     CLKRCLK         equ	58	;# 
  3769   000040                     NVMCON0         equ	64	;# 
  3770   000041                     NVMCON1         equ	65	;# 
  3771   000042                     NVMLOCK         equ	66	;# 
  3772   000043                     NVMADR          equ	67	;# 
  3773   000043                     NVMADRL         equ	67	;# 
  3774   000044                     NVMADRH         equ	68	;# 
  3775   000045                     NVMADRU         equ	69	;# 
  3776   000046                     NVMDAT          equ	70	;# 
  3777   000046                     NVMDATL         equ	70	;# 
  3778   000047                     NVMDATH         equ	71	;# 
  3779   000048                     VREGCON         equ	72	;# 
  3780   000049                     BORCON          equ	73	;# 
  3781   00004A                     HLVDCON0        equ	74	;# 
  3782   00004B                     HLVDCON1        equ	75	;# 
  3783   00004C                     ZCDCON          equ	76	;# 
  3784   000060                     PMD0            equ	96	;# 
  3785   000061                     PMD1            equ	97	;# 
  3786   000062                     PMD2            equ	98	;# 
  3787   000063                     PMD3            equ	99	;# 
  3788   000064                     PMD4            equ	100	;# 
  3789   000065                     PMD5            equ	101	;# 
  3790   000066                     PMD6            equ	102	;# 
  3791   000067                     PMD7            equ	103	;# 
  3792   000068                     PMD8            equ	104	;# 
  3793   00006A                     MD1CON0         equ	106	;# 
  3794   00006B                     MD1CON1         equ	107	;# 
  3795   00006C                     MD1SRC          equ	108	;# 
  3796   00006D                     MD1CARL         equ	109	;# 
  3797   00006E                     MD1CARH         equ	110	;# 
  3798   00006F                     CMOUT           equ	111	;# 
  3799   000070                     CM1CON0         equ	112	;# 
  3800   000071                     CM1CON1         equ	113	;# 
  3801   000072                     CM1NCH          equ	114	;# 
  3802   000073                     CM1PCH          equ	115	;# 
  3803   000074                     CM2CON0         equ	116	;# 
  3804   000075                     CM2CON1         equ	117	;# 
  3805   000076                     CM2NCH          equ	118	;# 
  3806   000077                     CM2PCH          equ	119	;# 
  3807   000078                     WDTCON0         equ	120	;# 
  3808   000079                     WDTCON1         equ	121	;# 
  3809   00007A                     WDTPSL          equ	122	;# 
  3810   00007B                     WDTPSH          equ	123	;# 
  3811   00007C                     WDTTMR          equ	124	;# 
  3812   00007D                     DAC1DAT         equ	125	;# 
  3813   00007D                     DAC1DATL        equ	125	;# 
  3814   00007F                     DAC1CON         equ	127	;# 
  3815   000080                     SPI1RXB         equ	128	;# 
  3816   000081                     SPI1TXB         equ	129	;# 
  3817   000082                     SPI1TCNT        equ	130	;# 
  3818   000082                     SPI1TCNTL       equ	130	;# 
  3819   000083                     SPI1TCNTH       equ	131	;# 
  3820   000084                     SPI1CON0        equ	132	;# 
  3821   000085                     SPI1CON1        equ	133	;# 
  3822   000086                     SPI1CON2        equ	134	;# 
  3823   000087                     SPI1STATUS      equ	135	;# 
  3824   000088                     SPI1TWIDTH      equ	136	;# 
  3825   000089                     SPI1BAUD        equ	137	;# 
  3826   00008A                     SPI1INTF        equ	138	;# 
  3827   00008B                     SPI1INTE        equ	139	;# 
  3828   00008C                     SPI1CLK         equ	140	;# 
  3829   00008D                     SPI2RXB         equ	141	;# 
  3830   00008E                     SPI2TXB         equ	142	;# 
  3831   00008F                     SPI2TCNT        equ	143	;# 
  3832   00008F                     SPI2TCNTL       equ	143	;# 
  3833   000090                     SPI2TCNTH       equ	144	;# 
  3834   000091                     SPI2CON0        equ	145	;# 
  3835   000092                     SPI2CON1        equ	146	;# 
  3836   000093                     SPI2CON2        equ	147	;# 
  3837   000094                     SPI2STATUS      equ	148	;# 
  3838   000095                     SPI2TWIDTH      equ	149	;# 
  3839   000096                     SPI2BAUD        equ	150	;# 
  3840   000097                     SPI2INTF        equ	151	;# 
  3841   000098                     SPI2INTE        equ	152	;# 
  3842   000099                     SPI2CLK         equ	153	;# 
  3843   0000AC                     ACTCON          equ	172	;# 
  3844   0000AD                     OSCCON1         equ	173	;# 
  3845   0000AE                     OSCCON2         equ	174	;# 
  3846   0000AF                     OSCCON3         equ	175	;# 
  3847   0000B0                     OSCTUNE         equ	176	;# 
  3848   0000B1                     OSCFRQ          equ	177	;# 
  3849   0000B1                     OSCFREQ         equ	177	;# 
  3850   0000B2                     OSCSTAT         equ	178	;# 
  3851   0000B2                     OSCSTAT1        equ	178	;# 
  3852   0000B3                     OSCEN           equ	179	;# 
  3853   0000B4                     PRLOCK          equ	180	;# 
  3854   0000B5                     SCANPR          equ	181	;# 
  3855   0000B6                     DMA1PR          equ	182	;# 
  3856   0000B7                     DMA2PR          equ	183	;# 
  3857   0000B8                     DMA3PR          equ	184	;# 
  3858   0000B9                     DMA4PR          equ	185	;# 
  3859   0000BA                     DMA5PR          equ	186	;# 
  3860   0000BB                     DMA6PR          equ	187	;# 
  3861   0000BC                     DMA7PR          equ	188	;# 
  3862   0000BD                     DMA8PR          equ	189	;# 
  3863   0000BE                     MAINPR          equ	190	;# 
  3864   0000BF                     ISRPR           equ	191	;# 
  3865   0000D4                     CLCDATA         equ	212	;# 
  3866   0000D5                     CLCSELECT       equ	213	;# 
  3867   0000D6                     CLCnCON         equ	214	;# 
  3868   0000D7                     CLCnPOL         equ	215	;# 
  3869   0000D8                     CLCnSEL0        equ	216	;# 
  3870   0000D9                     CLCnSEL1        equ	217	;# 
  3871   0000DA                     CLCnSEL2        equ	218	;# 
  3872   0000DB                     CLCnSEL3        equ	219	;# 
  3873   0000DC                     CLCnGLS0        equ	220	;# 
  3874   0000DD                     CLCnGLS1        equ	221	;# 
  3875   0000DE                     CLCnGLS2        equ	222	;# 
  3876   0000DF                     CLCnGLS3        equ	223	;# 
  3877   0000E8                     DMASELECT       equ	232	;# 
  3878   0000E9                     DMAnBUF         equ	233	;# 
  3879   0000EA                     DMAnDCNT        equ	234	;# 
  3880   0000EA                     DMAnDCNTL       equ	234	;# 
  3881   0000EB                     DMAnDCNTH       equ	235	;# 
  3882   0000EC                     DMAnDPTR        equ	236	;# 
  3883   0000EC                     DMAnDPTRL       equ	236	;# 
  3884   0000ED                     DMAnDPTRH       equ	237	;# 
  3885   0000EE                     DMAnDSZ         equ	238	;# 
  3886   0000EE                     DMAnDSZL        equ	238	;# 
  3887   0000EF                     DMAnDSZH        equ	239	;# 
  3888   0000F0                     DMAnDSA         equ	240	;# 
  3889   0000F0                     DMAnDSAL        equ	240	;# 
  3890   0000F1                     DMAnDSAH        equ	241	;# 
  3891   0000F2                     DMAnSCNT        equ	242	;# 
  3892   0000F2                     DMAnSCNTL       equ	242	;# 
  3893   0000F3                     DMAnSCNTH       equ	243	;# 
  3894   0000F4                     DMAnSPTR        equ	244	;# 
  3895   0000F4                     DMAnSPTRL       equ	244	;# 
  3896   0000F5                     DMAnSPTRH       equ	245	;# 
  3897   0000F6                     DMAnSPTRU       equ	246	;# 
  3898   0000F7                     DMAnSSZ         equ	247	;# 
  3899   0000F7                     DMAnSSZL        equ	247	;# 
  3900   0000F8                     DMAnSSZH        equ	248	;# 
  3901   0000F9                     DMAnSSA         equ	249	;# 
  3902   0000F9                     DMAnSSAL        equ	249	;# 
  3903   0000FA                     DMAnSSAH        equ	250	;# 
  3904   0000FB                     DMAnSSAU        equ	251	;# 
  3905   0000FC                     DMAnCON0        equ	252	;# 
  3906   0000FD                     DMAnCON1        equ	253	;# 
  3907   0000FE                     DMAnAIRQ        equ	254	;# 
  3908   0000FF                     DMAnSIRQ        equ	255	;# 
  3909   000100                     C1CONL          equ	256	;# 
  3910   000101                     C1CONH          equ	257	;# 
  3911   000102                     C1CONU          equ	258	;# 
  3912   000103                     C1CONT          equ	259	;# 
  3913   000104                     C1NBTCFGL       equ	260	;# 
  3914   000105                     C1NBTCFGH       equ	261	;# 
  3915   000106                     C1NBTCFGU       equ	262	;# 
  3916   000107                     C1NBTCFGT       equ	263	;# 
  3917   000108                     C1DBTCFGL       equ	264	;# 
  3918   000109                     C1DBTCFGH       equ	265	;# 
  3919   00010A                     C1DBTCFGU       equ	266	;# 
  3920   00010B                     C1DBTCFGT       equ	267	;# 
  3921   00010C                     C1TDCL          equ	268	;# 
  3922   00010D                     C1TDCH          equ	269	;# 
  3923   00010E                     C1TDCU          equ	270	;# 
  3924   000110                     C1TBC           equ	272	;# 
  3925   000110                     C1TBCL          equ	272	;# 
  3926   000111                     C1TBCH          equ	273	;# 
  3927   000112                     C1TBCU          equ	274	;# 
  3928   000113                     C1TBCT          equ	275	;# 
  3929   000114                     C1TSCONL        equ	276	;# 
  3930   000115                     C1TSCONH        equ	277	;# 
  3931   000116                     C1TSCONU        equ	278	;# 
  3932   000117                     C1TSCONT        equ	279	;# 
  3933   000118                     C1VECL          equ	280	;# 
  3934   000119                     C1VECH          equ	281	;# 
  3935   00011A                     C1VECU          equ	282	;# 
  3936   00011B                     C1VECT          equ	283	;# 
  3937   00011C                     C1INTL          equ	284	;# 
  3938   00011D                     C1INTH          equ	285	;# 
  3939   00011E                     C1INTU          equ	286	;# 
  3940   00011F                     C1INTT          equ	287	;# 
  3941   000120                     C1RXIF          equ	288	;# 
  3942   000120                     C1RXIFL         equ	288	;# 
  3943   000121                     C1RXIFH         equ	289	;# 
  3944   000122                     C1RXIFU         equ	290	;# 
  3945   000123                     C1RXIFT         equ	291	;# 
  3946   000124                     C1TXIF          equ	292	;# 
  3947   000124                     C1TXIFL         equ	292	;# 
  3948   000125                     C1TXIFH         equ	293	;# 
  3949   000126                     C1TXIFU         equ	294	;# 
  3950   000127                     C1TXIFT         equ	295	;# 
  3951   000128                     C1RXOVIF        equ	296	;# 
  3952   000128                     C1RXOVIFL       equ	296	;# 
  3953   000129                     C1RXOVIFH       equ	297	;# 
  3954   00012A                     C1RXOVIFU       equ	298	;# 
  3955   00012B                     C1RXOVIFT       equ	299	;# 
  3956   00012C                     C1TXATIF        equ	300	;# 
  3957   00012C                     C1TXATIFL       equ	300	;# 
  3958   00012D                     C1TXATIFH       equ	301	;# 
  3959   00012E                     C1TXATIFU       equ	302	;# 
  3960   00012F                     C1TXATIFT       equ	303	;# 
  3961   000130                     C1TXREQ         equ	304	;# 
  3962   000130                     C1TXREQL        equ	304	;# 
  3963   000131                     C1TXREQH        equ	305	;# 
  3964   000132                     C1TXREQU        equ	306	;# 
  3965   000133                     C1TXREQT        equ	307	;# 
  3966   000134                     C1TRECL         equ	308	;# 
  3967   000135                     C1TRECH         equ	309	;# 
  3968   000136                     C1TRECU         equ	310	;# 
  3969   000137                     C1TRECT         equ	311	;# 
  3970   000138                     C1BDIAG0L       equ	312	;# 
  3971   000139                     C1BDIAG0H       equ	313	;# 
  3972   00013C                     C1BDIAG1L       equ	316	;# 
  3973   00013D                     C1BDIAG1H       equ	317	;# 
  3974   00013E                     C1BDIAG1U       equ	318	;# 
  3975   00013F                     C1BDIAG1T       equ	319	;# 
  3976   000140                     C1TEFCONL       equ	320	;# 
  3977   000141                     C1TEFCONH       equ	321	;# 
  3978   000142                     C1TEFCONU       equ	322	;# 
  3979   000143                     C1TEFCONT       equ	323	;# 
  3980   000144                     C1TEFSTAL       equ	324	;# 
  3981   000145                     C1TEFSTAH       equ	325	;# 
  3982   000146                     C1TEFSTAU       equ	326	;# 
  3983   000147                     C1TEFSTAT       equ	327	;# 
  3984   000148                     C1TEFUA         equ	328	;# 
  3985   000148                     C1TEFUAL        equ	328	;# 
  3986   000149                     C1TEFUAH        equ	329	;# 
  3987   00014A                     C1TEFUAU        equ	330	;# 
  3988   00014B                     C1TEFUAT        equ	331	;# 
  3989   00014C                     C1FIFOBA        equ	332	;# 
  3990   00014C                     C1FIFOBAL       equ	332	;# 
  3991   00014D                     C1FIFOBAH       equ	333	;# 
  3992   00014E                     C1FIFOBAU       equ	334	;# 
  3993   00014F                     C1FIFOBAT       equ	335	;# 
  3994   000150                     C1TXQCONL       equ	336	;# 
  3995   000151                     C1TXQCONH       equ	337	;# 
  3996   000152                     C1TXQCONU       equ	338	;# 
  3997   000153                     C1TXQCONT       equ	339	;# 
  3998   000154                     C1TXQSTAL       equ	340	;# 
  3999   000155                     C1TXQSTAH       equ	341	;# 
  4000   000156                     C1TXQSTAU       equ	342	;# 
  4001   000157                     C1TXQSTAT       equ	343	;# 
  4002   000158                     C1TXQUA         equ	344	;# 
  4003   000158                     C1TXQUAL        equ	344	;# 
  4004   000159                     C1TXQUAH        equ	345	;# 
  4005   00015A                     C1TXQUAU        equ	346	;# 
  4006   00015B                     C1TXQUAT        equ	347	;# 
  4007   00015C                     C1FIFOCON1      equ	348	;# 
  4008   00015C                     C1FIFOCON1L     equ	348	;# 
  4009   00015D                     C1FIFOCON1H     equ	349	;# 
  4010   00015E                     C1FIFOCON1U     equ	350	;# 
  4011   00015F                     C1FIFOCON1T     equ	351	;# 
  4012   000160                     C1FIFOSTA1      equ	352	;# 
  4013   000160                     C1FIFOSTA1L     equ	352	;# 
  4014   000161                     C1FIFOSTA1H     equ	353	;# 
  4015   000162                     C1FIFOSTA1U     equ	354	;# 
  4016   000163                     C1FIFOSTA1T     equ	355	;# 
  4017   000164                     C1FIFOUA1       equ	356	;# 
  4018   000164                     C1FIFOUA1L      equ	356	;# 
  4019   000165                     C1FIFOUA1H      equ	357	;# 
  4020   000166                     C1FIFOUA1U      equ	358	;# 
  4021   000167                     C1FIFOUA1T      equ	359	;# 
  4022   000168                     C1FIFOCON2      equ	360	;# 
  4023   000168                     C1FIFOCON2L     equ	360	;# 
  4024   000169                     C1FIFOCON2H     equ	361	;# 
  4025   00016A                     C1FIFOCON2U     equ	362	;# 
  4026   00016B                     C1FIFOCON2T     equ	363	;# 
  4027   00016C                     C1FIFOSTA2      equ	364	;# 
  4028   00016C                     C1FIFOSTA2L     equ	364	;# 
  4029   00016D                     C1FIFOSTA2H     equ	365	;# 
  4030   00016E                     C1FIFOSTA2U     equ	366	;# 
  4031   00016F                     C1FIFOSTA2T     equ	367	;# 
  4032   000170                     C1FIFOUA2       equ	368	;# 
  4033   000170                     C1FIFOUA2L      equ	368	;# 
  4034   000171                     C1FIFOUA2H      equ	369	;# 
  4035   000172                     C1FIFOUA2U      equ	370	;# 
  4036   000173                     C1FIFOUA2T      equ	371	;# 
  4037   000174                     C1FIFOCON3      equ	372	;# 
  4038   000174                     C1FIFOCON3L     equ	372	;# 
  4039   000175                     C1FIFOCON3H     equ	373	;# 
  4040   000176                     C1FIFOCON3U     equ	374	;# 
  4041   000177                     C1FIFOCON3T     equ	375	;# 
  4042   000178                     C1FIFOSTA3      equ	376	;# 
  4043   000178                     C1FIFOSTA3L     equ	376	;# 
  4044   000179                     C1FIFOSTA3H     equ	377	;# 
  4045   00017A                     C1FIFOSTA3U     equ	378	;# 
  4046   00017B                     C1FIFOSTA3T     equ	379	;# 
  4047   00017C                     C1FIFOUA3       equ	380	;# 
  4048   00017C                     C1FIFOUA3L      equ	380	;# 
  4049   00017D                     C1FIFOUA3H      equ	381	;# 
  4050   00017E                     C1FIFOUA3U      equ	382	;# 
  4051   00017F                     C1FIFOUA3T      equ	383	;# 
  4052   000180                     C1FLTCON0L      equ	384	;# 
  4053   000181                     C1FLTCON0H      equ	385	;# 
  4054   000182                     C1FLTCON0U      equ	386	;# 
  4055   000183                     C1FLTCON0T      equ	387	;# 
  4056   000184                     C1FLTCON1L      equ	388	;# 
  4057   000185                     C1FLTCON1H      equ	389	;# 
  4058   000186                     C1FLTCON1U      equ	390	;# 
  4059   000187                     C1FLTCON1T      equ	391	;# 
  4060   000188                     C1FLTCON2L      equ	392	;# 
  4061   000189                     C1FLTCON2H      equ	393	;# 
  4062   00018A                     C1FLTCON2U      equ	394	;# 
  4063   00018B                     C1FLTCON2T      equ	395	;# 
  4064   00018C                     C1FLTOBJ0       equ	396	;# 
  4065   00018C                     C1FLTOBJ0L      equ	396	;# 
  4066   00018D                     C1FLTOBJ0H      equ	397	;# 
  4067   00018E                     C1FLTOBJ0U      equ	398	;# 
  4068   00018F                     C1FLTOBJ0T      equ	399	;# 
  4069   000190                     C1MASK0         equ	400	;# 
  4070   000190                     C1MASK0L        equ	400	;# 
  4071   000191                     C1MASK0H        equ	401	;# 
  4072   000192                     C1MASK0U        equ	402	;# 
  4073   000193                     C1MASK0T        equ	403	;# 
  4074   000194                     C1FLTOBJ1       equ	404	;# 
  4075   000194                     C1FLTOBJ1L      equ	404	;# 
  4076   000195                     C1FLTOBJ1H      equ	405	;# 
  4077   000196                     C1FLTOBJ1U      equ	406	;# 
  4078   000197                     C1FLTOBJ1T      equ	407	;# 
  4079   000198                     C1MASK1         equ	408	;# 
  4080   000198                     C1MASK1L        equ	408	;# 
  4081   000199                     C1MASK1H        equ	409	;# 
  4082   00019A                     C1MASK1U        equ	410	;# 
  4083   00019B                     C1MASK1T        equ	411	;# 
  4084   00019C                     C1FLTOBJ2       equ	412	;# 
  4085   00019C                     C1FLTOBJ2L      equ	412	;# 
  4086   00019D                     C1FLTOBJ2H      equ	413	;# 
  4087   00019E                     C1FLTOBJ2U      equ	414	;# 
  4088   00019F                     C1FLTOBJ2T      equ	415	;# 
  4089   0001A0                     C1MASK2         equ	416	;# 
  4090   0001A0                     C1MASK2L        equ	416	;# 
  4091   0001A1                     C1MASK2H        equ	417	;# 
  4092   0001A2                     C1MASK2U        equ	418	;# 
  4093   0001A3                     C1MASK2T        equ	419	;# 
  4094   0001A4                     C1FLTOBJ3       equ	420	;# 
  4095   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4096   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4097   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4098   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4099   0001A8                     C1MASK3         equ	424	;# 
  4100   0001A8                     C1MASK3L        equ	424	;# 
  4101   0001A9                     C1MASK3H        equ	425	;# 
  4102   0001AA                     C1MASK3U        equ	426	;# 
  4103   0001AB                     C1MASK3T        equ	427	;# 
  4104   0001AC                     C1FLTOBJ4       equ	428	;# 
  4105   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4106   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4107   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4108   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4109   0001B0                     C1MASK4         equ	432	;# 
  4110   0001B0                     C1MASK4L        equ	432	;# 
  4111   0001B1                     C1MASK4H        equ	433	;# 
  4112   0001B2                     C1MASK4U        equ	434	;# 
  4113   0001B3                     C1MASK4T        equ	435	;# 
  4114   0001B4                     C1FLTOBJ5       equ	436	;# 
  4115   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4116   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4117   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4118   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4119   0001B8                     C1MASK5         equ	440	;# 
  4120   0001B8                     C1MASK5L        equ	440	;# 
  4121   0001B9                     C1MASK5H        equ	441	;# 
  4122   0001BA                     C1MASK5U        equ	442	;# 
  4123   0001BB                     C1MASK5T        equ	443	;# 
  4124   0001BC                     C1FLTOBJ6       equ	444	;# 
  4125   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4126   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4127   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4128   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4129   0001C0                     C1MASK6         equ	448	;# 
  4130   0001C0                     C1MASK6L        equ	448	;# 
  4131   0001C1                     C1MASK6H        equ	449	;# 
  4132   0001C2                     C1MASK6U        equ	450	;# 
  4133   0001C3                     C1MASK6T        equ	451	;# 
  4134   0001C4                     C1FLTOBJ7       equ	452	;# 
  4135   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4136   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4137   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4138   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4139   0001C8                     C1MASK7         equ	456	;# 
  4140   0001C8                     C1MASK7L        equ	456	;# 
  4141   0001C9                     C1MASK7H        equ	457	;# 
  4142   0001CA                     C1MASK7U        equ	458	;# 
  4143   0001CB                     C1MASK7T        equ	459	;# 
  4144   0001CC                     C1FLTOBJ8       equ	460	;# 
  4145   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4146   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4147   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4148   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4149   0001D0                     C1MASK8         equ	464	;# 
  4150   0001D0                     C1MASK8L        equ	464	;# 
  4151   0001D1                     C1MASK8H        equ	465	;# 
  4152   0001D2                     C1MASK8U        equ	466	;# 
  4153   0001D3                     C1MASK8T        equ	467	;# 
  4154   0001D4                     C1FLTOBJ9       equ	468	;# 
  4155   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4156   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4157   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4158   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4159   0001D8                     C1MASK9         equ	472	;# 
  4160   0001D8                     C1MASK9L        equ	472	;# 
  4161   0001D9                     C1MASK9H        equ	473	;# 
  4162   0001DA                     C1MASK9U        equ	474	;# 
  4163   0001DB                     C1MASK9T        equ	475	;# 
  4164   0001DC                     C1FLTOBJ10      equ	476	;# 
  4165   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4166   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4167   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4168   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4169   0001E0                     C1MASK10        equ	480	;# 
  4170   0001E0                     C1MASK10L       equ	480	;# 
  4171   0001E1                     C1MASK10H       equ	481	;# 
  4172   0001E2                     C1MASK10U       equ	482	;# 
  4173   0001E3                     C1MASK10T       equ	483	;# 
  4174   0001E4                     C1FLTOBJ11      equ	484	;# 
  4175   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4176   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4177   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4178   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4179   0001E8                     C1MASK11        equ	488	;# 
  4180   0001E8                     C1MASK11L       equ	488	;# 
  4181   0001E9                     C1MASK11H       equ	489	;# 
  4182   0001EA                     C1MASK11U       equ	490	;# 
  4183   0001EB                     C1MASK11T       equ	491	;# 
  4184   000200                     PPSLOCK         equ	512	;# 
  4185   000201                     RA0PPS          equ	513	;# 
  4186   000202                     RA1PPS          equ	514	;# 
  4187   000203                     RA2PPS          equ	515	;# 
  4188   000204                     RA3PPS          equ	516	;# 
  4189   000205                     RA4PPS          equ	517	;# 
  4190   000206                     RA5PPS          equ	518	;# 
  4191   000207                     RA6PPS          equ	519	;# 
  4192   000208                     RA7PPS          equ	520	;# 
  4193   000209                     RB0PPS          equ	521	;# 
  4194   00020A                     RB1PPS          equ	522	;# 
  4195   00020B                     RB2PPS          equ	523	;# 
  4196   00020C                     RB3PPS          equ	524	;# 
  4197   00020D                     RB4PPS          equ	525	;# 
  4198   00020E                     RB5PPS          equ	526	;# 
  4199   00020F                     RB6PPS          equ	527	;# 
  4200   000210                     RB7PPS          equ	528	;# 
  4201   000211                     RC0PPS          equ	529	;# 
  4202   000212                     RC1PPS          equ	530	;# 
  4203   000213                     RC2PPS          equ	531	;# 
  4204   000214                     RC3PPS          equ	532	;# 
  4205   000215                     RC4PPS          equ	533	;# 
  4206   000216                     RC5PPS          equ	534	;# 
  4207   000217                     RC6PPS          equ	535	;# 
  4208   000218                     RC7PPS          equ	536	;# 
  4209   00023D                     CANRXPPS        equ	573	;# 
  4210   00023E                     INT0PPS         equ	574	;# 
  4211   00023F                     INT1PPS         equ	575	;# 
  4212   000240                     INT2PPS         equ	576	;# 
  4213   000241                     T0CKIPPS        equ	577	;# 
  4214   000242                     T1CKIPPS        equ	578	;# 
  4215   000243                     T1GPPS          equ	579	;# 
  4216   000244                     T3CKIPPS        equ	580	;# 
  4217   000245                     T3GPPS          equ	581	;# 
  4218   000246                     T5CKIPPS        equ	582	;# 
  4219   000247                     T5GPPS          equ	583	;# 
  4220   000248                     T2INPPS         equ	584	;# 
  4221   000249                     T4INPPS         equ	585	;# 
  4222   00024A                     T6INPPS         equ	586	;# 
  4223   00024B                     TUIN0PPS        equ	587	;# 
  4224   00024C                     TUIN1PPS        equ	588	;# 
  4225   00024F                     CCP1PPS         equ	591	;# 
  4226   000250                     CCP2PPS         equ	592	;# 
  4227   000251                     CCP3PPS         equ	593	;# 
  4228   000253                     PWM1ERSPPS      equ	595	;# 
  4229   000254                     PWM2ERSPPS      equ	596	;# 
  4230   000255                     PWM3ERSPPS      equ	597	;# 
  4231   000256                     PWM4ERSPPS      equ	598	;# 
  4232   000257                     PWMIN0PPS       equ	599	;# 
  4233   000258                     PWMIN1PPS       equ	600	;# 
  4234   000259                     SMT1WINPPS      equ	601	;# 
  4235   00025A                     SMT1SIGPPS      equ	602	;# 
  4236   00025B                     CWG1PPS         equ	603	;# 
  4237   00025B                     CWG1INPPS       equ	603	;# 
  4238   00025C                     CWG2PPS         equ	604	;# 
  4239   00025C                     CWG2INPPS       equ	604	;# 
  4240   00025D                     CWG3PPS         equ	605	;# 
  4241   00025D                     CWG3INPPS       equ	605	;# 
  4242   00025E                     MD1CARLPPS      equ	606	;# 
  4243   00025E                     MDCARLPPS       equ	606	;# 
  4244   00025F                     MD1CARHPPS      equ	607	;# 
  4245   00025F                     MDCARHPPS       equ	607	;# 
  4246   000260                     MD1SRCPPS       equ	608	;# 
  4247   000260                     MDSRCPPS        equ	608	;# 
  4248   000261                     CLCIN0PPS       equ	609	;# 
  4249   000262                     CLCIN1PPS       equ	610	;# 
  4250   000263                     CLCIN2PPS       equ	611	;# 
  4251   000264                     CLCIN3PPS       equ	612	;# 
  4252   000265                     CLCIN4PPS       equ	613	;# 
  4253   000266                     CLCIN5PPS       equ	614	;# 
  4254   000267                     CLCIN6PPS       equ	615	;# 
  4255   000268                     CLCIN7PPS       equ	616	;# 
  4256   000269                     ADACTPPS        equ	617	;# 
  4257   00026A                     SPI1SCKPPS      equ	618	;# 
  4258   00026B                     SPI1SDIPPS      equ	619	;# 
  4259   00026C                     SPI1SSPPS       equ	620	;# 
  4260   00026D                     SPI2SCKPPS      equ	621	;# 
  4261   00026E                     SPI2SDIPPS      equ	622	;# 
  4262   00026F                     SPI2SSPPS       equ	623	;# 
  4263   000270                     I2C1SDAPPS      equ	624	;# 
  4264   000271                     I2C1SCLPPS      equ	625	;# 
  4265   000272                     U1RXPPS         equ	626	;# 
  4266   000273                     U1CTSPPS        equ	627	;# 
  4267   000274                     U2RXPPS         equ	628	;# 
  4268   000275                     U2CTSPPS        equ	629	;# 
  4269   000276                     U3RXPPS         equ	630	;# 
  4270   000277                     U3CTSPPS        equ	631	;# 
  4271   000278                     U4RXPPS         equ	632	;# 
  4272   000279                     U4CTSPPS        equ	633	;# 
  4273   00027A                     U5RXPPS         equ	634	;# 
  4274   00027B                     U5CTSPPS        equ	635	;# 
  4275   000286                     RC4I2C          equ	646	;# 
  4276   000287                     RC3I2C          equ	647	;# 
  4277   000288                     RB2I2C          equ	648	;# 
  4278   000289                     RB1I2C          equ	649	;# 
  4279   00028A                     I2C1RXB         equ	650	;# 
  4280   00028B                     I2C1TXB         equ	651	;# 
  4281   00028C                     I2C1CNTL        equ	652	;# 
  4282   00028D                     I2C1CNTH        equ	653	;# 
  4283   00028E                     I2C1ADB0        equ	654	;# 
  4284   00028F                     I2C1ADB1        equ	655	;# 
  4285   000290                     I2C1ADR0        equ	656	;# 
  4286   000291                     I2C1ADR1        equ	657	;# 
  4287   000292                     I2C1ADR2        equ	658	;# 
  4288   000293                     I2C1ADR3        equ	659	;# 
  4289   000294                     I2C1CON0        equ	660	;# 
  4290   000295                     I2C1CON1        equ	661	;# 
  4291   000296                     I2C1CON2        equ	662	;# 
  4292   000297                     I2C1ERR         equ	663	;# 
  4293   000298                     I2C1STAT0       equ	664	;# 
  4294   000299                     I2C1STAT1       equ	665	;# 
  4295   00029A                     I2C1PIR         equ	666	;# 
  4296   00029B                     I2C1PIE         equ	667	;# 
  4297   00029C                     I2C1BTO         equ	668	;# 
  4298   00029D                     I2C1BAUD        equ	669	;# 
  4299   00029E                     I2C1CLK         equ	670	;# 
  4300   00029F                     I2C1BTOC        equ	671	;# 
  4301   0002A1                     U1RXB           equ	673	;# 
  4302   0002A1                     U1RXBL          equ	673	;# 
  4303   0002A2                     U1RXCHK         equ	674	;# 
  4304   0002A3                     U1TXB           equ	675	;# 
  4305   0002A3                     U1TXBL          equ	675	;# 
  4306   0002A4                     U1TXCHK         equ	676	;# 
  4307   0002A5                     U1P1            equ	677	;# 
  4308   0002A5                     U1P1L           equ	677	;# 
  4309   0002A6                     U1P1H           equ	678	;# 
  4310   0002A7                     U1P2            equ	679	;# 
  4311   0002A7                     U1P2L           equ	679	;# 
  4312   0002A8                     U1P2H           equ	680	;# 
  4313   0002A9                     U1P3            equ	681	;# 
  4314   0002A9                     U1P3L           equ	681	;# 
  4315   0002AA                     U1P3H           equ	682	;# 
  4316   0002AB                     U1CON0          equ	683	;# 
  4317   0002AC                     U1CON1          equ	684	;# 
  4318   0002AD                     U1CON2          equ	685	;# 
  4319   0002AE                     U1BRG           equ	686	;# 
  4320   0002AE                     U1BRGL          equ	686	;# 
  4321   0002AF                     U1BRGH          equ	687	;# 
  4322   0002B0                     U1FIFO          equ	688	;# 
  4323   0002B1                     U1UIR           equ	689	;# 
  4324   0002B2                     U1ERRIR         equ	690	;# 
  4325   0002B3                     U1ERRIE         equ	691	;# 
  4326   0002B4                     U2RXB           equ	692	;# 
  4327   0002B4                     U2RXBL          equ	692	;# 
  4328   0002B5                     U2RXCHK         equ	693	;# 
  4329   0002B6                     U2TXB           equ	694	;# 
  4330   0002B6                     U2TXBL          equ	694	;# 
  4331   0002B7                     U2TXCHK         equ	695	;# 
  4332   0002B8                     U2P1            equ	696	;# 
  4333   0002B8                     U2P1L           equ	696	;# 
  4334   0002B9                     U2P1H           equ	697	;# 
  4335   0002BA                     U2P2            equ	698	;# 
  4336   0002BA                     U2P2L           equ	698	;# 
  4337   0002BB                     U2P2H           equ	699	;# 
  4338   0002BC                     U2P3            equ	700	;# 
  4339   0002BC                     U2P3L           equ	700	;# 
  4340   0002BD                     U2P3H           equ	701	;# 
  4341   0002BE                     U2CON0          equ	702	;# 
  4342   0002BF                     U2CON1          equ	703	;# 
  4343   0002C0                     U2CON2          equ	704	;# 
  4344   0002C1                     U2BRG           equ	705	;# 
  4345   0002C1                     U2BRGL          equ	705	;# 
  4346   0002C2                     U2BRGH          equ	706	;# 
  4347   0002C3                     U2FIFO          equ	707	;# 
  4348   0002C4                     U2UIR           equ	708	;# 
  4349   0002C5                     U2ERRIR         equ	709	;# 
  4350   0002C6                     U2ERRIE         equ	710	;# 
  4351   0002C7                     U3RXB           equ	711	;# 
  4352   0002C7                     U3RXBL          equ	711	;# 
  4353   0002C9                     U3TXB           equ	713	;# 
  4354   0002C9                     U3TXBL          equ	713	;# 
  4355   0002CB                     U3P1            equ	715	;# 
  4356   0002CB                     U3P1L           equ	715	;# 
  4357   0002CD                     U3P2            equ	717	;# 
  4358   0002CD                     U3P2L           equ	717	;# 
  4359   0002CF                     U3P3            equ	719	;# 
  4360   0002CF                     U3P3L           equ	719	;# 
  4361   0002D1                     U3CON0          equ	721	;# 
  4362   0002D2                     U3CON1          equ	722	;# 
  4363   0002D3                     U3CON2          equ	723	;# 
  4364   0002D4                     U3BRG           equ	724	;# 
  4365   0002D4                     U3BRGL          equ	724	;# 
  4366   0002D5                     U3BRGH          equ	725	;# 
  4367   0002D6                     U3FIFO          equ	726	;# 
  4368   0002D7                     U3UIR           equ	727	;# 
  4369   0002D8                     U3ERRIR         equ	728	;# 
  4370   0002D9                     U3ERRIE         equ	729	;# 
  4371   0002DA                     U4RXB           equ	730	;# 
  4372   0002DA                     U4RXBL          equ	730	;# 
  4373   0002DC                     U4TXB           equ	732	;# 
  4374   0002DC                     U4TXBL          equ	732	;# 
  4375   0002DE                     U4P1            equ	734	;# 
  4376   0002DE                     U4P1L           equ	734	;# 
  4377   0002E0                     U4P2            equ	736	;# 
  4378   0002E0                     U4P2L           equ	736	;# 
  4379   0002E2                     U4P3            equ	738	;# 
  4380   0002E2                     U4P3L           equ	738	;# 
  4381   0002E4                     U4CON0          equ	740	;# 
  4382   0002E5                     U4CON1          equ	741	;# 
  4383   0002E6                     U4CON2          equ	742	;# 
  4384   0002E7                     U4BRG           equ	743	;# 
  4385   0002E7                     U4BRGL          equ	743	;# 
  4386   0002E8                     U4BRGH          equ	744	;# 
  4387   0002E9                     U4FIFO          equ	745	;# 
  4388   0002EA                     U4UIR           equ	746	;# 
  4389   0002EB                     U4ERRIR         equ	747	;# 
  4390   0002EC                     U4ERRIE         equ	748	;# 
  4391   0002ED                     U5RXB           equ	749	;# 
  4392   0002ED                     U5RXBL          equ	749	;# 
  4393   0002EF                     U5TXB           equ	751	;# 
  4394   0002EF                     U5TXBL          equ	751	;# 
  4395   0002F1                     U5P1            equ	753	;# 
  4396   0002F1                     U5P1L           equ	753	;# 
  4397   0002F3                     U5P2            equ	755	;# 
  4398   0002F3                     U5P2L           equ	755	;# 
  4399   0002F5                     U5P3            equ	757	;# 
  4400   0002F5                     U5P3L           equ	757	;# 
  4401   0002F7                     U5CON0          equ	759	;# 
  4402   0002F8                     U5CON1          equ	760	;# 
  4403   0002F9                     U5CON2          equ	761	;# 
  4404   0002FA                     U5BRG           equ	762	;# 
  4405   0002FA                     U5BRGL          equ	762	;# 
  4406   0002FB                     U5BRGH          equ	763	;# 
  4407   0002FC                     U5FIFO          equ	764	;# 
  4408   0002FD                     U5UIR           equ	765	;# 
  4409   0002FE                     U5ERRIR         equ	766	;# 
  4410   0002FF                     U5ERRIE         equ	767	;# 
  4411   000300                     SMT1TMR         equ	768	;# 
  4412   000300                     SMT1TMRL        equ	768	;# 
  4413   000301                     SMT1TMRH        equ	769	;# 
  4414   000302                     SMT1TMRU        equ	770	;# 
  4415   000303                     SMT1CPR         equ	771	;# 
  4416   000303                     SMT1CPRL        equ	771	;# 
  4417   000304                     SMT1CPRH        equ	772	;# 
  4418   000305                     SMT1CPRU        equ	773	;# 
  4419   000306                     SMT1CPW         equ	774	;# 
  4420   000306                     SMT1CPWL        equ	774	;# 
  4421   000307                     SMT1CPWH        equ	775	;# 
  4422   000308                     SMT1CPWU        equ	776	;# 
  4423   000309                     SMT1PR          equ	777	;# 
  4424   000309                     SMT1PRL         equ	777	;# 
  4425   00030A                     SMT1PRH         equ	778	;# 
  4426   00030B                     SMT1PRU         equ	779	;# 
  4427   00030C                     SMT1CON0        equ	780	;# 
  4428   00030D                     SMT1CON1        equ	781	;# 
  4429   00030E                     SMT1STAT        equ	782	;# 
  4430   00030F                     SMT1CLK         equ	783	;# 
  4431   000310                     SMT1SIG         equ	784	;# 
  4432   000311                     SMT1WIN         equ	785	;# 
  4433   000318                     TMR0L           equ	792	;# 
  4434   000318                     TMR0            equ	792	;# 
  4435   000319                     TMR0H           equ	793	;# 
  4436   000319                     PR0             equ	793	;# 
  4437   00031A                     T0CON0          equ	794	;# 
  4438   00031B                     T0CON1          equ	795	;# 
  4439   00031C                     TMR1            equ	796	;# 
  4440   00031C                     TMR1L           equ	796	;# 
  4441   00031D                     TMR1H           equ	797	;# 
  4442   00031E                     T1CON           equ	798	;# 
  4443   00031E                     TMR1CON         equ	798	;# 
  4444   00031F                     T1GCON          equ	799	;# 
  4445   00031F                     TMR1GCON        equ	799	;# 
  4446   000320                     T1GATE          equ	800	;# 
  4447   000320                     TMR1GATE        equ	800	;# 
  4448   000321                     T1CLK           equ	801	;# 
  4449   000321                     TMR1CLK         equ	801	;# 
  4450   000321                     PR1             equ	801	;# 
  4451   000322                     T2TMR           equ	802	;# 
  4452   000322                     TMR2            equ	802	;# 
  4453   000323                     T2PR            equ	803	;# 
  4454   000323                     PR2             equ	803	;# 
  4455   000324                     T2CON           equ	804	;# 
  4456   000325                     T2HLT           equ	805	;# 
  4457   000326                     T2CLKCON        equ	806	;# 
  4458   000326                     T2CLK           equ	806	;# 
  4459   000327                     T2RST           equ	807	;# 
  4460   000328                     TMR3            equ	808	;# 
  4461   000328                     TMR3L           equ	808	;# 
  4462   000329                     TMR3H           equ	809	;# 
  4463   00032A                     T3CON           equ	810	;# 
  4464   00032A                     TMR3CON         equ	810	;# 
  4465   00032B                     T3GCON          equ	811	;# 
  4466   00032B                     TMR3GCON        equ	811	;# 
  4467   00032C                     T3GATE          equ	812	;# 
  4468   00032C                     TMR3GATE        equ	812	;# 
  4469   00032D                     T3CLK           equ	813	;# 
  4470   00032D                     TMR3CLK         equ	813	;# 
  4471   00032D                     PR3             equ	813	;# 
  4472   00032E                     T4TMR           equ	814	;# 
  4473   00032E                     TMR4            equ	814	;# 
  4474   00032F                     T4PR            equ	815	;# 
  4475   00032F                     PR4             equ	815	;# 
  4476   000330                     T4CON           equ	816	;# 
  4477   000331                     T4HLT           equ	817	;# 
  4478   000332                     T4CLKCON        equ	818	;# 
  4479   000332                     T4CLK           equ	818	;# 
  4480   000333                     T4RST           equ	819	;# 
  4481   000334                     TMR5            equ	820	;# 
  4482   000334                     TMR5L           equ	820	;# 
  4483   000335                     TMR5H           equ	821	;# 
  4484   000336                     T5CON           equ	822	;# 
  4485   000336                     TMR5CON         equ	822	;# 
  4486   000337                     T5GCON          equ	823	;# 
  4487   000337                     TMR5GCON        equ	823	;# 
  4488   000338                     T5GATE          equ	824	;# 
  4489   000338                     TMR5GATE        equ	824	;# 
  4490   000339                     T5CLK           equ	825	;# 
  4491   000339                     TMR5CLK         equ	825	;# 
  4492   000339                     PR5             equ	825	;# 
  4493   00033A                     T6TMR           equ	826	;# 
  4494   00033A                     TMR6            equ	826	;# 
  4495   00033B                     T6PR            equ	827	;# 
  4496   00033B                     PR6             equ	827	;# 
  4497   00033C                     T6CON           equ	828	;# 
  4498   00033D                     T6HLT           equ	829	;# 
  4499   00033E                     T6CLKCON        equ	830	;# 
  4500   00033E                     T6CLK           equ	830	;# 
  4501   00033F                     T6RST           equ	831	;# 
  4502   000340                     CCPR1           equ	832	;# 
  4503   000340                     CCPR1L          equ	832	;# 
  4504   000341                     CCPR1H          equ	833	;# 
  4505   000342                     CCP1CON         equ	834	;# 
  4506   000343                     CCP1CAP         equ	835	;# 
  4507   000344                     CCPR2           equ	836	;# 
  4508   000344                     CCPR2L          equ	836	;# 
  4509   000345                     CCPR2H          equ	837	;# 
  4510   000346                     CCP2CON         equ	838	;# 
  4511   000347                     CCP2CAP         equ	839	;# 
  4512   000348                     CCPR3           equ	840	;# 
  4513   000348                     CCPR3L          equ	840	;# 
  4514   000349                     CCPR3H          equ	841	;# 
  4515   00034A                     CCP3CON         equ	842	;# 
  4516   00034B                     CCP3CAP         equ	843	;# 
  4517   00034C                     CCPTMRS0        equ	844	;# 
  4518   00034F                     CRCDATA         equ	847	;# 
  4519   00034F                     CRCDATAL        equ	847	;# 
  4520   000350                     CRCDATAH        equ	848	;# 
  4521   000351                     CRCDATAU        equ	849	;# 
  4522   000352                     CRCDATAT        equ	850	;# 
  4523   000353                     CRCOUT          equ	851	;# 
  4524   000353                     CRCSHFT         equ	851	;# 
  4525   000353                     CRCXOR          equ	851	;# 
  4526   000353                     CRCOUTL         equ	851	;# 
  4527   000353                     CRCSHFTL        equ	851	;# 
  4528   000353                     CRCSHIFTL       equ	851	;# 
  4529   000353                     CRCXORL         equ	851	;# 
  4530   000354                     CRCOUTH         equ	852	;# 
  4531   000354                     CRCSHFTH        equ	852	;# 
  4532   000354                     CRCSHIFTH       equ	852	;# 
  4533   000354                     CRCXORH         equ	852	;# 
  4534   000355                     CRCOUTU         equ	853	;# 
  4535   000355                     CRCSHFTU        equ	853	;# 
  4536   000355                     CRCSHIFTU       equ	853	;# 
  4537   000355                     CRCXORU         equ	853	;# 
  4538   000356                     CRCOUTT         equ	854	;# 
  4539   000356                     CRCSHFTT        equ	854	;# 
  4540   000356                     CRCSHIFTT       equ	854	;# 
  4541   000356                     CRCXORT         equ	854	;# 
  4542   000357                     CRCCON0         equ	855	;# 
  4543   000358                     CRCCON1         equ	856	;# 
  4544   000359                     CRCCON2         equ	857	;# 
  4545   00035A                     SCANLADR        equ	858	;# 
  4546   00035A                     SCANLADRL       equ	858	;# 
  4547   00035B                     SCANLADRH       equ	859	;# 
  4548   00035C                     SCANLADRU       equ	860	;# 
  4549   00035D                     SCANHADR        equ	861	;# 
  4550   00035D                     SCANHADRL       equ	861	;# 
  4551   00035E                     SCANHADRH       equ	862	;# 
  4552   00035F                     SCANHADRU       equ	863	;# 
  4553   000360                     SCANCON0        equ	864	;# 
  4554   000361                     SCANTRIG        equ	865	;# 
  4555   000362                     IPR0            equ	866	;# 
  4556   000363                     IPR1            equ	867	;# 
  4557   000364                     IPR2            equ	868	;# 
  4558   000365                     IPR3            equ	869	;# 
  4559   000366                     IPR4            equ	870	;# 
  4560   000367                     IPR5            equ	871	;# 
  4561   000368                     IPR6            equ	872	;# 
  4562   000369                     IPR7            equ	873	;# 
  4563   00036A                     IPR8            equ	874	;# 
  4564   00036B                     IPR9            equ	875	;# 
  4565   00036C                     IPR10           equ	876	;# 
  4566   00036D                     IPR11           equ	877	;# 
  4567   00036E                     IPR12           equ	878	;# 
  4568   00036F                     IPR13           equ	879	;# 
  4569   000370                     IPR14           equ	880	;# 
  4570   000371                     IPR15           equ	881	;# 
  4571   000373                     STATUS_CSHAD    equ	883	;# 
  4572   000374                     WREG_CSHAD      equ	884	;# 
  4573   000375                     BSR_CSHAD       equ	885	;# 
  4574   000376                     SHADCON         equ	886	;# 
  4575   000377                     STATUS_SHAD     equ	887	;# 
  4576   000378                     WREG_SHAD       equ	888	;# 
  4577   000379                     BSR_SHAD        equ	889	;# 
  4578   00037A                     PCLATH_SHAD     equ	890	;# 
  4579   00037B                     PCLATU_SHAD     equ	891	;# 
  4580   00037C                     FSR0SH          equ	892	;# 
  4581   00037C                     FSR0L_SHAD      equ	892	;# 
  4582   00037D                     FSR0H_SHAD      equ	893	;# 
  4583   00037E                     FSR1SH          equ	894	;# 
  4584   00037E                     FSR1L_SHAD      equ	894	;# 
  4585   00037F                     FSR1H_SHAD      equ	895	;# 
  4586   000380                     FSR2SH          equ	896	;# 
  4587   000380                     FSR2L_SHAD      equ	896	;# 
  4588   000381                     FSR2H_SHAD      equ	897	;# 
  4589   000382                     PRODSH          equ	898	;# 
  4590   000382                     PRODL_SHAD      equ	898	;# 
  4591   000383                     PRODH_SHAD      equ	899	;# 
  4592   000387                     TU16ACON0       equ	903	;# 
  4593   000388                     TU16ACON1       equ	904	;# 
  4594   000389                     TU16AHLT        equ	905	;# 
  4595   00038A                     TU16APS         equ	906	;# 
  4596   00038B                     TU16ATMR        equ	907	;# 
  4597   00038B                     TU16ACR         equ	907	;# 
  4598   00038B                     TU16ATMRL       equ	907	;# 
  4599   00038B                     TU16ACRL        equ	907	;# 
  4600   00038C                     TU16ATMRH       equ	908	;# 
  4601   00038C                     TU16ACRH        equ	908	;# 
  4602   00038D                     TU16APR         equ	909	;# 
  4603   00038D                     TU16APRL        equ	909	;# 
  4604   00038E                     TU16APRH        equ	910	;# 
  4605   00038F                     TU16ACLK        equ	911	;# 
  4606   000390                     TU16AERS        equ	912	;# 
  4607   000393                     TU16BCON0       equ	915	;# 
  4608   000394                     TU16BCON1       equ	916	;# 
  4609   000395                     TU16BHLT        equ	917	;# 
  4610   000396                     TU16BPS         equ	918	;# 
  4611   000397                     TU16BTMR        equ	919	;# 
  4612   000397                     TU16BCR         equ	919	;# 
  4613   000397                     TU16BTMRL       equ	919	;# 
  4614   000397                     TU16BCRL        equ	919	;# 
  4615   000398                     TU16BTMRH       equ	920	;# 
  4616   000398                     TU16BCRH        equ	920	;# 
  4617   000399                     TU16BPR         equ	921	;# 
  4618   000399                     TU16BPRL        equ	921	;# 
  4619   00039A                     TU16BPRH        equ	922	;# 
  4620   00039B                     TU16BCLK        equ	923	;# 
  4621   00039C                     TU16BERS        equ	924	;# 
  4622   0003BB                     TUCHAIN         equ	955	;# 
  4623   0003BC                     CWG1CLK         equ	956	;# 
  4624   0003BC                     CWG1CLKCON      equ	956	;# 
  4625   0003BD                     CWG1ISM         equ	957	;# 
  4626   0003BE                     CWG1DBR         equ	958	;# 
  4627   0003BF                     CWG1DBF         equ	959	;# 
  4628   0003C0                     CWG1CON0        equ	960	;# 
  4629   0003C1                     CWG1CON1        equ	961	;# 
  4630   0003C2                     CWG1AS0         equ	962	;# 
  4631   0003C3                     CWG1AS1         equ	963	;# 
  4632   0003C4                     CWG1STR         equ	964	;# 
  4633   0003C5                     CWG2CLK         equ	965	;# 
  4634   0003C5                     CWG2CLKCON      equ	965	;# 
  4635   0003C6                     CWG2ISM         equ	966	;# 
  4636   0003C7                     CWG2DBR         equ	967	;# 
  4637   0003C8                     CWG2DBF         equ	968	;# 
  4638   0003C9                     CWG2CON0        equ	969	;# 
  4639   0003CA                     CWG2CON1        equ	970	;# 
  4640   0003CB                     CWG2AS0         equ	971	;# 
  4641   0003CC                     CWG2AS1         equ	972	;# 
  4642   0003CD                     CWG2STR         equ	973	;# 
  4643   0003CE                     CWG3CLK         equ	974	;# 
  4644   0003CE                     CWG3CLKCON      equ	974	;# 
  4645   0003CF                     CWG3ISM         equ	975	;# 
  4646   0003D0                     CWG3DBR         equ	976	;# 
  4647   0003D1                     CWG3DBF         equ	977	;# 
  4648   0003D2                     CWG3CON0        equ	978	;# 
  4649   0003D3                     CWG3CON1        equ	979	;# 
  4650   0003D4                     CWG3AS0         equ	980	;# 
  4651   0003D5                     CWG3AS1         equ	981	;# 
  4652   0003D6                     CWG3STR         equ	982	;# 
  4653   0003D7                     FVRCON          equ	983	;# 
  4654   0003D8                     ADCPCON         equ	984	;# 
  4655   0003D8                     ADCP            equ	984	;# 
  4656   0003D9                     ADLTH           equ	985	;# 
  4657   0003D9                     ADLTHL          equ	985	;# 
  4658   0003DA                     ADLTHH          equ	986	;# 
  4659   0003DB                     ADUTH           equ	987	;# 
  4660   0003DB                     ADUTHL          equ	987	;# 
  4661   0003DC                     ADUTHH          equ	988	;# 
  4662   0003DD                     ADERR           equ	989	;# 
  4663   0003DD                     ADERRL          equ	989	;# 
  4664   0003DE                     ADERRH          equ	990	;# 
  4665   0003DF                     ADSTPT          equ	991	;# 
  4666   0003DF                     ADSTPTL         equ	991	;# 
  4667   0003E0                     ADSTPTH         equ	992	;# 
  4668   0003E1                     ADFLTR          equ	993	;# 
  4669   0003E1                     ADFLTRL         equ	993	;# 
  4670   0003E2                     ADFLTRH         equ	994	;# 
  4671   0003E3                     ADACC           equ	995	;# 
  4672   0003E3                     ADACCL          equ	995	;# 
  4673   0003E4                     ADACCH          equ	996	;# 
  4674   0003E5                     ADACCU          equ	997	;# 
  4675   0003E6                     ADCNT           equ	998	;# 
  4676   0003E7                     ADRPT           equ	999	;# 
  4677   0003E8                     ADPREV          equ	1000	;# 
  4678   0003E8                     ADPREVL         equ	1000	;# 
  4679   0003E9                     ADPREVH         equ	1001	;# 
  4680   0003EA                     ADRES           equ	1002	;# 
  4681   0003EA                     ADRESL          equ	1002	;# 
  4682   0003EB                     ADRESH          equ	1003	;# 
  4683   0003EC                     ADPCH           equ	1004	;# 
  4684   0003EE                     ADACQ           equ	1006	;# 
  4685   0003EE                     ADACQL          equ	1006	;# 
  4686   0003EF                     ADACQH          equ	1007	;# 
  4687   0003F0                     ADCAP           equ	1008	;# 
  4688   0003F1                     ADPRE           equ	1009	;# 
  4689   0003F1                     ADPREL          equ	1009	;# 
  4690   0003F2                     ADPREH          equ	1010	;# 
  4691   0003F3                     ADCON0          equ	1011	;# 
  4692   0003F4                     ADCON1          equ	1012	;# 
  4693   0003F5                     ADCON2          equ	1013	;# 
  4694   0003F6                     ADCON3          equ	1014	;# 
  4695   0003F7                     ADSTAT          equ	1015	;# 
  4696   0003F8                     ADREF           equ	1016	;# 
  4697   0003F9                     ADACT           equ	1017	;# 
  4698   0003FA                     ADCLK           equ	1018	;# 
  4699   0003FB                     ADCTX           equ	1019	;# 
  4700   0003FC                     ADCSEL1         equ	1020	;# 
  4701   0003FD                     ADCSEL2         equ	1021	;# 
  4702   0003FE                     ADCSEL3         equ	1022	;# 
  4703   0003FF                     ADCSEL4         equ	1023	;# 
  4704   000400                     ANSELA          equ	1024	;# 
  4705   000401                     WPUA            equ	1025	;# 
  4706   000402                     ODCONA          equ	1026	;# 
  4707   000403                     SLRCONA         equ	1027	;# 
  4708   000404                     INLVLA          equ	1028	;# 
  4709   000405                     IOCAP           equ	1029	;# 
  4710   000406                     IOCAN           equ	1030	;# 
  4711   000407                     IOCAF           equ	1031	;# 
  4712   000408                     ANSELB          equ	1032	;# 
  4713   000409                     WPUB            equ	1033	;# 
  4714   00040A                     ODCONB          equ	1034	;# 
  4715   00040B                     SLRCONB         equ	1035	;# 
  4716   00040C                     INLVLB          equ	1036	;# 
  4717   00040D                     IOCBP           equ	1037	;# 
  4718   00040E                     IOCBN           equ	1038	;# 
  4719   00040F                     IOCBF           equ	1039	;# 
  4720   000410                     ANSELC          equ	1040	;# 
  4721   000411                     WPUC            equ	1041	;# 
  4722   000412                     ODCONC          equ	1042	;# 
  4723   000413                     SLRCONC         equ	1043	;# 
  4724   000414                     INLVLC          equ	1044	;# 
  4725   000415                     IOCCP           equ	1045	;# 
  4726   000416                     IOCCN           equ	1046	;# 
  4727   000417                     IOCCF           equ	1047	;# 
  4728   000421                     WPUE            equ	1057	;# 
  4729   000424                     INLVLE          equ	1060	;# 
  4730   000425                     IOCEP           equ	1061	;# 
  4731   000426                     IOCEN           equ	1062	;# 
  4732   000427                     IOCEF           equ	1063	;# 
  4733   000440                     NCO1ACC         equ	1088	;# 
  4734   000440                     NCO1ACCL        equ	1088	;# 
  4735   000441                     NCO1ACCH        equ	1089	;# 
  4736   000442                     NCO1ACCU        equ	1090	;# 
  4737   000443                     NCO1INC         equ	1091	;# 
  4738   000443                     NCO1INCL        equ	1091	;# 
  4739   000444                     NCO1INCH        equ	1092	;# 
  4740   000445                     NCO1INCU        equ	1093	;# 
  4741   000446                     NCO1CON         equ	1094	;# 
  4742   000447                     NCO1CLK         equ	1095	;# 
  4743   000448                     NCO2ACC         equ	1096	;# 
  4744   000448                     NCO2ACCL        equ	1096	;# 
  4745   000449                     NCO2ACCH        equ	1097	;# 
  4746   00044A                     NCO2ACCU        equ	1098	;# 
  4747   00044B                     NCO2INC         equ	1099	;# 
  4748   00044B                     NCO2INCL        equ	1099	;# 
  4749   00044C                     NCO2INCH        equ	1100	;# 
  4750   00044D                     NCO2INCU        equ	1101	;# 
  4751   00044E                     NCO2CON         equ	1102	;# 
  4752   00044F                     NCO2CLK         equ	1103	;# 
  4753   000450                     NCO3ACC         equ	1104	;# 
  4754   000450                     NCO3ACCL        equ	1104	;# 
  4755   000451                     NCO3ACCH        equ	1105	;# 
  4756   000452                     NCO3ACCU        equ	1106	;# 
  4757   000453                     NCO3INC         equ	1107	;# 
  4758   000453                     NCO3INCL        equ	1107	;# 
  4759   000454                     NCO3INCH        equ	1108	;# 
  4760   000455                     NCO3INCU        equ	1109	;# 
  4761   000456                     NCO3CON         equ	1110	;# 
  4762   000457                     NCO3CLK         equ	1111	;# 
  4763   000458                     FSCMCON         equ	1112	;# 
  4764   000459                     IVTLOCK         equ	1113	;# 
  4765   00045A                     IVTAD           equ	1114	;# 
  4766   00045A                     IVTADL          equ	1114	;# 
  4767   00045B                     IVTADH          equ	1115	;# 
  4768   00045C                     IVTADU          equ	1116	;# 
  4769   00045D                     IVTBASE         equ	1117	;# 
  4770   00045D                     IVTBASEL        equ	1117	;# 
  4771   00045E                     IVTBASEH        equ	1118	;# 
  4772   00045F                     IVTBASEU        equ	1119	;# 
  4773   000460                     PWM1ERS         equ	1120	;# 
  4774   000461                     PWM1CLK         equ	1121	;# 
  4775   000462                     PWM1LDS         equ	1122	;# 
  4776   000463                     PWM1PR          equ	1123	;# 
  4777   000463                     PWM1PRL         equ	1123	;# 
  4778   000464                     PWM1PRH         equ	1124	;# 
  4779   000465                     PWM1CPRE        equ	1125	;# 
  4780   000466                     PWM1PIPOS       equ	1126	;# 
  4781   000467                     PWM1GIR         equ	1127	;# 
  4782   000468                     PWM1GIE         equ	1128	;# 
  4783   000469                     PWM1CON         equ	1129	;# 
  4784   00046A                     PWM1S1CFG       equ	1130	;# 
  4785   00046B                     PWM1S1P1        equ	1131	;# 
  4786   00046B                     PWM1S1P1L       equ	1131	;# 
  4787   00046C                     PWM1S1P1H       equ	1132	;# 
  4788   00046D                     PWM1S1P2        equ	1133	;# 
  4789   00046D                     PWM1S1P2L       equ	1133	;# 
  4790   00046E                     PWM1S1P2H       equ	1134	;# 
  4791   00046F                     PWM2ERS         equ	1135	;# 
  4792   000470                     PWM2CLK         equ	1136	;# 
  4793   000471                     PWM2LDS         equ	1137	;# 
  4794   000472                     PWM2PR          equ	1138	;# 
  4795   000472                     PWM2PRL         equ	1138	;# 
  4796   000473                     PWM2PRH         equ	1139	;# 
  4797   000474                     PWM2CPRE        equ	1140	;# 
  4798   000475                     PWM2PIPOS       equ	1141	;# 
  4799   000476                     PWM2GIR         equ	1142	;# 
  4800   000477                     PWM2GIE         equ	1143	;# 
  4801   000478                     PWM2CON         equ	1144	;# 
  4802   000479                     PWM2S1CFG       equ	1145	;# 
  4803   00047A                     PWM2S1P1        equ	1146	;# 
  4804   00047A                     PWM2S1P1L       equ	1146	;# 
  4805   00047B                     PWM2S1P1H       equ	1147	;# 
  4806   00047C                     PWM2S1P2        equ	1148	;# 
  4807   00047C                     PWM2S1P2L       equ	1148	;# 
  4808   00047D                     PWM2S1P2H       equ	1149	;# 
  4809   00047E                     PWM3ERS         equ	1150	;# 
  4810   00047F                     PWM3CLK         equ	1151	;# 
  4811   000480                     PWM3LDS         equ	1152	;# 
  4812   000481                     PWM3PR          equ	1153	;# 
  4813   000481                     PWM3PRL         equ	1153	;# 
  4814   000482                     PWM3PRH         equ	1154	;# 
  4815   000483                     PWM3CPRE        equ	1155	;# 
  4816   000484                     PWM3PIPOS       equ	1156	;# 
  4817   000485                     PWM3GIR         equ	1157	;# 
  4818   000486                     PWM3GIE         equ	1158	;# 
  4819   000487                     PWM3CON         equ	1159	;# 
  4820   000488                     PWM3S1CFG       equ	1160	;# 
  4821   000489                     PWM3S1P1        equ	1161	;# 
  4822   000489                     PWM3S1P1L       equ	1161	;# 
  4823   00048A                     PWM3S1P1H       equ	1162	;# 
  4824   00048B                     PWM3S1P2        equ	1163	;# 
  4825   00048B                     PWM3S1P2L       equ	1163	;# 
  4826   00048C                     PWM3S1P2H       equ	1164	;# 
  4827   00048D                     PWM4ERS         equ	1165	;# 
  4828   00048E                     PWM4CLK         equ	1166	;# 
  4829   00048F                     PWM4LDS         equ	1167	;# 
  4830   000490                     PWM4PR          equ	1168	;# 
  4831   000490                     PWM4PRL         equ	1168	;# 
  4832   000491                     PWM4PRH         equ	1169	;# 
  4833   000492                     PWM4CPRE        equ	1170	;# 
  4834   000493                     PWM4PIPOS       equ	1171	;# 
  4835   000494                     PWM4GIR         equ	1172	;# 
  4836   000495                     PWM4GIE         equ	1173	;# 
  4837   000496                     PWM4CON         equ	1174	;# 
  4838   000497                     PWM4S1CFG       equ	1175	;# 
  4839   000498                     PWM4S1P1        equ	1176	;# 
  4840   000498                     PWM4S1P1L       equ	1176	;# 
  4841   000499                     PWM4S1P1H       equ	1177	;# 
  4842   00049A                     PWM4S1P2        equ	1178	;# 
  4843   00049A                     PWM4S1P2L       equ	1178	;# 
  4844   00049B                     PWM4S1P2H       equ	1179	;# 
  4845   00049C                     PWMLOAD         equ	1180	;# 
  4846   00049D                     PWMEN           equ	1181	;# 
  4847   00049E                     PIE0            equ	1182	;# 
  4848   00049F                     PIE1            equ	1183	;# 
  4849   0004A0                     PIE2            equ	1184	;# 
  4850   0004A1                     PIE3            equ	1185	;# 
  4851   0004A2                     PIE4            equ	1186	;# 
  4852   0004A3                     PIE5            equ	1187	;# 
  4853   0004A4                     PIE6            equ	1188	;# 
  4854   0004A5                     PIE7            equ	1189	;# 
  4855   0004A6                     PIE8            equ	1190	;# 
  4856   0004A7                     PIE9            equ	1191	;# 
  4857   0004A8                     PIE10           equ	1192	;# 
  4858   0004A9                     PIE11           equ	1193	;# 
  4859   0004AA                     PIE12           equ	1194	;# 
  4860   0004AB                     PIE13           equ	1195	;# 
  4861   0004AC                     PIE14           equ	1196	;# 
  4862   0004AD                     PIE15           equ	1197	;# 
  4863   0004AE                     PIR0            equ	1198	;# 
  4864   0004AF                     PIR1            equ	1199	;# 
  4865   0004B0                     PIR2            equ	1200	;# 
  4866   0004B1                     PIR3            equ	1201	;# 
  4867   0004B2                     PIR4            equ	1202	;# 
  4868   0004B3                     PIR5            equ	1203	;# 
  4869   0004B4                     PIR6            equ	1204	;# 
  4870   0004B5                     PIR7            equ	1205	;# 
  4871   0004B6                     PIR8            equ	1206	;# 
  4872   0004B7                     PIR9            equ	1207	;# 
  4873   0004B8                     PIR10           equ	1208	;# 
  4874   0004B9                     PIR11           equ	1209	;# 
  4875   0004BA                     PIR12           equ	1210	;# 
  4876   0004BB                     PIR13           equ	1211	;# 
  4877   0004BC                     PIR14           equ	1212	;# 
  4878   0004BD                     PIR15           equ	1213	;# 
  4879   0004BE                     LATA            equ	1214	;# 
  4880   0004BF                     LATB            equ	1215	;# 
  4881   0004C0                     LATC            equ	1216	;# 
  4882   0004C6                     TRISA           equ	1222	;# 
  4883   0004C7                     TRISB           equ	1223	;# 
  4884   0004C8                     TRISC           equ	1224	;# 
  4885   0004CA                     TRISE           equ	1226	;# 
  4886   0004CE                     PORTA           equ	1230	;# 
  4887   0004CF                     PORTB           equ	1231	;# 
  4888   0004D0                     PORTC           equ	1232	;# 
  4889   0004D2                     PORTE           equ	1234	;# 
  4890   0004D6                     INTCON0         equ	1238	;# 
  4891   0004D7                     INTCON1         equ	1239	;# 
  4892   0004D8                     STATUS          equ	1240	;# 
  4893   0004D9                     FSR2            equ	1241	;# 
  4894   0004D9                     FSR2L           equ	1241	;# 
  4895   0004DA                     FSR2H           equ	1242	;# 
  4896   0004DB                     PLUSW2          equ	1243	;# 
  4897   0004DC                     PREINC2         equ	1244	;# 
  4898   0004DD                     POSTDEC2        equ	1245	;# 
  4899   0004DE                     POSTINC2        equ	1246	;# 
  4900   0004DF                     INDF2           equ	1247	;# 
  4901   0004E0                     BSR             equ	1248	;# 
  4902   0004E1                     FSR1            equ	1249	;# 
  4903   0004E1                     FSR1L           equ	1249	;# 
  4904   0004E2                     FSR1H           equ	1250	;# 
  4905   0004E3                     PLUSW1          equ	1251	;# 
  4906   0004E4                     PREINC1         equ	1252	;# 
  4907   0004E5                     POSTDEC1        equ	1253	;# 
  4908   0004E6                     POSTINC1        equ	1254	;# 
  4909   0004E7                     INDF1           equ	1255	;# 
  4910   0004E8                     WREG            equ	1256	;# 
  4911   0004E9                     FSR0            equ	1257	;# 
  4912   0004E9                     FSR0L           equ	1257	;# 
  4913   0004EA                     FSR0H           equ	1258	;# 
  4914   0004EB                     PLUSW0          equ	1259	;# 
  4915   0004EC                     PREINC0         equ	1260	;# 
  4916   0004ED                     POSTDEC0        equ	1261	;# 
  4917   0004EE                     POSTINC0        equ	1262	;# 
  4918   0004EF                     INDF0           equ	1263	;# 
  4919   0004F0                     PCON0           equ	1264	;# 
  4920   0004F1                     PCON1           equ	1265	;# 
  4921   0004F2                     CPUDOZE         equ	1266	;# 
  4922   0004F3                     PROD            equ	1267	;# 
  4923   0004F3                     PRODL           equ	1267	;# 
  4924   0004F4                     PRODH           equ	1268	;# 
  4925   0004F5                     TABLAT          equ	1269	;# 
  4926   0004F6                     TBLPTR          equ	1270	;# 
  4927   0004F6                     TBLPTRL         equ	1270	;# 
  4928   0004F7                     TBLPTRH         equ	1271	;# 
  4929   0004F8                     TBLPTRU         equ	1272	;# 
  4930   0004F9                     PCLAT           equ	1273	;# 
  4931   0004F9                     PCL             equ	1273	;# 
  4932   0004FA                     PCLATH          equ	1274	;# 
  4933   0004FB                     PCLATU          equ	1275	;# 
  4934   0004FC                     STKPTR          equ	1276	;# 
  4935   0004FD                     TOS             equ	1277	;# 
  4936   0004FD                     TOSL            equ	1277	;# 
  4937   0004FE                     TOSH            equ	1278	;# 
  4938   0004FF                     TOSU            equ	1279	;# 
  4939   000038                     BOOTREG         equ	56	;# 
  4940   000039                     CLKRCON         equ	57	;# 
  4941   00003A                     CLKRCLK         equ	58	;# 
  4942   000040                     NVMCON0         equ	64	;# 
  4943   000041                     NVMCON1         equ	65	;# 
  4944   000042                     NVMLOCK         equ	66	;# 
  4945   000043                     NVMADR          equ	67	;# 
  4946   000043                     NVMADRL         equ	67	;# 
  4947   000044                     NVMADRH         equ	68	;# 
  4948   000045                     NVMADRU         equ	69	;# 
  4949   000046                     NVMDAT          equ	70	;# 
  4950   000046                     NVMDATL         equ	70	;# 
  4951   000047                     NVMDATH         equ	71	;# 
  4952   000048                     VREGCON         equ	72	;# 
  4953   000049                     BORCON          equ	73	;# 
  4954   00004A                     HLVDCON0        equ	74	;# 
  4955   00004B                     HLVDCON1        equ	75	;# 
  4956   00004C                     ZCDCON          equ	76	;# 
  4957   000060                     PMD0            equ	96	;# 
  4958   000061                     PMD1            equ	97	;# 
  4959   000062                     PMD2            equ	98	;# 
  4960   000063                     PMD3            equ	99	;# 
  4961   000064                     PMD4            equ	100	;# 
  4962   000065                     PMD5            equ	101	;# 
  4963   000066                     PMD6            equ	102	;# 
  4964   000067                     PMD7            equ	103	;# 
  4965   000068                     PMD8            equ	104	;# 
  4966   00006A                     MD1CON0         equ	106	;# 
  4967   00006B                     MD1CON1         equ	107	;# 
  4968   00006C                     MD1SRC          equ	108	;# 
  4969   00006D                     MD1CARL         equ	109	;# 
  4970   00006E                     MD1CARH         equ	110	;# 
  4971   00006F                     CMOUT           equ	111	;# 
  4972   000070                     CM1CON0         equ	112	;# 
  4973   000071                     CM1CON1         equ	113	;# 
  4974   000072                     CM1NCH          equ	114	;# 
  4975   000073                     CM1PCH          equ	115	;# 
  4976   000074                     CM2CON0         equ	116	;# 
  4977   000075                     CM2CON1         equ	117	;# 
  4978   000076                     CM2NCH          equ	118	;# 
  4979   000077                     CM2PCH          equ	119	;# 
  4980   000078                     WDTCON0         equ	120	;# 
  4981   000079                     WDTCON1         equ	121	;# 
  4982   00007A                     WDTPSL          equ	122	;# 
  4983   00007B                     WDTPSH          equ	123	;# 
  4984   00007C                     WDTTMR          equ	124	;# 
  4985   00007D                     DAC1DAT         equ	125	;# 
  4986   00007D                     DAC1DATL        equ	125	;# 
  4987   00007F                     DAC1CON         equ	127	;# 
  4988   000080                     SPI1RXB         equ	128	;# 
  4989   000081                     SPI1TXB         equ	129	;# 
  4990   000082                     SPI1TCNT        equ	130	;# 
  4991   000082                     SPI1TCNTL       equ	130	;# 
  4992   000083                     SPI1TCNTH       equ	131	;# 
  4993   000084                     SPI1CON0        equ	132	;# 
  4994   000085                     SPI1CON1        equ	133	;# 
  4995   000086                     SPI1CON2        equ	134	;# 
  4996   000087                     SPI1STATUS      equ	135	;# 
  4997   000088                     SPI1TWIDTH      equ	136	;# 
  4998   000089                     SPI1BAUD        equ	137	;# 
  4999   00008A                     SPI1INTF        equ	138	;# 
  5000   00008B                     SPI1INTE        equ	139	;# 
  5001   00008C                     SPI1CLK         equ	140	;# 
  5002   00008D                     SPI2RXB         equ	141	;# 
  5003   00008E                     SPI2TXB         equ	142	;# 
  5004   00008F                     SPI2TCNT        equ	143	;# 
  5005   00008F                     SPI2TCNTL       equ	143	;# 
  5006   000090                     SPI2TCNTH       equ	144	;# 
  5007   000091                     SPI2CON0        equ	145	;# 
  5008   000092                     SPI2CON1        equ	146	;# 
  5009   000093                     SPI2CON2        equ	147	;# 
  5010   000094                     SPI2STATUS      equ	148	;# 
  5011   000095                     SPI2TWIDTH      equ	149	;# 
  5012   000096                     SPI2BAUD        equ	150	;# 
  5013   000097                     SPI2INTF        equ	151	;# 
  5014   000098                     SPI2INTE        equ	152	;# 
  5015   000099                     SPI2CLK         equ	153	;# 
  5016   0000AC                     ACTCON          equ	172	;# 
  5017   0000AD                     OSCCON1         equ	173	;# 
  5018   0000AE                     OSCCON2         equ	174	;# 
  5019   0000AF                     OSCCON3         equ	175	;# 
  5020   0000B0                     OSCTUNE         equ	176	;# 
  5021   0000B1                     OSCFRQ          equ	177	;# 
  5022   0000B1                     OSCFREQ         equ	177	;# 
  5023   0000B2                     OSCSTAT         equ	178	;# 
  5024   0000B2                     OSCSTAT1        equ	178	;# 
  5025   0000B3                     OSCEN           equ	179	;# 
  5026   0000B4                     PRLOCK          equ	180	;# 
  5027   0000B5                     SCANPR          equ	181	;# 
  5028   0000B6                     DMA1PR          equ	182	;# 
  5029   0000B7                     DMA2PR          equ	183	;# 
  5030   0000B8                     DMA3PR          equ	184	;# 
  5031   0000B9                     DMA4PR          equ	185	;# 
  5032   0000BA                     DMA5PR          equ	186	;# 
  5033   0000BB                     DMA6PR          equ	187	;# 
  5034   0000BC                     DMA7PR          equ	188	;# 
  5035   0000BD                     DMA8PR          equ	189	;# 
  5036   0000BE                     MAINPR          equ	190	;# 
  5037   0000BF                     ISRPR           equ	191	;# 
  5038   0000D4                     CLCDATA         equ	212	;# 
  5039   0000D5                     CLCSELECT       equ	213	;# 
  5040   0000D6                     CLCnCON         equ	214	;# 
  5041   0000D7                     CLCnPOL         equ	215	;# 
  5042   0000D8                     CLCnSEL0        equ	216	;# 
  5043   0000D9                     CLCnSEL1        equ	217	;# 
  5044   0000DA                     CLCnSEL2        equ	218	;# 
  5045   0000DB                     CLCnSEL3        equ	219	;# 
  5046   0000DC                     CLCnGLS0        equ	220	;# 
  5047   0000DD                     CLCnGLS1        equ	221	;# 
  5048   0000DE                     CLCnGLS2        equ	222	;# 
  5049   0000DF                     CLCnGLS3        equ	223	;# 
  5050   0000E8                     DMASELECT       equ	232	;# 
  5051   0000E9                     DMAnBUF         equ	233	;# 
  5052   0000EA                     DMAnDCNT        equ	234	;# 
  5053   0000EA                     DMAnDCNTL       equ	234	;# 
  5054   0000EB                     DMAnDCNTH       equ	235	;# 
  5055   0000EC                     DMAnDPTR        equ	236	;# 
  5056   0000EC                     DMAnDPTRL       equ	236	;# 
  5057   0000ED                     DMAnDPTRH       equ	237	;# 
  5058   0000EE                     DMAnDSZ         equ	238	;# 
  5059   0000EE                     DMAnDSZL        equ	238	;# 
  5060   0000EF                     DMAnDSZH        equ	239	;# 
  5061   0000F0                     DMAnDSA         equ	240	;# 
  5062   0000F0                     DMAnDSAL        equ	240	;# 
  5063   0000F1                     DMAnDSAH        equ	241	;# 
  5064   0000F2                     DMAnSCNT        equ	242	;# 
  5065   0000F2                     DMAnSCNTL       equ	242	;# 
  5066   0000F3                     DMAnSCNTH       equ	243	;# 
  5067   0000F4                     DMAnSPTR        equ	244	;# 
  5068   0000F4                     DMAnSPTRL       equ	244	;# 
  5069   0000F5                     DMAnSPTRH       equ	245	;# 
  5070   0000F6                     DMAnSPTRU       equ	246	;# 
  5071   0000F7                     DMAnSSZ         equ	247	;# 
  5072   0000F7                     DMAnSSZL        equ	247	;# 
  5073   0000F8                     DMAnSSZH        equ	248	;# 
  5074   0000F9                     DMAnSSA         equ	249	;# 
  5075   0000F9                     DMAnSSAL        equ	249	;# 
  5076   0000FA                     DMAnSSAH        equ	250	;# 
  5077   0000FB                     DMAnSSAU        equ	251	;# 
  5078   0000FC                     DMAnCON0        equ	252	;# 
  5079   0000FD                     DMAnCON1        equ	253	;# 
  5080   0000FE                     DMAnAIRQ        equ	254	;# 
  5081   0000FF                     DMAnSIRQ        equ	255	;# 
  5082   000100                     C1CONL          equ	256	;# 
  5083   000101                     C1CONH          equ	257	;# 
  5084   000102                     C1CONU          equ	258	;# 
  5085   000103                     C1CONT          equ	259	;# 
  5086   000104                     C1NBTCFGL       equ	260	;# 
  5087   000105                     C1NBTCFGH       equ	261	;# 
  5088   000106                     C1NBTCFGU       equ	262	;# 
  5089   000107                     C1NBTCFGT       equ	263	;# 
  5090   000108                     C1DBTCFGL       equ	264	;# 
  5091   000109                     C1DBTCFGH       equ	265	;# 
  5092   00010A                     C1DBTCFGU       equ	266	;# 
  5093   00010B                     C1DBTCFGT       equ	267	;# 
  5094   00010C                     C1TDCL          equ	268	;# 
  5095   00010D                     C1TDCH          equ	269	;# 
  5096   00010E                     C1TDCU          equ	270	;# 
  5097   000110                     C1TBC           equ	272	;# 
  5098   000110                     C1TBCL          equ	272	;# 
  5099   000111                     C1TBCH          equ	273	;# 
  5100   000112                     C1TBCU          equ	274	;# 
  5101   000113                     C1TBCT          equ	275	;# 
  5102   000114                     C1TSCONL        equ	276	;# 
  5103   000115                     C1TSCONH        equ	277	;# 
  5104   000116                     C1TSCONU        equ	278	;# 
  5105   000117                     C1TSCONT        equ	279	;# 
  5106   000118                     C1VECL          equ	280	;# 
  5107   000119                     C1VECH          equ	281	;# 
  5108   00011A                     C1VECU          equ	282	;# 
  5109   00011B                     C1VECT          equ	283	;# 
  5110   00011C                     C1INTL          equ	284	;# 
  5111   00011D                     C1INTH          equ	285	;# 
  5112   00011E                     C1INTU          equ	286	;# 
  5113   00011F                     C1INTT          equ	287	;# 
  5114   000120                     C1RXIF          equ	288	;# 
  5115   000120                     C1RXIFL         equ	288	;# 
  5116   000121                     C1RXIFH         equ	289	;# 
  5117   000122                     C1RXIFU         equ	290	;# 
  5118   000123                     C1RXIFT         equ	291	;# 
  5119   000124                     C1TXIF          equ	292	;# 
  5120   000124                     C1TXIFL         equ	292	;# 
  5121   000125                     C1TXIFH         equ	293	;# 
  5122   000126                     C1TXIFU         equ	294	;# 
  5123   000127                     C1TXIFT         equ	295	;# 
  5124   000128                     C1RXOVIF        equ	296	;# 
  5125   000128                     C1RXOVIFL       equ	296	;# 
  5126   000129                     C1RXOVIFH       equ	297	;# 
  5127   00012A                     C1RXOVIFU       equ	298	;# 
  5128   00012B                     C1RXOVIFT       equ	299	;# 
  5129   00012C                     C1TXATIF        equ	300	;# 
  5130   00012C                     C1TXATIFL       equ	300	;# 
  5131   00012D                     C1TXATIFH       equ	301	;# 
  5132   00012E                     C1TXATIFU       equ	302	;# 
  5133   00012F                     C1TXATIFT       equ	303	;# 
  5134   000130                     C1TXREQ         equ	304	;# 
  5135   000130                     C1TXREQL        equ	304	;# 
  5136   000131                     C1TXREQH        equ	305	;# 
  5137   000132                     C1TXREQU        equ	306	;# 
  5138   000133                     C1TXREQT        equ	307	;# 
  5139   000134                     C1TRECL         equ	308	;# 
  5140   000135                     C1TRECH         equ	309	;# 
  5141   000136                     C1TRECU         equ	310	;# 
  5142   000137                     C1TRECT         equ	311	;# 
  5143   000138                     C1BDIAG0L       equ	312	;# 
  5144   000139                     C1BDIAG0H       equ	313	;# 
  5145   00013C                     C1BDIAG1L       equ	316	;# 
  5146   00013D                     C1BDIAG1H       equ	317	;# 
  5147   00013E                     C1BDIAG1U       equ	318	;# 
  5148   00013F                     C1BDIAG1T       equ	319	;# 
  5149   000140                     C1TEFCONL       equ	320	;# 
  5150   000141                     C1TEFCONH       equ	321	;# 
  5151   000142                     C1TEFCONU       equ	322	;# 
  5152   000143                     C1TEFCONT       equ	323	;# 
  5153   000144                     C1TEFSTAL       equ	324	;# 
  5154   000145                     C1TEFSTAH       equ	325	;# 
  5155   000146                     C1TEFSTAU       equ	326	;# 
  5156   000147                     C1TEFSTAT       equ	327	;# 
  5157   000148                     C1TEFUA         equ	328	;# 
  5158   000148                     C1TEFUAL        equ	328	;# 
  5159   000149                     C1TEFUAH        equ	329	;# 
  5160   00014A                     C1TEFUAU        equ	330	;# 
  5161   00014B                     C1TEFUAT        equ	331	;# 
  5162   00014C                     C1FIFOBA        equ	332	;# 
  5163   00014C                     C1FIFOBAL       equ	332	;# 
  5164   00014D                     C1FIFOBAH       equ	333	;# 
  5165   00014E                     C1FIFOBAU       equ	334	;# 
  5166   00014F                     C1FIFOBAT       equ	335	;# 
  5167   000150                     C1TXQCONL       equ	336	;# 
  5168   000151                     C1TXQCONH       equ	337	;# 
  5169   000152                     C1TXQCONU       equ	338	;# 
  5170   000153                     C1TXQCONT       equ	339	;# 
  5171   000154                     C1TXQSTAL       equ	340	;# 
  5172   000155                     C1TXQSTAH       equ	341	;# 
  5173   000156                     C1TXQSTAU       equ	342	;# 
  5174   000157                     C1TXQSTAT       equ	343	;# 
  5175   000158                     C1TXQUA         equ	344	;# 
  5176   000158                     C1TXQUAL        equ	344	;# 
  5177   000159                     C1TXQUAH        equ	345	;# 
  5178   00015A                     C1TXQUAU        equ	346	;# 
  5179   00015B                     C1TXQUAT        equ	347	;# 
  5180   00015C                     C1FIFOCON1      equ	348	;# 
  5181   00015C                     C1FIFOCON1L     equ	348	;# 
  5182   00015D                     C1FIFOCON1H     equ	349	;# 
  5183   00015E                     C1FIFOCON1U     equ	350	;# 
  5184   00015F                     C1FIFOCON1T     equ	351	;# 
  5185   000160                     C1FIFOSTA1      equ	352	;# 
  5186   000160                     C1FIFOSTA1L     equ	352	;# 
  5187   000161                     C1FIFOSTA1H     equ	353	;# 
  5188   000162                     C1FIFOSTA1U     equ	354	;# 
  5189   000163                     C1FIFOSTA1T     equ	355	;# 
  5190   000164                     C1FIFOUA1       equ	356	;# 
  5191   000164                     C1FIFOUA1L      equ	356	;# 
  5192   000165                     C1FIFOUA1H      equ	357	;# 
  5193   000166                     C1FIFOUA1U      equ	358	;# 
  5194   000167                     C1FIFOUA1T      equ	359	;# 
  5195   000168                     C1FIFOCON2      equ	360	;# 
  5196   000168                     C1FIFOCON2L     equ	360	;# 
  5197   000169                     C1FIFOCON2H     equ	361	;# 
  5198   00016A                     C1FIFOCON2U     equ	362	;# 
  5199   00016B                     C1FIFOCON2T     equ	363	;# 
  5200   00016C                     C1FIFOSTA2      equ	364	;# 
  5201   00016C                     C1FIFOSTA2L     equ	364	;# 
  5202   00016D                     C1FIFOSTA2H     equ	365	;# 
  5203   00016E                     C1FIFOSTA2U     equ	366	;# 
  5204   00016F                     C1FIFOSTA2T     equ	367	;# 
  5205   000170                     C1FIFOUA2       equ	368	;# 
  5206   000170                     C1FIFOUA2L      equ	368	;# 
  5207   000171                     C1FIFOUA2H      equ	369	;# 
  5208   000172                     C1FIFOUA2U      equ	370	;# 
  5209   000173                     C1FIFOUA2T      equ	371	;# 
  5210   000174                     C1FIFOCON3      equ	372	;# 
  5211   000174                     C1FIFOCON3L     equ	372	;# 
  5212   000175                     C1FIFOCON3H     equ	373	;# 
  5213   000176                     C1FIFOCON3U     equ	374	;# 
  5214   000177                     C1FIFOCON3T     equ	375	;# 
  5215   000178                     C1FIFOSTA3      equ	376	;# 
  5216   000178                     C1FIFOSTA3L     equ	376	;# 
  5217   000179                     C1FIFOSTA3H     equ	377	;# 
  5218   00017A                     C1FIFOSTA3U     equ	378	;# 
  5219   00017B                     C1FIFOSTA3T     equ	379	;# 
  5220   00017C                     C1FIFOUA3       equ	380	;# 
  5221   00017C                     C1FIFOUA3L      equ	380	;# 
  5222   00017D                     C1FIFOUA3H      equ	381	;# 
  5223   00017E                     C1FIFOUA3U      equ	382	;# 
  5224   00017F                     C1FIFOUA3T      equ	383	;# 
  5225   000180                     C1FLTCON0L      equ	384	;# 
  5226   000181                     C1FLTCON0H      equ	385	;# 
  5227   000182                     C1FLTCON0U      equ	386	;# 
  5228   000183                     C1FLTCON0T      equ	387	;# 
  5229   000184                     C1FLTCON1L      equ	388	;# 
  5230   000185                     C1FLTCON1H      equ	389	;# 
  5231   000186                     C1FLTCON1U      equ	390	;# 
  5232   000187                     C1FLTCON1T      equ	391	;# 
  5233   000188                     C1FLTCON2L      equ	392	;# 
  5234   000189                     C1FLTCON2H      equ	393	;# 
  5235   00018A                     C1FLTCON2U      equ	394	;# 
  5236   00018B                     C1FLTCON2T      equ	395	;# 
  5237   00018C                     C1FLTOBJ0       equ	396	;# 
  5238   00018C                     C1FLTOBJ0L      equ	396	;# 
  5239   00018D                     C1FLTOBJ0H      equ	397	;# 
  5240   00018E                     C1FLTOBJ0U      equ	398	;# 
  5241   00018F                     C1FLTOBJ0T      equ	399	;# 
  5242   000190                     C1MASK0         equ	400	;# 
  5243   000190                     C1MASK0L        equ	400	;# 
  5244   000191                     C1MASK0H        equ	401	;# 
  5245   000192                     C1MASK0U        equ	402	;# 
  5246   000193                     C1MASK0T        equ	403	;# 
  5247   000194                     C1FLTOBJ1       equ	404	;# 
  5248   000194                     C1FLTOBJ1L      equ	404	;# 
  5249   000195                     C1FLTOBJ1H      equ	405	;# 
  5250   000196                     C1FLTOBJ1U      equ	406	;# 
  5251   000197                     C1FLTOBJ1T      equ	407	;# 
  5252   000198                     C1MASK1         equ	408	;# 
  5253   000198                     C1MASK1L        equ	408	;# 
  5254   000199                     C1MASK1H        equ	409	;# 
  5255   00019A                     C1MASK1U        equ	410	;# 
  5256   00019B                     C1MASK1T        equ	411	;# 
  5257   00019C                     C1FLTOBJ2       equ	412	;# 
  5258   00019C                     C1FLTOBJ2L      equ	412	;# 
  5259   00019D                     C1FLTOBJ2H      equ	413	;# 
  5260   00019E                     C1FLTOBJ2U      equ	414	;# 
  5261   00019F                     C1FLTOBJ2T      equ	415	;# 
  5262   0001A0                     C1MASK2         equ	416	;# 
  5263   0001A0                     C1MASK2L        equ	416	;# 
  5264   0001A1                     C1MASK2H        equ	417	;# 
  5265   0001A2                     C1MASK2U        equ	418	;# 
  5266   0001A3                     C1MASK2T        equ	419	;# 
  5267   0001A4                     C1FLTOBJ3       equ	420	;# 
  5268   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5269   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5270   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5271   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5272   0001A8                     C1MASK3         equ	424	;# 
  5273   0001A8                     C1MASK3L        equ	424	;# 
  5274   0001A9                     C1MASK3H        equ	425	;# 
  5275   0001AA                     C1MASK3U        equ	426	;# 
  5276   0001AB                     C1MASK3T        equ	427	;# 
  5277   0001AC                     C1FLTOBJ4       equ	428	;# 
  5278   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5279   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5280   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5281   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5282   0001B0                     C1MASK4         equ	432	;# 
  5283   0001B0                     C1MASK4L        equ	432	;# 
  5284   0001B1                     C1MASK4H        equ	433	;# 
  5285   0001B2                     C1MASK4U        equ	434	;# 
  5286   0001B3                     C1MASK4T        equ	435	;# 
  5287   0001B4                     C1FLTOBJ5       equ	436	;# 
  5288   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5289   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5290   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5291   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5292   0001B8                     C1MASK5         equ	440	;# 
  5293   0001B8                     C1MASK5L        equ	440	;# 
  5294   0001B9                     C1MASK5H        equ	441	;# 
  5295   0001BA                     C1MASK5U        equ	442	;# 
  5296   0001BB                     C1MASK5T        equ	443	;# 
  5297   0001BC                     C1FLTOBJ6       equ	444	;# 
  5298   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5299   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5300   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5301   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5302   0001C0                     C1MASK6         equ	448	;# 
  5303   0001C0                     C1MASK6L        equ	448	;# 
  5304   0001C1                     C1MASK6H        equ	449	;# 
  5305   0001C2                     C1MASK6U        equ	450	;# 
  5306   0001C3                     C1MASK6T        equ	451	;# 
  5307   0001C4                     C1FLTOBJ7       equ	452	;# 
  5308   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5309   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5310   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5311   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5312   0001C8                     C1MASK7         equ	456	;# 
  5313   0001C8                     C1MASK7L        equ	456	;# 
  5314   0001C9                     C1MASK7H        equ	457	;# 
  5315   0001CA                     C1MASK7U        equ	458	;# 
  5316   0001CB                     C1MASK7T        equ	459	;# 
  5317   0001CC                     C1FLTOBJ8       equ	460	;# 
  5318   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5319   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5320   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5321   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5322   0001D0                     C1MASK8         equ	464	;# 
  5323   0001D0                     C1MASK8L        equ	464	;# 
  5324   0001D1                     C1MASK8H        equ	465	;# 
  5325   0001D2                     C1MASK8U        equ	466	;# 
  5326   0001D3                     C1MASK8T        equ	467	;# 
  5327   0001D4                     C1FLTOBJ9       equ	468	;# 
  5328   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5329   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5330   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5331   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5332   0001D8                     C1MASK9         equ	472	;# 
  5333   0001D8                     C1MASK9L        equ	472	;# 
  5334   0001D9                     C1MASK9H        equ	473	;# 
  5335   0001DA                     C1MASK9U        equ	474	;# 
  5336   0001DB                     C1MASK9T        equ	475	;# 
  5337   0001DC                     C1FLTOBJ10      equ	476	;# 
  5338   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5339   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5340   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5341   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5342   0001E0                     C1MASK10        equ	480	;# 
  5343   0001E0                     C1MASK10L       equ	480	;# 
  5344   0001E1                     C1MASK10H       equ	481	;# 
  5345   0001E2                     C1MASK10U       equ	482	;# 
  5346   0001E3                     C1MASK10T       equ	483	;# 
  5347   0001E4                     C1FLTOBJ11      equ	484	;# 
  5348   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5349   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5350   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5351   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5352   0001E8                     C1MASK11        equ	488	;# 
  5353   0001E8                     C1MASK11L       equ	488	;# 
  5354   0001E9                     C1MASK11H       equ	489	;# 
  5355   0001EA                     C1MASK11U       equ	490	;# 
  5356   0001EB                     C1MASK11T       equ	491	;# 
  5357   000200                     PPSLOCK         equ	512	;# 
  5358   000201                     RA0PPS          equ	513	;# 
  5359   000202                     RA1PPS          equ	514	;# 
  5360   000203                     RA2PPS          equ	515	;# 
  5361   000204                     RA3PPS          equ	516	;# 
  5362   000205                     RA4PPS          equ	517	;# 
  5363   000206                     RA5PPS          equ	518	;# 
  5364   000207                     RA6PPS          equ	519	;# 
  5365   000208                     RA7PPS          equ	520	;# 
  5366   000209                     RB0PPS          equ	521	;# 
  5367   00020A                     RB1PPS          equ	522	;# 
  5368   00020B                     RB2PPS          equ	523	;# 
  5369   00020C                     RB3PPS          equ	524	;# 
  5370   00020D                     RB4PPS          equ	525	;# 
  5371   00020E                     RB5PPS          equ	526	;# 
  5372   00020F                     RB6PPS          equ	527	;# 
  5373   000210                     RB7PPS          equ	528	;# 
  5374   000211                     RC0PPS          equ	529	;# 
  5375   000212                     RC1PPS          equ	530	;# 
  5376   000213                     RC2PPS          equ	531	;# 
  5377   000214                     RC3PPS          equ	532	;# 
  5378   000215                     RC4PPS          equ	533	;# 
  5379   000216                     RC5PPS          equ	534	;# 
  5380   000217                     RC6PPS          equ	535	;# 
  5381   000218                     RC7PPS          equ	536	;# 
  5382   00023D                     CANRXPPS        equ	573	;# 
  5383   00023E                     INT0PPS         equ	574	;# 
  5384   00023F                     INT1PPS         equ	575	;# 
  5385   000240                     INT2PPS         equ	576	;# 
  5386   000241                     T0CKIPPS        equ	577	;# 
  5387   000242                     T1CKIPPS        equ	578	;# 
  5388   000243                     T1GPPS          equ	579	;# 
  5389   000244                     T3CKIPPS        equ	580	;# 
  5390   000245                     T3GPPS          equ	581	;# 
  5391   000246                     T5CKIPPS        equ	582	;# 
  5392   000247                     T5GPPS          equ	583	;# 
  5393   000248                     T2INPPS         equ	584	;# 
  5394   000249                     T4INPPS         equ	585	;# 
  5395   00024A                     T6INPPS         equ	586	;# 
  5396   00024B                     TUIN0PPS        equ	587	;# 
  5397   00024C                     TUIN1PPS        equ	588	;# 
  5398   00024F                     CCP1PPS         equ	591	;# 
  5399   000250                     CCP2PPS         equ	592	;# 
  5400   000251                     CCP3PPS         equ	593	;# 
  5401   000253                     PWM1ERSPPS      equ	595	;# 
  5402   000254                     PWM2ERSPPS      equ	596	;# 
  5403   000255                     PWM3ERSPPS      equ	597	;# 
  5404   000256                     PWM4ERSPPS      equ	598	;# 
  5405   000257                     PWMIN0PPS       equ	599	;# 
  5406   000258                     PWMIN1PPS       equ	600	;# 
  5407   000259                     SMT1WINPPS      equ	601	;# 
  5408   00025A                     SMT1SIGPPS      equ	602	;# 
  5409   00025B                     CWG1PPS         equ	603	;# 
  5410   00025B                     CWG1INPPS       equ	603	;# 
  5411   00025C                     CWG2PPS         equ	604	;# 
  5412   00025C                     CWG2INPPS       equ	604	;# 
  5413   00025D                     CWG3PPS         equ	605	;# 
  5414   00025D                     CWG3INPPS       equ	605	;# 
  5415   00025E                     MD1CARLPPS      equ	606	;# 
  5416   00025E                     MDCARLPPS       equ	606	;# 
  5417   00025F                     MD1CARHPPS      equ	607	;# 
  5418   00025F                     MDCARHPPS       equ	607	;# 
  5419   000260                     MD1SRCPPS       equ	608	;# 
  5420   000260                     MDSRCPPS        equ	608	;# 
  5421   000261                     CLCIN0PPS       equ	609	;# 
  5422   000262                     CLCIN1PPS       equ	610	;# 
  5423   000263                     CLCIN2PPS       equ	611	;# 
  5424   000264                     CLCIN3PPS       equ	612	;# 
  5425   000265                     CLCIN4PPS       equ	613	;# 
  5426   000266                     CLCIN5PPS       equ	614	;# 
  5427   000267                     CLCIN6PPS       equ	615	;# 
  5428   000268                     CLCIN7PPS       equ	616	;# 
  5429   000269                     ADACTPPS        equ	617	;# 
  5430   00026A                     SPI1SCKPPS      equ	618	;# 
  5431   00026B                     SPI1SDIPPS      equ	619	;# 
  5432   00026C                     SPI1SSPPS       equ	620	;# 
  5433   00026D                     SPI2SCKPPS      equ	621	;# 
  5434   00026E                     SPI2SDIPPS      equ	622	;# 
  5435   00026F                     SPI2SSPPS       equ	623	;# 
  5436   000270                     I2C1SDAPPS      equ	624	;# 
  5437   000271                     I2C1SCLPPS      equ	625	;# 
  5438   000272                     U1RXPPS         equ	626	;# 
  5439   000273                     U1CTSPPS        equ	627	;# 
  5440   000274                     U2RXPPS         equ	628	;# 
  5441   000275                     U2CTSPPS        equ	629	;# 
  5442   000276                     U3RXPPS         equ	630	;# 
  5443   000277                     U3CTSPPS        equ	631	;# 
  5444   000278                     U4RXPPS         equ	632	;# 
  5445   000279                     U4CTSPPS        equ	633	;# 
  5446   00027A                     U5RXPPS         equ	634	;# 
  5447   00027B                     U5CTSPPS        equ	635	;# 
  5448   000286                     RC4I2C          equ	646	;# 
  5449   000287                     RC3I2C          equ	647	;# 
  5450   000288                     RB2I2C          equ	648	;# 
  5451   000289                     RB1I2C          equ	649	;# 
  5452   00028A                     I2C1RXB         equ	650	;# 
  5453   00028B                     I2C1TXB         equ	651	;# 
  5454   00028C                     I2C1CNTL        equ	652	;# 
  5455   00028D                     I2C1CNTH        equ	653	;# 
  5456   00028E                     I2C1ADB0        equ	654	;# 
  5457   00028F                     I2C1ADB1        equ	655	;# 
  5458   000290                     I2C1ADR0        equ	656	;# 
  5459   000291                     I2C1ADR1        equ	657	;# 
  5460   000292                     I2C1ADR2        equ	658	;# 
  5461   000293                     I2C1ADR3        equ	659	;# 
  5462   000294                     I2C1CON0        equ	660	;# 
  5463   000295                     I2C1CON1        equ	661	;# 
  5464   000296                     I2C1CON2        equ	662	;# 
  5465   000297                     I2C1ERR         equ	663	;# 
  5466   000298                     I2C1STAT0       equ	664	;# 
  5467   000299                     I2C1STAT1       equ	665	;# 
  5468   00029A                     I2C1PIR         equ	666	;# 
  5469   00029B                     I2C1PIE         equ	667	;# 
  5470   00029C                     I2C1BTO         equ	668	;# 
  5471   00029D                     I2C1BAUD        equ	669	;# 
  5472   00029E                     I2C1CLK         equ	670	;# 
  5473   00029F                     I2C1BTOC        equ	671	;# 
  5474   0002A1                     U1RXB           equ	673	;# 
  5475   0002A1                     U1RXBL          equ	673	;# 
  5476   0002A2                     U1RXCHK         equ	674	;# 
  5477   0002A3                     U1TXB           equ	675	;# 
  5478   0002A3                     U1TXBL          equ	675	;# 
  5479   0002A4                     U1TXCHK         equ	676	;# 
  5480   0002A5                     U1P1            equ	677	;# 
  5481   0002A5                     U1P1L           equ	677	;# 
  5482   0002A6                     U1P1H           equ	678	;# 
  5483   0002A7                     U1P2            equ	679	;# 
  5484   0002A7                     U1P2L           equ	679	;# 
  5485   0002A8                     U1P2H           equ	680	;# 
  5486   0002A9                     U1P3            equ	681	;# 
  5487   0002A9                     U1P3L           equ	681	;# 
  5488   0002AA                     U1P3H           equ	682	;# 
  5489   0002AB                     U1CON0          equ	683	;# 
  5490   0002AC                     U1CON1          equ	684	;# 
  5491   0002AD                     U1CON2          equ	685	;# 
  5492   0002AE                     U1BRG           equ	686	;# 
  5493   0002AE                     U1BRGL          equ	686	;# 
  5494   0002AF                     U1BRGH          equ	687	;# 
  5495   0002B0                     U1FIFO          equ	688	;# 
  5496   0002B1                     U1UIR           equ	689	;# 
  5497   0002B2                     U1ERRIR         equ	690	;# 
  5498   0002B3                     U1ERRIE         equ	691	;# 
  5499   0002B4                     U2RXB           equ	692	;# 
  5500   0002B4                     U2RXBL          equ	692	;# 
  5501   0002B5                     U2RXCHK         equ	693	;# 
  5502   0002B6                     U2TXB           equ	694	;# 
  5503   0002B6                     U2TXBL          equ	694	;# 
  5504   0002B7                     U2TXCHK         equ	695	;# 
  5505   0002B8                     U2P1            equ	696	;# 
  5506   0002B8                     U2P1L           equ	696	;# 
  5507   0002B9                     U2P1H           equ	697	;# 
  5508   0002BA                     U2P2            equ	698	;# 
  5509   0002BA                     U2P2L           equ	698	;# 
  5510   0002BB                     U2P2H           equ	699	;# 
  5511   0002BC                     U2P3            equ	700	;# 
  5512   0002BC                     U2P3L           equ	700	;# 
  5513   0002BD                     U2P3H           equ	701	;# 
  5514   0002BE                     U2CON0          equ	702	;# 
  5515   0002BF                     U2CON1          equ	703	;# 
  5516   0002C0                     U2CON2          equ	704	;# 
  5517   0002C1                     U2BRG           equ	705	;# 
  5518   0002C1                     U2BRGL          equ	705	;# 
  5519   0002C2                     U2BRGH          equ	706	;# 
  5520   0002C3                     U2FIFO          equ	707	;# 
  5521   0002C4                     U2UIR           equ	708	;# 
  5522   0002C5                     U2ERRIR         equ	709	;# 
  5523   0002C6                     U2ERRIE         equ	710	;# 
  5524   0002C7                     U3RXB           equ	711	;# 
  5525   0002C7                     U3RXBL          equ	711	;# 
  5526   0002C9                     U3TXB           equ	713	;# 
  5527   0002C9                     U3TXBL          equ	713	;# 
  5528   0002CB                     U3P1            equ	715	;# 
  5529   0002CB                     U3P1L           equ	715	;# 
  5530   0002CD                     U3P2            equ	717	;# 
  5531   0002CD                     U3P2L           equ	717	;# 
  5532   0002CF                     U3P3            equ	719	;# 
  5533   0002CF                     U3P3L           equ	719	;# 
  5534   0002D1                     U3CON0          equ	721	;# 
  5535   0002D2                     U3CON1          equ	722	;# 
  5536   0002D3                     U3CON2          equ	723	;# 
  5537   0002D4                     U3BRG           equ	724	;# 
  5538   0002D4                     U3BRGL          equ	724	;# 
  5539   0002D5                     U3BRGH          equ	725	;# 
  5540   0002D6                     U3FIFO          equ	726	;# 
  5541   0002D7                     U3UIR           equ	727	;# 
  5542   0002D8                     U3ERRIR         equ	728	;# 
  5543   0002D9                     U3ERRIE         equ	729	;# 
  5544   0002DA                     U4RXB           equ	730	;# 
  5545   0002DA                     U4RXBL          equ	730	;# 
  5546   0002DC                     U4TXB           equ	732	;# 
  5547   0002DC                     U4TXBL          equ	732	;# 
  5548   0002DE                     U4P1            equ	734	;# 
  5549   0002DE                     U4P1L           equ	734	;# 
  5550   0002E0                     U4P2            equ	736	;# 
  5551   0002E0                     U4P2L           equ	736	;# 
  5552   0002E2                     U4P3            equ	738	;# 
  5553   0002E2                     U4P3L           equ	738	;# 
  5554   0002E4                     U4CON0          equ	740	;# 
  5555   0002E5                     U4CON1          equ	741	;# 
  5556   0002E6                     U4CON2          equ	742	;# 
  5557   0002E7                     U4BRG           equ	743	;# 
  5558   0002E7                     U4BRGL          equ	743	;# 
  5559   0002E8                     U4BRGH          equ	744	;# 
  5560   0002E9                     U4FIFO          equ	745	;# 
  5561   0002EA                     U4UIR           equ	746	;# 
  5562   0002EB                     U4ERRIR         equ	747	;# 
  5563   0002EC                     U4ERRIE         equ	748	;# 
  5564   0002ED                     U5RXB           equ	749	;# 
  5565   0002ED                     U5RXBL          equ	749	;# 
  5566   0002EF                     U5TXB           equ	751	;# 
  5567   0002EF                     U5TXBL          equ	751	;# 
  5568   0002F1                     U5P1            equ	753	;# 
  5569   0002F1                     U5P1L           equ	753	;# 
  5570   0002F3                     U5P2            equ	755	;# 
  5571   0002F3                     U5P2L           equ	755	;# 
  5572   0002F5                     U5P3            equ	757	;# 
  5573   0002F5                     U5P3L           equ	757	;# 
  5574   0002F7                     U5CON0          equ	759	;# 
  5575   0002F8                     U5CON1          equ	760	;# 
  5576   0002F9                     U5CON2          equ	761	;# 
  5577   0002FA                     U5BRG           equ	762	;# 
  5578   0002FA                     U5BRGL          equ	762	;# 
  5579   0002FB                     U5BRGH          equ	763	;# 
  5580   0002FC                     U5FIFO          equ	764	;# 
  5581   0002FD                     U5UIR           equ	765	;# 
  5582   0002FE                     U5ERRIR         equ	766	;# 
  5583   0002FF                     U5ERRIE         equ	767	;# 
  5584   000300                     SMT1TMR         equ	768	;# 
  5585   000300                     SMT1TMRL        equ	768	;# 
  5586   000301                     SMT1TMRH        equ	769	;# 
  5587   000302                     SMT1TMRU        equ	770	;# 
  5588   000303                     SMT1CPR         equ	771	;# 
  5589   000303                     SMT1CPRL        equ	771	;# 
  5590   000304                     SMT1CPRH        equ	772	;# 
  5591   000305                     SMT1CPRU        equ	773	;# 
  5592   000306                     SMT1CPW         equ	774	;# 
  5593   000306                     SMT1CPWL        equ	774	;# 
  5594   000307                     SMT1CPWH        equ	775	;# 
  5595   000308                     SMT1CPWU        equ	776	;# 
  5596   000309                     SMT1PR          equ	777	;# 
  5597   000309                     SMT1PRL         equ	777	;# 
  5598   00030A                     SMT1PRH         equ	778	;# 
  5599   00030B                     SMT1PRU         equ	779	;# 
  5600   00030C                     SMT1CON0        equ	780	;# 
  5601   00030D                     SMT1CON1        equ	781	;# 
  5602   00030E                     SMT1STAT        equ	782	;# 
  5603   00030F                     SMT1CLK         equ	783	;# 
  5604   000310                     SMT1SIG         equ	784	;# 
  5605   000311                     SMT1WIN         equ	785	;# 
  5606   000318                     TMR0L           equ	792	;# 
  5607   000318                     TMR0            equ	792	;# 
  5608   000319                     TMR0H           equ	793	;# 
  5609   000319                     PR0             equ	793	;# 
  5610   00031A                     T0CON0          equ	794	;# 
  5611   00031B                     T0CON1          equ	795	;# 
  5612   00031C                     TMR1            equ	796	;# 
  5613   00031C                     TMR1L           equ	796	;# 
  5614   00031D                     TMR1H           equ	797	;# 
  5615   00031E                     T1CON           equ	798	;# 
  5616   00031E                     TMR1CON         equ	798	;# 
  5617   00031F                     T1GCON          equ	799	;# 
  5618   00031F                     TMR1GCON        equ	799	;# 
  5619   000320                     T1GATE          equ	800	;# 
  5620   000320                     TMR1GATE        equ	800	;# 
  5621   000321                     T1CLK           equ	801	;# 
  5622   000321                     TMR1CLK         equ	801	;# 
  5623   000321                     PR1             equ	801	;# 
  5624   000322                     T2TMR           equ	802	;# 
  5625   000322                     TMR2            equ	802	;# 
  5626   000323                     T2PR            equ	803	;# 
  5627   000323                     PR2             equ	803	;# 
  5628   000324                     T2CON           equ	804	;# 
  5629   000325                     T2HLT           equ	805	;# 
  5630   000326                     T2CLKCON        equ	806	;# 
  5631   000326                     T2CLK           equ	806	;# 
  5632   000327                     T2RST           equ	807	;# 
  5633   000328                     TMR3            equ	808	;# 
  5634   000328                     TMR3L           equ	808	;# 
  5635   000329                     TMR3H           equ	809	;# 
  5636   00032A                     T3CON           equ	810	;# 
  5637   00032A                     TMR3CON         equ	810	;# 
  5638   00032B                     T3GCON          equ	811	;# 
  5639   00032B                     TMR3GCON        equ	811	;# 
  5640   00032C                     T3GATE          equ	812	;# 
  5641   00032C                     TMR3GATE        equ	812	;# 
  5642   00032D                     T3CLK           equ	813	;# 
  5643   00032D                     TMR3CLK         equ	813	;# 
  5644   00032D                     PR3             equ	813	;# 
  5645   00032E                     T4TMR           equ	814	;# 
  5646   00032E                     TMR4            equ	814	;# 
  5647   00032F                     T4PR            equ	815	;# 
  5648   00032F                     PR4             equ	815	;# 
  5649   000330                     T4CON           equ	816	;# 
  5650   000331                     T4HLT           equ	817	;# 
  5651   000332                     T4CLKCON        equ	818	;# 
  5652   000332                     T4CLK           equ	818	;# 
  5653   000333                     T4RST           equ	819	;# 
  5654   000334                     TMR5            equ	820	;# 
  5655   000334                     TMR5L           equ	820	;# 
  5656   000335                     TMR5H           equ	821	;# 
  5657   000336                     T5CON           equ	822	;# 
  5658   000336                     TMR5CON         equ	822	;# 
  5659   000337                     T5GCON          equ	823	;# 
  5660   000337                     TMR5GCON        equ	823	;# 
  5661   000338                     T5GATE          equ	824	;# 
  5662   000338                     TMR5GATE        equ	824	;# 
  5663   000339                     T5CLK           equ	825	;# 
  5664   000339                     TMR5CLK         equ	825	;# 
  5665   000339                     PR5             equ	825	;# 
  5666   00033A                     T6TMR           equ	826	;# 
  5667   00033A                     TMR6            equ	826	;# 
  5668   00033B                     T6PR            equ	827	;# 
  5669   00033B                     PR6             equ	827	;# 
  5670   00033C                     T6CON           equ	828	;# 
  5671   00033D                     T6HLT           equ	829	;# 
  5672   00033E                     T6CLKCON        equ	830	;# 
  5673   00033E                     T6CLK           equ	830	;# 
  5674   00033F                     T6RST           equ	831	;# 
  5675   000340                     CCPR1           equ	832	;# 
  5676   000340                     CCPR1L          equ	832	;# 
  5677   000341                     CCPR1H          equ	833	;# 
  5678   000342                     CCP1CON         equ	834	;# 
  5679   000343                     CCP1CAP         equ	835	;# 
  5680   000344                     CCPR2           equ	836	;# 
  5681   000344                     CCPR2L          equ	836	;# 
  5682   000345                     CCPR2H          equ	837	;# 
  5683   000346                     CCP2CON         equ	838	;# 
  5684   000347                     CCP2CAP         equ	839	;# 
  5685   000348                     CCPR3           equ	840	;# 
  5686   000348                     CCPR3L          equ	840	;# 
  5687   000349                     CCPR3H          equ	841	;# 
  5688   00034A                     CCP3CON         equ	842	;# 
  5689   00034B                     CCP3CAP         equ	843	;# 
  5690   00034C                     CCPTMRS0        equ	844	;# 
  5691   00034F                     CRCDATA         equ	847	;# 
  5692   00034F                     CRCDATAL        equ	847	;# 
  5693   000350                     CRCDATAH        equ	848	;# 
  5694   000351                     CRCDATAU        equ	849	;# 
  5695   000352                     CRCDATAT        equ	850	;# 
  5696   000353                     CRCOUT          equ	851	;# 
  5697   000353                     CRCSHFT         equ	851	;# 
  5698   000353                     CRCXOR          equ	851	;# 
  5699   000353                     CRCOUTL         equ	851	;# 
  5700   000353                     CRCSHFTL        equ	851	;# 
  5701   000353                     CRCSHIFTL       equ	851	;# 
  5702   000353                     CRCXORL         equ	851	;# 
  5703   000354                     CRCOUTH         equ	852	;# 
  5704   000354                     CRCSHFTH        equ	852	;# 
  5705   000354                     CRCSHIFTH       equ	852	;# 
  5706   000354                     CRCXORH         equ	852	;# 
  5707   000355                     CRCOUTU         equ	853	;# 
  5708   000355                     CRCSHFTU        equ	853	;# 
  5709   000355                     CRCSHIFTU       equ	853	;# 
  5710   000355                     CRCXORU         equ	853	;# 
  5711   000356                     CRCOUTT         equ	854	;# 
  5712   000356                     CRCSHFTT        equ	854	;# 
  5713   000356                     CRCSHIFTT       equ	854	;# 
  5714   000356                     CRCXORT         equ	854	;# 
  5715   000357                     CRCCON0         equ	855	;# 
  5716   000358                     CRCCON1         equ	856	;# 
  5717   000359                     CRCCON2         equ	857	;# 
  5718   00035A                     SCANLADR        equ	858	;# 
  5719   00035A                     SCANLADRL       equ	858	;# 
  5720   00035B                     SCANLADRH       equ	859	;# 
  5721   00035C                     SCANLADRU       equ	860	;# 
  5722   00035D                     SCANHADR        equ	861	;# 
  5723   00035D                     SCANHADRL       equ	861	;# 
  5724   00035E                     SCANHADRH       equ	862	;# 
  5725   00035F                     SCANHADRU       equ	863	;# 
  5726   000360                     SCANCON0        equ	864	;# 
  5727   000361                     SCANTRIG        equ	865	;# 
  5728   000362                     IPR0            equ	866	;# 
  5729   000363                     IPR1            equ	867	;# 
  5730   000364                     IPR2            equ	868	;# 
  5731   000365                     IPR3            equ	869	;# 
  5732   000366                     IPR4            equ	870	;# 
  5733   000367                     IPR5            equ	871	;# 
  5734   000368                     IPR6            equ	872	;# 
  5735   000369                     IPR7            equ	873	;# 
  5736   00036A                     IPR8            equ	874	;# 
  5737   00036B                     IPR9            equ	875	;# 
  5738   00036C                     IPR10           equ	876	;# 
  5739   00036D                     IPR11           equ	877	;# 
  5740   00036E                     IPR12           equ	878	;# 
  5741   00036F                     IPR13           equ	879	;# 
  5742   000370                     IPR14           equ	880	;# 
  5743   000371                     IPR15           equ	881	;# 
  5744   000373                     STATUS_CSHAD    equ	883	;# 
  5745   000374                     WREG_CSHAD      equ	884	;# 
  5746   000375                     BSR_CSHAD       equ	885	;# 
  5747   000376                     SHADCON         equ	886	;# 
  5748   000377                     STATUS_SHAD     equ	887	;# 
  5749   000378                     WREG_SHAD       equ	888	;# 
  5750   000379                     BSR_SHAD        equ	889	;# 
  5751   00037A                     PCLATH_SHAD     equ	890	;# 
  5752   00037B                     PCLATU_SHAD     equ	891	;# 
  5753   00037C                     FSR0SH          equ	892	;# 
  5754   00037C                     FSR0L_SHAD      equ	892	;# 
  5755   00037D                     FSR0H_SHAD      equ	893	;# 
  5756   00037E                     FSR1SH          equ	894	;# 
  5757   00037E                     FSR1L_SHAD      equ	894	;# 
  5758   00037F                     FSR1H_SHAD      equ	895	;# 
  5759   000380                     FSR2SH          equ	896	;# 
  5760   000380                     FSR2L_SHAD      equ	896	;# 
  5761   000381                     FSR2H_SHAD      equ	897	;# 
  5762   000382                     PRODSH          equ	898	;# 
  5763   000382                     PRODL_SHAD      equ	898	;# 
  5764   000383                     PRODH_SHAD      equ	899	;# 
  5765   000387                     TU16ACON0       equ	903	;# 
  5766   000388                     TU16ACON1       equ	904	;# 
  5767   000389                     TU16AHLT        equ	905	;# 
  5768   00038A                     TU16APS         equ	906	;# 
  5769   00038B                     TU16ATMR        equ	907	;# 
  5770   00038B                     TU16ACR         equ	907	;# 
  5771   00038B                     TU16ATMRL       equ	907	;# 
  5772   00038B                     TU16ACRL        equ	907	;# 
  5773   00038C                     TU16ATMRH       equ	908	;# 
  5774   00038C                     TU16ACRH        equ	908	;# 
  5775   00038D                     TU16APR         equ	909	;# 
  5776   00038D                     TU16APRL        equ	909	;# 
  5777   00038E                     TU16APRH        equ	910	;# 
  5778   00038F                     TU16ACLK        equ	911	;# 
  5779   000390                     TU16AERS        equ	912	;# 
  5780   000393                     TU16BCON0       equ	915	;# 
  5781   000394                     TU16BCON1       equ	916	;# 
  5782   000395                     TU16BHLT        equ	917	;# 
  5783   000396                     TU16BPS         equ	918	;# 
  5784   000397                     TU16BTMR        equ	919	;# 
  5785   000397                     TU16BCR         equ	919	;# 
  5786   000397                     TU16BTMRL       equ	919	;# 
  5787   000397                     TU16BCRL        equ	919	;# 
  5788   000398                     TU16BTMRH       equ	920	;# 
  5789   000398                     TU16BCRH        equ	920	;# 
  5790   000399                     TU16BPR         equ	921	;# 
  5791   000399                     TU16BPRL        equ	921	;# 
  5792   00039A                     TU16BPRH        equ	922	;# 
  5793   00039B                     TU16BCLK        equ	923	;# 
  5794   00039C                     TU16BERS        equ	924	;# 
  5795   0003BB                     TUCHAIN         equ	955	;# 
  5796   0003BC                     CWG1CLK         equ	956	;# 
  5797   0003BC                     CWG1CLKCON      equ	956	;# 
  5798   0003BD                     CWG1ISM         equ	957	;# 
  5799   0003BE                     CWG1DBR         equ	958	;# 
  5800   0003BF                     CWG1DBF         equ	959	;# 
  5801   0003C0                     CWG1CON0        equ	960	;# 
  5802   0003C1                     CWG1CON1        equ	961	;# 
  5803   0003C2                     CWG1AS0         equ	962	;# 
  5804   0003C3                     CWG1AS1         equ	963	;# 
  5805   0003C4                     CWG1STR         equ	964	;# 
  5806   0003C5                     CWG2CLK         equ	965	;# 
  5807   0003C5                     CWG2CLKCON      equ	965	;# 
  5808   0003C6                     CWG2ISM         equ	966	;# 
  5809   0003C7                     CWG2DBR         equ	967	;# 
  5810   0003C8                     CWG2DBF         equ	968	;# 
  5811   0003C9                     CWG2CON0        equ	969	;# 
  5812   0003CA                     CWG2CON1        equ	970	;# 
  5813   0003CB                     CWG2AS0         equ	971	;# 
  5814   0003CC                     CWG2AS1         equ	972	;# 
  5815   0003CD                     CWG2STR         equ	973	;# 
  5816   0003CE                     CWG3CLK         equ	974	;# 
  5817   0003CE                     CWG3CLKCON      equ	974	;# 
  5818   0003CF                     CWG3ISM         equ	975	;# 
  5819   0003D0                     CWG3DBR         equ	976	;# 
  5820   0003D1                     CWG3DBF         equ	977	;# 
  5821   0003D2                     CWG3CON0        equ	978	;# 
  5822   0003D3                     CWG3CON1        equ	979	;# 
  5823   0003D4                     CWG3AS0         equ	980	;# 
  5824   0003D5                     CWG3AS1         equ	981	;# 
  5825   0003D6                     CWG3STR         equ	982	;# 
  5826   0003D7                     FVRCON          equ	983	;# 
  5827   0003D8                     ADCPCON         equ	984	;# 
  5828   0003D8                     ADCP            equ	984	;# 
  5829   0003D9                     ADLTH           equ	985	;# 
  5830   0003D9                     ADLTHL          equ	985	;# 
  5831   0003DA                     ADLTHH          equ	986	;# 
  5832   0003DB                     ADUTH           equ	987	;# 
  5833   0003DB                     ADUTHL          equ	987	;# 
  5834   0003DC                     ADUTHH          equ	988	;# 
  5835   0003DD                     ADERR           equ	989	;# 
  5836   0003DD                     ADERRL          equ	989	;# 
  5837   0003DE                     ADERRH          equ	990	;# 
  5838   0003DF                     ADSTPT          equ	991	;# 
  5839   0003DF                     ADSTPTL         equ	991	;# 
  5840   0003E0                     ADSTPTH         equ	992	;# 
  5841   0003E1                     ADFLTR          equ	993	;# 
  5842   0003E1                     ADFLTRL         equ	993	;# 
  5843   0003E2                     ADFLTRH         equ	994	;# 
  5844   0003E3                     ADACC           equ	995	;# 
  5845   0003E3                     ADACCL          equ	995	;# 
  5846   0003E4                     ADACCH          equ	996	;# 
  5847   0003E5                     ADACCU          equ	997	;# 
  5848   0003E6                     ADCNT           equ	998	;# 
  5849   0003E7                     ADRPT           equ	999	;# 
  5850   0003E8                     ADPREV          equ	1000	;# 
  5851   0003E8                     ADPREVL         equ	1000	;# 
  5852   0003E9                     ADPREVH         equ	1001	;# 
  5853   0003EA                     ADRES           equ	1002	;# 
  5854   0003EA                     ADRESL          equ	1002	;# 
  5855   0003EB                     ADRESH          equ	1003	;# 
  5856   0003EC                     ADPCH           equ	1004	;# 
  5857   0003EE                     ADACQ           equ	1006	;# 
  5858   0003EE                     ADACQL          equ	1006	;# 
  5859   0003EF                     ADACQH          equ	1007	;# 
  5860   0003F0                     ADCAP           equ	1008	;# 
  5861   0003F1                     ADPRE           equ	1009	;# 
  5862   0003F1                     ADPREL          equ	1009	;# 
  5863   0003F2                     ADPREH          equ	1010	;# 
  5864   0003F3                     ADCON0          equ	1011	;# 
  5865   0003F4                     ADCON1          equ	1012	;# 
  5866   0003F5                     ADCON2          equ	1013	;# 
  5867   0003F6                     ADCON3          equ	1014	;# 
  5868   0003F7                     ADSTAT          equ	1015	;# 
  5869   0003F8                     ADREF           equ	1016	;# 
  5870   0003F9                     ADACT           equ	1017	;# 
  5871   0003FA                     ADCLK           equ	1018	;# 
  5872   0003FB                     ADCTX           equ	1019	;# 
  5873   0003FC                     ADCSEL1         equ	1020	;# 
  5874   0003FD                     ADCSEL2         equ	1021	;# 
  5875   0003FE                     ADCSEL3         equ	1022	;# 
  5876   0003FF                     ADCSEL4         equ	1023	;# 
  5877   000400                     ANSELA          equ	1024	;# 
  5878   000401                     WPUA            equ	1025	;# 
  5879   000402                     ODCONA          equ	1026	;# 
  5880   000403                     SLRCONA         equ	1027	;# 
  5881   000404                     INLVLA          equ	1028	;# 
  5882   000405                     IOCAP           equ	1029	;# 
  5883   000406                     IOCAN           equ	1030	;# 
  5884   000407                     IOCAF           equ	1031	;# 
  5885   000408                     ANSELB          equ	1032	;# 
  5886   000409                     WPUB            equ	1033	;# 
  5887   00040A                     ODCONB          equ	1034	;# 
  5888   00040B                     SLRCONB         equ	1035	;# 
  5889   00040C                     INLVLB          equ	1036	;# 
  5890   00040D                     IOCBP           equ	1037	;# 
  5891   00040E                     IOCBN           equ	1038	;# 
  5892   00040F                     IOCBF           equ	1039	;# 
  5893   000410                     ANSELC          equ	1040	;# 
  5894   000411                     WPUC            equ	1041	;# 
  5895   000412                     ODCONC          equ	1042	;# 
  5896   000413                     SLRCONC         equ	1043	;# 
  5897   000414                     INLVLC          equ	1044	;# 
  5898   000415                     IOCCP           equ	1045	;# 
  5899   000416                     IOCCN           equ	1046	;# 
  5900   000417                     IOCCF           equ	1047	;# 
  5901   000421                     WPUE            equ	1057	;# 
  5902   000424                     INLVLE          equ	1060	;# 
  5903   000425                     IOCEP           equ	1061	;# 
  5904   000426                     IOCEN           equ	1062	;# 
  5905   000427                     IOCEF           equ	1063	;# 
  5906   000440                     NCO1ACC         equ	1088	;# 
  5907   000440                     NCO1ACCL        equ	1088	;# 
  5908   000441                     NCO1ACCH        equ	1089	;# 
  5909   000442                     NCO1ACCU        equ	1090	;# 
  5910   000443                     NCO1INC         equ	1091	;# 
  5911   000443                     NCO1INCL        equ	1091	;# 
  5912   000444                     NCO1INCH        equ	1092	;# 
  5913   000445                     NCO1INCU        equ	1093	;# 
  5914   000446                     NCO1CON         equ	1094	;# 
  5915   000447                     NCO1CLK         equ	1095	;# 
  5916   000448                     NCO2ACC         equ	1096	;# 
  5917   000448                     NCO2ACCL        equ	1096	;# 
  5918   000449                     NCO2ACCH        equ	1097	;# 
  5919   00044A                     NCO2ACCU        equ	1098	;# 
  5920   00044B                     NCO2INC         equ	1099	;# 
  5921   00044B                     NCO2INCL        equ	1099	;# 
  5922   00044C                     NCO2INCH        equ	1100	;# 
  5923   00044D                     NCO2INCU        equ	1101	;# 
  5924   00044E                     NCO2CON         equ	1102	;# 
  5925   00044F                     NCO2CLK         equ	1103	;# 
  5926   000450                     NCO3ACC         equ	1104	;# 
  5927   000450                     NCO3ACCL        equ	1104	;# 
  5928   000451                     NCO3ACCH        equ	1105	;# 
  5929   000452                     NCO3ACCU        equ	1106	;# 
  5930   000453                     NCO3INC         equ	1107	;# 
  5931   000453                     NCO3INCL        equ	1107	;# 
  5932   000454                     NCO3INCH        equ	1108	;# 
  5933   000455                     NCO3INCU        equ	1109	;# 
  5934   000456                     NCO3CON         equ	1110	;# 
  5935   000457                     NCO3CLK         equ	1111	;# 
  5936   000458                     FSCMCON         equ	1112	;# 
  5937   000459                     IVTLOCK         equ	1113	;# 
  5938   00045A                     IVTAD           equ	1114	;# 
  5939   00045A                     IVTADL          equ	1114	;# 
  5940   00045B                     IVTADH          equ	1115	;# 
  5941   00045C                     IVTADU          equ	1116	;# 
  5942   00045D                     IVTBASE         equ	1117	;# 
  5943   00045D                     IVTBASEL        equ	1117	;# 
  5944   00045E                     IVTBASEH        equ	1118	;# 
  5945   00045F                     IVTBASEU        equ	1119	;# 
  5946   000460                     PWM1ERS         equ	1120	;# 
  5947   000461                     PWM1CLK         equ	1121	;# 
  5948   000462                     PWM1LDS         equ	1122	;# 
  5949   000463                     PWM1PR          equ	1123	;# 
  5950   000463                     PWM1PRL         equ	1123	;# 
  5951   000464                     PWM1PRH         equ	1124	;# 
  5952   000465                     PWM1CPRE        equ	1125	;# 
  5953   000466                     PWM1PIPOS       equ	1126	;# 
  5954   000467                     PWM1GIR         equ	1127	;# 
  5955   000468                     PWM1GIE         equ	1128	;# 
  5956   000469                     PWM1CON         equ	1129	;# 
  5957   00046A                     PWM1S1CFG       equ	1130	;# 
  5958   00046B                     PWM1S1P1        equ	1131	;# 
  5959   00046B                     PWM1S1P1L       equ	1131	;# 
  5960   00046C                     PWM1S1P1H       equ	1132	;# 
  5961   00046D                     PWM1S1P2        equ	1133	;# 
  5962   00046D                     PWM1S1P2L       equ	1133	;# 
  5963   00046E                     PWM1S1P2H       equ	1134	;# 
  5964   00046F                     PWM2ERS         equ	1135	;# 
  5965   000470                     PWM2CLK         equ	1136	;# 
  5966   000471                     PWM2LDS         equ	1137	;# 
  5967   000472                     PWM2PR          equ	1138	;# 
  5968   000472                     PWM2PRL         equ	1138	;# 
  5969   000473                     PWM2PRH         equ	1139	;# 
  5970   000474                     PWM2CPRE        equ	1140	;# 
  5971   000475                     PWM2PIPOS       equ	1141	;# 
  5972   000476                     PWM2GIR         equ	1142	;# 
  5973   000477                     PWM2GIE         equ	1143	;# 
  5974   000478                     PWM2CON         equ	1144	;# 
  5975   000479                     PWM2S1CFG       equ	1145	;# 
  5976   00047A                     PWM2S1P1        equ	1146	;# 
  5977   00047A                     PWM2S1P1L       equ	1146	;# 
  5978   00047B                     PWM2S1P1H       equ	1147	;# 
  5979   00047C                     PWM2S1P2        equ	1148	;# 
  5980   00047C                     PWM2S1P2L       equ	1148	;# 
  5981   00047D                     PWM2S1P2H       equ	1149	;# 
  5982   00047E                     PWM3ERS         equ	1150	;# 
  5983   00047F                     PWM3CLK         equ	1151	;# 
  5984   000480                     PWM3LDS         equ	1152	;# 
  5985   000481                     PWM3PR          equ	1153	;# 
  5986   000481                     PWM3PRL         equ	1153	;# 
  5987   000482                     PWM3PRH         equ	1154	;# 
  5988   000483                     PWM3CPRE        equ	1155	;# 
  5989   000484                     PWM3PIPOS       equ	1156	;# 
  5990   000485                     PWM3GIR         equ	1157	;# 
  5991   000486                     PWM3GIE         equ	1158	;# 
  5992   000487                     PWM3CON         equ	1159	;# 
  5993   000488                     PWM3S1CFG       equ	1160	;# 
  5994   000489                     PWM3S1P1        equ	1161	;# 
  5995   000489                     PWM3S1P1L       equ	1161	;# 
  5996   00048A                     PWM3S1P1H       equ	1162	;# 
  5997   00048B                     PWM3S1P2        equ	1163	;# 
  5998   00048B                     PWM3S1P2L       equ	1163	;# 
  5999   00048C                     PWM3S1P2H       equ	1164	;# 
  6000   00048D                     PWM4ERS         equ	1165	;# 
  6001   00048E                     PWM4CLK         equ	1166	;# 
  6002   00048F                     PWM4LDS         equ	1167	;# 
  6003   000490                     PWM4PR          equ	1168	;# 
  6004   000490                     PWM4PRL         equ	1168	;# 
  6005   000491                     PWM4PRH         equ	1169	;# 
  6006   000492                     PWM4CPRE        equ	1170	;# 
  6007   000493                     PWM4PIPOS       equ	1171	;# 
  6008   000494                     PWM4GIR         equ	1172	;# 
  6009   000495                     PWM4GIE         equ	1173	;# 
  6010   000496                     PWM4CON         equ	1174	;# 
  6011   000497                     PWM4S1CFG       equ	1175	;# 
  6012   000498                     PWM4S1P1        equ	1176	;# 
  6013   000498                     PWM4S1P1L       equ	1176	;# 
  6014   000499                     PWM4S1P1H       equ	1177	;# 
  6015   00049A                     PWM4S1P2        equ	1178	;# 
  6016   00049A                     PWM4S1P2L       equ	1178	;# 
  6017   00049B                     PWM4S1P2H       equ	1179	;# 
  6018   00049C                     PWMLOAD         equ	1180	;# 
  6019   00049D                     PWMEN           equ	1181	;# 
  6020   00049E                     PIE0            equ	1182	;# 
  6021   00049F                     PIE1            equ	1183	;# 
  6022   0004A0                     PIE2            equ	1184	;# 
  6023   0004A1                     PIE3            equ	1185	;# 
  6024   0004A2                     PIE4            equ	1186	;# 
  6025   0004A3                     PIE5            equ	1187	;# 
  6026   0004A4                     PIE6            equ	1188	;# 
  6027   0004A5                     PIE7            equ	1189	;# 
  6028   0004A6                     PIE8            equ	1190	;# 
  6029   0004A7                     PIE9            equ	1191	;# 
  6030   0004A8                     PIE10           equ	1192	;# 
  6031   0004A9                     PIE11           equ	1193	;# 
  6032   0004AA                     PIE12           equ	1194	;# 
  6033   0004AB                     PIE13           equ	1195	;# 
  6034   0004AC                     PIE14           equ	1196	;# 
  6035   0004AD                     PIE15           equ	1197	;# 
  6036   0004AE                     PIR0            equ	1198	;# 
  6037   0004AF                     PIR1            equ	1199	;# 
  6038   0004B0                     PIR2            equ	1200	;# 
  6039   0004B1                     PIR3            equ	1201	;# 
  6040   0004B2                     PIR4            equ	1202	;# 
  6041   0004B3                     PIR5            equ	1203	;# 
  6042   0004B4                     PIR6            equ	1204	;# 
  6043   0004B5                     PIR7            equ	1205	;# 
  6044   0004B6                     PIR8            equ	1206	;# 
  6045   0004B7                     PIR9            equ	1207	;# 
  6046   0004B8                     PIR10           equ	1208	;# 
  6047   0004B9                     PIR11           equ	1209	;# 
  6048   0004BA                     PIR12           equ	1210	;# 
  6049   0004BB                     PIR13           equ	1211	;# 
  6050   0004BC                     PIR14           equ	1212	;# 
  6051   0004BD                     PIR15           equ	1213	;# 
  6052   0004BE                     LATA            equ	1214	;# 
  6053   0004BF                     LATB            equ	1215	;# 
  6054   0004C0                     LATC            equ	1216	;# 
  6055   0004C6                     TRISA           equ	1222	;# 
  6056   0004C7                     TRISB           equ	1223	;# 
  6057   0004C8                     TRISC           equ	1224	;# 
  6058   0004CA                     TRISE           equ	1226	;# 
  6059   0004CE                     PORTA           equ	1230	;# 
  6060   0004CF                     PORTB           equ	1231	;# 
  6061   0004D0                     PORTC           equ	1232	;# 
  6062   0004D2                     PORTE           equ	1234	;# 
  6063   0004D6                     INTCON0         equ	1238	;# 
  6064   0004D7                     INTCON1         equ	1239	;# 
  6065   0004D8                     STATUS          equ	1240	;# 
  6066   0004D9                     FSR2            equ	1241	;# 
  6067   0004D9                     FSR2L           equ	1241	;# 
  6068   0004DA                     FSR2H           equ	1242	;# 
  6069   0004DB                     PLUSW2          equ	1243	;# 
  6070   0004DC                     PREINC2         equ	1244	;# 
  6071   0004DD                     POSTDEC2        equ	1245	;# 
  6072   0004DE                     POSTINC2        equ	1246	;# 
  6073   0004DF                     INDF2           equ	1247	;# 
  6074   0004E0                     BSR             equ	1248	;# 
  6075   0004E1                     FSR1            equ	1249	;# 
  6076   0004E1                     FSR1L           equ	1249	;# 
  6077   0004E2                     FSR1H           equ	1250	;# 
  6078   0004E3                     PLUSW1          equ	1251	;# 
  6079   0004E4                     PREINC1         equ	1252	;# 
  6080   0004E5                     POSTDEC1        equ	1253	;# 
  6081   0004E6                     POSTINC1        equ	1254	;# 
  6082   0004E7                     INDF1           equ	1255	;# 
  6083   0004E8                     WREG            equ	1256	;# 
  6084   0004E9                     FSR0            equ	1257	;# 
  6085   0004E9                     FSR0L           equ	1257	;# 
  6086   0004EA                     FSR0H           equ	1258	;# 
  6087   0004EB                     PLUSW0          equ	1259	;# 
  6088   0004EC                     PREINC0         equ	1260	;# 
  6089   0004ED                     POSTDEC0        equ	1261	;# 
  6090   0004EE                     POSTINC0        equ	1262	;# 
  6091   0004EF                     INDF0           equ	1263	;# 
  6092   0004F0                     PCON0           equ	1264	;# 
  6093   0004F1                     PCON1           equ	1265	;# 
  6094   0004F2                     CPUDOZE         equ	1266	;# 
  6095   0004F3                     PROD            equ	1267	;# 
  6096   0004F3                     PRODL           equ	1267	;# 
  6097   0004F4                     PRODH           equ	1268	;# 
  6098   0004F5                     TABLAT          equ	1269	;# 
  6099   0004F6                     TBLPTR          equ	1270	;# 
  6100   0004F6                     TBLPTRL         equ	1270	;# 
  6101   0004F7                     TBLPTRH         equ	1271	;# 
  6102   0004F8                     TBLPTRU         equ	1272	;# 
  6103   0004F9                     PCLAT           equ	1273	;# 
  6104   0004F9                     PCL             equ	1273	;# 
  6105   0004FA                     PCLATH          equ	1274	;# 
  6106   0004FB                     PCLATU          equ	1275	;# 
  6107   0004FC                     STKPTR          equ	1276	;# 
  6108   0004FD                     TOS             equ	1277	;# 
  6109   0004FD                     TOSL            equ	1277	;# 
  6110   0004FE                     TOSH            equ	1278	;# 
  6111   0004FF                     TOSU            equ	1279	;# 
  6112                           
  6113                           	psect	eeprom_data
  6114   3803FF                     	org	1023	;# 
  6115   3803FF  00                 	db	0	;# 
  6116   000038                     BOOTREG         equ	56	;# 
  6117   000039                     CLKRCON         equ	57	;# 
  6118   00003A                     CLKRCLK         equ	58	;# 
  6119   000040                     NVMCON0         equ	64	;# 
  6120   000041                     NVMCON1         equ	65	;# 
  6121   000042                     NVMLOCK         equ	66	;# 
  6122   000043                     NVMADR          equ	67	;# 
  6123   000043                     NVMADRL         equ	67	;# 
  6124   000044                     NVMADRH         equ	68	;# 
  6125   000045                     NVMADRU         equ	69	;# 
  6126   000046                     NVMDAT          equ	70	;# 
  6127   000046                     NVMDATL         equ	70	;# 
  6128   000047                     NVMDATH         equ	71	;# 
  6129   000048                     VREGCON         equ	72	;# 
  6130   000049                     BORCON          equ	73	;# 
  6131   00004A                     HLVDCON0        equ	74	;# 
  6132   00004B                     HLVDCON1        equ	75	;# 
  6133   00004C                     ZCDCON          equ	76	;# 
  6134   000060                     PMD0            equ	96	;# 
  6135   000061                     PMD1            equ	97	;# 
  6136   000062                     PMD2            equ	98	;# 
  6137   000063                     PMD3            equ	99	;# 
  6138   000064                     PMD4            equ	100	;# 
  6139   000065                     PMD5            equ	101	;# 
  6140   000066                     PMD6            equ	102	;# 
  6141   000067                     PMD7            equ	103	;# 
  6142   000068                     PMD8            equ	104	;# 
  6143   00006A                     MD1CON0         equ	106	;# 
  6144   00006B                     MD1CON1         equ	107	;# 
  6145   00006C                     MD1SRC          equ	108	;# 
  6146   00006D                     MD1CARL         equ	109	;# 
  6147   00006E                     MD1CARH         equ	110	;# 
  6148   00006F                     CMOUT           equ	111	;# 
  6149   000070                     CM1CON0         equ	112	;# 
  6150   000071                     CM1CON1         equ	113	;# 
  6151   000072                     CM1NCH          equ	114	;# 
  6152   000073                     CM1PCH          equ	115	;# 
  6153   000074                     CM2CON0         equ	116	;# 
  6154   000075                     CM2CON1         equ	117	;# 
  6155   000076                     CM2NCH          equ	118	;# 
  6156   000077                     CM2PCH          equ	119	;# 
  6157   000078                     WDTCON0         equ	120	;# 
  6158   000079                     WDTCON1         equ	121	;# 
  6159   00007A                     WDTPSL          equ	122	;# 
  6160   00007B                     WDTPSH          equ	123	;# 
  6161   00007C                     WDTTMR          equ	124	;# 
  6162   00007D                     DAC1DAT         equ	125	;# 
  6163   00007D                     DAC1DATL        equ	125	;# 
  6164   00007F                     DAC1CON         equ	127	;# 
  6165   000080                     SPI1RXB         equ	128	;# 
  6166   000081                     SPI1TXB         equ	129	;# 
  6167   000082                     SPI1TCNT        equ	130	;# 
  6168   000082                     SPI1TCNTL       equ	130	;# 
  6169   000083                     SPI1TCNTH       equ	131	;# 
  6170   000084                     SPI1CON0        equ	132	;# 
  6171   000085                     SPI1CON1        equ	133	;# 
  6172   000086                     SPI1CON2        equ	134	;# 
  6173   000087                     SPI1STATUS      equ	135	;# 
  6174   000088                     SPI1TWIDTH      equ	136	;# 
  6175   000089                     SPI1BAUD        equ	137	;# 
  6176   00008A                     SPI1INTF        equ	138	;# 
  6177   00008B                     SPI1INTE        equ	139	;# 
  6178   00008C                     SPI1CLK         equ	140	;# 
  6179   00008D                     SPI2RXB         equ	141	;# 
  6180   00008E                     SPI2TXB         equ	142	;# 
  6181   00008F                     SPI2TCNT        equ	143	;# 
  6182   00008F                     SPI2TCNTL       equ	143	;# 
  6183   000090                     SPI2TCNTH       equ	144	;# 
  6184   000091                     SPI2CON0        equ	145	;# 
  6185   000092                     SPI2CON1        equ	146	;# 
  6186   000093                     SPI2CON2        equ	147	;# 
  6187   000094                     SPI2STATUS      equ	148	;# 
  6188   000095                     SPI2TWIDTH      equ	149	;# 
  6189   000096                     SPI2BAUD        equ	150	;# 
  6190   000097                     SPI2INTF        equ	151	;# 
  6191   000098                     SPI2INTE        equ	152	;# 
  6192   000099                     SPI2CLK         equ	153	;# 
  6193   0000AC                     ACTCON          equ	172	;# 
  6194   0000AD                     OSCCON1         equ	173	;# 
  6195   0000AE                     OSCCON2         equ	174	;# 
  6196   0000AF                     OSCCON3         equ	175	;# 
  6197   0000B0                     OSCTUNE         equ	176	;# 
  6198   0000B1                     OSCFRQ          equ	177	;# 
  6199   0000B1                     OSCFREQ         equ	177	;# 
  6200   0000B2                     OSCSTAT         equ	178	;# 
  6201   0000B2                     OSCSTAT1        equ	178	;# 
  6202   0000B3                     OSCEN           equ	179	;# 
  6203   0000B4                     PRLOCK          equ	180	;# 
  6204   0000B5                     SCANPR          equ	181	;# 
  6205   0000B6                     DMA1PR          equ	182	;# 
  6206   0000B7                     DMA2PR          equ	183	;# 
  6207   0000B8                     DMA3PR          equ	184	;# 
  6208   0000B9                     DMA4PR          equ	185	;# 
  6209   0000BA                     DMA5PR          equ	186	;# 
  6210   0000BB                     DMA6PR          equ	187	;# 
  6211   0000BC                     DMA7PR          equ	188	;# 
  6212   0000BD                     DMA8PR          equ	189	;# 
  6213   0000BE                     MAINPR          equ	190	;# 
  6214   0000BF                     ISRPR           equ	191	;# 
  6215   0000D4                     CLCDATA         equ	212	;# 
  6216   0000D5                     CLCSELECT       equ	213	;# 
  6217   0000D6                     CLCnCON         equ	214	;# 
  6218   0000D7                     CLCnPOL         equ	215	;# 
  6219   0000D8                     CLCnSEL0        equ	216	;# 
  6220   0000D9                     CLCnSEL1        equ	217	;# 
  6221   0000DA                     CLCnSEL2        equ	218	;# 
  6222   0000DB                     CLCnSEL3        equ	219	;# 
  6223   0000DC                     CLCnGLS0        equ	220	;# 
  6224   0000DD                     CLCnGLS1        equ	221	;# 
  6225   0000DE                     CLCnGLS2        equ	222	;# 
  6226   0000DF                     CLCnGLS3        equ	223	;# 
  6227   0000E8                     DMASELECT       equ	232	;# 
  6228   0000E9                     DMAnBUF         equ	233	;# 
  6229   0000EA                     DMAnDCNT        equ	234	;# 
  6230   0000EA                     DMAnDCNTL       equ	234	;# 
  6231   0000EB                     DMAnDCNTH       equ	235	;# 
  6232   0000EC                     DMAnDPTR        equ	236	;# 
  6233   0000EC                     DMAnDPTRL       equ	236	;# 
  6234   0000ED                     DMAnDPTRH       equ	237	;# 
  6235   0000EE                     DMAnDSZ         equ	238	;# 
  6236   0000EE                     DMAnDSZL        equ	238	;# 
  6237   0000EF                     DMAnDSZH        equ	239	;# 
  6238   0000F0                     DMAnDSA         equ	240	;# 
  6239   0000F0                     DMAnDSAL        equ	240	;# 
  6240   0000F1                     DMAnDSAH        equ	241	;# 
  6241   0000F2                     DMAnSCNT        equ	242	;# 
  6242   0000F2                     DMAnSCNTL       equ	242	;# 
  6243   0000F3                     DMAnSCNTH       equ	243	;# 
  6244   0000F4                     DMAnSPTR        equ	244	;# 
  6245   0000F4                     DMAnSPTRL       equ	244	;# 
  6246   0000F5                     DMAnSPTRH       equ	245	;# 
  6247   0000F6                     DMAnSPTRU       equ	246	;# 
  6248   0000F7                     DMAnSSZ         equ	247	;# 
  6249   0000F7                     DMAnSSZL        equ	247	;# 
  6250   0000F8                     DMAnSSZH        equ	248	;# 
  6251   0000F9                     DMAnSSA         equ	249	;# 
  6252   0000F9                     DMAnSSAL        equ	249	;# 
  6253   0000FA                     DMAnSSAH        equ	250	;# 
  6254   0000FB                     DMAnSSAU        equ	251	;# 
  6255   0000FC                     DMAnCON0        equ	252	;# 
  6256   0000FD                     DMAnCON1        equ	253	;# 
  6257   0000FE                     DMAnAIRQ        equ	254	;# 
  6258   0000FF                     DMAnSIRQ        equ	255	;# 
  6259   000100                     C1CONL          equ	256	;# 
  6260   000101                     C1CONH          equ	257	;# 
  6261   000102                     C1CONU          equ	258	;# 
  6262   000103                     C1CONT          equ	259	;# 
  6263   000104                     C1NBTCFGL       equ	260	;# 
  6264   000105                     C1NBTCFGH       equ	261	;# 
  6265   000106                     C1NBTCFGU       equ	262	;# 
  6266   000107                     C1NBTCFGT       equ	263	;# 
  6267   000108                     C1DBTCFGL       equ	264	;# 
  6268   000109                     C1DBTCFGH       equ	265	;# 
  6269   00010A                     C1DBTCFGU       equ	266	;# 
  6270   00010B                     C1DBTCFGT       equ	267	;# 
  6271   00010C                     C1TDCL          equ	268	;# 
  6272   00010D                     C1TDCH          equ	269	;# 
  6273   00010E                     C1TDCU          equ	270	;# 
  6274   000110                     C1TBC           equ	272	;# 
  6275   000110                     C1TBCL          equ	272	;# 
  6276   000111                     C1TBCH          equ	273	;# 
  6277   000112                     C1TBCU          equ	274	;# 
  6278   000113                     C1TBCT          equ	275	;# 
  6279   000114                     C1TSCONL        equ	276	;# 
  6280   000115                     C1TSCONH        equ	277	;# 
  6281   000116                     C1TSCONU        equ	278	;# 
  6282   000117                     C1TSCONT        equ	279	;# 
  6283   000118                     C1VECL          equ	280	;# 
  6284   000119                     C1VECH          equ	281	;# 
  6285   00011A                     C1VECU          equ	282	;# 
  6286   00011B                     C1VECT          equ	283	;# 
  6287   00011C                     C1INTL          equ	284	;# 
  6288   00011D                     C1INTH          equ	285	;# 
  6289   00011E                     C1INTU          equ	286	;# 
  6290   00011F                     C1INTT          equ	287	;# 
  6291   000120                     C1RXIF          equ	288	;# 
  6292   000120                     C1RXIFL         equ	288	;# 
  6293   000121                     C1RXIFH         equ	289	;# 
  6294   000122                     C1RXIFU         equ	290	;# 
  6295   000123                     C1RXIFT         equ	291	;# 
  6296   000124                     C1TXIF          equ	292	;# 
  6297   000124                     C1TXIFL         equ	292	;# 
  6298   000125                     C1TXIFH         equ	293	;# 
  6299   000126                     C1TXIFU         equ	294	;# 
  6300   000127                     C1TXIFT         equ	295	;# 
  6301   000128                     C1RXOVIF        equ	296	;# 
  6302   000128                     C1RXOVIFL       equ	296	;# 
  6303   000129                     C1RXOVIFH       equ	297	;# 
  6304   00012A                     C1RXOVIFU       equ	298	;# 
  6305   00012B                     C1RXOVIFT       equ	299	;# 
  6306   00012C                     C1TXATIF        equ	300	;# 
  6307   00012C                     C1TXATIFL       equ	300	;# 
  6308   00012D                     C1TXATIFH       equ	301	;# 
  6309   00012E                     C1TXATIFU       equ	302	;# 
  6310   00012F                     C1TXATIFT       equ	303	;# 
  6311   000130                     C1TXREQ         equ	304	;# 
  6312   000130                     C1TXREQL        equ	304	;# 
  6313   000131                     C1TXREQH        equ	305	;# 
  6314   000132                     C1TXREQU        equ	306	;# 
  6315   000133                     C1TXREQT        equ	307	;# 
  6316   000134                     C1TRECL         equ	308	;# 
  6317   000135                     C1TRECH         equ	309	;# 
  6318   000136                     C1TRECU         equ	310	;# 
  6319   000137                     C1TRECT         equ	311	;# 
  6320   000138                     C1BDIAG0L       equ	312	;# 
  6321   000139                     C1BDIAG0H       equ	313	;# 
  6322   00013C                     C1BDIAG1L       equ	316	;# 
  6323   00013D                     C1BDIAG1H       equ	317	;# 
  6324   00013E                     C1BDIAG1U       equ	318	;# 
  6325   00013F                     C1BDIAG1T       equ	319	;# 
  6326   000140                     C1TEFCONL       equ	320	;# 
  6327   000141                     C1TEFCONH       equ	321	;# 
  6328   000142                     C1TEFCONU       equ	322	;# 
  6329   000143                     C1TEFCONT       equ	323	;# 
  6330   000144                     C1TEFSTAL       equ	324	;# 
  6331   000145                     C1TEFSTAH       equ	325	;# 
  6332   000146                     C1TEFSTAU       equ	326	;# 
  6333   000147                     C1TEFSTAT       equ	327	;# 
  6334   000148                     C1TEFUA         equ	328	;# 
  6335   000148                     C1TEFUAL        equ	328	;# 
  6336   000149                     C1TEFUAH        equ	329	;# 
  6337   00014A                     C1TEFUAU        equ	330	;# 
  6338   00014B                     C1TEFUAT        equ	331	;# 
  6339   00014C                     C1FIFOBA        equ	332	;# 
  6340   00014C                     C1FIFOBAL       equ	332	;# 
  6341   00014D                     C1FIFOBAH       equ	333	;# 
  6342   00014E                     C1FIFOBAU       equ	334	;# 
  6343   00014F                     C1FIFOBAT       equ	335	;# 
  6344   000150                     C1TXQCONL       equ	336	;# 
  6345   000151                     C1TXQCONH       equ	337	;# 
  6346   000152                     C1TXQCONU       equ	338	;# 
  6347   000153                     C1TXQCONT       equ	339	;# 
  6348   000154                     C1TXQSTAL       equ	340	;# 
  6349   000155                     C1TXQSTAH       equ	341	;# 
  6350   000156                     C1TXQSTAU       equ	342	;# 
  6351   000157                     C1TXQSTAT       equ	343	;# 
  6352   000158                     C1TXQUA         equ	344	;# 
  6353   000158                     C1TXQUAL        equ	344	;# 
  6354   000159                     C1TXQUAH        equ	345	;# 
  6355   00015A                     C1TXQUAU        equ	346	;# 
  6356   00015B                     C1TXQUAT        equ	347	;# 
  6357   00015C                     C1FIFOCON1      equ	348	;# 
  6358   00015C                     C1FIFOCON1L     equ	348	;# 
  6359   00015D                     C1FIFOCON1H     equ	349	;# 
  6360   00015E                     C1FIFOCON1U     equ	350	;# 
  6361   00015F                     C1FIFOCON1T     equ	351	;# 
  6362   000160                     C1FIFOSTA1      equ	352	;# 
  6363   000160                     C1FIFOSTA1L     equ	352	;# 
  6364   000161                     C1FIFOSTA1H     equ	353	;# 
  6365   000162                     C1FIFOSTA1U     equ	354	;# 
  6366   000163                     C1FIFOSTA1T     equ	355	;# 
  6367   000164                     C1FIFOUA1       equ	356	;# 
  6368   000164                     C1FIFOUA1L      equ	356	;# 
  6369   000165                     C1FIFOUA1H      equ	357	;# 
  6370   000166                     C1FIFOUA1U      equ	358	;# 
  6371   000167                     C1FIFOUA1T      equ	359	;# 
  6372   000168                     C1FIFOCON2      equ	360	;# 
  6373   000168                     C1FIFOCON2L     equ	360	;# 
  6374   000169                     C1FIFOCON2H     equ	361	;# 
  6375   00016A                     C1FIFOCON2U     equ	362	;# 
  6376   00016B                     C1FIFOCON2T     equ	363	;# 
  6377   00016C                     C1FIFOSTA2      equ	364	;# 
  6378   00016C                     C1FIFOSTA2L     equ	364	;# 
  6379   00016D                     C1FIFOSTA2H     equ	365	;# 
  6380   00016E                     C1FIFOSTA2U     equ	366	;# 
  6381   00016F                     C1FIFOSTA2T     equ	367	;# 
  6382   000170                     C1FIFOUA2       equ	368	;# 
  6383   000170                     C1FIFOUA2L      equ	368	;# 
  6384   000171                     C1FIFOUA2H      equ	369	;# 
  6385   000172                     C1FIFOUA2U      equ	370	;# 
  6386   000173                     C1FIFOUA2T      equ	371	;# 
  6387   000174                     C1FIFOCON3      equ	372	;# 
  6388   000174                     C1FIFOCON3L     equ	372	;# 
  6389   000175                     C1FIFOCON3H     equ	373	;# 
  6390   000176                     C1FIFOCON3U     equ	374	;# 
  6391   000177                     C1FIFOCON3T     equ	375	;# 
  6392   000178                     C1FIFOSTA3      equ	376	;# 
  6393   000178                     C1FIFOSTA3L     equ	376	;# 
  6394   000179                     C1FIFOSTA3H     equ	377	;# 
  6395   00017A                     C1FIFOSTA3U     equ	378	;# 
  6396   00017B                     C1FIFOSTA3T     equ	379	;# 
  6397   00017C                     C1FIFOUA3       equ	380	;# 
  6398   00017C                     C1FIFOUA3L      equ	380	;# 
  6399   00017D                     C1FIFOUA3H      equ	381	;# 
  6400   00017E                     C1FIFOUA3U      equ	382	;# 
  6401   00017F                     C1FIFOUA3T      equ	383	;# 
  6402   000180                     C1FLTCON0L      equ	384	;# 
  6403   000181                     C1FLTCON0H      equ	385	;# 
  6404   000182                     C1FLTCON0U      equ	386	;# 
  6405   000183                     C1FLTCON0T      equ	387	;# 
  6406   000184                     C1FLTCON1L      equ	388	;# 
  6407   000185                     C1FLTCON1H      equ	389	;# 
  6408   000186                     C1FLTCON1U      equ	390	;# 
  6409   000187                     C1FLTCON1T      equ	391	;# 
  6410   000188                     C1FLTCON2L      equ	392	;# 
  6411   000189                     C1FLTCON2H      equ	393	;# 
  6412   00018A                     C1FLTCON2U      equ	394	;# 
  6413   00018B                     C1FLTCON2T      equ	395	;# 
  6414   00018C                     C1FLTOBJ0       equ	396	;# 
  6415   00018C                     C1FLTOBJ0L      equ	396	;# 
  6416   00018D                     C1FLTOBJ0H      equ	397	;# 
  6417   00018E                     C1FLTOBJ0U      equ	398	;# 
  6418   00018F                     C1FLTOBJ0T      equ	399	;# 
  6419   000190                     C1MASK0         equ	400	;# 
  6420   000190                     C1MASK0L        equ	400	;# 
  6421   000191                     C1MASK0H        equ	401	;# 
  6422   000192                     C1MASK0U        equ	402	;# 
  6423   000193                     C1MASK0T        equ	403	;# 
  6424   000194                     C1FLTOBJ1       equ	404	;# 
  6425   000194                     C1FLTOBJ1L      equ	404	;# 
  6426   000195                     C1FLTOBJ1H      equ	405	;# 
  6427   000196                     C1FLTOBJ1U      equ	406	;# 
  6428   000197                     C1FLTOBJ1T      equ	407	;# 
  6429   000198                     C1MASK1         equ	408	;# 
  6430   000198                     C1MASK1L        equ	408	;# 
  6431   000199                     C1MASK1H        equ	409	;# 
  6432   00019A                     C1MASK1U        equ	410	;# 
  6433   00019B                     C1MASK1T        equ	411	;# 
  6434   00019C                     C1FLTOBJ2       equ	412	;# 
  6435   00019C                     C1FLTOBJ2L      equ	412	;# 
  6436   00019D                     C1FLTOBJ2H      equ	413	;# 
  6437   00019E                     C1FLTOBJ2U      equ	414	;# 
  6438   00019F                     C1FLTOBJ2T      equ	415	;# 
  6439   0001A0                     C1MASK2         equ	416	;# 
  6440   0001A0                     C1MASK2L        equ	416	;# 
  6441   0001A1                     C1MASK2H        equ	417	;# 
  6442   0001A2                     C1MASK2U        equ	418	;# 
  6443   0001A3                     C1MASK2T        equ	419	;# 
  6444   0001A4                     C1FLTOBJ3       equ	420	;# 
  6445   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6446   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6447   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6448   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6449   0001A8                     C1MASK3         equ	424	;# 
  6450   0001A8                     C1MASK3L        equ	424	;# 
  6451   0001A9                     C1MASK3H        equ	425	;# 
  6452   0001AA                     C1MASK3U        equ	426	;# 
  6453   0001AB                     C1MASK3T        equ	427	;# 
  6454   0001AC                     C1FLTOBJ4       equ	428	;# 
  6455   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6456   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6457   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6458   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6459   0001B0                     C1MASK4         equ	432	;# 
  6460   0001B0                     C1MASK4L        equ	432	;# 
  6461   0001B1                     C1MASK4H        equ	433	;# 
  6462   0001B2                     C1MASK4U        equ	434	;# 
  6463   0001B3                     C1MASK4T        equ	435	;# 
  6464   0001B4                     C1FLTOBJ5       equ	436	;# 
  6465   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6466   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6467   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6468   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6469   0001B8                     C1MASK5         equ	440	;# 
  6470   0001B8                     C1MASK5L        equ	440	;# 
  6471   0001B9                     C1MASK5H        equ	441	;# 
  6472   0001BA                     C1MASK5U        equ	442	;# 
  6473   0001BB                     C1MASK5T        equ	443	;# 
  6474   0001BC                     C1FLTOBJ6       equ	444	;# 
  6475   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6476   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6477   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6478   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6479   0001C0                     C1MASK6         equ	448	;# 
  6480   0001C0                     C1MASK6L        equ	448	;# 
  6481   0001C1                     C1MASK6H        equ	449	;# 
  6482   0001C2                     C1MASK6U        equ	450	;# 
  6483   0001C3                     C1MASK6T        equ	451	;# 
  6484   0001C4                     C1FLTOBJ7       equ	452	;# 
  6485   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6486   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6487   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6488   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6489   0001C8                     C1MASK7         equ	456	;# 
  6490   0001C8                     C1MASK7L        equ	456	;# 
  6491   0001C9                     C1MASK7H        equ	457	;# 
  6492   0001CA                     C1MASK7U        equ	458	;# 
  6493   0001CB                     C1MASK7T        equ	459	;# 
  6494   0001CC                     C1FLTOBJ8       equ	460	;# 
  6495   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6496   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6497   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6498   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6499   0001D0                     C1MASK8         equ	464	;# 
  6500   0001D0                     C1MASK8L        equ	464	;# 
  6501   0001D1                     C1MASK8H        equ	465	;# 
  6502   0001D2                     C1MASK8U        equ	466	;# 
  6503   0001D3                     C1MASK8T        equ	467	;# 
  6504   0001D4                     C1FLTOBJ9       equ	468	;# 
  6505   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6506   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6507   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6508   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6509   0001D8                     C1MASK9         equ	472	;# 
  6510   0001D8                     C1MASK9L        equ	472	;# 
  6511   0001D9                     C1MASK9H        equ	473	;# 
  6512   0001DA                     C1MASK9U        equ	474	;# 
  6513   0001DB                     C1MASK9T        equ	475	;# 
  6514   0001DC                     C1FLTOBJ10      equ	476	;# 
  6515   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6516   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6517   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6518   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6519   0001E0                     C1MASK10        equ	480	;# 
  6520   0001E0                     C1MASK10L       equ	480	;# 
  6521   0001E1                     C1MASK10H       equ	481	;# 
  6522   0001E2                     C1MASK10U       equ	482	;# 
  6523   0001E3                     C1MASK10T       equ	483	;# 
  6524   0001E4                     C1FLTOBJ11      equ	484	;# 
  6525   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6526   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6527   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6528   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6529   0001E8                     C1MASK11        equ	488	;# 
  6530   0001E8                     C1MASK11L       equ	488	;# 
  6531   0001E9                     C1MASK11H       equ	489	;# 
  6532   0001EA                     C1MASK11U       equ	490	;# 
  6533   0001EB                     C1MASK11T       equ	491	;# 
  6534   000200                     PPSLOCK         equ	512	;# 
  6535   000201                     RA0PPS          equ	513	;# 
  6536   000202                     RA1PPS          equ	514	;# 
  6537   000203                     RA2PPS          equ	515	;# 
  6538   000204                     RA3PPS          equ	516	;# 
  6539   000205                     RA4PPS          equ	517	;# 
  6540   000206                     RA5PPS          equ	518	;# 
  6541   000207                     RA6PPS          equ	519	;# 
  6542   000208                     RA7PPS          equ	520	;# 
  6543   000209                     RB0PPS          equ	521	;# 
  6544   00020A                     RB1PPS          equ	522	;# 
  6545   00020B                     RB2PPS          equ	523	;# 
  6546   00020C                     RB3PPS          equ	524	;# 
  6547   00020D                     RB4PPS          equ	525	;# 
  6548   00020E                     RB5PPS          equ	526	;# 
  6549   00020F                     RB6PPS          equ	527	;# 
  6550   000210                     RB7PPS          equ	528	;# 
  6551   000211                     RC0PPS          equ	529	;# 
  6552   000212                     RC1PPS          equ	530	;# 
  6553   000213                     RC2PPS          equ	531	;# 
  6554   000214                     RC3PPS          equ	532	;# 
  6555   000215                     RC4PPS          equ	533	;# 
  6556   000216                     RC5PPS          equ	534	;# 
  6557   000217                     RC6PPS          equ	535	;# 
  6558   000218                     RC7PPS          equ	536	;# 
  6559   00023D                     CANRXPPS        equ	573	;# 
  6560   00023E                     INT0PPS         equ	574	;# 
  6561   00023F                     INT1PPS         equ	575	;# 
  6562   000240                     INT2PPS         equ	576	;# 
  6563   000241                     T0CKIPPS        equ	577	;# 
  6564   000242                     T1CKIPPS        equ	578	;# 
  6565   000243                     T1GPPS          equ	579	;# 
  6566   000244                     T3CKIPPS        equ	580	;# 
  6567   000245                     T3GPPS          equ	581	;# 
  6568   000246                     T5CKIPPS        equ	582	;# 
  6569   000247                     T5GPPS          equ	583	;# 
  6570   000248                     T2INPPS         equ	584	;# 
  6571   000249                     T4INPPS         equ	585	;# 
  6572   00024A                     T6INPPS         equ	586	;# 
  6573   00024B                     TUIN0PPS        equ	587	;# 
  6574   00024C                     TUIN1PPS        equ	588	;# 
  6575   00024F                     CCP1PPS         equ	591	;# 
  6576   000250                     CCP2PPS         equ	592	;# 
  6577   000251                     CCP3PPS         equ	593	;# 
  6578   000253                     PWM1ERSPPS      equ	595	;# 
  6579   000254                     PWM2ERSPPS      equ	596	;# 
  6580   000255                     PWM3ERSPPS      equ	597	;# 
  6581   000256                     PWM4ERSPPS      equ	598	;# 
  6582   000257                     PWMIN0PPS       equ	599	;# 
  6583   000258                     PWMIN1PPS       equ	600	;# 
  6584   000259                     SMT1WINPPS      equ	601	;# 
  6585   00025A                     SMT1SIGPPS      equ	602	;# 
  6586   00025B                     CWG1PPS         equ	603	;# 
  6587   00025B                     CWG1INPPS       equ	603	;# 
  6588   00025C                     CWG2PPS         equ	604	;# 
  6589   00025C                     CWG2INPPS       equ	604	;# 
  6590   00025D                     CWG3PPS         equ	605	;# 
  6591   00025D                     CWG3INPPS       equ	605	;# 
  6592   00025E                     MD1CARLPPS      equ	606	;# 
  6593   00025E                     MDCARLPPS       equ	606	;# 
  6594   00025F                     MD1CARHPPS      equ	607	;# 
  6595   00025F                     MDCARHPPS       equ	607	;# 
  6596   000260                     MD1SRCPPS       equ	608	;# 
  6597   000260                     MDSRCPPS        equ	608	;# 
  6598   000261                     CLCIN0PPS       equ	609	;# 
  6599   000262                     CLCIN1PPS       equ	610	;# 
  6600   000263                     CLCIN2PPS       equ	611	;# 
  6601   000264                     CLCIN3PPS       equ	612	;# 
  6602   000265                     CLCIN4PPS       equ	613	;# 
  6603   000266                     CLCIN5PPS       equ	614	;# 
  6604   000267                     CLCIN6PPS       equ	615	;# 
  6605   000268                     CLCIN7PPS       equ	616	;# 
  6606   000269                     ADACTPPS        equ	617	;# 
  6607   00026A                     SPI1SCKPPS      equ	618	;# 
  6608   00026B                     SPI1SDIPPS      equ	619	;# 
  6609   00026C                     SPI1SSPPS       equ	620	;# 
  6610   00026D                     SPI2SCKPPS      equ	621	;# 
  6611   00026E                     SPI2SDIPPS      equ	622	;# 
  6612   00026F                     SPI2SSPPS       equ	623	;# 
  6613   000270                     I2C1SDAPPS      equ	624	;# 
  6614   000271                     I2C1SCLPPS      equ	625	;# 
  6615   000272                     U1RXPPS         equ	626	;# 
  6616   000273                     U1CTSPPS        equ	627	;# 
  6617   000274                     U2RXPPS         equ	628	;# 
  6618   000275                     U2CTSPPS        equ	629	;# 
  6619   000276                     U3RXPPS         equ	630	;# 
  6620   000277                     U3CTSPPS        equ	631	;# 
  6621   000278                     U4RXPPS         equ	632	;# 
  6622   000279                     U4CTSPPS        equ	633	;# 
  6623   00027A                     U5RXPPS         equ	634	;# 
  6624   00027B                     U5CTSPPS        equ	635	;# 
  6625   000286                     RC4I2C          equ	646	;# 
  6626   000287                     RC3I2C          equ	647	;# 
  6627   000288                     RB2I2C          equ	648	;# 
  6628   000289                     RB1I2C          equ	649	;# 
  6629   00028A                     I2C1RXB         equ	650	;# 
  6630   00028B                     I2C1TXB         equ	651	;# 
  6631   00028C                     I2C1CNTL        equ	652	;# 
  6632   00028D                     I2C1CNTH        equ	653	;# 
  6633   00028E                     I2C1ADB0        equ	654	;# 
  6634   00028F                     I2C1ADB1        equ	655	;# 
  6635   000290                     I2C1ADR0        equ	656	;# 
  6636   000291                     I2C1ADR1        equ	657	;# 
  6637   000292                     I2C1ADR2        equ	658	;# 
  6638   000293                     I2C1ADR3        equ	659	;# 
  6639   000294                     I2C1CON0        equ	660	;# 
  6640   000295                     I2C1CON1        equ	661	;# 
  6641   000296                     I2C1CON2        equ	662	;# 
  6642   000297                     I2C1ERR         equ	663	;# 
  6643   000298                     I2C1STAT0       equ	664	;# 
  6644   000299                     I2C1STAT1       equ	665	;# 
  6645   00029A                     I2C1PIR         equ	666	;# 
  6646   00029B                     I2C1PIE         equ	667	;# 
  6647   00029C                     I2C1BTO         equ	668	;# 
  6648   00029D                     I2C1BAUD        equ	669	;# 
  6649   00029E                     I2C1CLK         equ	670	;# 
  6650   00029F                     I2C1BTOC        equ	671	;# 
  6651   0002A1                     U1RXB           equ	673	;# 
  6652   0002A1                     U1RXBL          equ	673	;# 
  6653   0002A2                     U1RXCHK         equ	674	;# 
  6654   0002A3                     U1TXB           equ	675	;# 
  6655   0002A3                     U1TXBL          equ	675	;# 
  6656   0002A4                     U1TXCHK         equ	676	;# 
  6657   0002A5                     U1P1            equ	677	;# 
  6658   0002A5                     U1P1L           equ	677	;# 
  6659   0002A6                     U1P1H           equ	678	;# 
  6660   0002A7                     U1P2            equ	679	;# 
  6661   0002A7                     U1P2L           equ	679	;# 
  6662   0002A8                     U1P2H           equ	680	;# 
  6663   0002A9                     U1P3            equ	681	;# 
  6664   0002A9                     U1P3L           equ	681	;# 
  6665   0002AA                     U1P3H           equ	682	;# 
  6666   0002AB                     U1CON0          equ	683	;# 
  6667   0002AC                     U1CON1          equ	684	;# 
  6668   0002AD                     U1CON2          equ	685	;# 
  6669   0002AE                     U1BRG           equ	686	;# 
  6670   0002AE                     U1BRGL          equ	686	;# 
  6671   0002AF                     U1BRGH          equ	687	;# 
  6672   0002B0                     U1FIFO          equ	688	;# 
  6673   0002B1                     U1UIR           equ	689	;# 
  6674   0002B2                     U1ERRIR         equ	690	;# 
  6675   0002B3                     U1ERRIE         equ	691	;# 
  6676   0002B4                     U2RXB           equ	692	;# 
  6677   0002B4                     U2RXBL          equ	692	;# 
  6678   0002B5                     U2RXCHK         equ	693	;# 
  6679   0002B6                     U2TXB           equ	694	;# 
  6680   0002B6                     U2TXBL          equ	694	;# 
  6681   0002B7                     U2TXCHK         equ	695	;# 
  6682   0002B8                     U2P1            equ	696	;# 
  6683   0002B8                     U2P1L           equ	696	;# 
  6684   0002B9                     U2P1H           equ	697	;# 
  6685   0002BA                     U2P2            equ	698	;# 
  6686   0002BA                     U2P2L           equ	698	;# 
  6687   0002BB                     U2P2H           equ	699	;# 
  6688   0002BC                     U2P3            equ	700	;# 
  6689   0002BC                     U2P3L           equ	700	;# 
  6690   0002BD                     U2P3H           equ	701	;# 
  6691   0002BE                     U2CON0          equ	702	;# 
  6692   0002BF                     U2CON1          equ	703	;# 
  6693   0002C0                     U2CON2          equ	704	;# 
  6694   0002C1                     U2BRG           equ	705	;# 
  6695   0002C1                     U2BRGL          equ	705	;# 
  6696   0002C2                     U2BRGH          equ	706	;# 
  6697   0002C3                     U2FIFO          equ	707	;# 
  6698   0002C4                     U2UIR           equ	708	;# 
  6699   0002C5                     U2ERRIR         equ	709	;# 
  6700   0002C6                     U2ERRIE         equ	710	;# 
  6701   0002C7                     U3RXB           equ	711	;# 
  6702   0002C7                     U3RXBL          equ	711	;# 
  6703   0002C9                     U3TXB           equ	713	;# 
  6704   0002C9                     U3TXBL          equ	713	;# 
  6705   0002CB                     U3P1            equ	715	;# 
  6706   0002CB                     U3P1L           equ	715	;# 
  6707   0002CD                     U3P2            equ	717	;# 
  6708   0002CD                     U3P2L           equ	717	;# 
  6709   0002CF                     U3P3            equ	719	;# 
  6710   0002CF                     U3P3L           equ	719	;# 
  6711   0002D1                     U3CON0          equ	721	;# 
  6712   0002D2                     U3CON1          equ	722	;# 
  6713   0002D3                     U3CON2          equ	723	;# 
  6714   0002D4                     U3BRG           equ	724	;# 
  6715   0002D4                     U3BRGL          equ	724	;# 
  6716   0002D5                     U3BRGH          equ	725	;# 
  6717   0002D6                     U3FIFO          equ	726	;# 
  6718   0002D7                     U3UIR           equ	727	;# 
  6719   0002D8                     U3ERRIR         equ	728	;# 
  6720   0002D9                     U3ERRIE         equ	729	;# 
  6721   0002DA                     U4RXB           equ	730	;# 
  6722   0002DA                     U4RXBL          equ	730	;# 
  6723   0002DC                     U4TXB           equ	732	;# 
  6724   0002DC                     U4TXBL          equ	732	;# 
  6725   0002DE                     U4P1            equ	734	;# 
  6726   0002DE                     U4P1L           equ	734	;# 
  6727   0002E0                     U4P2            equ	736	;# 
  6728   0002E0                     U4P2L           equ	736	;# 
  6729   0002E2                     U4P3            equ	738	;# 
  6730   0002E2                     U4P3L           equ	738	;# 
  6731   0002E4                     U4CON0          equ	740	;# 
  6732   0002E5                     U4CON1          equ	741	;# 
  6733   0002E6                     U4CON2          equ	742	;# 
  6734   0002E7                     U4BRG           equ	743	;# 
  6735   0002E7                     U4BRGL          equ	743	;# 
  6736   0002E8                     U4BRGH          equ	744	;# 
  6737   0002E9                     U4FIFO          equ	745	;# 
  6738   0002EA                     U4UIR           equ	746	;# 
  6739   0002EB                     U4ERRIR         equ	747	;# 
  6740   0002EC                     U4ERRIE         equ	748	;# 
  6741   0002ED                     U5RXB           equ	749	;# 
  6742   0002ED                     U5RXBL          equ	749	;# 
  6743   0002EF                     U5TXB           equ	751	;# 
  6744   0002EF                     U5TXBL          equ	751	;# 
  6745   0002F1                     U5P1            equ	753	;# 
  6746   0002F1                     U5P1L           equ	753	;# 
  6747   0002F3                     U5P2            equ	755	;# 
  6748   0002F3                     U5P2L           equ	755	;# 
  6749   0002F5                     U5P3            equ	757	;# 
  6750   0002F5                     U5P3L           equ	757	;# 
  6751   0002F7                     U5CON0          equ	759	;# 
  6752   0002F8                     U5CON1          equ	760	;# 
  6753   0002F9                     U5CON2          equ	761	;# 
  6754   0002FA                     U5BRG           equ	762	;# 
  6755   0002FA                     U5BRGL          equ	762	;# 
  6756   0002FB                     U5BRGH          equ	763	;# 
  6757   0002FC                     U5FIFO          equ	764	;# 
  6758   0002FD                     U5UIR           equ	765	;# 
  6759   0002FE                     U5ERRIR         equ	766	;# 
  6760   0002FF                     U5ERRIE         equ	767	;# 
  6761   000300                     SMT1TMR         equ	768	;# 
  6762   000300                     SMT1TMRL        equ	768	;# 
  6763   000301                     SMT1TMRH        equ	769	;# 
  6764   000302                     SMT1TMRU        equ	770	;# 
  6765   000303                     SMT1CPR         equ	771	;# 
  6766   000303                     SMT1CPRL        equ	771	;# 
  6767   000304                     SMT1CPRH        equ	772	;# 
  6768   000305                     SMT1CPRU        equ	773	;# 
  6769   000306                     SMT1CPW         equ	774	;# 
  6770   000306                     SMT1CPWL        equ	774	;# 
  6771   000307                     SMT1CPWH        equ	775	;# 
  6772   000308                     SMT1CPWU        equ	776	;# 
  6773   000309                     SMT1PR          equ	777	;# 
  6774   000309                     SMT1PRL         equ	777	;# 
  6775   00030A                     SMT1PRH         equ	778	;# 
  6776   00030B                     SMT1PRU         equ	779	;# 
  6777   00030C                     SMT1CON0        equ	780	;# 
  6778   00030D                     SMT1CON1        equ	781	;# 
  6779   00030E                     SMT1STAT        equ	782	;# 
  6780   00030F                     SMT1CLK         equ	783	;# 
  6781   000310                     SMT1SIG         equ	784	;# 
  6782   000311                     SMT1WIN         equ	785	;# 
  6783   000318                     TMR0L           equ	792	;# 
  6784   000318                     TMR0            equ	792	;# 
  6785   000319                     TMR0H           equ	793	;# 
  6786   000319                     PR0             equ	793	;# 
  6787   00031A                     T0CON0          equ	794	;# 
  6788   00031B                     T0CON1          equ	795	;# 
  6789   00031C                     TMR1            equ	796	;# 
  6790   00031C                     TMR1L           equ	796	;# 
  6791   00031D                     TMR1H           equ	797	;# 
  6792   00031E                     T1CON           equ	798	;# 
  6793   00031E                     TMR1CON         equ	798	;# 
  6794   00031F                     T1GCON          equ	799	;# 
  6795   00031F                     TMR1GCON        equ	799	;# 
  6796   000320                     T1GATE          equ	800	;# 
  6797   000320                     TMR1GATE        equ	800	;# 
  6798   000321                     T1CLK           equ	801	;# 
  6799   000321                     TMR1CLK         equ	801	;# 
  6800   000321                     PR1             equ	801	;# 
  6801   000322                     T2TMR           equ	802	;# 
  6802   000322                     TMR2            equ	802	;# 
  6803   000323                     T2PR            equ	803	;# 
  6804   000323                     PR2             equ	803	;# 
  6805   000324                     T2CON           equ	804	;# 
  6806   000325                     T2HLT           equ	805	;# 
  6807   000326                     T2CLKCON        equ	806	;# 
  6808   000326                     T2CLK           equ	806	;# 
  6809   000327                     T2RST           equ	807	;# 
  6810   000328                     TMR3            equ	808	;# 
  6811   000328                     TMR3L           equ	808	;# 
  6812   000329                     TMR3H           equ	809	;# 
  6813   00032A                     T3CON           equ	810	;# 
  6814   00032A                     TMR3CON         equ	810	;# 
  6815   00032B                     T3GCON          equ	811	;# 
  6816   00032B                     TMR3GCON        equ	811	;# 
  6817   00032C                     T3GATE          equ	812	;# 
  6818   00032C                     TMR3GATE        equ	812	;# 
  6819   00032D                     T3CLK           equ	813	;# 
  6820   00032D                     TMR3CLK         equ	813	;# 
  6821   00032D                     PR3             equ	813	;# 
  6822   00032E                     T4TMR           equ	814	;# 
  6823   00032E                     TMR4            equ	814	;# 
  6824   00032F                     T4PR            equ	815	;# 
  6825   00032F                     PR4             equ	815	;# 
  6826   000330                     T4CON           equ	816	;# 
  6827   000331                     T4HLT           equ	817	;# 
  6828   000332                     T4CLKCON        equ	818	;# 
  6829   000332                     T4CLK           equ	818	;# 
  6830   000333                     T4RST           equ	819	;# 
  6831   000334                     TMR5            equ	820	;# 
  6832   000334                     TMR5L           equ	820	;# 
  6833   000335                     TMR5H           equ	821	;# 
  6834   000336                     T5CON           equ	822	;# 
  6835   000336                     TMR5CON         equ	822	;# 
  6836   000337                     T5GCON          equ	823	;# 
  6837   000337                     TMR5GCON        equ	823	;# 
  6838   000338                     T5GATE          equ	824	;# 
  6839   000338                     TMR5GATE        equ	824	;# 
  6840   000339                     T5CLK           equ	825	;# 
  6841   000339                     TMR5CLK         equ	825	;# 
  6842   000339                     PR5             equ	825	;# 
  6843   00033A                     T6TMR           equ	826	;# 
  6844   00033A                     TMR6            equ	826	;# 
  6845   00033B                     T6PR            equ	827	;# 
  6846   00033B                     PR6             equ	827	;# 
  6847   00033C                     T6CON           equ	828	;# 
  6848   00033D                     T6HLT           equ	829	;# 
  6849   00033E                     T6CLKCON        equ	830	;# 
  6850   00033E                     T6CLK           equ	830	;# 
  6851   00033F                     T6RST           equ	831	;# 
  6852   000340                     CCPR1           equ	832	;# 
  6853   000340                     CCPR1L          equ	832	;# 
  6854   000341                     CCPR1H          equ	833	;# 
  6855   000342                     CCP1CON         equ	834	;# 
  6856   000343                     CCP1CAP         equ	835	;# 
  6857   000344                     CCPR2           equ	836	;# 
  6858   000344                     CCPR2L          equ	836	;# 
  6859   000345                     CCPR2H          equ	837	;# 
  6860   000346                     CCP2CON         equ	838	;# 
  6861   000347                     CCP2CAP         equ	839	;# 
  6862   000348                     CCPR3           equ	840	;# 
  6863   000348                     CCPR3L          equ	840	;# 
  6864   000349                     CCPR3H          equ	841	;# 
  6865   00034A                     CCP3CON         equ	842	;# 
  6866   00034B                     CCP3CAP         equ	843	;# 
  6867   00034C                     CCPTMRS0        equ	844	;# 
  6868   00034F                     CRCDATA         equ	847	;# 
  6869   00034F                     CRCDATAL        equ	847	;# 
  6870   000350                     CRCDATAH        equ	848	;# 
  6871   000351                     CRCDATAU        equ	849	;# 
  6872   000352                     CRCDATAT        equ	850	;# 
  6873   000353                     CRCOUT          equ	851	;# 
  6874   000353                     CRCSHFT         equ	851	;# 
  6875   000353                     CRCXOR          equ	851	;# 
  6876   000353                     CRCOUTL         equ	851	;# 
  6877   000353                     CRCSHFTL        equ	851	;# 
  6878   000353                     CRCSHIFTL       equ	851	;# 
  6879   000353                     CRCXORL         equ	851	;# 
  6880   000354                     CRCOUTH         equ	852	;# 
  6881   000354                     CRCSHFTH        equ	852	;# 
  6882   000354                     CRCSHIFTH       equ	852	;# 
  6883   000354                     CRCXORH         equ	852	;# 
  6884   000355                     CRCOUTU         equ	853	;# 
  6885   000355                     CRCSHFTU        equ	853	;# 
  6886   000355                     CRCSHIFTU       equ	853	;# 
  6887   000355                     CRCXORU         equ	853	;# 
  6888   000356                     CRCOUTT         equ	854	;# 
  6889   000356                     CRCSHFTT        equ	854	;# 
  6890   000356                     CRCSHIFTT       equ	854	;# 
  6891   000356                     CRCXORT         equ	854	;# 
  6892   000357                     CRCCON0         equ	855	;# 
  6893   000358                     CRCCON1         equ	856	;# 
  6894   000359                     CRCCON2         equ	857	;# 
  6895   00035A                     SCANLADR        equ	858	;# 
  6896   00035A                     SCANLADRL       equ	858	;# 
  6897   00035B                     SCANLADRH       equ	859	;# 
  6898   00035C                     SCANLADRU       equ	860	;# 
  6899   00035D                     SCANHADR        equ	861	;# 
  6900   00035D                     SCANHADRL       equ	861	;# 
  6901   00035E                     SCANHADRH       equ	862	;# 
  6902   00035F                     SCANHADRU       equ	863	;# 
  6903   000360                     SCANCON0        equ	864	;# 
  6904   000361                     SCANTRIG        equ	865	;# 
  6905   000362                     IPR0            equ	866	;# 
  6906   000363                     IPR1            equ	867	;# 
  6907   000364                     IPR2            equ	868	;# 
  6908   000365                     IPR3            equ	869	;# 
  6909   000366                     IPR4            equ	870	;# 
  6910   000367                     IPR5            equ	871	;# 
  6911   000368                     IPR6            equ	872	;# 
  6912   000369                     IPR7            equ	873	;# 
  6913   00036A                     IPR8            equ	874	;# 
  6914   00036B                     IPR9            equ	875	;# 
  6915   00036C                     IPR10           equ	876	;# 
  6916   00036D                     IPR11           equ	877	;# 
  6917   00036E                     IPR12           equ	878	;# 
  6918   00036F                     IPR13           equ	879	;# 
  6919   000370                     IPR14           equ	880	;# 
  6920   000371                     IPR15           equ	881	;# 
  6921   000373                     STATUS_CSHAD    equ	883	;# 
  6922   000374                     WREG_CSHAD      equ	884	;# 
  6923   000375                     BSR_CSHAD       equ	885	;# 
  6924   000376                     SHADCON         equ	886	;# 
  6925   000377                     STATUS_SHAD     equ	887	;# 
  6926   000378                     WREG_SHAD       equ	888	;# 
  6927   000379                     BSR_SHAD        equ	889	;# 
  6928   00037A                     PCLATH_SHAD     equ	890	;# 
  6929   00037B                     PCLATU_SHAD     equ	891	;# 
  6930   00037C                     FSR0SH          equ	892	;# 
  6931   00037C                     FSR0L_SHAD      equ	892	;# 
  6932   00037D                     FSR0H_SHAD      equ	893	;# 
  6933   00037E                     FSR1SH          equ	894	;# 
  6934   00037E                     FSR1L_SHAD      equ	894	;# 
  6935   00037F                     FSR1H_SHAD      equ	895	;# 
  6936   000380                     FSR2SH          equ	896	;# 
  6937   000380                     FSR2L_SHAD      equ	896	;# 
  6938   000381                     FSR2H_SHAD      equ	897	;# 
  6939   000382                     PRODSH          equ	898	;# 
  6940   000382                     PRODL_SHAD      equ	898	;# 
  6941   000383                     PRODH_SHAD      equ	899	;# 
  6942   000387                     TU16ACON0       equ	903	;# 
  6943   000388                     TU16ACON1       equ	904	;# 
  6944   000389                     TU16AHLT        equ	905	;# 
  6945   00038A                     TU16APS         equ	906	;# 
  6946   00038B                     TU16ATMR        equ	907	;# 
  6947   00038B                     TU16ACR         equ	907	;# 
  6948   00038B                     TU16ATMRL       equ	907	;# 
  6949   00038B                     TU16ACRL        equ	907	;# 
  6950   00038C                     TU16ATMRH       equ	908	;# 
  6951   00038C                     TU16ACRH        equ	908	;# 
  6952   00038D                     TU16APR         equ	909	;# 
  6953   00038D                     TU16APRL        equ	909	;# 
  6954   00038E                     TU16APRH        equ	910	;# 
  6955   00038F                     TU16ACLK        equ	911	;# 
  6956   000390                     TU16AERS        equ	912	;# 
  6957   000393                     TU16BCON0       equ	915	;# 
  6958   000394                     TU16BCON1       equ	916	;# 
  6959   000395                     TU16BHLT        equ	917	;# 
  6960   000396                     TU16BPS         equ	918	;# 
  6961   000397                     TU16BTMR        equ	919	;# 
  6962   000397                     TU16BCR         equ	919	;# 
  6963   000397                     TU16BTMRL       equ	919	;# 
  6964   000397                     TU16BCRL        equ	919	;# 
  6965   000398                     TU16BTMRH       equ	920	;# 
  6966   000398                     TU16BCRH        equ	920	;# 
  6967   000399                     TU16BPR         equ	921	;# 
  6968   000399                     TU16BPRL        equ	921	;# 
  6969   00039A                     TU16BPRH        equ	922	;# 
  6970   00039B                     TU16BCLK        equ	923	;# 
  6971   00039C                     TU16BERS        equ	924	;# 
  6972   0003BB                     TUCHAIN         equ	955	;# 
  6973   0003BC                     CWG1CLK         equ	956	;# 
  6974   0003BC                     CWG1CLKCON      equ	956	;# 
  6975   0003BD                     CWG1ISM         equ	957	;# 
  6976   0003BE                     CWG1DBR         equ	958	;# 
  6977   0003BF                     CWG1DBF         equ	959	;# 
  6978   0003C0                     CWG1CON0        equ	960	;# 
  6979   0003C1                     CWG1CON1        equ	961	;# 
  6980   0003C2                     CWG1AS0         equ	962	;# 
  6981   0003C3                     CWG1AS1         equ	963	;# 
  6982   0003C4                     CWG1STR         equ	964	;# 
  6983   0003C5                     CWG2CLK         equ	965	;# 
  6984   0003C5                     CWG2CLKCON      equ	965	;# 
  6985   0003C6                     CWG2ISM         equ	966	;# 
  6986   0003C7                     CWG2DBR         equ	967	;# 
  6987   0003C8                     CWG2DBF         equ	968	;# 
  6988   0003C9                     CWG2CON0        equ	969	;# 
  6989   0003CA                     CWG2CON1        equ	970	;# 
  6990   0003CB                     CWG2AS0         equ	971	;# 
  6991   0003CC                     CWG2AS1         equ	972	;# 
  6992   0003CD                     CWG2STR         equ	973	;# 
  6993   0003CE                     CWG3CLK         equ	974	;# 
  6994   0003CE                     CWG3CLKCON      equ	974	;# 
  6995   0003CF                     CWG3ISM         equ	975	;# 
  6996   0003D0                     CWG3DBR         equ	976	;# 
  6997   0003D1                     CWG3DBF         equ	977	;# 
  6998   0003D2                     CWG3CON0        equ	978	;# 
  6999   0003D3                     CWG3CON1        equ	979	;# 
  7000   0003D4                     CWG3AS0         equ	980	;# 
  7001   0003D5                     CWG3AS1         equ	981	;# 
  7002   0003D6                     CWG3STR         equ	982	;# 
  7003   0003D7                     FVRCON          equ	983	;# 
  7004   0003D8                     ADCPCON         equ	984	;# 
  7005   0003D8                     ADCP            equ	984	;# 
  7006   0003D9                     ADLTH           equ	985	;# 
  7007   0003D9                     ADLTHL          equ	985	;# 
  7008   0003DA                     ADLTHH          equ	986	;# 
  7009   0003DB                     ADUTH           equ	987	;# 
  7010   0003DB                     ADUTHL          equ	987	;# 
  7011   0003DC                     ADUTHH          equ	988	;# 
  7012   0003DD                     ADERR           equ	989	;# 
  7013   0003DD                     ADERRL          equ	989	;# 
  7014   0003DE                     ADERRH          equ	990	;# 
  7015   0003DF                     ADSTPT          equ	991	;# 
  7016   0003DF                     ADSTPTL         equ	991	;# 
  7017   0003E0                     ADSTPTH         equ	992	;# 
  7018   0003E1                     ADFLTR          equ	993	;# 
  7019   0003E1                     ADFLTRL         equ	993	;# 
  7020   0003E2                     ADFLTRH         equ	994	;# 
  7021   0003E3                     ADACC           equ	995	;# 
  7022   0003E3                     ADACCL          equ	995	;# 
  7023   0003E4                     ADACCH          equ	996	;# 
  7024   0003E5                     ADACCU          equ	997	;# 
  7025   0003E6                     ADCNT           equ	998	;# 
  7026   0003E7                     ADRPT           equ	999	;# 
  7027   0003E8                     ADPREV          equ	1000	;# 
  7028   0003E8                     ADPREVL         equ	1000	;# 
  7029   0003E9                     ADPREVH         equ	1001	;# 
  7030   0003EA                     ADRES           equ	1002	;# 
  7031   0003EA                     ADRESL          equ	1002	;# 
  7032   0003EB                     ADRESH          equ	1003	;# 
  7033   0003EC                     ADPCH           equ	1004	;# 
  7034   0003EE                     ADACQ           equ	1006	;# 
  7035   0003EE                     ADACQL          equ	1006	;# 
  7036   0003EF                     ADACQH          equ	1007	;# 
  7037   0003F0                     ADCAP           equ	1008	;# 
  7038   0003F1                     ADPRE           equ	1009	;# 
  7039   0003F1                     ADPREL          equ	1009	;# 
  7040   0003F2                     ADPREH          equ	1010	;# 
  7041   0003F3                     ADCON0          equ	1011	;# 
  7042   0003F4                     ADCON1          equ	1012	;# 
  7043   0003F5                     ADCON2          equ	1013	;# 
  7044   0003F6                     ADCON3          equ	1014	;# 
  7045   0003F7                     ADSTAT          equ	1015	;# 
  7046   0003F8                     ADREF           equ	1016	;# 
  7047   0003F9                     ADACT           equ	1017	;# 
  7048   0003FA                     ADCLK           equ	1018	;# 
  7049   0003FB                     ADCTX           equ	1019	;# 
  7050   0003FC                     ADCSEL1         equ	1020	;# 
  7051   0003FD                     ADCSEL2         equ	1021	;# 
  7052   0003FE                     ADCSEL3         equ	1022	;# 
  7053   0003FF                     ADCSEL4         equ	1023	;# 
  7054   000400                     ANSELA          equ	1024	;# 
  7055   000401                     WPUA            equ	1025	;# 
  7056   000402                     ODCONA          equ	1026	;# 
  7057   000403                     SLRCONA         equ	1027	;# 
  7058   000404                     INLVLA          equ	1028	;# 
  7059   000405                     IOCAP           equ	1029	;# 
  7060   000406                     IOCAN           equ	1030	;# 
  7061   000407                     IOCAF           equ	1031	;# 
  7062   000408                     ANSELB          equ	1032	;# 
  7063   000409                     WPUB            equ	1033	;# 
  7064   00040A                     ODCONB          equ	1034	;# 
  7065   00040B                     SLRCONB         equ	1035	;# 
  7066   00040C                     INLVLB          equ	1036	;# 
  7067   00040D                     IOCBP           equ	1037	;# 
  7068   00040E                     IOCBN           equ	1038	;# 
  7069   00040F                     IOCBF           equ	1039	;# 
  7070   000410                     ANSELC          equ	1040	;# 
  7071   000411                     WPUC            equ	1041	;# 
  7072   000412                     ODCONC          equ	1042	;# 
  7073   000413                     SLRCONC         equ	1043	;# 
  7074   000414                     INLVLC          equ	1044	;# 
  7075   000415                     IOCCP           equ	1045	;# 
  7076   000416                     IOCCN           equ	1046	;# 
  7077   000417                     IOCCF           equ	1047	;# 
  7078   000421                     WPUE            equ	1057	;# 
  7079   000424                     INLVLE          equ	1060	;# 
  7080   000425                     IOCEP           equ	1061	;# 
  7081   000426                     IOCEN           equ	1062	;# 
  7082   000427                     IOCEF           equ	1063	;# 
  7083   000440                     NCO1ACC         equ	1088	;# 
  7084   000440                     NCO1ACCL        equ	1088	;# 
  7085   000441                     NCO1ACCH        equ	1089	;# 
  7086   000442                     NCO1ACCU        equ	1090	;# 
  7087   000443                     NCO1INC         equ	1091	;# 
  7088   000443                     NCO1INCL        equ	1091	;# 
  7089   000444                     NCO1INCH        equ	1092	;# 
  7090   000445                     NCO1INCU        equ	1093	;# 
  7091   000446                     NCO1CON         equ	1094	;# 
  7092   000447                     NCO1CLK         equ	1095	;# 
  7093   000448                     NCO2ACC         equ	1096	;# 
  7094   000448                     NCO2ACCL        equ	1096	;# 
  7095   000449                     NCO2ACCH        equ	1097	;# 
  7096   00044A                     NCO2ACCU        equ	1098	;# 
  7097   00044B                     NCO2INC         equ	1099	;# 
  7098   00044B                     NCO2INCL        equ	1099	;# 
  7099   00044C                     NCO2INCH        equ	1100	;# 
  7100   00044D                     NCO2INCU        equ	1101	;# 
  7101   00044E                     NCO2CON         equ	1102	;# 
  7102   00044F                     NCO2CLK         equ	1103	;# 
  7103   000450                     NCO3ACC         equ	1104	;# 
  7104   000450                     NCO3ACCL        equ	1104	;# 
  7105   000451                     NCO3ACCH        equ	1105	;# 
  7106   000452                     NCO3ACCU        equ	1106	;# 
  7107   000453                     NCO3INC         equ	1107	;# 
  7108   000453                     NCO3INCL        equ	1107	;# 
  7109   000454                     NCO3INCH        equ	1108	;# 
  7110   000455                     NCO3INCU        equ	1109	;# 
  7111   000456                     NCO3CON         equ	1110	;# 
  7112   000457                     NCO3CLK         equ	1111	;# 
  7113   000458                     FSCMCON         equ	1112	;# 
  7114   000459                     IVTLOCK         equ	1113	;# 
  7115   00045A                     IVTAD           equ	1114	;# 
  7116   00045A                     IVTADL          equ	1114	;# 
  7117   00045B                     IVTADH          equ	1115	;# 
  7118   00045C                     IVTADU          equ	1116	;# 
  7119   00045D                     IVTBASE         equ	1117	;# 
  7120   00045D                     IVTBASEL        equ	1117	;# 
  7121   00045E                     IVTBASEH        equ	1118	;# 
  7122   00045F                     IVTBASEU        equ	1119	;# 
  7123   000460                     PWM1ERS         equ	1120	;# 
  7124   000461                     PWM1CLK         equ	1121	;# 
  7125   000462                     PWM1LDS         equ	1122	;# 
  7126   000463                     PWM1PR          equ	1123	;# 
  7127   000463                     PWM1PRL         equ	1123	;# 
  7128   000464                     PWM1PRH         equ	1124	;# 
  7129   000465                     PWM1CPRE        equ	1125	;# 
  7130   000466                     PWM1PIPOS       equ	1126	;# 
  7131   000467                     PWM1GIR         equ	1127	;# 
  7132   000468                     PWM1GIE         equ	1128	;# 
  7133   000469                     PWM1CON         equ	1129	;# 
  7134   00046A                     PWM1S1CFG       equ	1130	;# 
  7135   00046B                     PWM1S1P1        equ	1131	;# 
  7136   00046B                     PWM1S1P1L       equ	1131	;# 
  7137   00046C                     PWM1S1P1H       equ	1132	;# 
  7138   00046D                     PWM1S1P2        equ	1133	;# 
  7139   00046D                     PWM1S1P2L       equ	1133	;# 
  7140   00046E                     PWM1S1P2H       equ	1134	;# 
  7141   00046F                     PWM2ERS         equ	1135	;# 
  7142   000470                     PWM2CLK         equ	1136	;# 
  7143   000471                     PWM2LDS         equ	1137	;# 
  7144   000472                     PWM2PR          equ	1138	;# 
  7145   000472                     PWM2PRL         equ	1138	;# 
  7146   000473                     PWM2PRH         equ	1139	;# 
  7147   000474                     PWM2CPRE        equ	1140	;# 
  7148   000475                     PWM2PIPOS       equ	1141	;# 
  7149   000476                     PWM2GIR         equ	1142	;# 
  7150   000477                     PWM2GIE         equ	1143	;# 
  7151   000478                     PWM2CON         equ	1144	;# 
  7152   000479                     PWM2S1CFG       equ	1145	;# 
  7153   00047A                     PWM2S1P1        equ	1146	;# 
  7154   00047A                     PWM2S1P1L       equ	1146	;# 
  7155   00047B                     PWM2S1P1H       equ	1147	;# 
  7156   00047C                     PWM2S1P2        equ	1148	;# 
  7157   00047C                     PWM2S1P2L       equ	1148	;# 
  7158   00047D                     PWM2S1P2H       equ	1149	;# 
  7159   00047E                     PWM3ERS         equ	1150	;# 
  7160   00047F                     PWM3CLK         equ	1151	;# 
  7161   000480                     PWM3LDS         equ	1152	;# 
  7162   000481                     PWM3PR          equ	1153	;# 
  7163   000481                     PWM3PRL         equ	1153	;# 
  7164   000482                     PWM3PRH         equ	1154	;# 
  7165   000483                     PWM3CPRE        equ	1155	;# 
  7166   000484                     PWM3PIPOS       equ	1156	;# 
  7167   000485                     PWM3GIR         equ	1157	;# 
  7168   000486                     PWM3GIE         equ	1158	;# 
  7169   000487                     PWM3CON         equ	1159	;# 
  7170   000488                     PWM3S1CFG       equ	1160	;# 
  7171   000489                     PWM3S1P1        equ	1161	;# 
  7172   000489                     PWM3S1P1L       equ	1161	;# 
  7173   00048A                     PWM3S1P1H       equ	1162	;# 
  7174   00048B                     PWM3S1P2        equ	1163	;# 
  7175   00048B                     PWM3S1P2L       equ	1163	;# 
  7176   00048C                     PWM3S1P2H       equ	1164	;# 
  7177   00048D                     PWM4ERS         equ	1165	;# 
  7178   00048E                     PWM4CLK         equ	1166	;# 
  7179   00048F                     PWM4LDS         equ	1167	;# 
  7180   000490                     PWM4PR          equ	1168	;# 
  7181   000490                     PWM4PRL         equ	1168	;# 
  7182   000491                     PWM4PRH         equ	1169	;# 
  7183   000492                     PWM4CPRE        equ	1170	;# 
  7184   000493                     PWM4PIPOS       equ	1171	;# 
  7185   000494                     PWM4GIR         equ	1172	;# 
  7186   000495                     PWM4GIE         equ	1173	;# 
  7187   000496                     PWM4CON         equ	1174	;# 
  7188   000497                     PWM4S1CFG       equ	1175	;# 
  7189   000498                     PWM4S1P1        equ	1176	;# 
  7190   000498                     PWM4S1P1L       equ	1176	;# 
  7191   000499                     PWM4S1P1H       equ	1177	;# 
  7192   00049A                     PWM4S1P2        equ	1178	;# 
  7193   00049A                     PWM4S1P2L       equ	1178	;# 
  7194   00049B                     PWM4S1P2H       equ	1179	;# 
  7195   00049C                     PWMLOAD         equ	1180	;# 
  7196   00049D                     PWMEN           equ	1181	;# 
  7197   00049E                     PIE0            equ	1182	;# 
  7198   00049F                     PIE1            equ	1183	;# 
  7199   0004A0                     PIE2            equ	1184	;# 
  7200   0004A1                     PIE3            equ	1185	;# 
  7201   0004A2                     PIE4            equ	1186	;# 
  7202   0004A3                     PIE5            equ	1187	;# 
  7203   0004A4                     PIE6            equ	1188	;# 
  7204   0004A5                     PIE7            equ	1189	;# 
  7205   0004A6                     PIE8            equ	1190	;# 
  7206   0004A7                     PIE9            equ	1191	;# 
  7207   0004A8                     PIE10           equ	1192	;# 
  7208   0004A9                     PIE11           equ	1193	;# 
  7209   0004AA                     PIE12           equ	1194	;# 
  7210   0004AB                     PIE13           equ	1195	;# 
  7211   0004AC                     PIE14           equ	1196	;# 
  7212   0004AD                     PIE15           equ	1197	;# 
  7213   0004AE                     PIR0            equ	1198	;# 
  7214   0004AF                     PIR1            equ	1199	;# 
  7215   0004B0                     PIR2            equ	1200	;# 
  7216   0004B1                     PIR3            equ	1201	;# 
  7217   0004B2                     PIR4            equ	1202	;# 
  7218   0004B3                     PIR5            equ	1203	;# 
  7219   0004B4                     PIR6            equ	1204	;# 
  7220   0004B5                     PIR7            equ	1205	;# 
  7221   0004B6                     PIR8            equ	1206	;# 
  7222   0004B7                     PIR9            equ	1207	;# 
  7223   0004B8                     PIR10           equ	1208	;# 
  7224   0004B9                     PIR11           equ	1209	;# 
  7225   0004BA                     PIR12           equ	1210	;# 
  7226   0004BB                     PIR13           equ	1211	;# 
  7227   0004BC                     PIR14           equ	1212	;# 
  7228   0004BD                     PIR15           equ	1213	;# 
  7229   0004BE                     LATA            equ	1214	;# 
  7230   0004BF                     LATB            equ	1215	;# 
  7231   0004C0                     LATC            equ	1216	;# 
  7232   0004C6                     TRISA           equ	1222	;# 
  7233   0004C7                     TRISB           equ	1223	;# 
  7234   0004C8                     TRISC           equ	1224	;# 
  7235   0004CA                     TRISE           equ	1226	;# 
  7236   0004CE                     PORTA           equ	1230	;# 
  7237   0004CF                     PORTB           equ	1231	;# 
  7238   0004D0                     PORTC           equ	1232	;# 
  7239   0004D2                     PORTE           equ	1234	;# 
  7240   0004D6                     INTCON0         equ	1238	;# 
  7241   0004D7                     INTCON1         equ	1239	;# 
  7242   0004D8                     STATUS          equ	1240	;# 
  7243   0004D9                     FSR2            equ	1241	;# 
  7244   0004D9                     FSR2L           equ	1241	;# 
  7245   0004DA                     FSR2H           equ	1242	;# 
  7246   0004DB                     PLUSW2          equ	1243	;# 
  7247   0004DC                     PREINC2         equ	1244	;# 
  7248   0004DD                     POSTDEC2        equ	1245	;# 
  7249   0004DE                     POSTINC2        equ	1246	;# 
  7250   0004DF                     INDF2           equ	1247	;# 
  7251   0004E0                     BSR             equ	1248	;# 
  7252   0004E1                     FSR1            equ	1249	;# 
  7253   0004E1                     FSR1L           equ	1249	;# 
  7254   0004E2                     FSR1H           equ	1250	;# 
  7255   0004E3                     PLUSW1          equ	1251	;# 
  7256   0004E4                     PREINC1         equ	1252	;# 
  7257   0004E5                     POSTDEC1        equ	1253	;# 
  7258   0004E6                     POSTINC1        equ	1254	;# 
  7259   0004E7                     INDF1           equ	1255	;# 
  7260   0004E8                     WREG            equ	1256	;# 
  7261   0004E9                     FSR0            equ	1257	;# 
  7262   0004E9                     FSR0L           equ	1257	;# 
  7263   0004EA                     FSR0H           equ	1258	;# 
  7264   0004EB                     PLUSW0          equ	1259	;# 
  7265   0004EC                     PREINC0         equ	1260	;# 
  7266   0004ED                     POSTDEC0        equ	1261	;# 
  7267   0004EE                     POSTINC0        equ	1262	;# 
  7268   0004EF                     INDF0           equ	1263	;# 
  7269   0004F0                     PCON0           equ	1264	;# 
  7270   0004F1                     PCON1           equ	1265	;# 
  7271   0004F2                     CPUDOZE         equ	1266	;# 
  7272   0004F3                     PROD            equ	1267	;# 
  7273   0004F3                     PRODL           equ	1267	;# 
  7274   0004F4                     PRODH           equ	1268	;# 
  7275   0004F5                     TABLAT          equ	1269	;# 
  7276   0004F6                     TBLPTR          equ	1270	;# 
  7277   0004F6                     TBLPTRL         equ	1270	;# 
  7278   0004F7                     TBLPTRH         equ	1271	;# 
  7279   0004F8                     TBLPTRU         equ	1272	;# 
  7280   0004F9                     PCLAT           equ	1273	;# 
  7281   0004F9                     PCL             equ	1273	;# 
  7282   0004FA                     PCLATH          equ	1274	;# 
  7283   0004FB                     PCLATU          equ	1275	;# 
  7284   0004FC                     STKPTR          equ	1276	;# 
  7285   0004FD                     TOS             equ	1277	;# 
  7286   0004FD                     TOSL            equ	1277	;# 
  7287   0004FE                     TOSH            equ	1278	;# 
  7288   0004FF                     TOSU            equ	1279	;# 
  7289   000038                     BOOTREG         equ	56	;# 
  7290   000039                     CLKRCON         equ	57	;# 
  7291   00003A                     CLKRCLK         equ	58	;# 
  7292   000040                     NVMCON0         equ	64	;# 
  7293   000041                     NVMCON1         equ	65	;# 
  7294   000042                     NVMLOCK         equ	66	;# 
  7295   000043                     NVMADR          equ	67	;# 
  7296   000043                     NVMADRL         equ	67	;# 
  7297   000044                     NVMADRH         equ	68	;# 
  7298   000045                     NVMADRU         equ	69	;# 
  7299   000046                     NVMDAT          equ	70	;# 
  7300   000046                     NVMDATL         equ	70	;# 
  7301   000047                     NVMDATH         equ	71	;# 
  7302   000048                     VREGCON         equ	72	;# 
  7303   000049                     BORCON          equ	73	;# 
  7304   00004A                     HLVDCON0        equ	74	;# 
  7305   00004B                     HLVDCON1        equ	75	;# 
  7306   00004C                     ZCDCON          equ	76	;# 
  7307   000060                     PMD0            equ	96	;# 
  7308   000061                     PMD1            equ	97	;# 
  7309   000062                     PMD2            equ	98	;# 
  7310   000063                     PMD3            equ	99	;# 
  7311   000064                     PMD4            equ	100	;# 
  7312   000065                     PMD5            equ	101	;# 
  7313   000066                     PMD6            equ	102	;# 
  7314   000067                     PMD7            equ	103	;# 
  7315   000068                     PMD8            equ	104	;# 
  7316   00006A                     MD1CON0         equ	106	;# 
  7317   00006B                     MD1CON1         equ	107	;# 
  7318   00006C                     MD1SRC          equ	108	;# 
  7319   00006D                     MD1CARL         equ	109	;# 
  7320   00006E                     MD1CARH         equ	110	;# 
  7321   00006F                     CMOUT           equ	111	;# 
  7322   000070                     CM1CON0         equ	112	;# 
  7323   000071                     CM1CON1         equ	113	;# 
  7324   000072                     CM1NCH          equ	114	;# 
  7325   000073                     CM1PCH          equ	115	;# 
  7326   000074                     CM2CON0         equ	116	;# 
  7327   000075                     CM2CON1         equ	117	;# 
  7328   000076                     CM2NCH          equ	118	;# 
  7329   000077                     CM2PCH          equ	119	;# 
  7330   000078                     WDTCON0         equ	120	;# 
  7331   000079                     WDTCON1         equ	121	;# 
  7332   00007A                     WDTPSL          equ	122	;# 
  7333   00007B                     WDTPSH          equ	123	;# 
  7334   00007C                     WDTTMR          equ	124	;# 
  7335   00007D                     DAC1DAT         equ	125	;# 
  7336   00007D                     DAC1DATL        equ	125	;# 
  7337   00007F                     DAC1CON         equ	127	;# 
  7338   000080                     SPI1RXB         equ	128	;# 
  7339   000081                     SPI1TXB         equ	129	;# 
  7340   000082                     SPI1TCNT        equ	130	;# 
  7341   000082                     SPI1TCNTL       equ	130	;# 
  7342   000083                     SPI1TCNTH       equ	131	;# 
  7343   000084                     SPI1CON0        equ	132	;# 
  7344   000085                     SPI1CON1        equ	133	;# 
  7345   000086                     SPI1CON2        equ	134	;# 
  7346   000087                     SPI1STATUS      equ	135	;# 
  7347   000088                     SPI1TWIDTH      equ	136	;# 
  7348   000089                     SPI1BAUD        equ	137	;# 
  7349   00008A                     SPI1INTF        equ	138	;# 
  7350   00008B                     SPI1INTE        equ	139	;# 
  7351   00008C                     SPI1CLK         equ	140	;# 
  7352   00008D                     SPI2RXB         equ	141	;# 
  7353   00008E                     SPI2TXB         equ	142	;# 
  7354   00008F                     SPI2TCNT        equ	143	;# 
  7355   00008F                     SPI2TCNTL       equ	143	;# 
  7356   000090                     SPI2TCNTH       equ	144	;# 
  7357   000091                     SPI2CON0        equ	145	;# 
  7358   000092                     SPI2CON1        equ	146	;# 
  7359   000093                     SPI2CON2        equ	147	;# 
  7360   000094                     SPI2STATUS      equ	148	;# 
  7361   000095                     SPI2TWIDTH      equ	149	;# 
  7362   000096                     SPI2BAUD        equ	150	;# 
  7363   000097                     SPI2INTF        equ	151	;# 
  7364   000098                     SPI2INTE        equ	152	;# 
  7365   000099                     SPI2CLK         equ	153	;# 
  7366   0000AC                     ACTCON          equ	172	;# 
  7367   0000AD                     OSCCON1         equ	173	;# 
  7368   0000AE                     OSCCON2         equ	174	;# 
  7369   0000AF                     OSCCON3         equ	175	;# 
  7370   0000B0                     OSCTUNE         equ	176	;# 
  7371   0000B1                     OSCFRQ          equ	177	;# 
  7372   0000B1                     OSCFREQ         equ	177	;# 
  7373   0000B2                     OSCSTAT         equ	178	;# 
  7374   0000B2                     OSCSTAT1        equ	178	;# 
  7375   0000B3                     OSCEN           equ	179	;# 
  7376   0000B4                     PRLOCK          equ	180	;# 
  7377   0000B5                     SCANPR          equ	181	;# 
  7378   0000B6                     DMA1PR          equ	182	;# 
  7379   0000B7                     DMA2PR          equ	183	;# 
  7380   0000B8                     DMA3PR          equ	184	;# 
  7381   0000B9                     DMA4PR          equ	185	;# 
  7382   0000BA                     DMA5PR          equ	186	;# 
  7383   0000BB                     DMA6PR          equ	187	;# 
  7384   0000BC                     DMA7PR          equ	188	;# 
  7385   0000BD                     DMA8PR          equ	189	;# 
  7386   0000BE                     MAINPR          equ	190	;# 
  7387   0000BF                     ISRPR           equ	191	;# 
  7388   0000D4                     CLCDATA         equ	212	;# 
  7389   0000D5                     CLCSELECT       equ	213	;# 
  7390   0000D6                     CLCnCON         equ	214	;# 
  7391   0000D7                     CLCnPOL         equ	215	;# 
  7392   0000D8                     CLCnSEL0        equ	216	;# 
  7393   0000D9                     CLCnSEL1        equ	217	;# 
  7394   0000DA                     CLCnSEL2        equ	218	;# 
  7395   0000DB                     CLCnSEL3        equ	219	;# 
  7396   0000DC                     CLCnGLS0        equ	220	;# 
  7397   0000DD                     CLCnGLS1        equ	221	;# 
  7398   0000DE                     CLCnGLS2        equ	222	;# 
  7399   0000DF                     CLCnGLS3        equ	223	;# 
  7400   0000E8                     DMASELECT       equ	232	;# 
  7401   0000E9                     DMAnBUF         equ	233	;# 
  7402   0000EA                     DMAnDCNT        equ	234	;# 
  7403   0000EA                     DMAnDCNTL       equ	234	;# 
  7404   0000EB                     DMAnDCNTH       equ	235	;# 
  7405   0000EC                     DMAnDPTR        equ	236	;# 
  7406   0000EC                     DMAnDPTRL       equ	236	;# 
  7407   0000ED                     DMAnDPTRH       equ	237	;# 
  7408   0000EE                     DMAnDSZ         equ	238	;# 
  7409   0000EE                     DMAnDSZL        equ	238	;# 
  7410   0000EF                     DMAnDSZH        equ	239	;# 
  7411   0000F0                     DMAnDSA         equ	240	;# 
  7412   0000F0                     DMAnDSAL        equ	240	;# 
  7413   0000F1                     DMAnDSAH        equ	241	;# 
  7414   0000F2                     DMAnSCNT        equ	242	;# 
  7415   0000F2                     DMAnSCNTL       equ	242	;# 
  7416   0000F3                     DMAnSCNTH       equ	243	;# 
  7417   0000F4                     DMAnSPTR        equ	244	;# 
  7418   0000F4                     DMAnSPTRL       equ	244	;# 
  7419   0000F5                     DMAnSPTRH       equ	245	;# 
  7420   0000F6                     DMAnSPTRU       equ	246	;# 
  7421   0000F7                     DMAnSSZ         equ	247	;# 
  7422   0000F7                     DMAnSSZL        equ	247	;# 
  7423   0000F8                     DMAnSSZH        equ	248	;# 
  7424   0000F9                     DMAnSSA         equ	249	;# 
  7425   0000F9                     DMAnSSAL        equ	249	;# 
  7426   0000FA                     DMAnSSAH        equ	250	;# 
  7427   0000FB                     DMAnSSAU        equ	251	;# 
  7428   0000FC                     DMAnCON0        equ	252	;# 
  7429   0000FD                     DMAnCON1        equ	253	;# 
  7430   0000FE                     DMAnAIRQ        equ	254	;# 
  7431   0000FF                     DMAnSIRQ        equ	255	;# 
  7432   000100                     C1CONL          equ	256	;# 
  7433   000101                     C1CONH          equ	257	;# 
  7434   000102                     C1CONU          equ	258	;# 
  7435   000103                     C1CONT          equ	259	;# 
  7436   000104                     C1NBTCFGL       equ	260	;# 
  7437   000105                     C1NBTCFGH       equ	261	;# 
  7438   000106                     C1NBTCFGU       equ	262	;# 
  7439   000107                     C1NBTCFGT       equ	263	;# 
  7440   000108                     C1DBTCFGL       equ	264	;# 
  7441   000109                     C1DBTCFGH       equ	265	;# 
  7442   00010A                     C1DBTCFGU       equ	266	;# 
  7443   00010B                     C1DBTCFGT       equ	267	;# 
  7444   00010C                     C1TDCL          equ	268	;# 
  7445   00010D                     C1TDCH          equ	269	;# 
  7446   00010E                     C1TDCU          equ	270	;# 
  7447   000110                     C1TBC           equ	272	;# 
  7448   000110                     C1TBCL          equ	272	;# 
  7449   000111                     C1TBCH          equ	273	;# 
  7450   000112                     C1TBCU          equ	274	;# 
  7451   000113                     C1TBCT          equ	275	;# 
  7452   000114                     C1TSCONL        equ	276	;# 
  7453   000115                     C1TSCONH        equ	277	;# 
  7454   000116                     C1TSCONU        equ	278	;# 
  7455   000117                     C1TSCONT        equ	279	;# 
  7456   000118                     C1VECL          equ	280	;# 
  7457   000119                     C1VECH          equ	281	;# 
  7458   00011A                     C1VECU          equ	282	;# 
  7459   00011B                     C1VECT          equ	283	;# 
  7460   00011C                     C1INTL          equ	284	;# 
  7461   00011D                     C1INTH          equ	285	;# 
  7462   00011E                     C1INTU          equ	286	;# 
  7463   00011F                     C1INTT          equ	287	;# 
  7464   000120                     C1RXIF          equ	288	;# 
  7465   000120                     C1RXIFL         equ	288	;# 
  7466   000121                     C1RXIFH         equ	289	;# 
  7467   000122                     C1RXIFU         equ	290	;# 
  7468   000123                     C1RXIFT         equ	291	;# 
  7469   000124                     C1TXIF          equ	292	;# 
  7470   000124                     C1TXIFL         equ	292	;# 
  7471   000125                     C1TXIFH         equ	293	;# 
  7472   000126                     C1TXIFU         equ	294	;# 
  7473   000127                     C1TXIFT         equ	295	;# 
  7474   000128                     C1RXOVIF        equ	296	;# 
  7475   000128                     C1RXOVIFL       equ	296	;# 
  7476   000129                     C1RXOVIFH       equ	297	;# 
  7477   00012A                     C1RXOVIFU       equ	298	;# 
  7478   00012B                     C1RXOVIFT       equ	299	;# 
  7479   00012C                     C1TXATIF        equ	300	;# 
  7480   00012C                     C1TXATIFL       equ	300	;# 
  7481   00012D                     C1TXATIFH       equ	301	;# 
  7482   00012E                     C1TXATIFU       equ	302	;# 
  7483   00012F                     C1TXATIFT       equ	303	;# 
  7484   000130                     C1TXREQ         equ	304	;# 
  7485   000130                     C1TXREQL        equ	304	;# 
  7486   000131                     C1TXREQH        equ	305	;# 
  7487   000132                     C1TXREQU        equ	306	;# 
  7488   000133                     C1TXREQT        equ	307	;# 
  7489   000134                     C1TRECL         equ	308	;# 
  7490   000135                     C1TRECH         equ	309	;# 
  7491   000136                     C1TRECU         equ	310	;# 
  7492   000137                     C1TRECT         equ	311	;# 
  7493   000138                     C1BDIAG0L       equ	312	;# 
  7494   000139                     C1BDIAG0H       equ	313	;# 
  7495   00013C                     C1BDIAG1L       equ	316	;# 
  7496   00013D                     C1BDIAG1H       equ	317	;# 
  7497   00013E                     C1BDIAG1U       equ	318	;# 
  7498   00013F                     C1BDIAG1T       equ	319	;# 
  7499   000140                     C1TEFCONL       equ	320	;# 
  7500   000141                     C1TEFCONH       equ	321	;# 
  7501   000142                     C1TEFCONU       equ	322	;# 
  7502   000143                     C1TEFCONT       equ	323	;# 
  7503   000144                     C1TEFSTAL       equ	324	;# 
  7504   000145                     C1TEFSTAH       equ	325	;# 
  7505   000146                     C1TEFSTAU       equ	326	;# 
  7506   000147                     C1TEFSTAT       equ	327	;# 
  7507   000148                     C1TEFUA         equ	328	;# 
  7508   000148                     C1TEFUAL        equ	328	;# 
  7509   000149                     C1TEFUAH        equ	329	;# 
  7510   00014A                     C1TEFUAU        equ	330	;# 
  7511   00014B                     C1TEFUAT        equ	331	;# 
  7512   00014C                     C1FIFOBA        equ	332	;# 
  7513   00014C                     C1FIFOBAL       equ	332	;# 
  7514   00014D                     C1FIFOBAH       equ	333	;# 
  7515   00014E                     C1FIFOBAU       equ	334	;# 
  7516   00014F                     C1FIFOBAT       equ	335	;# 
  7517   000150                     C1TXQCONL       equ	336	;# 
  7518   000151                     C1TXQCONH       equ	337	;# 
  7519   000152                     C1TXQCONU       equ	338	;# 
  7520   000153                     C1TXQCONT       equ	339	;# 
  7521   000154                     C1TXQSTAL       equ	340	;# 
  7522   000155                     C1TXQSTAH       equ	341	;# 
  7523   000156                     C1TXQSTAU       equ	342	;# 
  7524   000157                     C1TXQSTAT       equ	343	;# 
  7525   000158                     C1TXQUA         equ	344	;# 
  7526   000158                     C1TXQUAL        equ	344	;# 
  7527   000159                     C1TXQUAH        equ	345	;# 
  7528   00015A                     C1TXQUAU        equ	346	;# 
  7529   00015B                     C1TXQUAT        equ	347	;# 
  7530   00015C                     C1FIFOCON1      equ	348	;# 
  7531   00015C                     C1FIFOCON1L     equ	348	;# 
  7532   00015D                     C1FIFOCON1H     equ	349	;# 
  7533   00015E                     C1FIFOCON1U     equ	350	;# 
  7534   00015F                     C1FIFOCON1T     equ	351	;# 
  7535   000160                     C1FIFOSTA1      equ	352	;# 
  7536   000160                     C1FIFOSTA1L     equ	352	;# 
  7537   000161                     C1FIFOSTA1H     equ	353	;# 
  7538   000162                     C1FIFOSTA1U     equ	354	;# 
  7539   000163                     C1FIFOSTA1T     equ	355	;# 
  7540   000164                     C1FIFOUA1       equ	356	;# 
  7541   000164                     C1FIFOUA1L      equ	356	;# 
  7542   000165                     C1FIFOUA1H      equ	357	;# 
  7543   000166                     C1FIFOUA1U      equ	358	;# 
  7544   000167                     C1FIFOUA1T      equ	359	;# 
  7545   000168                     C1FIFOCON2      equ	360	;# 
  7546   000168                     C1FIFOCON2L     equ	360	;# 
  7547   000169                     C1FIFOCON2H     equ	361	;# 
  7548   00016A                     C1FIFOCON2U     equ	362	;# 
  7549   00016B                     C1FIFOCON2T     equ	363	;# 
  7550   00016C                     C1FIFOSTA2      equ	364	;# 
  7551   00016C                     C1FIFOSTA2L     equ	364	;# 
  7552   00016D                     C1FIFOSTA2H     equ	365	;# 
  7553   00016E                     C1FIFOSTA2U     equ	366	;# 
  7554   00016F                     C1FIFOSTA2T     equ	367	;# 
  7555   000170                     C1FIFOUA2       equ	368	;# 
  7556   000170                     C1FIFOUA2L      equ	368	;# 
  7557   000171                     C1FIFOUA2H      equ	369	;# 
  7558   000172                     C1FIFOUA2U      equ	370	;# 
  7559   000173                     C1FIFOUA2T      equ	371	;# 
  7560   000174                     C1FIFOCON3      equ	372	;# 
  7561   000174                     C1FIFOCON3L     equ	372	;# 
  7562   000175                     C1FIFOCON3H     equ	373	;# 
  7563   000176                     C1FIFOCON3U     equ	374	;# 
  7564   000177                     C1FIFOCON3T     equ	375	;# 
  7565   000178                     C1FIFOSTA3      equ	376	;# 
  7566   000178                     C1FIFOSTA3L     equ	376	;# 
  7567   000179                     C1FIFOSTA3H     equ	377	;# 
  7568   00017A                     C1FIFOSTA3U     equ	378	;# 
  7569   00017B                     C1FIFOSTA3T     equ	379	;# 
  7570   00017C                     C1FIFOUA3       equ	380	;# 
  7571   00017C                     C1FIFOUA3L      equ	380	;# 
  7572   00017D                     C1FIFOUA3H      equ	381	;# 
  7573   00017E                     C1FIFOUA3U      equ	382	;# 
  7574   00017F                     C1FIFOUA3T      equ	383	;# 
  7575   000180                     C1FLTCON0L      equ	384	;# 
  7576   000181                     C1FLTCON0H      equ	385	;# 
  7577   000182                     C1FLTCON0U      equ	386	;# 
  7578   000183                     C1FLTCON0T      equ	387	;# 
  7579   000184                     C1FLTCON1L      equ	388	;# 
  7580   000185                     C1FLTCON1H      equ	389	;# 
  7581   000186                     C1FLTCON1U      equ	390	;# 
  7582   000187                     C1FLTCON1T      equ	391	;# 
  7583   000188                     C1FLTCON2L      equ	392	;# 
  7584   000189                     C1FLTCON2H      equ	393	;# 
  7585   00018A                     C1FLTCON2U      equ	394	;# 
  7586   00018B                     C1FLTCON2T      equ	395	;# 
  7587   00018C                     C1FLTOBJ0       equ	396	;# 
  7588   00018C                     C1FLTOBJ0L      equ	396	;# 
  7589   00018D                     C1FLTOBJ0H      equ	397	;# 
  7590   00018E                     C1FLTOBJ0U      equ	398	;# 
  7591   00018F                     C1FLTOBJ0T      equ	399	;# 
  7592   000190                     C1MASK0         equ	400	;# 
  7593   000190                     C1MASK0L        equ	400	;# 
  7594   000191                     C1MASK0H        equ	401	;# 
  7595   000192                     C1MASK0U        equ	402	;# 
  7596   000193                     C1MASK0T        equ	403	;# 
  7597   000194                     C1FLTOBJ1       equ	404	;# 
  7598   000194                     C1FLTOBJ1L      equ	404	;# 
  7599   000195                     C1FLTOBJ1H      equ	405	;# 
  7600   000196                     C1FLTOBJ1U      equ	406	;# 
  7601   000197                     C1FLTOBJ1T      equ	407	;# 
  7602   000198                     C1MASK1         equ	408	;# 
  7603   000198                     C1MASK1L        equ	408	;# 
  7604   000199                     C1MASK1H        equ	409	;# 
  7605   00019A                     C1MASK1U        equ	410	;# 
  7606   00019B                     C1MASK1T        equ	411	;# 
  7607   00019C                     C1FLTOBJ2       equ	412	;# 
  7608   00019C                     C1FLTOBJ2L      equ	412	;# 
  7609   00019D                     C1FLTOBJ2H      equ	413	;# 
  7610   00019E                     C1FLTOBJ2U      equ	414	;# 
  7611   00019F                     C1FLTOBJ2T      equ	415	;# 
  7612   0001A0                     C1MASK2         equ	416	;# 
  7613   0001A0                     C1MASK2L        equ	416	;# 
  7614   0001A1                     C1MASK2H        equ	417	;# 
  7615   0001A2                     C1MASK2U        equ	418	;# 
  7616   0001A3                     C1MASK2T        equ	419	;# 
  7617   0001A4                     C1FLTOBJ3       equ	420	;# 
  7618   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7619   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7620   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7621   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7622   0001A8                     C1MASK3         equ	424	;# 
  7623   0001A8                     C1MASK3L        equ	424	;# 
  7624   0001A9                     C1MASK3H        equ	425	;# 
  7625   0001AA                     C1MASK3U        equ	426	;# 
  7626   0001AB                     C1MASK3T        equ	427	;# 
  7627   0001AC                     C1FLTOBJ4       equ	428	;# 
  7628   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7629   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7630   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7631   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7632   0001B0                     C1MASK4         equ	432	;# 
  7633   0001B0                     C1MASK4L        equ	432	;# 
  7634   0001B1                     C1MASK4H        equ	433	;# 
  7635   0001B2                     C1MASK4U        equ	434	;# 
  7636   0001B3                     C1MASK4T        equ	435	;# 
  7637   0001B4                     C1FLTOBJ5       equ	436	;# 
  7638   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7639   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7640   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7641   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7642   0001B8                     C1MASK5         equ	440	;# 
  7643   0001B8                     C1MASK5L        equ	440	;# 
  7644   0001B9                     C1MASK5H        equ	441	;# 
  7645   0001BA                     C1MASK5U        equ	442	;# 
  7646   0001BB                     C1MASK5T        equ	443	;# 
  7647   0001BC                     C1FLTOBJ6       equ	444	;# 
  7648   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7649   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7650   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7651   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7652   0001C0                     C1MASK6         equ	448	;# 
  7653   0001C0                     C1MASK6L        equ	448	;# 
  7654   0001C1                     C1MASK6H        equ	449	;# 
  7655   0001C2                     C1MASK6U        equ	450	;# 
  7656   0001C3                     C1MASK6T        equ	451	;# 
  7657   0001C4                     C1FLTOBJ7       equ	452	;# 
  7658   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7659   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7660   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7661   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7662   0001C8                     C1MASK7         equ	456	;# 
  7663   0001C8                     C1MASK7L        equ	456	;# 
  7664   0001C9                     C1MASK7H        equ	457	;# 
  7665   0001CA                     C1MASK7U        equ	458	;# 
  7666   0001CB                     C1MASK7T        equ	459	;# 
  7667   0001CC                     C1FLTOBJ8       equ	460	;# 
  7668   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7669   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7670   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7671   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7672   0001D0                     C1MASK8         equ	464	;# 
  7673   0001D0                     C1MASK8L        equ	464	;# 
  7674   0001D1                     C1MASK8H        equ	465	;# 
  7675   0001D2                     C1MASK8U        equ	466	;# 
  7676   0001D3                     C1MASK8T        equ	467	;# 
  7677   0001D4                     C1FLTOBJ9       equ	468	;# 
  7678   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7679   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7680   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7681   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7682   0001D8                     C1MASK9         equ	472	;# 
  7683   0001D8                     C1MASK9L        equ	472	;# 
  7684   0001D9                     C1MASK9H        equ	473	;# 
  7685   0001DA                     C1MASK9U        equ	474	;# 
  7686   0001DB                     C1MASK9T        equ	475	;# 
  7687   0001DC                     C1FLTOBJ10      equ	476	;# 
  7688   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7689   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7690   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7691   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7692   0001E0                     C1MASK10        equ	480	;# 
  7693   0001E0                     C1MASK10L       equ	480	;# 
  7694   0001E1                     C1MASK10H       equ	481	;# 
  7695   0001E2                     C1MASK10U       equ	482	;# 
  7696   0001E3                     C1MASK10T       equ	483	;# 
  7697   0001E4                     C1FLTOBJ11      equ	484	;# 
  7698   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7699   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7700   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7701   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7702   0001E8                     C1MASK11        equ	488	;# 
  7703   0001E8                     C1MASK11L       equ	488	;# 
  7704   0001E9                     C1MASK11H       equ	489	;# 
  7705   0001EA                     C1MASK11U       equ	490	;# 
  7706   0001EB                     C1MASK11T       equ	491	;# 
  7707   000200                     PPSLOCK         equ	512	;# 
  7708   000201                     RA0PPS          equ	513	;# 
  7709   000202                     RA1PPS          equ	514	;# 
  7710   000203                     RA2PPS          equ	515	;# 
  7711   000204                     RA3PPS          equ	516	;# 
  7712   000205                     RA4PPS          equ	517	;# 
  7713   000206                     RA5PPS          equ	518	;# 
  7714   000207                     RA6PPS          equ	519	;# 
  7715   000208                     RA7PPS          equ	520	;# 
  7716   000209                     RB0PPS          equ	521	;# 
  7717   00020A                     RB1PPS          equ	522	;# 
  7718   00020B                     RB2PPS          equ	523	;# 
  7719   00020C                     RB3PPS          equ	524	;# 
  7720   00020D                     RB4PPS          equ	525	;# 
  7721   00020E                     RB5PPS          equ	526	;# 
  7722   00020F                     RB6PPS          equ	527	;# 
  7723   000210                     RB7PPS          equ	528	;# 
  7724   000211                     RC0PPS          equ	529	;# 
  7725   000212                     RC1PPS          equ	530	;# 
  7726   000213                     RC2PPS          equ	531	;# 
  7727   000214                     RC3PPS          equ	532	;# 
  7728   000215                     RC4PPS          equ	533	;# 
  7729   000216                     RC5PPS          equ	534	;# 
  7730   000217                     RC6PPS          equ	535	;# 
  7731   000218                     RC7PPS          equ	536	;# 
  7732   00023D                     CANRXPPS        equ	573	;# 
  7733   00023E                     INT0PPS         equ	574	;# 
  7734   00023F                     INT1PPS         equ	575	;# 
  7735   000240                     INT2PPS         equ	576	;# 
  7736   000241                     T0CKIPPS        equ	577	;# 
  7737   000242                     T1CKIPPS        equ	578	;# 
  7738   000243                     T1GPPS          equ	579	;# 
  7739   000244                     T3CKIPPS        equ	580	;# 
  7740   000245                     T3GPPS          equ	581	;# 
  7741   000246                     T5CKIPPS        equ	582	;# 
  7742   000247                     T5GPPS          equ	583	;# 
  7743   000248                     T2INPPS         equ	584	;# 
  7744   000249                     T4INPPS         equ	585	;# 
  7745   00024A                     T6INPPS         equ	586	;# 
  7746   00024B                     TUIN0PPS        equ	587	;# 
  7747   00024C                     TUIN1PPS        equ	588	;# 
  7748   00024F                     CCP1PPS         equ	591	;# 
  7749   000250                     CCP2PPS         equ	592	;# 
  7750   000251                     CCP3PPS         equ	593	;# 
  7751   000253                     PWM1ERSPPS      equ	595	;# 
  7752   000254                     PWM2ERSPPS      equ	596	;# 
  7753   000255                     PWM3ERSPPS      equ	597	;# 
  7754   000256                     PWM4ERSPPS      equ	598	;# 
  7755   000257                     PWMIN0PPS       equ	599	;# 
  7756   000258                     PWMIN1PPS       equ	600	;# 
  7757   000259                     SMT1WINPPS      equ	601	;# 
  7758   00025A                     SMT1SIGPPS      equ	602	;# 
  7759   00025B                     CWG1PPS         equ	603	;# 
  7760   00025B                     CWG1INPPS       equ	603	;# 
  7761   00025C                     CWG2PPS         equ	604	;# 
  7762   00025C                     CWG2INPPS       equ	604	;# 
  7763   00025D                     CWG3PPS         equ	605	;# 
  7764   00025D                     CWG3INPPS       equ	605	;# 
  7765   00025E                     MD1CARLPPS      equ	606	;# 
  7766   00025E                     MDCARLPPS       equ	606	;# 
  7767   00025F                     MD1CARHPPS      equ	607	;# 
  7768   00025F                     MDCARHPPS       equ	607	;# 
  7769   000260                     MD1SRCPPS       equ	608	;# 
  7770   000260                     MDSRCPPS        equ	608	;# 
  7771   000261                     CLCIN0PPS       equ	609	;# 
  7772   000262                     CLCIN1PPS       equ	610	;# 
  7773   000263                     CLCIN2PPS       equ	611	;# 
  7774   000264                     CLCIN3PPS       equ	612	;# 
  7775   000265                     CLCIN4PPS       equ	613	;# 
  7776   000266                     CLCIN5PPS       equ	614	;# 
  7777   000267                     CLCIN6PPS       equ	615	;# 
  7778   000268                     CLCIN7PPS       equ	616	;# 
  7779   000269                     ADACTPPS        equ	617	;# 
  7780   00026A                     SPI1SCKPPS      equ	618	;# 
  7781   00026B                     SPI1SDIPPS      equ	619	;# 
  7782   00026C                     SPI1SSPPS       equ	620	;# 
  7783   00026D                     SPI2SCKPPS      equ	621	;# 
  7784   00026E                     SPI2SDIPPS      equ	622	;# 
  7785   00026F                     SPI2SSPPS       equ	623	;# 
  7786   000270                     I2C1SDAPPS      equ	624	;# 
  7787   000271                     I2C1SCLPPS      equ	625	;# 
  7788   000272                     U1RXPPS         equ	626	;# 
  7789   000273                     U1CTSPPS        equ	627	;# 
  7790   000274                     U2RXPPS         equ	628	;# 
  7791   000275                     U2CTSPPS        equ	629	;# 
  7792   000276                     U3RXPPS         equ	630	;# 
  7793   000277                     U3CTSPPS        equ	631	;# 
  7794   000278                     U4RXPPS         equ	632	;# 
  7795   000279                     U4CTSPPS        equ	633	;# 
  7796   00027A                     U5RXPPS         equ	634	;# 
  7797   00027B                     U5CTSPPS        equ	635	;# 
  7798   000286                     RC4I2C          equ	646	;# 
  7799   000287                     RC3I2C          equ	647	;# 
  7800   000288                     RB2I2C          equ	648	;# 
  7801   000289                     RB1I2C          equ	649	;# 
  7802   00028A                     I2C1RXB         equ	650	;# 
  7803   00028B                     I2C1TXB         equ	651	;# 
  7804   00028C                     I2C1CNTL        equ	652	;# 
  7805   00028D                     I2C1CNTH        equ	653	;# 
  7806   00028E                     I2C1ADB0        equ	654	;# 
  7807   00028F                     I2C1ADB1        equ	655	;# 
  7808   000290                     I2C1ADR0        equ	656	;# 
  7809   000291                     I2C1ADR1        equ	657	;# 
  7810   000292                     I2C1ADR2        equ	658	;# 
  7811   000293                     I2C1ADR3        equ	659	;# 
  7812   000294                     I2C1CON0        equ	660	;# 
  7813   000295                     I2C1CON1        equ	661	;# 
  7814   000296                     I2C1CON2        equ	662	;# 
  7815   000297                     I2C1ERR         equ	663	;# 
  7816   000298                     I2C1STAT0       equ	664	;# 
  7817   000299                     I2C1STAT1       equ	665	;# 
  7818   00029A                     I2C1PIR         equ	666	;# 
  7819   00029B                     I2C1PIE         equ	667	;# 
  7820   00029C                     I2C1BTO         equ	668	;# 
  7821   00029D                     I2C1BAUD        equ	669	;# 
  7822   00029E                     I2C1CLK         equ	670	;# 
  7823   00029F                     I2C1BTOC        equ	671	;# 
  7824   0002A1                     U1RXB           equ	673	;# 
  7825   0002A1                     U1RXBL          equ	673	;# 
  7826   0002A2                     U1RXCHK         equ	674	;# 
  7827   0002A3                     U1TXB           equ	675	;# 
  7828   0002A3                     U1TXBL          equ	675	;# 
  7829   0002A4                     U1TXCHK         equ	676	;# 
  7830   0002A5                     U1P1            equ	677	;# 
  7831   0002A5                     U1P1L           equ	677	;# 
  7832   0002A6                     U1P1H           equ	678	;# 
  7833   0002A7                     U1P2            equ	679	;# 
  7834   0002A7                     U1P2L           equ	679	;# 
  7835   0002A8                     U1P2H           equ	680	;# 
  7836   0002A9                     U1P3            equ	681	;# 
  7837   0002A9                     U1P3L           equ	681	;# 
  7838   0002AA                     U1P3H           equ	682	;# 
  7839   0002AB                     U1CON0          equ	683	;# 
  7840   0002AC                     U1CON1          equ	684	;# 
  7841   0002AD                     U1CON2          equ	685	;# 
  7842   0002AE                     U1BRG           equ	686	;# 
  7843   0002AE                     U1BRGL          equ	686	;# 
  7844   0002AF                     U1BRGH          equ	687	;# 
  7845   0002B0                     U1FIFO          equ	688	;# 
  7846   0002B1                     U1UIR           equ	689	;# 
  7847   0002B2                     U1ERRIR         equ	690	;# 
  7848   0002B3                     U1ERRIE         equ	691	;# 
  7849   0002B4                     U2RXB           equ	692	;# 
  7850   0002B4                     U2RXBL          equ	692	;# 
  7851   0002B5                     U2RXCHK         equ	693	;# 
  7852   0002B6                     U2TXB           equ	694	;# 
  7853   0002B6                     U2TXBL          equ	694	;# 
  7854   0002B7                     U2TXCHK         equ	695	;# 
  7855   0002B8                     U2P1            equ	696	;# 
  7856   0002B8                     U2P1L           equ	696	;# 
  7857   0002B9                     U2P1H           equ	697	;# 
  7858   0002BA                     U2P2            equ	698	;# 
  7859   0002BA                     U2P2L           equ	698	;# 
  7860   0002BB                     U2P2H           equ	699	;# 
  7861   0002BC                     U2P3            equ	700	;# 
  7862   0002BC                     U2P3L           equ	700	;# 
  7863   0002BD                     U2P3H           equ	701	;# 
  7864   0002BE                     U2CON0          equ	702	;# 
  7865   0002BF                     U2CON1          equ	703	;# 
  7866   0002C0                     U2CON2          equ	704	;# 
  7867   0002C1                     U2BRG           equ	705	;# 
  7868   0002C1                     U2BRGL          equ	705	;# 
  7869   0002C2                     U2BRGH          equ	706	;# 
  7870   0002C3                     U2FIFO          equ	707	;# 
  7871   0002C4                     U2UIR           equ	708	;# 
  7872   0002C5                     U2ERRIR         equ	709	;# 
  7873   0002C6                     U2ERRIE         equ	710	;# 
  7874   0002C7                     U3RXB           equ	711	;# 
  7875   0002C7                     U3RXBL          equ	711	;# 
  7876   0002C9                     U3TXB           equ	713	;# 
  7877   0002C9                     U3TXBL          equ	713	;# 
  7878   0002CB                     U3P1            equ	715	;# 
  7879   0002CB                     U3P1L           equ	715	;# 
  7880   0002CD                     U3P2            equ	717	;# 
  7881   0002CD                     U3P2L           equ	717	;# 
  7882   0002CF                     U3P3            equ	719	;# 
  7883   0002CF                     U3P3L           equ	719	;# 
  7884   0002D1                     U3CON0          equ	721	;# 
  7885   0002D2                     U3CON1          equ	722	;# 
  7886   0002D3                     U3CON2          equ	723	;# 
  7887   0002D4                     U3BRG           equ	724	;# 
  7888   0002D4                     U3BRGL          equ	724	;# 
  7889   0002D5                     U3BRGH          equ	725	;# 
  7890   0002D6                     U3FIFO          equ	726	;# 
  7891   0002D7                     U3UIR           equ	727	;# 
  7892   0002D8                     U3ERRIR         equ	728	;# 
  7893   0002D9                     U3ERRIE         equ	729	;# 
  7894   0002DA                     U4RXB           equ	730	;# 
  7895   0002DA                     U4RXBL          equ	730	;# 
  7896   0002DC                     U4TXB           equ	732	;# 
  7897   0002DC                     U4TXBL          equ	732	;# 
  7898   0002DE                     U4P1            equ	734	;# 
  7899   0002DE                     U4P1L           equ	734	;# 
  7900   0002E0                     U4P2            equ	736	;# 
  7901   0002E0                     U4P2L           equ	736	;# 
  7902   0002E2                     U4P3            equ	738	;# 
  7903   0002E2                     U4P3L           equ	738	;# 
  7904   0002E4                     U4CON0          equ	740	;# 
  7905   0002E5                     U4CON1          equ	741	;# 
  7906   0002E6                     U4CON2          equ	742	;# 
  7907   0002E7                     U4BRG           equ	743	;# 
  7908   0002E7                     U4BRGL          equ	743	;# 
  7909   0002E8                     U4BRGH          equ	744	;# 
  7910   0002E9                     U4FIFO          equ	745	;# 
  7911   0002EA                     U4UIR           equ	746	;# 
  7912   0002EB                     U4ERRIR         equ	747	;# 
  7913   0002EC                     U4ERRIE         equ	748	;# 
  7914   0002ED                     U5RXB           equ	749	;# 
  7915   0002ED                     U5RXBL          equ	749	;# 
  7916   0002EF                     U5TXB           equ	751	;# 
  7917   0002EF                     U5TXBL          equ	751	;# 
  7918   0002F1                     U5P1            equ	753	;# 
  7919   0002F1                     U5P1L           equ	753	;# 
  7920   0002F3                     U5P2            equ	755	;# 
  7921   0002F3                     U5P2L           equ	755	;# 
  7922   0002F5                     U5P3            equ	757	;# 
  7923   0002F5                     U5P3L           equ	757	;# 
  7924   0002F7                     U5CON0          equ	759	;# 
  7925   0002F8                     U5CON1          equ	760	;# 
  7926   0002F9                     U5CON2          equ	761	;# 
  7927   0002FA                     U5BRG           equ	762	;# 
  7928   0002FA                     U5BRGL          equ	762	;# 
  7929   0002FB                     U5BRGH          equ	763	;# 
  7930   0002FC                     U5FIFO          equ	764	;# 
  7931   0002FD                     U5UIR           equ	765	;# 
  7932   0002FE                     U5ERRIR         equ	766	;# 
  7933   0002FF                     U5ERRIE         equ	767	;# 
  7934   000300                     SMT1TMR         equ	768	;# 
  7935   000300                     SMT1TMRL        equ	768	;# 
  7936   000301                     SMT1TMRH        equ	769	;# 
  7937   000302                     SMT1TMRU        equ	770	;# 
  7938   000303                     SMT1CPR         equ	771	;# 
  7939   000303                     SMT1CPRL        equ	771	;# 
  7940   000304                     SMT1CPRH        equ	772	;# 
  7941   000305                     SMT1CPRU        equ	773	;# 
  7942   000306                     SMT1CPW         equ	774	;# 
  7943   000306                     SMT1CPWL        equ	774	;# 
  7944   000307                     SMT1CPWH        equ	775	;# 
  7945   000308                     SMT1CPWU        equ	776	;# 
  7946   000309                     SMT1PR          equ	777	;# 
  7947   000309                     SMT1PRL         equ	777	;# 
  7948   00030A                     SMT1PRH         equ	778	;# 
  7949   00030B                     SMT1PRU         equ	779	;# 
  7950   00030C                     SMT1CON0        equ	780	;# 
  7951   00030D                     SMT1CON1        equ	781	;# 
  7952   00030E                     SMT1STAT        equ	782	;# 
  7953   00030F                     SMT1CLK         equ	783	;# 
  7954   000310                     SMT1SIG         equ	784	;# 
  7955   000311                     SMT1WIN         equ	785	;# 
  7956   000318                     TMR0L           equ	792	;# 
  7957   000318                     TMR0            equ	792	;# 
  7958   000319                     TMR0H           equ	793	;# 
  7959   000319                     PR0             equ	793	;# 
  7960   00031A                     T0CON0          equ	794	;# 
  7961   00031B                     T0CON1          equ	795	;# 
  7962   00031C                     TMR1            equ	796	;# 
  7963   00031C                     TMR1L           equ	796	;# 
  7964   00031D                     TMR1H           equ	797	;# 
  7965   00031E                     T1CON           equ	798	;# 
  7966   00031E                     TMR1CON         equ	798	;# 
  7967   00031F                     T1GCON          equ	799	;# 
  7968   00031F                     TMR1GCON        equ	799	;# 
  7969   000320                     T1GATE          equ	800	;# 
  7970   000320                     TMR1GATE        equ	800	;# 
  7971   000321                     T1CLK           equ	801	;# 
  7972   000321                     TMR1CLK         equ	801	;# 
  7973   000321                     PR1             equ	801	;# 
  7974   000322                     T2TMR           equ	802	;# 
  7975   000322                     TMR2            equ	802	;# 
  7976   000323                     T2PR            equ	803	;# 
  7977   000323                     PR2             equ	803	;# 
  7978   000324                     T2CON           equ	804	;# 
  7979   000325                     T2HLT           equ	805	;# 
  7980   000326                     T2CLKCON        equ	806	;# 
  7981   000326                     T2CLK           equ	806	;# 
  7982   000327                     T2RST           equ	807	;# 
  7983   000328                     TMR3            equ	808	;# 
  7984   000328                     TMR3L           equ	808	;# 
  7985   000329                     TMR3H           equ	809	;# 
  7986   00032A                     T3CON           equ	810	;# 
  7987   00032A                     TMR3CON         equ	810	;# 
  7988   00032B                     T3GCON          equ	811	;# 
  7989   00032B                     TMR3GCON        equ	811	;# 
  7990   00032C                     T3GATE          equ	812	;# 
  7991   00032C                     TMR3GATE        equ	812	;# 
  7992   00032D                     T3CLK           equ	813	;# 
  7993   00032D                     TMR3CLK         equ	813	;# 
  7994   00032D                     PR3             equ	813	;# 
  7995   00032E                     T4TMR           equ	814	;# 
  7996   00032E                     TMR4            equ	814	;# 
  7997   00032F                     T4PR            equ	815	;# 
  7998   00032F                     PR4             equ	815	;# 
  7999   000330                     T4CON           equ	816	;# 
  8000   000331                     T4HLT           equ	817	;# 
  8001   000332                     T4CLKCON        equ	818	;# 
  8002   000332                     T4CLK           equ	818	;# 
  8003   000333                     T4RST           equ	819	;# 
  8004   000334                     TMR5            equ	820	;# 
  8005   000334                     TMR5L           equ	820	;# 
  8006   000335                     TMR5H           equ	821	;# 
  8007   000336                     T5CON           equ	822	;# 
  8008   000336                     TMR5CON         equ	822	;# 
  8009   000337                     T5GCON          equ	823	;# 
  8010   000337                     TMR5GCON        equ	823	;# 
  8011   000338                     T5GATE          equ	824	;# 
  8012   000338                     TMR5GATE        equ	824	;# 
  8013   000339                     T5CLK           equ	825	;# 
  8014   000339                     TMR5CLK         equ	825	;# 
  8015   000339                     PR5             equ	825	;# 
  8016   00033A                     T6TMR           equ	826	;# 
  8017   00033A                     TMR6            equ	826	;# 
  8018   00033B                     T6PR            equ	827	;# 
  8019   00033B                     PR6             equ	827	;# 
  8020   00033C                     T6CON           equ	828	;# 
  8021   00033D                     T6HLT           equ	829	;# 
  8022   00033E                     T6CLKCON        equ	830	;# 
  8023   00033E                     T6CLK           equ	830	;# 
  8024   00033F                     T6RST           equ	831	;# 
  8025   000340                     CCPR1           equ	832	;# 
  8026   000340                     CCPR1L          equ	832	;# 
  8027   000341                     CCPR1H          equ	833	;# 
  8028   000342                     CCP1CON         equ	834	;# 
  8029   000343                     CCP1CAP         equ	835	;# 
  8030   000344                     CCPR2           equ	836	;# 
  8031   000344                     CCPR2L          equ	836	;# 
  8032   000345                     CCPR2H          equ	837	;# 
  8033   000346                     CCP2CON         equ	838	;# 
  8034   000347                     CCP2CAP         equ	839	;# 
  8035   000348                     CCPR3           equ	840	;# 
  8036   000348                     CCPR3L          equ	840	;# 
  8037   000349                     CCPR3H          equ	841	;# 
  8038   00034A                     CCP3CON         equ	842	;# 
  8039   00034B                     CCP3CAP         equ	843	;# 
  8040   00034C                     CCPTMRS0        equ	844	;# 
  8041   00034F                     CRCDATA         equ	847	;# 
  8042   00034F                     CRCDATAL        equ	847	;# 
  8043   000350                     CRCDATAH        equ	848	;# 
  8044   000351                     CRCDATAU        equ	849	;# 
  8045   000352                     CRCDATAT        equ	850	;# 
  8046   000353                     CRCOUT          equ	851	;# 
  8047   000353                     CRCSHFT         equ	851	;# 
  8048   000353                     CRCXOR          equ	851	;# 
  8049   000353                     CRCOUTL         equ	851	;# 
  8050   000353                     CRCSHFTL        equ	851	;# 
  8051   000353                     CRCSHIFTL       equ	851	;# 
  8052   000353                     CRCXORL         equ	851	;# 
  8053   000354                     CRCOUTH         equ	852	;# 
  8054   000354                     CRCSHFTH        equ	852	;# 
  8055   000354                     CRCSHIFTH       equ	852	;# 
  8056   000354                     CRCXORH         equ	852	;# 
  8057   000355                     CRCOUTU         equ	853	;# 
  8058   000355                     CRCSHFTU        equ	853	;# 
  8059   000355                     CRCSHIFTU       equ	853	;# 
  8060   000355                     CRCXORU         equ	853	;# 
  8061   000356                     CRCOUTT         equ	854	;# 
  8062   000356                     CRCSHFTT        equ	854	;# 
  8063   000356                     CRCSHIFTT       equ	854	;# 
  8064   000356                     CRCXORT         equ	854	;# 
  8065   000357                     CRCCON0         equ	855	;# 
  8066   000358                     CRCCON1         equ	856	;# 
  8067   000359                     CRCCON2         equ	857	;# 
  8068   00035A                     SCANLADR        equ	858	;# 
  8069   00035A                     SCANLADRL       equ	858	;# 
  8070   00035B                     SCANLADRH       equ	859	;# 
  8071   00035C                     SCANLADRU       equ	860	;# 
  8072   00035D                     SCANHADR        equ	861	;# 
  8073   00035D                     SCANHADRL       equ	861	;# 
  8074   00035E                     SCANHADRH       equ	862	;# 
  8075   00035F                     SCANHADRU       equ	863	;# 
  8076   000360                     SCANCON0        equ	864	;# 
  8077   000361                     SCANTRIG        equ	865	;# 
  8078   000362                     IPR0            equ	866	;# 
  8079   000363                     IPR1            equ	867	;# 
  8080   000364                     IPR2            equ	868	;# 
  8081   000365                     IPR3            equ	869	;# 
  8082   000366                     IPR4            equ	870	;# 
  8083   000367                     IPR5            equ	871	;# 
  8084   000368                     IPR6            equ	872	;# 
  8085   000369                     IPR7            equ	873	;# 
  8086   00036A                     IPR8            equ	874	;# 
  8087   00036B                     IPR9            equ	875	;# 
  8088   00036C                     IPR10           equ	876	;# 
  8089   00036D                     IPR11           equ	877	;# 
  8090   00036E                     IPR12           equ	878	;# 
  8091   00036F                     IPR13           equ	879	;# 
  8092   000370                     IPR14           equ	880	;# 
  8093   000371                     IPR15           equ	881	;# 
  8094   000373                     STATUS_CSHAD    equ	883	;# 
  8095   000374                     WREG_CSHAD      equ	884	;# 
  8096   000375                     BSR_CSHAD       equ	885	;# 
  8097   000376                     SHADCON         equ	886	;# 
  8098   000377                     STATUS_SHAD     equ	887	;# 
  8099   000378                     WREG_SHAD       equ	888	;# 
  8100   000379                     BSR_SHAD        equ	889	;# 
  8101   00037A                     PCLATH_SHAD     equ	890	;# 
  8102   00037B                     PCLATU_SHAD     equ	891	;# 
  8103   00037C                     FSR0SH          equ	892	;# 
  8104   00037C                     FSR0L_SHAD      equ	892	;# 
  8105   00037D                     FSR0H_SHAD      equ	893	;# 
  8106   00037E                     FSR1SH          equ	894	;# 
  8107   00037E                     FSR1L_SHAD      equ	894	;# 
  8108   00037F                     FSR1H_SHAD      equ	895	;# 
  8109   000380                     FSR2SH          equ	896	;# 
  8110   000380                     FSR2L_SHAD      equ	896	;# 
  8111   000381                     FSR2H_SHAD      equ	897	;# 
  8112   000382                     PRODSH          equ	898	;# 
  8113   000382                     PRODL_SHAD      equ	898	;# 
  8114   000383                     PRODH_SHAD      equ	899	;# 
  8115   000387                     TU16ACON0       equ	903	;# 
  8116   000388                     TU16ACON1       equ	904	;# 
  8117   000389                     TU16AHLT        equ	905	;# 
  8118   00038A                     TU16APS         equ	906	;# 
  8119   00038B                     TU16ATMR        equ	907	;# 
  8120   00038B                     TU16ACR         equ	907	;# 
  8121   00038B                     TU16ATMRL       equ	907	;# 
  8122   00038B                     TU16ACRL        equ	907	;# 
  8123   00038C                     TU16ATMRH       equ	908	;# 
  8124   00038C                     TU16ACRH        equ	908	;# 
  8125   00038D                     TU16APR         equ	909	;# 
  8126   00038D                     TU16APRL        equ	909	;# 
  8127   00038E                     TU16APRH        equ	910	;# 
  8128   00038F                     TU16ACLK        equ	911	;# 
  8129   000390                     TU16AERS        equ	912	;# 
  8130   000393                     TU16BCON0       equ	915	;# 
  8131   000394                     TU16BCON1       equ	916	;# 
  8132   000395                     TU16BHLT        equ	917	;# 
  8133   000396                     TU16BPS         equ	918	;# 
  8134   000397                     TU16BTMR        equ	919	;# 
  8135   000397                     TU16BCR         equ	919	;# 
  8136   000397                     TU16BTMRL       equ	919	;# 
  8137   000397                     TU16BCRL        equ	919	;# 
  8138   000398                     TU16BTMRH       equ	920	;# 
  8139   000398                     TU16BCRH        equ	920	;# 
  8140   000399                     TU16BPR         equ	921	;# 
  8141   000399                     TU16BPRL        equ	921	;# 
  8142   00039A                     TU16BPRH        equ	922	;# 
  8143   00039B                     TU16BCLK        equ	923	;# 
  8144   00039C                     TU16BERS        equ	924	;# 
  8145   0003BB                     TUCHAIN         equ	955	;# 
  8146   0003BC                     CWG1CLK         equ	956	;# 
  8147   0003BC                     CWG1CLKCON      equ	956	;# 
  8148   0003BD                     CWG1ISM         equ	957	;# 
  8149   0003BE                     CWG1DBR         equ	958	;# 
  8150   0003BF                     CWG1DBF         equ	959	;# 
  8151   0003C0                     CWG1CON0        equ	960	;# 
  8152   0003C1                     CWG1CON1        equ	961	;# 
  8153   0003C2                     CWG1AS0         equ	962	;# 
  8154   0003C3                     CWG1AS1         equ	963	;# 
  8155   0003C4                     CWG1STR         equ	964	;# 
  8156   0003C5                     CWG2CLK         equ	965	;# 
  8157   0003C5                     CWG2CLKCON      equ	965	;# 
  8158   0003C6                     CWG2ISM         equ	966	;# 
  8159   0003C7                     CWG2DBR         equ	967	;# 
  8160   0003C8                     CWG2DBF         equ	968	;# 
  8161   0003C9                     CWG2CON0        equ	969	;# 
  8162   0003CA                     CWG2CON1        equ	970	;# 
  8163   0003CB                     CWG2AS0         equ	971	;# 
  8164   0003CC                     CWG2AS1         equ	972	;# 
  8165   0003CD                     CWG2STR         equ	973	;# 
  8166   0003CE                     CWG3CLK         equ	974	;# 
  8167   0003CE                     CWG3CLKCON      equ	974	;# 
  8168   0003CF                     CWG3ISM         equ	975	;# 
  8169   0003D0                     CWG3DBR         equ	976	;# 
  8170   0003D1                     CWG3DBF         equ	977	;# 
  8171   0003D2                     CWG3CON0        equ	978	;# 
  8172   0003D3                     CWG3CON1        equ	979	;# 
  8173   0003D4                     CWG3AS0         equ	980	;# 
  8174   0003D5                     CWG3AS1         equ	981	;# 
  8175   0003D6                     CWG3STR         equ	982	;# 
  8176   0003D7                     FVRCON          equ	983	;# 
  8177   0003D8                     ADCPCON         equ	984	;# 
  8178   0003D8                     ADCP            equ	984	;# 
  8179   0003D9                     ADLTH           equ	985	;# 
  8180   0003D9                     ADLTHL          equ	985	;# 
  8181   0003DA                     ADLTHH          equ	986	;# 
  8182   0003DB                     ADUTH           equ	987	;# 
  8183   0003DB                     ADUTHL          equ	987	;# 
  8184   0003DC                     ADUTHH          equ	988	;# 
  8185   0003DD                     ADERR           equ	989	;# 
  8186   0003DD                     ADERRL          equ	989	;# 
  8187   0003DE                     ADERRH          equ	990	;# 
  8188   0003DF                     ADSTPT          equ	991	;# 
  8189   0003DF                     ADSTPTL         equ	991	;# 
  8190   0003E0                     ADSTPTH         equ	992	;# 
  8191   0003E1                     ADFLTR          equ	993	;# 
  8192   0003E1                     ADFLTRL         equ	993	;# 
  8193   0003E2                     ADFLTRH         equ	994	;# 
  8194   0003E3                     ADACC           equ	995	;# 
  8195   0003E3                     ADACCL          equ	995	;# 
  8196   0003E4                     ADACCH          equ	996	;# 
  8197   0003E5                     ADACCU          equ	997	;# 
  8198   0003E6                     ADCNT           equ	998	;# 
  8199   0003E7                     ADRPT           equ	999	;# 
  8200   0003E8                     ADPREV          equ	1000	;# 
  8201   0003E8                     ADPREVL         equ	1000	;# 
  8202   0003E9                     ADPREVH         equ	1001	;# 
  8203   0003EA                     ADRES           equ	1002	;# 
  8204   0003EA                     ADRESL          equ	1002	;# 
  8205   0003EB                     ADRESH          equ	1003	;# 
  8206   0003EC                     ADPCH           equ	1004	;# 
  8207   0003EE                     ADACQ           equ	1006	;# 
  8208   0003EE                     ADACQL          equ	1006	;# 
  8209   0003EF                     ADACQH          equ	1007	;# 
  8210   0003F0                     ADCAP           equ	1008	;# 
  8211   0003F1                     ADPRE           equ	1009	;# 
  8212   0003F1                     ADPREL          equ	1009	;# 
  8213   0003F2                     ADPREH          equ	1010	;# 
  8214   0003F3                     ADCON0          equ	1011	;# 
  8215   0003F4                     ADCON1          equ	1012	;# 
  8216   0003F5                     ADCON2          equ	1013	;# 
  8217   0003F6                     ADCON3          equ	1014	;# 
  8218   0003F7                     ADSTAT          equ	1015	;# 
  8219   0003F8                     ADREF           equ	1016	;# 
  8220   0003F9                     ADACT           equ	1017	;# 
  8221   0003FA                     ADCLK           equ	1018	;# 
  8222   0003FB                     ADCTX           equ	1019	;# 
  8223   0003FC                     ADCSEL1         equ	1020	;# 
  8224   0003FD                     ADCSEL2         equ	1021	;# 
  8225   0003FE                     ADCSEL3         equ	1022	;# 
  8226   0003FF                     ADCSEL4         equ	1023	;# 
  8227   000400                     ANSELA          equ	1024	;# 
  8228   000401                     WPUA            equ	1025	;# 
  8229   000402                     ODCONA          equ	1026	;# 
  8230   000403                     SLRCONA         equ	1027	;# 
  8231   000404                     INLVLA          equ	1028	;# 
  8232   000405                     IOCAP           equ	1029	;# 
  8233   000406                     IOCAN           equ	1030	;# 
  8234   000407                     IOCAF           equ	1031	;# 
  8235   000408                     ANSELB          equ	1032	;# 
  8236   000409                     WPUB            equ	1033	;# 
  8237   00040A                     ODCONB          equ	1034	;# 
  8238   00040B                     SLRCONB         equ	1035	;# 
  8239   00040C                     INLVLB          equ	1036	;# 
  8240   00040D                     IOCBP           equ	1037	;# 
  8241   00040E                     IOCBN           equ	1038	;# 
  8242   00040F                     IOCBF           equ	1039	;# 
  8243   000410                     ANSELC          equ	1040	;# 
  8244   000411                     WPUC            equ	1041	;# 
  8245   000412                     ODCONC          equ	1042	;# 
  8246   000413                     SLRCONC         equ	1043	;# 
  8247   000414                     INLVLC          equ	1044	;# 
  8248   000415                     IOCCP           equ	1045	;# 
  8249   000416                     IOCCN           equ	1046	;# 
  8250   000417                     IOCCF           equ	1047	;# 
  8251   000421                     WPUE            equ	1057	;# 
  8252   000424                     INLVLE          equ	1060	;# 
  8253   000425                     IOCEP           equ	1061	;# 
  8254   000426                     IOCEN           equ	1062	;# 
  8255   000427                     IOCEF           equ	1063	;# 
  8256   000440                     NCO1ACC         equ	1088	;# 
  8257   000440                     NCO1ACCL        equ	1088	;# 
  8258   000441                     NCO1ACCH        equ	1089	;# 
  8259   000442                     NCO1ACCU        equ	1090	;# 
  8260   000443                     NCO1INC         equ	1091	;# 
  8261   000443                     NCO1INCL        equ	1091	;# 
  8262   000444                     NCO1INCH        equ	1092	;# 
  8263   000445                     NCO1INCU        equ	1093	;# 
  8264   000446                     NCO1CON         equ	1094	;# 
  8265   000447                     NCO1CLK         equ	1095	;# 
  8266   000448                     NCO2ACC         equ	1096	;# 
  8267   000448                     NCO2ACCL        equ	1096	;# 
  8268   000449                     NCO2ACCH        equ	1097	;# 
  8269   00044A                     NCO2ACCU        equ	1098	;# 
  8270   00044B                     NCO2INC         equ	1099	;# 
  8271   00044B                     NCO2INCL        equ	1099	;# 
  8272   00044C                     NCO2INCH        equ	1100	;# 
  8273   00044D                     NCO2INCU        equ	1101	;# 
  8274   00044E                     NCO2CON         equ	1102	;# 
  8275   00044F                     NCO2CLK         equ	1103	;# 
  8276   000450                     NCO3ACC         equ	1104	;# 
  8277   000450                     NCO3ACCL        equ	1104	;# 
  8278   000451                     NCO3ACCH        equ	1105	;# 
  8279   000452                     NCO3ACCU        equ	1106	;# 
  8280   000453                     NCO3INC         equ	1107	;# 
  8281   000453                     NCO3INCL        equ	1107	;# 
  8282   000454                     NCO3INCH        equ	1108	;# 
  8283   000455                     NCO3INCU        equ	1109	;# 
  8284   000456                     NCO3CON         equ	1110	;# 
  8285   000457                     NCO3CLK         equ	1111	;# 
  8286   000458                     FSCMCON         equ	1112	;# 
  8287   000459                     IVTLOCK         equ	1113	;# 
  8288   00045A                     IVTAD           equ	1114	;# 
  8289   00045A                     IVTADL          equ	1114	;# 
  8290   00045B                     IVTADH          equ	1115	;# 
  8291   00045C                     IVTADU          equ	1116	;# 
  8292   00045D                     IVTBASE         equ	1117	;# 
  8293   00045D                     IVTBASEL        equ	1117	;# 
  8294   00045E                     IVTBASEH        equ	1118	;# 
  8295   00045F                     IVTBASEU        equ	1119	;# 
  8296   000460                     PWM1ERS         equ	1120	;# 
  8297   000461                     PWM1CLK         equ	1121	;# 
  8298   000462                     PWM1LDS         equ	1122	;# 
  8299   000463                     PWM1PR          equ	1123	;# 
  8300   000463                     PWM1PRL         equ	1123	;# 
  8301   000464                     PWM1PRH         equ	1124	;# 
  8302   000465                     PWM1CPRE        equ	1125	;# 
  8303   000466                     PWM1PIPOS       equ	1126	;# 
  8304   000467                     PWM1GIR         equ	1127	;# 
  8305   000468                     PWM1GIE         equ	1128	;# 
  8306   000469                     PWM1CON         equ	1129	;# 
  8307   00046A                     PWM1S1CFG       equ	1130	;# 
  8308   00046B                     PWM1S1P1        equ	1131	;# 
  8309   00046B                     PWM1S1P1L       equ	1131	;# 
  8310   00046C                     PWM1S1P1H       equ	1132	;# 
  8311   00046D                     PWM1S1P2        equ	1133	;# 
  8312   00046D                     PWM1S1P2L       equ	1133	;# 
  8313   00046E                     PWM1S1P2H       equ	1134	;# 
  8314   00046F                     PWM2ERS         equ	1135	;# 
  8315   000470                     PWM2CLK         equ	1136	;# 
  8316   000471                     PWM2LDS         equ	1137	;# 
  8317   000472                     PWM2PR          equ	1138	;# 
  8318   000472                     PWM2PRL         equ	1138	;# 
  8319   000473                     PWM2PRH         equ	1139	;# 
  8320   000474                     PWM2CPRE        equ	1140	;# 
  8321   000475                     PWM2PIPOS       equ	1141	;# 
  8322   000476                     PWM2GIR         equ	1142	;# 
  8323   000477                     PWM2GIE         equ	1143	;# 
  8324   000478                     PWM2CON         equ	1144	;# 
  8325   000479                     PWM2S1CFG       equ	1145	;# 
  8326   00047A                     PWM2S1P1        equ	1146	;# 
  8327   00047A                     PWM2S1P1L       equ	1146	;# 
  8328   00047B                     PWM2S1P1H       equ	1147	;# 
  8329   00047C                     PWM2S1P2        equ	1148	;# 
  8330   00047C                     PWM2S1P2L       equ	1148	;# 
  8331   00047D                     PWM2S1P2H       equ	1149	;# 
  8332   00047E                     PWM3ERS         equ	1150	;# 
  8333   00047F                     PWM3CLK         equ	1151	;# 
  8334   000480                     PWM3LDS         equ	1152	;# 
  8335   000481                     PWM3PR          equ	1153	;# 
  8336   000481                     PWM3PRL         equ	1153	;# 
  8337   000482                     PWM3PRH         equ	1154	;# 
  8338   000483                     PWM3CPRE        equ	1155	;# 
  8339   000484                     PWM3PIPOS       equ	1156	;# 
  8340   000485                     PWM3GIR         equ	1157	;# 
  8341   000486                     PWM3GIE         equ	1158	;# 
  8342   000487                     PWM3CON         equ	1159	;# 
  8343   000488                     PWM3S1CFG       equ	1160	;# 
  8344   000489                     PWM3S1P1        equ	1161	;# 
  8345   000489                     PWM3S1P1L       equ	1161	;# 
  8346   00048A                     PWM3S1P1H       equ	1162	;# 
  8347   00048B                     PWM3S1P2        equ	1163	;# 
  8348   00048B                     PWM3S1P2L       equ	1163	;# 
  8349   00048C                     PWM3S1P2H       equ	1164	;# 
  8350   00048D                     PWM4ERS         equ	1165	;# 
  8351   00048E                     PWM4CLK         equ	1166	;# 
  8352   00048F                     PWM4LDS         equ	1167	;# 
  8353   000490                     PWM4PR          equ	1168	;# 
  8354   000490                     PWM4PRL         equ	1168	;# 
  8355   000491                     PWM4PRH         equ	1169	;# 
  8356   000492                     PWM4CPRE        equ	1170	;# 
  8357   000493                     PWM4PIPOS       equ	1171	;# 
  8358   000494                     PWM4GIR         equ	1172	;# 
  8359   000495                     PWM4GIE         equ	1173	;# 
  8360   000496                     PWM4CON         equ	1174	;# 
  8361   000497                     PWM4S1CFG       equ	1175	;# 
  8362   000498                     PWM4S1P1        equ	1176	;# 
  8363   000498                     PWM4S1P1L       equ	1176	;# 
  8364   000499                     PWM4S1P1H       equ	1177	;# 
  8365   00049A                     PWM4S1P2        equ	1178	;# 
  8366   00049A                     PWM4S1P2L       equ	1178	;# 
  8367   00049B                     PWM4S1P2H       equ	1179	;# 
  8368   00049C                     PWMLOAD         equ	1180	;# 
  8369   00049D                     PWMEN           equ	1181	;# 
  8370   00049E                     PIE0            equ	1182	;# 
  8371   00049F                     PIE1            equ	1183	;# 
  8372   0004A0                     PIE2            equ	1184	;# 
  8373   0004A1                     PIE3            equ	1185	;# 
  8374   0004A2                     PIE4            equ	1186	;# 
  8375   0004A3                     PIE5            equ	1187	;# 
  8376   0004A4                     PIE6            equ	1188	;# 
  8377   0004A5                     PIE7            equ	1189	;# 
  8378   0004A6                     PIE8            equ	1190	;# 
  8379   0004A7                     PIE9            equ	1191	;# 
  8380   0004A8                     PIE10           equ	1192	;# 
  8381   0004A9                     PIE11           equ	1193	;# 
  8382   0004AA                     PIE12           equ	1194	;# 
  8383   0004AB                     PIE13           equ	1195	;# 
  8384   0004AC                     PIE14           equ	1196	;# 
  8385   0004AD                     PIE15           equ	1197	;# 
  8386   0004AE                     PIR0            equ	1198	;# 
  8387   0004AF                     PIR1            equ	1199	;# 
  8388   0004B0                     PIR2            equ	1200	;# 
  8389   0004B1                     PIR3            equ	1201	;# 
  8390   0004B2                     PIR4            equ	1202	;# 
  8391   0004B3                     PIR5            equ	1203	;# 
  8392   0004B4                     PIR6            equ	1204	;# 
  8393   0004B5                     PIR7            equ	1205	;# 
  8394   0004B6                     PIR8            equ	1206	;# 
  8395   0004B7                     PIR9            equ	1207	;# 
  8396   0004B8                     PIR10           equ	1208	;# 
  8397   0004B9                     PIR11           equ	1209	;# 
  8398   0004BA                     PIR12           equ	1210	;# 
  8399   0004BB                     PIR13           equ	1211	;# 
  8400   0004BC                     PIR14           equ	1212	;# 
  8401   0004BD                     PIR15           equ	1213	;# 
  8402   0004BE                     LATA            equ	1214	;# 
  8403   0004BF                     LATB            equ	1215	;# 
  8404   0004C0                     LATC            equ	1216	;# 
  8405   0004C6                     TRISA           equ	1222	;# 
  8406   0004C7                     TRISB           equ	1223	;# 
  8407   0004C8                     TRISC           equ	1224	;# 
  8408   0004CA                     TRISE           equ	1226	;# 
  8409   0004CE                     PORTA           equ	1230	;# 
  8410   0004CF                     PORTB           equ	1231	;# 
  8411   0004D0                     PORTC           equ	1232	;# 
  8412   0004D2                     PORTE           equ	1234	;# 
  8413   0004D6                     INTCON0         equ	1238	;# 
  8414   0004D7                     INTCON1         equ	1239	;# 
  8415   0004D8                     STATUS          equ	1240	;# 
  8416   0004D9                     FSR2            equ	1241	;# 
  8417   0004D9                     FSR2L           equ	1241	;# 
  8418   0004DA                     FSR2H           equ	1242	;# 
  8419   0004DB                     PLUSW2          equ	1243	;# 
  8420   0004DC                     PREINC2         equ	1244	;# 
  8421   0004DD                     POSTDEC2        equ	1245	;# 
  8422   0004DE                     POSTINC2        equ	1246	;# 
  8423   0004DF                     INDF2           equ	1247	;# 
  8424   0004E0                     BSR             equ	1248	;# 
  8425   0004E1                     FSR1            equ	1249	;# 
  8426   0004E1                     FSR1L           equ	1249	;# 
  8427   0004E2                     FSR1H           equ	1250	;# 
  8428   0004E3                     PLUSW1          equ	1251	;# 
  8429   0004E4                     PREINC1         equ	1252	;# 
  8430   0004E5                     POSTDEC1        equ	1253	;# 
  8431   0004E6                     POSTINC1        equ	1254	;# 
  8432   0004E7                     INDF1           equ	1255	;# 
  8433   0004E8                     WREG            equ	1256	;# 
  8434   0004E9                     FSR0            equ	1257	;# 
  8435   0004E9                     FSR0L           equ	1257	;# 
  8436   0004EA                     FSR0H           equ	1258	;# 
  8437   0004EB                     PLUSW0          equ	1259	;# 
  8438   0004EC                     PREINC0         equ	1260	;# 
  8439   0004ED                     POSTDEC0        equ	1261	;# 
  8440   0004EE                     POSTINC0        equ	1262	;# 
  8441   0004EF                     INDF0           equ	1263	;# 
  8442   0004F0                     PCON0           equ	1264	;# 
  8443   0004F1                     PCON1           equ	1265	;# 
  8444   0004F2                     CPUDOZE         equ	1266	;# 
  8445   0004F3                     PROD            equ	1267	;# 
  8446   0004F3                     PRODL           equ	1267	;# 
  8447   0004F4                     PRODH           equ	1268	;# 
  8448   0004F5                     TABLAT          equ	1269	;# 
  8449   0004F6                     TBLPTR          equ	1270	;# 
  8450   0004F6                     TBLPTRL         equ	1270	;# 
  8451   0004F7                     TBLPTRH         equ	1271	;# 
  8452   0004F8                     TBLPTRU         equ	1272	;# 
  8453   0004F9                     PCLAT           equ	1273	;# 
  8454   0004F9                     PCL             equ	1273	;# 
  8455   0004FA                     PCLATH          equ	1274	;# 
  8456   0004FB                     PCLATU          equ	1275	;# 
  8457   0004FC                     STKPTR          equ	1276	;# 
  8458   0004FD                     TOS             equ	1277	;# 
  8459   0004FD                     TOSL            equ	1277	;# 
  8460   0004FE                     TOSH            equ	1278	;# 
  8461   0004FF                     TOSU            equ	1279	;# 
  8462   000038                     BOOTREG         equ	56	;# 
  8463   000039                     CLKRCON         equ	57	;# 
  8464   00003A                     CLKRCLK         equ	58	;# 
  8465   000040                     NVMCON0         equ	64	;# 
  8466   000041                     NVMCON1         equ	65	;# 
  8467   000042                     NVMLOCK         equ	66	;# 
  8468   000043                     NVMADR          equ	67	;# 
  8469   000043                     NVMADRL         equ	67	;# 
  8470   000044                     NVMADRH         equ	68	;# 
  8471   000045                     NVMADRU         equ	69	;# 
  8472   000046                     NVMDAT          equ	70	;# 
  8473   000046                     NVMDATL         equ	70	;# 
  8474   000047                     NVMDATH         equ	71	;# 
  8475   000048                     VREGCON         equ	72	;# 
  8476   000049                     BORCON          equ	73	;# 
  8477   00004A                     HLVDCON0        equ	74	;# 
  8478   00004B                     HLVDCON1        equ	75	;# 
  8479   00004C                     ZCDCON          equ	76	;# 
  8480   000060                     PMD0            equ	96	;# 
  8481   000061                     PMD1            equ	97	;# 
  8482   000062                     PMD2            equ	98	;# 
  8483   000063                     PMD3            equ	99	;# 
  8484   000064                     PMD4            equ	100	;# 
  8485   000065                     PMD5            equ	101	;# 
  8486   000066                     PMD6            equ	102	;# 
  8487   000067                     PMD7            equ	103	;# 
  8488   000068                     PMD8            equ	104	;# 
  8489   00006A                     MD1CON0         equ	106	;# 
  8490   00006B                     MD1CON1         equ	107	;# 
  8491   00006C                     MD1SRC          equ	108	;# 
  8492   00006D                     MD1CARL         equ	109	;# 
  8493   00006E                     MD1CARH         equ	110	;# 
  8494   00006F                     CMOUT           equ	111	;# 
  8495   000070                     CM1CON0         equ	112	;# 
  8496   000071                     CM1CON1         equ	113	;# 
  8497   000072                     CM1NCH          equ	114	;# 
  8498   000073                     CM1PCH          equ	115	;# 
  8499   000074                     CM2CON0         equ	116	;# 
  8500   000075                     CM2CON1         equ	117	;# 
  8501   000076                     CM2NCH          equ	118	;# 
  8502   000077                     CM2PCH          equ	119	;# 
  8503   000078                     WDTCON0         equ	120	;# 
  8504   000079                     WDTCON1         equ	121	;# 
  8505   00007A                     WDTPSL          equ	122	;# 
  8506   00007B                     WDTPSH          equ	123	;# 
  8507   00007C                     WDTTMR          equ	124	;# 
  8508   00007D                     DAC1DAT         equ	125	;# 
  8509   00007D                     DAC1DATL        equ	125	;# 
  8510   00007F                     DAC1CON         equ	127	;# 
  8511   000080                     SPI1RXB         equ	128	;# 
  8512   000081                     SPI1TXB         equ	129	;# 
  8513   000082                     SPI1TCNT        equ	130	;# 
  8514   000082                     SPI1TCNTL       equ	130	;# 
  8515   000083                     SPI1TCNTH       equ	131	;# 
  8516   000084                     SPI1CON0        equ	132	;# 
  8517   000085                     SPI1CON1        equ	133	;# 
  8518   000086                     SPI1CON2        equ	134	;# 
  8519   000087                     SPI1STATUS      equ	135	;# 
  8520   000088                     SPI1TWIDTH      equ	136	;# 
  8521   000089                     SPI1BAUD        equ	137	;# 
  8522   00008A                     SPI1INTF        equ	138	;# 
  8523   00008B                     SPI1INTE        equ	139	;# 
  8524   00008C                     SPI1CLK         equ	140	;# 
  8525   00008D                     SPI2RXB         equ	141	;# 
  8526   00008E                     SPI2TXB         equ	142	;# 
  8527   00008F                     SPI2TCNT        equ	143	;# 
  8528   00008F                     SPI2TCNTL       equ	143	;# 
  8529   000090                     SPI2TCNTH       equ	144	;# 
  8530   000091                     SPI2CON0        equ	145	;# 
  8531   000092                     SPI2CON1        equ	146	;# 
  8532   000093                     SPI2CON2        equ	147	;# 
  8533   000094                     SPI2STATUS      equ	148	;# 
  8534   000095                     SPI2TWIDTH      equ	149	;# 
  8535   000096                     SPI2BAUD        equ	150	;# 
  8536   000097                     SPI2INTF        equ	151	;# 
  8537   000098                     SPI2INTE        equ	152	;# 
  8538   000099                     SPI2CLK         equ	153	;# 
  8539   0000AC                     ACTCON          equ	172	;# 
  8540   0000AD                     OSCCON1         equ	173	;# 
  8541   0000AE                     OSCCON2         equ	174	;# 
  8542   0000AF                     OSCCON3         equ	175	;# 
  8543   0000B0                     OSCTUNE         equ	176	;# 
  8544   0000B1                     OSCFRQ          equ	177	;# 
  8545   0000B1                     OSCFREQ         equ	177	;# 
  8546   0000B2                     OSCSTAT         equ	178	;# 
  8547   0000B2                     OSCSTAT1        equ	178	;# 
  8548   0000B3                     OSCEN           equ	179	;# 
  8549   0000B4                     PRLOCK          equ	180	;# 
  8550   0000B5                     SCANPR          equ	181	;# 
  8551   0000B6                     DMA1PR          equ	182	;# 
  8552   0000B7                     DMA2PR          equ	183	;# 
  8553   0000B8                     DMA3PR          equ	184	;# 
  8554   0000B9                     DMA4PR          equ	185	;# 
  8555   0000BA                     DMA5PR          equ	186	;# 
  8556   0000BB                     DMA6PR          equ	187	;# 
  8557   0000BC                     DMA7PR          equ	188	;# 
  8558   0000BD                     DMA8PR          equ	189	;# 
  8559   0000BE                     MAINPR          equ	190	;# 
  8560   0000BF                     ISRPR           equ	191	;# 
  8561   0000D4                     CLCDATA         equ	212	;# 
  8562   0000D5                     CLCSELECT       equ	213	;# 
  8563   0000D6                     CLCnCON         equ	214	;# 
  8564   0000D7                     CLCnPOL         equ	215	;# 
  8565   0000D8                     CLCnSEL0        equ	216	;# 
  8566   0000D9                     CLCnSEL1        equ	217	;# 
  8567   0000DA                     CLCnSEL2        equ	218	;# 
  8568   0000DB                     CLCnSEL3        equ	219	;# 
  8569   0000DC                     CLCnGLS0        equ	220	;# 
  8570   0000DD                     CLCnGLS1        equ	221	;# 
  8571   0000DE                     CLCnGLS2        equ	222	;# 
  8572   0000DF                     CLCnGLS3        equ	223	;# 
  8573   0000E8                     DMASELECT       equ	232	;# 
  8574   0000E9                     DMAnBUF         equ	233	;# 
  8575   0000EA                     DMAnDCNT        equ	234	;# 
  8576   0000EA                     DMAnDCNTL       equ	234	;# 
  8577   0000EB                     DMAnDCNTH       equ	235	;# 
  8578   0000EC                     DMAnDPTR        equ	236	;# 
  8579   0000EC                     DMAnDPTRL       equ	236	;# 
  8580   0000ED                     DMAnDPTRH       equ	237	;# 
  8581   0000EE                     DMAnDSZ         equ	238	;# 
  8582   0000EE                     DMAnDSZL        equ	238	;# 
  8583   0000EF                     DMAnDSZH        equ	239	;# 
  8584   0000F0                     DMAnDSA         equ	240	;# 
  8585   0000F0                     DMAnDSAL        equ	240	;# 
  8586   0000F1                     DMAnDSAH        equ	241	;# 
  8587   0000F2                     DMAnSCNT        equ	242	;# 
  8588   0000F2                     DMAnSCNTL       equ	242	;# 
  8589   0000F3                     DMAnSCNTH       equ	243	;# 
  8590   0000F4                     DMAnSPTR        equ	244	;# 
  8591   0000F4                     DMAnSPTRL       equ	244	;# 
  8592   0000F5                     DMAnSPTRH       equ	245	;# 
  8593   0000F6                     DMAnSPTRU       equ	246	;# 
  8594   0000F7                     DMAnSSZ         equ	247	;# 
  8595   0000F7                     DMAnSSZL        equ	247	;# 
  8596   0000F8                     DMAnSSZH        equ	248	;# 
  8597   0000F9                     DMAnSSA         equ	249	;# 
  8598   0000F9                     DMAnSSAL        equ	249	;# 
  8599   0000FA                     DMAnSSAH        equ	250	;# 
  8600   0000FB                     DMAnSSAU        equ	251	;# 
  8601   0000FC                     DMAnCON0        equ	252	;# 
  8602   0000FD                     DMAnCON1        equ	253	;# 
  8603   0000FE                     DMAnAIRQ        equ	254	;# 
  8604   0000FF                     DMAnSIRQ        equ	255	;# 
  8605   000100                     C1CONL          equ	256	;# 
  8606   000101                     C1CONH          equ	257	;# 
  8607   000102                     C1CONU          equ	258	;# 
  8608   000103                     C1CONT          equ	259	;# 
  8609   000104                     C1NBTCFGL       equ	260	;# 
  8610   000105                     C1NBTCFGH       equ	261	;# 
  8611   000106                     C1NBTCFGU       equ	262	;# 
  8612   000107                     C1NBTCFGT       equ	263	;# 
  8613   000108                     C1DBTCFGL       equ	264	;# 
  8614   000109                     C1DBTCFGH       equ	265	;# 
  8615   00010A                     C1DBTCFGU       equ	266	;# 
  8616   00010B                     C1DBTCFGT       equ	267	;# 
  8617   00010C                     C1TDCL          equ	268	;# 
  8618   00010D                     C1TDCH          equ	269	;# 
  8619   00010E                     C1TDCU          equ	270	;# 
  8620   000110                     C1TBC           equ	272	;# 
  8621   000110                     C1TBCL          equ	272	;# 
  8622   000111                     C1TBCH          equ	273	;# 
  8623   000112                     C1TBCU          equ	274	;# 
  8624   000113                     C1TBCT          equ	275	;# 
  8625   000114                     C1TSCONL        equ	276	;# 
  8626   000115                     C1TSCONH        equ	277	;# 
  8627   000116                     C1TSCONU        equ	278	;# 
  8628   000117                     C1TSCONT        equ	279	;# 
  8629   000118                     C1VECL          equ	280	;# 
  8630   000119                     C1VECH          equ	281	;# 
  8631   00011A                     C1VECU          equ	282	;# 
  8632   00011B                     C1VECT          equ	283	;# 
  8633   00011C                     C1INTL          equ	284	;# 
  8634   00011D                     C1INTH          equ	285	;# 
  8635   00011E                     C1INTU          equ	286	;# 
  8636   00011F                     C1INTT          equ	287	;# 
  8637   000120                     C1RXIF          equ	288	;# 
  8638   000120                     C1RXIFL         equ	288	;# 
  8639   000121                     C1RXIFH         equ	289	;# 
  8640   000122                     C1RXIFU         equ	290	;# 
  8641   000123                     C1RXIFT         equ	291	;# 
  8642   000124                     C1TXIF          equ	292	;# 
  8643   000124                     C1TXIFL         equ	292	;# 
  8644   000125                     C1TXIFH         equ	293	;# 
  8645   000126                     C1TXIFU         equ	294	;# 
  8646   000127                     C1TXIFT         equ	295	;# 
  8647   000128                     C1RXOVIF        equ	296	;# 
  8648   000128                     C1RXOVIFL       equ	296	;# 
  8649   000129                     C1RXOVIFH       equ	297	;# 
  8650   00012A                     C1RXOVIFU       equ	298	;# 
  8651   00012B                     C1RXOVIFT       equ	299	;# 
  8652   00012C                     C1TXATIF        equ	300	;# 
  8653   00012C                     C1TXATIFL       equ	300	;# 
  8654   00012D                     C1TXATIFH       equ	301	;# 
  8655   00012E                     C1TXATIFU       equ	302	;# 
  8656   00012F                     C1TXATIFT       equ	303	;# 
  8657   000130                     C1TXREQ         equ	304	;# 
  8658   000130                     C1TXREQL        equ	304	;# 
  8659   000131                     C1TXREQH        equ	305	;# 
  8660   000132                     C1TXREQU        equ	306	;# 
  8661   000133                     C1TXREQT        equ	307	;# 
  8662   000134                     C1TRECL         equ	308	;# 
  8663   000135                     C1TRECH         equ	309	;# 
  8664   000136                     C1TRECU         equ	310	;# 
  8665   000137                     C1TRECT         equ	311	;# 
  8666   000138                     C1BDIAG0L       equ	312	;# 
  8667   000139                     C1BDIAG0H       equ	313	;# 
  8668   00013C                     C1BDIAG1L       equ	316	;# 
  8669   00013D                     C1BDIAG1H       equ	317	;# 
  8670   00013E                     C1BDIAG1U       equ	318	;# 
  8671   00013F                     C1BDIAG1T       equ	319	;# 
  8672   000140                     C1TEFCONL       equ	320	;# 
  8673   000141                     C1TEFCONH       equ	321	;# 
  8674   000142                     C1TEFCONU       equ	322	;# 
  8675   000143                     C1TEFCONT       equ	323	;# 
  8676   000144                     C1TEFSTAL       equ	324	;# 
  8677   000145                     C1TEFSTAH       equ	325	;# 
  8678   000146                     C1TEFSTAU       equ	326	;# 
  8679   000147                     C1TEFSTAT       equ	327	;# 
  8680   000148                     C1TEFUA         equ	328	;# 
  8681   000148                     C1TEFUAL        equ	328	;# 
  8682   000149                     C1TEFUAH        equ	329	;# 
  8683   00014A                     C1TEFUAU        equ	330	;# 
  8684   00014B                     C1TEFUAT        equ	331	;# 
  8685   00014C                     C1FIFOBA        equ	332	;# 
  8686   00014C                     C1FIFOBAL       equ	332	;# 
  8687   00014D                     C1FIFOBAH       equ	333	;# 
  8688   00014E                     C1FIFOBAU       equ	334	;# 
  8689   00014F                     C1FIFOBAT       equ	335	;# 
  8690   000150                     C1TXQCONL       equ	336	;# 
  8691   000151                     C1TXQCONH       equ	337	;# 
  8692   000152                     C1TXQCONU       equ	338	;# 
  8693   000153                     C1TXQCONT       equ	339	;# 
  8694   000154                     C1TXQSTAL       equ	340	;# 
  8695   000155                     C1TXQSTAH       equ	341	;# 
  8696   000156                     C1TXQSTAU       equ	342	;# 
  8697   000157                     C1TXQSTAT       equ	343	;# 
  8698   000158                     C1TXQUA         equ	344	;# 
  8699   000158                     C1TXQUAL        equ	344	;# 
  8700   000159                     C1TXQUAH        equ	345	;# 
  8701   00015A                     C1TXQUAU        equ	346	;# 
  8702   00015B                     C1TXQUAT        equ	347	;# 
  8703   00015C                     C1FIFOCON1      equ	348	;# 
  8704   00015C                     C1FIFOCON1L     equ	348	;# 
  8705   00015D                     C1FIFOCON1H     equ	349	;# 
  8706   00015E                     C1FIFOCON1U     equ	350	;# 
  8707   00015F                     C1FIFOCON1T     equ	351	;# 
  8708   000160                     C1FIFOSTA1      equ	352	;# 
  8709   000160                     C1FIFOSTA1L     equ	352	;# 
  8710   000161                     C1FIFOSTA1H     equ	353	;# 
  8711   000162                     C1FIFOSTA1U     equ	354	;# 
  8712   000163                     C1FIFOSTA1T     equ	355	;# 
  8713   000164                     C1FIFOUA1       equ	356	;# 
  8714   000164                     C1FIFOUA1L      equ	356	;# 
  8715   000165                     C1FIFOUA1H      equ	357	;# 
  8716   000166                     C1FIFOUA1U      equ	358	;# 
  8717   000167                     C1FIFOUA1T      equ	359	;# 
  8718   000168                     C1FIFOCON2      equ	360	;# 
  8719   000168                     C1FIFOCON2L     equ	360	;# 
  8720   000169                     C1FIFOCON2H     equ	361	;# 
  8721   00016A                     C1FIFOCON2U     equ	362	;# 
  8722   00016B                     C1FIFOCON2T     equ	363	;# 
  8723   00016C                     C1FIFOSTA2      equ	364	;# 
  8724   00016C                     C1FIFOSTA2L     equ	364	;# 
  8725   00016D                     C1FIFOSTA2H     equ	365	;# 
  8726   00016E                     C1FIFOSTA2U     equ	366	;# 
  8727   00016F                     C1FIFOSTA2T     equ	367	;# 
  8728   000170                     C1FIFOUA2       equ	368	;# 
  8729   000170                     C1FIFOUA2L      equ	368	;# 
  8730   000171                     C1FIFOUA2H      equ	369	;# 
  8731   000172                     C1FIFOUA2U      equ	370	;# 
  8732   000173                     C1FIFOUA2T      equ	371	;# 
  8733   000174                     C1FIFOCON3      equ	372	;# 
  8734   000174                     C1FIFOCON3L     equ	372	;# 
  8735   000175                     C1FIFOCON3H     equ	373	;# 
  8736   000176                     C1FIFOCON3U     equ	374	;# 
  8737   000177                     C1FIFOCON3T     equ	375	;# 
  8738   000178                     C1FIFOSTA3      equ	376	;# 
  8739   000178                     C1FIFOSTA3L     equ	376	;# 
  8740   000179                     C1FIFOSTA3H     equ	377	;# 
  8741   00017A                     C1FIFOSTA3U     equ	378	;# 
  8742   00017B                     C1FIFOSTA3T     equ	379	;# 
  8743   00017C                     C1FIFOUA3       equ	380	;# 
  8744   00017C                     C1FIFOUA3L      equ	380	;# 
  8745   00017D                     C1FIFOUA3H      equ	381	;# 
  8746   00017E                     C1FIFOUA3U      equ	382	;# 
  8747   00017F                     C1FIFOUA3T      equ	383	;# 
  8748   000180                     C1FLTCON0L      equ	384	;# 
  8749   000181                     C1FLTCON0H      equ	385	;# 
  8750   000182                     C1FLTCON0U      equ	386	;# 
  8751   000183                     C1FLTCON0T      equ	387	;# 
  8752   000184                     C1FLTCON1L      equ	388	;# 
  8753   000185                     C1FLTCON1H      equ	389	;# 
  8754   000186                     C1FLTCON1U      equ	390	;# 
  8755   000187                     C1FLTCON1T      equ	391	;# 
  8756   000188                     C1FLTCON2L      equ	392	;# 
  8757   000189                     C1FLTCON2H      equ	393	;# 
  8758   00018A                     C1FLTCON2U      equ	394	;# 
  8759   00018B                     C1FLTCON2T      equ	395	;# 
  8760   00018C                     C1FLTOBJ0       equ	396	;# 
  8761   00018C                     C1FLTOBJ0L      equ	396	;# 
  8762   00018D                     C1FLTOBJ0H      equ	397	;# 
  8763   00018E                     C1FLTOBJ0U      equ	398	;# 
  8764   00018F                     C1FLTOBJ0T      equ	399	;# 
  8765   000190                     C1MASK0         equ	400	;# 
  8766   000190                     C1MASK0L        equ	400	;# 
  8767   000191                     C1MASK0H        equ	401	;# 
  8768   000192                     C1MASK0U        equ	402	;# 
  8769   000193                     C1MASK0T        equ	403	;# 
  8770   000194                     C1FLTOBJ1       equ	404	;# 
  8771   000194                     C1FLTOBJ1L      equ	404	;# 
  8772   000195                     C1FLTOBJ1H      equ	405	;# 
  8773   000196                     C1FLTOBJ1U      equ	406	;# 
  8774   000197                     C1FLTOBJ1T      equ	407	;# 
  8775   000198                     C1MASK1         equ	408	;# 
  8776   000198                     C1MASK1L        equ	408	;# 
  8777   000199                     C1MASK1H        equ	409	;# 
  8778   00019A                     C1MASK1U        equ	410	;# 
  8779   00019B                     C1MASK1T        equ	411	;# 
  8780   00019C                     C1FLTOBJ2       equ	412	;# 
  8781   00019C                     C1FLTOBJ2L      equ	412	;# 
  8782   00019D                     C1FLTOBJ2H      equ	413	;# 
  8783   00019E                     C1FLTOBJ2U      equ	414	;# 
  8784   00019F                     C1FLTOBJ2T      equ	415	;# 
  8785   0001A0                     C1MASK2         equ	416	;# 
  8786   0001A0                     C1MASK2L        equ	416	;# 
  8787   0001A1                     C1MASK2H        equ	417	;# 
  8788   0001A2                     C1MASK2U        equ	418	;# 
  8789   0001A3                     C1MASK2T        equ	419	;# 
  8790   0001A4                     C1FLTOBJ3       equ	420	;# 
  8791   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8792   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8793   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8794   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8795   0001A8                     C1MASK3         equ	424	;# 
  8796   0001A8                     C1MASK3L        equ	424	;# 
  8797   0001A9                     C1MASK3H        equ	425	;# 
  8798   0001AA                     C1MASK3U        equ	426	;# 
  8799   0001AB                     C1MASK3T        equ	427	;# 
  8800   0001AC                     C1FLTOBJ4       equ	428	;# 
  8801   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8802   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8803   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8804   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8805   0001B0                     C1MASK4         equ	432	;# 
  8806   0001B0                     C1MASK4L        equ	432	;# 
  8807   0001B1                     C1MASK4H        equ	433	;# 
  8808   0001B2                     C1MASK4U        equ	434	;# 
  8809   0001B3                     C1MASK4T        equ	435	;# 
  8810   0001B4                     C1FLTOBJ5       equ	436	;# 
  8811   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8812   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8813   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8814   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8815   0001B8                     C1MASK5         equ	440	;# 
  8816   0001B8                     C1MASK5L        equ	440	;# 
  8817   0001B9                     C1MASK5H        equ	441	;# 
  8818   0001BA                     C1MASK5U        equ	442	;# 
  8819   0001BB                     C1MASK5T        equ	443	;# 
  8820   0001BC                     C1FLTOBJ6       equ	444	;# 
  8821   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8822   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8823   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8824   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8825   0001C0                     C1MASK6         equ	448	;# 
  8826   0001C0                     C1MASK6L        equ	448	;# 
  8827   0001C1                     C1MASK6H        equ	449	;# 
  8828   0001C2                     C1MASK6U        equ	450	;# 
  8829   0001C3                     C1MASK6T        equ	451	;# 
  8830   0001C4                     C1FLTOBJ7       equ	452	;# 
  8831   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8832   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8833   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8834   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8835   0001C8                     C1MASK7         equ	456	;# 
  8836   0001C8                     C1MASK7L        equ	456	;# 
  8837   0001C9                     C1MASK7H        equ	457	;# 
  8838   0001CA                     C1MASK7U        equ	458	;# 
  8839   0001CB                     C1MASK7T        equ	459	;# 
  8840   0001CC                     C1FLTOBJ8       equ	460	;# 
  8841   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8842   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8843   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8844   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8845   0001D0                     C1MASK8         equ	464	;# 
  8846   0001D0                     C1MASK8L        equ	464	;# 
  8847   0001D1                     C1MASK8H        equ	465	;# 
  8848   0001D2                     C1MASK8U        equ	466	;# 
  8849   0001D3                     C1MASK8T        equ	467	;# 
  8850   0001D4                     C1FLTOBJ9       equ	468	;# 
  8851   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8852   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8853   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8854   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8855   0001D8                     C1MASK9         equ	472	;# 
  8856   0001D8                     C1MASK9L        equ	472	;# 
  8857   0001D9                     C1MASK9H        equ	473	;# 
  8858   0001DA                     C1MASK9U        equ	474	;# 
  8859   0001DB                     C1MASK9T        equ	475	;# 
  8860   0001DC                     C1FLTOBJ10      equ	476	;# 
  8861   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8862   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8863   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8864   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8865   0001E0                     C1MASK10        equ	480	;# 
  8866   0001E0                     C1MASK10L       equ	480	;# 
  8867   0001E1                     C1MASK10H       equ	481	;# 
  8868   0001E2                     C1MASK10U       equ	482	;# 
  8869   0001E3                     C1MASK10T       equ	483	;# 
  8870   0001E4                     C1FLTOBJ11      equ	484	;# 
  8871   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8872   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8873   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8874   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8875   0001E8                     C1MASK11        equ	488	;# 
  8876   0001E8                     C1MASK11L       equ	488	;# 
  8877   0001E9                     C1MASK11H       equ	489	;# 
  8878   0001EA                     C1MASK11U       equ	490	;# 
  8879   0001EB                     C1MASK11T       equ	491	;# 
  8880   000200                     PPSLOCK         equ	512	;# 
  8881   000201                     RA0PPS          equ	513	;# 
  8882   000202                     RA1PPS          equ	514	;# 
  8883   000203                     RA2PPS          equ	515	;# 
  8884   000204                     RA3PPS          equ	516	;# 
  8885   000205                     RA4PPS          equ	517	;# 
  8886   000206                     RA5PPS          equ	518	;# 
  8887   000207                     RA6PPS          equ	519	;# 
  8888   000208                     RA7PPS          equ	520	;# 
  8889   000209                     RB0PPS          equ	521	;# 
  8890   00020A                     RB1PPS          equ	522	;# 
  8891   00020B                     RB2PPS          equ	523	;# 
  8892   00020C                     RB3PPS          equ	524	;# 
  8893   00020D                     RB4PPS          equ	525	;# 
  8894   00020E                     RB5PPS          equ	526	;# 
  8895   00020F                     RB6PPS          equ	527	;# 
  8896   000210                     RB7PPS          equ	528	;# 
  8897   000211                     RC0PPS          equ	529	;# 
  8898   000212                     RC1PPS          equ	530	;# 
  8899   000213                     RC2PPS          equ	531	;# 
  8900   000214                     RC3PPS          equ	532	;# 
  8901   000215                     RC4PPS          equ	533	;# 
  8902   000216                     RC5PPS          equ	534	;# 
  8903   000217                     RC6PPS          equ	535	;# 
  8904   000218                     RC7PPS          equ	536	;# 
  8905   00023D                     CANRXPPS        equ	573	;# 
  8906   00023E                     INT0PPS         equ	574	;# 
  8907   00023F                     INT1PPS         equ	575	;# 
  8908   000240                     INT2PPS         equ	576	;# 
  8909   000241                     T0CKIPPS        equ	577	;# 
  8910   000242                     T1CKIPPS        equ	578	;# 
  8911   000243                     T1GPPS          equ	579	;# 
  8912   000244                     T3CKIPPS        equ	580	;# 
  8913   000245                     T3GPPS          equ	581	;# 
  8914   000246                     T5CKIPPS        equ	582	;# 
  8915   000247                     T5GPPS          equ	583	;# 
  8916   000248                     T2INPPS         equ	584	;# 
  8917   000249                     T4INPPS         equ	585	;# 
  8918   00024A                     T6INPPS         equ	586	;# 
  8919   00024B                     TUIN0PPS        equ	587	;# 
  8920   00024C                     TUIN1PPS        equ	588	;# 
  8921   00024F                     CCP1PPS         equ	591	;# 
  8922   000250                     CCP2PPS         equ	592	;# 
  8923   000251                     CCP3PPS         equ	593	;# 
  8924   000253                     PWM1ERSPPS      equ	595	;# 
  8925   000254                     PWM2ERSPPS      equ	596	;# 
  8926   000255                     PWM3ERSPPS      equ	597	;# 
  8927   000256                     PWM4ERSPPS      equ	598	;# 
  8928   000257                     PWMIN0PPS       equ	599	;# 
  8929   000258                     PWMIN1PPS       equ	600	;# 
  8930   000259                     SMT1WINPPS      equ	601	;# 
  8931   00025A                     SMT1SIGPPS      equ	602	;# 
  8932   00025B                     CWG1PPS         equ	603	;# 
  8933   00025B                     CWG1INPPS       equ	603	;# 
  8934   00025C                     CWG2PPS         equ	604	;# 
  8935   00025C                     CWG2INPPS       equ	604	;# 
  8936   00025D                     CWG3PPS         equ	605	;# 
  8937   00025D                     CWG3INPPS       equ	605	;# 
  8938   00025E                     MD1CARLPPS      equ	606	;# 
  8939   00025E                     MDCARLPPS       equ	606	;# 
  8940   00025F                     MD1CARHPPS      equ	607	;# 
  8941   00025F                     MDCARHPPS       equ	607	;# 
  8942   000260                     MD1SRCPPS       equ	608	;# 
  8943   000260                     MDSRCPPS        equ	608	;# 
  8944   000261                     CLCIN0PPS       equ	609	;# 
  8945   000262                     CLCIN1PPS       equ	610	;# 
  8946   000263                     CLCIN2PPS       equ	611	;# 
  8947   000264                     CLCIN3PPS       equ	612	;# 
  8948   000265                     CLCIN4PPS       equ	613	;# 
  8949   000266                     CLCIN5PPS       equ	614	;# 
  8950   000267                     CLCIN6PPS       equ	615	;# 
  8951   000268                     CLCIN7PPS       equ	616	;# 
  8952   000269                     ADACTPPS        equ	617	;# 
  8953   00026A                     SPI1SCKPPS      equ	618	;# 
  8954   00026B                     SPI1SDIPPS      equ	619	;# 
  8955   00026C                     SPI1SSPPS       equ	620	;# 
  8956   00026D                     SPI2SCKPPS      equ	621	;# 
  8957   00026E                     SPI2SDIPPS      equ	622	;# 
  8958   00026F                     SPI2SSPPS       equ	623	;# 
  8959   000270                     I2C1SDAPPS      equ	624	;# 
  8960   000271                     I2C1SCLPPS      equ	625	;# 
  8961   000272                     U1RXPPS         equ	626	;# 
  8962   000273                     U1CTSPPS        equ	627	;# 
  8963   000274                     U2RXPPS         equ	628	;# 
  8964   000275                     U2CTSPPS        equ	629	;# 
  8965   000276                     U3RXPPS         equ	630	;# 
  8966   000277                     U3CTSPPS        equ	631	;# 
  8967   000278                     U4RXPPS         equ	632	;# 
  8968   000279                     U4CTSPPS        equ	633	;# 
  8969   00027A                     U5RXPPS         equ	634	;# 
  8970   00027B                     U5CTSPPS        equ	635	;# 
  8971   000286                     RC4I2C          equ	646	;# 
  8972   000287                     RC3I2C          equ	647	;# 
  8973   000288                     RB2I2C          equ	648	;# 
  8974   000289                     RB1I2C          equ	649	;# 
  8975   00028A                     I2C1RXB         equ	650	;# 
  8976   00028B                     I2C1TXB         equ	651	;# 
  8977   00028C                     I2C1CNTL        equ	652	;# 
  8978   00028D                     I2C1CNTH        equ	653	;# 
  8979   00028E                     I2C1ADB0        equ	654	;# 
  8980   00028F                     I2C1ADB1        equ	655	;# 
  8981   000290                     I2C1ADR0        equ	656	;# 
  8982   000291                     I2C1ADR1        equ	657	;# 
  8983   000292                     I2C1ADR2        equ	658	;# 
  8984   000293                     I2C1ADR3        equ	659	;# 
  8985   000294                     I2C1CON0        equ	660	;# 
  8986   000295                     I2C1CON1        equ	661	;# 
  8987   000296                     I2C1CON2        equ	662	;# 
  8988   000297                     I2C1ERR         equ	663	;# 
  8989   000298                     I2C1STAT0       equ	664	;# 
  8990   000299                     I2C1STAT1       equ	665	;# 
  8991   00029A                     I2C1PIR         equ	666	;# 
  8992   00029B                     I2C1PIE         equ	667	;# 
  8993   00029C                     I2C1BTO         equ	668	;# 
  8994   00029D                     I2C1BAUD        equ	669	;# 
  8995   00029E                     I2C1CLK         equ	670	;# 
  8996   00029F                     I2C1BTOC        equ	671	;# 
  8997   0002A1                     U1RXB           equ	673	;# 
  8998   0002A1                     U1RXBL          equ	673	;# 
  8999   0002A2                     U1RXCHK         equ	674	;# 
  9000   0002A3                     U1TXB           equ	675	;# 
  9001   0002A3                     U1TXBL          equ	675	;# 
  9002   0002A4                     U1TXCHK         equ	676	;# 
  9003   0002A5                     U1P1            equ	677	;# 
  9004   0002A5                     U1P1L           equ	677	;# 
  9005   0002A6                     U1P1H           equ	678	;# 
  9006   0002A7                     U1P2            equ	679	;# 
  9007   0002A7                     U1P2L           equ	679	;# 
  9008   0002A8                     U1P2H           equ	680	;# 
  9009   0002A9                     U1P3            equ	681	;# 
  9010   0002A9                     U1P3L           equ	681	;# 
  9011   0002AA                     U1P3H           equ	682	;# 
  9012   0002AB                     U1CON0          equ	683	;# 
  9013   0002AC                     U1CON1          equ	684	;# 
  9014   0002AD                     U1CON2          equ	685	;# 
  9015   0002AE                     U1BRG           equ	686	;# 
  9016   0002AE                     U1BRGL          equ	686	;# 
  9017   0002AF                     U1BRGH          equ	687	;# 
  9018   0002B0                     U1FIFO          equ	688	;# 
  9019   0002B1                     U1UIR           equ	689	;# 
  9020   0002B2                     U1ERRIR         equ	690	;# 
  9021   0002B3                     U1ERRIE         equ	691	;# 
  9022   0002B4                     U2RXB           equ	692	;# 
  9023   0002B4                     U2RXBL          equ	692	;# 
  9024   0002B5                     U2RXCHK         equ	693	;# 
  9025   0002B6                     U2TXB           equ	694	;# 
  9026   0002B6                     U2TXBL          equ	694	;# 
  9027   0002B7                     U2TXCHK         equ	695	;# 
  9028   0002B8                     U2P1            equ	696	;# 
  9029   0002B8                     U2P1L           equ	696	;# 
  9030   0002B9                     U2P1H           equ	697	;# 
  9031   0002BA                     U2P2            equ	698	;# 
  9032   0002BA                     U2P2L           equ	698	;# 
  9033   0002BB                     U2P2H           equ	699	;# 
  9034   0002BC                     U2P3            equ	700	;# 
  9035   0002BC                     U2P3L           equ	700	;# 
  9036   0002BD                     U2P3H           equ	701	;# 
  9037   0002BE                     U2CON0          equ	702	;# 
  9038   0002BF                     U2CON1          equ	703	;# 
  9039   0002C0                     U2CON2          equ	704	;# 
  9040   0002C1                     U2BRG           equ	705	;# 
  9041   0002C1                     U2BRGL          equ	705	;# 
  9042   0002C2                     U2BRGH          equ	706	;# 
  9043   0002C3                     U2FIFO          equ	707	;# 
  9044   0002C4                     U2UIR           equ	708	;# 
  9045   0002C5                     U2ERRIR         equ	709	;# 
  9046   0002C6                     U2ERRIE         equ	710	;# 
  9047   0002C7                     U3RXB           equ	711	;# 
  9048   0002C7                     U3RXBL          equ	711	;# 
  9049   0002C9                     U3TXB           equ	713	;# 
  9050   0002C9                     U3TXBL          equ	713	;# 
  9051   0002CB                     U3P1            equ	715	;# 
  9052   0002CB                     U3P1L           equ	715	;# 
  9053   0002CD                     U3P2            equ	717	;# 
  9054   0002CD                     U3P2L           equ	717	;# 
  9055   0002CF                     U3P3            equ	719	;# 
  9056   0002CF                     U3P3L           equ	719	;# 
  9057   0002D1                     U3CON0          equ	721	;# 
  9058   0002D2                     U3CON1          equ	722	;# 
  9059   0002D3                     U3CON2          equ	723	;# 
  9060   0002D4                     U3BRG           equ	724	;# 
  9061   0002D4                     U3BRGL          equ	724	;# 
  9062   0002D5                     U3BRGH          equ	725	;# 
  9063   0002D6                     U3FIFO          equ	726	;# 
  9064   0002D7                     U3UIR           equ	727	;# 
  9065   0002D8                     U3ERRIR         equ	728	;# 
  9066   0002D9                     U3ERRIE         equ	729	;# 
  9067   0002DA                     U4RXB           equ	730	;# 
  9068   0002DA                     U4RXBL          equ	730	;# 
  9069   0002DC                     U4TXB           equ	732	;# 
  9070   0002DC                     U4TXBL          equ	732	;# 
  9071   0002DE                     U4P1            equ	734	;# 
  9072   0002DE                     U4P1L           equ	734	;# 
  9073   0002E0                     U4P2            equ	736	;# 
  9074   0002E0                     U4P2L           equ	736	;# 
  9075   0002E2                     U4P3            equ	738	;# 
  9076   0002E2                     U4P3L           equ	738	;# 
  9077   0002E4                     U4CON0          equ	740	;# 
  9078   0002E5                     U4CON1          equ	741	;# 
  9079   0002E6                     U4CON2          equ	742	;# 
  9080   0002E7                     U4BRG           equ	743	;# 
  9081   0002E7                     U4BRGL          equ	743	;# 
  9082   0002E8                     U4BRGH          equ	744	;# 
  9083   0002E9                     U4FIFO          equ	745	;# 
  9084   0002EA                     U4UIR           equ	746	;# 
  9085   0002EB                     U4ERRIR         equ	747	;# 
  9086   0002EC                     U4ERRIE         equ	748	;# 
  9087   0002ED                     U5RXB           equ	749	;# 
  9088   0002ED                     U5RXBL          equ	749	;# 
  9089   0002EF                     U5TXB           equ	751	;# 
  9090   0002EF                     U5TXBL          equ	751	;# 
  9091   0002F1                     U5P1            equ	753	;# 
  9092   0002F1                     U5P1L           equ	753	;# 
  9093   0002F3                     U5P2            equ	755	;# 
  9094   0002F3                     U5P2L           equ	755	;# 
  9095   0002F5                     U5P3            equ	757	;# 
  9096   0002F5                     U5P3L           equ	757	;# 
  9097   0002F7                     U5CON0          equ	759	;# 
  9098   0002F8                     U5CON1          equ	760	;# 
  9099   0002F9                     U5CON2          equ	761	;# 
  9100   0002FA                     U5BRG           equ	762	;# 
  9101   0002FA                     U5BRGL          equ	762	;# 
  9102   0002FB                     U5BRGH          equ	763	;# 
  9103   0002FC                     U5FIFO          equ	764	;# 
  9104   0002FD                     U5UIR           equ	765	;# 
  9105   0002FE                     U5ERRIR         equ	766	;# 
  9106   0002FF                     U5ERRIE         equ	767	;# 
  9107   000300                     SMT1TMR         equ	768	;# 
  9108   000300                     SMT1TMRL        equ	768	;# 
  9109   000301                     SMT1TMRH        equ	769	;# 
  9110   000302                     SMT1TMRU        equ	770	;# 
  9111   000303                     SMT1CPR         equ	771	;# 
  9112   000303                     SMT1CPRL        equ	771	;# 
  9113   000304                     SMT1CPRH        equ	772	;# 
  9114   000305                     SMT1CPRU        equ	773	;# 
  9115   000306                     SMT1CPW         equ	774	;# 
  9116   000306                     SMT1CPWL        equ	774	;# 
  9117   000307                     SMT1CPWH        equ	775	;# 
  9118   000308                     SMT1CPWU        equ	776	;# 
  9119   000309                     SMT1PR          equ	777	;# 
  9120   000309                     SMT1PRL         equ	777	;# 
  9121   00030A                     SMT1PRH         equ	778	;# 
  9122   00030B                     SMT1PRU         equ	779	;# 
  9123   00030C                     SMT1CON0        equ	780	;# 
  9124   00030D                     SMT1CON1        equ	781	;# 
  9125   00030E                     SMT1STAT        equ	782	;# 
  9126   00030F                     SMT1CLK         equ	783	;# 
  9127   000310                     SMT1SIG         equ	784	;# 
  9128   000311                     SMT1WIN         equ	785	;# 
  9129   000318                     TMR0L           equ	792	;# 
  9130   000318                     TMR0            equ	792	;# 
  9131   000319                     TMR0H           equ	793	;# 
  9132   000319                     PR0             equ	793	;# 
  9133   00031A                     T0CON0          equ	794	;# 
  9134   00031B                     T0CON1          equ	795	;# 
  9135   00031C                     TMR1            equ	796	;# 
  9136   00031C                     TMR1L           equ	796	;# 
  9137   00031D                     TMR1H           equ	797	;# 
  9138   00031E                     T1CON           equ	798	;# 
  9139   00031E                     TMR1CON         equ	798	;# 
  9140   00031F                     T1GCON          equ	799	;# 
  9141   00031F                     TMR1GCON        equ	799	;# 
  9142   000320                     T1GATE          equ	800	;# 
  9143   000320                     TMR1GATE        equ	800	;# 
  9144   000321                     T1CLK           equ	801	;# 
  9145   000321                     TMR1CLK         equ	801	;# 
  9146   000321                     PR1             equ	801	;# 
  9147   000322                     T2TMR           equ	802	;# 
  9148   000322                     TMR2            equ	802	;# 
  9149   000323                     T2PR            equ	803	;# 
  9150   000323                     PR2             equ	803	;# 
  9151   000324                     T2CON           equ	804	;# 
  9152   000325                     T2HLT           equ	805	;# 
  9153   000326                     T2CLKCON        equ	806	;# 
  9154   000326                     T2CLK           equ	806	;# 
  9155   000327                     T2RST           equ	807	;# 
  9156   000328                     TMR3            equ	808	;# 
  9157   000328                     TMR3L           equ	808	;# 
  9158   000329                     TMR3H           equ	809	;# 
  9159   00032A                     T3CON           equ	810	;# 
  9160   00032A                     TMR3CON         equ	810	;# 
  9161   00032B                     T3GCON          equ	811	;# 
  9162   00032B                     TMR3GCON        equ	811	;# 
  9163   00032C                     T3GATE          equ	812	;# 
  9164   00032C                     TMR3GATE        equ	812	;# 
  9165   00032D                     T3CLK           equ	813	;# 
  9166   00032D                     TMR3CLK         equ	813	;# 
  9167   00032D                     PR3             equ	813	;# 
  9168   00032E                     T4TMR           equ	814	;# 
  9169   00032E                     TMR4            equ	814	;# 
  9170   00032F                     T4PR            equ	815	;# 
  9171   00032F                     PR4             equ	815	;# 
  9172   000330                     T4CON           equ	816	;# 
  9173   000331                     T4HLT           equ	817	;# 
  9174   000332                     T4CLKCON        equ	818	;# 
  9175   000332                     T4CLK           equ	818	;# 
  9176   000333                     T4RST           equ	819	;# 
  9177   000334                     TMR5            equ	820	;# 
  9178   000334                     TMR5L           equ	820	;# 
  9179   000335                     TMR5H           equ	821	;# 
  9180   000336                     T5CON           equ	822	;# 
  9181   000336                     TMR5CON         equ	822	;# 
  9182   000337                     T5GCON          equ	823	;# 
  9183   000337                     TMR5GCON        equ	823	;# 
  9184   000338                     T5GATE          equ	824	;# 
  9185   000338                     TMR5GATE        equ	824	;# 
  9186   000339                     T5CLK           equ	825	;# 
  9187   000339                     TMR5CLK         equ	825	;# 
  9188   000339                     PR5             equ	825	;# 
  9189   00033A                     T6TMR           equ	826	;# 
  9190   00033A                     TMR6            equ	826	;# 
  9191   00033B                     T6PR            equ	827	;# 
  9192   00033B                     PR6             equ	827	;# 
  9193   00033C                     T6CON           equ	828	;# 
  9194   00033D                     T6HLT           equ	829	;# 
  9195   00033E                     T6CLKCON        equ	830	;# 
  9196   00033E                     T6CLK           equ	830	;# 
  9197   00033F                     T6RST           equ	831	;# 
  9198   000340                     CCPR1           equ	832	;# 
  9199   000340                     CCPR1L          equ	832	;# 
  9200   000341                     CCPR1H          equ	833	;# 
  9201   000342                     CCP1CON         equ	834	;# 
  9202   000343                     CCP1CAP         equ	835	;# 
  9203   000344                     CCPR2           equ	836	;# 
  9204   000344                     CCPR2L          equ	836	;# 
  9205   000345                     CCPR2H          equ	837	;# 
  9206   000346                     CCP2CON         equ	838	;# 
  9207   000347                     CCP2CAP         equ	839	;# 
  9208   000348                     CCPR3           equ	840	;# 
  9209   000348                     CCPR3L          equ	840	;# 
  9210   000349                     CCPR3H          equ	841	;# 
  9211   00034A                     CCP3CON         equ	842	;# 
  9212   00034B                     CCP3CAP         equ	843	;# 
  9213   00034C                     CCPTMRS0        equ	844	;# 
  9214   00034F                     CRCDATA         equ	847	;# 
  9215   00034F                     CRCDATAL        equ	847	;# 
  9216   000350                     CRCDATAH        equ	848	;# 
  9217   000351                     CRCDATAU        equ	849	;# 
  9218   000352                     CRCDATAT        equ	850	;# 
  9219   000353                     CRCOUT          equ	851	;# 
  9220   000353                     CRCSHFT         equ	851	;# 
  9221   000353                     CRCXOR          equ	851	;# 
  9222   000353                     CRCOUTL         equ	851	;# 
  9223   000353                     CRCSHFTL        equ	851	;# 
  9224   000353                     CRCSHIFTL       equ	851	;# 
  9225   000353                     CRCXORL         equ	851	;# 
  9226   000354                     CRCOUTH         equ	852	;# 
  9227   000354                     CRCSHFTH        equ	852	;# 
  9228   000354                     CRCSHIFTH       equ	852	;# 
  9229   000354                     CRCXORH         equ	852	;# 
  9230   000355                     CRCOUTU         equ	853	;# 
  9231   000355                     CRCSHFTU        equ	853	;# 
  9232   000355                     CRCSHIFTU       equ	853	;# 
  9233   000355                     CRCXORU         equ	853	;# 
  9234   000356                     CRCOUTT         equ	854	;# 
  9235   000356                     CRCSHFTT        equ	854	;# 
  9236   000356                     CRCSHIFTT       equ	854	;# 
  9237   000356                     CRCXORT         equ	854	;# 
  9238   000357                     CRCCON0         equ	855	;# 
  9239   000358                     CRCCON1         equ	856	;# 
  9240   000359                     CRCCON2         equ	857	;# 
  9241   00035A                     SCANLADR        equ	858	;# 
  9242   00035A                     SCANLADRL       equ	858	;# 
  9243   00035B                     SCANLADRH       equ	859	;# 
  9244   00035C                     SCANLADRU       equ	860	;# 
  9245   00035D                     SCANHADR        equ	861	;# 
  9246   00035D                     SCANHADRL       equ	861	;# 
  9247   00035E                     SCANHADRH       equ	862	;# 
  9248   00035F                     SCANHADRU       equ	863	;# 
  9249   000360                     SCANCON0        equ	864	;# 
  9250   000361                     SCANTRIG        equ	865	;# 
  9251   000362                     IPR0            equ	866	;# 
  9252   000363                     IPR1            equ	867	;# 
  9253   000364                     IPR2            equ	868	;# 
  9254   000365                     IPR3            equ	869	;# 
  9255   000366                     IPR4            equ	870	;# 
  9256   000367                     IPR5            equ	871	;# 
  9257   000368                     IPR6            equ	872	;# 
  9258   000369                     IPR7            equ	873	;# 
  9259   00036A                     IPR8            equ	874	;# 
  9260   00036B                     IPR9            equ	875	;# 
  9261   00036C                     IPR10           equ	876	;# 
  9262   00036D                     IPR11           equ	877	;# 
  9263   00036E                     IPR12           equ	878	;# 
  9264   00036F                     IPR13           equ	879	;# 
  9265   000370                     IPR14           equ	880	;# 
  9266   000371                     IPR15           equ	881	;# 
  9267   000373                     STATUS_CSHAD    equ	883	;# 
  9268   000374                     WREG_CSHAD      equ	884	;# 
  9269   000375                     BSR_CSHAD       equ	885	;# 
  9270   000376                     SHADCON         equ	886	;# 
  9271   000377                     STATUS_SHAD     equ	887	;# 
  9272   000378                     WREG_SHAD       equ	888	;# 
  9273   000379                     BSR_SHAD        equ	889	;# 
  9274   00037A                     PCLATH_SHAD     equ	890	;# 
  9275   00037B                     PCLATU_SHAD     equ	891	;# 
  9276   00037C                     FSR0SH          equ	892	;# 
  9277   00037C                     FSR0L_SHAD      equ	892	;# 
  9278   00037D                     FSR0H_SHAD      equ	893	;# 
  9279   00037E                     FSR1SH          equ	894	;# 
  9280   00037E                     FSR1L_SHAD      equ	894	;# 
  9281   00037F                     FSR1H_SHAD      equ	895	;# 
  9282   000380                     FSR2SH          equ	896	;# 
  9283   000380                     FSR2L_SHAD      equ	896	;# 
  9284   000381                     FSR2H_SHAD      equ	897	;# 
  9285   000382                     PRODSH          equ	898	;# 
  9286   000382                     PRODL_SHAD      equ	898	;# 
  9287   000383                     PRODH_SHAD      equ	899	;# 
  9288   000387                     TU16ACON0       equ	903	;# 
  9289   000388                     TU16ACON1       equ	904	;# 
  9290   000389                     TU16AHLT        equ	905	;# 
  9291   00038A                     TU16APS         equ	906	;# 
  9292   00038B                     TU16ATMR        equ	907	;# 
  9293   00038B                     TU16ACR         equ	907	;# 
  9294   00038B                     TU16ATMRL       equ	907	;# 
  9295   00038B                     TU16ACRL        equ	907	;# 
  9296   00038C                     TU16ATMRH       equ	908	;# 
  9297   00038C                     TU16ACRH        equ	908	;# 
  9298   00038D                     TU16APR         equ	909	;# 
  9299   00038D                     TU16APRL        equ	909	;# 
  9300   00038E                     TU16APRH        equ	910	;# 
  9301   00038F                     TU16ACLK        equ	911	;# 
  9302   000390                     TU16AERS        equ	912	;# 
  9303   000393                     TU16BCON0       equ	915	;# 
  9304   000394                     TU16BCON1       equ	916	;# 
  9305   000395                     TU16BHLT        equ	917	;# 
  9306   000396                     TU16BPS         equ	918	;# 
  9307   000397                     TU16BTMR        equ	919	;# 
  9308   000397                     TU16BCR         equ	919	;# 
  9309   000397                     TU16BTMRL       equ	919	;# 
  9310   000397                     TU16BCRL        equ	919	;# 
  9311   000398                     TU16BTMRH       equ	920	;# 
  9312   000398                     TU16BCRH        equ	920	;# 
  9313   000399                     TU16BPR         equ	921	;# 
  9314   000399                     TU16BPRL        equ	921	;# 
  9315   00039A                     TU16BPRH        equ	922	;# 
  9316   00039B                     TU16BCLK        equ	923	;# 
  9317   00039C                     TU16BERS        equ	924	;# 
  9318   0003BB                     TUCHAIN         equ	955	;# 
  9319   0003BC                     CWG1CLK         equ	956	;# 
  9320   0003BC                     CWG1CLKCON      equ	956	;# 
  9321   0003BD                     CWG1ISM         equ	957	;# 
  9322   0003BE                     CWG1DBR         equ	958	;# 
  9323   0003BF                     CWG1DBF         equ	959	;# 
  9324   0003C0                     CWG1CON0        equ	960	;# 
  9325   0003C1                     CWG1CON1        equ	961	;# 
  9326   0003C2                     CWG1AS0         equ	962	;# 
  9327   0003C3                     CWG1AS1         equ	963	;# 
  9328   0003C4                     CWG1STR         equ	964	;# 
  9329   0003C5                     CWG2CLK         equ	965	;# 
  9330   0003C5                     CWG2CLKCON      equ	965	;# 
  9331   0003C6                     CWG2ISM         equ	966	;# 
  9332   0003C7                     CWG2DBR         equ	967	;# 
  9333   0003C8                     CWG2DBF         equ	968	;# 
  9334   0003C9                     CWG2CON0        equ	969	;# 
  9335   0003CA                     CWG2CON1        equ	970	;# 
  9336   0003CB                     CWG2AS0         equ	971	;# 
  9337   0003CC                     CWG2AS1         equ	972	;# 
  9338   0003CD                     CWG2STR         equ	973	;# 
  9339   0003CE                     CWG3CLK         equ	974	;# 
  9340   0003CE                     CWG3CLKCON      equ	974	;# 
  9341   0003CF                     CWG3ISM         equ	975	;# 
  9342   0003D0                     CWG3DBR         equ	976	;# 
  9343   0003D1                     CWG3DBF         equ	977	;# 
  9344   0003D2                     CWG3CON0        equ	978	;# 
  9345   0003D3                     CWG3CON1        equ	979	;# 
  9346   0003D4                     CWG3AS0         equ	980	;# 
  9347   0003D5                     CWG3AS1         equ	981	;# 
  9348   0003D6                     CWG3STR         equ	982	;# 
  9349   0003D7                     FVRCON          equ	983	;# 
  9350   0003D8                     ADCPCON         equ	984	;# 
  9351   0003D8                     ADCP            equ	984	;# 
  9352   0003D9                     ADLTH           equ	985	;# 
  9353   0003D9                     ADLTHL          equ	985	;# 
  9354   0003DA                     ADLTHH          equ	986	;# 
  9355   0003DB                     ADUTH           equ	987	;# 
  9356   0003DB                     ADUTHL          equ	987	;# 
  9357   0003DC                     ADUTHH          equ	988	;# 
  9358   0003DD                     ADERR           equ	989	;# 
  9359   0003DD                     ADERRL          equ	989	;# 
  9360   0003DE                     ADERRH          equ	990	;# 
  9361   0003DF                     ADSTPT          equ	991	;# 
  9362   0003DF                     ADSTPTL         equ	991	;# 
  9363   0003E0                     ADSTPTH         equ	992	;# 
  9364   0003E1                     ADFLTR          equ	993	;# 
  9365   0003E1                     ADFLTRL         equ	993	;# 
  9366   0003E2                     ADFLTRH         equ	994	;# 
  9367   0003E3                     ADACC           equ	995	;# 
  9368   0003E3                     ADACCL          equ	995	;# 
  9369   0003E4                     ADACCH          equ	996	;# 
  9370   0003E5                     ADACCU          equ	997	;# 
  9371   0003E6                     ADCNT           equ	998	;# 
  9372   0003E7                     ADRPT           equ	999	;# 
  9373   0003E8                     ADPREV          equ	1000	;# 
  9374   0003E8                     ADPREVL         equ	1000	;# 
  9375   0003E9                     ADPREVH         equ	1001	;# 
  9376   0003EA                     ADRES           equ	1002	;# 
  9377   0003EA                     ADRESL          equ	1002	;# 
  9378   0003EB                     ADRESH          equ	1003	;# 
  9379   0003EC                     ADPCH           equ	1004	;# 
  9380   0003EE                     ADACQ           equ	1006	;# 
  9381   0003EE                     ADACQL          equ	1006	;# 
  9382   0003EF                     ADACQH          equ	1007	;# 
  9383   0003F0                     ADCAP           equ	1008	;# 
  9384   0003F1                     ADPRE           equ	1009	;# 
  9385   0003F1                     ADPREL          equ	1009	;# 
  9386   0003F2                     ADPREH          equ	1010	;# 
  9387   0003F3                     ADCON0          equ	1011	;# 
  9388   0003F4                     ADCON1          equ	1012	;# 
  9389   0003F5                     ADCON2          equ	1013	;# 
  9390   0003F6                     ADCON3          equ	1014	;# 
  9391   0003F7                     ADSTAT          equ	1015	;# 
  9392   0003F8                     ADREF           equ	1016	;# 
  9393   0003F9                     ADACT           equ	1017	;# 
  9394   0003FA                     ADCLK           equ	1018	;# 
  9395   0003FB                     ADCTX           equ	1019	;# 
  9396   0003FC                     ADCSEL1         equ	1020	;# 
  9397   0003FD                     ADCSEL2         equ	1021	;# 
  9398   0003FE                     ADCSEL3         equ	1022	;# 
  9399   0003FF                     ADCSEL4         equ	1023	;# 
  9400   000400                     ANSELA          equ	1024	;# 
  9401   000401                     WPUA            equ	1025	;# 
  9402   000402                     ODCONA          equ	1026	;# 
  9403   000403                     SLRCONA         equ	1027	;# 
  9404   000404                     INLVLA          equ	1028	;# 
  9405   000405                     IOCAP           equ	1029	;# 
  9406   000406                     IOCAN           equ	1030	;# 
  9407   000407                     IOCAF           equ	1031	;# 
  9408   000408                     ANSELB          equ	1032	;# 
  9409   000409                     WPUB            equ	1033	;# 
  9410   00040A                     ODCONB          equ	1034	;# 
  9411   00040B                     SLRCONB         equ	1035	;# 
  9412   00040C                     INLVLB          equ	1036	;# 
  9413   00040D                     IOCBP           equ	1037	;# 
  9414   00040E                     IOCBN           equ	1038	;# 
  9415   00040F                     IOCBF           equ	1039	;# 
  9416   000410                     ANSELC          equ	1040	;# 
  9417   000411                     WPUC            equ	1041	;# 
  9418   000412                     ODCONC          equ	1042	;# 
  9419   000413                     SLRCONC         equ	1043	;# 
  9420   000414                     INLVLC          equ	1044	;# 
  9421   000415                     IOCCP           equ	1045	;# 
  9422   000416                     IOCCN           equ	1046	;# 
  9423   000417                     IOCCF           equ	1047	;# 
  9424   000421                     WPUE            equ	1057	;# 
  9425   000424                     INLVLE          equ	1060	;# 
  9426   000425                     IOCEP           equ	1061	;# 
  9427   000426                     IOCEN           equ	1062	;# 
  9428   000427                     IOCEF           equ	1063	;# 
  9429   000440                     NCO1ACC         equ	1088	;# 
  9430   000440                     NCO1ACCL        equ	1088	;# 
  9431   000441                     NCO1ACCH        equ	1089	;# 
  9432   000442                     NCO1ACCU        equ	1090	;# 
  9433   000443                     NCO1INC         equ	1091	;# 
  9434   000443                     NCO1INCL        equ	1091	;# 
  9435   000444                     NCO1INCH        equ	1092	;# 
  9436   000445                     NCO1INCU        equ	1093	;# 
  9437   000446                     NCO1CON         equ	1094	;# 
  9438   000447                     NCO1CLK         equ	1095	;# 
  9439   000448                     NCO2ACC         equ	1096	;# 
  9440   000448                     NCO2ACCL        equ	1096	;# 
  9441   000449                     NCO2ACCH        equ	1097	;# 
  9442   00044A                     NCO2ACCU        equ	1098	;# 
  9443   00044B                     NCO2INC         equ	1099	;# 
  9444   00044B                     NCO2INCL        equ	1099	;# 
  9445   00044C                     NCO2INCH        equ	1100	;# 
  9446   00044D                     NCO2INCU        equ	1101	;# 
  9447   00044E                     NCO2CON         equ	1102	;# 
  9448   00044F                     NCO2CLK         equ	1103	;# 
  9449   000450                     NCO3ACC         equ	1104	;# 
  9450   000450                     NCO3ACCL        equ	1104	;# 
  9451   000451                     NCO3ACCH        equ	1105	;# 
  9452   000452                     NCO3ACCU        equ	1106	;# 
  9453   000453                     NCO3INC         equ	1107	;# 
  9454   000453                     NCO3INCL        equ	1107	;# 
  9455   000454                     NCO3INCH        equ	1108	;# 
  9456   000455                     NCO3INCU        equ	1109	;# 
  9457   000456                     NCO3CON         equ	1110	;# 
  9458   000457                     NCO3CLK         equ	1111	;# 
  9459   000458                     FSCMCON         equ	1112	;# 
  9460   000459                     IVTLOCK         equ	1113	;# 
  9461   00045A                     IVTAD           equ	1114	;# 
  9462   00045A                     IVTADL          equ	1114	;# 
  9463   00045B                     IVTADH          equ	1115	;# 
  9464   00045C                     IVTADU          equ	1116	;# 
  9465   00045D                     IVTBASE         equ	1117	;# 
  9466   00045D                     IVTBASEL        equ	1117	;# 
  9467   00045E                     IVTBASEH        equ	1118	;# 
  9468   00045F                     IVTBASEU        equ	1119	;# 
  9469   000460                     PWM1ERS         equ	1120	;# 
  9470   000461                     PWM1CLK         equ	1121	;# 
  9471   000462                     PWM1LDS         equ	1122	;# 
  9472   000463                     PWM1PR          equ	1123	;# 
  9473   000463                     PWM1PRL         equ	1123	;# 
  9474   000464                     PWM1PRH         equ	1124	;# 
  9475   000465                     PWM1CPRE        equ	1125	;# 
  9476   000466                     PWM1PIPOS       equ	1126	;# 
  9477   000467                     PWM1GIR         equ	1127	;# 
  9478   000468                     PWM1GIE         equ	1128	;# 
  9479   000469                     PWM1CON         equ	1129	;# 
  9480   00046A                     PWM1S1CFG       equ	1130	;# 
  9481   00046B                     PWM1S1P1        equ	1131	;# 
  9482   00046B                     PWM1S1P1L       equ	1131	;# 
  9483   00046C                     PWM1S1P1H       equ	1132	;# 
  9484   00046D                     PWM1S1P2        equ	1133	;# 
  9485   00046D                     PWM1S1P2L       equ	1133	;# 
  9486   00046E                     PWM1S1P2H       equ	1134	;# 
  9487   00046F                     PWM2ERS         equ	1135	;# 
  9488   000470                     PWM2CLK         equ	1136	;# 
  9489   000471                     PWM2LDS         equ	1137	;# 
  9490   000472                     PWM2PR          equ	1138	;# 
  9491   000472                     PWM2PRL         equ	1138	;# 
  9492   000473                     PWM2PRH         equ	1139	;# 
  9493   000474                     PWM2CPRE        equ	1140	;# 
  9494   000475                     PWM2PIPOS       equ	1141	;# 
  9495   000476                     PWM2GIR         equ	1142	;# 
  9496   000477                     PWM2GIE         equ	1143	;# 
  9497   000478                     PWM2CON         equ	1144	;# 
  9498   000479                     PWM2S1CFG       equ	1145	;# 
  9499   00047A                     PWM2S1P1        equ	1146	;# 
  9500   00047A                     PWM2S1P1L       equ	1146	;# 
  9501   00047B                     PWM2S1P1H       equ	1147	;# 
  9502   00047C                     PWM2S1P2        equ	1148	;# 
  9503   00047C                     PWM2S1P2L       equ	1148	;# 
  9504   00047D                     PWM2S1P2H       equ	1149	;# 
  9505   00047E                     PWM3ERS         equ	1150	;# 
  9506   00047F                     PWM3CLK         equ	1151	;# 
  9507   000480                     PWM3LDS         equ	1152	;# 
  9508   000481                     PWM3PR          equ	1153	;# 
  9509   000481                     PWM3PRL         equ	1153	;# 
  9510   000482                     PWM3PRH         equ	1154	;# 
  9511   000483                     PWM3CPRE        equ	1155	;# 
  9512   000484                     PWM3PIPOS       equ	1156	;# 
  9513   000485                     PWM3GIR         equ	1157	;# 
  9514   000486                     PWM3GIE         equ	1158	;# 
  9515   000487                     PWM3CON         equ	1159	;# 
  9516   000488                     PWM3S1CFG       equ	1160	;# 
  9517   000489                     PWM3S1P1        equ	1161	;# 
  9518   000489                     PWM3S1P1L       equ	1161	;# 
  9519   00048A                     PWM3S1P1H       equ	1162	;# 
  9520   00048B                     PWM3S1P2        equ	1163	;# 
  9521   00048B                     PWM3S1P2L       equ	1163	;# 
  9522   00048C                     PWM3S1P2H       equ	1164	;# 
  9523   00048D                     PWM4ERS         equ	1165	;# 
  9524   00048E                     PWM4CLK         equ	1166	;# 
  9525   00048F                     PWM4LDS         equ	1167	;# 
  9526   000490                     PWM4PR          equ	1168	;# 
  9527   000490                     PWM4PRL         equ	1168	;# 
  9528   000491                     PWM4PRH         equ	1169	;# 
  9529   000492                     PWM4CPRE        equ	1170	;# 
  9530   000493                     PWM4PIPOS       equ	1171	;# 
  9531   000494                     PWM4GIR         equ	1172	;# 
  9532   000495                     PWM4GIE         equ	1173	;# 
  9533   000496                     PWM4CON         equ	1174	;# 
  9534   000497                     PWM4S1CFG       equ	1175	;# 
  9535   000498                     PWM4S1P1        equ	1176	;# 
  9536   000498                     PWM4S1P1L       equ	1176	;# 
  9537   000499                     PWM4S1P1H       equ	1177	;# 
  9538   00049A                     PWM4S1P2        equ	1178	;# 
  9539   00049A                     PWM4S1P2L       equ	1178	;# 
  9540   00049B                     PWM4S1P2H       equ	1179	;# 
  9541   00049C                     PWMLOAD         equ	1180	;# 
  9542   00049D                     PWMEN           equ	1181	;# 
  9543   00049E                     PIE0            equ	1182	;# 
  9544   00049F                     PIE1            equ	1183	;# 
  9545   0004A0                     PIE2            equ	1184	;# 
  9546   0004A1                     PIE3            equ	1185	;# 
  9547   0004A2                     PIE4            equ	1186	;# 
  9548   0004A3                     PIE5            equ	1187	;# 
  9549   0004A4                     PIE6            equ	1188	;# 
  9550   0004A5                     PIE7            equ	1189	;# 
  9551   0004A6                     PIE8            equ	1190	;# 
  9552   0004A7                     PIE9            equ	1191	;# 
  9553   0004A8                     PIE10           equ	1192	;# 
  9554   0004A9                     PIE11           equ	1193	;# 
  9555   0004AA                     PIE12           equ	1194	;# 
  9556   0004AB                     PIE13           equ	1195	;# 
  9557   0004AC                     PIE14           equ	1196	;# 
  9558   0004AD                     PIE15           equ	1197	;# 
  9559   0004AE                     PIR0            equ	1198	;# 
  9560   0004AF                     PIR1            equ	1199	;# 
  9561   0004B0                     PIR2            equ	1200	;# 
  9562   0004B1                     PIR3            equ	1201	;# 
  9563   0004B2                     PIR4            equ	1202	;# 
  9564   0004B3                     PIR5            equ	1203	;# 
  9565   0004B4                     PIR6            equ	1204	;# 
  9566   0004B5                     PIR7            equ	1205	;# 
  9567   0004B6                     PIR8            equ	1206	;# 
  9568   0004B7                     PIR9            equ	1207	;# 
  9569   0004B8                     PIR10           equ	1208	;# 
  9570   0004B9                     PIR11           equ	1209	;# 
  9571   0004BA                     PIR12           equ	1210	;# 
  9572   0004BB                     PIR13           equ	1211	;# 
  9573   0004BC                     PIR14           equ	1212	;# 
  9574   0004BD                     PIR15           equ	1213	;# 
  9575   0004BE                     LATA            equ	1214	;# 
  9576   0004BF                     LATB            equ	1215	;# 
  9577   0004C0                     LATC            equ	1216	;# 
  9578   0004C6                     TRISA           equ	1222	;# 
  9579   0004C7                     TRISB           equ	1223	;# 
  9580   0004C8                     TRISC           equ	1224	;# 
  9581   0004CA                     TRISE           equ	1226	;# 
  9582   0004CE                     PORTA           equ	1230	;# 
  9583   0004CF                     PORTB           equ	1231	;# 
  9584   0004D0                     PORTC           equ	1232	;# 
  9585   0004D2                     PORTE           equ	1234	;# 
  9586   0004D6                     INTCON0         equ	1238	;# 
  9587   0004D7                     INTCON1         equ	1239	;# 
  9588   0004D8                     STATUS          equ	1240	;# 
  9589   0004D9                     FSR2            equ	1241	;# 
  9590   0004D9                     FSR2L           equ	1241	;# 
  9591   0004DA                     FSR2H           equ	1242	;# 
  9592   0004DB                     PLUSW2          equ	1243	;# 
  9593   0004DC                     PREINC2         equ	1244	;# 
  9594   0004DD                     POSTDEC2        equ	1245	;# 
  9595   0004DE                     POSTINC2        equ	1246	;# 
  9596   0004DF                     INDF2           equ	1247	;# 
  9597   0004E0                     BSR             equ	1248	;# 
  9598   0004E1                     FSR1            equ	1249	;# 
  9599   0004E1                     FSR1L           equ	1249	;# 
  9600   0004E2                     FSR1H           equ	1250	;# 
  9601   0004E3                     PLUSW1          equ	1251	;# 
  9602   0004E4                     PREINC1         equ	1252	;# 
  9603   0004E5                     POSTDEC1        equ	1253	;# 
  9604   0004E6                     POSTINC1        equ	1254	;# 
  9605   0004E7                     INDF1           equ	1255	;# 
  9606   0004E8                     WREG            equ	1256	;# 
  9607   0004E9                     FSR0            equ	1257	;# 
  9608   0004E9                     FSR0L           equ	1257	;# 
  9609   0004EA                     FSR0H           equ	1258	;# 
  9610   0004EB                     PLUSW0          equ	1259	;# 
  9611   0004EC                     PREINC0         equ	1260	;# 
  9612   0004ED                     POSTDEC0        equ	1261	;# 
  9613   0004EE                     POSTINC0        equ	1262	;# 
  9614   0004EF                     INDF0           equ	1263	;# 
  9615   0004F0                     PCON0           equ	1264	;# 
  9616   0004F1                     PCON1           equ	1265	;# 
  9617   0004F2                     CPUDOZE         equ	1266	;# 
  9618   0004F3                     PROD            equ	1267	;# 
  9619   0004F3                     PRODL           equ	1267	;# 
  9620   0004F4                     PRODH           equ	1268	;# 
  9621   0004F5                     TABLAT          equ	1269	;# 
  9622   0004F6                     TBLPTR          equ	1270	;# 
  9623   0004F6                     TBLPTRL         equ	1270	;# 
  9624   0004F7                     TBLPTRH         equ	1271	;# 
  9625   0004F8                     TBLPTRU         equ	1272	;# 
  9626   0004F9                     PCLAT           equ	1273	;# 
  9627   0004F9                     PCL             equ	1273	;# 
  9628   0004FA                     PCLATH          equ	1274	;# 
  9629   0004FB                     PCLATU          equ	1275	;# 
  9630   0004FC                     STKPTR          equ	1276	;# 
  9631   0004FD                     TOS             equ	1277	;# 
  9632   0004FD                     TOSL            equ	1277	;# 
  9633   0004FE                     TOSH            equ	1278	;# 
  9634   0004FF                     TOSU            equ	1279	;# 
  9635   000038                     BOOTREG         equ	56	;# 
  9636   000039                     CLKRCON         equ	57	;# 
  9637   00003A                     CLKRCLK         equ	58	;# 
  9638   000040                     NVMCON0         equ	64	;# 
  9639   000041                     NVMCON1         equ	65	;# 
  9640   000042                     NVMLOCK         equ	66	;# 
  9641   000043                     NVMADR          equ	67	;# 
  9642   000043                     NVMADRL         equ	67	;# 
  9643   000044                     NVMADRH         equ	68	;# 
  9644   000045                     NVMADRU         equ	69	;# 
  9645   000046                     NVMDAT          equ	70	;# 
  9646   000046                     NVMDATL         equ	70	;# 
  9647   000047                     NVMDATH         equ	71	;# 
  9648   000048                     VREGCON         equ	72	;# 
  9649   000049                     BORCON          equ	73	;# 
  9650   00004A                     HLVDCON0        equ	74	;# 
  9651   00004B                     HLVDCON1        equ	75	;# 
  9652   00004C                     ZCDCON          equ	76	;# 
  9653   000060                     PMD0            equ	96	;# 
  9654   000061                     PMD1            equ	97	;# 
  9655   000062                     PMD2            equ	98	;# 
  9656   000063                     PMD3            equ	99	;# 
  9657   000064                     PMD4            equ	100	;# 
  9658   000065                     PMD5            equ	101	;# 
  9659   000066                     PMD6            equ	102	;# 
  9660   000067                     PMD7            equ	103	;# 
  9661   000068                     PMD8            equ	104	;# 
  9662   00006A                     MD1CON0         equ	106	;# 
  9663   00006B                     MD1CON1         equ	107	;# 
  9664   00006C                     MD1SRC          equ	108	;# 
  9665   00006D                     MD1CARL         equ	109	;# 
  9666   00006E                     MD1CARH         equ	110	;# 
  9667   00006F                     CMOUT           equ	111	;# 
  9668   000070                     CM1CON0         equ	112	;# 
  9669   000071                     CM1CON1         equ	113	;# 
  9670   000072                     CM1NCH          equ	114	;# 
  9671   000073                     CM1PCH          equ	115	;# 
  9672   000074                     CM2CON0         equ	116	;# 
  9673   000075                     CM2CON1         equ	117	;# 
  9674   000076                     CM2NCH          equ	118	;# 
  9675   000077                     CM2PCH          equ	119	;# 
  9676   000078                     WDTCON0         equ	120	;# 
  9677   000079                     WDTCON1         equ	121	;# 
  9678   00007A                     WDTPSL          equ	122	;# 
  9679   00007B                     WDTPSH          equ	123	;# 
  9680   00007C                     WDTTMR          equ	124	;# 
  9681   00007D                     DAC1DAT         equ	125	;# 
  9682   00007D                     DAC1DATL        equ	125	;# 
  9683   00007F                     DAC1CON         equ	127	;# 
  9684   000080                     SPI1RXB         equ	128	;# 
  9685   000081                     SPI1TXB         equ	129	;# 
  9686   000082                     SPI1TCNT        equ	130	;# 
  9687   000082                     SPI1TCNTL       equ	130	;# 
  9688   000083                     SPI1TCNTH       equ	131	;# 
  9689   000084                     SPI1CON0        equ	132	;# 
  9690   000085                     SPI1CON1        equ	133	;# 
  9691   000086                     SPI1CON2        equ	134	;# 
  9692   000087                     SPI1STATUS      equ	135	;# 
  9693   000088                     SPI1TWIDTH      equ	136	;# 
  9694   000089                     SPI1BAUD        equ	137	;# 
  9695   00008A                     SPI1INTF        equ	138	;# 
  9696   00008B                     SPI1INTE        equ	139	;# 
  9697   00008C                     SPI1CLK         equ	140	;# 
  9698   00008D                     SPI2RXB         equ	141	;# 
  9699   00008E                     SPI2TXB         equ	142	;# 
  9700   00008F                     SPI2TCNT        equ	143	;# 
  9701   00008F                     SPI2TCNTL       equ	143	;# 
  9702   000090                     SPI2TCNTH       equ	144	;# 
  9703   000091                     SPI2CON0        equ	145	;# 
  9704   000092                     SPI2CON1        equ	146	;# 
  9705   000093                     SPI2CON2        equ	147	;# 
  9706   000094                     SPI2STATUS      equ	148	;# 
  9707   000095                     SPI2TWIDTH      equ	149	;# 
  9708   000096                     SPI2BAUD        equ	150	;# 
  9709   000097                     SPI2INTF        equ	151	;# 
  9710   000098                     SPI2INTE        equ	152	;# 
  9711   000099                     SPI2CLK         equ	153	;# 
  9712   0000AC                     ACTCON          equ	172	;# 
  9713   0000AD                     OSCCON1         equ	173	;# 
  9714   0000AE                     OSCCON2         equ	174	;# 
  9715   0000AF                     OSCCON3         equ	175	;# 
  9716   0000B0                     OSCTUNE         equ	176	;# 
  9717   0000B1                     OSCFRQ          equ	177	;# 
  9718   0000B1                     OSCFREQ         equ	177	;# 
  9719   0000B2                     OSCSTAT         equ	178	;# 
  9720   0000B2                     OSCSTAT1        equ	178	;# 
  9721   0000B3                     OSCEN           equ	179	;# 
  9722   0000B4                     PRLOCK          equ	180	;# 
  9723   0000B5                     SCANPR          equ	181	;# 
  9724   0000B6                     DMA1PR          equ	182	;# 
  9725   0000B7                     DMA2PR          equ	183	;# 
  9726   0000B8                     DMA3PR          equ	184	;# 
  9727   0000B9                     DMA4PR          equ	185	;# 
  9728   0000BA                     DMA5PR          equ	186	;# 
  9729   0000BB                     DMA6PR          equ	187	;# 
  9730   0000BC                     DMA7PR          equ	188	;# 
  9731   0000BD                     DMA8PR          equ	189	;# 
  9732   0000BE                     MAINPR          equ	190	;# 
  9733   0000BF                     ISRPR           equ	191	;# 
  9734   0000D4                     CLCDATA         equ	212	;# 
  9735   0000D5                     CLCSELECT       equ	213	;# 
  9736   0000D6                     CLCnCON         equ	214	;# 
  9737   0000D7                     CLCnPOL         equ	215	;# 
  9738   0000D8                     CLCnSEL0        equ	216	;# 
  9739   0000D9                     CLCnSEL1        equ	217	;# 
  9740   0000DA                     CLCnSEL2        equ	218	;# 
  9741   0000DB                     CLCnSEL3        equ	219	;# 
  9742   0000DC                     CLCnGLS0        equ	220	;# 
  9743   0000DD                     CLCnGLS1        equ	221	;# 
  9744   0000DE                     CLCnGLS2        equ	222	;# 
  9745   0000DF                     CLCnGLS3        equ	223	;# 
  9746   0000E8                     DMASELECT       equ	232	;# 
  9747   0000E9                     DMAnBUF         equ	233	;# 
  9748   0000EA                     DMAnDCNT        equ	234	;# 
  9749   0000EA                     DMAnDCNTL       equ	234	;# 
  9750   0000EB                     DMAnDCNTH       equ	235	;# 
  9751   0000EC                     DMAnDPTR        equ	236	;# 
  9752   0000EC                     DMAnDPTRL       equ	236	;# 
  9753   0000ED                     DMAnDPTRH       equ	237	;# 
  9754   0000EE                     DMAnDSZ         equ	238	;# 
  9755   0000EE                     DMAnDSZL        equ	238	;# 
  9756   0000EF                     DMAnDSZH        equ	239	;# 
  9757   0000F0                     DMAnDSA         equ	240	;# 
  9758   0000F0                     DMAnDSAL        equ	240	;# 
  9759   0000F1                     DMAnDSAH        equ	241	;# 
  9760   0000F2                     DMAnSCNT        equ	242	;# 
  9761   0000F2                     DMAnSCNTL       equ	242	;# 
  9762   0000F3                     DMAnSCNTH       equ	243	;# 
  9763   0000F4                     DMAnSPTR        equ	244	;# 
  9764   0000F4                     DMAnSPTRL       equ	244	;# 
  9765   0000F5                     DMAnSPTRH       equ	245	;# 
  9766   0000F6                     DMAnSPTRU       equ	246	;# 
  9767   0000F7                     DMAnSSZ         equ	247	;# 
  9768   0000F7                     DMAnSSZL        equ	247	;# 
  9769   0000F8                     DMAnSSZH        equ	248	;# 
  9770   0000F9                     DMAnSSA         equ	249	;# 
  9771   0000F9                     DMAnSSAL        equ	249	;# 
  9772   0000FA                     DMAnSSAH        equ	250	;# 
  9773   0000FB                     DMAnSSAU        equ	251	;# 
  9774   0000FC                     DMAnCON0        equ	252	;# 
  9775   0000FD                     DMAnCON1        equ	253	;# 
  9776   0000FE                     DMAnAIRQ        equ	254	;# 
  9777   0000FF                     DMAnSIRQ        equ	255	;# 
  9778   000100                     C1CONL          equ	256	;# 
  9779   000101                     C1CONH          equ	257	;# 
  9780   000102                     C1CONU          equ	258	;# 
  9781   000103                     C1CONT          equ	259	;# 
  9782   000104                     C1NBTCFGL       equ	260	;# 
  9783   000105                     C1NBTCFGH       equ	261	;# 
  9784   000106                     C1NBTCFGU       equ	262	;# 
  9785   000107                     C1NBTCFGT       equ	263	;# 
  9786   000108                     C1DBTCFGL       equ	264	;# 
  9787   000109                     C1DBTCFGH       equ	265	;# 
  9788   00010A                     C1DBTCFGU       equ	266	;# 
  9789   00010B                     C1DBTCFGT       equ	267	;# 
  9790   00010C                     C1TDCL          equ	268	;# 
  9791   00010D                     C1TDCH          equ	269	;# 
  9792   00010E                     C1TDCU          equ	270	;# 
  9793   000110                     C1TBC           equ	272	;# 
  9794   000110                     C1TBCL          equ	272	;# 
  9795   000111                     C1TBCH          equ	273	;# 
  9796   000112                     C1TBCU          equ	274	;# 
  9797   000113                     C1TBCT          equ	275	;# 
  9798   000114                     C1TSCONL        equ	276	;# 
  9799   000115                     C1TSCONH        equ	277	;# 
  9800   000116                     C1TSCONU        equ	278	;# 
  9801   000117                     C1TSCONT        equ	279	;# 
  9802   000118                     C1VECL          equ	280	;# 
  9803   000119                     C1VECH          equ	281	;# 
  9804   00011A                     C1VECU          equ	282	;# 
  9805   00011B                     C1VECT          equ	283	;# 
  9806   00011C                     C1INTL          equ	284	;# 
  9807   00011D                     C1INTH          equ	285	;# 
  9808   00011E                     C1INTU          equ	286	;# 
  9809   00011F                     C1INTT          equ	287	;# 
  9810   000120                     C1RXIF          equ	288	;# 
  9811   000120                     C1RXIFL         equ	288	;# 
  9812   000121                     C1RXIFH         equ	289	;# 
  9813   000122                     C1RXIFU         equ	290	;# 
  9814   000123                     C1RXIFT         equ	291	;# 
  9815   000124                     C1TXIF          equ	292	;# 
  9816   000124                     C1TXIFL         equ	292	;# 
  9817   000125                     C1TXIFH         equ	293	;# 
  9818   000126                     C1TXIFU         equ	294	;# 
  9819   000127                     C1TXIFT         equ	295	;# 
  9820   000128                     C1RXOVIF        equ	296	;# 
  9821   000128                     C1RXOVIFL       equ	296	;# 
  9822   000129                     C1RXOVIFH       equ	297	;# 
  9823   00012A                     C1RXOVIFU       equ	298	;# 
  9824   00012B                     C1RXOVIFT       equ	299	;# 
  9825   00012C                     C1TXATIF        equ	300	;# 
  9826   00012C                     C1TXATIFL       equ	300	;# 
  9827   00012D                     C1TXATIFH       equ	301	;# 
  9828   00012E                     C1TXATIFU       equ	302	;# 
  9829   00012F                     C1TXATIFT       equ	303	;# 
  9830   000130                     C1TXREQ         equ	304	;# 
  9831   000130                     C1TXREQL        equ	304	;# 
  9832   000131                     C1TXREQH        equ	305	;# 
  9833   000132                     C1TXREQU        equ	306	;# 
  9834   000133                     C1TXREQT        equ	307	;# 
  9835   000134                     C1TRECL         equ	308	;# 
  9836   000135                     C1TRECH         equ	309	;# 
  9837   000136                     C1TRECU         equ	310	;# 
  9838   000137                     C1TRECT         equ	311	;# 
  9839   000138                     C1BDIAG0L       equ	312	;# 
  9840   000139                     C1BDIAG0H       equ	313	;# 
  9841   00013C                     C1BDIAG1L       equ	316	;# 
  9842   00013D                     C1BDIAG1H       equ	317	;# 
  9843   00013E                     C1BDIAG1U       equ	318	;# 
  9844   00013F                     C1BDIAG1T       equ	319	;# 
  9845   000140                     C1TEFCONL       equ	320	;# 
  9846   000141                     C1TEFCONH       equ	321	;# 
  9847   000142                     C1TEFCONU       equ	322	;# 
  9848   000143                     C1TEFCONT       equ	323	;# 
  9849   000144                     C1TEFSTAL       equ	324	;# 
  9850   000145                     C1TEFSTAH       equ	325	;# 
  9851   000146                     C1TEFSTAU       equ	326	;# 
  9852   000147                     C1TEFSTAT       equ	327	;# 
  9853   000148                     C1TEFUA         equ	328	;# 
  9854   000148                     C1TEFUAL        equ	328	;# 
  9855   000149                     C1TEFUAH        equ	329	;# 
  9856   00014A                     C1TEFUAU        equ	330	;# 
  9857   00014B                     C1TEFUAT        equ	331	;# 
  9858   00014C                     C1FIFOBA        equ	332	;# 
  9859   00014C                     C1FIFOBAL       equ	332	;# 
  9860   00014D                     C1FIFOBAH       equ	333	;# 
  9861   00014E                     C1FIFOBAU       equ	334	;# 
  9862   00014F                     C1FIFOBAT       equ	335	;# 
  9863   000150                     C1TXQCONL       equ	336	;# 
  9864   000151                     C1TXQCONH       equ	337	;# 
  9865   000152                     C1TXQCONU       equ	338	;# 
  9866   000153                     C1TXQCONT       equ	339	;# 
  9867   000154                     C1TXQSTAL       equ	340	;# 
  9868   000155                     C1TXQSTAH       equ	341	;# 
  9869   000156                     C1TXQSTAU       equ	342	;# 
  9870   000157                     C1TXQSTAT       equ	343	;# 
  9871   000158                     C1TXQUA         equ	344	;# 
  9872   000158                     C1TXQUAL        equ	344	;# 
  9873   000159                     C1TXQUAH        equ	345	;# 
  9874   00015A                     C1TXQUAU        equ	346	;# 
  9875   00015B                     C1TXQUAT        equ	347	;# 
  9876   00015C                     C1FIFOCON1      equ	348	;# 
  9877   00015C                     C1FIFOCON1L     equ	348	;# 
  9878   00015D                     C1FIFOCON1H     equ	349	;# 
  9879   00015E                     C1FIFOCON1U     equ	350	;# 
  9880   00015F                     C1FIFOCON1T     equ	351	;# 
  9881   000160                     C1FIFOSTA1      equ	352	;# 
  9882   000160                     C1FIFOSTA1L     equ	352	;# 
  9883   000161                     C1FIFOSTA1H     equ	353	;# 
  9884   000162                     C1FIFOSTA1U     equ	354	;# 
  9885   000163                     C1FIFOSTA1T     equ	355	;# 
  9886   000164                     C1FIFOUA1       equ	356	;# 
  9887   000164                     C1FIFOUA1L      equ	356	;# 
  9888   000165                     C1FIFOUA1H      equ	357	;# 
  9889   000166                     C1FIFOUA1U      equ	358	;# 
  9890   000167                     C1FIFOUA1T      equ	359	;# 
  9891   000168                     C1FIFOCON2      equ	360	;# 
  9892   000168                     C1FIFOCON2L     equ	360	;# 
  9893   000169                     C1FIFOCON2H     equ	361	;# 
  9894   00016A                     C1FIFOCON2U     equ	362	;# 
  9895   00016B                     C1FIFOCON2T     equ	363	;# 
  9896   00016C                     C1FIFOSTA2      equ	364	;# 
  9897   00016C                     C1FIFOSTA2L     equ	364	;# 
  9898   00016D                     C1FIFOSTA2H     equ	365	;# 
  9899   00016E                     C1FIFOSTA2U     equ	366	;# 
  9900   00016F                     C1FIFOSTA2T     equ	367	;# 
  9901   000170                     C1FIFOUA2       equ	368	;# 
  9902   000170                     C1FIFOUA2L      equ	368	;# 
  9903   000171                     C1FIFOUA2H      equ	369	;# 
  9904   000172                     C1FIFOUA2U      equ	370	;# 
  9905   000173                     C1FIFOUA2T      equ	371	;# 
  9906   000174                     C1FIFOCON3      equ	372	;# 
  9907   000174                     C1FIFOCON3L     equ	372	;# 
  9908   000175                     C1FIFOCON3H     equ	373	;# 
  9909   000176                     C1FIFOCON3U     equ	374	;# 
  9910   000177                     C1FIFOCON3T     equ	375	;# 
  9911   000178                     C1FIFOSTA3      equ	376	;# 
  9912   000178                     C1FIFOSTA3L     equ	376	;# 
  9913   000179                     C1FIFOSTA3H     equ	377	;# 
  9914   00017A                     C1FIFOSTA3U     equ	378	;# 
  9915   00017B                     C1FIFOSTA3T     equ	379	;# 
  9916   00017C                     C1FIFOUA3       equ	380	;# 
  9917   00017C                     C1FIFOUA3L      equ	380	;# 
  9918   00017D                     C1FIFOUA3H      equ	381	;# 
  9919   00017E                     C1FIFOUA3U      equ	382	;# 
  9920   00017F                     C1FIFOUA3T      equ	383	;# 
  9921   000180                     C1FLTCON0L      equ	384	;# 
  9922   000181                     C1FLTCON0H      equ	385	;# 
  9923   000182                     C1FLTCON0U      equ	386	;# 
  9924   000183                     C1FLTCON0T      equ	387	;# 
  9925   000184                     C1FLTCON1L      equ	388	;# 
  9926   000185                     C1FLTCON1H      equ	389	;# 
  9927   000186                     C1FLTCON1U      equ	390	;# 
  9928   000187                     C1FLTCON1T      equ	391	;# 
  9929   000188                     C1FLTCON2L      equ	392	;# 
  9930   000189                     C1FLTCON2H      equ	393	;# 
  9931   00018A                     C1FLTCON2U      equ	394	;# 
  9932   00018B                     C1FLTCON2T      equ	395	;# 
  9933   00018C                     C1FLTOBJ0       equ	396	;# 
  9934   00018C                     C1FLTOBJ0L      equ	396	;# 
  9935   00018D                     C1FLTOBJ0H      equ	397	;# 
  9936   00018E                     C1FLTOBJ0U      equ	398	;# 
  9937   00018F                     C1FLTOBJ0T      equ	399	;# 
  9938   000190                     C1MASK0         equ	400	;# 
  9939   000190                     C1MASK0L        equ	400	;# 
  9940   000191                     C1MASK0H        equ	401	;# 
  9941   000192                     C1MASK0U        equ	402	;# 
  9942   000193                     C1MASK0T        equ	403	;# 
  9943   000194                     C1FLTOBJ1       equ	404	;# 
  9944   000194                     C1FLTOBJ1L      equ	404	;# 
  9945   000195                     C1FLTOBJ1H      equ	405	;# 
  9946   000196                     C1FLTOBJ1U      equ	406	;# 
  9947   000197                     C1FLTOBJ1T      equ	407	;# 
  9948   000198                     C1MASK1         equ	408	;# 
  9949   000198                     C1MASK1L        equ	408	;# 
  9950   000199                     C1MASK1H        equ	409	;# 
  9951   00019A                     C1MASK1U        equ	410	;# 
  9952   00019B                     C1MASK1T        equ	411	;# 
  9953   00019C                     C1FLTOBJ2       equ	412	;# 
  9954   00019C                     C1FLTOBJ2L      equ	412	;# 
  9955   00019D                     C1FLTOBJ2H      equ	413	;# 
  9956   00019E                     C1FLTOBJ2U      equ	414	;# 
  9957   00019F                     C1FLTOBJ2T      equ	415	;# 
  9958   0001A0                     C1MASK2         equ	416	;# 
  9959   0001A0                     C1MASK2L        equ	416	;# 
  9960   0001A1                     C1MASK2H        equ	417	;# 
  9961   0001A2                     C1MASK2U        equ	418	;# 
  9962   0001A3                     C1MASK2T        equ	419	;# 
  9963   0001A4                     C1FLTOBJ3       equ	420	;# 
  9964   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9965   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9966   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9967   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9968   0001A8                     C1MASK3         equ	424	;# 
  9969   0001A8                     C1MASK3L        equ	424	;# 
  9970   0001A9                     C1MASK3H        equ	425	;# 
  9971   0001AA                     C1MASK3U        equ	426	;# 
  9972   0001AB                     C1MASK3T        equ	427	;# 
  9973   0001AC                     C1FLTOBJ4       equ	428	;# 
  9974   0001AC                     C1FLTOBJ4L      equ	428	;# 
  9975   0001AD                     C1FLTOBJ4H      equ	429	;# 
  9976   0001AE                     C1FLTOBJ4U      equ	430	;# 
  9977   0001AF                     C1FLTOBJ4T      equ	431	;# 
  9978   0001B0                     C1MASK4         equ	432	;# 
  9979   0001B0                     C1MASK4L        equ	432	;# 
  9980   0001B1                     C1MASK4H        equ	433	;# 
  9981   0001B2                     C1MASK4U        equ	434	;# 
  9982   0001B3                     C1MASK4T        equ	435	;# 
  9983   0001B4                     C1FLTOBJ5       equ	436	;# 
  9984   0001B4                     C1FLTOBJ5L      equ	436	;# 
  9985   0001B5                     C1FLTOBJ5H      equ	437	;# 
  9986   0001B6                     C1FLTOBJ5U      equ	438	;# 
  9987   0001B7                     C1FLTOBJ5T      equ	439	;# 
  9988   0001B8                     C1MASK5         equ	440	;# 
  9989   0001B8                     C1MASK5L        equ	440	;# 
  9990   0001B9                     C1MASK5H        equ	441	;# 
  9991   0001BA                     C1MASK5U        equ	442	;# 
  9992   0001BB                     C1MASK5T        equ	443	;# 
  9993   0001BC                     C1FLTOBJ6       equ	444	;# 
  9994   0001BC                     C1FLTOBJ6L      equ	444	;# 
  9995   0001BD                     C1FLTOBJ6H      equ	445	;# 
  9996   0001BE                     C1FLTOBJ6U      equ	446	;# 
  9997   0001BF                     C1FLTOBJ6T      equ	447	;# 
  9998   0001C0                     C1MASK6         equ	448	;# 
  9999   0001C0                     C1MASK6L        equ	448	;# 
 10000   0001C1                     C1MASK6H        equ	449	;# 
 10001   0001C2                     C1MASK6U        equ	450	;# 
 10002   0001C3                     C1MASK6T        equ	451	;# 
 10003   0001C4                     C1FLTOBJ7       equ	452	;# 
 10004   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10005   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10006   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10007   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10008   0001C8                     C1MASK7         equ	456	;# 
 10009   0001C8                     C1MASK7L        equ	456	;# 
 10010   0001C9                     C1MASK7H        equ	457	;# 
 10011   0001CA                     C1MASK7U        equ	458	;# 
 10012   0001CB                     C1MASK7T        equ	459	;# 
 10013   0001CC                     C1FLTOBJ8       equ	460	;# 
 10014   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10015   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10016   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10017   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10018   0001D0                     C1MASK8         equ	464	;# 
 10019   0001D0                     C1MASK8L        equ	464	;# 
 10020   0001D1                     C1MASK8H        equ	465	;# 
 10021   0001D2                     C1MASK8U        equ	466	;# 
 10022   0001D3                     C1MASK8T        equ	467	;# 
 10023   0001D4                     C1FLTOBJ9       equ	468	;# 
 10024   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10025   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10026   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10027   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10028   0001D8                     C1MASK9         equ	472	;# 
 10029   0001D8                     C1MASK9L        equ	472	;# 
 10030   0001D9                     C1MASK9H        equ	473	;# 
 10031   0001DA                     C1MASK9U        equ	474	;# 
 10032   0001DB                     C1MASK9T        equ	475	;# 
 10033   0001DC                     C1FLTOBJ10      equ	476	;# 
 10034   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10035   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10036   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10037   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10038   0001E0                     C1MASK10        equ	480	;# 
 10039   0001E0                     C1MASK10L       equ	480	;# 
 10040   0001E1                     C1MASK10H       equ	481	;# 
 10041   0001E2                     C1MASK10U       equ	482	;# 
 10042   0001E3                     C1MASK10T       equ	483	;# 
 10043   0001E4                     C1FLTOBJ11      equ	484	;# 
 10044   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10045   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10046   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10047   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10048   0001E8                     C1MASK11        equ	488	;# 
 10049   0001E8                     C1MASK11L       equ	488	;# 
 10050   0001E9                     C1MASK11H       equ	489	;# 
 10051   0001EA                     C1MASK11U       equ	490	;# 
 10052   0001EB                     C1MASK11T       equ	491	;# 
 10053   000200                     PPSLOCK         equ	512	;# 
 10054   000201                     RA0PPS          equ	513	;# 
 10055   000202                     RA1PPS          equ	514	;# 
 10056   000203                     RA2PPS          equ	515	;# 
 10057   000204                     RA3PPS          equ	516	;# 
 10058   000205                     RA4PPS          equ	517	;# 
 10059   000206                     RA5PPS          equ	518	;# 
 10060   000207                     RA6PPS          equ	519	;# 
 10061   000208                     RA7PPS          equ	520	;# 
 10062   000209                     RB0PPS          equ	521	;# 
 10063   00020A                     RB1PPS          equ	522	;# 
 10064   00020B                     RB2PPS          equ	523	;# 
 10065   00020C                     RB3PPS          equ	524	;# 
 10066   00020D                     RB4PPS          equ	525	;# 
 10067   00020E                     RB5PPS          equ	526	;# 
 10068   00020F                     RB6PPS          equ	527	;# 
 10069   000210                     RB7PPS          equ	528	;# 
 10070   000211                     RC0PPS          equ	529	;# 
 10071   000212                     RC1PPS          equ	530	;# 
 10072   000213                     RC2PPS          equ	531	;# 
 10073   000214                     RC3PPS          equ	532	;# 
 10074   000215                     RC4PPS          equ	533	;# 
 10075   000216                     RC5PPS          equ	534	;# 
 10076   000217                     RC6PPS          equ	535	;# 
 10077   000218                     RC7PPS          equ	536	;# 
 10078   00023D                     CANRXPPS        equ	573	;# 
 10079   00023E                     INT0PPS         equ	574	;# 
 10080   00023F                     INT1PPS         equ	575	;# 
 10081   000240                     INT2PPS         equ	576	;# 
 10082   000241                     T0CKIPPS        equ	577	;# 
 10083   000242                     T1CKIPPS        equ	578	;# 
 10084   000243                     T1GPPS          equ	579	;# 
 10085   000244                     T3CKIPPS        equ	580	;# 
 10086   000245                     T3GPPS          equ	581	;# 
 10087   000246                     T5CKIPPS        equ	582	;# 
 10088   000247                     T5GPPS          equ	583	;# 
 10089   000248                     T2INPPS         equ	584	;# 
 10090   000249                     T4INPPS         equ	585	;# 
 10091   00024A                     T6INPPS         equ	586	;# 
 10092   00024B                     TUIN0PPS        equ	587	;# 
 10093   00024C                     TUIN1PPS        equ	588	;# 
 10094   00024F                     CCP1PPS         equ	591	;# 
 10095   000250                     CCP2PPS         equ	592	;# 
 10096   000251                     CCP3PPS         equ	593	;# 
 10097   000253                     PWM1ERSPPS      equ	595	;# 
 10098   000254                     PWM2ERSPPS      equ	596	;# 
 10099   000255                     PWM3ERSPPS      equ	597	;# 
 10100   000256                     PWM4ERSPPS      equ	598	;# 
 10101   000257                     PWMIN0PPS       equ	599	;# 
 10102   000258                     PWMIN1PPS       equ	600	;# 
 10103   000259                     SMT1WINPPS      equ	601	;# 
 10104   00025A                     SMT1SIGPPS      equ	602	;# 
 10105   00025B                     CWG1PPS         equ	603	;# 
 10106   00025B                     CWG1INPPS       equ	603	;# 
 10107   00025C                     CWG2PPS         equ	604	;# 
 10108   00025C                     CWG2INPPS       equ	604	;# 
 10109   00025D                     CWG3PPS         equ	605	;# 
 10110   00025D                     CWG3INPPS       equ	605	;# 
 10111   00025E                     MD1CARLPPS      equ	606	;# 
 10112   00025E                     MDCARLPPS       equ	606	;# 
 10113   00025F                     MD1CARHPPS      equ	607	;# 
 10114   00025F                     MDCARHPPS       equ	607	;# 
 10115   000260                     MD1SRCPPS       equ	608	;# 
 10116   000260                     MDSRCPPS        equ	608	;# 
 10117   000261                     CLCIN0PPS       equ	609	;# 
 10118   000262                     CLCIN1PPS       equ	610	;# 
 10119   000263                     CLCIN2PPS       equ	611	;# 
 10120   000264                     CLCIN3PPS       equ	612	;# 
 10121   000265                     CLCIN4PPS       equ	613	;# 
 10122   000266                     CLCIN5PPS       equ	614	;# 
 10123   000267                     CLCIN6PPS       equ	615	;# 
 10124   000268                     CLCIN7PPS       equ	616	;# 
 10125   000269                     ADACTPPS        equ	617	;# 
 10126   00026A                     SPI1SCKPPS      equ	618	;# 
 10127   00026B                     SPI1SDIPPS      equ	619	;# 
 10128   00026C                     SPI1SSPPS       equ	620	;# 
 10129   00026D                     SPI2SCKPPS      equ	621	;# 
 10130   00026E                     SPI2SDIPPS      equ	622	;# 
 10131   00026F                     SPI2SSPPS       equ	623	;# 
 10132   000270                     I2C1SDAPPS      equ	624	;# 
 10133   000271                     I2C1SCLPPS      equ	625	;# 
 10134   000272                     U1RXPPS         equ	626	;# 
 10135   000273                     U1CTSPPS        equ	627	;# 
 10136   000274                     U2RXPPS         equ	628	;# 
 10137   000275                     U2CTSPPS        equ	629	;# 
 10138   000276                     U3RXPPS         equ	630	;# 
 10139   000277                     U3CTSPPS        equ	631	;# 
 10140   000278                     U4RXPPS         equ	632	;# 
 10141   000279                     U4CTSPPS        equ	633	;# 
 10142   00027A                     U5RXPPS         equ	634	;# 
 10143   00027B                     U5CTSPPS        equ	635	;# 
 10144   000286                     RC4I2C          equ	646	;# 
 10145   000287                     RC3I2C          equ	647	;# 
 10146   000288                     RB2I2C          equ	648	;# 
 10147   000289                     RB1I2C          equ	649	;# 
 10148   00028A                     I2C1RXB         equ	650	;# 
 10149   00028B                     I2C1TXB         equ	651	;# 
 10150   00028C                     I2C1CNTL        equ	652	;# 
 10151   00028D                     I2C1CNTH        equ	653	;# 
 10152   00028E                     I2C1ADB0        equ	654	;# 
 10153   00028F                     I2C1ADB1        equ	655	;# 
 10154   000290                     I2C1ADR0        equ	656	;# 
 10155   000291                     I2C1ADR1        equ	657	;# 
 10156   000292                     I2C1ADR2        equ	658	;# 
 10157   000293                     I2C1ADR3        equ	659	;# 
 10158   000294                     I2C1CON0        equ	660	;# 
 10159   000295                     I2C1CON1        equ	661	;# 
 10160   000296                     I2C1CON2        equ	662	;# 
 10161   000297                     I2C1ERR         equ	663	;# 
 10162   000298                     I2C1STAT0       equ	664	;# 
 10163   000299                     I2C1STAT1       equ	665	;# 
 10164   00029A                     I2C1PIR         equ	666	;# 
 10165   00029B                     I2C1PIE         equ	667	;# 
 10166   00029C                     I2C1BTO         equ	668	;# 
 10167   00029D                     I2C1BAUD        equ	669	;# 
 10168   00029E                     I2C1CLK         equ	670	;# 
 10169   00029F                     I2C1BTOC        equ	671	;# 
 10170   0002A1                     U1RXB           equ	673	;# 
 10171   0002A1                     U1RXBL          equ	673	;# 
 10172   0002A2                     U1RXCHK         equ	674	;# 
 10173   0002A3                     U1TXB           equ	675	;# 
 10174   0002A3                     U1TXBL          equ	675	;# 
 10175   0002A4                     U1TXCHK         equ	676	;# 
 10176   0002A5                     U1P1            equ	677	;# 
 10177   0002A5                     U1P1L           equ	677	;# 
 10178   0002A6                     U1P1H           equ	678	;# 
 10179   0002A7                     U1P2            equ	679	;# 
 10180   0002A7                     U1P2L           equ	679	;# 
 10181   0002A8                     U1P2H           equ	680	;# 
 10182   0002A9                     U1P3            equ	681	;# 
 10183   0002A9                     U1P3L           equ	681	;# 
 10184   0002AA                     U1P3H           equ	682	;# 
 10185   0002AB                     U1CON0          equ	683	;# 
 10186   0002AC                     U1CON1          equ	684	;# 
 10187   0002AD                     U1CON2          equ	685	;# 
 10188   0002AE                     U1BRG           equ	686	;# 
 10189   0002AE                     U1BRGL          equ	686	;# 
 10190   0002AF                     U1BRGH          equ	687	;# 
 10191   0002B0                     U1FIFO          equ	688	;# 
 10192   0002B1                     U1UIR           equ	689	;# 
 10193   0002B2                     U1ERRIR         equ	690	;# 
 10194   0002B3                     U1ERRIE         equ	691	;# 
 10195   0002B4                     U2RXB           equ	692	;# 
 10196   0002B4                     U2RXBL          equ	692	;# 
 10197   0002B5                     U2RXCHK         equ	693	;# 
 10198   0002B6                     U2TXB           equ	694	;# 
 10199   0002B6                     U2TXBL          equ	694	;# 
 10200   0002B7                     U2TXCHK         equ	695	;# 
 10201   0002B8                     U2P1            equ	696	;# 
 10202   0002B8                     U2P1L           equ	696	;# 
 10203   0002B9                     U2P1H           equ	697	;# 
 10204   0002BA                     U2P2            equ	698	;# 
 10205   0002BA                     U2P2L           equ	698	;# 
 10206   0002BB                     U2P2H           equ	699	;# 
 10207   0002BC                     U2P3            equ	700	;# 
 10208   0002BC                     U2P3L           equ	700	;# 
 10209   0002BD                     U2P3H           equ	701	;# 
 10210   0002BE                     U2CON0          equ	702	;# 
 10211   0002BF                     U2CON1          equ	703	;# 
 10212   0002C0                     U2CON2          equ	704	;# 
 10213   0002C1                     U2BRG           equ	705	;# 
 10214   0002C1                     U2BRGL          equ	705	;# 
 10215   0002C2                     U2BRGH          equ	706	;# 
 10216   0002C3                     U2FIFO          equ	707	;# 
 10217   0002C4                     U2UIR           equ	708	;# 
 10218   0002C5                     U2ERRIR         equ	709	;# 
 10219   0002C6                     U2ERRIE         equ	710	;# 
 10220   0002C7                     U3RXB           equ	711	;# 
 10221   0002C7                     U3RXBL          equ	711	;# 
 10222   0002C9                     U3TXB           equ	713	;# 
 10223   0002C9                     U3TXBL          equ	713	;# 
 10224   0002CB                     U3P1            equ	715	;# 
 10225   0002CB                     U3P1L           equ	715	;# 
 10226   0002CD                     U3P2            equ	717	;# 
 10227   0002CD                     U3P2L           equ	717	;# 
 10228   0002CF                     U3P3            equ	719	;# 
 10229   0002CF                     U3P3L           equ	719	;# 
 10230   0002D1                     U3CON0          equ	721	;# 
 10231   0002D2                     U3CON1          equ	722	;# 
 10232   0002D3                     U3CON2          equ	723	;# 
 10233   0002D4                     U3BRG           equ	724	;# 
 10234   0002D4                     U3BRGL          equ	724	;# 
 10235   0002D5                     U3BRGH          equ	725	;# 
 10236   0002D6                     U3FIFO          equ	726	;# 
 10237   0002D7                     U3UIR           equ	727	;# 
 10238   0002D8                     U3ERRIR         equ	728	;# 
 10239   0002D9                     U3ERRIE         equ	729	;# 
 10240   0002DA                     U4RXB           equ	730	;# 
 10241   0002DA                     U4RXBL          equ	730	;# 
 10242   0002DC                     U4TXB           equ	732	;# 
 10243   0002DC                     U4TXBL          equ	732	;# 
 10244   0002DE                     U4P1            equ	734	;# 
 10245   0002DE                     U4P1L           equ	734	;# 
 10246   0002E0                     U4P2            equ	736	;# 
 10247   0002E0                     U4P2L           equ	736	;# 
 10248   0002E2                     U4P3            equ	738	;# 
 10249   0002E2                     U4P3L           equ	738	;# 
 10250   0002E4                     U4CON0          equ	740	;# 
 10251   0002E5                     U4CON1          equ	741	;# 
 10252   0002E6                     U4CON2          equ	742	;# 
 10253   0002E7                     U4BRG           equ	743	;# 
 10254   0002E7                     U4BRGL          equ	743	;# 
 10255   0002E8                     U4BRGH          equ	744	;# 
 10256   0002E9                     U4FIFO          equ	745	;# 
 10257   0002EA                     U4UIR           equ	746	;# 
 10258   0002EB                     U4ERRIR         equ	747	;# 
 10259   0002EC                     U4ERRIE         equ	748	;# 
 10260   0002ED                     U5RXB           equ	749	;# 
 10261   0002ED                     U5RXBL          equ	749	;# 
 10262   0002EF                     U5TXB           equ	751	;# 
 10263   0002EF                     U5TXBL          equ	751	;# 
 10264   0002F1                     U5P1            equ	753	;# 
 10265   0002F1                     U5P1L           equ	753	;# 
 10266   0002F3                     U5P2            equ	755	;# 
 10267   0002F3                     U5P2L           equ	755	;# 
 10268   0002F5                     U5P3            equ	757	;# 
 10269   0002F5                     U5P3L           equ	757	;# 
 10270   0002F7                     U5CON0          equ	759	;# 
 10271   0002F8                     U5CON1          equ	760	;# 
 10272   0002F9                     U5CON2          equ	761	;# 
 10273   0002FA                     U5BRG           equ	762	;# 
 10274   0002FA                     U5BRGL          equ	762	;# 
 10275   0002FB                     U5BRGH          equ	763	;# 
 10276   0002FC                     U5FIFO          equ	764	;# 
 10277   0002FD                     U5UIR           equ	765	;# 
 10278   0002FE                     U5ERRIR         equ	766	;# 
 10279   0002FF                     U5ERRIE         equ	767	;# 
 10280   000300                     SMT1TMR         equ	768	;# 
 10281   000300                     SMT1TMRL        equ	768	;# 
 10282   000301                     SMT1TMRH        equ	769	;# 
 10283   000302                     SMT1TMRU        equ	770	;# 
 10284   000303                     SMT1CPR         equ	771	;# 
 10285   000303                     SMT1CPRL        equ	771	;# 
 10286   000304                     SMT1CPRH        equ	772	;# 
 10287   000305                     SMT1CPRU        equ	773	;# 
 10288   000306                     SMT1CPW         equ	774	;# 
 10289   000306                     SMT1CPWL        equ	774	;# 
 10290   000307                     SMT1CPWH        equ	775	;# 
 10291   000308                     SMT1CPWU        equ	776	;# 
 10292   000309                     SMT1PR          equ	777	;# 
 10293   000309                     SMT1PRL         equ	777	;# 
 10294   00030A                     SMT1PRH         equ	778	;# 
 10295   00030B                     SMT1PRU         equ	779	;# 
 10296   00030C                     SMT1CON0        equ	780	;# 
 10297   00030D                     SMT1CON1        equ	781	;# 
 10298   00030E                     SMT1STAT        equ	782	;# 
 10299   00030F                     SMT1CLK         equ	783	;# 
 10300   000310                     SMT1SIG         equ	784	;# 
 10301   000311                     SMT1WIN         equ	785	;# 
 10302   000318                     TMR0L           equ	792	;# 
 10303   000318                     TMR0            equ	792	;# 
 10304   000319                     TMR0H           equ	793	;# 
 10305   000319                     PR0             equ	793	;# 
 10306   00031A                     T0CON0          equ	794	;# 
 10307   00031B                     T0CON1          equ	795	;# 
 10308   00031C                     TMR1            equ	796	;# 
 10309   00031C                     TMR1L           equ	796	;# 
 10310   00031D                     TMR1H           equ	797	;# 
 10311   00031E                     T1CON           equ	798	;# 
 10312   00031E                     TMR1CON         equ	798	;# 
 10313   00031F                     T1GCON          equ	799	;# 
 10314   00031F                     TMR1GCON        equ	799	;# 
 10315   000320                     T1GATE          equ	800	;# 
 10316   000320                     TMR1GATE        equ	800	;# 
 10317   000321                     T1CLK           equ	801	;# 
 10318   000321                     TMR1CLK         equ	801	;# 
 10319   000321                     PR1             equ	801	;# 
 10320   000322                     T2TMR           equ	802	;# 
 10321   000322                     TMR2            equ	802	;# 
 10322   000323                     T2PR            equ	803	;# 
 10323   000323                     PR2             equ	803	;# 
 10324   000324                     T2CON           equ	804	;# 
 10325   000325                     T2HLT           equ	805	;# 
 10326   000326                     T2CLKCON        equ	806	;# 
 10327   000326                     T2CLK           equ	806	;# 
 10328   000327                     T2RST           equ	807	;# 
 10329   000328                     TMR3            equ	808	;# 
 10330   000328                     TMR3L           equ	808	;# 
 10331   000329                     TMR3H           equ	809	;# 
 10332   00032A                     T3CON           equ	810	;# 
 10333   00032A                     TMR3CON         equ	810	;# 
 10334   00032B                     T3GCON          equ	811	;# 
 10335   00032B                     TMR3GCON        equ	811	;# 
 10336   00032C                     T3GATE          equ	812	;# 
 10337   00032C                     TMR3GATE        equ	812	;# 
 10338   00032D                     T3CLK           equ	813	;# 
 10339   00032D                     TMR3CLK         equ	813	;# 
 10340   00032D                     PR3             equ	813	;# 
 10341   00032E                     T4TMR           equ	814	;# 
 10342   00032E                     TMR4            equ	814	;# 
 10343   00032F                     T4PR            equ	815	;# 
 10344   00032F                     PR4             equ	815	;# 
 10345   000330                     T4CON           equ	816	;# 
 10346   000331                     T4HLT           equ	817	;# 
 10347   000332                     T4CLKCON        equ	818	;# 
 10348   000332                     T4CLK           equ	818	;# 
 10349   000333                     T4RST           equ	819	;# 
 10350   000334                     TMR5            equ	820	;# 
 10351   000334                     TMR5L           equ	820	;# 
 10352   000335                     TMR5H           equ	821	;# 
 10353   000336                     T5CON           equ	822	;# 
 10354   000336                     TMR5CON         equ	822	;# 
 10355   000337                     T5GCON          equ	823	;# 
 10356   000337                     TMR5GCON        equ	823	;# 
 10357   000338                     T5GATE          equ	824	;# 
 10358   000338                     TMR5GATE        equ	824	;# 
 10359   000339                     T5CLK           equ	825	;# 
 10360   000339                     TMR5CLK         equ	825	;# 
 10361   000339                     PR5             equ	825	;# 
 10362   00033A                     T6TMR           equ	826	;# 
 10363   00033A                     TMR6            equ	826	;# 
 10364   00033B                     T6PR            equ	827	;# 
 10365   00033B                     PR6             equ	827	;# 
 10366   00033C                     T6CON           equ	828	;# 
 10367   00033D                     T6HLT           equ	829	;# 
 10368   00033E                     T6CLKCON        equ	830	;# 
 10369   00033E                     T6CLK           equ	830	;# 
 10370   00033F                     T6RST           equ	831	;# 
 10371   000340                     CCPR1           equ	832	;# 
 10372   000340                     CCPR1L          equ	832	;# 
 10373   000341                     CCPR1H          equ	833	;# 
 10374   000342                     CCP1CON         equ	834	;# 
 10375   000343                     CCP1CAP         equ	835	;# 
 10376   000344                     CCPR2           equ	836	;# 
 10377   000344                     CCPR2L          equ	836	;# 
 10378   000345                     CCPR2H          equ	837	;# 
 10379   000346                     CCP2CON         equ	838	;# 
 10380   000347                     CCP2CAP         equ	839	;# 
 10381   000348                     CCPR3           equ	840	;# 
 10382   000348                     CCPR3L          equ	840	;# 
 10383   000349                     CCPR3H          equ	841	;# 
 10384   00034A                     CCP3CON         equ	842	;# 
 10385   00034B                     CCP3CAP         equ	843	;# 
 10386   00034C                     CCPTMRS0        equ	844	;# 
 10387   00034F                     CRCDATA         equ	847	;# 
 10388   00034F                     CRCDATAL        equ	847	;# 
 10389   000350                     CRCDATAH        equ	848	;# 
 10390   000351                     CRCDATAU        equ	849	;# 
 10391   000352                     CRCDATAT        equ	850	;# 
 10392   000353                     CRCOUT          equ	851	;# 
 10393   000353                     CRCSHFT         equ	851	;# 
 10394   000353                     CRCXOR          equ	851	;# 
 10395   000353                     CRCOUTL         equ	851	;# 
 10396   000353                     CRCSHFTL        equ	851	;# 
 10397   000353                     CRCSHIFTL       equ	851	;# 
 10398   000353                     CRCXORL         equ	851	;# 
 10399   000354                     CRCOUTH         equ	852	;# 
 10400   000354                     CRCSHFTH        equ	852	;# 
 10401   000354                     CRCSHIFTH       equ	852	;# 
 10402   000354                     CRCXORH         equ	852	;# 
 10403   000355                     CRCOUTU         equ	853	;# 
 10404   000355                     CRCSHFTU        equ	853	;# 
 10405   000355                     CRCSHIFTU       equ	853	;# 
 10406   000355                     CRCXORU         equ	853	;# 
 10407   000356                     CRCOUTT         equ	854	;# 
 10408   000356                     CRCSHFTT        equ	854	;# 
 10409   000356                     CRCSHIFTT       equ	854	;# 
 10410   000356                     CRCXORT         equ	854	;# 
 10411   000357                     CRCCON0         equ	855	;# 
 10412   000358                     CRCCON1         equ	856	;# 
 10413   000359                     CRCCON2         equ	857	;# 
 10414   00035A                     SCANLADR        equ	858	;# 
 10415   00035A                     SCANLADRL       equ	858	;# 
 10416   00035B                     SCANLADRH       equ	859	;# 
 10417   00035C                     SCANLADRU       equ	860	;# 
 10418   00035D                     SCANHADR        equ	861	;# 
 10419   00035D                     SCANHADRL       equ	861	;# 
 10420   00035E                     SCANHADRH       equ	862	;# 
 10421   00035F                     SCANHADRU       equ	863	;# 
 10422   000360                     SCANCON0        equ	864	;# 
 10423   000361                     SCANTRIG        equ	865	;# 
 10424   000362                     IPR0            equ	866	;# 
 10425   000363                     IPR1            equ	867	;# 
 10426   000364                     IPR2            equ	868	;# 
 10427   000365                     IPR3            equ	869	;# 
 10428   000366                     IPR4            equ	870	;# 
 10429   000367                     IPR5            equ	871	;# 
 10430   000368                     IPR6            equ	872	;# 
 10431   000369                     IPR7            equ	873	;# 
 10432   00036A                     IPR8            equ	874	;# 
 10433   00036B                     IPR9            equ	875	;# 
 10434   00036C                     IPR10           equ	876	;# 
 10435   00036D                     IPR11           equ	877	;# 
 10436   00036E                     IPR12           equ	878	;# 
 10437   00036F                     IPR13           equ	879	;# 
 10438   000370                     IPR14           equ	880	;# 
 10439   000371                     IPR15           equ	881	;# 
 10440   000373                     STATUS_CSHAD    equ	883	;# 
 10441   000374                     WREG_CSHAD      equ	884	;# 
 10442   000375                     BSR_CSHAD       equ	885	;# 
 10443   000376                     SHADCON         equ	886	;# 
 10444   000377                     STATUS_SHAD     equ	887	;# 
 10445   000378                     WREG_SHAD       equ	888	;# 
 10446   000379                     BSR_SHAD        equ	889	;# 
 10447   00037A                     PCLATH_SHAD     equ	890	;# 
 10448   00037B                     PCLATU_SHAD     equ	891	;# 
 10449   00037C                     FSR0SH          equ	892	;# 
 10450   00037C                     FSR0L_SHAD      equ	892	;# 
 10451   00037D                     FSR0H_SHAD      equ	893	;# 
 10452   00037E                     FSR1SH          equ	894	;# 
 10453   00037E                     FSR1L_SHAD      equ	894	;# 
 10454   00037F                     FSR1H_SHAD      equ	895	;# 
 10455   000380                     FSR2SH          equ	896	;# 
 10456   000380                     FSR2L_SHAD      equ	896	;# 
 10457   000381                     FSR2H_SHAD      equ	897	;# 
 10458   000382                     PRODSH          equ	898	;# 
 10459   000382                     PRODL_SHAD      equ	898	;# 
 10460   000383                     PRODH_SHAD      equ	899	;# 
 10461   000387                     TU16ACON0       equ	903	;# 
 10462   000388                     TU16ACON1       equ	904	;# 
 10463   000389                     TU16AHLT        equ	905	;# 
 10464   00038A                     TU16APS         equ	906	;# 
 10465   00038B                     TU16ATMR        equ	907	;# 
 10466   00038B                     TU16ACR         equ	907	;# 
 10467   00038B                     TU16ATMRL       equ	907	;# 
 10468   00038B                     TU16ACRL        equ	907	;# 
 10469   00038C                     TU16ATMRH       equ	908	;# 
 10470   00038C                     TU16ACRH        equ	908	;# 
 10471   00038D                     TU16APR         equ	909	;# 
 10472   00038D                     TU16APRL        equ	909	;# 
 10473   00038E                     TU16APRH        equ	910	;# 
 10474   00038F                     TU16ACLK        equ	911	;# 
 10475   000390                     TU16AERS        equ	912	;# 
 10476   000393                     TU16BCON0       equ	915	;# 
 10477   000394                     TU16BCON1       equ	916	;# 
 10478   000395                     TU16BHLT        equ	917	;# 
 10479   000396                     TU16BPS         equ	918	;# 
 10480   000397                     TU16BTMR        equ	919	;# 
 10481   000397                     TU16BCR         equ	919	;# 
 10482   000397                     TU16BTMRL       equ	919	;# 
 10483   000397                     TU16BCRL        equ	919	;# 
 10484   000398                     TU16BTMRH       equ	920	;# 
 10485   000398                     TU16BCRH        equ	920	;# 
 10486   000399                     TU16BPR         equ	921	;# 
 10487   000399                     TU16BPRL        equ	921	;# 
 10488   00039A                     TU16BPRH        equ	922	;# 
 10489   00039B                     TU16BCLK        equ	923	;# 
 10490   00039C                     TU16BERS        equ	924	;# 
 10491   0003BB                     TUCHAIN         equ	955	;# 
 10492   0003BC                     CWG1CLK         equ	956	;# 
 10493   0003BC                     CWG1CLKCON      equ	956	;# 
 10494   0003BD                     CWG1ISM         equ	957	;# 
 10495   0003BE                     CWG1DBR         equ	958	;# 
 10496   0003BF                     CWG1DBF         equ	959	;# 
 10497   0003C0                     CWG1CON0        equ	960	;# 
 10498   0003C1                     CWG1CON1        equ	961	;# 
 10499   0003C2                     CWG1AS0         equ	962	;# 
 10500   0003C3                     CWG1AS1         equ	963	;# 
 10501   0003C4                     CWG1STR         equ	964	;# 
 10502   0003C5                     CWG2CLK         equ	965	;# 
 10503   0003C5                     CWG2CLKCON      equ	965	;# 
 10504   0003C6                     CWG2ISM         equ	966	;# 
 10505   0003C7                     CWG2DBR         equ	967	;# 
 10506   0003C8                     CWG2DBF         equ	968	;# 
 10507   0003C9                     CWG2CON0        equ	969	;# 
 10508   0003CA                     CWG2CON1        equ	970	;# 
 10509   0003CB                     CWG2AS0         equ	971	;# 
 10510   0003CC                     CWG2AS1         equ	972	;# 
 10511   0003CD                     CWG2STR         equ	973	;# 
 10512   0003CE                     CWG3CLK         equ	974	;# 
 10513   0003CE                     CWG3CLKCON      equ	974	;# 
 10514   0003CF                     CWG3ISM         equ	975	;# 
 10515   0003D0                     CWG3DBR         equ	976	;# 
 10516   0003D1                     CWG3DBF         equ	977	;# 
 10517   0003D2                     CWG3CON0        equ	978	;# 
 10518   0003D3                     CWG3CON1        equ	979	;# 
 10519   0003D4                     CWG3AS0         equ	980	;# 
 10520   0003D5                     CWG3AS1         equ	981	;# 
 10521   0003D6                     CWG3STR         equ	982	;# 
 10522   0003D7                     FVRCON          equ	983	;# 
 10523   0003D8                     ADCPCON         equ	984	;# 
 10524   0003D8                     ADCP            equ	984	;# 
 10525   0003D9                     ADLTH           equ	985	;# 
 10526   0003D9                     ADLTHL          equ	985	;# 
 10527   0003DA                     ADLTHH          equ	986	;# 
 10528   0003DB                     ADUTH           equ	987	;# 
 10529   0003DB                     ADUTHL          equ	987	;# 
 10530   0003DC                     ADUTHH          equ	988	;# 
 10531   0003DD                     ADERR           equ	989	;# 
 10532   0003DD                     ADERRL          equ	989	;# 
 10533   0003DE                     ADERRH          equ	990	;# 
 10534   0003DF                     ADSTPT          equ	991	;# 
 10535   0003DF                     ADSTPTL         equ	991	;# 
 10536   0003E0                     ADSTPTH         equ	992	;# 
 10537   0003E1                     ADFLTR          equ	993	;# 
 10538   0003E1                     ADFLTRL         equ	993	;# 
 10539   0003E2                     ADFLTRH         equ	994	;# 
 10540   0003E3                     ADACC           equ	995	;# 
 10541   0003E3                     ADACCL          equ	995	;# 
 10542   0003E4                     ADACCH          equ	996	;# 
 10543   0003E5                     ADACCU          equ	997	;# 
 10544   0003E6                     ADCNT           equ	998	;# 
 10545   0003E7                     ADRPT           equ	999	;# 
 10546   0003E8                     ADPREV          equ	1000	;# 
 10547   0003E8                     ADPREVL         equ	1000	;# 
 10548   0003E9                     ADPREVH         equ	1001	;# 
 10549   0003EA                     ADRES           equ	1002	;# 
 10550   0003EA                     ADRESL          equ	1002	;# 
 10551   0003EB                     ADRESH          equ	1003	;# 
 10552   0003EC                     ADPCH           equ	1004	;# 
 10553   0003EE                     ADACQ           equ	1006	;# 
 10554   0003EE                     ADACQL          equ	1006	;# 
 10555   0003EF                     ADACQH          equ	1007	;# 
 10556   0003F0                     ADCAP           equ	1008	;# 
 10557   0003F1                     ADPRE           equ	1009	;# 
 10558   0003F1                     ADPREL          equ	1009	;# 
 10559   0003F2                     ADPREH          equ	1010	;# 
 10560   0003F3                     ADCON0          equ	1011	;# 
 10561   0003F4                     ADCON1          equ	1012	;# 
 10562   0003F5                     ADCON2          equ	1013	;# 
 10563   0003F6                     ADCON3          equ	1014	;# 
 10564   0003F7                     ADSTAT          equ	1015	;# 
 10565   0003F8                     ADREF           equ	1016	;# 
 10566   0003F9                     ADACT           equ	1017	;# 
 10567   0003FA                     ADCLK           equ	1018	;# 
 10568   0003FB                     ADCTX           equ	1019	;# 
 10569   0003FC                     ADCSEL1         equ	1020	;# 
 10570   0003FD                     ADCSEL2         equ	1021	;# 
 10571   0003FE                     ADCSEL3         equ	1022	;# 
 10572   0003FF                     ADCSEL4         equ	1023	;# 
 10573   000400                     ANSELA          equ	1024	;# 
 10574   000401                     WPUA            equ	1025	;# 
 10575   000402                     ODCONA          equ	1026	;# 
 10576   000403                     SLRCONA         equ	1027	;# 
 10577   000404                     INLVLA          equ	1028	;# 
 10578   000405                     IOCAP           equ	1029	;# 
 10579   000406                     IOCAN           equ	1030	;# 
 10580   000407                     IOCAF           equ	1031	;# 
 10581   000408                     ANSELB          equ	1032	;# 
 10582   000409                     WPUB            equ	1033	;# 
 10583   00040A                     ODCONB          equ	1034	;# 
 10584   00040B                     SLRCONB         equ	1035	;# 
 10585   00040C                     INLVLB          equ	1036	;# 
 10586   00040D                     IOCBP           equ	1037	;# 
 10587   00040E                     IOCBN           equ	1038	;# 
 10588   00040F                     IOCBF           equ	1039	;# 
 10589   000410                     ANSELC          equ	1040	;# 
 10590   000411                     WPUC            equ	1041	;# 
 10591   000412                     ODCONC          equ	1042	;# 
 10592   000413                     SLRCONC         equ	1043	;# 
 10593   000414                     INLVLC          equ	1044	;# 
 10594   000415                     IOCCP           equ	1045	;# 
 10595   000416                     IOCCN           equ	1046	;# 
 10596   000417                     IOCCF           equ	1047	;# 
 10597   000421                     WPUE            equ	1057	;# 
 10598   000424                     INLVLE          equ	1060	;# 
 10599   000425                     IOCEP           equ	1061	;# 
 10600   000426                     IOCEN           equ	1062	;# 
 10601   000427                     IOCEF           equ	1063	;# 
 10602   000440                     NCO1ACC         equ	1088	;# 
 10603   000440                     NCO1ACCL        equ	1088	;# 
 10604   000441                     NCO1ACCH        equ	1089	;# 
 10605   000442                     NCO1ACCU        equ	1090	;# 
 10606   000443                     NCO1INC         equ	1091	;# 
 10607   000443                     NCO1INCL        equ	1091	;# 
 10608   000444                     NCO1INCH        equ	1092	;# 
 10609   000445                     NCO1INCU        equ	1093	;# 
 10610   000446                     NCO1CON         equ	1094	;# 
 10611   000447                     NCO1CLK         equ	1095	;# 
 10612   000448                     NCO2ACC         equ	1096	;# 
 10613   000448                     NCO2ACCL        equ	1096	;# 
 10614   000449                     NCO2ACCH        equ	1097	;# 
 10615   00044A                     NCO2ACCU        equ	1098	;# 
 10616   00044B                     NCO2INC         equ	1099	;# 
 10617   00044B                     NCO2INCL        equ	1099	;# 
 10618   00044C                     NCO2INCH        equ	1100	;# 
 10619   00044D                     NCO2INCU        equ	1101	;# 
 10620   00044E                     NCO2CON         equ	1102	;# 
 10621   00044F                     NCO2CLK         equ	1103	;# 
 10622   000450                     NCO3ACC         equ	1104	;# 
 10623   000450                     NCO3ACCL        equ	1104	;# 
 10624   000451                     NCO3ACCH        equ	1105	;# 
 10625   000452                     NCO3ACCU        equ	1106	;# 
 10626   000453                     NCO3INC         equ	1107	;# 
 10627   000453                     NCO3INCL        equ	1107	;# 
 10628   000454                     NCO3INCH        equ	1108	;# 
 10629   000455                     NCO3INCU        equ	1109	;# 
 10630   000456                     NCO3CON         equ	1110	;# 
 10631   000457                     NCO3CLK         equ	1111	;# 
 10632   000458                     FSCMCON         equ	1112	;# 
 10633   000459                     IVTLOCK         equ	1113	;# 
 10634   00045A                     IVTAD           equ	1114	;# 
 10635   00045A                     IVTADL          equ	1114	;# 
 10636   00045B                     IVTADH          equ	1115	;# 
 10637   00045C                     IVTADU          equ	1116	;# 
 10638   00045D                     IVTBASE         equ	1117	;# 
 10639   00045D                     IVTBASEL        equ	1117	;# 
 10640   00045E                     IVTBASEH        equ	1118	;# 
 10641   00045F                     IVTBASEU        equ	1119	;# 
 10642   000460                     PWM1ERS         equ	1120	;# 
 10643   000461                     PWM1CLK         equ	1121	;# 
 10644   000462                     PWM1LDS         equ	1122	;# 
 10645   000463                     PWM1PR          equ	1123	;# 
 10646   000463                     PWM1PRL         equ	1123	;# 
 10647   000464                     PWM1PRH         equ	1124	;# 
 10648   000465                     PWM1CPRE        equ	1125	;# 
 10649   000466                     PWM1PIPOS       equ	1126	;# 
 10650   000467                     PWM1GIR         equ	1127	;# 
 10651   000468                     PWM1GIE         equ	1128	;# 
 10652   000469                     PWM1CON         equ	1129	;# 
 10653   00046A                     PWM1S1CFG       equ	1130	;# 
 10654   00046B                     PWM1S1P1        equ	1131	;# 
 10655   00046B                     PWM1S1P1L       equ	1131	;# 
 10656   00046C                     PWM1S1P1H       equ	1132	;# 
 10657   00046D                     PWM1S1P2        equ	1133	;# 
 10658   00046D                     PWM1S1P2L       equ	1133	;# 
 10659   00046E                     PWM1S1P2H       equ	1134	;# 
 10660   00046F                     PWM2ERS         equ	1135	;# 
 10661   000470                     PWM2CLK         equ	1136	;# 
 10662   000471                     PWM2LDS         equ	1137	;# 
 10663   000472                     PWM2PR          equ	1138	;# 
 10664   000472                     PWM2PRL         equ	1138	;# 
 10665   000473                     PWM2PRH         equ	1139	;# 
 10666   000474                     PWM2CPRE        equ	1140	;# 
 10667   000475                     PWM2PIPOS       equ	1141	;# 
 10668   000476                     PWM2GIR         equ	1142	;# 
 10669   000477                     PWM2GIE         equ	1143	;# 
 10670   000478                     PWM2CON         equ	1144	;# 
 10671   000479                     PWM2S1CFG       equ	1145	;# 
 10672   00047A                     PWM2S1P1        equ	1146	;# 
 10673   00047A                     PWM2S1P1L       equ	1146	;# 
 10674   00047B                     PWM2S1P1H       equ	1147	;# 
 10675   00047C                     PWM2S1P2        equ	1148	;# 
 10676   00047C                     PWM2S1P2L       equ	1148	;# 
 10677   00047D                     PWM2S1P2H       equ	1149	;# 
 10678   00047E                     PWM3ERS         equ	1150	;# 
 10679   00047F                     PWM3CLK         equ	1151	;# 
 10680   000480                     PWM3LDS         equ	1152	;# 
 10681   000481                     PWM3PR          equ	1153	;# 
 10682   000481                     PWM3PRL         equ	1153	;# 
 10683   000482                     PWM3PRH         equ	1154	;# 
 10684   000483                     PWM3CPRE        equ	1155	;# 
 10685   000484                     PWM3PIPOS       equ	1156	;# 
 10686   000485                     PWM3GIR         equ	1157	;# 
 10687   000486                     PWM3GIE         equ	1158	;# 
 10688   000487                     PWM3CON         equ	1159	;# 
 10689   000488                     PWM3S1CFG       equ	1160	;# 
 10690   000489                     PWM3S1P1        equ	1161	;# 
 10691   000489                     PWM3S1P1L       equ	1161	;# 
 10692   00048A                     PWM3S1P1H       equ	1162	;# 
 10693   00048B                     PWM3S1P2        equ	1163	;# 
 10694   00048B                     PWM3S1P2L       equ	1163	;# 
 10695   00048C                     PWM3S1P2H       equ	1164	;# 
 10696   00048D                     PWM4ERS         equ	1165	;# 
 10697   00048E                     PWM4CLK         equ	1166	;# 
 10698   00048F                     PWM4LDS         equ	1167	;# 
 10699   000490                     PWM4PR          equ	1168	;# 
 10700   000490                     PWM4PRL         equ	1168	;# 
 10701   000491                     PWM4PRH         equ	1169	;# 
 10702   000492                     PWM4CPRE        equ	1170	;# 
 10703   000493                     PWM4PIPOS       equ	1171	;# 
 10704   000494                     PWM4GIR         equ	1172	;# 
 10705   000495                     PWM4GIE         equ	1173	;# 
 10706   000496                     PWM4CON         equ	1174	;# 
 10707   000497                     PWM4S1CFG       equ	1175	;# 
 10708   000498                     PWM4S1P1        equ	1176	;# 
 10709   000498                     PWM4S1P1L       equ	1176	;# 
 10710   000499                     PWM4S1P1H       equ	1177	;# 
 10711   00049A                     PWM4S1P2        equ	1178	;# 
 10712   00049A                     PWM4S1P2L       equ	1178	;# 
 10713   00049B                     PWM4S1P2H       equ	1179	;# 
 10714   00049C                     PWMLOAD         equ	1180	;# 
 10715   00049D                     PWMEN           equ	1181	;# 
 10716   00049E                     PIE0            equ	1182	;# 
 10717   00049F                     PIE1            equ	1183	;# 
 10718   0004A0                     PIE2            equ	1184	;# 
 10719   0004A1                     PIE3            equ	1185	;# 
 10720   0004A2                     PIE4            equ	1186	;# 
 10721   0004A3                     PIE5            equ	1187	;# 
 10722   0004A4                     PIE6            equ	1188	;# 
 10723   0004A5                     PIE7            equ	1189	;# 
 10724   0004A6                     PIE8            equ	1190	;# 
 10725   0004A7                     PIE9            equ	1191	;# 
 10726   0004A8                     PIE10           equ	1192	;# 
 10727   0004A9                     PIE11           equ	1193	;# 
 10728   0004AA                     PIE12           equ	1194	;# 
 10729   0004AB                     PIE13           equ	1195	;# 
 10730   0004AC                     PIE14           equ	1196	;# 
 10731   0004AD                     PIE15           equ	1197	;# 
 10732   0004AE                     PIR0            equ	1198	;# 
 10733   0004AF                     PIR1            equ	1199	;# 
 10734   0004B0                     PIR2            equ	1200	;# 
 10735   0004B1                     PIR3            equ	1201	;# 
 10736   0004B2                     PIR4            equ	1202	;# 
 10737   0004B3                     PIR5            equ	1203	;# 
 10738   0004B4                     PIR6            equ	1204	;# 
 10739   0004B5                     PIR7            equ	1205	;# 
 10740   0004B6                     PIR8            equ	1206	;# 
 10741   0004B7                     PIR9            equ	1207	;# 
 10742   0004B8                     PIR10           equ	1208	;# 
 10743   0004B9                     PIR11           equ	1209	;# 
 10744   0004BA                     PIR12           equ	1210	;# 
 10745   0004BB                     PIR13           equ	1211	;# 
 10746   0004BC                     PIR14           equ	1212	;# 
 10747   0004BD                     PIR15           equ	1213	;# 
 10748   0004BE                     LATA            equ	1214	;# 
 10749   0004BF                     LATB            equ	1215	;# 
 10750   0004C0                     LATC            equ	1216	;# 
 10751   0004C6                     TRISA           equ	1222	;# 
 10752   0004C7                     TRISB           equ	1223	;# 
 10753   0004C8                     TRISC           equ	1224	;# 
 10754   0004CA                     TRISE           equ	1226	;# 
 10755   0004CE                     PORTA           equ	1230	;# 
 10756   0004CF                     PORTB           equ	1231	;# 
 10757   0004D0                     PORTC           equ	1232	;# 
 10758   0004D2                     PORTE           equ	1234	;# 
 10759   0004D6                     INTCON0         equ	1238	;# 
 10760   0004D7                     INTCON1         equ	1239	;# 
 10761   0004D8                     STATUS          equ	1240	;# 
 10762   0004D9                     FSR2            equ	1241	;# 
 10763   0004D9                     FSR2L           equ	1241	;# 
 10764   0004DA                     FSR2H           equ	1242	;# 
 10765   0004DB                     PLUSW2          equ	1243	;# 
 10766   0004DC                     PREINC2         equ	1244	;# 
 10767   0004DD                     POSTDEC2        equ	1245	;# 
 10768   0004DE                     POSTINC2        equ	1246	;# 
 10769   0004DF                     INDF2           equ	1247	;# 
 10770   0004E0                     BSR             equ	1248	;# 
 10771   0004E1                     FSR1            equ	1249	;# 
 10772   0004E1                     FSR1L           equ	1249	;# 
 10773   0004E2                     FSR1H           equ	1250	;# 
 10774   0004E3                     PLUSW1          equ	1251	;# 
 10775   0004E4                     PREINC1         equ	1252	;# 
 10776   0004E5                     POSTDEC1        equ	1253	;# 
 10777   0004E6                     POSTINC1        equ	1254	;# 
 10778   0004E7                     INDF1           equ	1255	;# 
 10779   0004E8                     WREG            equ	1256	;# 
 10780   0004E9                     FSR0            equ	1257	;# 
 10781   0004E9                     FSR0L           equ	1257	;# 
 10782   0004EA                     FSR0H           equ	1258	;# 
 10783   0004EB                     PLUSW0          equ	1259	;# 
 10784   0004EC                     PREINC0         equ	1260	;# 
 10785   0004ED                     POSTDEC0        equ	1261	;# 
 10786   0004EE                     POSTINC0        equ	1262	;# 
 10787   0004EF                     INDF0           equ	1263	;# 
 10788   0004F0                     PCON0           equ	1264	;# 
 10789   0004F1                     PCON1           equ	1265	;# 
 10790   0004F2                     CPUDOZE         equ	1266	;# 
 10791   0004F3                     PROD            equ	1267	;# 
 10792   0004F3                     PRODL           equ	1267	;# 
 10793   0004F4                     PRODH           equ	1268	;# 
 10794   0004F5                     TABLAT          equ	1269	;# 
 10795   0004F6                     TBLPTR          equ	1270	;# 
 10796   0004F6                     TBLPTRL         equ	1270	;# 
 10797   0004F7                     TBLPTRH         equ	1271	;# 
 10798   0004F8                     TBLPTRU         equ	1272	;# 
 10799   0004F9                     PCLAT           equ	1273	;# 
 10800   0004F9                     PCL             equ	1273	;# 
 10801   0004FA                     PCLATH          equ	1274	;# 
 10802   0004FB                     PCLATU          equ	1275	;# 
 10803   0004FC                     STKPTR          equ	1276	;# 
 10804   0004FD                     TOS             equ	1277	;# 
 10805   0004FD                     TOSL            equ	1277	;# 
 10806   0004FE                     TOSH            equ	1278	;# 
 10807   0004FF                     TOSU            equ	1279	;# 
 10808   000038                     BOOTREG         equ	56	;# 
 10809   000039                     CLKRCON         equ	57	;# 
 10810   00003A                     CLKRCLK         equ	58	;# 
 10811   000040                     NVMCON0         equ	64	;# 
 10812   000041                     NVMCON1         equ	65	;# 
 10813   000042                     NVMLOCK         equ	66	;# 
 10814   000043                     NVMADR          equ	67	;# 
 10815   000043                     NVMADRL         equ	67	;# 
 10816   000044                     NVMADRH         equ	68	;# 
 10817   000045                     NVMADRU         equ	69	;# 
 10818   000046                     NVMDAT          equ	70	;# 
 10819   000046                     NVMDATL         equ	70	;# 
 10820   000047                     NVMDATH         equ	71	;# 
 10821   000048                     VREGCON         equ	72	;# 
 10822   000049                     BORCON          equ	73	;# 
 10823   00004A                     HLVDCON0        equ	74	;# 
 10824   00004B                     HLVDCON1        equ	75	;# 
 10825   00004C                     ZCDCON          equ	76	;# 
 10826   000060                     PMD0            equ	96	;# 
 10827   000061                     PMD1            equ	97	;# 
 10828   000062                     PMD2            equ	98	;# 
 10829   000063                     PMD3            equ	99	;# 
 10830   000064                     PMD4            equ	100	;# 
 10831   000065                     PMD5            equ	101	;# 
 10832   000066                     PMD6            equ	102	;# 
 10833   000067                     PMD7            equ	103	;# 
 10834   000068                     PMD8            equ	104	;# 
 10835   00006A                     MD1CON0         equ	106	;# 
 10836   00006B                     MD1CON1         equ	107	;# 
 10837   00006C                     MD1SRC          equ	108	;# 
 10838   00006D                     MD1CARL         equ	109	;# 
 10839   00006E                     MD1CARH         equ	110	;# 
 10840   00006F                     CMOUT           equ	111	;# 
 10841   000070                     CM1CON0         equ	112	;# 
 10842   000071                     CM1CON1         equ	113	;# 
 10843   000072                     CM1NCH          equ	114	;# 
 10844   000073                     CM1PCH          equ	115	;# 
 10845   000074                     CM2CON0         equ	116	;# 
 10846   000075                     CM2CON1         equ	117	;# 
 10847   000076                     CM2NCH          equ	118	;# 
 10848   000077                     CM2PCH          equ	119	;# 
 10849   000078                     WDTCON0         equ	120	;# 
 10850   000079                     WDTCON1         equ	121	;# 
 10851   00007A                     WDTPSL          equ	122	;# 
 10852   00007B                     WDTPSH          equ	123	;# 
 10853   00007C                     WDTTMR          equ	124	;# 
 10854   00007D                     DAC1DAT         equ	125	;# 
 10855   00007D                     DAC1DATL        equ	125	;# 
 10856   00007F                     DAC1CON         equ	127	;# 
 10857   000080                     SPI1RXB         equ	128	;# 
 10858   000081                     SPI1TXB         equ	129	;# 
 10859   000082                     SPI1TCNT        equ	130	;# 
 10860   000082                     SPI1TCNTL       equ	130	;# 
 10861   000083                     SPI1TCNTH       equ	131	;# 
 10862   000084                     SPI1CON0        equ	132	;# 
 10863   000085                     SPI1CON1        equ	133	;# 
 10864   000086                     SPI1CON2        equ	134	;# 
 10865   000087                     SPI1STATUS      equ	135	;# 
 10866   000088                     SPI1TWIDTH      equ	136	;# 
 10867   000089                     SPI1BAUD        equ	137	;# 
 10868   00008A                     SPI1INTF        equ	138	;# 
 10869   00008B                     SPI1INTE        equ	139	;# 
 10870   00008C                     SPI1CLK         equ	140	;# 
 10871   00008D                     SPI2RXB         equ	141	;# 
 10872   00008E                     SPI2TXB         equ	142	;# 
 10873   00008F                     SPI2TCNT        equ	143	;# 
 10874   00008F                     SPI2TCNTL       equ	143	;# 
 10875   000090                     SPI2TCNTH       equ	144	;# 
 10876   000091                     SPI2CON0        equ	145	;# 
 10877   000092                     SPI2CON1        equ	146	;# 
 10878   000093                     SPI2CON2        equ	147	;# 
 10879   000094                     SPI2STATUS      equ	148	;# 
 10880   000095                     SPI2TWIDTH      equ	149	;# 
 10881   000096                     SPI2BAUD        equ	150	;# 
 10882   000097                     SPI2INTF        equ	151	;# 
 10883   000098                     SPI2INTE        equ	152	;# 
 10884   000099                     SPI2CLK         equ	153	;# 
 10885   0000AC                     ACTCON          equ	172	;# 
 10886   0000AD                     OSCCON1         equ	173	;# 
 10887   0000AE                     OSCCON2         equ	174	;# 
 10888   0000AF                     OSCCON3         equ	175	;# 
 10889   0000B0                     OSCTUNE         equ	176	;# 
 10890   0000B1                     OSCFRQ          equ	177	;# 
 10891   0000B1                     OSCFREQ         equ	177	;# 
 10892   0000B2                     OSCSTAT         equ	178	;# 
 10893   0000B2                     OSCSTAT1        equ	178	;# 
 10894   0000B3                     OSCEN           equ	179	;# 
 10895   0000B4                     PRLOCK          equ	180	;# 
 10896   0000B5                     SCANPR          equ	181	;# 
 10897   0000B6                     DMA1PR          equ	182	;# 
 10898   0000B7                     DMA2PR          equ	183	;# 
 10899   0000B8                     DMA3PR          equ	184	;# 
 10900   0000B9                     DMA4PR          equ	185	;# 
 10901   0000BA                     DMA5PR          equ	186	;# 
 10902   0000BB                     DMA6PR          equ	187	;# 
 10903   0000BC                     DMA7PR          equ	188	;# 
 10904   0000BD                     DMA8PR          equ	189	;# 
 10905   0000BE                     MAINPR          equ	190	;# 
 10906   0000BF                     ISRPR           equ	191	;# 
 10907   0000D4                     CLCDATA         equ	212	;# 
 10908   0000D5                     CLCSELECT       equ	213	;# 
 10909   0000D6                     CLCnCON         equ	214	;# 
 10910   0000D7                     CLCnPOL         equ	215	;# 
 10911   0000D8                     CLCnSEL0        equ	216	;# 
 10912   0000D9                     CLCnSEL1        equ	217	;# 
 10913   0000DA                     CLCnSEL2        equ	218	;# 
 10914   0000DB                     CLCnSEL3        equ	219	;# 
 10915   0000DC                     CLCnGLS0        equ	220	;# 
 10916   0000DD                     CLCnGLS1        equ	221	;# 
 10917   0000DE                     CLCnGLS2        equ	222	;# 
 10918   0000DF                     CLCnGLS3        equ	223	;# 
 10919   0000E8                     DMASELECT       equ	232	;# 
 10920   0000E9                     DMAnBUF         equ	233	;# 
 10921   0000EA                     DMAnDCNT        equ	234	;# 
 10922   0000EA                     DMAnDCNTL       equ	234	;# 
 10923   0000EB                     DMAnDCNTH       equ	235	;# 
 10924   0000EC                     DMAnDPTR        equ	236	;# 
 10925   0000EC                     DMAnDPTRL       equ	236	;# 
 10926   0000ED                     DMAnDPTRH       equ	237	;# 
 10927   0000EE                     DMAnDSZ         equ	238	;# 
 10928   0000EE                     DMAnDSZL        equ	238	;# 
 10929   0000EF                     DMAnDSZH        equ	239	;# 
 10930   0000F0                     DMAnDSA         equ	240	;# 
 10931   0000F0                     DMAnDSAL        equ	240	;# 
 10932   0000F1                     DMAnDSAH        equ	241	;# 
 10933   0000F2                     DMAnSCNT        equ	242	;# 
 10934   0000F2                     DMAnSCNTL       equ	242	;# 
 10935   0000F3                     DMAnSCNTH       equ	243	;# 
 10936   0000F4                     DMAnSPTR        equ	244	;# 
 10937   0000F4                     DMAnSPTRL       equ	244	;# 
 10938   0000F5                     DMAnSPTRH       equ	245	;# 
 10939   0000F6                     DMAnSPTRU       equ	246	;# 
 10940   0000F7                     DMAnSSZ         equ	247	;# 
 10941   0000F7                     DMAnSSZL        equ	247	;# 
 10942   0000F8                     DMAnSSZH        equ	248	;# 
 10943   0000F9                     DMAnSSA         equ	249	;# 
 10944   0000F9                     DMAnSSAL        equ	249	;# 
 10945   0000FA                     DMAnSSAH        equ	250	;# 
 10946   0000FB                     DMAnSSAU        equ	251	;# 
 10947   0000FC                     DMAnCON0        equ	252	;# 
 10948   0000FD                     DMAnCON1        equ	253	;# 
 10949   0000FE                     DMAnAIRQ        equ	254	;# 
 10950   0000FF                     DMAnSIRQ        equ	255	;# 
 10951   000100                     C1CONL          equ	256	;# 
 10952   000101                     C1CONH          equ	257	;# 
 10953   000102                     C1CONU          equ	258	;# 
 10954   000103                     C1CONT          equ	259	;# 
 10955   000104                     C1NBTCFGL       equ	260	;# 
 10956   000105                     C1NBTCFGH       equ	261	;# 
 10957   000106                     C1NBTCFGU       equ	262	;# 
 10958   000107                     C1NBTCFGT       equ	263	;# 
 10959   000108                     C1DBTCFGL       equ	264	;# 
 10960   000109                     C1DBTCFGH       equ	265	;# 
 10961   00010A                     C1DBTCFGU       equ	266	;# 
 10962   00010B                     C1DBTCFGT       equ	267	;# 
 10963   00010C                     C1TDCL          equ	268	;# 
 10964   00010D                     C1TDCH          equ	269	;# 
 10965   00010E                     C1TDCU          equ	270	;# 
 10966   000110                     C1TBC           equ	272	;# 
 10967   000110                     C1TBCL          equ	272	;# 
 10968   000111                     C1TBCH          equ	273	;# 
 10969   000112                     C1TBCU          equ	274	;# 
 10970   000113                     C1TBCT          equ	275	;# 
 10971   000114                     C1TSCONL        equ	276	;# 
 10972   000115                     C1TSCONH        equ	277	;# 
 10973   000116                     C1TSCONU        equ	278	;# 
 10974   000117                     C1TSCONT        equ	279	;# 
 10975   000118                     C1VECL          equ	280	;# 
 10976   000119                     C1VECH          equ	281	;# 
 10977   00011A                     C1VECU          equ	282	;# 
 10978   00011B                     C1VECT          equ	283	;# 
 10979   00011C                     C1INTL          equ	284	;# 
 10980   00011D                     C1INTH          equ	285	;# 
 10981   00011E                     C1INTU          equ	286	;# 
 10982   00011F                     C1INTT          equ	287	;# 
 10983   000120                     C1RXIF          equ	288	;# 
 10984   000120                     C1RXIFL         equ	288	;# 
 10985   000121                     C1RXIFH         equ	289	;# 
 10986   000122                     C1RXIFU         equ	290	;# 
 10987   000123                     C1RXIFT         equ	291	;# 
 10988   000124                     C1TXIF          equ	292	;# 
 10989   000124                     C1TXIFL         equ	292	;# 
 10990   000125                     C1TXIFH         equ	293	;# 
 10991   000126                     C1TXIFU         equ	294	;# 
 10992   000127                     C1TXIFT         equ	295	;# 
 10993   000128                     C1RXOVIF        equ	296	;# 
 10994   000128                     C1RXOVIFL       equ	296	;# 
 10995   000129                     C1RXOVIFH       equ	297	;# 
 10996   00012A                     C1RXOVIFU       equ	298	;# 
 10997   00012B                     C1RXOVIFT       equ	299	;# 
 10998   00012C                     C1TXATIF        equ	300	;# 
 10999   00012C                     C1TXATIFL       equ	300	;# 
 11000   00012D                     C1TXATIFH       equ	301	;# 
 11001   00012E                     C1TXATIFU       equ	302	;# 
 11002   00012F                     C1TXATIFT       equ	303	;# 
 11003   000130                     C1TXREQ         equ	304	;# 
 11004   000130                     C1TXREQL        equ	304	;# 
 11005   000131                     C1TXREQH        equ	305	;# 
 11006   000132                     C1TXREQU        equ	306	;# 
 11007   000133                     C1TXREQT        equ	307	;# 
 11008   000134                     C1TRECL         equ	308	;# 
 11009   000135                     C1TRECH         equ	309	;# 
 11010   000136                     C1TRECU         equ	310	;# 
 11011   000137                     C1TRECT         equ	311	;# 
 11012   000138                     C1BDIAG0L       equ	312	;# 
 11013   000139                     C1BDIAG0H       equ	313	;# 
 11014   00013C                     C1BDIAG1L       equ	316	;# 
 11015   00013D                     C1BDIAG1H       equ	317	;# 
 11016   00013E                     C1BDIAG1U       equ	318	;# 
 11017   00013F                     C1BDIAG1T       equ	319	;# 
 11018   000140                     C1TEFCONL       equ	320	;# 
 11019   000141                     C1TEFCONH       equ	321	;# 
 11020   000142                     C1TEFCONU       equ	322	;# 
 11021   000143                     C1TEFCONT       equ	323	;# 
 11022   000144                     C1TEFSTAL       equ	324	;# 
 11023   000145                     C1TEFSTAH       equ	325	;# 
 11024   000146                     C1TEFSTAU       equ	326	;# 
 11025   000147                     C1TEFSTAT       equ	327	;# 
 11026   000148                     C1TEFUA         equ	328	;# 
 11027   000148                     C1TEFUAL        equ	328	;# 
 11028   000149                     C1TEFUAH        equ	329	;# 
 11029   00014A                     C1TEFUAU        equ	330	;# 
 11030   00014B                     C1TEFUAT        equ	331	;# 
 11031   00014C                     C1FIFOBA        equ	332	;# 
 11032   00014C                     C1FIFOBAL       equ	332	;# 
 11033   00014D                     C1FIFOBAH       equ	333	;# 
 11034   00014E                     C1FIFOBAU       equ	334	;# 
 11035   00014F                     C1FIFOBAT       equ	335	;# 
 11036   000150                     C1TXQCONL       equ	336	;# 
 11037   000151                     C1TXQCONH       equ	337	;# 
 11038   000152                     C1TXQCONU       equ	338	;# 
 11039   000153                     C1TXQCONT       equ	339	;# 
 11040   000154                     C1TXQSTAL       equ	340	;# 
 11041   000155                     C1TXQSTAH       equ	341	;# 
 11042   000156                     C1TXQSTAU       equ	342	;# 
 11043   000157                     C1TXQSTAT       equ	343	;# 
 11044   000158                     C1TXQUA         equ	344	;# 
 11045   000158                     C1TXQUAL        equ	344	;# 
 11046   000159                     C1TXQUAH        equ	345	;# 
 11047   00015A                     C1TXQUAU        equ	346	;# 
 11048   00015B                     C1TXQUAT        equ	347	;# 
 11049   00015C                     C1FIFOCON1      equ	348	;# 
 11050   00015C                     C1FIFOCON1L     equ	348	;# 
 11051   00015D                     C1FIFOCON1H     equ	349	;# 
 11052   00015E                     C1FIFOCON1U     equ	350	;# 
 11053   00015F                     C1FIFOCON1T     equ	351	;# 
 11054   000160                     C1FIFOSTA1      equ	352	;# 
 11055   000160                     C1FIFOSTA1L     equ	352	;# 
 11056   000161                     C1FIFOSTA1H     equ	353	;# 
 11057   000162                     C1FIFOSTA1U     equ	354	;# 
 11058   000163                     C1FIFOSTA1T     equ	355	;# 
 11059   000164                     C1FIFOUA1       equ	356	;# 
 11060   000164                     C1FIFOUA1L      equ	356	;# 
 11061   000165                     C1FIFOUA1H      equ	357	;# 
 11062   000166                     C1FIFOUA1U      equ	358	;# 
 11063   000167                     C1FIFOUA1T      equ	359	;# 
 11064   000168                     C1FIFOCON2      equ	360	;# 
 11065   000168                     C1FIFOCON2L     equ	360	;# 
 11066   000169                     C1FIFOCON2H     equ	361	;# 
 11067   00016A                     C1FIFOCON2U     equ	362	;# 
 11068   00016B                     C1FIFOCON2T     equ	363	;# 
 11069   00016C                     C1FIFOSTA2      equ	364	;# 
 11070   00016C                     C1FIFOSTA2L     equ	364	;# 
 11071   00016D                     C1FIFOSTA2H     equ	365	;# 
 11072   00016E                     C1FIFOSTA2U     equ	366	;# 
 11073   00016F                     C1FIFOSTA2T     equ	367	;# 
 11074   000170                     C1FIFOUA2       equ	368	;# 
 11075   000170                     C1FIFOUA2L      equ	368	;# 
 11076   000171                     C1FIFOUA2H      equ	369	;# 
 11077   000172                     C1FIFOUA2U      equ	370	;# 
 11078   000173                     C1FIFOUA2T      equ	371	;# 
 11079   000174                     C1FIFOCON3      equ	372	;# 
 11080   000174                     C1FIFOCON3L     equ	372	;# 
 11081   000175                     C1FIFOCON3H     equ	373	;# 
 11082   000176                     C1FIFOCON3U     equ	374	;# 
 11083   000177                     C1FIFOCON3T     equ	375	;# 
 11084   000178                     C1FIFOSTA3      equ	376	;# 
 11085   000178                     C1FIFOSTA3L     equ	376	;# 
 11086   000179                     C1FIFOSTA3H     equ	377	;# 
 11087   00017A                     C1FIFOSTA3U     equ	378	;# 
 11088   00017B                     C1FIFOSTA3T     equ	379	;# 
 11089   00017C                     C1FIFOUA3       equ	380	;# 
 11090   00017C                     C1FIFOUA3L      equ	380	;# 
 11091   00017D                     C1FIFOUA3H      equ	381	;# 
 11092   00017E                     C1FIFOUA3U      equ	382	;# 
 11093   00017F                     C1FIFOUA3T      equ	383	;# 
 11094   000180                     C1FLTCON0L      equ	384	;# 
 11095   000181                     C1FLTCON0H      equ	385	;# 
 11096   000182                     C1FLTCON0U      equ	386	;# 
 11097   000183                     C1FLTCON0T      equ	387	;# 
 11098   000184                     C1FLTCON1L      equ	388	;# 
 11099   000185                     C1FLTCON1H      equ	389	;# 
 11100   000186                     C1FLTCON1U      equ	390	;# 
 11101   000187                     C1FLTCON1T      equ	391	;# 
 11102   000188                     C1FLTCON2L      equ	392	;# 
 11103   000189                     C1FLTCON2H      equ	393	;# 
 11104   00018A                     C1FLTCON2U      equ	394	;# 
 11105   00018B                     C1FLTCON2T      equ	395	;# 
 11106   00018C                     C1FLTOBJ0       equ	396	;# 
 11107   00018C                     C1FLTOBJ0L      equ	396	;# 
 11108   00018D                     C1FLTOBJ0H      equ	397	;# 
 11109   00018E                     C1FLTOBJ0U      equ	398	;# 
 11110   00018F                     C1FLTOBJ0T      equ	399	;# 
 11111   000190                     C1MASK0         equ	400	;# 
 11112   000190                     C1MASK0L        equ	400	;# 
 11113   000191                     C1MASK0H        equ	401	;# 
 11114   000192                     C1MASK0U        equ	402	;# 
 11115   000193                     C1MASK0T        equ	403	;# 
 11116   000194                     C1FLTOBJ1       equ	404	;# 
 11117   000194                     C1FLTOBJ1L      equ	404	;# 
 11118   000195                     C1FLTOBJ1H      equ	405	;# 
 11119   000196                     C1FLTOBJ1U      equ	406	;# 
 11120   000197                     C1FLTOBJ1T      equ	407	;# 
 11121   000198                     C1MASK1         equ	408	;# 
 11122   000198                     C1MASK1L        equ	408	;# 
 11123   000199                     C1MASK1H        equ	409	;# 
 11124   00019A                     C1MASK1U        equ	410	;# 
 11125   00019B                     C1MASK1T        equ	411	;# 
 11126   00019C                     C1FLTOBJ2       equ	412	;# 
 11127   00019C                     C1FLTOBJ2L      equ	412	;# 
 11128   00019D                     C1FLTOBJ2H      equ	413	;# 
 11129   00019E                     C1FLTOBJ2U      equ	414	;# 
 11130   00019F                     C1FLTOBJ2T      equ	415	;# 
 11131   0001A0                     C1MASK2         equ	416	;# 
 11132   0001A0                     C1MASK2L        equ	416	;# 
 11133   0001A1                     C1MASK2H        equ	417	;# 
 11134   0001A2                     C1MASK2U        equ	418	;# 
 11135   0001A3                     C1MASK2T        equ	419	;# 
 11136   0001A4                     C1FLTOBJ3       equ	420	;# 
 11137   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11138   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11139   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11140   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11141   0001A8                     C1MASK3         equ	424	;# 
 11142   0001A8                     C1MASK3L        equ	424	;# 
 11143   0001A9                     C1MASK3H        equ	425	;# 
 11144   0001AA                     C1MASK3U        equ	426	;# 
 11145   0001AB                     C1MASK3T        equ	427	;# 
 11146   0001AC                     C1FLTOBJ4       equ	428	;# 
 11147   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11148   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11149   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11150   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11151   0001B0                     C1MASK4         equ	432	;# 
 11152   0001B0                     C1MASK4L        equ	432	;# 
 11153   0001B1                     C1MASK4H        equ	433	;# 
 11154   0001B2                     C1MASK4U        equ	434	;# 
 11155   0001B3                     C1MASK4T        equ	435	;# 
 11156   0001B4                     C1FLTOBJ5       equ	436	;# 
 11157   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11158   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11159   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11160   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11161   0001B8                     C1MASK5         equ	440	;# 
 11162   0001B8                     C1MASK5L        equ	440	;# 
 11163   0001B9                     C1MASK5H        equ	441	;# 
 11164   0001BA                     C1MASK5U        equ	442	;# 
 11165   0001BB                     C1MASK5T        equ	443	;# 
 11166   0001BC                     C1FLTOBJ6       equ	444	;# 
 11167   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11168   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11169   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11170   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11171   0001C0                     C1MASK6         equ	448	;# 
 11172   0001C0                     C1MASK6L        equ	448	;# 
 11173   0001C1                     C1MASK6H        equ	449	;# 
 11174   0001C2                     C1MASK6U        equ	450	;# 
 11175   0001C3                     C1MASK6T        equ	451	;# 
 11176   0001C4                     C1FLTOBJ7       equ	452	;# 
 11177   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11178   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11179   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11180   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11181   0001C8                     C1MASK7         equ	456	;# 
 11182   0001C8                     C1MASK7L        equ	456	;# 
 11183   0001C9                     C1MASK7H        equ	457	;# 
 11184   0001CA                     C1MASK7U        equ	458	;# 
 11185   0001CB                     C1MASK7T        equ	459	;# 
 11186   0001CC                     C1FLTOBJ8       equ	460	;# 
 11187   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11188   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11189   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11190   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11191   0001D0                     C1MASK8         equ	464	;# 
 11192   0001D0                     C1MASK8L        equ	464	;# 
 11193   0001D1                     C1MASK8H        equ	465	;# 
 11194   0001D2                     C1MASK8U        equ	466	;# 
 11195   0001D3                     C1MASK8T        equ	467	;# 
 11196   0001D4                     C1FLTOBJ9       equ	468	;# 
 11197   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11198   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11199   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11200   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11201   0001D8                     C1MASK9         equ	472	;# 
 11202   0001D8                     C1MASK9L        equ	472	;# 
 11203   0001D9                     C1MASK9H        equ	473	;# 
 11204   0001DA                     C1MASK9U        equ	474	;# 
 11205   0001DB                     C1MASK9T        equ	475	;# 
 11206   0001DC                     C1FLTOBJ10      equ	476	;# 
 11207   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11208   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11209   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11210   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11211   0001E0                     C1MASK10        equ	480	;# 
 11212   0001E0                     C1MASK10L       equ	480	;# 
 11213   0001E1                     C1MASK10H       equ	481	;# 
 11214   0001E2                     C1MASK10U       equ	482	;# 
 11215   0001E3                     C1MASK10T       equ	483	;# 
 11216   0001E4                     C1FLTOBJ11      equ	484	;# 
 11217   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11218   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11219   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11220   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11221   0001E8                     C1MASK11        equ	488	;# 
 11222   0001E8                     C1MASK11L       equ	488	;# 
 11223   0001E9                     C1MASK11H       equ	489	;# 
 11224   0001EA                     C1MASK11U       equ	490	;# 
 11225   0001EB                     C1MASK11T       equ	491	;# 
 11226   000200                     PPSLOCK         equ	512	;# 
 11227   000201                     RA0PPS          equ	513	;# 
 11228   000202                     RA1PPS          equ	514	;# 
 11229   000203                     RA2PPS          equ	515	;# 
 11230   000204                     RA3PPS          equ	516	;# 
 11231   000205                     RA4PPS          equ	517	;# 
 11232   000206                     RA5PPS          equ	518	;# 
 11233   000207                     RA6PPS          equ	519	;# 
 11234   000208                     RA7PPS          equ	520	;# 
 11235   000209                     RB0PPS          equ	521	;# 
 11236   00020A                     RB1PPS          equ	522	;# 
 11237   00020B                     RB2PPS          equ	523	;# 
 11238   00020C                     RB3PPS          equ	524	;# 
 11239   00020D                     RB4PPS          equ	525	;# 
 11240   00020E                     RB5PPS          equ	526	;# 
 11241   00020F                     RB6PPS          equ	527	;# 
 11242   000210                     RB7PPS          equ	528	;# 
 11243   000211                     RC0PPS          equ	529	;# 
 11244   000212                     RC1PPS          equ	530	;# 
 11245   000213                     RC2PPS          equ	531	;# 
 11246   000214                     RC3PPS          equ	532	;# 
 11247   000215                     RC4PPS          equ	533	;# 
 11248   000216                     RC5PPS          equ	534	;# 
 11249   000217                     RC6PPS          equ	535	;# 
 11250   000218                     RC7PPS          equ	536	;# 
 11251   00023D                     CANRXPPS        equ	573	;# 
 11252   00023E                     INT0PPS         equ	574	;# 
 11253   00023F                     INT1PPS         equ	575	;# 
 11254   000240                     INT2PPS         equ	576	;# 
 11255   000241                     T0CKIPPS        equ	577	;# 
 11256   000242                     T1CKIPPS        equ	578	;# 
 11257   000243                     T1GPPS          equ	579	;# 
 11258   000244                     T3CKIPPS        equ	580	;# 
 11259   000245                     T3GPPS          equ	581	;# 
 11260   000246                     T5CKIPPS        equ	582	;# 
 11261   000247                     T5GPPS          equ	583	;# 
 11262   000248                     T2INPPS         equ	584	;# 
 11263   000249                     T4INPPS         equ	585	;# 
 11264   00024A                     T6INPPS         equ	586	;# 
 11265   00024B                     TUIN0PPS        equ	587	;# 
 11266   00024C                     TUIN1PPS        equ	588	;# 
 11267   00024F                     CCP1PPS         equ	591	;# 
 11268   000250                     CCP2PPS         equ	592	;# 
 11269   000251                     CCP3PPS         equ	593	;# 
 11270   000253                     PWM1ERSPPS      equ	595	;# 
 11271   000254                     PWM2ERSPPS      equ	596	;# 
 11272   000255                     PWM3ERSPPS      equ	597	;# 
 11273   000256                     PWM4ERSPPS      equ	598	;# 
 11274   000257                     PWMIN0PPS       equ	599	;# 
 11275   000258                     PWMIN1PPS       equ	600	;# 
 11276   000259                     SMT1WINPPS      equ	601	;# 
 11277   00025A                     SMT1SIGPPS      equ	602	;# 
 11278   00025B                     CWG1PPS         equ	603	;# 
 11279   00025B                     CWG1INPPS       equ	603	;# 
 11280   00025C                     CWG2PPS         equ	604	;# 
 11281   00025C                     CWG2INPPS       equ	604	;# 
 11282   00025D                     CWG3PPS         equ	605	;# 
 11283   00025D                     CWG3INPPS       equ	605	;# 
 11284   00025E                     MD1CARLPPS      equ	606	;# 
 11285   00025E                     MDCARLPPS       equ	606	;# 
 11286   00025F                     MD1CARHPPS      equ	607	;# 
 11287   00025F                     MDCARHPPS       equ	607	;# 
 11288   000260                     MD1SRCPPS       equ	608	;# 
 11289   000260                     MDSRCPPS        equ	608	;# 
 11290   000261                     CLCIN0PPS       equ	609	;# 
 11291   000262                     CLCIN1PPS       equ	610	;# 
 11292   000263                     CLCIN2PPS       equ	611	;# 
 11293   000264                     CLCIN3PPS       equ	612	;# 
 11294   000265                     CLCIN4PPS       equ	613	;# 
 11295   000266                     CLCIN5PPS       equ	614	;# 
 11296   000267                     CLCIN6PPS       equ	615	;# 
 11297   000268                     CLCIN7PPS       equ	616	;# 
 11298   000269                     ADACTPPS        equ	617	;# 
 11299   00026A                     SPI1SCKPPS      equ	618	;# 
 11300   00026B                     SPI1SDIPPS      equ	619	;# 
 11301   00026C                     SPI1SSPPS       equ	620	;# 
 11302   00026D                     SPI2SCKPPS      equ	621	;# 
 11303   00026E                     SPI2SDIPPS      equ	622	;# 
 11304   00026F                     SPI2SSPPS       equ	623	;# 
 11305   000270                     I2C1SDAPPS      equ	624	;# 
 11306   000271                     I2C1SCLPPS      equ	625	;# 
 11307   000272                     U1RXPPS         equ	626	;# 
 11308   000273                     U1CTSPPS        equ	627	;# 
 11309   000274                     U2RXPPS         equ	628	;# 
 11310   000275                     U2CTSPPS        equ	629	;# 
 11311   000276                     U3RXPPS         equ	630	;# 
 11312   000277                     U3CTSPPS        equ	631	;# 
 11313   000278                     U4RXPPS         equ	632	;# 
 11314   000279                     U4CTSPPS        equ	633	;# 
 11315   00027A                     U5RXPPS         equ	634	;# 
 11316   00027B                     U5CTSPPS        equ	635	;# 
 11317   000286                     RC4I2C          equ	646	;# 
 11318   000287                     RC3I2C          equ	647	;# 
 11319   000288                     RB2I2C          equ	648	;# 
 11320   000289                     RB1I2C          equ	649	;# 
 11321   00028A                     I2C1RXB         equ	650	;# 
 11322   00028B                     I2C1TXB         equ	651	;# 
 11323   00028C                     I2C1CNTL        equ	652	;# 
 11324   00028D                     I2C1CNTH        equ	653	;# 
 11325   00028E                     I2C1ADB0        equ	654	;# 
 11326   00028F                     I2C1ADB1        equ	655	;# 
 11327   000290                     I2C1ADR0        equ	656	;# 
 11328   000291                     I2C1ADR1        equ	657	;# 
 11329   000292                     I2C1ADR2        equ	658	;# 
 11330   000293                     I2C1ADR3        equ	659	;# 
 11331   000294                     I2C1CON0        equ	660	;# 
 11332   000295                     I2C1CON1        equ	661	;# 
 11333   000296                     I2C1CON2        equ	662	;# 
 11334   000297                     I2C1ERR         equ	663	;# 
 11335   000298                     I2C1STAT0       equ	664	;# 
 11336   000299                     I2C1STAT1       equ	665	;# 
 11337   00029A                     I2C1PIR         equ	666	;# 
 11338   00029B                     I2C1PIE         equ	667	;# 
 11339   00029C                     I2C1BTO         equ	668	;# 
 11340   00029D                     I2C1BAUD        equ	669	;# 
 11341   00029E                     I2C1CLK         equ	670	;# 
 11342   00029F                     I2C1BTOC        equ	671	;# 
 11343   0002A1                     U1RXB           equ	673	;# 
 11344   0002A1                     U1RXBL          equ	673	;# 
 11345   0002A2                     U1RXCHK         equ	674	;# 
 11346   0002A3                     U1TXB           equ	675	;# 
 11347   0002A3                     U1TXBL          equ	675	;# 
 11348   0002A4                     U1TXCHK         equ	676	;# 
 11349   0002A5                     U1P1            equ	677	;# 
 11350   0002A5                     U1P1L           equ	677	;# 
 11351   0002A6                     U1P1H           equ	678	;# 
 11352   0002A7                     U1P2            equ	679	;# 
 11353   0002A7                     U1P2L           equ	679	;# 
 11354   0002A8                     U1P2H           equ	680	;# 
 11355   0002A9                     U1P3            equ	681	;# 
 11356   0002A9                     U1P3L           equ	681	;# 
 11357   0002AA                     U1P3H           equ	682	;# 
 11358   0002AB                     U1CON0          equ	683	;# 
 11359   0002AC                     U1CON1          equ	684	;# 
 11360   0002AD                     U1CON2          equ	685	;# 
 11361   0002AE                     U1BRG           equ	686	;# 
 11362   0002AE                     U1BRGL          equ	686	;# 
 11363   0002AF                     U1BRGH          equ	687	;# 
 11364   0002B0                     U1FIFO          equ	688	;# 
 11365   0002B1                     U1UIR           equ	689	;# 
 11366   0002B2                     U1ERRIR         equ	690	;# 
 11367   0002B3                     U1ERRIE         equ	691	;# 
 11368   0002B4                     U2RXB           equ	692	;# 
 11369   0002B4                     U2RXBL          equ	692	;# 
 11370   0002B5                     U2RXCHK         equ	693	;# 
 11371   0002B6                     U2TXB           equ	694	;# 
 11372   0002B6                     U2TXBL          equ	694	;# 
 11373   0002B7                     U2TXCHK         equ	695	;# 
 11374   0002B8                     U2P1            equ	696	;# 
 11375   0002B8                     U2P1L           equ	696	;# 
 11376   0002B9                     U2P1H           equ	697	;# 
 11377   0002BA                     U2P2            equ	698	;# 
 11378   0002BA                     U2P2L           equ	698	;# 
 11379   0002BB                     U2P2H           equ	699	;# 
 11380   0002BC                     U2P3            equ	700	;# 
 11381   0002BC                     U2P3L           equ	700	;# 
 11382   0002BD                     U2P3H           equ	701	;# 
 11383   0002BE                     U2CON0          equ	702	;# 
 11384   0002BF                     U2CON1          equ	703	;# 
 11385   0002C0                     U2CON2          equ	704	;# 
 11386   0002C1                     U2BRG           equ	705	;# 
 11387   0002C1                     U2BRGL          equ	705	;# 
 11388   0002C2                     U2BRGH          equ	706	;# 
 11389   0002C3                     U2FIFO          equ	707	;# 
 11390   0002C4                     U2UIR           equ	708	;# 
 11391   0002C5                     U2ERRIR         equ	709	;# 
 11392   0002C6                     U2ERRIE         equ	710	;# 
 11393   0002C7                     U3RXB           equ	711	;# 
 11394   0002C7                     U3RXBL          equ	711	;# 
 11395   0002C9                     U3TXB           equ	713	;# 
 11396   0002C9                     U3TXBL          equ	713	;# 
 11397   0002CB                     U3P1            equ	715	;# 
 11398   0002CB                     U3P1L           equ	715	;# 
 11399   0002CD                     U3P2            equ	717	;# 
 11400   0002CD                     U3P2L           equ	717	;# 
 11401   0002CF                     U3P3            equ	719	;# 
 11402   0002CF                     U3P3L           equ	719	;# 
 11403   0002D1                     U3CON0          equ	721	;# 
 11404   0002D2                     U3CON1          equ	722	;# 
 11405   0002D3                     U3CON2          equ	723	;# 
 11406   0002D4                     U3BRG           equ	724	;# 
 11407   0002D4                     U3BRGL          equ	724	;# 
 11408   0002D5                     U3BRGH          equ	725	;# 
 11409   0002D6                     U3FIFO          equ	726	;# 
 11410   0002D7                     U3UIR           equ	727	;# 
 11411   0002D8                     U3ERRIR         equ	728	;# 
 11412   0002D9                     U3ERRIE         equ	729	;# 
 11413   0002DA                     U4RXB           equ	730	;# 
 11414   0002DA                     U4RXBL          equ	730	;# 
 11415   0002DC                     U4TXB           equ	732	;# 
 11416   0002DC                     U4TXBL          equ	732	;# 
 11417   0002DE                     U4P1            equ	734	;# 
 11418   0002DE                     U4P1L           equ	734	;# 
 11419   0002E0                     U4P2            equ	736	;# 
 11420   0002E0                     U4P2L           equ	736	;# 
 11421   0002E2                     U4P3            equ	738	;# 
 11422   0002E2                     U4P3L           equ	738	;# 
 11423   0002E4                     U4CON0          equ	740	;# 
 11424   0002E5                     U4CON1          equ	741	;# 
 11425   0002E6                     U4CON2          equ	742	;# 
 11426   0002E7                     U4BRG           equ	743	;# 
 11427   0002E7                     U4BRGL          equ	743	;# 
 11428   0002E8                     U4BRGH          equ	744	;# 
 11429   0002E9                     U4FIFO          equ	745	;# 
 11430   0002EA                     U4UIR           equ	746	;# 
 11431   0002EB                     U4ERRIR         equ	747	;# 
 11432   0002EC                     U4ERRIE         equ	748	;# 
 11433   0002ED                     U5RXB           equ	749	;# 
 11434   0002ED                     U5RXBL          equ	749	;# 
 11435   0002EF                     U5TXB           equ	751	;# 
 11436   0002EF                     U5TXBL          equ	751	;# 
 11437   0002F1                     U5P1            equ	753	;# 
 11438   0002F1                     U5P1L           equ	753	;# 
 11439   0002F3                     U5P2            equ	755	;# 
 11440   0002F3                     U5P2L           equ	755	;# 
 11441   0002F5                     U5P3            equ	757	;# 
 11442   0002F5                     U5P3L           equ	757	;# 
 11443   0002F7                     U5CON0          equ	759	;# 
 11444   0002F8                     U5CON1          equ	760	;# 
 11445   0002F9                     U5CON2          equ	761	;# 
 11446   0002FA                     U5BRG           equ	762	;# 
 11447   0002FA                     U5BRGL          equ	762	;# 
 11448   0002FB                     U5BRGH          equ	763	;# 
 11449   0002FC                     U5FIFO          equ	764	;# 
 11450   0002FD                     U5UIR           equ	765	;# 
 11451   0002FE                     U5ERRIR         equ	766	;# 
 11452   0002FF                     U5ERRIE         equ	767	;# 
 11453   000300                     SMT1TMR         equ	768	;# 
 11454   000300                     SMT1TMRL        equ	768	;# 
 11455   000301                     SMT1TMRH        equ	769	;# 
 11456   000302                     SMT1TMRU        equ	770	;# 
 11457   000303                     SMT1CPR         equ	771	;# 
 11458   000303                     SMT1CPRL        equ	771	;# 
 11459   000304                     SMT1CPRH        equ	772	;# 
 11460   000305                     SMT1CPRU        equ	773	;# 
 11461   000306                     SMT1CPW         equ	774	;# 
 11462   000306                     SMT1CPWL        equ	774	;# 
 11463   000307                     SMT1CPWH        equ	775	;# 
 11464   000308                     SMT1CPWU        equ	776	;# 
 11465   000309                     SMT1PR          equ	777	;# 
 11466   000309                     SMT1PRL         equ	777	;# 
 11467   00030A                     SMT1PRH         equ	778	;# 
 11468   00030B                     SMT1PRU         equ	779	;# 
 11469   00030C                     SMT1CON0        equ	780	;# 
 11470   00030D                     SMT1CON1        equ	781	;# 
 11471   00030E                     SMT1STAT        equ	782	;# 
 11472   00030F                     SMT1CLK         equ	783	;# 
 11473   000310                     SMT1SIG         equ	784	;# 
 11474   000311                     SMT1WIN         equ	785	;# 
 11475   000318                     TMR0L           equ	792	;# 
 11476   000318                     TMR0            equ	792	;# 
 11477   000319                     TMR0H           equ	793	;# 
 11478   000319                     PR0             equ	793	;# 
 11479   00031A                     T0CON0          equ	794	;# 
 11480   00031B                     T0CON1          equ	795	;# 
 11481   00031C                     TMR1            equ	796	;# 
 11482   00031C                     TMR1L           equ	796	;# 
 11483   00031D                     TMR1H           equ	797	;# 
 11484   00031E                     T1CON           equ	798	;# 
 11485   00031E                     TMR1CON         equ	798	;# 
 11486   00031F                     T1GCON          equ	799	;# 
 11487   00031F                     TMR1GCON        equ	799	;# 
 11488   000320                     T1GATE          equ	800	;# 
 11489   000320                     TMR1GATE        equ	800	;# 
 11490   000321                     T1CLK           equ	801	;# 
 11491   000321                     TMR1CLK         equ	801	;# 
 11492   000321                     PR1             equ	801	;# 
 11493   000322                     T2TMR           equ	802	;# 
 11494   000322                     TMR2            equ	802	;# 
 11495   000323                     T2PR            equ	803	;# 
 11496   000323                     PR2             equ	803	;# 
 11497   000324                     T2CON           equ	804	;# 
 11498   000325                     T2HLT           equ	805	;# 
 11499   000326                     T2CLKCON        equ	806	;# 
 11500   000326                     T2CLK           equ	806	;# 
 11501   000327                     T2RST           equ	807	;# 
 11502   000328                     TMR3            equ	808	;# 
 11503   000328                     TMR3L           equ	808	;# 
 11504   000329                     TMR3H           equ	809	;# 
 11505   00032A                     T3CON           equ	810	;# 
 11506   00032A                     TMR3CON         equ	810	;# 
 11507   00032B                     T3GCON          equ	811	;# 
 11508   00032B                     TMR3GCON        equ	811	;# 
 11509   00032C                     T3GATE          equ	812	;# 
 11510   00032C                     TMR3GATE        equ	812	;# 
 11511   00032D                     T3CLK           equ	813	;# 
 11512   00032D                     TMR3CLK         equ	813	;# 
 11513   00032D                     PR3             equ	813	;# 
 11514   00032E                     T4TMR           equ	814	;# 
 11515   00032E                     TMR4            equ	814	;# 
 11516   00032F                     T4PR            equ	815	;# 
 11517   00032F                     PR4             equ	815	;# 
 11518   000330                     T4CON           equ	816	;# 
 11519   000331                     T4HLT           equ	817	;# 
 11520   000332                     T4CLKCON        equ	818	;# 
 11521   000332                     T4CLK           equ	818	;# 
 11522   000333                     T4RST           equ	819	;# 
 11523   000334                     TMR5            equ	820	;# 
 11524   000334                     TMR5L           equ	820	;# 
 11525   000335                     TMR5H           equ	821	;# 
 11526   000336                     T5CON           equ	822	;# 
 11527   000336                     TMR5CON         equ	822	;# 
 11528   000337                     T5GCON          equ	823	;# 
 11529   000337                     TMR5GCON        equ	823	;# 
 11530   000338                     T5GATE          equ	824	;# 
 11531   000338                     TMR5GATE        equ	824	;# 
 11532   000339                     T5CLK           equ	825	;# 
 11533   000339                     TMR5CLK         equ	825	;# 
 11534   000339                     PR5             equ	825	;# 
 11535   00033A                     T6TMR           equ	826	;# 
 11536   00033A                     TMR6            equ	826	;# 
 11537   00033B                     T6PR            equ	827	;# 
 11538   00033B                     PR6             equ	827	;# 
 11539   00033C                     T6CON           equ	828	;# 
 11540   00033D                     T6HLT           equ	829	;# 
 11541   00033E                     T6CLKCON        equ	830	;# 
 11542   00033E                     T6CLK           equ	830	;# 
 11543   00033F                     T6RST           equ	831	;# 
 11544   000340                     CCPR1           equ	832	;# 
 11545   000340                     CCPR1L          equ	832	;# 
 11546   000341                     CCPR1H          equ	833	;# 
 11547   000342                     CCP1CON         equ	834	;# 
 11548   000343                     CCP1CAP         equ	835	;# 
 11549   000344                     CCPR2           equ	836	;# 
 11550   000344                     CCPR2L          equ	836	;# 
 11551   000345                     CCPR2H          equ	837	;# 
 11552   000346                     CCP2CON         equ	838	;# 
 11553   000347                     CCP2CAP         equ	839	;# 
 11554   000348                     CCPR3           equ	840	;# 
 11555   000348                     CCPR3L          equ	840	;# 
 11556   000349                     CCPR3H          equ	841	;# 
 11557   00034A                     CCP3CON         equ	842	;# 
 11558   00034B                     CCP3CAP         equ	843	;# 
 11559   00034C                     CCPTMRS0        equ	844	;# 
 11560   00034F                     CRCDATA         equ	847	;# 
 11561   00034F                     CRCDATAL        equ	847	;# 
 11562   000350                     CRCDATAH        equ	848	;# 
 11563   000351                     CRCDATAU        equ	849	;# 
 11564   000352                     CRCDATAT        equ	850	;# 
 11565   000353                     CRCOUT          equ	851	;# 
 11566   000353                     CRCSHFT         equ	851	;# 
 11567   000353                     CRCXOR          equ	851	;# 
 11568   000353                     CRCOUTL         equ	851	;# 
 11569   000353                     CRCSHFTL        equ	851	;# 
 11570   000353                     CRCSHIFTL       equ	851	;# 
 11571   000353                     CRCXORL         equ	851	;# 
 11572   000354                     CRCOUTH         equ	852	;# 
 11573   000354                     CRCSHFTH        equ	852	;# 
 11574   000354                     CRCSHIFTH       equ	852	;# 
 11575   000354                     CRCXORH         equ	852	;# 
 11576   000355                     CRCOUTU         equ	853	;# 
 11577   000355                     CRCSHFTU        equ	853	;# 
 11578   000355                     CRCSHIFTU       equ	853	;# 
 11579   000355                     CRCXORU         equ	853	;# 
 11580   000356                     CRCOUTT         equ	854	;# 
 11581   000356                     CRCSHFTT        equ	854	;# 
 11582   000356                     CRCSHIFTT       equ	854	;# 
 11583   000356                     CRCXORT         equ	854	;# 
 11584   000357                     CRCCON0         equ	855	;# 
 11585   000358                     CRCCON1         equ	856	;# 
 11586   000359                     CRCCON2         equ	857	;# 
 11587   00035A                     SCANLADR        equ	858	;# 
 11588   00035A                     SCANLADRL       equ	858	;# 
 11589   00035B                     SCANLADRH       equ	859	;# 
 11590   00035C                     SCANLADRU       equ	860	;# 
 11591   00035D                     SCANHADR        equ	861	;# 
 11592   00035D                     SCANHADRL       equ	861	;# 
 11593   00035E                     SCANHADRH       equ	862	;# 
 11594   00035F                     SCANHADRU       equ	863	;# 
 11595   000360                     SCANCON0        equ	864	;# 
 11596   000361                     SCANTRIG        equ	865	;# 
 11597   000362                     IPR0            equ	866	;# 
 11598   000363                     IPR1            equ	867	;# 
 11599   000364                     IPR2            equ	868	;# 
 11600   000365                     IPR3            equ	869	;# 
 11601   000366                     IPR4            equ	870	;# 
 11602   000367                     IPR5            equ	871	;# 
 11603   000368                     IPR6            equ	872	;# 
 11604   000369                     IPR7            equ	873	;# 
 11605   00036A                     IPR8            equ	874	;# 
 11606   00036B                     IPR9            equ	875	;# 
 11607   00036C                     IPR10           equ	876	;# 
 11608   00036D                     IPR11           equ	877	;# 
 11609   00036E                     IPR12           equ	878	;# 
 11610   00036F                     IPR13           equ	879	;# 
 11611   000370                     IPR14           equ	880	;# 
 11612   000371                     IPR15           equ	881	;# 
 11613   000373                     STATUS_CSHAD    equ	883	;# 
 11614   000374                     WREG_CSHAD      equ	884	;# 
 11615   000375                     BSR_CSHAD       equ	885	;# 
 11616   000376                     SHADCON         equ	886	;# 
 11617   000377                     STATUS_SHAD     equ	887	;# 
 11618   000378                     WREG_SHAD       equ	888	;# 
 11619   000379                     BSR_SHAD        equ	889	;# 
 11620   00037A                     PCLATH_SHAD     equ	890	;# 
 11621   00037B                     PCLATU_SHAD     equ	891	;# 
 11622   00037C                     FSR0SH          equ	892	;# 
 11623   00037C                     FSR0L_SHAD      equ	892	;# 
 11624   00037D                     FSR0H_SHAD      equ	893	;# 
 11625   00037E                     FSR1SH          equ	894	;# 
 11626   00037E                     FSR1L_SHAD      equ	894	;# 
 11627   00037F                     FSR1H_SHAD      equ	895	;# 
 11628   000380                     FSR2SH          equ	896	;# 
 11629   000380                     FSR2L_SHAD      equ	896	;# 
 11630   000381                     FSR2H_SHAD      equ	897	;# 
 11631   000382                     PRODSH          equ	898	;# 
 11632   000382                     PRODL_SHAD      equ	898	;# 
 11633   000383                     PRODH_SHAD      equ	899	;# 
 11634   000387                     TU16ACON0       equ	903	;# 
 11635   000388                     TU16ACON1       equ	904	;# 
 11636   000389                     TU16AHLT        equ	905	;# 
 11637   00038A                     TU16APS         equ	906	;# 
 11638   00038B                     TU16ATMR        equ	907	;# 
 11639   00038B                     TU16ACR         equ	907	;# 
 11640   00038B                     TU16ATMRL       equ	907	;# 
 11641   00038B                     TU16ACRL        equ	907	;# 
 11642   00038C                     TU16ATMRH       equ	908	;# 
 11643   00038C                     TU16ACRH        equ	908	;# 
 11644   00038D                     TU16APR         equ	909	;# 
 11645   00038D                     TU16APRL        equ	909	;# 
 11646   00038E                     TU16APRH        equ	910	;# 
 11647   00038F                     TU16ACLK        equ	911	;# 
 11648   000390                     TU16AERS        equ	912	;# 
 11649   000393                     TU16BCON0       equ	915	;# 
 11650   000394                     TU16BCON1       equ	916	;# 
 11651   000395                     TU16BHLT        equ	917	;# 
 11652   000396                     TU16BPS         equ	918	;# 
 11653   000397                     TU16BTMR        equ	919	;# 
 11654   000397                     TU16BCR         equ	919	;# 
 11655   000397                     TU16BTMRL       equ	919	;# 
 11656   000397                     TU16BCRL        equ	919	;# 
 11657   000398                     TU16BTMRH       equ	920	;# 
 11658   000398                     TU16BCRH        equ	920	;# 
 11659   000399                     TU16BPR         equ	921	;# 
 11660   000399                     TU16BPRL        equ	921	;# 
 11661   00039A                     TU16BPRH        equ	922	;# 
 11662   00039B                     TU16BCLK        equ	923	;# 
 11663   00039C                     TU16BERS        equ	924	;# 
 11664   0003BB                     TUCHAIN         equ	955	;# 
 11665   0003BC                     CWG1CLK         equ	956	;# 
 11666   0003BC                     CWG1CLKCON      equ	956	;# 
 11667   0003BD                     CWG1ISM         equ	957	;# 
 11668   0003BE                     CWG1DBR         equ	958	;# 
 11669   0003BF                     CWG1DBF         equ	959	;# 
 11670   0003C0                     CWG1CON0        equ	960	;# 
 11671   0003C1                     CWG1CON1        equ	961	;# 
 11672   0003C2                     CWG1AS0         equ	962	;# 
 11673   0003C3                     CWG1AS1         equ	963	;# 
 11674   0003C4                     CWG1STR         equ	964	;# 
 11675   0003C5                     CWG2CLK         equ	965	;# 
 11676   0003C5                     CWG2CLKCON      equ	965	;# 
 11677   0003C6                     CWG2ISM         equ	966	;# 
 11678   0003C7                     CWG2DBR         equ	967	;# 
 11679   0003C8                     CWG2DBF         equ	968	;# 
 11680   0003C9                     CWG2CON0        equ	969	;# 
 11681   0003CA                     CWG2CON1        equ	970	;# 
 11682   0003CB                     CWG2AS0         equ	971	;# 
 11683   0003CC                     CWG2AS1         equ	972	;# 
 11684   0003CD                     CWG2STR         equ	973	;# 
 11685   0003CE                     CWG3CLK         equ	974	;# 
 11686   0003CE                     CWG3CLKCON      equ	974	;# 
 11687   0003CF                     CWG3ISM         equ	975	;# 
 11688   0003D0                     CWG3DBR         equ	976	;# 
 11689   0003D1                     CWG3DBF         equ	977	;# 
 11690   0003D2                     CWG3CON0        equ	978	;# 
 11691   0003D3                     CWG3CON1        equ	979	;# 
 11692   0003D4                     CWG3AS0         equ	980	;# 
 11693   0003D5                     CWG3AS1         equ	981	;# 
 11694   0003D6                     CWG3STR         equ	982	;# 
 11695   0003D7                     FVRCON          equ	983	;# 
 11696   0003D8                     ADCPCON         equ	984	;# 
 11697   0003D8                     ADCP            equ	984	;# 
 11698   0003D9                     ADLTH           equ	985	;# 
 11699   0003D9                     ADLTHL          equ	985	;# 
 11700   0003DA                     ADLTHH          equ	986	;# 
 11701   0003DB                     ADUTH           equ	987	;# 
 11702   0003DB                     ADUTHL          equ	987	;# 
 11703   0003DC                     ADUTHH          equ	988	;# 
 11704   0003DD                     ADERR           equ	989	;# 
 11705   0003DD                     ADERRL          equ	989	;# 
 11706   0003DE                     ADERRH          equ	990	;# 
 11707   0003DF                     ADSTPT          equ	991	;# 
 11708   0003DF                     ADSTPTL         equ	991	;# 
 11709   0003E0                     ADSTPTH         equ	992	;# 
 11710   0003E1                     ADFLTR          equ	993	;# 
 11711   0003E1                     ADFLTRL         equ	993	;# 
 11712   0003E2                     ADFLTRH         equ	994	;# 
 11713   0003E3                     ADACC           equ	995	;# 
 11714   0003E3                     ADACCL          equ	995	;# 
 11715   0003E4                     ADACCH          equ	996	;# 
 11716   0003E5                     ADACCU          equ	997	;# 
 11717   0003E6                     ADCNT           equ	998	;# 
 11718   0003E7                     ADRPT           equ	999	;# 
 11719   0003E8                     ADPREV          equ	1000	;# 
 11720   0003E8                     ADPREVL         equ	1000	;# 
 11721   0003E9                     ADPREVH         equ	1001	;# 
 11722   0003EA                     ADRES           equ	1002	;# 
 11723   0003EA                     ADRESL          equ	1002	;# 
 11724   0003EB                     ADRESH          equ	1003	;# 
 11725   0003EC                     ADPCH           equ	1004	;# 
 11726   0003EE                     ADACQ           equ	1006	;# 
 11727   0003EE                     ADACQL          equ	1006	;# 
 11728   0003EF                     ADACQH          equ	1007	;# 
 11729   0003F0                     ADCAP           equ	1008	;# 
 11730   0003F1                     ADPRE           equ	1009	;# 
 11731   0003F1                     ADPREL          equ	1009	;# 
 11732   0003F2                     ADPREH          equ	1010	;# 
 11733   0003F3                     ADCON0          equ	1011	;# 
 11734   0003F4                     ADCON1          equ	1012	;# 
 11735   0003F5                     ADCON2          equ	1013	;# 
 11736   0003F6                     ADCON3          equ	1014	;# 
 11737   0003F7                     ADSTAT          equ	1015	;# 
 11738   0003F8                     ADREF           equ	1016	;# 
 11739   0003F9                     ADACT           equ	1017	;# 
 11740   0003FA                     ADCLK           equ	1018	;# 
 11741   0003FB                     ADCTX           equ	1019	;# 
 11742   0003FC                     ADCSEL1         equ	1020	;# 
 11743   0003FD                     ADCSEL2         equ	1021	;# 
 11744   0003FE                     ADCSEL3         equ	1022	;# 
 11745   0003FF                     ADCSEL4         equ	1023	;# 
 11746   000400                     ANSELA          equ	1024	;# 
 11747   000401                     WPUA            equ	1025	;# 
 11748   000402                     ODCONA          equ	1026	;# 
 11749   000403                     SLRCONA         equ	1027	;# 
 11750   000404                     INLVLA          equ	1028	;# 
 11751   000405                     IOCAP           equ	1029	;# 
 11752   000406                     IOCAN           equ	1030	;# 
 11753   000407                     IOCAF           equ	1031	;# 
 11754   000408                     ANSELB          equ	1032	;# 
 11755   000409                     WPUB            equ	1033	;# 
 11756   00040A                     ODCONB          equ	1034	;# 
 11757   00040B                     SLRCONB         equ	1035	;# 
 11758   00040C                     INLVLB          equ	1036	;# 
 11759   00040D                     IOCBP           equ	1037	;# 
 11760   00040E                     IOCBN           equ	1038	;# 
 11761   00040F                     IOCBF           equ	1039	;# 
 11762   000410                     ANSELC          equ	1040	;# 
 11763   000411                     WPUC            equ	1041	;# 
 11764   000412                     ODCONC          equ	1042	;# 
 11765   000413                     SLRCONC         equ	1043	;# 
 11766   000414                     INLVLC          equ	1044	;# 
 11767   000415                     IOCCP           equ	1045	;# 
 11768   000416                     IOCCN           equ	1046	;# 
 11769   000417                     IOCCF           equ	1047	;# 
 11770   000421                     WPUE            equ	1057	;# 
 11771   000424                     INLVLE          equ	1060	;# 
 11772   000425                     IOCEP           equ	1061	;# 
 11773   000426                     IOCEN           equ	1062	;# 
 11774   000427                     IOCEF           equ	1063	;# 
 11775   000440                     NCO1ACC         equ	1088	;# 
 11776   000440                     NCO1ACCL        equ	1088	;# 
 11777   000441                     NCO1ACCH        equ	1089	;# 
 11778   000442                     NCO1ACCU        equ	1090	;# 
 11779   000443                     NCO1INC         equ	1091	;# 
 11780   000443                     NCO1INCL        equ	1091	;# 
 11781   000444                     NCO1INCH        equ	1092	;# 
 11782   000445                     NCO1INCU        equ	1093	;# 
 11783   000446                     NCO1CON         equ	1094	;# 
 11784   000447                     NCO1CLK         equ	1095	;# 
 11785   000448                     NCO2ACC         equ	1096	;# 
 11786   000448                     NCO2ACCL        equ	1096	;# 
 11787   000449                     NCO2ACCH        equ	1097	;# 
 11788   00044A                     NCO2ACCU        equ	1098	;# 
 11789   00044B                     NCO2INC         equ	1099	;# 
 11790   00044B                     NCO2INCL        equ	1099	;# 
 11791   00044C                     NCO2INCH        equ	1100	;# 
 11792   00044D                     NCO2INCU        equ	1101	;# 
 11793   00044E                     NCO2CON         equ	1102	;# 
 11794   00044F                     NCO2CLK         equ	1103	;# 
 11795   000450                     NCO3ACC         equ	1104	;# 
 11796   000450                     NCO3ACCL        equ	1104	;# 
 11797   000451                     NCO3ACCH        equ	1105	;# 
 11798   000452                     NCO3ACCU        equ	1106	;# 
 11799   000453                     NCO3INC         equ	1107	;# 
 11800   000453                     NCO3INCL        equ	1107	;# 
 11801   000454                     NCO3INCH        equ	1108	;# 
 11802   000455                     NCO3INCU        equ	1109	;# 
 11803   000456                     NCO3CON         equ	1110	;# 
 11804   000457                     NCO3CLK         equ	1111	;# 
 11805   000458                     FSCMCON         equ	1112	;# 
 11806   000459                     IVTLOCK         equ	1113	;# 
 11807   00045A                     IVTAD           equ	1114	;# 
 11808   00045A                     IVTADL          equ	1114	;# 
 11809   00045B                     IVTADH          equ	1115	;# 
 11810   00045C                     IVTADU          equ	1116	;# 
 11811   00045D                     IVTBASE         equ	1117	;# 
 11812   00045D                     IVTBASEL        equ	1117	;# 
 11813   00045E                     IVTBASEH        equ	1118	;# 
 11814   00045F                     IVTBASEU        equ	1119	;# 
 11815   000460                     PWM1ERS         equ	1120	;# 
 11816   000461                     PWM1CLK         equ	1121	;# 
 11817   000462                     PWM1LDS         equ	1122	;# 
 11818   000463                     PWM1PR          equ	1123	;# 
 11819   000463                     PWM1PRL         equ	1123	;# 
 11820   000464                     PWM1PRH         equ	1124	;# 
 11821   000465                     PWM1CPRE        equ	1125	;# 
 11822   000466                     PWM1PIPOS       equ	1126	;# 
 11823   000467                     PWM1GIR         equ	1127	;# 
 11824   000468                     PWM1GIE         equ	1128	;# 
 11825   000469                     PWM1CON         equ	1129	;# 
 11826   00046A                     PWM1S1CFG       equ	1130	;# 
 11827   00046B                     PWM1S1P1        equ	1131	;# 
 11828   00046B                     PWM1S1P1L       equ	1131	;# 
 11829   00046C                     PWM1S1P1H       equ	1132	;# 
 11830   00046D                     PWM1S1P2        equ	1133	;# 
 11831   00046D                     PWM1S1P2L       equ	1133	;# 
 11832   00046E                     PWM1S1P2H       equ	1134	;# 
 11833   00046F                     PWM2ERS         equ	1135	;# 
 11834   000470                     PWM2CLK         equ	1136	;# 
 11835   000471                     PWM2LDS         equ	1137	;# 
 11836   000472                     PWM2PR          equ	1138	;# 
 11837   000472                     PWM2PRL         equ	1138	;# 
 11838   000473                     PWM2PRH         equ	1139	;# 
 11839   000474                     PWM2CPRE        equ	1140	;# 
 11840   000475                     PWM2PIPOS       equ	1141	;# 
 11841   000476                     PWM2GIR         equ	1142	;# 
 11842   000477                     PWM2GIE         equ	1143	;# 
 11843   000478                     PWM2CON         equ	1144	;# 
 11844   000479                     PWM2S1CFG       equ	1145	;# 
 11845   00047A                     PWM2S1P1        equ	1146	;# 
 11846   00047A                     PWM2S1P1L       equ	1146	;# 
 11847   00047B                     PWM2S1P1H       equ	1147	;# 
 11848   00047C                     PWM2S1P2        equ	1148	;# 
 11849   00047C                     PWM2S1P2L       equ	1148	;# 
 11850   00047D                     PWM2S1P2H       equ	1149	;# 
 11851   00047E                     PWM3ERS         equ	1150	;# 
 11852   00047F                     PWM3CLK         equ	1151	;# 
 11853   000480                     PWM3LDS         equ	1152	;# 
 11854   000481                     PWM3PR          equ	1153	;# 
 11855   000481                     PWM3PRL         equ	1153	;# 
 11856   000482                     PWM3PRH         equ	1154	;# 
 11857   000483                     PWM3CPRE        equ	1155	;# 
 11858   000484                     PWM3PIPOS       equ	1156	;# 
 11859   000485                     PWM3GIR         equ	1157	;# 
 11860   000486                     PWM3GIE         equ	1158	;# 
 11861   000487                     PWM3CON         equ	1159	;# 
 11862   000488                     PWM3S1CFG       equ	1160	;# 
 11863   000489                     PWM3S1P1        equ	1161	;# 
 11864   000489                     PWM3S1P1L       equ	1161	;# 
 11865   00048A                     PWM3S1P1H       equ	1162	;# 
 11866   00048B                     PWM3S1P2        equ	1163	;# 
 11867   00048B                     PWM3S1P2L       equ	1163	;# 
 11868   00048C                     PWM3S1P2H       equ	1164	;# 
 11869   00048D                     PWM4ERS         equ	1165	;# 
 11870   00048E                     PWM4CLK         equ	1166	;# 
 11871   00048F                     PWM4LDS         equ	1167	;# 
 11872   000490                     PWM4PR          equ	1168	;# 
 11873   000490                     PWM4PRL         equ	1168	;# 
 11874   000491                     PWM4PRH         equ	1169	;# 
 11875   000492                     PWM4CPRE        equ	1170	;# 
 11876   000493                     PWM4PIPOS       equ	1171	;# 
 11877   000494                     PWM4GIR         equ	1172	;# 
 11878   000495                     PWM4GIE         equ	1173	;# 
 11879   000496                     PWM4CON         equ	1174	;# 
 11880   000497                     PWM4S1CFG       equ	1175	;# 
 11881   000498                     PWM4S1P1        equ	1176	;# 
 11882   000498                     PWM4S1P1L       equ	1176	;# 
 11883   000499                     PWM4S1P1H       equ	1177	;# 
 11884   00049A                     PWM4S1P2        equ	1178	;# 
 11885   00049A                     PWM4S1P2L       equ	1178	;# 
 11886   00049B                     PWM4S1P2H       equ	1179	;# 
 11887   00049C                     PWMLOAD         equ	1180	;# 
 11888   00049D                     PWMEN           equ	1181	;# 
 11889   00049E                     PIE0            equ	1182	;# 
 11890   00049F                     PIE1            equ	1183	;# 
 11891   0004A0                     PIE2            equ	1184	;# 
 11892   0004A1                     PIE3            equ	1185	;# 
 11893   0004A2                     PIE4            equ	1186	;# 
 11894   0004A3                     PIE5            equ	1187	;# 
 11895   0004A4                     PIE6            equ	1188	;# 
 11896   0004A5                     PIE7            equ	1189	;# 
 11897   0004A6                     PIE8            equ	1190	;# 
 11898   0004A7                     PIE9            equ	1191	;# 
 11899   0004A8                     PIE10           equ	1192	;# 
 11900   0004A9                     PIE11           equ	1193	;# 
 11901   0004AA                     PIE12           equ	1194	;# 
 11902   0004AB                     PIE13           equ	1195	;# 
 11903   0004AC                     PIE14           equ	1196	;# 
 11904   0004AD                     PIE15           equ	1197	;# 
 11905   0004AE                     PIR0            equ	1198	;# 
 11906   0004AF                     PIR1            equ	1199	;# 
 11907   0004B0                     PIR2            equ	1200	;# 
 11908   0004B1                     PIR3            equ	1201	;# 
 11909   0004B2                     PIR4            equ	1202	;# 
 11910   0004B3                     PIR5            equ	1203	;# 
 11911   0004B4                     PIR6            equ	1204	;# 
 11912   0004B5                     PIR7            equ	1205	;# 
 11913   0004B6                     PIR8            equ	1206	;# 
 11914   0004B7                     PIR9            equ	1207	;# 
 11915   0004B8                     PIR10           equ	1208	;# 
 11916   0004B9                     PIR11           equ	1209	;# 
 11917   0004BA                     PIR12           equ	1210	;# 
 11918   0004BB                     PIR13           equ	1211	;# 
 11919   0004BC                     PIR14           equ	1212	;# 
 11920   0004BD                     PIR15           equ	1213	;# 
 11921   0004BE                     LATA            equ	1214	;# 
 11922   0004BF                     LATB            equ	1215	;# 
 11923   0004C0                     LATC            equ	1216	;# 
 11924   0004C6                     TRISA           equ	1222	;# 
 11925   0004C7                     TRISB           equ	1223	;# 
 11926   0004C8                     TRISC           equ	1224	;# 
 11927   0004CA                     TRISE           equ	1226	;# 
 11928   0004CE                     PORTA           equ	1230	;# 
 11929   0004CF                     PORTB           equ	1231	;# 
 11930   0004D0                     PORTC           equ	1232	;# 
 11931   0004D2                     PORTE           equ	1234	;# 
 11932   0004D6                     INTCON0         equ	1238	;# 
 11933   0004D7                     INTCON1         equ	1239	;# 
 11934   0004D8                     STATUS          equ	1240	;# 
 11935   0004D9                     FSR2            equ	1241	;# 
 11936   0004D9                     FSR2L           equ	1241	;# 
 11937   0004DA                     FSR2H           equ	1242	;# 
 11938   0004DB                     PLUSW2          equ	1243	;# 
 11939   0004DC                     PREINC2         equ	1244	;# 
 11940   0004DD                     POSTDEC2        equ	1245	;# 
 11941   0004DE                     POSTINC2        equ	1246	;# 
 11942   0004DF                     INDF2           equ	1247	;# 
 11943   0004E0                     BSR             equ	1248	;# 
 11944   0004E1                     FSR1            equ	1249	;# 
 11945   0004E1                     FSR1L           equ	1249	;# 
 11946   0004E2                     FSR1H           equ	1250	;# 
 11947   0004E3                     PLUSW1          equ	1251	;# 
 11948   0004E4                     PREINC1         equ	1252	;# 
 11949   0004E5                     POSTDEC1        equ	1253	;# 
 11950   0004E6                     POSTINC1        equ	1254	;# 
 11951   0004E7                     INDF1           equ	1255	;# 
 11952   0004E8                     WREG            equ	1256	;# 
 11953   0004E9                     FSR0            equ	1257	;# 
 11954   0004E9                     FSR0L           equ	1257	;# 
 11955   0004EA                     FSR0H           equ	1258	;# 
 11956   0004EB                     PLUSW0          equ	1259	;# 
 11957   0004EC                     PREINC0         equ	1260	;# 
 11958   0004ED                     POSTDEC0        equ	1261	;# 
 11959   0004EE                     POSTINC0        equ	1262	;# 
 11960   0004EF                     INDF0           equ	1263	;# 
 11961   0004F0                     PCON0           equ	1264	;# 
 11962   0004F1                     PCON1           equ	1265	;# 
 11963   0004F2                     CPUDOZE         equ	1266	;# 
 11964   0004F3                     PROD            equ	1267	;# 
 11965   0004F3                     PRODL           equ	1267	;# 
 11966   0004F4                     PRODH           equ	1268	;# 
 11967   0004F5                     TABLAT          equ	1269	;# 
 11968   0004F6                     TBLPTR          equ	1270	;# 
 11969   0004F6                     TBLPTRL         equ	1270	;# 
 11970   0004F7                     TBLPTRH         equ	1271	;# 
 11971   0004F8                     TBLPTRU         equ	1272	;# 
 11972   0004F9                     PCLAT           equ	1273	;# 
 11973   0004F9                     PCL             equ	1273	;# 
 11974   0004FA                     PCLATH          equ	1274	;# 
 11975   0004FB                     PCLATU          equ	1275	;# 
 11976   0004FC                     STKPTR          equ	1276	;# 
 11977   0004FD                     TOS             equ	1277	;# 
 11978   0004FD                     TOSL            equ	1277	;# 
 11979   0004FE                     TOSH            equ	1278	;# 
 11980   0004FF                     TOSU            equ	1279	;# 
 11981   000038                     BOOTREG         equ	56	;# 
 11982   000039                     CLKRCON         equ	57	;# 
 11983   00003A                     CLKRCLK         equ	58	;# 
 11984   000040                     NVMCON0         equ	64	;# 
 11985   000041                     NVMCON1         equ	65	;# 
 11986   000042                     NVMLOCK         equ	66	;# 
 11987   000043                     NVMADR          equ	67	;# 
 11988   000043                     NVMADRL         equ	67	;# 
 11989   000044                     NVMADRH         equ	68	;# 
 11990   000045                     NVMADRU         equ	69	;# 
 11991   000046                     NVMDAT          equ	70	;# 
 11992   000046                     NVMDATL         equ	70	;# 
 11993   000047                     NVMDATH         equ	71	;# 
 11994   000048                     VREGCON         equ	72	;# 
 11995   000049                     BORCON          equ	73	;# 
 11996   00004A                     HLVDCON0        equ	74	;# 
 11997   00004B                     HLVDCON1        equ	75	;# 
 11998   00004C                     ZCDCON          equ	76	;# 
 11999   000060                     PMD0            equ	96	;# 
 12000   000061                     PMD1            equ	97	;# 
 12001   000062                     PMD2            equ	98	;# 
 12002   000063                     PMD3            equ	99	;# 
 12003   000064                     PMD4            equ	100	;# 
 12004   000065                     PMD5            equ	101	;# 
 12005   000066                     PMD6            equ	102	;# 
 12006   000067                     PMD7            equ	103	;# 
 12007   000068                     PMD8            equ	104	;# 
 12008   00006A                     MD1CON0         equ	106	;# 
 12009   00006B                     MD1CON1         equ	107	;# 
 12010   00006C                     MD1SRC          equ	108	;# 
 12011   00006D                     MD1CARL         equ	109	;# 
 12012   00006E                     MD1CARH         equ	110	;# 
 12013   00006F                     CMOUT           equ	111	;# 
 12014   000070                     CM1CON0         equ	112	;# 
 12015   000071                     CM1CON1         equ	113	;# 
 12016   000072                     CM1NCH          equ	114	;# 
 12017   000073                     CM1PCH          equ	115	;# 
 12018   000074                     CM2CON0         equ	116	;# 
 12019   000075                     CM2CON1         equ	117	;# 
 12020   000076                     CM2NCH          equ	118	;# 
 12021   000077                     CM2PCH          equ	119	;# 
 12022   000078                     WDTCON0         equ	120	;# 
 12023   000079                     WDTCON1         equ	121	;# 
 12024   00007A                     WDTPSL          equ	122	;# 
 12025   00007B                     WDTPSH          equ	123	;# 
 12026   00007C                     WDTTMR          equ	124	;# 
 12027   00007D                     DAC1DAT         equ	125	;# 
 12028   00007D                     DAC1DATL        equ	125	;# 
 12029   00007F                     DAC1CON         equ	127	;# 
 12030   000080                     SPI1RXB         equ	128	;# 
 12031   000081                     SPI1TXB         equ	129	;# 
 12032   000082                     SPI1TCNT        equ	130	;# 
 12033   000082                     SPI1TCNTL       equ	130	;# 
 12034   000083                     SPI1TCNTH       equ	131	;# 
 12035   000084                     SPI1CON0        equ	132	;# 
 12036   000085                     SPI1CON1        equ	133	;# 
 12037   000086                     SPI1CON2        equ	134	;# 
 12038   000087                     SPI1STATUS      equ	135	;# 
 12039   000088                     SPI1TWIDTH      equ	136	;# 
 12040   000089                     SPI1BAUD        equ	137	;# 
 12041   00008A                     SPI1INTF        equ	138	;# 
 12042   00008B                     SPI1INTE        equ	139	;# 
 12043   00008C                     SPI1CLK         equ	140	;# 
 12044   00008D                     SPI2RXB         equ	141	;# 
 12045   00008E                     SPI2TXB         equ	142	;# 
 12046   00008F                     SPI2TCNT        equ	143	;# 
 12047   00008F                     SPI2TCNTL       equ	143	;# 
 12048   000090                     SPI2TCNTH       equ	144	;# 
 12049   000091                     SPI2CON0        equ	145	;# 
 12050   000092                     SPI2CON1        equ	146	;# 
 12051   000093                     SPI2CON2        equ	147	;# 
 12052   000094                     SPI2STATUS      equ	148	;# 
 12053   000095                     SPI2TWIDTH      equ	149	;# 
 12054   000096                     SPI2BAUD        equ	150	;# 
 12055   000097                     SPI2INTF        equ	151	;# 
 12056   000098                     SPI2INTE        equ	152	;# 
 12057   000099                     SPI2CLK         equ	153	;# 
 12058   0000AC                     ACTCON          equ	172	;# 
 12059   0000AD                     OSCCON1         equ	173	;# 
 12060   0000AE                     OSCCON2         equ	174	;# 
 12061   0000AF                     OSCCON3         equ	175	;# 
 12062   0000B0                     OSCTUNE         equ	176	;# 
 12063   0000B1                     OSCFRQ          equ	177	;# 
 12064   0000B1                     OSCFREQ         equ	177	;# 
 12065   0000B2                     OSCSTAT         equ	178	;# 
 12066   0000B2                     OSCSTAT1        equ	178	;# 
 12067   0000B3                     OSCEN           equ	179	;# 
 12068   0000B4                     PRLOCK          equ	180	;# 
 12069   0000B5                     SCANPR          equ	181	;# 
 12070   0000B6                     DMA1PR          equ	182	;# 
 12071   0000B7                     DMA2PR          equ	183	;# 
 12072   0000B8                     DMA3PR          equ	184	;# 
 12073   0000B9                     DMA4PR          equ	185	;# 
 12074   0000BA                     DMA5PR          equ	186	;# 
 12075   0000BB                     DMA6PR          equ	187	;# 
 12076   0000BC                     DMA7PR          equ	188	;# 
 12077   0000BD                     DMA8PR          equ	189	;# 
 12078   0000BE                     MAINPR          equ	190	;# 
 12079   0000BF                     ISRPR           equ	191	;# 
 12080   0000D4                     CLCDATA         equ	212	;# 
 12081   0000D5                     CLCSELECT       equ	213	;# 
 12082   0000D6                     CLCnCON         equ	214	;# 
 12083   0000D7                     CLCnPOL         equ	215	;# 
 12084   0000D8                     CLCnSEL0        equ	216	;# 
 12085   0000D9                     CLCnSEL1        equ	217	;# 
 12086   0000DA                     CLCnSEL2        equ	218	;# 
 12087   0000DB                     CLCnSEL3        equ	219	;# 
 12088   0000DC                     CLCnGLS0        equ	220	;# 
 12089   0000DD                     CLCnGLS1        equ	221	;# 
 12090   0000DE                     CLCnGLS2        equ	222	;# 
 12091   0000DF                     CLCnGLS3        equ	223	;# 
 12092   0000E8                     DMASELECT       equ	232	;# 
 12093   0000E9                     DMAnBUF         equ	233	;# 
 12094   0000EA                     DMAnDCNT        equ	234	;# 
 12095   0000EA                     DMAnDCNTL       equ	234	;# 
 12096   0000EB                     DMAnDCNTH       equ	235	;# 
 12097   0000EC                     DMAnDPTR        equ	236	;# 
 12098   0000EC                     DMAnDPTRL       equ	236	;# 
 12099   0000ED                     DMAnDPTRH       equ	237	;# 
 12100   0000EE                     DMAnDSZ         equ	238	;# 
 12101   0000EE                     DMAnDSZL        equ	238	;# 
 12102   0000EF                     DMAnDSZH        equ	239	;# 
 12103   0000F0                     DMAnDSA         equ	240	;# 
 12104   0000F0                     DMAnDSAL        equ	240	;# 
 12105   0000F1                     DMAnDSAH        equ	241	;# 
 12106   0000F2                     DMAnSCNT        equ	242	;# 
 12107   0000F2                     DMAnSCNTL       equ	242	;# 
 12108   0000F3                     DMAnSCNTH       equ	243	;# 
 12109   0000F4                     DMAnSPTR        equ	244	;# 
 12110   0000F4                     DMAnSPTRL       equ	244	;# 
 12111   0000F5                     DMAnSPTRH       equ	245	;# 
 12112   0000F6                     DMAnSPTRU       equ	246	;# 
 12113   0000F7                     DMAnSSZ         equ	247	;# 
 12114   0000F7                     DMAnSSZL        equ	247	;# 
 12115   0000F8                     DMAnSSZH        equ	248	;# 
 12116   0000F9                     DMAnSSA         equ	249	;# 
 12117   0000F9                     DMAnSSAL        equ	249	;# 
 12118   0000FA                     DMAnSSAH        equ	250	;# 
 12119   0000FB                     DMAnSSAU        equ	251	;# 
 12120   0000FC                     DMAnCON0        equ	252	;# 
 12121   0000FD                     DMAnCON1        equ	253	;# 
 12122   0000FE                     DMAnAIRQ        equ	254	;# 
 12123   0000FF                     DMAnSIRQ        equ	255	;# 
 12124   000100                     C1CONL          equ	256	;# 
 12125   000101                     C1CONH          equ	257	;# 
 12126   000102                     C1CONU          equ	258	;# 
 12127   000103                     C1CONT          equ	259	;# 
 12128   000104                     C1NBTCFGL       equ	260	;# 
 12129   000105                     C1NBTCFGH       equ	261	;# 
 12130   000106                     C1NBTCFGU       equ	262	;# 
 12131   000107                     C1NBTCFGT       equ	263	;# 
 12132   000108                     C1DBTCFGL       equ	264	;# 
 12133   000109                     C1DBTCFGH       equ	265	;# 
 12134   00010A                     C1DBTCFGU       equ	266	;# 
 12135   00010B                     C1DBTCFGT       equ	267	;# 
 12136   00010C                     C1TDCL          equ	268	;# 
 12137   00010D                     C1TDCH          equ	269	;# 
 12138   00010E                     C1TDCU          equ	270	;# 
 12139   000110                     C1TBC           equ	272	;# 
 12140   000110                     C1TBCL          equ	272	;# 
 12141   000111                     C1TBCH          equ	273	;# 
 12142   000112                     C1TBCU          equ	274	;# 
 12143   000113                     C1TBCT          equ	275	;# 
 12144   000114                     C1TSCONL        equ	276	;# 
 12145   000115                     C1TSCONH        equ	277	;# 
 12146   000116                     C1TSCONU        equ	278	;# 
 12147   000117                     C1TSCONT        equ	279	;# 
 12148   000118                     C1VECL          equ	280	;# 
 12149   000119                     C1VECH          equ	281	;# 
 12150   00011A                     C1VECU          equ	282	;# 
 12151   00011B                     C1VECT          equ	283	;# 
 12152   00011C                     C1INTL          equ	284	;# 
 12153   00011D                     C1INTH          equ	285	;# 
 12154   00011E                     C1INTU          equ	286	;# 
 12155   00011F                     C1INTT          equ	287	;# 
 12156   000120                     C1RXIF          equ	288	;# 
 12157   000120                     C1RXIFL         equ	288	;# 
 12158   000121                     C1RXIFH         equ	289	;# 
 12159   000122                     C1RXIFU         equ	290	;# 
 12160   000123                     C1RXIFT         equ	291	;# 
 12161   000124                     C1TXIF          equ	292	;# 
 12162   000124                     C1TXIFL         equ	292	;# 
 12163   000125                     C1TXIFH         equ	293	;# 
 12164   000126                     C1TXIFU         equ	294	;# 
 12165   000127                     C1TXIFT         equ	295	;# 
 12166   000128                     C1RXOVIF        equ	296	;# 
 12167   000128                     C1RXOVIFL       equ	296	;# 
 12168   000129                     C1RXOVIFH       equ	297	;# 
 12169   00012A                     C1RXOVIFU       equ	298	;# 
 12170   00012B                     C1RXOVIFT       equ	299	;# 
 12171   00012C                     C1TXATIF        equ	300	;# 
 12172   00012C                     C1TXATIFL       equ	300	;# 
 12173   00012D                     C1TXATIFH       equ	301	;# 
 12174   00012E                     C1TXATIFU       equ	302	;# 
 12175   00012F                     C1TXATIFT       equ	303	;# 
 12176   000130                     C1TXREQ         equ	304	;# 
 12177   000130                     C1TXREQL        equ	304	;# 
 12178   000131                     C1TXREQH        equ	305	;# 
 12179   000132                     C1TXREQU        equ	306	;# 
 12180   000133                     C1TXREQT        equ	307	;# 
 12181   000134                     C1TRECL         equ	308	;# 
 12182   000135                     C1TRECH         equ	309	;# 
 12183   000136                     C1TRECU         equ	310	;# 
 12184   000137                     C1TRECT         equ	311	;# 
 12185   000138                     C1BDIAG0L       equ	312	;# 
 12186   000139                     C1BDIAG0H       equ	313	;# 
 12187   00013C                     C1BDIAG1L       equ	316	;# 
 12188   00013D                     C1BDIAG1H       equ	317	;# 
 12189   00013E                     C1BDIAG1U       equ	318	;# 
 12190   00013F                     C1BDIAG1T       equ	319	;# 
 12191   000140                     C1TEFCONL       equ	320	;# 
 12192   000141                     C1TEFCONH       equ	321	;# 
 12193   000142                     C1TEFCONU       equ	322	;# 
 12194   000143                     C1TEFCONT       equ	323	;# 
 12195   000144                     C1TEFSTAL       equ	324	;# 
 12196   000145                     C1TEFSTAH       equ	325	;# 
 12197   000146                     C1TEFSTAU       equ	326	;# 
 12198   000147                     C1TEFSTAT       equ	327	;# 
 12199   000148                     C1TEFUA         equ	328	;# 
 12200   000148                     C1TEFUAL        equ	328	;# 
 12201   000149                     C1TEFUAH        equ	329	;# 
 12202   00014A                     C1TEFUAU        equ	330	;# 
 12203   00014B                     C1TEFUAT        equ	331	;# 
 12204   00014C                     C1FIFOBA        equ	332	;# 
 12205   00014C                     C1FIFOBAL       equ	332	;# 
 12206   00014D                     C1FIFOBAH       equ	333	;# 
 12207   00014E                     C1FIFOBAU       equ	334	;# 
 12208   00014F                     C1FIFOBAT       equ	335	;# 
 12209   000150                     C1TXQCONL       equ	336	;# 
 12210   000151                     C1TXQCONH       equ	337	;# 
 12211   000152                     C1TXQCONU       equ	338	;# 
 12212   000153                     C1TXQCONT       equ	339	;# 
 12213   000154                     C1TXQSTAL       equ	340	;# 
 12214   000155                     C1TXQSTAH       equ	341	;# 
 12215   000156                     C1TXQSTAU       equ	342	;# 
 12216   000157                     C1TXQSTAT       equ	343	;# 
 12217   000158                     C1TXQUA         equ	344	;# 
 12218   000158                     C1TXQUAL        equ	344	;# 
 12219   000159                     C1TXQUAH        equ	345	;# 
 12220   00015A                     C1TXQUAU        equ	346	;# 
 12221   00015B                     C1TXQUAT        equ	347	;# 
 12222   00015C                     C1FIFOCON1      equ	348	;# 
 12223   00015C                     C1FIFOCON1L     equ	348	;# 
 12224   00015D                     C1FIFOCON1H     equ	349	;# 
 12225   00015E                     C1FIFOCON1U     equ	350	;# 
 12226   00015F                     C1FIFOCON1T     equ	351	;# 
 12227   000160                     C1FIFOSTA1      equ	352	;# 
 12228   000160                     C1FIFOSTA1L     equ	352	;# 
 12229   000161                     C1FIFOSTA1H     equ	353	;# 
 12230   000162                     C1FIFOSTA1U     equ	354	;# 
 12231   000163                     C1FIFOSTA1T     equ	355	;# 
 12232   000164                     C1FIFOUA1       equ	356	;# 
 12233   000164                     C1FIFOUA1L      equ	356	;# 
 12234   000165                     C1FIFOUA1H      equ	357	;# 
 12235   000166                     C1FIFOUA1U      equ	358	;# 
 12236   000167                     C1FIFOUA1T      equ	359	;# 
 12237   000168                     C1FIFOCON2      equ	360	;# 
 12238   000168                     C1FIFOCON2L     equ	360	;# 
 12239   000169                     C1FIFOCON2H     equ	361	;# 
 12240   00016A                     C1FIFOCON2U     equ	362	;# 
 12241   00016B                     C1FIFOCON2T     equ	363	;# 
 12242   00016C                     C1FIFOSTA2      equ	364	;# 
 12243   00016C                     C1FIFOSTA2L     equ	364	;# 
 12244   00016D                     C1FIFOSTA2H     equ	365	;# 
 12245   00016E                     C1FIFOSTA2U     equ	366	;# 
 12246   00016F                     C1FIFOSTA2T     equ	367	;# 
 12247   000170                     C1FIFOUA2       equ	368	;# 
 12248   000170                     C1FIFOUA2L      equ	368	;# 
 12249   000171                     C1FIFOUA2H      equ	369	;# 
 12250   000172                     C1FIFOUA2U      equ	370	;# 
 12251   000173                     C1FIFOUA2T      equ	371	;# 
 12252   000174                     C1FIFOCON3      equ	372	;# 
 12253   000174                     C1FIFOCON3L     equ	372	;# 
 12254   000175                     C1FIFOCON3H     equ	373	;# 
 12255   000176                     C1FIFOCON3U     equ	374	;# 
 12256   000177                     C1FIFOCON3T     equ	375	;# 
 12257   000178                     C1FIFOSTA3      equ	376	;# 
 12258   000178                     C1FIFOSTA3L     equ	376	;# 
 12259   000179                     C1FIFOSTA3H     equ	377	;# 
 12260   00017A                     C1FIFOSTA3U     equ	378	;# 
 12261   00017B                     C1FIFOSTA3T     equ	379	;# 
 12262   00017C                     C1FIFOUA3       equ	380	;# 
 12263   00017C                     C1FIFOUA3L      equ	380	;# 
 12264   00017D                     C1FIFOUA3H      equ	381	;# 
 12265   00017E                     C1FIFOUA3U      equ	382	;# 
 12266   00017F                     C1FIFOUA3T      equ	383	;# 
 12267   000180                     C1FLTCON0L      equ	384	;# 
 12268   000181                     C1FLTCON0H      equ	385	;# 
 12269   000182                     C1FLTCON0U      equ	386	;# 
 12270   000183                     C1FLTCON0T      equ	387	;# 
 12271   000184                     C1FLTCON1L      equ	388	;# 
 12272   000185                     C1FLTCON1H      equ	389	;# 
 12273   000186                     C1FLTCON1U      equ	390	;# 
 12274   000187                     C1FLTCON1T      equ	391	;# 
 12275   000188                     C1FLTCON2L      equ	392	;# 
 12276   000189                     C1FLTCON2H      equ	393	;# 
 12277   00018A                     C1FLTCON2U      equ	394	;# 
 12278   00018B                     C1FLTCON2T      equ	395	;# 
 12279   00018C                     C1FLTOBJ0       equ	396	;# 
 12280   00018C                     C1FLTOBJ0L      equ	396	;# 
 12281   00018D                     C1FLTOBJ0H      equ	397	;# 
 12282   00018E                     C1FLTOBJ0U      equ	398	;# 
 12283   00018F                     C1FLTOBJ0T      equ	399	;# 
 12284   000190                     C1MASK0         equ	400	;# 
 12285   000190                     C1MASK0L        equ	400	;# 
 12286   000191                     C1MASK0H        equ	401	;# 
 12287   000192                     C1MASK0U        equ	402	;# 
 12288   000193                     C1MASK0T        equ	403	;# 
 12289   000194                     C1FLTOBJ1       equ	404	;# 
 12290   000194                     C1FLTOBJ1L      equ	404	;# 
 12291   000195                     C1FLTOBJ1H      equ	405	;# 
 12292   000196                     C1FLTOBJ1U      equ	406	;# 
 12293   000197                     C1FLTOBJ1T      equ	407	;# 
 12294   000198                     C1MASK1         equ	408	;# 
 12295   000198                     C1MASK1L        equ	408	;# 
 12296   000199                     C1MASK1H        equ	409	;# 
 12297   00019A                     C1MASK1U        equ	410	;# 
 12298   00019B                     C1MASK1T        equ	411	;# 
 12299   00019C                     C1FLTOBJ2       equ	412	;# 
 12300   00019C                     C1FLTOBJ2L      equ	412	;# 
 12301   00019D                     C1FLTOBJ2H      equ	413	;# 
 12302   00019E                     C1FLTOBJ2U      equ	414	;# 
 12303   00019F                     C1FLTOBJ2T      equ	415	;# 
 12304   0001A0                     C1MASK2         equ	416	;# 
 12305   0001A0                     C1MASK2L        equ	416	;# 
 12306   0001A1                     C1MASK2H        equ	417	;# 
 12307   0001A2                     C1MASK2U        equ	418	;# 
 12308   0001A3                     C1MASK2T        equ	419	;# 
 12309   0001A4                     C1FLTOBJ3       equ	420	;# 
 12310   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12311   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12312   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12313   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12314   0001A8                     C1MASK3         equ	424	;# 
 12315   0001A8                     C1MASK3L        equ	424	;# 
 12316   0001A9                     C1MASK3H        equ	425	;# 
 12317   0001AA                     C1MASK3U        equ	426	;# 
 12318   0001AB                     C1MASK3T        equ	427	;# 
 12319   0001AC                     C1FLTOBJ4       equ	428	;# 
 12320   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12321   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12322   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12323   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12324   0001B0                     C1MASK4         equ	432	;# 
 12325   0001B0                     C1MASK4L        equ	432	;# 
 12326   0001B1                     C1MASK4H        equ	433	;# 
 12327   0001B2                     C1MASK4U        equ	434	;# 
 12328   0001B3                     C1MASK4T        equ	435	;# 
 12329   0001B4                     C1FLTOBJ5       equ	436	;# 
 12330   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12331   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12332   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12333   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12334   0001B8                     C1MASK5         equ	440	;# 
 12335   0001B8                     C1MASK5L        equ	440	;# 
 12336   0001B9                     C1MASK5H        equ	441	;# 
 12337   0001BA                     C1MASK5U        equ	442	;# 
 12338   0001BB                     C1MASK5T        equ	443	;# 
 12339   0001BC                     C1FLTOBJ6       equ	444	;# 
 12340   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12341   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12342   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12343   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12344   0001C0                     C1MASK6         equ	448	;# 
 12345   0001C0                     C1MASK6L        equ	448	;# 
 12346   0001C1                     C1MASK6H        equ	449	;# 
 12347   0001C2                     C1MASK6U        equ	450	;# 
 12348   0001C3                     C1MASK6T        equ	451	;# 
 12349   0001C4                     C1FLTOBJ7       equ	452	;# 
 12350   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12351   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12352   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12353   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12354   0001C8                     C1MASK7         equ	456	;# 
 12355   0001C8                     C1MASK7L        equ	456	;# 
 12356   0001C9                     C1MASK7H        equ	457	;# 
 12357   0001CA                     C1MASK7U        equ	458	;# 
 12358   0001CB                     C1MASK7T        equ	459	;# 
 12359   0001CC                     C1FLTOBJ8       equ	460	;# 
 12360   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12361   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12362   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12363   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12364   0001D0                     C1MASK8         equ	464	;# 
 12365   0001D0                     C1MASK8L        equ	464	;# 
 12366   0001D1                     C1MASK8H        equ	465	;# 
 12367   0001D2                     C1MASK8U        equ	466	;# 
 12368   0001D3                     C1MASK8T        equ	467	;# 
 12369   0001D4                     C1FLTOBJ9       equ	468	;# 
 12370   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12371   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12372   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12373   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12374   0001D8                     C1MASK9         equ	472	;# 
 12375   0001D8                     C1MASK9L        equ	472	;# 
 12376   0001D9                     C1MASK9H        equ	473	;# 
 12377   0001DA                     C1MASK9U        equ	474	;# 
 12378   0001DB                     C1MASK9T        equ	475	;# 
 12379   0001DC                     C1FLTOBJ10      equ	476	;# 
 12380   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12381   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12382   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12383   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12384   0001E0                     C1MASK10        equ	480	;# 
 12385   0001E0                     C1MASK10L       equ	480	;# 
 12386   0001E1                     C1MASK10H       equ	481	;# 
 12387   0001E2                     C1MASK10U       equ	482	;# 
 12388   0001E3                     C1MASK10T       equ	483	;# 
 12389   0001E4                     C1FLTOBJ11      equ	484	;# 
 12390   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12391   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12392   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12393   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12394   0001E8                     C1MASK11        equ	488	;# 
 12395   0001E8                     C1MASK11L       equ	488	;# 
 12396   0001E9                     C1MASK11H       equ	489	;# 
 12397   0001EA                     C1MASK11U       equ	490	;# 
 12398   0001EB                     C1MASK11T       equ	491	;# 
 12399   000200                     PPSLOCK         equ	512	;# 
 12400   000201                     RA0PPS          equ	513	;# 
 12401   000202                     RA1PPS          equ	514	;# 
 12402   000203                     RA2PPS          equ	515	;# 
 12403   000204                     RA3PPS          equ	516	;# 
 12404   000205                     RA4PPS          equ	517	;# 
 12405   000206                     RA5PPS          equ	518	;# 
 12406   000207                     RA6PPS          equ	519	;# 
 12407   000208                     RA7PPS          equ	520	;# 
 12408   000209                     RB0PPS          equ	521	;# 
 12409   00020A                     RB1PPS          equ	522	;# 
 12410   00020B                     RB2PPS          equ	523	;# 
 12411   00020C                     RB3PPS          equ	524	;# 
 12412   00020D                     RB4PPS          equ	525	;# 
 12413   00020E                     RB5PPS          equ	526	;# 
 12414   00020F                     RB6PPS          equ	527	;# 
 12415   000210                     RB7PPS          equ	528	;# 
 12416   000211                     RC0PPS          equ	529	;# 
 12417   000212                     RC1PPS          equ	530	;# 
 12418   000213                     RC2PPS          equ	531	;# 
 12419   000214                     RC3PPS          equ	532	;# 
 12420   000215                     RC4PPS          equ	533	;# 
 12421   000216                     RC5PPS          equ	534	;# 
 12422   000217                     RC6PPS          equ	535	;# 
 12423   000218                     RC7PPS          equ	536	;# 
 12424   00023D                     CANRXPPS        equ	573	;# 
 12425   00023E                     INT0PPS         equ	574	;# 
 12426   00023F                     INT1PPS         equ	575	;# 
 12427   000240                     INT2PPS         equ	576	;# 
 12428   000241                     T0CKIPPS        equ	577	;# 
 12429   000242                     T1CKIPPS        equ	578	;# 
 12430   000243                     T1GPPS          equ	579	;# 
 12431   000244                     T3CKIPPS        equ	580	;# 
 12432   000245                     T3GPPS          equ	581	;# 
 12433   000246                     T5CKIPPS        equ	582	;# 
 12434   000247                     T5GPPS          equ	583	;# 
 12435   000248                     T2INPPS         equ	584	;# 
 12436   000249                     T4INPPS         equ	585	;# 
 12437   00024A                     T6INPPS         equ	586	;# 
 12438   00024B                     TUIN0PPS        equ	587	;# 
 12439   00024C                     TUIN1PPS        equ	588	;# 
 12440   00024F                     CCP1PPS         equ	591	;# 
 12441   000250                     CCP2PPS         equ	592	;# 
 12442   000251                     CCP3PPS         equ	593	;# 
 12443   000253                     PWM1ERSPPS      equ	595	;# 
 12444   000254                     PWM2ERSPPS      equ	596	;# 
 12445   000255                     PWM3ERSPPS      equ	597	;# 
 12446   000256                     PWM4ERSPPS      equ	598	;# 
 12447   000257                     PWMIN0PPS       equ	599	;# 
 12448   000258                     PWMIN1PPS       equ	600	;# 
 12449   000259                     SMT1WINPPS      equ	601	;# 
 12450   00025A                     SMT1SIGPPS      equ	602	;# 
 12451   00025B                     CWG1PPS         equ	603	;# 
 12452   00025B                     CWG1INPPS       equ	603	;# 
 12453   00025C                     CWG2PPS         equ	604	;# 
 12454   00025C                     CWG2INPPS       equ	604	;# 
 12455   00025D                     CWG3PPS         equ	605	;# 
 12456   00025D                     CWG3INPPS       equ	605	;# 
 12457   00025E                     MD1CARLPPS      equ	606	;# 
 12458   00025E                     MDCARLPPS       equ	606	;# 
 12459   00025F                     MD1CARHPPS      equ	607	;# 
 12460   00025F                     MDCARHPPS       equ	607	;# 
 12461   000260                     MD1SRCPPS       equ	608	;# 
 12462   000260                     MDSRCPPS        equ	608	;# 
 12463   000261                     CLCIN0PPS       equ	609	;# 
 12464   000262                     CLCIN1PPS       equ	610	;# 
 12465   000263                     CLCIN2PPS       equ	611	;# 
 12466   000264                     CLCIN3PPS       equ	612	;# 
 12467   000265                     CLCIN4PPS       equ	613	;# 
 12468   000266                     CLCIN5PPS       equ	614	;# 
 12469   000267                     CLCIN6PPS       equ	615	;# 
 12470   000268                     CLCIN7PPS       equ	616	;# 
 12471   000269                     ADACTPPS        equ	617	;# 
 12472   00026A                     SPI1SCKPPS      equ	618	;# 
 12473   00026B                     SPI1SDIPPS      equ	619	;# 
 12474   00026C                     SPI1SSPPS       equ	620	;# 
 12475   00026D                     SPI2SCKPPS      equ	621	;# 
 12476   00026E                     SPI2SDIPPS      equ	622	;# 
 12477   00026F                     SPI2SSPPS       equ	623	;# 
 12478   000270                     I2C1SDAPPS      equ	624	;# 
 12479   000271                     I2C1SCLPPS      equ	625	;# 
 12480   000272                     U1RXPPS         equ	626	;# 
 12481   000273                     U1CTSPPS        equ	627	;# 
 12482   000274                     U2RXPPS         equ	628	;# 
 12483   000275                     U2CTSPPS        equ	629	;# 
 12484   000276                     U3RXPPS         equ	630	;# 
 12485   000277                     U3CTSPPS        equ	631	;# 
 12486   000278                     U4RXPPS         equ	632	;# 
 12487   000279                     U4CTSPPS        equ	633	;# 
 12488   00027A                     U5RXPPS         equ	634	;# 
 12489   00027B                     U5CTSPPS        equ	635	;# 
 12490   000286                     RC4I2C          equ	646	;# 
 12491   000287                     RC3I2C          equ	647	;# 
 12492   000288                     RB2I2C          equ	648	;# 
 12493   000289                     RB1I2C          equ	649	;# 
 12494   00028A                     I2C1RXB         equ	650	;# 
 12495   00028B                     I2C1TXB         equ	651	;# 
 12496   00028C                     I2C1CNTL        equ	652	;# 
 12497   00028D                     I2C1CNTH        equ	653	;# 
 12498   00028E                     I2C1ADB0        equ	654	;# 
 12499   00028F                     I2C1ADB1        equ	655	;# 
 12500   000290                     I2C1ADR0        equ	656	;# 
 12501   000291                     I2C1ADR1        equ	657	;# 
 12502   000292                     I2C1ADR2        equ	658	;# 
 12503   000293                     I2C1ADR3        equ	659	;# 
 12504   000294                     I2C1CON0        equ	660	;# 
 12505   000295                     I2C1CON1        equ	661	;# 
 12506   000296                     I2C1CON2        equ	662	;# 
 12507   000297                     I2C1ERR         equ	663	;# 
 12508   000298                     I2C1STAT0       equ	664	;# 
 12509   000299                     I2C1STAT1       equ	665	;# 
 12510   00029A                     I2C1PIR         equ	666	;# 
 12511   00029B                     I2C1PIE         equ	667	;# 
 12512   00029C                     I2C1BTO         equ	668	;# 
 12513   00029D                     I2C1BAUD        equ	669	;# 
 12514   00029E                     I2C1CLK         equ	670	;# 
 12515   00029F                     I2C1BTOC        equ	671	;# 
 12516   0002A1                     U1RXB           equ	673	;# 
 12517   0002A1                     U1RXBL          equ	673	;# 
 12518   0002A2                     U1RXCHK         equ	674	;# 
 12519   0002A3                     U1TXB           equ	675	;# 
 12520   0002A3                     U1TXBL          equ	675	;# 
 12521   0002A4                     U1TXCHK         equ	676	;# 
 12522   0002A5                     U1P1            equ	677	;# 
 12523   0002A5                     U1P1L           equ	677	;# 
 12524   0002A6                     U1P1H           equ	678	;# 
 12525   0002A7                     U1P2            equ	679	;# 
 12526   0002A7                     U1P2L           equ	679	;# 
 12527   0002A8                     U1P2H           equ	680	;# 
 12528   0002A9                     U1P3            equ	681	;# 
 12529   0002A9                     U1P3L           equ	681	;# 
 12530   0002AA                     U1P3H           equ	682	;# 
 12531   0002AB                     U1CON0          equ	683	;# 
 12532   0002AC                     U1CON1          equ	684	;# 
 12533   0002AD                     U1CON2          equ	685	;# 
 12534   0002AE                     U1BRG           equ	686	;# 
 12535   0002AE                     U1BRGL          equ	686	;# 
 12536   0002AF                     U1BRGH          equ	687	;# 
 12537   0002B0                     U1FIFO          equ	688	;# 
 12538   0002B1                     U1UIR           equ	689	;# 
 12539   0002B2                     U1ERRIR         equ	690	;# 
 12540   0002B3                     U1ERRIE         equ	691	;# 
 12541   0002B4                     U2RXB           equ	692	;# 
 12542   0002B4                     U2RXBL          equ	692	;# 
 12543   0002B5                     U2RXCHK         equ	693	;# 
 12544   0002B6                     U2TXB           equ	694	;# 
 12545   0002B6                     U2TXBL          equ	694	;# 
 12546   0002B7                     U2TXCHK         equ	695	;# 
 12547   0002B8                     U2P1            equ	696	;# 
 12548   0002B8                     U2P1L           equ	696	;# 
 12549   0002B9                     U2P1H           equ	697	;# 
 12550   0002BA                     U2P2            equ	698	;# 
 12551   0002BA                     U2P2L           equ	698	;# 
 12552   0002BB                     U2P2H           equ	699	;# 
 12553   0002BC                     U2P3            equ	700	;# 
 12554   0002BC                     U2P3L           equ	700	;# 
 12555   0002BD                     U2P3H           equ	701	;# 
 12556   0002BE                     U2CON0          equ	702	;# 
 12557   0002BF                     U2CON1          equ	703	;# 
 12558   0002C0                     U2CON2          equ	704	;# 
 12559   0002C1                     U2BRG           equ	705	;# 
 12560   0002C1                     U2BRGL          equ	705	;# 
 12561   0002C2                     U2BRGH          equ	706	;# 
 12562   0002C3                     U2FIFO          equ	707	;# 
 12563   0002C4                     U2UIR           equ	708	;# 
 12564   0002C5                     U2ERRIR         equ	709	;# 
 12565   0002C6                     U2ERRIE         equ	710	;# 
 12566   0002C7                     U3RXB           equ	711	;# 
 12567   0002C7                     U3RXBL          equ	711	;# 
 12568   0002C9                     U3TXB           equ	713	;# 
 12569   0002C9                     U3TXBL          equ	713	;# 
 12570   0002CB                     U3P1            equ	715	;# 
 12571   0002CB                     U3P1L           equ	715	;# 
 12572   0002CD                     U3P2            equ	717	;# 
 12573   0002CD                     U3P2L           equ	717	;# 
 12574   0002CF                     U3P3            equ	719	;# 
 12575   0002CF                     U3P3L           equ	719	;# 
 12576   0002D1                     U3CON0          equ	721	;# 
 12577   0002D2                     U3CON1          equ	722	;# 
 12578   0002D3                     U3CON2          equ	723	;# 
 12579   0002D4                     U3BRG           equ	724	;# 
 12580   0002D4                     U3BRGL          equ	724	;# 
 12581   0002D5                     U3BRGH          equ	725	;# 
 12582   0002D6                     U3FIFO          equ	726	;# 
 12583   0002D7                     U3UIR           equ	727	;# 
 12584   0002D8                     U3ERRIR         equ	728	;# 
 12585   0002D9                     U3ERRIE         equ	729	;# 
 12586   0002DA                     U4RXB           equ	730	;# 
 12587   0002DA                     U4RXBL          equ	730	;# 
 12588   0002DC                     U4TXB           equ	732	;# 
 12589   0002DC                     U4TXBL          equ	732	;# 
 12590   0002DE                     U4P1            equ	734	;# 
 12591   0002DE                     U4P1L           equ	734	;# 
 12592   0002E0                     U4P2            equ	736	;# 
 12593   0002E0                     U4P2L           equ	736	;# 
 12594   0002E2                     U4P3            equ	738	;# 
 12595   0002E2                     U4P3L           equ	738	;# 
 12596   0002E4                     U4CON0          equ	740	;# 
 12597   0002E5                     U4CON1          equ	741	;# 
 12598   0002E6                     U4CON2          equ	742	;# 
 12599   0002E7                     U4BRG           equ	743	;# 
 12600   0002E7                     U4BRGL          equ	743	;# 
 12601   0002E8                     U4BRGH          equ	744	;# 
 12602   0002E9                     U4FIFO          equ	745	;# 
 12603   0002EA                     U4UIR           equ	746	;# 
 12604   0002EB                     U4ERRIR         equ	747	;# 
 12605   0002EC                     U4ERRIE         equ	748	;# 
 12606   0002ED                     U5RXB           equ	749	;# 
 12607   0002ED                     U5RXBL          equ	749	;# 
 12608   0002EF                     U5TXB           equ	751	;# 
 12609   0002EF                     U5TXBL          equ	751	;# 
 12610   0002F1                     U5P1            equ	753	;# 
 12611   0002F1                     U5P1L           equ	753	;# 
 12612   0002F3                     U5P2            equ	755	;# 
 12613   0002F3                     U5P2L           equ	755	;# 
 12614   0002F5                     U5P3            equ	757	;# 
 12615   0002F5                     U5P3L           equ	757	;# 
 12616   0002F7                     U5CON0          equ	759	;# 
 12617   0002F8                     U5CON1          equ	760	;# 
 12618   0002F9                     U5CON2          equ	761	;# 
 12619   0002FA                     U5BRG           equ	762	;# 
 12620   0002FA                     U5BRGL          equ	762	;# 
 12621   0002FB                     U5BRGH          equ	763	;# 
 12622   0002FC                     U5FIFO          equ	764	;# 
 12623   0002FD                     U5UIR           equ	765	;# 
 12624   0002FE                     U5ERRIR         equ	766	;# 
 12625   0002FF                     U5ERRIE         equ	767	;# 
 12626   000300                     SMT1TMR         equ	768	;# 
 12627   000300                     SMT1TMRL        equ	768	;# 
 12628   000301                     SMT1TMRH        equ	769	;# 
 12629   000302                     SMT1TMRU        equ	770	;# 
 12630   000303                     SMT1CPR         equ	771	;# 
 12631   000303                     SMT1CPRL        equ	771	;# 
 12632   000304                     SMT1CPRH        equ	772	;# 
 12633   000305                     SMT1CPRU        equ	773	;# 
 12634   000306                     SMT1CPW         equ	774	;# 
 12635   000306                     SMT1CPWL        equ	774	;# 
 12636   000307                     SMT1CPWH        equ	775	;# 
 12637   000308                     SMT1CPWU        equ	776	;# 
 12638   000309                     SMT1PR          equ	777	;# 
 12639   000309                     SMT1PRL         equ	777	;# 
 12640   00030A                     SMT1PRH         equ	778	;# 
 12641   00030B                     SMT1PRU         equ	779	;# 
 12642   00030C                     SMT1CON0        equ	780	;# 
 12643   00030D                     SMT1CON1        equ	781	;# 
 12644   00030E                     SMT1STAT        equ	782	;# 
 12645   00030F                     SMT1CLK         equ	783	;# 
 12646   000310                     SMT1SIG         equ	784	;# 
 12647   000311                     SMT1WIN         equ	785	;# 
 12648   000318                     TMR0L           equ	792	;# 
 12649   000318                     TMR0            equ	792	;# 
 12650   000319                     TMR0H           equ	793	;# 
 12651   000319                     PR0             equ	793	;# 
 12652   00031A                     T0CON0          equ	794	;# 
 12653   00031B                     T0CON1          equ	795	;# 
 12654   00031C                     TMR1            equ	796	;# 
 12655   00031C                     TMR1L           equ	796	;# 
 12656   00031D                     TMR1H           equ	797	;# 
 12657   00031E                     T1CON           equ	798	;# 
 12658   00031E                     TMR1CON         equ	798	;# 
 12659   00031F                     T1GCON          equ	799	;# 
 12660   00031F                     TMR1GCON        equ	799	;# 
 12661   000320                     T1GATE          equ	800	;# 
 12662   000320                     TMR1GATE        equ	800	;# 
 12663   000321                     T1CLK           equ	801	;# 
 12664   000321                     TMR1CLK         equ	801	;# 
 12665   000321                     PR1             equ	801	;# 
 12666   000322                     T2TMR           equ	802	;# 
 12667   000322                     TMR2            equ	802	;# 
 12668   000323                     T2PR            equ	803	;# 
 12669   000323                     PR2             equ	803	;# 
 12670   000324                     T2CON           equ	804	;# 
 12671   000325                     T2HLT           equ	805	;# 
 12672   000326                     T2CLKCON        equ	806	;# 
 12673   000326                     T2CLK           equ	806	;# 
 12674   000327                     T2RST           equ	807	;# 
 12675   000328                     TMR3            equ	808	;# 
 12676   000328                     TMR3L           equ	808	;# 
 12677   000329                     TMR3H           equ	809	;# 
 12678   00032A                     T3CON           equ	810	;# 
 12679   00032A                     TMR3CON         equ	810	;# 
 12680   00032B                     T3GCON          equ	811	;# 
 12681   00032B                     TMR3GCON        equ	811	;# 
 12682   00032C                     T3GATE          equ	812	;# 
 12683   00032C                     TMR3GATE        equ	812	;# 
 12684   00032D                     T3CLK           equ	813	;# 
 12685   00032D                     TMR3CLK         equ	813	;# 
 12686   00032D                     PR3             equ	813	;# 
 12687   00032E                     T4TMR           equ	814	;# 
 12688   00032E                     TMR4            equ	814	;# 
 12689   00032F                     T4PR            equ	815	;# 
 12690   00032F                     PR4             equ	815	;# 
 12691   000330                     T4CON           equ	816	;# 
 12692   000331                     T4HLT           equ	817	;# 
 12693   000332                     T4CLKCON        equ	818	;# 
 12694   000332                     T4CLK           equ	818	;# 
 12695   000333                     T4RST           equ	819	;# 
 12696   000334                     TMR5            equ	820	;# 
 12697   000334                     TMR5L           equ	820	;# 
 12698   000335                     TMR5H           equ	821	;# 
 12699   000336                     T5CON           equ	822	;# 
 12700   000336                     TMR5CON         equ	822	;# 
 12701   000337                     T5GCON          equ	823	;# 
 12702   000337                     TMR5GCON        equ	823	;# 
 12703   000338                     T5GATE          equ	824	;# 
 12704   000338                     TMR5GATE        equ	824	;# 
 12705   000339                     T5CLK           equ	825	;# 
 12706   000339                     TMR5CLK         equ	825	;# 
 12707   000339                     PR5             equ	825	;# 
 12708   00033A                     T6TMR           equ	826	;# 
 12709   00033A                     TMR6            equ	826	;# 
 12710   00033B                     T6PR            equ	827	;# 
 12711   00033B                     PR6             equ	827	;# 
 12712   00033C                     T6CON           equ	828	;# 
 12713   00033D                     T6HLT           equ	829	;# 
 12714   00033E                     T6CLKCON        equ	830	;# 
 12715   00033E                     T6CLK           equ	830	;# 
 12716   00033F                     T6RST           equ	831	;# 
 12717   000340                     CCPR1           equ	832	;# 
 12718   000340                     CCPR1L          equ	832	;# 
 12719   000341                     CCPR1H          equ	833	;# 
 12720   000342                     CCP1CON         equ	834	;# 
 12721   000343                     CCP1CAP         equ	835	;# 
 12722   000344                     CCPR2           equ	836	;# 
 12723   000344                     CCPR2L          equ	836	;# 
 12724   000345                     CCPR2H          equ	837	;# 
 12725   000346                     CCP2CON         equ	838	;# 
 12726   000347                     CCP2CAP         equ	839	;# 
 12727   000348                     CCPR3           equ	840	;# 
 12728   000348                     CCPR3L          equ	840	;# 
 12729   000349                     CCPR3H          equ	841	;# 
 12730   00034A                     CCP3CON         equ	842	;# 
 12731   00034B                     CCP3CAP         equ	843	;# 
 12732   00034C                     CCPTMRS0        equ	844	;# 
 12733   00034F                     CRCDATA         equ	847	;# 
 12734   00034F                     CRCDATAL        equ	847	;# 
 12735   000350                     CRCDATAH        equ	848	;# 
 12736   000351                     CRCDATAU        equ	849	;# 
 12737   000352                     CRCDATAT        equ	850	;# 
 12738   000353                     CRCOUT          equ	851	;# 
 12739   000353                     CRCSHFT         equ	851	;# 
 12740   000353                     CRCXOR          equ	851	;# 
 12741   000353                     CRCOUTL         equ	851	;# 
 12742   000353                     CRCSHFTL        equ	851	;# 
 12743   000353                     CRCSHIFTL       equ	851	;# 
 12744   000353                     CRCXORL         equ	851	;# 
 12745   000354                     CRCOUTH         equ	852	;# 
 12746   000354                     CRCSHFTH        equ	852	;# 
 12747   000354                     CRCSHIFTH       equ	852	;# 
 12748   000354                     CRCXORH         equ	852	;# 
 12749   000355                     CRCOUTU         equ	853	;# 
 12750   000355                     CRCSHFTU        equ	853	;# 
 12751   000355                     CRCSHIFTU       equ	853	;# 
 12752   000355                     CRCXORU         equ	853	;# 
 12753   000356                     CRCOUTT         equ	854	;# 
 12754   000356                     CRCSHFTT        equ	854	;# 
 12755   000356                     CRCSHIFTT       equ	854	;# 
 12756   000356                     CRCXORT         equ	854	;# 
 12757   000357                     CRCCON0         equ	855	;# 
 12758   000358                     CRCCON1         equ	856	;# 
 12759   000359                     CRCCON2         equ	857	;# 
 12760   00035A                     SCANLADR        equ	858	;# 
 12761   00035A                     SCANLADRL       equ	858	;# 
 12762   00035B                     SCANLADRH       equ	859	;# 
 12763   00035C                     SCANLADRU       equ	860	;# 
 12764   00035D                     SCANHADR        equ	861	;# 
 12765   00035D                     SCANHADRL       equ	861	;# 
 12766   00035E                     SCANHADRH       equ	862	;# 
 12767   00035F                     SCANHADRU       equ	863	;# 
 12768   000360                     SCANCON0        equ	864	;# 
 12769   000361                     SCANTRIG        equ	865	;# 
 12770   000362                     IPR0            equ	866	;# 
 12771   000363                     IPR1            equ	867	;# 
 12772   000364                     IPR2            equ	868	;# 
 12773   000365                     IPR3            equ	869	;# 
 12774   000366                     IPR4            equ	870	;# 
 12775   000367                     IPR5            equ	871	;# 
 12776   000368                     IPR6            equ	872	;# 
 12777   000369                     IPR7            equ	873	;# 
 12778   00036A                     IPR8            equ	874	;# 
 12779   00036B                     IPR9            equ	875	;# 
 12780   00036C                     IPR10           equ	876	;# 
 12781   00036D                     IPR11           equ	877	;# 
 12782   00036E                     IPR12           equ	878	;# 
 12783   00036F                     IPR13           equ	879	;# 
 12784   000370                     IPR14           equ	880	;# 
 12785   000371                     IPR15           equ	881	;# 
 12786   000373                     STATUS_CSHAD    equ	883	;# 
 12787   000374                     WREG_CSHAD      equ	884	;# 
 12788   000375                     BSR_CSHAD       equ	885	;# 
 12789   000376                     SHADCON         equ	886	;# 
 12790   000377                     STATUS_SHAD     equ	887	;# 
 12791   000378                     WREG_SHAD       equ	888	;# 
 12792   000379                     BSR_SHAD        equ	889	;# 
 12793   00037A                     PCLATH_SHAD     equ	890	;# 
 12794   00037B                     PCLATU_SHAD     equ	891	;# 
 12795   00037C                     FSR0SH          equ	892	;# 
 12796   00037C                     FSR0L_SHAD      equ	892	;# 
 12797   00037D                     FSR0H_SHAD      equ	893	;# 
 12798   00037E                     FSR1SH          equ	894	;# 
 12799   00037E                     FSR1L_SHAD      equ	894	;# 
 12800   00037F                     FSR1H_SHAD      equ	895	;# 
 12801   000380                     FSR2SH          equ	896	;# 
 12802   000380                     FSR2L_SHAD      equ	896	;# 
 12803   000381                     FSR2H_SHAD      equ	897	;# 
 12804   000382                     PRODSH          equ	898	;# 
 12805   000382                     PRODL_SHAD      equ	898	;# 
 12806   000383                     PRODH_SHAD      equ	899	;# 
 12807   000387                     TU16ACON0       equ	903	;# 
 12808   000388                     TU16ACON1       equ	904	;# 
 12809   000389                     TU16AHLT        equ	905	;# 
 12810   00038A                     TU16APS         equ	906	;# 
 12811   00038B                     TU16ATMR        equ	907	;# 
 12812   00038B                     TU16ACR         equ	907	;# 
 12813   00038B                     TU16ATMRL       equ	907	;# 
 12814   00038B                     TU16ACRL        equ	907	;# 
 12815   00038C                     TU16ATMRH       equ	908	;# 
 12816   00038C                     TU16ACRH        equ	908	;# 
 12817   00038D                     TU16APR         equ	909	;# 
 12818   00038D                     TU16APRL        equ	909	;# 
 12819   00038E                     TU16APRH        equ	910	;# 
 12820   00038F                     TU16ACLK        equ	911	;# 
 12821   000390                     TU16AERS        equ	912	;# 
 12822   000393                     TU16BCON0       equ	915	;# 
 12823   000394                     TU16BCON1       equ	916	;# 
 12824   000395                     TU16BHLT        equ	917	;# 
 12825   000396                     TU16BPS         equ	918	;# 
 12826   000397                     TU16BTMR        equ	919	;# 
 12827   000397                     TU16BCR         equ	919	;# 
 12828   000397                     TU16BTMRL       equ	919	;# 
 12829   000397                     TU16BCRL        equ	919	;# 
 12830   000398                     TU16BTMRH       equ	920	;# 
 12831   000398                     TU16BCRH        equ	920	;# 
 12832   000399                     TU16BPR         equ	921	;# 
 12833   000399                     TU16BPRL        equ	921	;# 
 12834   00039A                     TU16BPRH        equ	922	;# 
 12835   00039B                     TU16BCLK        equ	923	;# 
 12836   00039C                     TU16BERS        equ	924	;# 
 12837   0003BB                     TUCHAIN         equ	955	;# 
 12838   0003BC                     CWG1CLK         equ	956	;# 
 12839   0003BC                     CWG1CLKCON      equ	956	;# 
 12840   0003BD                     CWG1ISM         equ	957	;# 
 12841   0003BE                     CWG1DBR         equ	958	;# 
 12842   0003BF                     CWG1DBF         equ	959	;# 
 12843   0003C0                     CWG1CON0        equ	960	;# 
 12844   0003C1                     CWG1CON1        equ	961	;# 
 12845   0003C2                     CWG1AS0         equ	962	;# 
 12846   0003C3                     CWG1AS1         equ	963	;# 
 12847   0003C4                     CWG1STR         equ	964	;# 
 12848   0003C5                     CWG2CLK         equ	965	;# 
 12849   0003C5                     CWG2CLKCON      equ	965	;# 
 12850   0003C6                     CWG2ISM         equ	966	;# 
 12851   0003C7                     CWG2DBR         equ	967	;# 
 12852   0003C8                     CWG2DBF         equ	968	;# 
 12853   0003C9                     CWG2CON0        equ	969	;# 
 12854   0003CA                     CWG2CON1        equ	970	;# 
 12855   0003CB                     CWG2AS0         equ	971	;# 
 12856   0003CC                     CWG2AS1         equ	972	;# 
 12857   0003CD                     CWG2STR         equ	973	;# 
 12858   0003CE                     CWG3CLK         equ	974	;# 
 12859   0003CE                     CWG3CLKCON      equ	974	;# 
 12860   0003CF                     CWG3ISM         equ	975	;# 
 12861   0003D0                     CWG3DBR         equ	976	;# 
 12862   0003D1                     CWG3DBF         equ	977	;# 
 12863   0003D2                     CWG3CON0        equ	978	;# 
 12864   0003D3                     CWG3CON1        equ	979	;# 
 12865   0003D4                     CWG3AS0         equ	980	;# 
 12866   0003D5                     CWG3AS1         equ	981	;# 
 12867   0003D6                     CWG3STR         equ	982	;# 
 12868   0003D7                     FVRCON          equ	983	;# 
 12869   0003D8                     ADCPCON         equ	984	;# 
 12870   0003D8                     ADCP            equ	984	;# 
 12871   0003D9                     ADLTH           equ	985	;# 
 12872   0003D9                     ADLTHL          equ	985	;# 
 12873   0003DA                     ADLTHH          equ	986	;# 
 12874   0003DB                     ADUTH           equ	987	;# 
 12875   0003DB                     ADUTHL          equ	987	;# 
 12876   0003DC                     ADUTHH          equ	988	;# 
 12877   0003DD                     ADERR           equ	989	;# 
 12878   0003DD                     ADERRL          equ	989	;# 
 12879   0003DE                     ADERRH          equ	990	;# 
 12880   0003DF                     ADSTPT          equ	991	;# 
 12881   0003DF                     ADSTPTL         equ	991	;# 
 12882   0003E0                     ADSTPTH         equ	992	;# 
 12883   0003E1                     ADFLTR          equ	993	;# 
 12884   0003E1                     ADFLTRL         equ	993	;# 
 12885   0003E2                     ADFLTRH         equ	994	;# 
 12886   0003E3                     ADACC           equ	995	;# 
 12887   0003E3                     ADACCL          equ	995	;# 
 12888   0003E4                     ADACCH          equ	996	;# 
 12889   0003E5                     ADACCU          equ	997	;# 
 12890   0003E6                     ADCNT           equ	998	;# 
 12891   0003E7                     ADRPT           equ	999	;# 
 12892   0003E8                     ADPREV          equ	1000	;# 
 12893   0003E8                     ADPREVL         equ	1000	;# 
 12894   0003E9                     ADPREVH         equ	1001	;# 
 12895   0003EA                     ADRES           equ	1002	;# 
 12896   0003EA                     ADRESL          equ	1002	;# 
 12897   0003EB                     ADRESH          equ	1003	;# 
 12898   0003EC                     ADPCH           equ	1004	;# 
 12899   0003EE                     ADACQ           equ	1006	;# 
 12900   0003EE                     ADACQL          equ	1006	;# 
 12901   0003EF                     ADACQH          equ	1007	;# 
 12902   0003F0                     ADCAP           equ	1008	;# 
 12903   0003F1                     ADPRE           equ	1009	;# 
 12904   0003F1                     ADPREL          equ	1009	;# 
 12905   0003F2                     ADPREH          equ	1010	;# 
 12906   0003F3                     ADCON0          equ	1011	;# 
 12907   0003F4                     ADCON1          equ	1012	;# 
 12908   0003F5                     ADCON2          equ	1013	;# 
 12909   0003F6                     ADCON3          equ	1014	;# 
 12910   0003F7                     ADSTAT          equ	1015	;# 
 12911   0003F8                     ADREF           equ	1016	;# 
 12912   0003F9                     ADACT           equ	1017	;# 
 12913   0003FA                     ADCLK           equ	1018	;# 
 12914   0003FB                     ADCTX           equ	1019	;# 
 12915   0003FC                     ADCSEL1         equ	1020	;# 
 12916   0003FD                     ADCSEL2         equ	1021	;# 
 12917   0003FE                     ADCSEL3         equ	1022	;# 
 12918   0003FF                     ADCSEL4         equ	1023	;# 
 12919   000400                     ANSELA          equ	1024	;# 
 12920   000401                     WPUA            equ	1025	;# 
 12921   000402                     ODCONA          equ	1026	;# 
 12922   000403                     SLRCONA         equ	1027	;# 
 12923   000404                     INLVLA          equ	1028	;# 
 12924   000405                     IOCAP           equ	1029	;# 
 12925   000406                     IOCAN           equ	1030	;# 
 12926   000407                     IOCAF           equ	1031	;# 
 12927   000408                     ANSELB          equ	1032	;# 
 12928   000409                     WPUB            equ	1033	;# 
 12929   00040A                     ODCONB          equ	1034	;# 
 12930   00040B                     SLRCONB         equ	1035	;# 
 12931   00040C                     INLVLB          equ	1036	;# 
 12932   00040D                     IOCBP           equ	1037	;# 
 12933   00040E                     IOCBN           equ	1038	;# 
 12934   00040F                     IOCBF           equ	1039	;# 
 12935   000410                     ANSELC          equ	1040	;# 
 12936   000411                     WPUC            equ	1041	;# 
 12937   000412                     ODCONC          equ	1042	;# 
 12938   000413                     SLRCONC         equ	1043	;# 
 12939   000414                     INLVLC          equ	1044	;# 
 12940   000415                     IOCCP           equ	1045	;# 
 12941   000416                     IOCCN           equ	1046	;# 
 12942   000417                     IOCCF           equ	1047	;# 
 12943   000421                     WPUE            equ	1057	;# 
 12944   000424                     INLVLE          equ	1060	;# 
 12945   000425                     IOCEP           equ	1061	;# 
 12946   000426                     IOCEN           equ	1062	;# 
 12947   000427                     IOCEF           equ	1063	;# 
 12948   000440                     NCO1ACC         equ	1088	;# 
 12949   000440                     NCO1ACCL        equ	1088	;# 
 12950   000441                     NCO1ACCH        equ	1089	;# 
 12951   000442                     NCO1ACCU        equ	1090	;# 
 12952   000443                     NCO1INC         equ	1091	;# 
 12953   000443                     NCO1INCL        equ	1091	;# 
 12954   000444                     NCO1INCH        equ	1092	;# 
 12955   000445                     NCO1INCU        equ	1093	;# 
 12956   000446                     NCO1CON         equ	1094	;# 
 12957   000447                     NCO1CLK         equ	1095	;# 
 12958   000448                     NCO2ACC         equ	1096	;# 
 12959   000448                     NCO2ACCL        equ	1096	;# 
 12960   000449                     NCO2ACCH        equ	1097	;# 
 12961   00044A                     NCO2ACCU        equ	1098	;# 
 12962   00044B                     NCO2INC         equ	1099	;# 
 12963   00044B                     NCO2INCL        equ	1099	;# 
 12964   00044C                     NCO2INCH        equ	1100	;# 
 12965   00044D                     NCO2INCU        equ	1101	;# 
 12966   00044E                     NCO2CON         equ	1102	;# 
 12967   00044F                     NCO2CLK         equ	1103	;# 
 12968   000450                     NCO3ACC         equ	1104	;# 
 12969   000450                     NCO3ACCL        equ	1104	;# 
 12970   000451                     NCO3ACCH        equ	1105	;# 
 12971   000452                     NCO3ACCU        equ	1106	;# 
 12972   000453                     NCO3INC         equ	1107	;# 
 12973   000453                     NCO3INCL        equ	1107	;# 
 12974   000454                     NCO3INCH        equ	1108	;# 
 12975   000455                     NCO3INCU        equ	1109	;# 
 12976   000456                     NCO3CON         equ	1110	;# 
 12977   000457                     NCO3CLK         equ	1111	;# 
 12978   000458                     FSCMCON         equ	1112	;# 
 12979   000459                     IVTLOCK         equ	1113	;# 
 12980   00045A                     IVTAD           equ	1114	;# 
 12981   00045A                     IVTADL          equ	1114	;# 
 12982   00045B                     IVTADH          equ	1115	;# 
 12983   00045C                     IVTADU          equ	1116	;# 
 12984   00045D                     IVTBASE         equ	1117	;# 
 12985   00045D                     IVTBASEL        equ	1117	;# 
 12986   00045E                     IVTBASEH        equ	1118	;# 
 12987   00045F                     IVTBASEU        equ	1119	;# 
 12988   000460                     PWM1ERS         equ	1120	;# 
 12989   000461                     PWM1CLK         equ	1121	;# 
 12990   000462                     PWM1LDS         equ	1122	;# 
 12991   000463                     PWM1PR          equ	1123	;# 
 12992   000463                     PWM1PRL         equ	1123	;# 
 12993   000464                     PWM1PRH         equ	1124	;# 
 12994   000465                     PWM1CPRE        equ	1125	;# 
 12995   000466                     PWM1PIPOS       equ	1126	;# 
 12996   000467                     PWM1GIR         equ	1127	;# 
 12997   000468                     PWM1GIE         equ	1128	;# 
 12998   000469                     PWM1CON         equ	1129	;# 
 12999   00046A                     PWM1S1CFG       equ	1130	;# 
 13000   00046B                     PWM1S1P1        equ	1131	;# 
 13001   00046B                     PWM1S1P1L       equ	1131	;# 
 13002   00046C                     PWM1S1P1H       equ	1132	;# 
 13003   00046D                     PWM1S1P2        equ	1133	;# 
 13004   00046D                     PWM1S1P2L       equ	1133	;# 
 13005   00046E                     PWM1S1P2H       equ	1134	;# 
 13006   00046F                     PWM2ERS         equ	1135	;# 
 13007   000470                     PWM2CLK         equ	1136	;# 
 13008   000471                     PWM2LDS         equ	1137	;# 
 13009   000472                     PWM2PR          equ	1138	;# 
 13010   000472                     PWM2PRL         equ	1138	;# 
 13011   000473                     PWM2PRH         equ	1139	;# 
 13012   000474                     PWM2CPRE        equ	1140	;# 
 13013   000475                     PWM2PIPOS       equ	1141	;# 
 13014   000476                     PWM2GIR         equ	1142	;# 
 13015   000477                     PWM2GIE         equ	1143	;# 
 13016   000478                     PWM2CON         equ	1144	;# 
 13017   000479                     PWM2S1CFG       equ	1145	;# 
 13018   00047A                     PWM2S1P1        equ	1146	;# 
 13019   00047A                     PWM2S1P1L       equ	1146	;# 
 13020   00047B                     PWM2S1P1H       equ	1147	;# 
 13021   00047C                     PWM2S1P2        equ	1148	;# 
 13022   00047C                     PWM2S1P2L       equ	1148	;# 
 13023   00047D                     PWM2S1P2H       equ	1149	;# 
 13024   00047E                     PWM3ERS         equ	1150	;# 
 13025   00047F                     PWM3CLK         equ	1151	;# 
 13026   000480                     PWM3LDS         equ	1152	;# 
 13027   000481                     PWM3PR          equ	1153	;# 
 13028   000481                     PWM3PRL         equ	1153	;# 
 13029   000482                     PWM3PRH         equ	1154	;# 
 13030   000483                     PWM3CPRE        equ	1155	;# 
 13031   000484                     PWM3PIPOS       equ	1156	;# 
 13032   000485                     PWM3GIR         equ	1157	;# 
 13033   000486                     PWM3GIE         equ	1158	;# 
 13034   000487                     PWM3CON         equ	1159	;# 
 13035   000488                     PWM3S1CFG       equ	1160	;# 
 13036   000489                     PWM3S1P1        equ	1161	;# 
 13037   000489                     PWM3S1P1L       equ	1161	;# 
 13038   00048A                     PWM3S1P1H       equ	1162	;# 
 13039   00048B                     PWM3S1P2        equ	1163	;# 
 13040   00048B                     PWM3S1P2L       equ	1163	;# 
 13041   00048C                     PWM3S1P2H       equ	1164	;# 
 13042   00048D                     PWM4ERS         equ	1165	;# 
 13043   00048E                     PWM4CLK         equ	1166	;# 
 13044   00048F                     PWM4LDS         equ	1167	;# 
 13045   000490                     PWM4PR          equ	1168	;# 
 13046   000490                     PWM4PRL         equ	1168	;# 
 13047   000491                     PWM4PRH         equ	1169	;# 
 13048   000492                     PWM4CPRE        equ	1170	;# 
 13049   000493                     PWM4PIPOS       equ	1171	;# 
 13050   000494                     PWM4GIR         equ	1172	;# 
 13051   000495                     PWM4GIE         equ	1173	;# 
 13052   000496                     PWM4CON         equ	1174	;# 
 13053   000497                     PWM4S1CFG       equ	1175	;# 
 13054   000498                     PWM4S1P1        equ	1176	;# 
 13055   000498                     PWM4S1P1L       equ	1176	;# 
 13056   000499                     PWM4S1P1H       equ	1177	;# 
 13057   00049A                     PWM4S1P2        equ	1178	;# 
 13058   00049A                     PWM4S1P2L       equ	1178	;# 
 13059   00049B                     PWM4S1P2H       equ	1179	;# 
 13060   00049C                     PWMLOAD         equ	1180	;# 
 13061   00049D                     PWMEN           equ	1181	;# 
 13062   00049E                     PIE0            equ	1182	;# 
 13063   00049F                     PIE1            equ	1183	;# 
 13064   0004A0                     PIE2            equ	1184	;# 
 13065   0004A1                     PIE3            equ	1185	;# 
 13066   0004A2                     PIE4            equ	1186	;# 
 13067   0004A3                     PIE5            equ	1187	;# 
 13068   0004A4                     PIE6            equ	1188	;# 
 13069   0004A5                     PIE7            equ	1189	;# 
 13070   0004A6                     PIE8            equ	1190	;# 
 13071   0004A7                     PIE9            equ	1191	;# 
 13072   0004A8                     PIE10           equ	1192	;# 
 13073   0004A9                     PIE11           equ	1193	;# 
 13074   0004AA                     PIE12           equ	1194	;# 
 13075   0004AB                     PIE13           equ	1195	;# 
 13076   0004AC                     PIE14           equ	1196	;# 
 13077   0004AD                     PIE15           equ	1197	;# 
 13078   0004AE                     PIR0            equ	1198	;# 
 13079   0004AF                     PIR1            equ	1199	;# 
 13080   0004B0                     PIR2            equ	1200	;# 
 13081   0004B1                     PIR3            equ	1201	;# 
 13082   0004B2                     PIR4            equ	1202	;# 
 13083   0004B3                     PIR5            equ	1203	;# 
 13084   0004B4                     PIR6            equ	1204	;# 
 13085   0004B5                     PIR7            equ	1205	;# 
 13086   0004B6                     PIR8            equ	1206	;# 
 13087   0004B7                     PIR9            equ	1207	;# 
 13088   0004B8                     PIR10           equ	1208	;# 
 13089   0004B9                     PIR11           equ	1209	;# 
 13090   0004BA                     PIR12           equ	1210	;# 
 13091   0004BB                     PIR13           equ	1211	;# 
 13092   0004BC                     PIR14           equ	1212	;# 
 13093   0004BD                     PIR15           equ	1213	;# 
 13094   0004BE                     LATA            equ	1214	;# 
 13095   0004BF                     LATB            equ	1215	;# 
 13096   0004C0                     LATC            equ	1216	;# 
 13097   0004C6                     TRISA           equ	1222	;# 
 13098   0004C7                     TRISB           equ	1223	;# 
 13099   0004C8                     TRISC           equ	1224	;# 
 13100   0004CA                     TRISE           equ	1226	;# 
 13101   0004CE                     PORTA           equ	1230	;# 
 13102   0004CF                     PORTB           equ	1231	;# 
 13103   0004D0                     PORTC           equ	1232	;# 
 13104   0004D2                     PORTE           equ	1234	;# 
 13105   0004D6                     INTCON0         equ	1238	;# 
 13106   0004D7                     INTCON1         equ	1239	;# 
 13107   0004D8                     STATUS          equ	1240	;# 
 13108   0004D9                     FSR2            equ	1241	;# 
 13109   0004D9                     FSR2L           equ	1241	;# 
 13110   0004DA                     FSR2H           equ	1242	;# 
 13111   0004DB                     PLUSW2          equ	1243	;# 
 13112   0004DC                     PREINC2         equ	1244	;# 
 13113   0004DD                     POSTDEC2        equ	1245	;# 
 13114   0004DE                     POSTINC2        equ	1246	;# 
 13115   0004DF                     INDF2           equ	1247	;# 
 13116   0004E0                     BSR             equ	1248	;# 
 13117   0004E1                     FSR1            equ	1249	;# 
 13118   0004E1                     FSR1L           equ	1249	;# 
 13119   0004E2                     FSR1H           equ	1250	;# 
 13120   0004E3                     PLUSW1          equ	1251	;# 
 13121   0004E4                     PREINC1         equ	1252	;# 
 13122   0004E5                     POSTDEC1        equ	1253	;# 
 13123   0004E6                     POSTINC1        equ	1254	;# 
 13124   0004E7                     INDF1           equ	1255	;# 
 13125   0004E8                     WREG            equ	1256	;# 
 13126   0004E9                     FSR0            equ	1257	;# 
 13127   0004E9                     FSR0L           equ	1257	;# 
 13128   0004EA                     FSR0H           equ	1258	;# 
 13129   0004EB                     PLUSW0          equ	1259	;# 
 13130   0004EC                     PREINC0         equ	1260	;# 
 13131   0004ED                     POSTDEC0        equ	1261	;# 
 13132   0004EE                     POSTINC0        equ	1262	;# 
 13133   0004EF                     INDF0           equ	1263	;# 
 13134   0004F0                     PCON0           equ	1264	;# 
 13135   0004F1                     PCON1           equ	1265	;# 
 13136   0004F2                     CPUDOZE         equ	1266	;# 
 13137   0004F3                     PROD            equ	1267	;# 
 13138   0004F3                     PRODL           equ	1267	;# 
 13139   0004F4                     PRODH           equ	1268	;# 
 13140   0004F5                     TABLAT          equ	1269	;# 
 13141   0004F6                     TBLPTR          equ	1270	;# 
 13142   0004F6                     TBLPTRL         equ	1270	;# 
 13143   0004F7                     TBLPTRH         equ	1271	;# 
 13144   0004F8                     TBLPTRU         equ	1272	;# 
 13145   0004F9                     PCLAT           equ	1273	;# 
 13146   0004F9                     PCL             equ	1273	;# 
 13147   0004FA                     PCLATH          equ	1274	;# 
 13148   0004FB                     PCLATU          equ	1275	;# 
 13149   0004FC                     STKPTR          equ	1276	;# 
 13150   0004FD                     TOS             equ	1277	;# 
 13151   0004FD                     TOSL            equ	1277	;# 
 13152   0004FE                     TOSH            equ	1278	;# 
 13153   0004FF                     TOSU            equ	1279	;# 
 13154   000038                     BOOTREG         equ	56	;# 
 13155   000039                     CLKRCON         equ	57	;# 
 13156   00003A                     CLKRCLK         equ	58	;# 
 13157   000040                     NVMCON0         equ	64	;# 
 13158   000041                     NVMCON1         equ	65	;# 
 13159   000042                     NVMLOCK         equ	66	;# 
 13160   000043                     NVMADR          equ	67	;# 
 13161   000043                     NVMADRL         equ	67	;# 
 13162   000044                     NVMADRH         equ	68	;# 
 13163   000045                     NVMADRU         equ	69	;# 
 13164   000046                     NVMDAT          equ	70	;# 
 13165   000046                     NVMDATL         equ	70	;# 
 13166   000047                     NVMDATH         equ	71	;# 
 13167   000048                     VREGCON         equ	72	;# 
 13168   000049                     BORCON          equ	73	;# 
 13169   00004A                     HLVDCON0        equ	74	;# 
 13170   00004B                     HLVDCON1        equ	75	;# 
 13171   00004C                     ZCDCON          equ	76	;# 
 13172   000060                     PMD0            equ	96	;# 
 13173   000061                     PMD1            equ	97	;# 
 13174   000062                     PMD2            equ	98	;# 
 13175   000063                     PMD3            equ	99	;# 
 13176   000064                     PMD4            equ	100	;# 
 13177   000065                     PMD5            equ	101	;# 
 13178   000066                     PMD6            equ	102	;# 
 13179   000067                     PMD7            equ	103	;# 
 13180   000068                     PMD8            equ	104	;# 
 13181   00006A                     MD1CON0         equ	106	;# 
 13182   00006B                     MD1CON1         equ	107	;# 
 13183   00006C                     MD1SRC          equ	108	;# 
 13184   00006D                     MD1CARL         equ	109	;# 
 13185   00006E                     MD1CARH         equ	110	;# 
 13186   00006F                     CMOUT           equ	111	;# 
 13187   000070                     CM1CON0         equ	112	;# 
 13188   000071                     CM1CON1         equ	113	;# 
 13189   000072                     CM1NCH          equ	114	;# 
 13190   000073                     CM1PCH          equ	115	;# 
 13191   000074                     CM2CON0         equ	116	;# 
 13192   000075                     CM2CON1         equ	117	;# 
 13193   000076                     CM2NCH          equ	118	;# 
 13194   000077                     CM2PCH          equ	119	;# 
 13195   000078                     WDTCON0         equ	120	;# 
 13196   000079                     WDTCON1         equ	121	;# 
 13197   00007A                     WDTPSL          equ	122	;# 
 13198   00007B                     WDTPSH          equ	123	;# 
 13199   00007C                     WDTTMR          equ	124	;# 
 13200   00007D                     DAC1DAT         equ	125	;# 
 13201   00007D                     DAC1DATL        equ	125	;# 
 13202   00007F                     DAC1CON         equ	127	;# 
 13203   000080                     SPI1RXB         equ	128	;# 
 13204   000081                     SPI1TXB         equ	129	;# 
 13205   000082                     SPI1TCNT        equ	130	;# 
 13206   000082                     SPI1TCNTL       equ	130	;# 
 13207   000083                     SPI1TCNTH       equ	131	;# 
 13208   000084                     SPI1CON0        equ	132	;# 
 13209   000085                     SPI1CON1        equ	133	;# 
 13210   000086                     SPI1CON2        equ	134	;# 
 13211   000087                     SPI1STATUS      equ	135	;# 
 13212   000088                     SPI1TWIDTH      equ	136	;# 
 13213   000089                     SPI1BAUD        equ	137	;# 
 13214   00008A                     SPI1INTF        equ	138	;# 
 13215   00008B                     SPI1INTE        equ	139	;# 
 13216   00008C                     SPI1CLK         equ	140	;# 
 13217   00008D                     SPI2RXB         equ	141	;# 
 13218   00008E                     SPI2TXB         equ	142	;# 
 13219   00008F                     SPI2TCNT        equ	143	;# 
 13220   00008F                     SPI2TCNTL       equ	143	;# 
 13221   000090                     SPI2TCNTH       equ	144	;# 
 13222   000091                     SPI2CON0        equ	145	;# 
 13223   000092                     SPI2CON1        equ	146	;# 
 13224   000093                     SPI2CON2        equ	147	;# 
 13225   000094                     SPI2STATUS      equ	148	;# 
 13226   000095                     SPI2TWIDTH      equ	149	;# 
 13227   000096                     SPI2BAUD        equ	150	;# 
 13228   000097                     SPI2INTF        equ	151	;# 
 13229   000098                     SPI2INTE        equ	152	;# 
 13230   000099                     SPI2CLK         equ	153	;# 
 13231   0000AC                     ACTCON          equ	172	;# 
 13232   0000AD                     OSCCON1         equ	173	;# 
 13233   0000AE                     OSCCON2         equ	174	;# 
 13234   0000AF                     OSCCON3         equ	175	;# 
 13235   0000B0                     OSCTUNE         equ	176	;# 
 13236   0000B1                     OSCFRQ          equ	177	;# 
 13237   0000B1                     OSCFREQ         equ	177	;# 
 13238   0000B2                     OSCSTAT         equ	178	;# 
 13239   0000B2                     OSCSTAT1        equ	178	;# 
 13240   0000B3                     OSCEN           equ	179	;# 
 13241   0000B4                     PRLOCK          equ	180	;# 
 13242   0000B5                     SCANPR          equ	181	;# 
 13243   0000B6                     DMA1PR          equ	182	;# 
 13244   0000B7                     DMA2PR          equ	183	;# 
 13245   0000B8                     DMA3PR          equ	184	;# 
 13246   0000B9                     DMA4PR          equ	185	;# 
 13247   0000BA                     DMA5PR          equ	186	;# 
 13248   0000BB                     DMA6PR          equ	187	;# 
 13249   0000BC                     DMA7PR          equ	188	;# 
 13250   0000BD                     DMA8PR          equ	189	;# 
 13251   0000BE                     MAINPR          equ	190	;# 
 13252   0000BF                     ISRPR           equ	191	;# 
 13253   0000D4                     CLCDATA         equ	212	;# 
 13254   0000D5                     CLCSELECT       equ	213	;# 
 13255   0000D6                     CLCnCON         equ	214	;# 
 13256   0000D7                     CLCnPOL         equ	215	;# 
 13257   0000D8                     CLCnSEL0        equ	216	;# 
 13258   0000D9                     CLCnSEL1        equ	217	;# 
 13259   0000DA                     CLCnSEL2        equ	218	;# 
 13260   0000DB                     CLCnSEL3        equ	219	;# 
 13261   0000DC                     CLCnGLS0        equ	220	;# 
 13262   0000DD                     CLCnGLS1        equ	221	;# 
 13263   0000DE                     CLCnGLS2        equ	222	;# 
 13264   0000DF                     CLCnGLS3        equ	223	;# 
 13265   0000E8                     DMASELECT       equ	232	;# 
 13266   0000E9                     DMAnBUF         equ	233	;# 
 13267   0000EA                     DMAnDCNT        equ	234	;# 
 13268   0000EA                     DMAnDCNTL       equ	234	;# 
 13269   0000EB                     DMAnDCNTH       equ	235	;# 
 13270   0000EC                     DMAnDPTR        equ	236	;# 
 13271   0000EC                     DMAnDPTRL       equ	236	;# 
 13272   0000ED                     DMAnDPTRH       equ	237	;# 
 13273   0000EE                     DMAnDSZ         equ	238	;# 
 13274   0000EE                     DMAnDSZL        equ	238	;# 
 13275   0000EF                     DMAnDSZH        equ	239	;# 
 13276   0000F0                     DMAnDSA         equ	240	;# 
 13277   0000F0                     DMAnDSAL        equ	240	;# 
 13278   0000F1                     DMAnDSAH        equ	241	;# 
 13279   0000F2                     DMAnSCNT        equ	242	;# 
 13280   0000F2                     DMAnSCNTL       equ	242	;# 
 13281   0000F3                     DMAnSCNTH       equ	243	;# 
 13282   0000F4                     DMAnSPTR        equ	244	;# 
 13283   0000F4                     DMAnSPTRL       equ	244	;# 
 13284   0000F5                     DMAnSPTRH       equ	245	;# 
 13285   0000F6                     DMAnSPTRU       equ	246	;# 
 13286   0000F7                     DMAnSSZ         equ	247	;# 
 13287   0000F7                     DMAnSSZL        equ	247	;# 
 13288   0000F8                     DMAnSSZH        equ	248	;# 
 13289   0000F9                     DMAnSSA         equ	249	;# 
 13290   0000F9                     DMAnSSAL        equ	249	;# 
 13291   0000FA                     DMAnSSAH        equ	250	;# 
 13292   0000FB                     DMAnSSAU        equ	251	;# 
 13293   0000FC                     DMAnCON0        equ	252	;# 
 13294   0000FD                     DMAnCON1        equ	253	;# 
 13295   0000FE                     DMAnAIRQ        equ	254	;# 
 13296   0000FF                     DMAnSIRQ        equ	255	;# 
 13297   000100                     C1CONL          equ	256	;# 
 13298   000101                     C1CONH          equ	257	;# 
 13299   000102                     C1CONU          equ	258	;# 
 13300   000103                     C1CONT          equ	259	;# 
 13301   000104                     C1NBTCFGL       equ	260	;# 
 13302   000105                     C1NBTCFGH       equ	261	;# 
 13303   000106                     C1NBTCFGU       equ	262	;# 
 13304   000107                     C1NBTCFGT       equ	263	;# 
 13305   000108                     C1DBTCFGL       equ	264	;# 
 13306   000109                     C1DBTCFGH       equ	265	;# 
 13307   00010A                     C1DBTCFGU       equ	266	;# 
 13308   00010B                     C1DBTCFGT       equ	267	;# 
 13309   00010C                     C1TDCL          equ	268	;# 
 13310   00010D                     C1TDCH          equ	269	;# 
 13311   00010E                     C1TDCU          equ	270	;# 
 13312   000110                     C1TBC           equ	272	;# 
 13313   000110                     C1TBCL          equ	272	;# 
 13314   000111                     C1TBCH          equ	273	;# 
 13315   000112                     C1TBCU          equ	274	;# 
 13316   000113                     C1TBCT          equ	275	;# 
 13317   000114                     C1TSCONL        equ	276	;# 
 13318   000115                     C1TSCONH        equ	277	;# 
 13319   000116                     C1TSCONU        equ	278	;# 
 13320   000117                     C1TSCONT        equ	279	;# 
 13321   000118                     C1VECL          equ	280	;# 
 13322   000119                     C1VECH          equ	281	;# 
 13323   00011A                     C1VECU          equ	282	;# 
 13324   00011B                     C1VECT          equ	283	;# 
 13325   00011C                     C1INTL          equ	284	;# 
 13326   00011D                     C1INTH          equ	285	;# 
 13327   00011E                     C1INTU          equ	286	;# 
 13328   00011F                     C1INTT          equ	287	;# 
 13329   000120                     C1RXIF          equ	288	;# 
 13330   000120                     C1RXIFL         equ	288	;# 
 13331   000121                     C1RXIFH         equ	289	;# 
 13332   000122                     C1RXIFU         equ	290	;# 
 13333   000123                     C1RXIFT         equ	291	;# 
 13334   000124                     C1TXIF          equ	292	;# 
 13335   000124                     C1TXIFL         equ	292	;# 
 13336   000125                     C1TXIFH         equ	293	;# 
 13337   000126                     C1TXIFU         equ	294	;# 
 13338   000127                     C1TXIFT         equ	295	;# 
 13339   000128                     C1RXOVIF        equ	296	;# 
 13340   000128                     C1RXOVIFL       equ	296	;# 
 13341   000129                     C1RXOVIFH       equ	297	;# 
 13342   00012A                     C1RXOVIFU       equ	298	;# 
 13343   00012B                     C1RXOVIFT       equ	299	;# 
 13344   00012C                     C1TXATIF        equ	300	;# 
 13345   00012C                     C1TXATIFL       equ	300	;# 
 13346   00012D                     C1TXATIFH       equ	301	;# 
 13347   00012E                     C1TXATIFU       equ	302	;# 
 13348   00012F                     C1TXATIFT       equ	303	;# 
 13349   000130                     C1TXREQ         equ	304	;# 
 13350   000130                     C1TXREQL        equ	304	;# 
 13351   000131                     C1TXREQH        equ	305	;# 
 13352   000132                     C1TXREQU        equ	306	;# 
 13353   000133                     C1TXREQT        equ	307	;# 
 13354   000134                     C1TRECL         equ	308	;# 
 13355   000135                     C1TRECH         equ	309	;# 
 13356   000136                     C1TRECU         equ	310	;# 
 13357   000137                     C1TRECT         equ	311	;# 
 13358   000138                     C1BDIAG0L       equ	312	;# 
 13359   000139                     C1BDIAG0H       equ	313	;# 
 13360   00013C                     C1BDIAG1L       equ	316	;# 
 13361   00013D                     C1BDIAG1H       equ	317	;# 
 13362   00013E                     C1BDIAG1U       equ	318	;# 
 13363   00013F                     C1BDIAG1T       equ	319	;# 
 13364   000140                     C1TEFCONL       equ	320	;# 
 13365   000141                     C1TEFCONH       equ	321	;# 
 13366   000142                     C1TEFCONU       equ	322	;# 
 13367   000143                     C1TEFCONT       equ	323	;# 
 13368   000144                     C1TEFSTAL       equ	324	;# 
 13369   000145                     C1TEFSTAH       equ	325	;# 
 13370   000146                     C1TEFSTAU       equ	326	;# 
 13371   000147                     C1TEFSTAT       equ	327	;# 
 13372   000148                     C1TEFUA         equ	328	;# 
 13373   000148                     C1TEFUAL        equ	328	;# 
 13374   000149                     C1TEFUAH        equ	329	;# 
 13375   00014A                     C1TEFUAU        equ	330	;# 
 13376   00014B                     C1TEFUAT        equ	331	;# 
 13377   00014C                     C1FIFOBA        equ	332	;# 
 13378   00014C                     C1FIFOBAL       equ	332	;# 
 13379   00014D                     C1FIFOBAH       equ	333	;# 
 13380   00014E                     C1FIFOBAU       equ	334	;# 
 13381   00014F                     C1FIFOBAT       equ	335	;# 
 13382   000150                     C1TXQCONL       equ	336	;# 
 13383   000151                     C1TXQCONH       equ	337	;# 
 13384   000152                     C1TXQCONU       equ	338	;# 
 13385   000153                     C1TXQCONT       equ	339	;# 
 13386   000154                     C1TXQSTAL       equ	340	;# 
 13387   000155                     C1TXQSTAH       equ	341	;# 
 13388   000156                     C1TXQSTAU       equ	342	;# 
 13389   000157                     C1TXQSTAT       equ	343	;# 
 13390   000158                     C1TXQUA         equ	344	;# 
 13391   000158                     C1TXQUAL        equ	344	;# 
 13392   000159                     C1TXQUAH        equ	345	;# 
 13393   00015A                     C1TXQUAU        equ	346	;# 
 13394   00015B                     C1TXQUAT        equ	347	;# 
 13395   00015C                     C1FIFOCON1      equ	348	;# 
 13396   00015C                     C1FIFOCON1L     equ	348	;# 
 13397   00015D                     C1FIFOCON1H     equ	349	;# 
 13398   00015E                     C1FIFOCON1U     equ	350	;# 
 13399   00015F                     C1FIFOCON1T     equ	351	;# 
 13400   000160                     C1FIFOSTA1      equ	352	;# 
 13401   000160                     C1FIFOSTA1L     equ	352	;# 
 13402   000161                     C1FIFOSTA1H     equ	353	;# 
 13403   000162                     C1FIFOSTA1U     equ	354	;# 
 13404   000163                     C1FIFOSTA1T     equ	355	;# 
 13405   000164                     C1FIFOUA1       equ	356	;# 
 13406   000164                     C1FIFOUA1L      equ	356	;# 
 13407   000165                     C1FIFOUA1H      equ	357	;# 
 13408   000166                     C1FIFOUA1U      equ	358	;# 
 13409   000167                     C1FIFOUA1T      equ	359	;# 
 13410   000168                     C1FIFOCON2      equ	360	;# 
 13411   000168                     C1FIFOCON2L     equ	360	;# 
 13412   000169                     C1FIFOCON2H     equ	361	;# 
 13413   00016A                     C1FIFOCON2U     equ	362	;# 
 13414   00016B                     C1FIFOCON2T     equ	363	;# 
 13415   00016C                     C1FIFOSTA2      equ	364	;# 
 13416   00016C                     C1FIFOSTA2L     equ	364	;# 
 13417   00016D                     C1FIFOSTA2H     equ	365	;# 
 13418   00016E                     C1FIFOSTA2U     equ	366	;# 
 13419   00016F                     C1FIFOSTA2T     equ	367	;# 
 13420   000170                     C1FIFOUA2       equ	368	;# 
 13421   000170                     C1FIFOUA2L      equ	368	;# 
 13422   000171                     C1FIFOUA2H      equ	369	;# 
 13423   000172                     C1FIFOUA2U      equ	370	;# 
 13424   000173                     C1FIFOUA2T      equ	371	;# 
 13425   000174                     C1FIFOCON3      equ	372	;# 
 13426   000174                     C1FIFOCON3L     equ	372	;# 
 13427   000175                     C1FIFOCON3H     equ	373	;# 
 13428   000176                     C1FIFOCON3U     equ	374	;# 
 13429   000177                     C1FIFOCON3T     equ	375	;# 
 13430   000178                     C1FIFOSTA3      equ	376	;# 
 13431   000178                     C1FIFOSTA3L     equ	376	;# 
 13432   000179                     C1FIFOSTA3H     equ	377	;# 
 13433   00017A                     C1FIFOSTA3U     equ	378	;# 
 13434   00017B                     C1FIFOSTA3T     equ	379	;# 
 13435   00017C                     C1FIFOUA3       equ	380	;# 
 13436   00017C                     C1FIFOUA3L      equ	380	;# 
 13437   00017D                     C1FIFOUA3H      equ	381	;# 
 13438   00017E                     C1FIFOUA3U      equ	382	;# 
 13439   00017F                     C1FIFOUA3T      equ	383	;# 
 13440   000180                     C1FLTCON0L      equ	384	;# 
 13441   000181                     C1FLTCON0H      equ	385	;# 
 13442   000182                     C1FLTCON0U      equ	386	;# 
 13443   000183                     C1FLTCON0T      equ	387	;# 
 13444   000184                     C1FLTCON1L      equ	388	;# 
 13445   000185                     C1FLTCON1H      equ	389	;# 
 13446   000186                     C1FLTCON1U      equ	390	;# 
 13447   000187                     C1FLTCON1T      equ	391	;# 
 13448   000188                     C1FLTCON2L      equ	392	;# 
 13449   000189                     C1FLTCON2H      equ	393	;# 
 13450   00018A                     C1FLTCON2U      equ	394	;# 
 13451   00018B                     C1FLTCON2T      equ	395	;# 
 13452   00018C                     C1FLTOBJ0       equ	396	;# 
 13453   00018C                     C1FLTOBJ0L      equ	396	;# 
 13454   00018D                     C1FLTOBJ0H      equ	397	;# 
 13455   00018E                     C1FLTOBJ0U      equ	398	;# 
 13456   00018F                     C1FLTOBJ0T      equ	399	;# 
 13457   000190                     C1MASK0         equ	400	;# 
 13458   000190                     C1MASK0L        equ	400	;# 
 13459   000191                     C1MASK0H        equ	401	;# 
 13460   000192                     C1MASK0U        equ	402	;# 
 13461   000193                     C1MASK0T        equ	403	;# 
 13462   000194                     C1FLTOBJ1       equ	404	;# 
 13463   000194                     C1FLTOBJ1L      equ	404	;# 
 13464   000195                     C1FLTOBJ1H      equ	405	;# 
 13465   000196                     C1FLTOBJ1U      equ	406	;# 
 13466   000197                     C1FLTOBJ1T      equ	407	;# 
 13467   000198                     C1MASK1         equ	408	;# 
 13468   000198                     C1MASK1L        equ	408	;# 
 13469   000199                     C1MASK1H        equ	409	;# 
 13470   00019A                     C1MASK1U        equ	410	;# 
 13471   00019B                     C1MASK1T        equ	411	;# 
 13472   00019C                     C1FLTOBJ2       equ	412	;# 
 13473   00019C                     C1FLTOBJ2L      equ	412	;# 
 13474   00019D                     C1FLTOBJ2H      equ	413	;# 
 13475   00019E                     C1FLTOBJ2U      equ	414	;# 
 13476   00019F                     C1FLTOBJ2T      equ	415	;# 
 13477   0001A0                     C1MASK2         equ	416	;# 
 13478   0001A0                     C1MASK2L        equ	416	;# 
 13479   0001A1                     C1MASK2H        equ	417	;# 
 13480   0001A2                     C1MASK2U        equ	418	;# 
 13481   0001A3                     C1MASK2T        equ	419	;# 
 13482   0001A4                     C1FLTOBJ3       equ	420	;# 
 13483   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13484   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13485   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13486   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13487   0001A8                     C1MASK3         equ	424	;# 
 13488   0001A8                     C1MASK3L        equ	424	;# 
 13489   0001A9                     C1MASK3H        equ	425	;# 
 13490   0001AA                     C1MASK3U        equ	426	;# 
 13491   0001AB                     C1MASK3T        equ	427	;# 
 13492   0001AC                     C1FLTOBJ4       equ	428	;# 
 13493   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13494   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13495   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13496   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13497   0001B0                     C1MASK4         equ	432	;# 
 13498   0001B0                     C1MASK4L        equ	432	;# 
 13499   0001B1                     C1MASK4H        equ	433	;# 
 13500   0001B2                     C1MASK4U        equ	434	;# 
 13501   0001B3                     C1MASK4T        equ	435	;# 
 13502   0001B4                     C1FLTOBJ5       equ	436	;# 
 13503   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13504   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13505   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13506   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13507   0001B8                     C1MASK5         equ	440	;# 
 13508   0001B8                     C1MASK5L        equ	440	;# 
 13509   0001B9                     C1MASK5H        equ	441	;# 
 13510   0001BA                     C1MASK5U        equ	442	;# 
 13511   0001BB                     C1MASK5T        equ	443	;# 
 13512   0001BC                     C1FLTOBJ6       equ	444	;# 
 13513   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13514   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13515   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13516   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13517   0001C0                     C1MASK6         equ	448	;# 
 13518   0001C0                     C1MASK6L        equ	448	;# 
 13519   0001C1                     C1MASK6H        equ	449	;# 
 13520   0001C2                     C1MASK6U        equ	450	;# 
 13521   0001C3                     C1MASK6T        equ	451	;# 
 13522   0001C4                     C1FLTOBJ7       equ	452	;# 
 13523   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13524   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13525   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13526   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13527   0001C8                     C1MASK7         equ	456	;# 
 13528   0001C8                     C1MASK7L        equ	456	;# 
 13529   0001C9                     C1MASK7H        equ	457	;# 
 13530   0001CA                     C1MASK7U        equ	458	;# 
 13531   0001CB                     C1MASK7T        equ	459	;# 
 13532   0001CC                     C1FLTOBJ8       equ	460	;# 
 13533   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13534   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13535   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13536   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13537   0001D0                     C1MASK8         equ	464	;# 
 13538   0001D0                     C1MASK8L        equ	464	;# 
 13539   0001D1                     C1MASK8H        equ	465	;# 
 13540   0001D2                     C1MASK8U        equ	466	;# 
 13541   0001D3                     C1MASK8T        equ	467	;# 
 13542   0001D4                     C1FLTOBJ9       equ	468	;# 
 13543   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13544   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13545   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13546   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13547   0001D8                     C1MASK9         equ	472	;# 
 13548   0001D8                     C1MASK9L        equ	472	;# 
 13549   0001D9                     C1MASK9H        equ	473	;# 
 13550   0001DA                     C1MASK9U        equ	474	;# 
 13551   0001DB                     C1MASK9T        equ	475	;# 
 13552   0001DC                     C1FLTOBJ10      equ	476	;# 
 13553   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13554   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13555   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13556   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13557   0001E0                     C1MASK10        equ	480	;# 
 13558   0001E0                     C1MASK10L       equ	480	;# 
 13559   0001E1                     C1MASK10H       equ	481	;# 
 13560   0001E2                     C1MASK10U       equ	482	;# 
 13561   0001E3                     C1MASK10T       equ	483	;# 
 13562   0001E4                     C1FLTOBJ11      equ	484	;# 
 13563   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13564   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13565   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13566   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13567   0001E8                     C1MASK11        equ	488	;# 
 13568   0001E8                     C1MASK11L       equ	488	;# 
 13569   0001E9                     C1MASK11H       equ	489	;# 
 13570   0001EA                     C1MASK11U       equ	490	;# 
 13571   0001EB                     C1MASK11T       equ	491	;# 
 13572   000200                     PPSLOCK         equ	512	;# 
 13573   000201                     RA0PPS          equ	513	;# 
 13574   000202                     RA1PPS          equ	514	;# 
 13575   000203                     RA2PPS          equ	515	;# 
 13576   000204                     RA3PPS          equ	516	;# 
 13577   000205                     RA4PPS          equ	517	;# 
 13578   000206                     RA5PPS          equ	518	;# 
 13579   000207                     RA6PPS          equ	519	;# 
 13580   000208                     RA7PPS          equ	520	;# 
 13581   000209                     RB0PPS          equ	521	;# 
 13582   00020A                     RB1PPS          equ	522	;# 
 13583   00020B                     RB2PPS          equ	523	;# 
 13584   00020C                     RB3PPS          equ	524	;# 
 13585   00020D                     RB4PPS          equ	525	;# 
 13586   00020E                     RB5PPS          equ	526	;# 
 13587   00020F                     RB6PPS          equ	527	;# 
 13588   000210                     RB7PPS          equ	528	;# 
 13589   000211                     RC0PPS          equ	529	;# 
 13590   000212                     RC1PPS          equ	530	;# 
 13591   000213                     RC2PPS          equ	531	;# 
 13592   000214                     RC3PPS          equ	532	;# 
 13593   000215                     RC4PPS          equ	533	;# 
 13594   000216                     RC5PPS          equ	534	;# 
 13595   000217                     RC6PPS          equ	535	;# 
 13596   000218                     RC7PPS          equ	536	;# 
 13597   00023D                     CANRXPPS        equ	573	;# 
 13598   00023E                     INT0PPS         equ	574	;# 
 13599   00023F                     INT1PPS         equ	575	;# 
 13600   000240                     INT2PPS         equ	576	;# 
 13601   000241                     T0CKIPPS        equ	577	;# 
 13602   000242                     T1CKIPPS        equ	578	;# 
 13603   000243                     T1GPPS          equ	579	;# 
 13604   000244                     T3CKIPPS        equ	580	;# 
 13605   000245                     T3GPPS          equ	581	;# 
 13606   000246                     T5CKIPPS        equ	582	;# 
 13607   000247                     T5GPPS          equ	583	;# 
 13608   000248                     T2INPPS         equ	584	;# 
 13609   000249                     T4INPPS         equ	585	;# 
 13610   00024A                     T6INPPS         equ	586	;# 
 13611   00024B                     TUIN0PPS        equ	587	;# 
 13612   00024C                     TUIN1PPS        equ	588	;# 
 13613   00024F                     CCP1PPS         equ	591	;# 
 13614   000250                     CCP2PPS         equ	592	;# 
 13615   000251                     CCP3PPS         equ	593	;# 
 13616   000253                     PWM1ERSPPS      equ	595	;# 
 13617   000254                     PWM2ERSPPS      equ	596	;# 
 13618   000255                     PWM3ERSPPS      equ	597	;# 
 13619   000256                     PWM4ERSPPS      equ	598	;# 
 13620   000257                     PWMIN0PPS       equ	599	;# 
 13621   000258                     PWMIN1PPS       equ	600	;# 
 13622   000259                     SMT1WINPPS      equ	601	;# 
 13623   00025A                     SMT1SIGPPS      equ	602	;# 
 13624   00025B                     CWG1PPS         equ	603	;# 
 13625   00025B                     CWG1INPPS       equ	603	;# 
 13626   00025C                     CWG2PPS         equ	604	;# 
 13627   00025C                     CWG2INPPS       equ	604	;# 
 13628   00025D                     CWG3PPS         equ	605	;# 
 13629   00025D                     CWG3INPPS       equ	605	;# 
 13630   00025E                     MD1CARLPPS      equ	606	;# 
 13631   00025E                     MDCARLPPS       equ	606	;# 
 13632   00025F                     MD1CARHPPS      equ	607	;# 
 13633   00025F                     MDCARHPPS       equ	607	;# 
 13634   000260                     MD1SRCPPS       equ	608	;# 
 13635   000260                     MDSRCPPS        equ	608	;# 
 13636   000261                     CLCIN0PPS       equ	609	;# 
 13637   000262                     CLCIN1PPS       equ	610	;# 
 13638   000263                     CLCIN2PPS       equ	611	;# 
 13639   000264                     CLCIN3PPS       equ	612	;# 
 13640   000265                     CLCIN4PPS       equ	613	;# 
 13641   000266                     CLCIN5PPS       equ	614	;# 
 13642   000267                     CLCIN6PPS       equ	615	;# 
 13643   000268                     CLCIN7PPS       equ	616	;# 
 13644   000269                     ADACTPPS        equ	617	;# 
 13645   00026A                     SPI1SCKPPS      equ	618	;# 
 13646   00026B                     SPI1SDIPPS      equ	619	;# 
 13647   00026C                     SPI1SSPPS       equ	620	;# 
 13648   00026D                     SPI2SCKPPS      equ	621	;# 
 13649   00026E                     SPI2SDIPPS      equ	622	;# 
 13650   00026F                     SPI2SSPPS       equ	623	;# 
 13651   000270                     I2C1SDAPPS      equ	624	;# 
 13652   000271                     I2C1SCLPPS      equ	625	;# 
 13653   000272                     U1RXPPS         equ	626	;# 
 13654   000273                     U1CTSPPS        equ	627	;# 
 13655   000274                     U2RXPPS         equ	628	;# 
 13656   000275                     U2CTSPPS        equ	629	;# 
 13657   000276                     U3RXPPS         equ	630	;# 
 13658   000277                     U3CTSPPS        equ	631	;# 
 13659   000278                     U4RXPPS         equ	632	;# 
 13660   000279                     U4CTSPPS        equ	633	;# 
 13661   00027A                     U5RXPPS         equ	634	;# 
 13662   00027B                     U5CTSPPS        equ	635	;# 
 13663   000286                     RC4I2C          equ	646	;# 
 13664   000287                     RC3I2C          equ	647	;# 
 13665   000288                     RB2I2C          equ	648	;# 
 13666   000289                     RB1I2C          equ	649	;# 
 13667   00028A                     I2C1RXB         equ	650	;# 
 13668   00028B                     I2C1TXB         equ	651	;# 
 13669   00028C                     I2C1CNTL        equ	652	;# 
 13670   00028D                     I2C1CNTH        equ	653	;# 
 13671   00028E                     I2C1ADB0        equ	654	;# 
 13672   00028F                     I2C1ADB1        equ	655	;# 
 13673   000290                     I2C1ADR0        equ	656	;# 
 13674   000291                     I2C1ADR1        equ	657	;# 
 13675   000292                     I2C1ADR2        equ	658	;# 
 13676   000293                     I2C1ADR3        equ	659	;# 
 13677   000294                     I2C1CON0        equ	660	;# 
 13678   000295                     I2C1CON1        equ	661	;# 
 13679   000296                     I2C1CON2        equ	662	;# 
 13680   000297                     I2C1ERR         equ	663	;# 
 13681   000298                     I2C1STAT0       equ	664	;# 
 13682   000299                     I2C1STAT1       equ	665	;# 
 13683   00029A                     I2C1PIR         equ	666	;# 
 13684   00029B                     I2C1PIE         equ	667	;# 
 13685   00029C                     I2C1BTO         equ	668	;# 
 13686   00029D                     I2C1BAUD        equ	669	;# 
 13687   00029E                     I2C1CLK         equ	670	;# 
 13688   00029F                     I2C1BTOC        equ	671	;# 
 13689   0002A1                     U1RXB           equ	673	;# 
 13690   0002A1                     U1RXBL          equ	673	;# 
 13691   0002A2                     U1RXCHK         equ	674	;# 
 13692   0002A3                     U1TXB           equ	675	;# 
 13693   0002A3                     U1TXBL          equ	675	;# 
 13694   0002A4                     U1TXCHK         equ	676	;# 
 13695   0002A5                     U1P1            equ	677	;# 
 13696   0002A5                     U1P1L           equ	677	;# 
 13697   0002A6                     U1P1H           equ	678	;# 
 13698   0002A7                     U1P2            equ	679	;# 
 13699   0002A7                     U1P2L           equ	679	;# 
 13700   0002A8                     U1P2H           equ	680	;# 
 13701   0002A9                     U1P3            equ	681	;# 
 13702   0002A9                     U1P3L           equ	681	;# 
 13703   0002AA                     U1P3H           equ	682	;# 
 13704   0002AB                     U1CON0          equ	683	;# 
 13705   0002AC                     U1CON1          equ	684	;# 
 13706   0002AD                     U1CON2          equ	685	;# 
 13707   0002AE                     U1BRG           equ	686	;# 
 13708   0002AE                     U1BRGL          equ	686	;# 
 13709   0002AF                     U1BRGH          equ	687	;# 
 13710   0002B0                     U1FIFO          equ	688	;# 
 13711   0002B1                     U1UIR           equ	689	;# 
 13712   0002B2                     U1ERRIR         equ	690	;# 
 13713   0002B3                     U1ERRIE         equ	691	;# 
 13714   0002B4                     U2RXB           equ	692	;# 
 13715   0002B4                     U2RXBL          equ	692	;# 
 13716   0002B5                     U2RXCHK         equ	693	;# 
 13717   0002B6                     U2TXB           equ	694	;# 
 13718   0002B6                     U2TXBL          equ	694	;# 
 13719   0002B7                     U2TXCHK         equ	695	;# 
 13720   0002B8                     U2P1            equ	696	;# 
 13721   0002B8                     U2P1L           equ	696	;# 
 13722   0002B9                     U2P1H           equ	697	;# 
 13723   0002BA                     U2P2            equ	698	;# 
 13724   0002BA                     U2P2L           equ	698	;# 
 13725   0002BB                     U2P2H           equ	699	;# 
 13726   0002BC                     U2P3            equ	700	;# 
 13727   0002BC                     U2P3L           equ	700	;# 
 13728   0002BD                     U2P3H           equ	701	;# 
 13729   0002BE                     U2CON0          equ	702	;# 
 13730   0002BF                     U2CON1          equ	703	;# 
 13731   0002C0                     U2CON2          equ	704	;# 
 13732   0002C1                     U2BRG           equ	705	;# 
 13733   0002C1                     U2BRGL          equ	705	;# 
 13734   0002C2                     U2BRGH          equ	706	;# 
 13735   0002C3                     U2FIFO          equ	707	;# 
 13736   0002C4                     U2UIR           equ	708	;# 
 13737   0002C5                     U2ERRIR         equ	709	;# 
 13738   0002C6                     U2ERRIE         equ	710	;# 
 13739   0002C7                     U3RXB           equ	711	;# 
 13740   0002C7                     U3RXBL          equ	711	;# 
 13741   0002C9                     U3TXB           equ	713	;# 
 13742   0002C9                     U3TXBL          equ	713	;# 
 13743   0002CB                     U3P1            equ	715	;# 
 13744   0002CB                     U3P1L           equ	715	;# 
 13745   0002CD                     U3P2            equ	717	;# 
 13746   0002CD                     U3P2L           equ	717	;# 
 13747   0002CF                     U3P3            equ	719	;# 
 13748   0002CF                     U3P3L           equ	719	;# 
 13749   0002D1                     U3CON0          equ	721	;# 
 13750   0002D2                     U3CON1          equ	722	;# 
 13751   0002D3                     U3CON2          equ	723	;# 
 13752   0002D4                     U3BRG           equ	724	;# 
 13753   0002D4                     U3BRGL          equ	724	;# 
 13754   0002D5                     U3BRGH          equ	725	;# 
 13755   0002D6                     U3FIFO          equ	726	;# 
 13756   0002D7                     U3UIR           equ	727	;# 
 13757   0002D8                     U3ERRIR         equ	728	;# 
 13758   0002D9                     U3ERRIE         equ	729	;# 
 13759   0002DA                     U4RXB           equ	730	;# 
 13760   0002DA                     U4RXBL          equ	730	;# 
 13761   0002DC                     U4TXB           equ	732	;# 
 13762   0002DC                     U4TXBL          equ	732	;# 
 13763   0002DE                     U4P1            equ	734	;# 
 13764   0002DE                     U4P1L           equ	734	;# 
 13765   0002E0                     U4P2            equ	736	;# 
 13766   0002E0                     U4P2L           equ	736	;# 
 13767   0002E2                     U4P3            equ	738	;# 
 13768   0002E2                     U4P3L           equ	738	;# 
 13769   0002E4                     U4CON0          equ	740	;# 
 13770   0002E5                     U4CON1          equ	741	;# 
 13771   0002E6                     U4CON2          equ	742	;# 
 13772   0002E7                     U4BRG           equ	743	;# 
 13773   0002E7                     U4BRGL          equ	743	;# 
 13774   0002E8                     U4BRGH          equ	744	;# 
 13775   0002E9                     U4FIFO          equ	745	;# 
 13776   0002EA                     U4UIR           equ	746	;# 
 13777   0002EB                     U4ERRIR         equ	747	;# 
 13778   0002EC                     U4ERRIE         equ	748	;# 
 13779   0002ED                     U5RXB           equ	749	;# 
 13780   0002ED                     U5RXBL          equ	749	;# 
 13781   0002EF                     U5TXB           equ	751	;# 
 13782   0002EF                     U5TXBL          equ	751	;# 
 13783   0002F1                     U5P1            equ	753	;# 
 13784   0002F1                     U5P1L           equ	753	;# 
 13785   0002F3                     U5P2            equ	755	;# 
 13786   0002F3                     U5P2L           equ	755	;# 
 13787   0002F5                     U5P3            equ	757	;# 
 13788   0002F5                     U5P3L           equ	757	;# 
 13789   0002F7                     U5CON0          equ	759	;# 
 13790   0002F8                     U5CON1          equ	760	;# 
 13791   0002F9                     U5CON2          equ	761	;# 
 13792   0002FA                     U5BRG           equ	762	;# 
 13793   0002FA                     U5BRGL          equ	762	;# 
 13794   0002FB                     U5BRGH          equ	763	;# 
 13795   0002FC                     U5FIFO          equ	764	;# 
 13796   0002FD                     U5UIR           equ	765	;# 
 13797   0002FE                     U5ERRIR         equ	766	;# 
 13798   0002FF                     U5ERRIE         equ	767	;# 
 13799   000300                     SMT1TMR         equ	768	;# 
 13800   000300                     SMT1TMRL        equ	768	;# 
 13801   000301                     SMT1TMRH        equ	769	;# 
 13802   000302                     SMT1TMRU        equ	770	;# 
 13803   000303                     SMT1CPR         equ	771	;# 
 13804   000303                     SMT1CPRL        equ	771	;# 
 13805   000304                     SMT1CPRH        equ	772	;# 
 13806   000305                     SMT1CPRU        equ	773	;# 
 13807   000306                     SMT1CPW         equ	774	;# 
 13808   000306                     SMT1CPWL        equ	774	;# 
 13809   000307                     SMT1CPWH        equ	775	;# 
 13810   000308                     SMT1CPWU        equ	776	;# 
 13811   000309                     SMT1PR          equ	777	;# 
 13812   000309                     SMT1PRL         equ	777	;# 
 13813   00030A                     SMT1PRH         equ	778	;# 
 13814   00030B                     SMT1PRU         equ	779	;# 
 13815   00030C                     SMT1CON0        equ	780	;# 
 13816   00030D                     SMT1CON1        equ	781	;# 
 13817   00030E                     SMT1STAT        equ	782	;# 
 13818   00030F                     SMT1CLK         equ	783	;# 
 13819   000310                     SMT1SIG         equ	784	;# 
 13820   000311                     SMT1WIN         equ	785	;# 
 13821   000318                     TMR0L           equ	792	;# 
 13822   000318                     TMR0            equ	792	;# 
 13823   000319                     TMR0H           equ	793	;# 
 13824   000319                     PR0             equ	793	;# 
 13825   00031A                     T0CON0          equ	794	;# 
 13826   00031B                     T0CON1          equ	795	;# 
 13827   00031C                     TMR1            equ	796	;# 
 13828   00031C                     TMR1L           equ	796	;# 
 13829   00031D                     TMR1H           equ	797	;# 
 13830   00031E                     T1CON           equ	798	;# 
 13831   00031E                     TMR1CON         equ	798	;# 
 13832   00031F                     T1GCON          equ	799	;# 
 13833   00031F                     TMR1GCON        equ	799	;# 
 13834   000320                     T1GATE          equ	800	;# 
 13835   000320                     TMR1GATE        equ	800	;# 
 13836   000321                     T1CLK           equ	801	;# 
 13837   000321                     TMR1CLK         equ	801	;# 
 13838   000321                     PR1             equ	801	;# 
 13839   000322                     T2TMR           equ	802	;# 
 13840   000322                     TMR2            equ	802	;# 
 13841   000323                     T2PR            equ	803	;# 
 13842   000323                     PR2             equ	803	;# 
 13843   000324                     T2CON           equ	804	;# 
 13844   000325                     T2HLT           equ	805	;# 
 13845   000326                     T2CLKCON        equ	806	;# 
 13846   000326                     T2CLK           equ	806	;# 
 13847   000327                     T2RST           equ	807	;# 
 13848   000328                     TMR3            equ	808	;# 
 13849   000328                     TMR3L           equ	808	;# 
 13850   000329                     TMR3H           equ	809	;# 
 13851   00032A                     T3CON           equ	810	;# 
 13852   00032A                     TMR3CON         equ	810	;# 
 13853   00032B                     T3GCON          equ	811	;# 
 13854   00032B                     TMR3GCON        equ	811	;# 
 13855   00032C                     T3GATE          equ	812	;# 
 13856   00032C                     TMR3GATE        equ	812	;# 
 13857   00032D                     T3CLK           equ	813	;# 
 13858   00032D                     TMR3CLK         equ	813	;# 
 13859   00032D                     PR3             equ	813	;# 
 13860   00032E                     T4TMR           equ	814	;# 
 13861   00032E                     TMR4            equ	814	;# 
 13862   00032F                     T4PR            equ	815	;# 
 13863   00032F                     PR4             equ	815	;# 
 13864   000330                     T4CON           equ	816	;# 
 13865   000331                     T4HLT           equ	817	;# 
 13866   000332                     T4CLKCON        equ	818	;# 
 13867   000332                     T4CLK           equ	818	;# 
 13868   000333                     T4RST           equ	819	;# 
 13869   000334                     TMR5            equ	820	;# 
 13870   000334                     TMR5L           equ	820	;# 
 13871   000335                     TMR5H           equ	821	;# 
 13872   000336                     T5CON           equ	822	;# 
 13873   000336                     TMR5CON         equ	822	;# 
 13874   000337                     T5GCON          equ	823	;# 
 13875   000337                     TMR5GCON        equ	823	;# 
 13876   000338                     T5GATE          equ	824	;# 
 13877   000338                     TMR5GATE        equ	824	;# 
 13878   000339                     T5CLK           equ	825	;# 
 13879   000339                     TMR5CLK         equ	825	;# 
 13880   000339                     PR5             equ	825	;# 
 13881   00033A                     T6TMR           equ	826	;# 
 13882   00033A                     TMR6            equ	826	;# 
 13883   00033B                     T6PR            equ	827	;# 
 13884   00033B                     PR6             equ	827	;# 
 13885   00033C                     T6CON           equ	828	;# 
 13886   00033D                     T6HLT           equ	829	;# 
 13887   00033E                     T6CLKCON        equ	830	;# 
 13888   00033E                     T6CLK           equ	830	;# 
 13889   00033F                     T6RST           equ	831	;# 
 13890   000340                     CCPR1           equ	832	;# 
 13891   000340                     CCPR1L          equ	832	;# 
 13892   000341                     CCPR1H          equ	833	;# 
 13893   000342                     CCP1CON         equ	834	;# 
 13894   000343                     CCP1CAP         equ	835	;# 
 13895   000344                     CCPR2           equ	836	;# 
 13896   000344                     CCPR2L          equ	836	;# 
 13897   000345                     CCPR2H          equ	837	;# 
 13898   000346                     CCP2CON         equ	838	;# 
 13899   000347                     CCP2CAP         equ	839	;# 
 13900   000348                     CCPR3           equ	840	;# 
 13901   000348                     CCPR3L          equ	840	;# 
 13902   000349                     CCPR3H          equ	841	;# 
 13903   00034A                     CCP3CON         equ	842	;# 
 13904   00034B                     CCP3CAP         equ	843	;# 
 13905   00034C                     CCPTMRS0        equ	844	;# 
 13906   00034F                     CRCDATA         equ	847	;# 
 13907   00034F                     CRCDATAL        equ	847	;# 
 13908   000350                     CRCDATAH        equ	848	;# 
 13909   000351                     CRCDATAU        equ	849	;# 
 13910   000352                     CRCDATAT        equ	850	;# 
 13911   000353                     CRCOUT          equ	851	;# 
 13912   000353                     CRCSHFT         equ	851	;# 
 13913   000353                     CRCXOR          equ	851	;# 
 13914   000353                     CRCOUTL         equ	851	;# 
 13915   000353                     CRCSHFTL        equ	851	;# 
 13916   000353                     CRCSHIFTL       equ	851	;# 
 13917   000353                     CRCXORL         equ	851	;# 
 13918   000354                     CRCOUTH         equ	852	;# 
 13919   000354                     CRCSHFTH        equ	852	;# 
 13920   000354                     CRCSHIFTH       equ	852	;# 
 13921   000354                     CRCXORH         equ	852	;# 
 13922   000355                     CRCOUTU         equ	853	;# 
 13923   000355                     CRCSHFTU        equ	853	;# 
 13924   000355                     CRCSHIFTU       equ	853	;# 
 13925   000355                     CRCXORU         equ	853	;# 
 13926   000356                     CRCOUTT         equ	854	;# 
 13927   000356                     CRCSHFTT        equ	854	;# 
 13928   000356                     CRCSHIFTT       equ	854	;# 
 13929   000356                     CRCXORT         equ	854	;# 
 13930   000357                     CRCCON0         equ	855	;# 
 13931   000358                     CRCCON1         equ	856	;# 
 13932   000359                     CRCCON2         equ	857	;# 
 13933   00035A                     SCANLADR        equ	858	;# 
 13934   00035A                     SCANLADRL       equ	858	;# 
 13935   00035B                     SCANLADRH       equ	859	;# 
 13936   00035C                     SCANLADRU       equ	860	;# 
 13937   00035D                     SCANHADR        equ	861	;# 
 13938   00035D                     SCANHADRL       equ	861	;# 
 13939   00035E                     SCANHADRH       equ	862	;# 
 13940   00035F                     SCANHADRU       equ	863	;# 
 13941   000360                     SCANCON0        equ	864	;# 
 13942   000361                     SCANTRIG        equ	865	;# 
 13943   000362                     IPR0            equ	866	;# 
 13944   000363                     IPR1            equ	867	;# 
 13945   000364                     IPR2            equ	868	;# 
 13946   000365                     IPR3            equ	869	;# 
 13947   000366                     IPR4            equ	870	;# 
 13948   000367                     IPR5            equ	871	;# 
 13949   000368                     IPR6            equ	872	;# 
 13950   000369                     IPR7            equ	873	;# 
 13951   00036A                     IPR8            equ	874	;# 
 13952   00036B                     IPR9            equ	875	;# 
 13953   00036C                     IPR10           equ	876	;# 
 13954   00036D                     IPR11           equ	877	;# 
 13955   00036E                     IPR12           equ	878	;# 
 13956   00036F                     IPR13           equ	879	;# 
 13957   000370                     IPR14           equ	880	;# 
 13958   000371                     IPR15           equ	881	;# 
 13959   000373                     STATUS_CSHAD    equ	883	;# 
 13960   000374                     WREG_CSHAD      equ	884	;# 
 13961   000375                     BSR_CSHAD       equ	885	;# 
 13962   000376                     SHADCON         equ	886	;# 
 13963   000377                     STATUS_SHAD     equ	887	;# 
 13964   000378                     WREG_SHAD       equ	888	;# 
 13965   000379                     BSR_SHAD        equ	889	;# 
 13966   00037A                     PCLATH_SHAD     equ	890	;# 
 13967   00037B                     PCLATU_SHAD     equ	891	;# 
 13968   00037C                     FSR0SH          equ	892	;# 
 13969   00037C                     FSR0L_SHAD      equ	892	;# 
 13970   00037D                     FSR0H_SHAD      equ	893	;# 
 13971   00037E                     FSR1SH          equ	894	;# 
 13972   00037E                     FSR1L_SHAD      equ	894	;# 
 13973   00037F                     FSR1H_SHAD      equ	895	;# 
 13974   000380                     FSR2SH          equ	896	;# 
 13975   000380                     FSR2L_SHAD      equ	896	;# 
 13976   000381                     FSR2H_SHAD      equ	897	;# 
 13977   000382                     PRODSH          equ	898	;# 
 13978   000382                     PRODL_SHAD      equ	898	;# 
 13979   000383                     PRODH_SHAD      equ	899	;# 
 13980   000387                     TU16ACON0       equ	903	;# 
 13981   000388                     TU16ACON1       equ	904	;# 
 13982   000389                     TU16AHLT        equ	905	;# 
 13983   00038A                     TU16APS         equ	906	;# 
 13984   00038B                     TU16ATMR        equ	907	;# 
 13985   00038B                     TU16ACR         equ	907	;# 
 13986   00038B                     TU16ATMRL       equ	907	;# 
 13987   00038B                     TU16ACRL        equ	907	;# 
 13988   00038C                     TU16ATMRH       equ	908	;# 
 13989   00038C                     TU16ACRH        equ	908	;# 
 13990   00038D                     TU16APR         equ	909	;# 
 13991   00038D                     TU16APRL        equ	909	;# 
 13992   00038E                     TU16APRH        equ	910	;# 
 13993   00038F                     TU16ACLK        equ	911	;# 
 13994   000390                     TU16AERS        equ	912	;# 
 13995   000393                     TU16BCON0       equ	915	;# 
 13996   000394                     TU16BCON1       equ	916	;# 
 13997   000395                     TU16BHLT        equ	917	;# 
 13998   000396                     TU16BPS         equ	918	;# 
 13999   000397                     TU16BTMR        equ	919	;# 
 14000   000397                     TU16BCR         equ	919	;# 
 14001   000397                     TU16BTMRL       equ	919	;# 
 14002   000397                     TU16BCRL        equ	919	;# 
 14003   000398                     TU16BTMRH       equ	920	;# 
 14004   000398                     TU16BCRH        equ	920	;# 
 14005   000399                     TU16BPR         equ	921	;# 
 14006   000399                     TU16BPRL        equ	921	;# 
 14007   00039A                     TU16BPRH        equ	922	;# 
 14008   00039B                     TU16BCLK        equ	923	;# 
 14009   00039C                     TU16BERS        equ	924	;# 
 14010   0003BB                     TUCHAIN         equ	955	;# 
 14011   0003BC                     CWG1CLK         equ	956	;# 
 14012   0003BC                     CWG1CLKCON      equ	956	;# 
 14013   0003BD                     CWG1ISM         equ	957	;# 
 14014   0003BE                     CWG1DBR         equ	958	;# 
 14015   0003BF                     CWG1DBF         equ	959	;# 
 14016   0003C0                     CWG1CON0        equ	960	;# 
 14017   0003C1                     CWG1CON1        equ	961	;# 
 14018   0003C2                     CWG1AS0         equ	962	;# 
 14019   0003C3                     CWG1AS1         equ	963	;# 
 14020   0003C4                     CWG1STR         equ	964	;# 
 14021   0003C5                     CWG2CLK         equ	965	;# 
 14022   0003C5                     CWG2CLKCON      equ	965	;# 
 14023   0003C6                     CWG2ISM         equ	966	;# 
 14024   0003C7                     CWG2DBR         equ	967	;# 
 14025   0003C8                     CWG2DBF         equ	968	;# 
 14026   0003C9                     CWG2CON0        equ	969	;# 
 14027   0003CA                     CWG2CON1        equ	970	;# 
 14028   0003CB                     CWG2AS0         equ	971	;# 
 14029   0003CC                     CWG2AS1         equ	972	;# 
 14030   0003CD                     CWG2STR         equ	973	;# 
 14031   0003CE                     CWG3CLK         equ	974	;# 
 14032   0003CE                     CWG3CLKCON      equ	974	;# 
 14033   0003CF                     CWG3ISM         equ	975	;# 
 14034   0003D0                     CWG3DBR         equ	976	;# 
 14035   0003D1                     CWG3DBF         equ	977	;# 
 14036   0003D2                     CWG3CON0        equ	978	;# 
 14037   0003D3                     CWG3CON1        equ	979	;# 
 14038   0003D4                     CWG3AS0         equ	980	;# 
 14039   0003D5                     CWG3AS1         equ	981	;# 
 14040   0003D6                     CWG3STR         equ	982	;# 
 14041   0003D7                     FVRCON          equ	983	;# 
 14042   0003D8                     ADCPCON         equ	984	;# 
 14043   0003D8                     ADCP            equ	984	;# 
 14044   0003D9                     ADLTH           equ	985	;# 
 14045   0003D9                     ADLTHL          equ	985	;# 
 14046   0003DA                     ADLTHH          equ	986	;# 
 14047   0003DB                     ADUTH           equ	987	;# 
 14048   0003DB                     ADUTHL          equ	987	;# 
 14049   0003DC                     ADUTHH          equ	988	;# 
 14050   0003DD                     ADERR           equ	989	;# 
 14051   0003DD                     ADERRL          equ	989	;# 
 14052   0003DE                     ADERRH          equ	990	;# 
 14053   0003DF                     ADSTPT          equ	991	;# 
 14054   0003DF                     ADSTPTL         equ	991	;# 
 14055   0003E0                     ADSTPTH         equ	992	;# 
 14056   0003E1                     ADFLTR          equ	993	;# 
 14057   0003E1                     ADFLTRL         equ	993	;# 
 14058   0003E2                     ADFLTRH         equ	994	;# 
 14059   0003E3                     ADACC           equ	995	;# 
 14060   0003E3                     ADACCL          equ	995	;# 
 14061   0003E4                     ADACCH          equ	996	;# 
 14062   0003E5                     ADACCU          equ	997	;# 
 14063   0003E6                     ADCNT           equ	998	;# 
 14064   0003E7                     ADRPT           equ	999	;# 
 14065   0003E8                     ADPREV          equ	1000	;# 
 14066   0003E8                     ADPREVL         equ	1000	;# 
 14067   0003E9                     ADPREVH         equ	1001	;# 
 14068   0003EA                     ADRES           equ	1002	;# 
 14069   0003EA                     ADRESL          equ	1002	;# 
 14070   0003EB                     ADRESH          equ	1003	;# 
 14071   0003EC                     ADPCH           equ	1004	;# 
 14072   0003EE                     ADACQ           equ	1006	;# 
 14073   0003EE                     ADACQL          equ	1006	;# 
 14074   0003EF                     ADACQH          equ	1007	;# 
 14075   0003F0                     ADCAP           equ	1008	;# 
 14076   0003F1                     ADPRE           equ	1009	;# 
 14077   0003F1                     ADPREL          equ	1009	;# 
 14078   0003F2                     ADPREH          equ	1010	;# 
 14079   0003F3                     ADCON0          equ	1011	;# 
 14080   0003F4                     ADCON1          equ	1012	;# 
 14081   0003F5                     ADCON2          equ	1013	;# 
 14082   0003F6                     ADCON3          equ	1014	;# 
 14083   0003F7                     ADSTAT          equ	1015	;# 
 14084   0003F8                     ADREF           equ	1016	;# 
 14085   0003F9                     ADACT           equ	1017	;# 
 14086   0003FA                     ADCLK           equ	1018	;# 
 14087   0003FB                     ADCTX           equ	1019	;# 
 14088   0003FC                     ADCSEL1         equ	1020	;# 
 14089   0003FD                     ADCSEL2         equ	1021	;# 
 14090   0003FE                     ADCSEL3         equ	1022	;# 
 14091   0003FF                     ADCSEL4         equ	1023	;# 
 14092   000400                     ANSELA          equ	1024	;# 
 14093   000401                     WPUA            equ	1025	;# 
 14094   000402                     ODCONA          equ	1026	;# 
 14095   000403                     SLRCONA         equ	1027	;# 
 14096   000404                     INLVLA          equ	1028	;# 
 14097   000405                     IOCAP           equ	1029	;# 
 14098   000406                     IOCAN           equ	1030	;# 
 14099   000407                     IOCAF           equ	1031	;# 
 14100   000408                     ANSELB          equ	1032	;# 
 14101   000409                     WPUB            equ	1033	;# 
 14102   00040A                     ODCONB          equ	1034	;# 
 14103   00040B                     SLRCONB         equ	1035	;# 
 14104   00040C                     INLVLB          equ	1036	;# 
 14105   00040D                     IOCBP           equ	1037	;# 
 14106   00040E                     IOCBN           equ	1038	;# 
 14107   00040F                     IOCBF           equ	1039	;# 
 14108   000410                     ANSELC          equ	1040	;# 
 14109   000411                     WPUC            equ	1041	;# 
 14110   000412                     ODCONC          equ	1042	;# 
 14111   000413                     SLRCONC         equ	1043	;# 
 14112   000414                     INLVLC          equ	1044	;# 
 14113   000415                     IOCCP           equ	1045	;# 
 14114   000416                     IOCCN           equ	1046	;# 
 14115   000417                     IOCCF           equ	1047	;# 
 14116   000421                     WPUE            equ	1057	;# 
 14117   000424                     INLVLE          equ	1060	;# 
 14118   000425                     IOCEP           equ	1061	;# 
 14119   000426                     IOCEN           equ	1062	;# 
 14120   000427                     IOCEF           equ	1063	;# 
 14121   000440                     NCO1ACC         equ	1088	;# 
 14122   000440                     NCO1ACCL        equ	1088	;# 
 14123   000441                     NCO1ACCH        equ	1089	;# 
 14124   000442                     NCO1ACCU        equ	1090	;# 
 14125   000443                     NCO1INC         equ	1091	;# 
 14126   000443                     NCO1INCL        equ	1091	;# 
 14127   000444                     NCO1INCH        equ	1092	;# 
 14128   000445                     NCO1INCU        equ	1093	;# 
 14129   000446                     NCO1CON         equ	1094	;# 
 14130   000447                     NCO1CLK         equ	1095	;# 
 14131   000448                     NCO2ACC         equ	1096	;# 
 14132   000448                     NCO2ACCL        equ	1096	;# 
 14133   000449                     NCO2ACCH        equ	1097	;# 
 14134   00044A                     NCO2ACCU        equ	1098	;# 
 14135   00044B                     NCO2INC         equ	1099	;# 
 14136   00044B                     NCO2INCL        equ	1099	;# 
 14137   00044C                     NCO2INCH        equ	1100	;# 
 14138   00044D                     NCO2INCU        equ	1101	;# 
 14139   00044E                     NCO2CON         equ	1102	;# 
 14140   00044F                     NCO2CLK         equ	1103	;# 
 14141   000450                     NCO3ACC         equ	1104	;# 
 14142   000450                     NCO3ACCL        equ	1104	;# 
 14143   000451                     NCO3ACCH        equ	1105	;# 
 14144   000452                     NCO3ACCU        equ	1106	;# 
 14145   000453                     NCO3INC         equ	1107	;# 
 14146   000453                     NCO3INCL        equ	1107	;# 
 14147   000454                     NCO3INCH        equ	1108	;# 
 14148   000455                     NCO3INCU        equ	1109	;# 
 14149   000456                     NCO3CON         equ	1110	;# 
 14150   000457                     NCO3CLK         equ	1111	;# 
 14151   000458                     FSCMCON         equ	1112	;# 
 14152   000459                     IVTLOCK         equ	1113	;# 
 14153   00045A                     IVTAD           equ	1114	;# 
 14154   00045A                     IVTADL          equ	1114	;# 
 14155   00045B                     IVTADH          equ	1115	;# 
 14156   00045C                     IVTADU          equ	1116	;# 
 14157   00045D                     IVTBASE         equ	1117	;# 
 14158   00045D                     IVTBASEL        equ	1117	;# 
 14159   00045E                     IVTBASEH        equ	1118	;# 
 14160   00045F                     IVTBASEU        equ	1119	;# 
 14161   000460                     PWM1ERS         equ	1120	;# 
 14162   000461                     PWM1CLK         equ	1121	;# 
 14163   000462                     PWM1LDS         equ	1122	;# 
 14164   000463                     PWM1PR          equ	1123	;# 
 14165   000463                     PWM1PRL         equ	1123	;# 
 14166   000464                     PWM1PRH         equ	1124	;# 
 14167   000465                     PWM1CPRE        equ	1125	;# 
 14168   000466                     PWM1PIPOS       equ	1126	;# 
 14169   000467                     PWM1GIR         equ	1127	;# 
 14170   000468                     PWM1GIE         equ	1128	;# 
 14171   000469                     PWM1CON         equ	1129	;# 
 14172   00046A                     PWM1S1CFG       equ	1130	;# 
 14173   00046B                     PWM1S1P1        equ	1131	;# 
 14174   00046B                     PWM1S1P1L       equ	1131	;# 
 14175   00046C                     PWM1S1P1H       equ	1132	;# 
 14176   00046D                     PWM1S1P2        equ	1133	;# 
 14177   00046D                     PWM1S1P2L       equ	1133	;# 
 14178   00046E                     PWM1S1P2H       equ	1134	;# 
 14179   00046F                     PWM2ERS         equ	1135	;# 
 14180   000470                     PWM2CLK         equ	1136	;# 
 14181   000471                     PWM2LDS         equ	1137	;# 
 14182   000472                     PWM2PR          equ	1138	;# 
 14183   000472                     PWM2PRL         equ	1138	;# 
 14184   000473                     PWM2PRH         equ	1139	;# 
 14185   000474                     PWM2CPRE        equ	1140	;# 
 14186   000475                     PWM2PIPOS       equ	1141	;# 
 14187   000476                     PWM2GIR         equ	1142	;# 
 14188   000477                     PWM2GIE         equ	1143	;# 
 14189   000478                     PWM2CON         equ	1144	;# 
 14190   000479                     PWM2S1CFG       equ	1145	;# 
 14191   00047A                     PWM2S1P1        equ	1146	;# 
 14192   00047A                     PWM2S1P1L       equ	1146	;# 
 14193   00047B                     PWM2S1P1H       equ	1147	;# 
 14194   00047C                     PWM2S1P2        equ	1148	;# 
 14195   00047C                     PWM2S1P2L       equ	1148	;# 
 14196   00047D                     PWM2S1P2H       equ	1149	;# 
 14197   00047E                     PWM3ERS         equ	1150	;# 
 14198   00047F                     PWM3CLK         equ	1151	;# 
 14199   000480                     PWM3LDS         equ	1152	;# 
 14200   000481                     PWM3PR          equ	1153	;# 
 14201   000481                     PWM3PRL         equ	1153	;# 
 14202   000482                     PWM3PRH         equ	1154	;# 
 14203   000483                     PWM3CPRE        equ	1155	;# 
 14204   000484                     PWM3PIPOS       equ	1156	;# 
 14205   000485                     PWM3GIR         equ	1157	;# 
 14206   000486                     PWM3GIE         equ	1158	;# 
 14207   000487                     PWM3CON         equ	1159	;# 
 14208   000488                     PWM3S1CFG       equ	1160	;# 
 14209   000489                     PWM3S1P1        equ	1161	;# 
 14210   000489                     PWM3S1P1L       equ	1161	;# 
 14211   00048A                     PWM3S1P1H       equ	1162	;# 
 14212   00048B                     PWM3S1P2        equ	1163	;# 
 14213   00048B                     PWM3S1P2L       equ	1163	;# 
 14214   00048C                     PWM3S1P2H       equ	1164	;# 
 14215   00048D                     PWM4ERS         equ	1165	;# 
 14216   00048E                     PWM4CLK         equ	1166	;# 
 14217   00048F                     PWM4LDS         equ	1167	;# 
 14218   000490                     PWM4PR          equ	1168	;# 
 14219   000490                     PWM4PRL         equ	1168	;# 
 14220   000491                     PWM4PRH         equ	1169	;# 
 14221   000492                     PWM4CPRE        equ	1170	;# 
 14222   000493                     PWM4PIPOS       equ	1171	;# 
 14223   000494                     PWM4GIR         equ	1172	;# 
 14224   000495                     PWM4GIE         equ	1173	;# 
 14225   000496                     PWM4CON         equ	1174	;# 
 14226   000497                     PWM4S1CFG       equ	1175	;# 
 14227   000498                     PWM4S1P1        equ	1176	;# 
 14228   000498                     PWM4S1P1L       equ	1176	;# 
 14229   000499                     PWM4S1P1H       equ	1177	;# 
 14230   00049A                     PWM4S1P2        equ	1178	;# 
 14231   00049A                     PWM4S1P2L       equ	1178	;# 
 14232   00049B                     PWM4S1P2H       equ	1179	;# 
 14233   00049C                     PWMLOAD         equ	1180	;# 
 14234   00049D                     PWMEN           equ	1181	;# 
 14235   00049E                     PIE0            equ	1182	;# 
 14236   00049F                     PIE1            equ	1183	;# 
 14237   0004A0                     PIE2            equ	1184	;# 
 14238   0004A1                     PIE3            equ	1185	;# 
 14239   0004A2                     PIE4            equ	1186	;# 
 14240   0004A3                     PIE5            equ	1187	;# 
 14241   0004A4                     PIE6            equ	1188	;# 
 14242   0004A5                     PIE7            equ	1189	;# 
 14243   0004A6                     PIE8            equ	1190	;# 
 14244   0004A7                     PIE9            equ	1191	;# 
 14245   0004A8                     PIE10           equ	1192	;# 
 14246   0004A9                     PIE11           equ	1193	;# 
 14247   0004AA                     PIE12           equ	1194	;# 
 14248   0004AB                     PIE13           equ	1195	;# 
 14249   0004AC                     PIE14           equ	1196	;# 
 14250   0004AD                     PIE15           equ	1197	;# 
 14251   0004AE                     PIR0            equ	1198	;# 
 14252   0004AF                     PIR1            equ	1199	;# 
 14253   0004B0                     PIR2            equ	1200	;# 
 14254   0004B1                     PIR3            equ	1201	;# 
 14255   0004B2                     PIR4            equ	1202	;# 
 14256   0004B3                     PIR5            equ	1203	;# 
 14257   0004B4                     PIR6            equ	1204	;# 
 14258   0004B5                     PIR7            equ	1205	;# 
 14259   0004B6                     PIR8            equ	1206	;# 
 14260   0004B7                     PIR9            equ	1207	;# 
 14261   0004B8                     PIR10           equ	1208	;# 
 14262   0004B9                     PIR11           equ	1209	;# 
 14263   0004BA                     PIR12           equ	1210	;# 
 14264   0004BB                     PIR13           equ	1211	;# 
 14265   0004BC                     PIR14           equ	1212	;# 
 14266   0004BD                     PIR15           equ	1213	;# 
 14267   0004BE                     LATA            equ	1214	;# 
 14268   0004BF                     LATB            equ	1215	;# 
 14269   0004C0                     LATC            equ	1216	;# 
 14270   0004C6                     TRISA           equ	1222	;# 
 14271   0004C7                     TRISB           equ	1223	;# 
 14272   0004C8                     TRISC           equ	1224	;# 
 14273   0004CA                     TRISE           equ	1226	;# 
 14274   0004CE                     PORTA           equ	1230	;# 
 14275   0004CF                     PORTB           equ	1231	;# 
 14276   0004D0                     PORTC           equ	1232	;# 
 14277   0004D2                     PORTE           equ	1234	;# 
 14278   0004D6                     INTCON0         equ	1238	;# 
 14279   0004D7                     INTCON1         equ	1239	;# 
 14280   0004D8                     STATUS          equ	1240	;# 
 14281   0004D9                     FSR2            equ	1241	;# 
 14282   0004D9                     FSR2L           equ	1241	;# 
 14283   0004DA                     FSR2H           equ	1242	;# 
 14284   0004DB                     PLUSW2          equ	1243	;# 
 14285   0004DC                     PREINC2         equ	1244	;# 
 14286   0004DD                     POSTDEC2        equ	1245	;# 
 14287   0004DE                     POSTINC2        equ	1246	;# 
 14288   0004DF                     INDF2           equ	1247	;# 
 14289   0004E0                     BSR             equ	1248	;# 
 14290   0004E1                     FSR1            equ	1249	;# 
 14291   0004E1                     FSR1L           equ	1249	;# 
 14292   0004E2                     FSR1H           equ	1250	;# 
 14293   0004E3                     PLUSW1          equ	1251	;# 
 14294   0004E4                     PREINC1         equ	1252	;# 
 14295   0004E5                     POSTDEC1        equ	1253	;# 
 14296   0004E6                     POSTINC1        equ	1254	;# 
 14297   0004E7                     INDF1           equ	1255	;# 
 14298   0004E8                     WREG            equ	1256	;# 
 14299   0004E9                     FSR0            equ	1257	;# 
 14300   0004E9                     FSR0L           equ	1257	;# 
 14301   0004EA                     FSR0H           equ	1258	;# 
 14302   0004EB                     PLUSW0          equ	1259	;# 
 14303   0004EC                     PREINC0         equ	1260	;# 
 14304   0004ED                     POSTDEC0        equ	1261	;# 
 14305   0004EE                     POSTINC0        equ	1262	;# 
 14306   0004EF                     INDF0           equ	1263	;# 
 14307   0004F0                     PCON0           equ	1264	;# 
 14308   0004F1                     PCON1           equ	1265	;# 
 14309   0004F2                     CPUDOZE         equ	1266	;# 
 14310   0004F3                     PROD            equ	1267	;# 
 14311   0004F3                     PRODL           equ	1267	;# 
 14312   0004F4                     PRODH           equ	1268	;# 
 14313   0004F5                     TABLAT          equ	1269	;# 
 14314   0004F6                     TBLPTR          equ	1270	;# 
 14315   0004F6                     TBLPTRL         equ	1270	;# 
 14316   0004F7                     TBLPTRH         equ	1271	;# 
 14317   0004F8                     TBLPTRU         equ	1272	;# 
 14318   0004F9                     PCLAT           equ	1273	;# 
 14319   0004F9                     PCL             equ	1273	;# 
 14320   0004FA                     PCLATH          equ	1274	;# 
 14321   0004FB                     PCLATU          equ	1275	;# 
 14322   0004FC                     STKPTR          equ	1276	;# 
 14323   0004FD                     TOS             equ	1277	;# 
 14324   0004FD                     TOSL            equ	1277	;# 
 14325   0004FE                     TOSH            equ	1278	;# 
 14326   0004FF                     TOSU            equ	1279	;# 
 14327   000038                     BOOTREG         equ	56	;# 
 14328   000039                     CLKRCON         equ	57	;# 
 14329   00003A                     CLKRCLK         equ	58	;# 
 14330   000040                     NVMCON0         equ	64	;# 
 14331   000041                     NVMCON1         equ	65	;# 
 14332   000042                     NVMLOCK         equ	66	;# 
 14333   000043                     NVMADR          equ	67	;# 
 14334   000043                     NVMADRL         equ	67	;# 
 14335   000044                     NVMADRH         equ	68	;# 
 14336   000045                     NVMADRU         equ	69	;# 
 14337   000046                     NVMDAT          equ	70	;# 
 14338   000046                     NVMDATL         equ	70	;# 
 14339   000047                     NVMDATH         equ	71	;# 
 14340   000048                     VREGCON         equ	72	;# 
 14341   000049                     BORCON          equ	73	;# 
 14342   00004A                     HLVDCON0        equ	74	;# 
 14343   00004B                     HLVDCON1        equ	75	;# 
 14344   00004C                     ZCDCON          equ	76	;# 
 14345   000060                     PMD0            equ	96	;# 
 14346   000061                     PMD1            equ	97	;# 
 14347   000062                     PMD2            equ	98	;# 
 14348   000063                     PMD3            equ	99	;# 
 14349   000064                     PMD4            equ	100	;# 
 14350   000065                     PMD5            equ	101	;# 
 14351   000066                     PMD6            equ	102	;# 
 14352   000067                     PMD7            equ	103	;# 
 14353   000068                     PMD8            equ	104	;# 
 14354   00006A                     MD1CON0         equ	106	;# 
 14355   00006B                     MD1CON1         equ	107	;# 
 14356   00006C                     MD1SRC          equ	108	;# 
 14357   00006D                     MD1CARL         equ	109	;# 
 14358   00006E                     MD1CARH         equ	110	;# 
 14359   00006F                     CMOUT           equ	111	;# 
 14360   000070                     CM1CON0         equ	112	;# 
 14361   000071                     CM1CON1         equ	113	;# 
 14362   000072                     CM1NCH          equ	114	;# 
 14363   000073                     CM1PCH          equ	115	;# 
 14364   000074                     CM2CON0         equ	116	;# 
 14365   000075                     CM2CON1         equ	117	;# 
 14366   000076                     CM2NCH          equ	118	;# 
 14367   000077                     CM2PCH          equ	119	;# 
 14368   000078                     WDTCON0         equ	120	;# 
 14369   000079                     WDTCON1         equ	121	;# 
 14370   00007A                     WDTPSL          equ	122	;# 
 14371   00007B                     WDTPSH          equ	123	;# 
 14372   00007C                     WDTTMR          equ	124	;# 
 14373   00007D                     DAC1DAT         equ	125	;# 
 14374   00007D                     DAC1DATL        equ	125	;# 
 14375   00007F                     DAC1CON         equ	127	;# 
 14376   000080                     SPI1RXB         equ	128	;# 
 14377   000081                     SPI1TXB         equ	129	;# 
 14378   000082                     SPI1TCNT        equ	130	;# 
 14379   000082                     SPI1TCNTL       equ	130	;# 
 14380   000083                     SPI1TCNTH       equ	131	;# 
 14381   000084                     SPI1CON0        equ	132	;# 
 14382   000085                     SPI1CON1        equ	133	;# 
 14383   000086                     SPI1CON2        equ	134	;# 
 14384   000087                     SPI1STATUS      equ	135	;# 
 14385   000088                     SPI1TWIDTH      equ	136	;# 
 14386   000089                     SPI1BAUD        equ	137	;# 
 14387   00008A                     SPI1INTF        equ	138	;# 
 14388   00008B                     SPI1INTE        equ	139	;# 
 14389   00008C                     SPI1CLK         equ	140	;# 
 14390   00008D                     SPI2RXB         equ	141	;# 
 14391   00008E                     SPI2TXB         equ	142	;# 
 14392   00008F                     SPI2TCNT        equ	143	;# 
 14393   00008F                     SPI2TCNTL       equ	143	;# 
 14394   000090                     SPI2TCNTH       equ	144	;# 
 14395   000091                     SPI2CON0        equ	145	;# 
 14396   000092                     SPI2CON1        equ	146	;# 
 14397   000093                     SPI2CON2        equ	147	;# 
 14398   000094                     SPI2STATUS      equ	148	;# 
 14399   000095                     SPI2TWIDTH      equ	149	;# 
 14400   000096                     SPI2BAUD        equ	150	;# 
 14401   000097                     SPI2INTF        equ	151	;# 
 14402   000098                     SPI2INTE        equ	152	;# 
 14403   000099                     SPI2CLK         equ	153	;# 
 14404   0000AC                     ACTCON          equ	172	;# 
 14405   0000AD                     OSCCON1         equ	173	;# 
 14406   0000AE                     OSCCON2         equ	174	;# 
 14407   0000AF                     OSCCON3         equ	175	;# 
 14408   0000B0                     OSCTUNE         equ	176	;# 
 14409   0000B1                     OSCFRQ          equ	177	;# 
 14410   0000B1                     OSCFREQ         equ	177	;# 
 14411   0000B2                     OSCSTAT         equ	178	;# 
 14412   0000B2                     OSCSTAT1        equ	178	;# 
 14413   0000B3                     OSCEN           equ	179	;# 
 14414   0000B4                     PRLOCK          equ	180	;# 
 14415   0000B5                     SCANPR          equ	181	;# 
 14416   0000B6                     DMA1PR          equ	182	;# 
 14417   0000B7                     DMA2PR          equ	183	;# 
 14418   0000B8                     DMA3PR          equ	184	;# 
 14419   0000B9                     DMA4PR          equ	185	;# 
 14420   0000BA                     DMA5PR          equ	186	;# 
 14421   0000BB                     DMA6PR          equ	187	;# 
 14422   0000BC                     DMA7PR          equ	188	;# 
 14423   0000BD                     DMA8PR          equ	189	;# 
 14424   0000BE                     MAINPR          equ	190	;# 
 14425   0000BF                     ISRPR           equ	191	;# 
 14426   0000D4                     CLCDATA         equ	212	;# 
 14427   0000D5                     CLCSELECT       equ	213	;# 
 14428   0000D6                     CLCnCON         equ	214	;# 
 14429   0000D7                     CLCnPOL         equ	215	;# 
 14430   0000D8                     CLCnSEL0        equ	216	;# 
 14431   0000D9                     CLCnSEL1        equ	217	;# 
 14432   0000DA                     CLCnSEL2        equ	218	;# 
 14433   0000DB                     CLCnSEL3        equ	219	;# 
 14434   0000DC                     CLCnGLS0        equ	220	;# 
 14435   0000DD                     CLCnGLS1        equ	221	;# 
 14436   0000DE                     CLCnGLS2        equ	222	;# 
 14437   0000DF                     CLCnGLS3        equ	223	;# 
 14438   0000E8                     DMASELECT       equ	232	;# 
 14439   0000E9                     DMAnBUF         equ	233	;# 
 14440   0000EA                     DMAnDCNT        equ	234	;# 
 14441   0000EA                     DMAnDCNTL       equ	234	;# 
 14442   0000EB                     DMAnDCNTH       equ	235	;# 
 14443   0000EC                     DMAnDPTR        equ	236	;# 
 14444   0000EC                     DMAnDPTRL       equ	236	;# 
 14445   0000ED                     DMAnDPTRH       equ	237	;# 
 14446   0000EE                     DMAnDSZ         equ	238	;# 
 14447   0000EE                     DMAnDSZL        equ	238	;# 
 14448   0000EF                     DMAnDSZH        equ	239	;# 
 14449   0000F0                     DMAnDSA         equ	240	;# 
 14450   0000F0                     DMAnDSAL        equ	240	;# 
 14451   0000F1                     DMAnDSAH        equ	241	;# 
 14452   0000F2                     DMAnSCNT        equ	242	;# 
 14453   0000F2                     DMAnSCNTL       equ	242	;# 
 14454   0000F3                     DMAnSCNTH       equ	243	;# 
 14455   0000F4                     DMAnSPTR        equ	244	;# 
 14456   0000F4                     DMAnSPTRL       equ	244	;# 
 14457   0000F5                     DMAnSPTRH       equ	245	;# 
 14458   0000F6                     DMAnSPTRU       equ	246	;# 
 14459   0000F7                     DMAnSSZ         equ	247	;# 
 14460   0000F7                     DMAnSSZL        equ	247	;# 
 14461   0000F8                     DMAnSSZH        equ	248	;# 
 14462   0000F9                     DMAnSSA         equ	249	;# 
 14463   0000F9                     DMAnSSAL        equ	249	;# 
 14464   0000FA                     DMAnSSAH        equ	250	;# 
 14465   0000FB                     DMAnSSAU        equ	251	;# 
 14466   0000FC                     DMAnCON0        equ	252	;# 
 14467   0000FD                     DMAnCON1        equ	253	;# 
 14468   0000FE                     DMAnAIRQ        equ	254	;# 
 14469   0000FF                     DMAnSIRQ        equ	255	;# 
 14470   000100                     C1CONL          equ	256	;# 
 14471   000101                     C1CONH          equ	257	;# 
 14472   000102                     C1CONU          equ	258	;# 
 14473   000103                     C1CONT          equ	259	;# 
 14474   000104                     C1NBTCFGL       equ	260	;# 
 14475   000105                     C1NBTCFGH       equ	261	;# 
 14476   000106                     C1NBTCFGU       equ	262	;# 
 14477   000107                     C1NBTCFGT       equ	263	;# 
 14478   000108                     C1DBTCFGL       equ	264	;# 
 14479   000109                     C1DBTCFGH       equ	265	;# 
 14480   00010A                     C1DBTCFGU       equ	266	;# 
 14481   00010B                     C1DBTCFGT       equ	267	;# 
 14482   00010C                     C1TDCL          equ	268	;# 
 14483   00010D                     C1TDCH          equ	269	;# 
 14484   00010E                     C1TDCU          equ	270	;# 
 14485   000110                     C1TBC           equ	272	;# 
 14486   000110                     C1TBCL          equ	272	;# 
 14487   000111                     C1TBCH          equ	273	;# 
 14488   000112                     C1TBCU          equ	274	;# 
 14489   000113                     C1TBCT          equ	275	;# 
 14490   000114                     C1TSCONL        equ	276	;# 
 14491   000115                     C1TSCONH        equ	277	;# 
 14492   000116                     C1TSCONU        equ	278	;# 
 14493   000117                     C1TSCONT        equ	279	;# 
 14494   000118                     C1VECL          equ	280	;# 
 14495   000119                     C1VECH          equ	281	;# 
 14496   00011A                     C1VECU          equ	282	;# 
 14497   00011B                     C1VECT          equ	283	;# 
 14498   00011C                     C1INTL          equ	284	;# 
 14499   00011D                     C1INTH          equ	285	;# 
 14500   00011E                     C1INTU          equ	286	;# 
 14501   00011F                     C1INTT          equ	287	;# 
 14502   000120                     C1RXIF          equ	288	;# 
 14503   000120                     C1RXIFL         equ	288	;# 
 14504   000121                     C1RXIFH         equ	289	;# 
 14505   000122                     C1RXIFU         equ	290	;# 
 14506   000123                     C1RXIFT         equ	291	;# 
 14507   000124                     C1TXIF          equ	292	;# 
 14508   000124                     C1TXIFL         equ	292	;# 
 14509   000125                     C1TXIFH         equ	293	;# 
 14510   000126                     C1TXIFU         equ	294	;# 
 14511   000127                     C1TXIFT         equ	295	;# 
 14512   000128                     C1RXOVIF        equ	296	;# 
 14513   000128                     C1RXOVIFL       equ	296	;# 
 14514   000129                     C1RXOVIFH       equ	297	;# 
 14515   00012A                     C1RXOVIFU       equ	298	;# 
 14516   00012B                     C1RXOVIFT       equ	299	;# 
 14517   00012C                     C1TXATIF        equ	300	;# 
 14518   00012C                     C1TXATIFL       equ	300	;# 
 14519   00012D                     C1TXATIFH       equ	301	;# 
 14520   00012E                     C1TXATIFU       equ	302	;# 
 14521   00012F                     C1TXATIFT       equ	303	;# 
 14522   000130                     C1TXREQ         equ	304	;# 
 14523   000130                     C1TXREQL        equ	304	;# 
 14524   000131                     C1TXREQH        equ	305	;# 
 14525   000132                     C1TXREQU        equ	306	;# 
 14526   000133                     C1TXREQT        equ	307	;# 
 14527   000134                     C1TRECL         equ	308	;# 
 14528   000135                     C1TRECH         equ	309	;# 
 14529   000136                     C1TRECU         equ	310	;# 
 14530   000137                     C1TRECT         equ	311	;# 
 14531   000138                     C1BDIAG0L       equ	312	;# 
 14532   000139                     C1BDIAG0H       equ	313	;# 
 14533   00013C                     C1BDIAG1L       equ	316	;# 
 14534   00013D                     C1BDIAG1H       equ	317	;# 
 14535   00013E                     C1BDIAG1U       equ	318	;# 
 14536   00013F                     C1BDIAG1T       equ	319	;# 
 14537   000140                     C1TEFCONL       equ	320	;# 
 14538   000141                     C1TEFCONH       equ	321	;# 
 14539   000142                     C1TEFCONU       equ	322	;# 
 14540   000143                     C1TEFCONT       equ	323	;# 
 14541   000144                     C1TEFSTAL       equ	324	;# 
 14542   000145                     C1TEFSTAH       equ	325	;# 
 14543   000146                     C1TEFSTAU       equ	326	;# 
 14544   000147                     C1TEFSTAT       equ	327	;# 
 14545   000148                     C1TEFUA         equ	328	;# 
 14546   000148                     C1TEFUAL        equ	328	;# 
 14547   000149                     C1TEFUAH        equ	329	;# 
 14548   00014A                     C1TEFUAU        equ	330	;# 
 14549   00014B                     C1TEFUAT        equ	331	;# 
 14550   00014C                     C1FIFOBA        equ	332	;# 
 14551   00014C                     C1FIFOBAL       equ	332	;# 
 14552   00014D                     C1FIFOBAH       equ	333	;# 
 14553   00014E                     C1FIFOBAU       equ	334	;# 
 14554   00014F                     C1FIFOBAT       equ	335	;# 
 14555   000150                     C1TXQCONL       equ	336	;# 
 14556   000151                     C1TXQCONH       equ	337	;# 
 14557   000152                     C1TXQCONU       equ	338	;# 
 14558   000153                     C1TXQCONT       equ	339	;# 
 14559   000154                     C1TXQSTAL       equ	340	;# 
 14560   000155                     C1TXQSTAH       equ	341	;# 
 14561   000156                     C1TXQSTAU       equ	342	;# 
 14562   000157                     C1TXQSTAT       equ	343	;# 
 14563   000158                     C1TXQUA         equ	344	;# 
 14564   000158                     C1TXQUAL        equ	344	;# 
 14565   000159                     C1TXQUAH        equ	345	;# 
 14566   00015A                     C1TXQUAU        equ	346	;# 
 14567   00015B                     C1TXQUAT        equ	347	;# 
 14568   00015C                     C1FIFOCON1      equ	348	;# 
 14569   00015C                     C1FIFOCON1L     equ	348	;# 
 14570   00015D                     C1FIFOCON1H     equ	349	;# 
 14571   00015E                     C1FIFOCON1U     equ	350	;# 
 14572   00015F                     C1FIFOCON1T     equ	351	;# 
 14573   000160                     C1FIFOSTA1      equ	352	;# 
 14574   000160                     C1FIFOSTA1L     equ	352	;# 
 14575   000161                     C1FIFOSTA1H     equ	353	;# 
 14576   000162                     C1FIFOSTA1U     equ	354	;# 
 14577   000163                     C1FIFOSTA1T     equ	355	;# 
 14578   000164                     C1FIFOUA1       equ	356	;# 
 14579   000164                     C1FIFOUA1L      equ	356	;# 
 14580   000165                     C1FIFOUA1H      equ	357	;# 
 14581   000166                     C1FIFOUA1U      equ	358	;# 
 14582   000167                     C1FIFOUA1T      equ	359	;# 
 14583   000168                     C1FIFOCON2      equ	360	;# 
 14584   000168                     C1FIFOCON2L     equ	360	;# 
 14585   000169                     C1FIFOCON2H     equ	361	;# 
 14586   00016A                     C1FIFOCON2U     equ	362	;# 
 14587   00016B                     C1FIFOCON2T     equ	363	;# 
 14588   00016C                     C1FIFOSTA2      equ	364	;# 
 14589   00016C                     C1FIFOSTA2L     equ	364	;# 
 14590   00016D                     C1FIFOSTA2H     equ	365	;# 
 14591   00016E                     C1FIFOSTA2U     equ	366	;# 
 14592   00016F                     C1FIFOSTA2T     equ	367	;# 
 14593   000170                     C1FIFOUA2       equ	368	;# 
 14594   000170                     C1FIFOUA2L      equ	368	;# 
 14595   000171                     C1FIFOUA2H      equ	369	;# 
 14596   000172                     C1FIFOUA2U      equ	370	;# 
 14597   000173                     C1FIFOUA2T      equ	371	;# 
 14598   000174                     C1FIFOCON3      equ	372	;# 
 14599   000174                     C1FIFOCON3L     equ	372	;# 
 14600   000175                     C1FIFOCON3H     equ	373	;# 
 14601   000176                     C1FIFOCON3U     equ	374	;# 
 14602   000177                     C1FIFOCON3T     equ	375	;# 
 14603   000178                     C1FIFOSTA3      equ	376	;# 
 14604   000178                     C1FIFOSTA3L     equ	376	;# 
 14605   000179                     C1FIFOSTA3H     equ	377	;# 
 14606   00017A                     C1FIFOSTA3U     equ	378	;# 
 14607   00017B                     C1FIFOSTA3T     equ	379	;# 
 14608   00017C                     C1FIFOUA3       equ	380	;# 
 14609   00017C                     C1FIFOUA3L      equ	380	;# 
 14610   00017D                     C1FIFOUA3H      equ	381	;# 
 14611   00017E                     C1FIFOUA3U      equ	382	;# 
 14612   00017F                     C1FIFOUA3T      equ	383	;# 
 14613   000180                     C1FLTCON0L      equ	384	;# 
 14614   000181                     C1FLTCON0H      equ	385	;# 
 14615   000182                     C1FLTCON0U      equ	386	;# 
 14616   000183                     C1FLTCON0T      equ	387	;# 
 14617   000184                     C1FLTCON1L      equ	388	;# 
 14618   000185                     C1FLTCON1H      equ	389	;# 
 14619   000186                     C1FLTCON1U      equ	390	;# 
 14620   000187                     C1FLTCON1T      equ	391	;# 
 14621   000188                     C1FLTCON2L      equ	392	;# 
 14622   000189                     C1FLTCON2H      equ	393	;# 
 14623   00018A                     C1FLTCON2U      equ	394	;# 
 14624   00018B                     C1FLTCON2T      equ	395	;# 
 14625   00018C                     C1FLTOBJ0       equ	396	;# 
 14626   00018C                     C1FLTOBJ0L      equ	396	;# 
 14627   00018D                     C1FLTOBJ0H      equ	397	;# 
 14628   00018E                     C1FLTOBJ0U      equ	398	;# 
 14629   00018F                     C1FLTOBJ0T      equ	399	;# 
 14630   000190                     C1MASK0         equ	400	;# 
 14631   000190                     C1MASK0L        equ	400	;# 
 14632   000191                     C1MASK0H        equ	401	;# 
 14633   000192                     C1MASK0U        equ	402	;# 
 14634   000193                     C1MASK0T        equ	403	;# 
 14635   000194                     C1FLTOBJ1       equ	404	;# 
 14636   000194                     C1FLTOBJ1L      equ	404	;# 
 14637   000195                     C1FLTOBJ1H      equ	405	;# 
 14638   000196                     C1FLTOBJ1U      equ	406	;# 
 14639   000197                     C1FLTOBJ1T      equ	407	;# 
 14640   000198                     C1MASK1         equ	408	;# 
 14641   000198                     C1MASK1L        equ	408	;# 
 14642   000199                     C1MASK1H        equ	409	;# 
 14643   00019A                     C1MASK1U        equ	410	;# 
 14644   00019B                     C1MASK1T        equ	411	;# 
 14645   00019C                     C1FLTOBJ2       equ	412	;# 
 14646   00019C                     C1FLTOBJ2L      equ	412	;# 
 14647   00019D                     C1FLTOBJ2H      equ	413	;# 
 14648   00019E                     C1FLTOBJ2U      equ	414	;# 
 14649   00019F                     C1FLTOBJ2T      equ	415	;# 
 14650   0001A0                     C1MASK2         equ	416	;# 
 14651   0001A0                     C1MASK2L        equ	416	;# 
 14652   0001A1                     C1MASK2H        equ	417	;# 
 14653   0001A2                     C1MASK2U        equ	418	;# 
 14654   0001A3                     C1MASK2T        equ	419	;# 
 14655   0001A4                     C1FLTOBJ3       equ	420	;# 
 14656   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14657   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14658   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14659   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14660   0001A8                     C1MASK3         equ	424	;# 
 14661   0001A8                     C1MASK3L        equ	424	;# 
 14662   0001A9                     C1MASK3H        equ	425	;# 
 14663   0001AA                     C1MASK3U        equ	426	;# 
 14664   0001AB                     C1MASK3T        equ	427	;# 
 14665   0001AC                     C1FLTOBJ4       equ	428	;# 
 14666   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14667   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14668   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14669   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14670   0001B0                     C1MASK4         equ	432	;# 
 14671   0001B0                     C1MASK4L        equ	432	;# 
 14672   0001B1                     C1MASK4H        equ	433	;# 
 14673   0001B2                     C1MASK4U        equ	434	;# 
 14674   0001B3                     C1MASK4T        equ	435	;# 
 14675   0001B4                     C1FLTOBJ5       equ	436	;# 
 14676   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14677   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14678   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14679   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14680   0001B8                     C1MASK5         equ	440	;# 
 14681   0001B8                     C1MASK5L        equ	440	;# 
 14682   0001B9                     C1MASK5H        equ	441	;# 
 14683   0001BA                     C1MASK5U        equ	442	;# 
 14684   0001BB                     C1MASK5T        equ	443	;# 
 14685   0001BC                     C1FLTOBJ6       equ	444	;# 
 14686   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14687   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14688   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14689   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14690   0001C0                     C1MASK6         equ	448	;# 
 14691   0001C0                     C1MASK6L        equ	448	;# 
 14692   0001C1                     C1MASK6H        equ	449	;# 
 14693   0001C2                     C1MASK6U        equ	450	;# 
 14694   0001C3                     C1MASK6T        equ	451	;# 
 14695   0001C4                     C1FLTOBJ7       equ	452	;# 
 14696   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14697   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14698   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14699   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14700   0001C8                     C1MASK7         equ	456	;# 
 14701   0001C8                     C1MASK7L        equ	456	;# 
 14702   0001C9                     C1MASK7H        equ	457	;# 
 14703   0001CA                     C1MASK7U        equ	458	;# 
 14704   0001CB                     C1MASK7T        equ	459	;# 
 14705   0001CC                     C1FLTOBJ8       equ	460	;# 
 14706   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14707   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14708   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14709   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14710   0001D0                     C1MASK8         equ	464	;# 
 14711   0001D0                     C1MASK8L        equ	464	;# 
 14712   0001D1                     C1MASK8H        equ	465	;# 
 14713   0001D2                     C1MASK8U        equ	466	;# 
 14714   0001D3                     C1MASK8T        equ	467	;# 
 14715   0001D4                     C1FLTOBJ9       equ	468	;# 
 14716   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14717   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14718   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14719   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14720   0001D8                     C1MASK9         equ	472	;# 
 14721   0001D8                     C1MASK9L        equ	472	;# 
 14722   0001D9                     C1MASK9H        equ	473	;# 
 14723   0001DA                     C1MASK9U        equ	474	;# 
 14724   0001DB                     C1MASK9T        equ	475	;# 
 14725   0001DC                     C1FLTOBJ10      equ	476	;# 
 14726   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14727   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14728   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14729   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14730   0001E0                     C1MASK10        equ	480	;# 
 14731   0001E0                     C1MASK10L       equ	480	;# 
 14732   0001E1                     C1MASK10H       equ	481	;# 
 14733   0001E2                     C1MASK10U       equ	482	;# 
 14734   0001E3                     C1MASK10T       equ	483	;# 
 14735   0001E4                     C1FLTOBJ11      equ	484	;# 
 14736   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14737   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14738   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14739   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14740   0001E8                     C1MASK11        equ	488	;# 
 14741   0001E8                     C1MASK11L       equ	488	;# 
 14742   0001E9                     C1MASK11H       equ	489	;# 
 14743   0001EA                     C1MASK11U       equ	490	;# 
 14744   0001EB                     C1MASK11T       equ	491	;# 
 14745   000200                     PPSLOCK         equ	512	;# 
 14746   000201                     RA0PPS          equ	513	;# 
 14747   000202                     RA1PPS          equ	514	;# 
 14748   000203                     RA2PPS          equ	515	;# 
 14749   000204                     RA3PPS          equ	516	;# 
 14750   000205                     RA4PPS          equ	517	;# 
 14751   000206                     RA5PPS          equ	518	;# 
 14752   000207                     RA6PPS          equ	519	;# 
 14753   000208                     RA7PPS          equ	520	;# 
 14754   000209                     RB0PPS          equ	521	;# 
 14755   00020A                     RB1PPS          equ	522	;# 
 14756   00020B                     RB2PPS          equ	523	;# 
 14757   00020C                     RB3PPS          equ	524	;# 
 14758   00020D                     RB4PPS          equ	525	;# 
 14759   00020E                     RB5PPS          equ	526	;# 
 14760   00020F                     RB6PPS          equ	527	;# 
 14761   000210                     RB7PPS          equ	528	;# 
 14762   000211                     RC0PPS          equ	529	;# 
 14763   000212                     RC1PPS          equ	530	;# 
 14764   000213                     RC2PPS          equ	531	;# 
 14765   000214                     RC3PPS          equ	532	;# 
 14766   000215                     RC4PPS          equ	533	;# 
 14767   000216                     RC5PPS          equ	534	;# 
 14768   000217                     RC6PPS          equ	535	;# 
 14769   000218                     RC7PPS          equ	536	;# 
 14770   00023D                     CANRXPPS        equ	573	;# 
 14771   00023E                     INT0PPS         equ	574	;# 
 14772   00023F                     INT1PPS         equ	575	;# 
 14773   000240                     INT2PPS         equ	576	;# 
 14774   000241                     T0CKIPPS        equ	577	;# 
 14775   000242                     T1CKIPPS        equ	578	;# 
 14776   000243                     T1GPPS          equ	579	;# 
 14777   000244                     T3CKIPPS        equ	580	;# 
 14778   000245                     T3GPPS          equ	581	;# 
 14779   000246                     T5CKIPPS        equ	582	;# 
 14780   000247                     T5GPPS          equ	583	;# 
 14781   000248                     T2INPPS         equ	584	;# 
 14782   000249                     T4INPPS         equ	585	;# 
 14783   00024A                     T6INPPS         equ	586	;# 
 14784   00024B                     TUIN0PPS        equ	587	;# 
 14785   00024C                     TUIN1PPS        equ	588	;# 
 14786   00024F                     CCP1PPS         equ	591	;# 
 14787   000250                     CCP2PPS         equ	592	;# 
 14788   000251                     CCP3PPS         equ	593	;# 
 14789   000253                     PWM1ERSPPS      equ	595	;# 
 14790   000254                     PWM2ERSPPS      equ	596	;# 
 14791   000255                     PWM3ERSPPS      equ	597	;# 
 14792   000256                     PWM4ERSPPS      equ	598	;# 
 14793   000257                     PWMIN0PPS       equ	599	;# 
 14794   000258                     PWMIN1PPS       equ	600	;# 
 14795   000259                     SMT1WINPPS      equ	601	;# 
 14796   00025A                     SMT1SIGPPS      equ	602	;# 
 14797   00025B                     CWG1PPS         equ	603	;# 
 14798   00025B                     CWG1INPPS       equ	603	;# 
 14799   00025C                     CWG2PPS         equ	604	;# 
 14800   00025C                     CWG2INPPS       equ	604	;# 
 14801   00025D                     CWG3PPS         equ	605	;# 
 14802   00025D                     CWG3INPPS       equ	605	;# 
 14803   00025E                     MD1CARLPPS      equ	606	;# 
 14804   00025E                     MDCARLPPS       equ	606	;# 
 14805   00025F                     MD1CARHPPS      equ	607	;# 
 14806   00025F                     MDCARHPPS       equ	607	;# 
 14807   000260                     MD1SRCPPS       equ	608	;# 
 14808   000260                     MDSRCPPS        equ	608	;# 
 14809   000261                     CLCIN0PPS       equ	609	;# 
 14810   000262                     CLCIN1PPS       equ	610	;# 
 14811   000263                     CLCIN2PPS       equ	611	;# 
 14812   000264                     CLCIN3PPS       equ	612	;# 
 14813   000265                     CLCIN4PPS       equ	613	;# 
 14814   000266                     CLCIN5PPS       equ	614	;# 
 14815   000267                     CLCIN6PPS       equ	615	;# 
 14816   000268                     CLCIN7PPS       equ	616	;# 
 14817   000269                     ADACTPPS        equ	617	;# 
 14818   00026A                     SPI1SCKPPS      equ	618	;# 
 14819   00026B                     SPI1SDIPPS      equ	619	;# 
 14820   00026C                     SPI1SSPPS       equ	620	;# 
 14821   00026D                     SPI2SCKPPS      equ	621	;# 
 14822   00026E                     SPI2SDIPPS      equ	622	;# 
 14823   00026F                     SPI2SSPPS       equ	623	;# 
 14824   000270                     I2C1SDAPPS      equ	624	;# 
 14825   000271                     I2C1SCLPPS      equ	625	;# 
 14826   000272                     U1RXPPS         equ	626	;# 
 14827   000273                     U1CTSPPS        equ	627	;# 
 14828   000274                     U2RXPPS         equ	628	;# 
 14829   000275                     U2CTSPPS        equ	629	;# 
 14830   000276                     U3RXPPS         equ	630	;# 
 14831   000277                     U3CTSPPS        equ	631	;# 
 14832   000278                     U4RXPPS         equ	632	;# 
 14833   000279                     U4CTSPPS        equ	633	;# 
 14834   00027A                     U5RXPPS         equ	634	;# 
 14835   00027B                     U5CTSPPS        equ	635	;# 
 14836   000286                     RC4I2C          equ	646	;# 
 14837   000287                     RC3I2C          equ	647	;# 
 14838   000288                     RB2I2C          equ	648	;# 
 14839   000289                     RB1I2C          equ	649	;# 
 14840   00028A                     I2C1RXB         equ	650	;# 
 14841   00028B                     I2C1TXB         equ	651	;# 
 14842   00028C                     I2C1CNTL        equ	652	;# 
 14843   00028D                     I2C1CNTH        equ	653	;# 
 14844   00028E                     I2C1ADB0        equ	654	;# 
 14845   00028F                     I2C1ADB1        equ	655	;# 
 14846   000290                     I2C1ADR0        equ	656	;# 
 14847   000291                     I2C1ADR1        equ	657	;# 
 14848   000292                     I2C1ADR2        equ	658	;# 
 14849   000293                     I2C1ADR3        equ	659	;# 
 14850   000294                     I2C1CON0        equ	660	;# 
 14851   000295                     I2C1CON1        equ	661	;# 
 14852   000296                     I2C1CON2        equ	662	;# 
 14853   000297                     I2C1ERR         equ	663	;# 
 14854   000298                     I2C1STAT0       equ	664	;# 
 14855   000299                     I2C1STAT1       equ	665	;# 
 14856   00029A                     I2C1PIR         equ	666	;# 
 14857   00029B                     I2C1PIE         equ	667	;# 
 14858   00029C                     I2C1BTO         equ	668	;# 
 14859   00029D                     I2C1BAUD        equ	669	;# 
 14860   00029E                     I2C1CLK         equ	670	;# 
 14861   00029F                     I2C1BTOC        equ	671	;# 
 14862   0002A1                     U1RXB           equ	673	;# 
 14863   0002A1                     U1RXBL          equ	673	;# 
 14864   0002A2                     U1RXCHK         equ	674	;# 
 14865   0002A3                     U1TXB           equ	675	;# 
 14866   0002A3                     U1TXBL          equ	675	;# 
 14867   0002A4                     U1TXCHK         equ	676	;# 
 14868   0002A5                     U1P1            equ	677	;# 
 14869   0002A5                     U1P1L           equ	677	;# 
 14870   0002A6                     U1P1H           equ	678	;# 
 14871   0002A7                     U1P2            equ	679	;# 
 14872   0002A7                     U1P2L           equ	679	;# 
 14873   0002A8                     U1P2H           equ	680	;# 
 14874   0002A9                     U1P3            equ	681	;# 
 14875   0002A9                     U1P3L           equ	681	;# 
 14876   0002AA                     U1P3H           equ	682	;# 
 14877   0002AB                     U1CON0          equ	683	;# 
 14878   0002AC                     U1CON1          equ	684	;# 
 14879   0002AD                     U1CON2          equ	685	;# 
 14880   0002AE                     U1BRG           equ	686	;# 
 14881   0002AE                     U1BRGL          equ	686	;# 
 14882   0002AF                     U1BRGH          equ	687	;# 
 14883   0002B0                     U1FIFO          equ	688	;# 
 14884   0002B1                     U1UIR           equ	689	;# 
 14885   0002B2                     U1ERRIR         equ	690	;# 
 14886   0002B3                     U1ERRIE         equ	691	;# 
 14887   0002B4                     U2RXB           equ	692	;# 
 14888   0002B4                     U2RXBL          equ	692	;# 
 14889   0002B5                     U2RXCHK         equ	693	;# 
 14890   0002B6                     U2TXB           equ	694	;# 
 14891   0002B6                     U2TXBL          equ	694	;# 
 14892   0002B7                     U2TXCHK         equ	695	;# 
 14893   0002B8                     U2P1            equ	696	;# 
 14894   0002B8                     U2P1L           equ	696	;# 
 14895   0002B9                     U2P1H           equ	697	;# 
 14896   0002BA                     U2P2            equ	698	;# 
 14897   0002BA                     U2P2L           equ	698	;# 
 14898   0002BB                     U2P2H           equ	699	;# 
 14899   0002BC                     U2P3            equ	700	;# 
 14900   0002BC                     U2P3L           equ	700	;# 
 14901   0002BD                     U2P3H           equ	701	;# 
 14902   0002BE                     U2CON0          equ	702	;# 
 14903   0002BF                     U2CON1          equ	703	;# 
 14904   0002C0                     U2CON2          equ	704	;# 
 14905   0002C1                     U2BRG           equ	705	;# 
 14906   0002C1                     U2BRGL          equ	705	;# 
 14907   0002C2                     U2BRGH          equ	706	;# 
 14908   0002C3                     U2FIFO          equ	707	;# 
 14909   0002C4                     U2UIR           equ	708	;# 
 14910   0002C5                     U2ERRIR         equ	709	;# 
 14911   0002C6                     U2ERRIE         equ	710	;# 
 14912   0002C7                     U3RXB           equ	711	;# 
 14913   0002C7                     U3RXBL          equ	711	;# 
 14914   0002C9                     U3TXB           equ	713	;# 
 14915   0002C9                     U3TXBL          equ	713	;# 
 14916   0002CB                     U3P1            equ	715	;# 
 14917   0002CB                     U3P1L           equ	715	;# 
 14918   0002CD                     U3P2            equ	717	;# 
 14919   0002CD                     U3P2L           equ	717	;# 
 14920   0002CF                     U3P3            equ	719	;# 
 14921   0002CF                     U3P3L           equ	719	;# 
 14922   0002D1                     U3CON0          equ	721	;# 
 14923   0002D2                     U3CON1          equ	722	;# 
 14924   0002D3                     U3CON2          equ	723	;# 
 14925   0002D4                     U3BRG           equ	724	;# 
 14926   0002D4                     U3BRGL          equ	724	;# 
 14927   0002D5                     U3BRGH          equ	725	;# 
 14928   0002D6                     U3FIFO          equ	726	;# 
 14929   0002D7                     U3UIR           equ	727	;# 
 14930   0002D8                     U3ERRIR         equ	728	;# 
 14931   0002D9                     U3ERRIE         equ	729	;# 
 14932   0002DA                     U4RXB           equ	730	;# 
 14933   0002DA                     U4RXBL          equ	730	;# 
 14934   0002DC                     U4TXB           equ	732	;# 
 14935   0002DC                     U4TXBL          equ	732	;# 
 14936   0002DE                     U4P1            equ	734	;# 
 14937   0002DE                     U4P1L           equ	734	;# 
 14938   0002E0                     U4P2            equ	736	;# 
 14939   0002E0                     U4P2L           equ	736	;# 
 14940   0002E2                     U4P3            equ	738	;# 
 14941   0002E2                     U4P3L           equ	738	;# 
 14942   0002E4                     U4CON0          equ	740	;# 
 14943   0002E5                     U4CON1          equ	741	;# 
 14944   0002E6                     U4CON2          equ	742	;# 
 14945   0002E7                     U4BRG           equ	743	;# 
 14946   0002E7                     U4BRGL          equ	743	;# 
 14947   0002E8                     U4BRGH          equ	744	;# 
 14948   0002E9                     U4FIFO          equ	745	;# 
 14949   0002EA                     U4UIR           equ	746	;# 
 14950   0002EB                     U4ERRIR         equ	747	;# 
 14951   0002EC                     U4ERRIE         equ	748	;# 
 14952   0002ED                     U5RXB           equ	749	;# 
 14953   0002ED                     U5RXBL          equ	749	;# 
 14954   0002EF                     U5TXB           equ	751	;# 
 14955   0002EF                     U5TXBL          equ	751	;# 
 14956   0002F1                     U5P1            equ	753	;# 
 14957   0002F1                     U5P1L           equ	753	;# 
 14958   0002F3                     U5P2            equ	755	;# 
 14959   0002F3                     U5P2L           equ	755	;# 
 14960   0002F5                     U5P3            equ	757	;# 
 14961   0002F5                     U5P3L           equ	757	;# 
 14962   0002F7                     U5CON0          equ	759	;# 
 14963   0002F8                     U5CON1          equ	760	;# 
 14964   0002F9                     U5CON2          equ	761	;# 
 14965   0002FA                     U5BRG           equ	762	;# 
 14966   0002FA                     U5BRGL          equ	762	;# 
 14967   0002FB                     U5BRGH          equ	763	;# 
 14968   0002FC                     U5FIFO          equ	764	;# 
 14969   0002FD                     U5UIR           equ	765	;# 
 14970   0002FE                     U5ERRIR         equ	766	;# 
 14971   0002FF                     U5ERRIE         equ	767	;# 
 14972   000300                     SMT1TMR         equ	768	;# 
 14973   000300                     SMT1TMRL        equ	768	;# 
 14974   000301                     SMT1TMRH        equ	769	;# 
 14975   000302                     SMT1TMRU        equ	770	;# 
 14976   000303                     SMT1CPR         equ	771	;# 
 14977   000303                     SMT1CPRL        equ	771	;# 
 14978   000304                     SMT1CPRH        equ	772	;# 
 14979   000305                     SMT1CPRU        equ	773	;# 
 14980   000306                     SMT1CPW         equ	774	;# 
 14981   000306                     SMT1CPWL        equ	774	;# 
 14982   000307                     SMT1CPWH        equ	775	;# 
 14983   000308                     SMT1CPWU        equ	776	;# 
 14984   000309                     SMT1PR          equ	777	;# 
 14985   000309                     SMT1PRL         equ	777	;# 
 14986   00030A                     SMT1PRH         equ	778	;# 
 14987   00030B                     SMT1PRU         equ	779	;# 
 14988   00030C                     SMT1CON0        equ	780	;# 
 14989   00030D                     SMT1CON1        equ	781	;# 
 14990   00030E                     SMT1STAT        equ	782	;# 
 14991   00030F                     SMT1CLK         equ	783	;# 
 14992   000310                     SMT1SIG         equ	784	;# 
 14993   000311                     SMT1WIN         equ	785	;# 
 14994   000318                     TMR0L           equ	792	;# 
 14995   000318                     TMR0            equ	792	;# 
 14996   000319                     TMR0H           equ	793	;# 
 14997   000319                     PR0             equ	793	;# 
 14998   00031A                     T0CON0          equ	794	;# 
 14999   00031B                     T0CON1          equ	795	;# 
 15000   00031C                     TMR1            equ	796	;# 
 15001   00031C                     TMR1L           equ	796	;# 
 15002   00031D                     TMR1H           equ	797	;# 
 15003   00031E                     T1CON           equ	798	;# 
 15004   00031E                     TMR1CON         equ	798	;# 
 15005   00031F                     T1GCON          equ	799	;# 
 15006   00031F                     TMR1GCON        equ	799	;# 
 15007   000320                     T1GATE          equ	800	;# 
 15008   000320                     TMR1GATE        equ	800	;# 
 15009   000321                     T1CLK           equ	801	;# 
 15010   000321                     TMR1CLK         equ	801	;# 
 15011   000321                     PR1             equ	801	;# 
 15012   000322                     T2TMR           equ	802	;# 
 15013   000322                     TMR2            equ	802	;# 
 15014   000323                     T2PR            equ	803	;# 
 15015   000323                     PR2             equ	803	;# 
 15016   000324                     T2CON           equ	804	;# 
 15017   000325                     T2HLT           equ	805	;# 
 15018   000326                     T2CLKCON        equ	806	;# 
 15019   000326                     T2CLK           equ	806	;# 
 15020   000327                     T2RST           equ	807	;# 
 15021   000328                     TMR3            equ	808	;# 
 15022   000328                     TMR3L           equ	808	;# 
 15023   000329                     TMR3H           equ	809	;# 
 15024   00032A                     T3CON           equ	810	;# 
 15025   00032A                     TMR3CON         equ	810	;# 
 15026   00032B                     T3GCON          equ	811	;# 
 15027   00032B                     TMR3GCON        equ	811	;# 
 15028   00032C                     T3GATE          equ	812	;# 
 15029   00032C                     TMR3GATE        equ	812	;# 
 15030   00032D                     T3CLK           equ	813	;# 
 15031   00032D                     TMR3CLK         equ	813	;# 
 15032   00032D                     PR3             equ	813	;# 
 15033   00032E                     T4TMR           equ	814	;# 
 15034   00032E                     TMR4            equ	814	;# 
 15035   00032F                     T4PR            equ	815	;# 
 15036   00032F                     PR4             equ	815	;# 
 15037   000330                     T4CON           equ	816	;# 
 15038   000331                     T4HLT           equ	817	;# 
 15039   000332                     T4CLKCON        equ	818	;# 
 15040   000332                     T4CLK           equ	818	;# 
 15041   000333                     T4RST           equ	819	;# 
 15042   000334                     TMR5            equ	820	;# 
 15043   000334                     TMR5L           equ	820	;# 
 15044   000335                     TMR5H           equ	821	;# 
 15045   000336                     T5CON           equ	822	;# 
 15046   000336                     TMR5CON         equ	822	;# 
 15047   000337                     T5GCON          equ	823	;# 
 15048   000337                     TMR5GCON        equ	823	;# 
 15049   000338                     T5GATE          equ	824	;# 
 15050   000338                     TMR5GATE        equ	824	;# 
 15051   000339                     T5CLK           equ	825	;# 
 15052   000339                     TMR5CLK         equ	825	;# 
 15053   000339                     PR5             equ	825	;# 
 15054   00033A                     T6TMR           equ	826	;# 
 15055   00033A                     TMR6            equ	826	;# 
 15056   00033B                     T6PR            equ	827	;# 
 15057   00033B                     PR6             equ	827	;# 
 15058   00033C                     T6CON           equ	828	;# 
 15059   00033D                     T6HLT           equ	829	;# 
 15060   00033E                     T6CLKCON        equ	830	;# 
 15061   00033E                     T6CLK           equ	830	;# 
 15062   00033F                     T6RST           equ	831	;# 
 15063   000340                     CCPR1           equ	832	;# 
 15064   000340                     CCPR1L          equ	832	;# 
 15065   000341                     CCPR1H          equ	833	;# 
 15066   000342                     CCP1CON         equ	834	;# 
 15067   000343                     CCP1CAP         equ	835	;# 
 15068   000344                     CCPR2           equ	836	;# 
 15069   000344                     CCPR2L          equ	836	;# 
 15070   000345                     CCPR2H          equ	837	;# 
 15071   000346                     CCP2CON         equ	838	;# 
 15072   000347                     CCP2CAP         equ	839	;# 
 15073   000348                     CCPR3           equ	840	;# 
 15074   000348                     CCPR3L          equ	840	;# 
 15075   000349                     CCPR3H          equ	841	;# 
 15076   00034A                     CCP3CON         equ	842	;# 
 15077   00034B                     CCP3CAP         equ	843	;# 
 15078   00034C                     CCPTMRS0        equ	844	;# 
 15079   00034F                     CRCDATA         equ	847	;# 
 15080   00034F                     CRCDATAL        equ	847	;# 
 15081   000350                     CRCDATAH        equ	848	;# 
 15082   000351                     CRCDATAU        equ	849	;# 
 15083   000352                     CRCDATAT        equ	850	;# 
 15084   000353                     CRCOUT          equ	851	;# 
 15085   000353                     CRCSHFT         equ	851	;# 
 15086   000353                     CRCXOR          equ	851	;# 
 15087   000353                     CRCOUTL         equ	851	;# 
 15088   000353                     CRCSHFTL        equ	851	;# 
 15089   000353                     CRCSHIFTL       equ	851	;# 
 15090   000353                     CRCXORL         equ	851	;# 
 15091   000354                     CRCOUTH         equ	852	;# 
 15092   000354                     CRCSHFTH        equ	852	;# 
 15093   000354                     CRCSHIFTH       equ	852	;# 
 15094   000354                     CRCXORH         equ	852	;# 
 15095   000355                     CRCOUTU         equ	853	;# 
 15096   000355                     CRCSHFTU        equ	853	;# 
 15097   000355                     CRCSHIFTU       equ	853	;# 
 15098   000355                     CRCXORU         equ	853	;# 
 15099   000356                     CRCOUTT         equ	854	;# 
 15100   000356                     CRCSHFTT        equ	854	;# 
 15101   000356                     CRCSHIFTT       equ	854	;# 
 15102   000356                     CRCXORT         equ	854	;# 
 15103   000357                     CRCCON0         equ	855	;# 
 15104   000358                     CRCCON1         equ	856	;# 
 15105   000359                     CRCCON2         equ	857	;# 
 15106   00035A                     SCANLADR        equ	858	;# 
 15107   00035A                     SCANLADRL       equ	858	;# 
 15108   00035B                     SCANLADRH       equ	859	;# 
 15109   00035C                     SCANLADRU       equ	860	;# 
 15110   00035D                     SCANHADR        equ	861	;# 
 15111   00035D                     SCANHADRL       equ	861	;# 
 15112   00035E                     SCANHADRH       equ	862	;# 
 15113   00035F                     SCANHADRU       equ	863	;# 
 15114   000360                     SCANCON0        equ	864	;# 
 15115   000361                     SCANTRIG        equ	865	;# 
 15116   000362                     IPR0            equ	866	;# 
 15117   000363                     IPR1            equ	867	;# 
 15118   000364                     IPR2            equ	868	;# 
 15119   000365                     IPR3            equ	869	;# 
 15120   000366                     IPR4            equ	870	;# 
 15121   000367                     IPR5            equ	871	;# 
 15122   000368                     IPR6            equ	872	;# 
 15123   000369                     IPR7            equ	873	;# 
 15124   00036A                     IPR8            equ	874	;# 
 15125   00036B                     IPR9            equ	875	;# 
 15126   00036C                     IPR10           equ	876	;# 
 15127   00036D                     IPR11           equ	877	;# 
 15128   00036E                     IPR12           equ	878	;# 
 15129   00036F                     IPR13           equ	879	;# 
 15130   000370                     IPR14           equ	880	;# 
 15131   000371                     IPR15           equ	881	;# 
 15132   000373                     STATUS_CSHAD    equ	883	;# 
 15133   000374                     WREG_CSHAD      equ	884	;# 
 15134   000375                     BSR_CSHAD       equ	885	;# 
 15135   000376                     SHADCON         equ	886	;# 
 15136   000377                     STATUS_SHAD     equ	887	;# 
 15137   000378                     WREG_SHAD       equ	888	;# 
 15138   000379                     BSR_SHAD        equ	889	;# 
 15139   00037A                     PCLATH_SHAD     equ	890	;# 
 15140   00037B                     PCLATU_SHAD     equ	891	;# 
 15141   00037C                     FSR0SH          equ	892	;# 
 15142   00037C                     FSR0L_SHAD      equ	892	;# 
 15143   00037D                     FSR0H_SHAD      equ	893	;# 
 15144   00037E                     FSR1SH          equ	894	;# 
 15145   00037E                     FSR1L_SHAD      equ	894	;# 
 15146   00037F                     FSR1H_SHAD      equ	895	;# 
 15147   000380                     FSR2SH          equ	896	;# 
 15148   000380                     FSR2L_SHAD      equ	896	;# 
 15149   000381                     FSR2H_SHAD      equ	897	;# 
 15150   000382                     PRODSH          equ	898	;# 
 15151   000382                     PRODL_SHAD      equ	898	;# 
 15152   000383                     PRODH_SHAD      equ	899	;# 
 15153   000387                     TU16ACON0       equ	903	;# 
 15154   000388                     TU16ACON1       equ	904	;# 
 15155   000389                     TU16AHLT        equ	905	;# 
 15156   00038A                     TU16APS         equ	906	;# 
 15157   00038B                     TU16ATMR        equ	907	;# 
 15158   00038B                     TU16ACR         equ	907	;# 
 15159   00038B                     TU16ATMRL       equ	907	;# 
 15160   00038B                     TU16ACRL        equ	907	;# 
 15161   00038C                     TU16ATMRH       equ	908	;# 
 15162   00038C                     TU16ACRH        equ	908	;# 
 15163   00038D                     TU16APR         equ	909	;# 
 15164   00038D                     TU16APRL        equ	909	;# 
 15165   00038E                     TU16APRH        equ	910	;# 
 15166   00038F                     TU16ACLK        equ	911	;# 
 15167   000390                     TU16AERS        equ	912	;# 
 15168   000393                     TU16BCON0       equ	915	;# 
 15169   000394                     TU16BCON1       equ	916	;# 
 15170   000395                     TU16BHLT        equ	917	;# 
 15171   000396                     TU16BPS         equ	918	;# 
 15172   000397                     TU16BTMR        equ	919	;# 
 15173   000397                     TU16BCR         equ	919	;# 
 15174   000397                     TU16BTMRL       equ	919	;# 
 15175   000397                     TU16BCRL        equ	919	;# 
 15176   000398                     TU16BTMRH       equ	920	;# 
 15177   000398                     TU16BCRH        equ	920	;# 
 15178   000399                     TU16BPR         equ	921	;# 
 15179   000399                     TU16BPRL        equ	921	;# 
 15180   00039A                     TU16BPRH        equ	922	;# 
 15181   00039B                     TU16BCLK        equ	923	;# 
 15182   00039C                     TU16BERS        equ	924	;# 
 15183   0003BB                     TUCHAIN         equ	955	;# 
 15184   0003BC                     CWG1CLK         equ	956	;# 
 15185   0003BC                     CWG1CLKCON      equ	956	;# 
 15186   0003BD                     CWG1ISM         equ	957	;# 
 15187   0003BE                     CWG1DBR         equ	958	;# 
 15188   0003BF                     CWG1DBF         equ	959	;# 
 15189   0003C0                     CWG1CON0        equ	960	;# 
 15190   0003C1                     CWG1CON1        equ	961	;# 
 15191   0003C2                     CWG1AS0         equ	962	;# 
 15192   0003C3                     CWG1AS1         equ	963	;# 
 15193   0003C4                     CWG1STR         equ	964	;# 
 15194   0003C5                     CWG2CLK         equ	965	;# 
 15195   0003C5                     CWG2CLKCON      equ	965	;# 
 15196   0003C6                     CWG2ISM         equ	966	;# 
 15197   0003C7                     CWG2DBR         equ	967	;# 
 15198   0003C8                     CWG2DBF         equ	968	;# 
 15199   0003C9                     CWG2CON0        equ	969	;# 
 15200   0003CA                     CWG2CON1        equ	970	;# 
 15201   0003CB                     CWG2AS0         equ	971	;# 
 15202   0003CC                     CWG2AS1         equ	972	;# 
 15203   0003CD                     CWG2STR         equ	973	;# 
 15204   0003CE                     CWG3CLK         equ	974	;# 
 15205   0003CE                     CWG3CLKCON      equ	974	;# 
 15206   0003CF                     CWG3ISM         equ	975	;# 
 15207   0003D0                     CWG3DBR         equ	976	;# 
 15208   0003D1                     CWG3DBF         equ	977	;# 
 15209   0003D2                     CWG3CON0        equ	978	;# 
 15210   0003D3                     CWG3CON1        equ	979	;# 
 15211   0003D4                     CWG3AS0         equ	980	;# 
 15212   0003D5                     CWG3AS1         equ	981	;# 
 15213   0003D6                     CWG3STR         equ	982	;# 
 15214   0003D7                     FVRCON          equ	983	;# 
 15215   0003D8                     ADCPCON         equ	984	;# 
 15216   0003D8                     ADCP            equ	984	;# 
 15217   0003D9                     ADLTH           equ	985	;# 
 15218   0003D9                     ADLTHL          equ	985	;# 
 15219   0003DA                     ADLTHH          equ	986	;# 
 15220   0003DB                     ADUTH           equ	987	;# 
 15221   0003DB                     ADUTHL          equ	987	;# 
 15222   0003DC                     ADUTHH          equ	988	;# 
 15223   0003DD                     ADERR           equ	989	;# 
 15224   0003DD                     ADERRL          equ	989	;# 
 15225   0003DE                     ADERRH          equ	990	;# 
 15226   0003DF                     ADSTPT          equ	991	;# 
 15227   0003DF                     ADSTPTL         equ	991	;# 
 15228   0003E0                     ADSTPTH         equ	992	;# 
 15229   0003E1                     ADFLTR          equ	993	;# 
 15230   0003E1                     ADFLTRL         equ	993	;# 
 15231   0003E2                     ADFLTRH         equ	994	;# 
 15232   0003E3                     ADACC           equ	995	;# 
 15233   0003E3                     ADACCL          equ	995	;# 
 15234   0003E4                     ADACCH          equ	996	;# 
 15235   0003E5                     ADACCU          equ	997	;# 
 15236   0003E6                     ADCNT           equ	998	;# 
 15237   0003E7                     ADRPT           equ	999	;# 
 15238   0003E8                     ADPREV          equ	1000	;# 
 15239   0003E8                     ADPREVL         equ	1000	;# 
 15240   0003E9                     ADPREVH         equ	1001	;# 
 15241   0003EA                     ADRES           equ	1002	;# 
 15242   0003EA                     ADRESL          equ	1002	;# 
 15243   0003EB                     ADRESH          equ	1003	;# 
 15244   0003EC                     ADPCH           equ	1004	;# 
 15245   0003EE                     ADACQ           equ	1006	;# 
 15246   0003EE                     ADACQL          equ	1006	;# 
 15247   0003EF                     ADACQH          equ	1007	;# 
 15248   0003F0                     ADCAP           equ	1008	;# 
 15249   0003F1                     ADPRE           equ	1009	;# 
 15250   0003F1                     ADPREL          equ	1009	;# 
 15251   0003F2                     ADPREH          equ	1010	;# 
 15252   0003F3                     ADCON0          equ	1011	;# 
 15253   0003F4                     ADCON1          equ	1012	;# 
 15254   0003F5                     ADCON2          equ	1013	;# 
 15255   0003F6                     ADCON3          equ	1014	;# 
 15256   0003F7                     ADSTAT          equ	1015	;# 
 15257   0003F8                     ADREF           equ	1016	;# 
 15258   0003F9                     ADACT           equ	1017	;# 
 15259   0003FA                     ADCLK           equ	1018	;# 
 15260   0003FB                     ADCTX           equ	1019	;# 
 15261   0003FC                     ADCSEL1         equ	1020	;# 
 15262   0003FD                     ADCSEL2         equ	1021	;# 
 15263   0003FE                     ADCSEL3         equ	1022	;# 
 15264   0003FF                     ADCSEL4         equ	1023	;# 
 15265   000400                     ANSELA          equ	1024	;# 
 15266   000401                     WPUA            equ	1025	;# 
 15267   000402                     ODCONA          equ	1026	;# 
 15268   000403                     SLRCONA         equ	1027	;# 
 15269   000404                     INLVLA          equ	1028	;# 
 15270   000405                     IOCAP           equ	1029	;# 
 15271   000406                     IOCAN           equ	1030	;# 
 15272   000407                     IOCAF           equ	1031	;# 
 15273   000408                     ANSELB          equ	1032	;# 
 15274   000409                     WPUB            equ	1033	;# 
 15275   00040A                     ODCONB          equ	1034	;# 
 15276   00040B                     SLRCONB         equ	1035	;# 
 15277   00040C                     INLVLB          equ	1036	;# 
 15278   00040D                     IOCBP           equ	1037	;# 
 15279   00040E                     IOCBN           equ	1038	;# 
 15280   00040F                     IOCBF           equ	1039	;# 
 15281   000410                     ANSELC          equ	1040	;# 
 15282   000411                     WPUC            equ	1041	;# 
 15283   000412                     ODCONC          equ	1042	;# 
 15284   000413                     SLRCONC         equ	1043	;# 
 15285   000414                     INLVLC          equ	1044	;# 
 15286   000415                     IOCCP           equ	1045	;# 
 15287   000416                     IOCCN           equ	1046	;# 
 15288   000417                     IOCCF           equ	1047	;# 
 15289   000421                     WPUE            equ	1057	;# 
 15290   000424                     INLVLE          equ	1060	;# 
 15291   000425                     IOCEP           equ	1061	;# 
 15292   000426                     IOCEN           equ	1062	;# 
 15293   000427                     IOCEF           equ	1063	;# 
 15294   000440                     NCO1ACC         equ	1088	;# 
 15295   000440                     NCO1ACCL        equ	1088	;# 
 15296   000441                     NCO1ACCH        equ	1089	;# 
 15297   000442                     NCO1ACCU        equ	1090	;# 
 15298   000443                     NCO1INC         equ	1091	;# 
 15299   000443                     NCO1INCL        equ	1091	;# 
 15300   000444                     NCO1INCH        equ	1092	;# 
 15301   000445                     NCO1INCU        equ	1093	;# 
 15302   000446                     NCO1CON         equ	1094	;# 
 15303   000447                     NCO1CLK         equ	1095	;# 
 15304   000448                     NCO2ACC         equ	1096	;# 
 15305   000448                     NCO2ACCL        equ	1096	;# 
 15306   000449                     NCO2ACCH        equ	1097	;# 
 15307   00044A                     NCO2ACCU        equ	1098	;# 
 15308   00044B                     NCO2INC         equ	1099	;# 
 15309   00044B                     NCO2INCL        equ	1099	;# 
 15310   00044C                     NCO2INCH        equ	1100	;# 
 15311   00044D                     NCO2INCU        equ	1101	;# 
 15312   00044E                     NCO2CON         equ	1102	;# 
 15313   00044F                     NCO2CLK         equ	1103	;# 
 15314   000450                     NCO3ACC         equ	1104	;# 
 15315   000450                     NCO3ACCL        equ	1104	;# 
 15316   000451                     NCO3ACCH        equ	1105	;# 
 15317   000452                     NCO3ACCU        equ	1106	;# 
 15318   000453                     NCO3INC         equ	1107	;# 
 15319   000453                     NCO3INCL        equ	1107	;# 
 15320   000454                     NCO3INCH        equ	1108	;# 
 15321   000455                     NCO3INCU        equ	1109	;# 
 15322   000456                     NCO3CON         equ	1110	;# 
 15323   000457                     NCO3CLK         equ	1111	;# 
 15324   000458                     FSCMCON         equ	1112	;# 
 15325   000459                     IVTLOCK         equ	1113	;# 
 15326   00045A                     IVTAD           equ	1114	;# 
 15327   00045A                     IVTADL          equ	1114	;# 
 15328   00045B                     IVTADH          equ	1115	;# 
 15329   00045C                     IVTADU          equ	1116	;# 
 15330   00045D                     IVTBASE         equ	1117	;# 
 15331   00045D                     IVTBASEL        equ	1117	;# 
 15332   00045E                     IVTBASEH        equ	1118	;# 
 15333   00045F                     IVTBASEU        equ	1119	;# 
 15334   000460                     PWM1ERS         equ	1120	;# 
 15335   000461                     PWM1CLK         equ	1121	;# 
 15336   000462                     PWM1LDS         equ	1122	;# 
 15337   000463                     PWM1PR          equ	1123	;# 
 15338   000463                     PWM1PRL         equ	1123	;# 
 15339   000464                     PWM1PRH         equ	1124	;# 
 15340   000465                     PWM1CPRE        equ	1125	;# 
 15341   000466                     PWM1PIPOS       equ	1126	;# 
 15342   000467                     PWM1GIR         equ	1127	;# 
 15343   000468                     PWM1GIE         equ	1128	;# 
 15344   000469                     PWM1CON         equ	1129	;# 
 15345   00046A                     PWM1S1CFG       equ	1130	;# 
 15346   00046B                     PWM1S1P1        equ	1131	;# 
 15347   00046B                     PWM1S1P1L       equ	1131	;# 
 15348   00046C                     PWM1S1P1H       equ	1132	;# 
 15349   00046D                     PWM1S1P2        equ	1133	;# 
 15350   00046D                     PWM1S1P2L       equ	1133	;# 
 15351   00046E                     PWM1S1P2H       equ	1134	;# 
 15352   00046F                     PWM2ERS         equ	1135	;# 
 15353   000470                     PWM2CLK         equ	1136	;# 
 15354   000471                     PWM2LDS         equ	1137	;# 
 15355   000472                     PWM2PR          equ	1138	;# 
 15356   000472                     PWM2PRL         equ	1138	;# 
 15357   000473                     PWM2PRH         equ	1139	;# 
 15358   000474                     PWM2CPRE        equ	1140	;# 
 15359   000475                     PWM2PIPOS       equ	1141	;# 
 15360   000476                     PWM2GIR         equ	1142	;# 
 15361   000477                     PWM2GIE         equ	1143	;# 
 15362   000478                     PWM2CON         equ	1144	;# 
 15363   000479                     PWM2S1CFG       equ	1145	;# 
 15364   00047A                     PWM2S1P1        equ	1146	;# 
 15365   00047A                     PWM2S1P1L       equ	1146	;# 
 15366   00047B                     PWM2S1P1H       equ	1147	;# 
 15367   00047C                     PWM2S1P2        equ	1148	;# 
 15368   00047C                     PWM2S1P2L       equ	1148	;# 
 15369   00047D                     PWM2S1P2H       equ	1149	;# 
 15370   00047E                     PWM3ERS         equ	1150	;# 
 15371   00047F                     PWM3CLK         equ	1151	;# 
 15372   000480                     PWM3LDS         equ	1152	;# 
 15373   000481                     PWM3PR          equ	1153	;# 
 15374   000481                     PWM3PRL         equ	1153	;# 
 15375   000482                     PWM3PRH         equ	1154	;# 
 15376   000483                     PWM3CPRE        equ	1155	;# 
 15377   000484                     PWM3PIPOS       equ	1156	;# 
 15378   000485                     PWM3GIR         equ	1157	;# 
 15379   000486                     PWM3GIE         equ	1158	;# 
 15380   000487                     PWM3CON         equ	1159	;# 
 15381   000488                     PWM3S1CFG       equ	1160	;# 
 15382   000489                     PWM3S1P1        equ	1161	;# 
 15383   000489                     PWM3S1P1L       equ	1161	;# 
 15384   00048A                     PWM3S1P1H       equ	1162	;# 
 15385   00048B                     PWM3S1P2        equ	1163	;# 
 15386   00048B                     PWM3S1P2L       equ	1163	;# 
 15387   00048C                     PWM3S1P2H       equ	1164	;# 
 15388   00048D                     PWM4ERS         equ	1165	;# 
 15389   00048E                     PWM4CLK         equ	1166	;# 
 15390   00048F                     PWM4LDS         equ	1167	;# 
 15391   000490                     PWM4PR          equ	1168	;# 
 15392   000490                     PWM4PRL         equ	1168	;# 
 15393   000491                     PWM4PRH         equ	1169	;# 
 15394   000492                     PWM4CPRE        equ	1170	;# 
 15395   000493                     PWM4PIPOS       equ	1171	;# 
 15396   000494                     PWM4GIR         equ	1172	;# 
 15397   000495                     PWM4GIE         equ	1173	;# 
 15398   000496                     PWM4CON         equ	1174	;# 
 15399   000497                     PWM4S1CFG       equ	1175	;# 
 15400   000498                     PWM4S1P1        equ	1176	;# 
 15401   000498                     PWM4S1P1L       equ	1176	;# 
 15402   000499                     PWM4S1P1H       equ	1177	;# 
 15403   00049A                     PWM4S1P2        equ	1178	;# 
 15404   00049A                     PWM4S1P2L       equ	1178	;# 
 15405   00049B                     PWM4S1P2H       equ	1179	;# 
 15406   00049C                     PWMLOAD         equ	1180	;# 
 15407   00049D                     PWMEN           equ	1181	;# 
 15408   00049E                     PIE0            equ	1182	;# 
 15409   00049F                     PIE1            equ	1183	;# 
 15410   0004A0                     PIE2            equ	1184	;# 
 15411   0004A1                     PIE3            equ	1185	;# 
 15412   0004A2                     PIE4            equ	1186	;# 
 15413   0004A3                     PIE5            equ	1187	;# 
 15414   0004A4                     PIE6            equ	1188	;# 
 15415   0004A5                     PIE7            equ	1189	;# 
 15416   0004A6                     PIE8            equ	1190	;# 
 15417   0004A7                     PIE9            equ	1191	;# 
 15418   0004A8                     PIE10           equ	1192	;# 
 15419   0004A9                     PIE11           equ	1193	;# 
 15420   0004AA                     PIE12           equ	1194	;# 
 15421   0004AB                     PIE13           equ	1195	;# 
 15422   0004AC                     PIE14           equ	1196	;# 
 15423   0004AD                     PIE15           equ	1197	;# 
 15424   0004AE                     PIR0            equ	1198	;# 
 15425   0004AF                     PIR1            equ	1199	;# 
 15426   0004B0                     PIR2            equ	1200	;# 
 15427   0004B1                     PIR3            equ	1201	;# 
 15428   0004B2                     PIR4            equ	1202	;# 
 15429   0004B3                     PIR5            equ	1203	;# 
 15430   0004B4                     PIR6            equ	1204	;# 
 15431   0004B5                     PIR7            equ	1205	;# 
 15432   0004B6                     PIR8            equ	1206	;# 
 15433   0004B7                     PIR9            equ	1207	;# 
 15434   0004B8                     PIR10           equ	1208	;# 
 15435   0004B9                     PIR11           equ	1209	;# 
 15436   0004BA                     PIR12           equ	1210	;# 
 15437   0004BB                     PIR13           equ	1211	;# 
 15438   0004BC                     PIR14           equ	1212	;# 
 15439   0004BD                     PIR15           equ	1213	;# 
 15440   0004BE                     LATA            equ	1214	;# 
 15441   0004BF                     LATB            equ	1215	;# 
 15442   0004C0                     LATC            equ	1216	;# 
 15443   0004C6                     TRISA           equ	1222	;# 
 15444   0004C7                     TRISB           equ	1223	;# 
 15445   0004C8                     TRISC           equ	1224	;# 
 15446   0004CA                     TRISE           equ	1226	;# 
 15447   0004CE                     PORTA           equ	1230	;# 
 15448   0004CF                     PORTB           equ	1231	;# 
 15449   0004D0                     PORTC           equ	1232	;# 
 15450   0004D2                     PORTE           equ	1234	;# 
 15451   0004D6                     INTCON0         equ	1238	;# 
 15452   0004D7                     INTCON1         equ	1239	;# 
 15453   0004D8                     STATUS          equ	1240	;# 
 15454   0004D9                     FSR2            equ	1241	;# 
 15455   0004D9                     FSR2L           equ	1241	;# 
 15456   0004DA                     FSR2H           equ	1242	;# 
 15457   0004DB                     PLUSW2          equ	1243	;# 
 15458   0004DC                     PREINC2         equ	1244	;# 
 15459   0004DD                     POSTDEC2        equ	1245	;# 
 15460   0004DE                     POSTINC2        equ	1246	;# 
 15461   0004DF                     INDF2           equ	1247	;# 
 15462   0004E0                     BSR             equ	1248	;# 
 15463   0004E1                     FSR1            equ	1249	;# 
 15464   0004E1                     FSR1L           equ	1249	;# 
 15465   0004E2                     FSR1H           equ	1250	;# 
 15466   0004E3                     PLUSW1          equ	1251	;# 
 15467   0004E4                     PREINC1         equ	1252	;# 
 15468   0004E5                     POSTDEC1        equ	1253	;# 
 15469   0004E6                     POSTINC1        equ	1254	;# 
 15470   0004E7                     INDF1           equ	1255	;# 
 15471   0004E8                     WREG            equ	1256	;# 
 15472   0004E9                     FSR0            equ	1257	;# 
 15473   0004E9                     FSR0L           equ	1257	;# 
 15474   0004EA                     FSR0H           equ	1258	;# 
 15475   0004EB                     PLUSW0          equ	1259	;# 
 15476   0004EC                     PREINC0         equ	1260	;# 
 15477   0004ED                     POSTDEC0        equ	1261	;# 
 15478   0004EE                     POSTINC0        equ	1262	;# 
 15479   0004EF                     INDF0           equ	1263	;# 
 15480   0004F0                     PCON0           equ	1264	;# 
 15481   0004F1                     PCON1           equ	1265	;# 
 15482   0004F2                     CPUDOZE         equ	1266	;# 
 15483   0004F3                     PROD            equ	1267	;# 
 15484   0004F3                     PRODL           equ	1267	;# 
 15485   0004F4                     PRODH           equ	1268	;# 
 15486   0004F5                     TABLAT          equ	1269	;# 
 15487   0004F6                     TBLPTR          equ	1270	;# 
 15488   0004F6                     TBLPTRL         equ	1270	;# 
 15489   0004F7                     TBLPTRH         equ	1271	;# 
 15490   0004F8                     TBLPTRU         equ	1272	;# 
 15491   0004F9                     PCLAT           equ	1273	;# 
 15492   0004F9                     PCL             equ	1273	;# 
 15493   0004FA                     PCLATH          equ	1274	;# 
 15494   0004FB                     PCLATU          equ	1275	;# 
 15495   0004FC                     STKPTR          equ	1276	;# 
 15496   0004FD                     TOS             equ	1277	;# 
 15497   0004FD                     TOSL            equ	1277	;# 
 15498   0004FE                     TOSH            equ	1278	;# 
 15499   0004FF                     TOSU            equ	1279	;# 
 15500   000038                     BOOTREG         equ	56	;# 
 15501   000039                     CLKRCON         equ	57	;# 
 15502   00003A                     CLKRCLK         equ	58	;# 
 15503   000040                     NVMCON0         equ	64	;# 
 15504   000041                     NVMCON1         equ	65	;# 
 15505   000042                     NVMLOCK         equ	66	;# 
 15506   000043                     NVMADR          equ	67	;# 
 15507   000043                     NVMADRL         equ	67	;# 
 15508   000044                     NVMADRH         equ	68	;# 
 15509   000045                     NVMADRU         equ	69	;# 
 15510   000046                     NVMDAT          equ	70	;# 
 15511   000046                     NVMDATL         equ	70	;# 
 15512   000047                     NVMDATH         equ	71	;# 
 15513   000048                     VREGCON         equ	72	;# 
 15514   000049                     BORCON          equ	73	;# 
 15515   00004A                     HLVDCON0        equ	74	;# 
 15516   00004B                     HLVDCON1        equ	75	;# 
 15517   00004C                     ZCDCON          equ	76	;# 
 15518   000060                     PMD0            equ	96	;# 
 15519   000061                     PMD1            equ	97	;# 
 15520   000062                     PMD2            equ	98	;# 
 15521   000063                     PMD3            equ	99	;# 
 15522   000064                     PMD4            equ	100	;# 
 15523   000065                     PMD5            equ	101	;# 
 15524   000066                     PMD6            equ	102	;# 
 15525   000067                     PMD7            equ	103	;# 
 15526   000068                     PMD8            equ	104	;# 
 15527   00006A                     MD1CON0         equ	106	;# 
 15528   00006B                     MD1CON1         equ	107	;# 
 15529   00006C                     MD1SRC          equ	108	;# 
 15530   00006D                     MD1CARL         equ	109	;# 
 15531   00006E                     MD1CARH         equ	110	;# 
 15532   00006F                     CMOUT           equ	111	;# 
 15533   000070                     CM1CON0         equ	112	;# 
 15534   000071                     CM1CON1         equ	113	;# 
 15535   000072                     CM1NCH          equ	114	;# 
 15536   000073                     CM1PCH          equ	115	;# 
 15537   000074                     CM2CON0         equ	116	;# 
 15538   000075                     CM2CON1         equ	117	;# 
 15539   000076                     CM2NCH          equ	118	;# 
 15540   000077                     CM2PCH          equ	119	;# 
 15541   000078                     WDTCON0         equ	120	;# 
 15542   000079                     WDTCON1         equ	121	;# 
 15543   00007A                     WDTPSL          equ	122	;# 
 15544   00007B                     WDTPSH          equ	123	;# 
 15545   00007C                     WDTTMR          equ	124	;# 
 15546   00007D                     DAC1DAT         equ	125	;# 
 15547   00007D                     DAC1DATL        equ	125	;# 
 15548   00007F                     DAC1CON         equ	127	;# 
 15549   000080                     SPI1RXB         equ	128	;# 
 15550   000081                     SPI1TXB         equ	129	;# 
 15551   000082                     SPI1TCNT        equ	130	;# 
 15552   000082                     SPI1TCNTL       equ	130	;# 
 15553   000083                     SPI1TCNTH       equ	131	;# 
 15554   000084                     SPI1CON0        equ	132	;# 
 15555   000085                     SPI1CON1        equ	133	;# 
 15556   000086                     SPI1CON2        equ	134	;# 
 15557   000087                     SPI1STATUS      equ	135	;# 
 15558   000088                     SPI1TWIDTH      equ	136	;# 
 15559   000089                     SPI1BAUD        equ	137	;# 
 15560   00008A                     SPI1INTF        equ	138	;# 
 15561   00008B                     SPI1INTE        equ	139	;# 
 15562   00008C                     SPI1CLK         equ	140	;# 
 15563   00008D                     SPI2RXB         equ	141	;# 
 15564   00008E                     SPI2TXB         equ	142	;# 
 15565   00008F                     SPI2TCNT        equ	143	;# 
 15566   00008F                     SPI2TCNTL       equ	143	;# 
 15567   000090                     SPI2TCNTH       equ	144	;# 
 15568   000091                     SPI2CON0        equ	145	;# 
 15569   000092                     SPI2CON1        equ	146	;# 
 15570   000093                     SPI2CON2        equ	147	;# 
 15571   000094                     SPI2STATUS      equ	148	;# 
 15572   000095                     SPI2TWIDTH      equ	149	;# 
 15573   000096                     SPI2BAUD        equ	150	;# 
 15574   000097                     SPI2INTF        equ	151	;# 
 15575   000098                     SPI2INTE        equ	152	;# 
 15576   000099                     SPI2CLK         equ	153	;# 
 15577   0000AC                     ACTCON          equ	172	;# 
 15578   0000AD                     OSCCON1         equ	173	;# 
 15579   0000AE                     OSCCON2         equ	174	;# 
 15580   0000AF                     OSCCON3         equ	175	;# 
 15581   0000B0                     OSCTUNE         equ	176	;# 
 15582   0000B1                     OSCFRQ          equ	177	;# 
 15583   0000B1                     OSCFREQ         equ	177	;# 
 15584   0000B2                     OSCSTAT         equ	178	;# 
 15585   0000B2                     OSCSTAT1        equ	178	;# 
 15586   0000B3                     OSCEN           equ	179	;# 
 15587   0000B4                     PRLOCK          equ	180	;# 
 15588   0000B5                     SCANPR          equ	181	;# 
 15589   0000B6                     DMA1PR          equ	182	;# 
 15590   0000B7                     DMA2PR          equ	183	;# 
 15591   0000B8                     DMA3PR          equ	184	;# 
 15592   0000B9                     DMA4PR          equ	185	;# 
 15593   0000BA                     DMA5PR          equ	186	;# 
 15594   0000BB                     DMA6PR          equ	187	;# 
 15595   0000BC                     DMA7PR          equ	188	;# 
 15596   0000BD                     DMA8PR          equ	189	;# 
 15597   0000BE                     MAINPR          equ	190	;# 
 15598   0000BF                     ISRPR           equ	191	;# 
 15599   0000D4                     CLCDATA         equ	212	;# 
 15600   0000D5                     CLCSELECT       equ	213	;# 
 15601   0000D6                     CLCnCON         equ	214	;# 
 15602   0000D7                     CLCnPOL         equ	215	;# 
 15603   0000D8                     CLCnSEL0        equ	216	;# 
 15604   0000D9                     CLCnSEL1        equ	217	;# 
 15605   0000DA                     CLCnSEL2        equ	218	;# 
 15606   0000DB                     CLCnSEL3        equ	219	;# 
 15607   0000DC                     CLCnGLS0        equ	220	;# 
 15608   0000DD                     CLCnGLS1        equ	221	;# 
 15609   0000DE                     CLCnGLS2        equ	222	;# 
 15610   0000DF                     CLCnGLS3        equ	223	;# 
 15611   0000E8                     DMASELECT       equ	232	;# 
 15612   0000E9                     DMAnBUF         equ	233	;# 
 15613   0000EA                     DMAnDCNT        equ	234	;# 
 15614   0000EA                     DMAnDCNTL       equ	234	;# 
 15615   0000EB                     DMAnDCNTH       equ	235	;# 
 15616   0000EC                     DMAnDPTR        equ	236	;# 
 15617   0000EC                     DMAnDPTRL       equ	236	;# 
 15618   0000ED                     DMAnDPTRH       equ	237	;# 
 15619   0000EE                     DMAnDSZ         equ	238	;# 
 15620   0000EE                     DMAnDSZL        equ	238	;# 
 15621   0000EF                     DMAnDSZH        equ	239	;# 
 15622   0000F0                     DMAnDSA         equ	240	;# 
 15623   0000F0                     DMAnDSAL        equ	240	;# 
 15624   0000F1                     DMAnDSAH        equ	241	;# 
 15625   0000F2                     DMAnSCNT        equ	242	;# 
 15626   0000F2                     DMAnSCNTL       equ	242	;# 
 15627   0000F3                     DMAnSCNTH       equ	243	;# 
 15628   0000F4                     DMAnSPTR        equ	244	;# 
 15629   0000F4                     DMAnSPTRL       equ	244	;# 
 15630   0000F5                     DMAnSPTRH       equ	245	;# 
 15631   0000F6                     DMAnSPTRU       equ	246	;# 
 15632   0000F7                     DMAnSSZ         equ	247	;# 
 15633   0000F7                     DMAnSSZL        equ	247	;# 
 15634   0000F8                     DMAnSSZH        equ	248	;# 
 15635   0000F9                     DMAnSSA         equ	249	;# 
 15636   0000F9                     DMAnSSAL        equ	249	;# 
 15637   0000FA                     DMAnSSAH        equ	250	;# 
 15638   0000FB                     DMAnSSAU        equ	251	;# 
 15639   0000FC                     DMAnCON0        equ	252	;# 
 15640   0000FD                     DMAnCON1        equ	253	;# 
 15641   0000FE                     DMAnAIRQ        equ	254	;# 
 15642   0000FF                     DMAnSIRQ        equ	255	;# 
 15643   000100                     C1CONL          equ	256	;# 
 15644   000101                     C1CONH          equ	257	;# 
 15645   000102                     C1CONU          equ	258	;# 
 15646   000103                     C1CONT          equ	259	;# 
 15647   000104                     C1NBTCFGL       equ	260	;# 
 15648   000105                     C1NBTCFGH       equ	261	;# 
 15649   000106                     C1NBTCFGU       equ	262	;# 
 15650   000107                     C1NBTCFGT       equ	263	;# 
 15651   000108                     C1DBTCFGL       equ	264	;# 
 15652   000109                     C1DBTCFGH       equ	265	;# 
 15653   00010A                     C1DBTCFGU       equ	266	;# 
 15654   00010B                     C1DBTCFGT       equ	267	;# 
 15655   00010C                     C1TDCL          equ	268	;# 
 15656   00010D                     C1TDCH          equ	269	;# 
 15657   00010E                     C1TDCU          equ	270	;# 
 15658   000110                     C1TBC           equ	272	;# 
 15659   000110                     C1TBCL          equ	272	;# 
 15660   000111                     C1TBCH          equ	273	;# 
 15661   000112                     C1TBCU          equ	274	;# 
 15662   000113                     C1TBCT          equ	275	;# 
 15663   000114                     C1TSCONL        equ	276	;# 
 15664   000115                     C1TSCONH        equ	277	;# 
 15665   000116                     C1TSCONU        equ	278	;# 
 15666   000117                     C1TSCONT        equ	279	;# 
 15667   000118                     C1VECL          equ	280	;# 
 15668   000119                     C1VECH          equ	281	;# 
 15669   00011A                     C1VECU          equ	282	;# 
 15670   00011B                     C1VECT          equ	283	;# 
 15671   00011C                     C1INTL          equ	284	;# 
 15672   00011D                     C1INTH          equ	285	;# 
 15673   00011E                     C1INTU          equ	286	;# 
 15674   00011F                     C1INTT          equ	287	;# 
 15675   000120                     C1RXIF          equ	288	;# 
 15676   000120                     C1RXIFL         equ	288	;# 
 15677   000121                     C1RXIFH         equ	289	;# 
 15678   000122                     C1RXIFU         equ	290	;# 
 15679   000123                     C1RXIFT         equ	291	;# 
 15680   000124                     C1TXIF          equ	292	;# 
 15681   000124                     C1TXIFL         equ	292	;# 
 15682   000125                     C1TXIFH         equ	293	;# 
 15683   000126                     C1TXIFU         equ	294	;# 
 15684   000127                     C1TXIFT         equ	295	;# 
 15685   000128                     C1RXOVIF        equ	296	;# 
 15686   000128                     C1RXOVIFL       equ	296	;# 
 15687   000129                     C1RXOVIFH       equ	297	;# 
 15688   00012A                     C1RXOVIFU       equ	298	;# 
 15689   00012B                     C1RXOVIFT       equ	299	;# 
 15690   00012C                     C1TXATIF        equ	300	;# 
 15691   00012C                     C1TXATIFL       equ	300	;# 
 15692   00012D                     C1TXATIFH       equ	301	;# 
 15693   00012E                     C1TXATIFU       equ	302	;# 
 15694   00012F                     C1TXATIFT       equ	303	;# 
 15695   000130                     C1TXREQ         equ	304	;# 
 15696   000130                     C1TXREQL        equ	304	;# 
 15697   000131                     C1TXREQH        equ	305	;# 
 15698   000132                     C1TXREQU        equ	306	;# 
 15699   000133                     C1TXREQT        equ	307	;# 
 15700   000134                     C1TRECL         equ	308	;# 
 15701   000135                     C1TRECH         equ	309	;# 
 15702   000136                     C1TRECU         equ	310	;# 
 15703   000137                     C1TRECT         equ	311	;# 
 15704   000138                     C1BDIAG0L       equ	312	;# 
 15705   000139                     C1BDIAG0H       equ	313	;# 
 15706   00013C                     C1BDIAG1L       equ	316	;# 
 15707   00013D                     C1BDIAG1H       equ	317	;# 
 15708   00013E                     C1BDIAG1U       equ	318	;# 
 15709   00013F                     C1BDIAG1T       equ	319	;# 
 15710   000140                     C1TEFCONL       equ	320	;# 
 15711   000141                     C1TEFCONH       equ	321	;# 
 15712   000142                     C1TEFCONU       equ	322	;# 
 15713   000143                     C1TEFCONT       equ	323	;# 
 15714   000144                     C1TEFSTAL       equ	324	;# 
 15715   000145                     C1TEFSTAH       equ	325	;# 
 15716   000146                     C1TEFSTAU       equ	326	;# 
 15717   000147                     C1TEFSTAT       equ	327	;# 
 15718   000148                     C1TEFUA         equ	328	;# 
 15719   000148                     C1TEFUAL        equ	328	;# 
 15720   000149                     C1TEFUAH        equ	329	;# 
 15721   00014A                     C1TEFUAU        equ	330	;# 
 15722   00014B                     C1TEFUAT        equ	331	;# 
 15723   00014C                     C1FIFOBA        equ	332	;# 
 15724   00014C                     C1FIFOBAL       equ	332	;# 
 15725   00014D                     C1FIFOBAH       equ	333	;# 
 15726   00014E                     C1FIFOBAU       equ	334	;# 
 15727   00014F                     C1FIFOBAT       equ	335	;# 
 15728   000150                     C1TXQCONL       equ	336	;# 
 15729   000151                     C1TXQCONH       equ	337	;# 
 15730   000152                     C1TXQCONU       equ	338	;# 
 15731   000153                     C1TXQCONT       equ	339	;# 
 15732   000154                     C1TXQSTAL       equ	340	;# 
 15733   000155                     C1TXQSTAH       equ	341	;# 
 15734   000156                     C1TXQSTAU       equ	342	;# 
 15735   000157                     C1TXQSTAT       equ	343	;# 
 15736   000158                     C1TXQUA         equ	344	;# 
 15737   000158                     C1TXQUAL        equ	344	;# 
 15738   000159                     C1TXQUAH        equ	345	;# 
 15739   00015A                     C1TXQUAU        equ	346	;# 
 15740   00015B                     C1TXQUAT        equ	347	;# 
 15741   00015C                     C1FIFOCON1      equ	348	;# 
 15742   00015C                     C1FIFOCON1L     equ	348	;# 
 15743   00015D                     C1FIFOCON1H     equ	349	;# 
 15744   00015E                     C1FIFOCON1U     equ	350	;# 
 15745   00015F                     C1FIFOCON1T     equ	351	;# 
 15746   000160                     C1FIFOSTA1      equ	352	;# 
 15747   000160                     C1FIFOSTA1L     equ	352	;# 
 15748   000161                     C1FIFOSTA1H     equ	353	;# 
 15749   000162                     C1FIFOSTA1U     equ	354	;# 
 15750   000163                     C1FIFOSTA1T     equ	355	;# 
 15751   000164                     C1FIFOUA1       equ	356	;# 
 15752   000164                     C1FIFOUA1L      equ	356	;# 
 15753   000165                     C1FIFOUA1H      equ	357	;# 
 15754   000166                     C1FIFOUA1U      equ	358	;# 
 15755   000167                     C1FIFOUA1T      equ	359	;# 
 15756   000168                     C1FIFOCON2      equ	360	;# 
 15757   000168                     C1FIFOCON2L     equ	360	;# 
 15758   000169                     C1FIFOCON2H     equ	361	;# 
 15759   00016A                     C1FIFOCON2U     equ	362	;# 
 15760   00016B                     C1FIFOCON2T     equ	363	;# 
 15761   00016C                     C1FIFOSTA2      equ	364	;# 
 15762   00016C                     C1FIFOSTA2L     equ	364	;# 
 15763   00016D                     C1FIFOSTA2H     equ	365	;# 
 15764   00016E                     C1FIFOSTA2U     equ	366	;# 
 15765   00016F                     C1FIFOSTA2T     equ	367	;# 
 15766   000170                     C1FIFOUA2       equ	368	;# 
 15767   000170                     C1FIFOUA2L      equ	368	;# 
 15768   000171                     C1FIFOUA2H      equ	369	;# 
 15769   000172                     C1FIFOUA2U      equ	370	;# 
 15770   000173                     C1FIFOUA2T      equ	371	;# 
 15771   000174                     C1FIFOCON3      equ	372	;# 
 15772   000174                     C1FIFOCON3L     equ	372	;# 
 15773   000175                     C1FIFOCON3H     equ	373	;# 
 15774   000176                     C1FIFOCON3U     equ	374	;# 
 15775   000177                     C1FIFOCON3T     equ	375	;# 
 15776   000178                     C1FIFOSTA3      equ	376	;# 
 15777   000178                     C1FIFOSTA3L     equ	376	;# 
 15778   000179                     C1FIFOSTA3H     equ	377	;# 
 15779   00017A                     C1FIFOSTA3U     equ	378	;# 
 15780   00017B                     C1FIFOSTA3T     equ	379	;# 
 15781   00017C                     C1FIFOUA3       equ	380	;# 
 15782   00017C                     C1FIFOUA3L      equ	380	;# 
 15783   00017D                     C1FIFOUA3H      equ	381	;# 
 15784   00017E                     C1FIFOUA3U      equ	382	;# 
 15785   00017F                     C1FIFOUA3T      equ	383	;# 
 15786   000180                     C1FLTCON0L      equ	384	;# 
 15787   000181                     C1FLTCON0H      equ	385	;# 
 15788   000182                     C1FLTCON0U      equ	386	;# 
 15789   000183                     C1FLTCON0T      equ	387	;# 
 15790   000184                     C1FLTCON1L      equ	388	;# 
 15791   000185                     C1FLTCON1H      equ	389	;# 
 15792   000186                     C1FLTCON1U      equ	390	;# 
 15793   000187                     C1FLTCON1T      equ	391	;# 
 15794   000188                     C1FLTCON2L      equ	392	;# 
 15795   000189                     C1FLTCON2H      equ	393	;# 
 15796   00018A                     C1FLTCON2U      equ	394	;# 
 15797   00018B                     C1FLTCON2T      equ	395	;# 
 15798   00018C                     C1FLTOBJ0       equ	396	;# 
 15799   00018C                     C1FLTOBJ0L      equ	396	;# 
 15800   00018D                     C1FLTOBJ0H      equ	397	;# 
 15801   00018E                     C1FLTOBJ0U      equ	398	;# 
 15802   00018F                     C1FLTOBJ0T      equ	399	;# 
 15803   000190                     C1MASK0         equ	400	;# 
 15804   000190                     C1MASK0L        equ	400	;# 
 15805   000191                     C1MASK0H        equ	401	;# 
 15806   000192                     C1MASK0U        equ	402	;# 
 15807   000193                     C1MASK0T        equ	403	;# 
 15808   000194                     C1FLTOBJ1       equ	404	;# 
 15809   000194                     C1FLTOBJ1L      equ	404	;# 
 15810   000195                     C1FLTOBJ1H      equ	405	;# 
 15811   000196                     C1FLTOBJ1U      equ	406	;# 
 15812   000197                     C1FLTOBJ1T      equ	407	;# 
 15813   000198                     C1MASK1         equ	408	;# 
 15814   000198                     C1MASK1L        equ	408	;# 
 15815   000199                     C1MASK1H        equ	409	;# 
 15816   00019A                     C1MASK1U        equ	410	;# 
 15817   00019B                     C1MASK1T        equ	411	;# 
 15818   00019C                     C1FLTOBJ2       equ	412	;# 
 15819   00019C                     C1FLTOBJ2L      equ	412	;# 
 15820   00019D                     C1FLTOBJ2H      equ	413	;# 
 15821   00019E                     C1FLTOBJ2U      equ	414	;# 
 15822   00019F                     C1FLTOBJ2T      equ	415	;# 
 15823   0001A0                     C1MASK2         equ	416	;# 
 15824   0001A0                     C1MASK2L        equ	416	;# 
 15825   0001A1                     C1MASK2H        equ	417	;# 
 15826   0001A2                     C1MASK2U        equ	418	;# 
 15827   0001A3                     C1MASK2T        equ	419	;# 
 15828   0001A4                     C1FLTOBJ3       equ	420	;# 
 15829   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15830   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15831   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15832   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15833   0001A8                     C1MASK3         equ	424	;# 
 15834   0001A8                     C1MASK3L        equ	424	;# 
 15835   0001A9                     C1MASK3H        equ	425	;# 
 15836   0001AA                     C1MASK3U        equ	426	;# 
 15837   0001AB                     C1MASK3T        equ	427	;# 
 15838   0001AC                     C1FLTOBJ4       equ	428	;# 
 15839   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15840   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15841   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15842   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15843   0001B0                     C1MASK4         equ	432	;# 
 15844   0001B0                     C1MASK4L        equ	432	;# 
 15845   0001B1                     C1MASK4H        equ	433	;# 
 15846   0001B2                     C1MASK4U        equ	434	;# 
 15847   0001B3                     C1MASK4T        equ	435	;# 
 15848   0001B4                     C1FLTOBJ5       equ	436	;# 
 15849   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15850   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15851   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15852   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15853   0001B8                     C1MASK5         equ	440	;# 
 15854   0001B8                     C1MASK5L        equ	440	;# 
 15855   0001B9                     C1MASK5H        equ	441	;# 
 15856   0001BA                     C1MASK5U        equ	442	;# 
 15857   0001BB                     C1MASK5T        equ	443	;# 
 15858   0001BC                     C1FLTOBJ6       equ	444	;# 
 15859   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15860   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15861   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15862   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15863   0001C0                     C1MASK6         equ	448	;# 
 15864   0001C0                     C1MASK6L        equ	448	;# 
 15865   0001C1                     C1MASK6H        equ	449	;# 
 15866   0001C2                     C1MASK6U        equ	450	;# 
 15867   0001C3                     C1MASK6T        equ	451	;# 
 15868   0001C4                     C1FLTOBJ7       equ	452	;# 
 15869   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15870   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15871   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15872   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15873   0001C8                     C1MASK7         equ	456	;# 
 15874   0001C8                     C1MASK7L        equ	456	;# 
 15875   0001C9                     C1MASK7H        equ	457	;# 
 15876   0001CA                     C1MASK7U        equ	458	;# 
 15877   0001CB                     C1MASK7T        equ	459	;# 
 15878   0001CC                     C1FLTOBJ8       equ	460	;# 
 15879   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15880   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15881   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15882   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15883   0001D0                     C1MASK8         equ	464	;# 
 15884   0001D0                     C1MASK8L        equ	464	;# 
 15885   0001D1                     C1MASK8H        equ	465	;# 
 15886   0001D2                     C1MASK8U        equ	466	;# 
 15887   0001D3                     C1MASK8T        equ	467	;# 
 15888   0001D4                     C1FLTOBJ9       equ	468	;# 
 15889   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15890   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15891   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15892   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15893   0001D8                     C1MASK9         equ	472	;# 
 15894   0001D8                     C1MASK9L        equ	472	;# 
 15895   0001D9                     C1MASK9H        equ	473	;# 
 15896   0001DA                     C1MASK9U        equ	474	;# 
 15897   0001DB                     C1MASK9T        equ	475	;# 
 15898   0001DC                     C1FLTOBJ10      equ	476	;# 
 15899   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15900   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15901   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15902   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15903   0001E0                     C1MASK10        equ	480	;# 
 15904   0001E0                     C1MASK10L       equ	480	;# 
 15905   0001E1                     C1MASK10H       equ	481	;# 
 15906   0001E2                     C1MASK10U       equ	482	;# 
 15907   0001E3                     C1MASK10T       equ	483	;# 
 15908   0001E4                     C1FLTOBJ11      equ	484	;# 
 15909   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15910   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15911   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15912   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15913   0001E8                     C1MASK11        equ	488	;# 
 15914   0001E8                     C1MASK11L       equ	488	;# 
 15915   0001E9                     C1MASK11H       equ	489	;# 
 15916   0001EA                     C1MASK11U       equ	490	;# 
 15917   0001EB                     C1MASK11T       equ	491	;# 
 15918   000200                     PPSLOCK         equ	512	;# 
 15919   000201                     RA0PPS          equ	513	;# 
 15920   000202                     RA1PPS          equ	514	;# 
 15921   000203                     RA2PPS          equ	515	;# 
 15922   000204                     RA3PPS          equ	516	;# 
 15923   000205                     RA4PPS          equ	517	;# 
 15924   000206                     RA5PPS          equ	518	;# 
 15925   000207                     RA6PPS          equ	519	;# 
 15926   000208                     RA7PPS          equ	520	;# 
 15927   000209                     RB0PPS          equ	521	;# 
 15928   00020A                     RB1PPS          equ	522	;# 
 15929   00020B                     RB2PPS          equ	523	;# 
 15930   00020C                     RB3PPS          equ	524	;# 
 15931   00020D                     RB4PPS          equ	525	;# 
 15932   00020E                     RB5PPS          equ	526	;# 
 15933   00020F                     RB6PPS          equ	527	;# 
 15934   000210                     RB7PPS          equ	528	;# 
 15935   000211                     RC0PPS          equ	529	;# 
 15936   000212                     RC1PPS          equ	530	;# 
 15937   000213                     RC2PPS          equ	531	;# 
 15938   000214                     RC3PPS          equ	532	;# 
 15939   000215                     RC4PPS          equ	533	;# 
 15940   000216                     RC5PPS          equ	534	;# 
 15941   000217                     RC6PPS          equ	535	;# 
 15942   000218                     RC7PPS          equ	536	;# 
 15943   00023D                     CANRXPPS        equ	573	;# 
 15944   00023E                     INT0PPS         equ	574	;# 
 15945   00023F                     INT1PPS         equ	575	;# 
 15946   000240                     INT2PPS         equ	576	;# 
 15947   000241                     T0CKIPPS        equ	577	;# 
 15948   000242                     T1CKIPPS        equ	578	;# 
 15949   000243                     T1GPPS          equ	579	;# 
 15950   000244                     T3CKIPPS        equ	580	;# 
 15951   000245                     T3GPPS          equ	581	;# 
 15952   000246                     T5CKIPPS        equ	582	;# 
 15953   000247                     T5GPPS          equ	583	;# 
 15954   000248                     T2INPPS         equ	584	;# 
 15955   000249                     T4INPPS         equ	585	;# 
 15956   00024A                     T6INPPS         equ	586	;# 
 15957   00024B                     TUIN0PPS        equ	587	;# 
 15958   00024C                     TUIN1PPS        equ	588	;# 
 15959   00024F                     CCP1PPS         equ	591	;# 
 15960   000250                     CCP2PPS         equ	592	;# 
 15961   000251                     CCP3PPS         equ	593	;# 
 15962   000253                     PWM1ERSPPS      equ	595	;# 
 15963   000254                     PWM2ERSPPS      equ	596	;# 
 15964   000255                     PWM3ERSPPS      equ	597	;# 
 15965   000256                     PWM4ERSPPS      equ	598	;# 
 15966   000257                     PWMIN0PPS       equ	599	;# 
 15967   000258                     PWMIN1PPS       equ	600	;# 
 15968   000259                     SMT1WINPPS      equ	601	;# 
 15969   00025A                     SMT1SIGPPS      equ	602	;# 
 15970   00025B                     CWG1PPS         equ	603	;# 
 15971   00025B                     CWG1INPPS       equ	603	;# 
 15972   00025C                     CWG2PPS         equ	604	;# 
 15973   00025C                     CWG2INPPS       equ	604	;# 
 15974   00025D                     CWG3PPS         equ	605	;# 
 15975   00025D                     CWG3INPPS       equ	605	;# 
 15976   00025E                     MD1CARLPPS      equ	606	;# 
 15977   00025E                     MDCARLPPS       equ	606	;# 
 15978   00025F                     MD1CARHPPS      equ	607	;# 
 15979   00025F                     MDCARHPPS       equ	607	;# 
 15980   000260                     MD1SRCPPS       equ	608	;# 
 15981   000260                     MDSRCPPS        equ	608	;# 
 15982   000261                     CLCIN0PPS       equ	609	;# 
 15983   000262                     CLCIN1PPS       equ	610	;# 
 15984   000263                     CLCIN2PPS       equ	611	;# 
 15985   000264                     CLCIN3PPS       equ	612	;# 
 15986   000265                     CLCIN4PPS       equ	613	;# 
 15987   000266                     CLCIN5PPS       equ	614	;# 
 15988   000267                     CLCIN6PPS       equ	615	;# 
 15989   000268                     CLCIN7PPS       equ	616	;# 
 15990   000269                     ADACTPPS        equ	617	;# 
 15991   00026A                     SPI1SCKPPS      equ	618	;# 
 15992   00026B                     SPI1SDIPPS      equ	619	;# 
 15993   00026C                     SPI1SSPPS       equ	620	;# 
 15994   00026D                     SPI2SCKPPS      equ	621	;# 
 15995   00026E                     SPI2SDIPPS      equ	622	;# 
 15996   00026F                     SPI2SSPPS       equ	623	;# 
 15997   000270                     I2C1SDAPPS      equ	624	;# 
 15998   000271                     I2C1SCLPPS      equ	625	;# 
 15999   000272                     U1RXPPS         equ	626	;# 
 16000   000273                     U1CTSPPS        equ	627	;# 
 16001   000274                     U2RXPPS         equ	628	;# 
 16002   000275                     U2CTSPPS        equ	629	;# 
 16003   000276                     U3RXPPS         equ	630	;# 
 16004   000277                     U3CTSPPS        equ	631	;# 
 16005   000278                     U4RXPPS         equ	632	;# 
 16006   000279                     U4CTSPPS        equ	633	;# 
 16007   00027A                     U5RXPPS         equ	634	;# 
 16008   00027B                     U5CTSPPS        equ	635	;# 
 16009   000286                     RC4I2C          equ	646	;# 
 16010   000287                     RC3I2C          equ	647	;# 
 16011   000288                     RB2I2C          equ	648	;# 
 16012   000289                     RB1I2C          equ	649	;# 
 16013   00028A                     I2C1RXB         equ	650	;# 
 16014   00028B                     I2C1TXB         equ	651	;# 
 16015   00028C                     I2C1CNTL        equ	652	;# 
 16016   00028D                     I2C1CNTH        equ	653	;# 
 16017   00028E                     I2C1ADB0        equ	654	;# 
 16018   00028F                     I2C1ADB1        equ	655	;# 
 16019   000290                     I2C1ADR0        equ	656	;# 
 16020   000291                     I2C1ADR1        equ	657	;# 
 16021   000292                     I2C1ADR2        equ	658	;# 
 16022   000293                     I2C1ADR3        equ	659	;# 
 16023   000294                     I2C1CON0        equ	660	;# 
 16024   000295                     I2C1CON1        equ	661	;# 
 16025   000296                     I2C1CON2        equ	662	;# 
 16026   000297                     I2C1ERR         equ	663	;# 
 16027   000298                     I2C1STAT0       equ	664	;# 
 16028   000299                     I2C1STAT1       equ	665	;# 
 16029   00029A                     I2C1PIR         equ	666	;# 
 16030   00029B                     I2C1PIE         equ	667	;# 
 16031   00029C                     I2C1BTO         equ	668	;# 
 16032   00029D                     I2C1BAUD        equ	669	;# 
 16033   00029E                     I2C1CLK         equ	670	;# 
 16034   00029F                     I2C1BTOC        equ	671	;# 
 16035   0002A1                     U1RXB           equ	673	;# 
 16036   0002A1                     U1RXBL          equ	673	;# 
 16037   0002A2                     U1RXCHK         equ	674	;# 
 16038   0002A3                     U1TXB           equ	675	;# 
 16039   0002A3                     U1TXBL          equ	675	;# 
 16040   0002A4                     U1TXCHK         equ	676	;# 
 16041   0002A5                     U1P1            equ	677	;# 
 16042   0002A5                     U1P1L           equ	677	;# 
 16043   0002A6                     U1P1H           equ	678	;# 
 16044   0002A7                     U1P2            equ	679	;# 
 16045   0002A7                     U1P2L           equ	679	;# 
 16046   0002A8                     U1P2H           equ	680	;# 
 16047   0002A9                     U1P3            equ	681	;# 
 16048   0002A9                     U1P3L           equ	681	;# 
 16049   0002AA                     U1P3H           equ	682	;# 
 16050   0002AB                     U1CON0          equ	683	;# 
 16051   0002AC                     U1CON1          equ	684	;# 
 16052   0002AD                     U1CON2          equ	685	;# 
 16053   0002AE                     U1BRG           equ	686	;# 
 16054   0002AE                     U1BRGL          equ	686	;# 
 16055   0002AF                     U1BRGH          equ	687	;# 
 16056   0002B0                     U1FIFO          equ	688	;# 
 16057   0002B1                     U1UIR           equ	689	;# 
 16058   0002B2                     U1ERRIR         equ	690	;# 
 16059   0002B3                     U1ERRIE         equ	691	;# 
 16060   0002B4                     U2RXB           equ	692	;# 
 16061   0002B4                     U2RXBL          equ	692	;# 
 16062   0002B5                     U2RXCHK         equ	693	;# 
 16063   0002B6                     U2TXB           equ	694	;# 
 16064   0002B6                     U2TXBL          equ	694	;# 
 16065   0002B7                     U2TXCHK         equ	695	;# 
 16066   0002B8                     U2P1            equ	696	;# 
 16067   0002B8                     U2P1L           equ	696	;# 
 16068   0002B9                     U2P1H           equ	697	;# 
 16069   0002BA                     U2P2            equ	698	;# 
 16070   0002BA                     U2P2L           equ	698	;# 
 16071   0002BB                     U2P2H           equ	699	;# 
 16072   0002BC                     U2P3            equ	700	;# 
 16073   0002BC                     U2P3L           equ	700	;# 
 16074   0002BD                     U2P3H           equ	701	;# 
 16075   0002BE                     U2CON0          equ	702	;# 
 16076   0002BF                     U2CON1          equ	703	;# 
 16077   0002C0                     U2CON2          equ	704	;# 
 16078   0002C1                     U2BRG           equ	705	;# 
 16079   0002C1                     U2BRGL          equ	705	;# 
 16080   0002C2                     U2BRGH          equ	706	;# 
 16081   0002C3                     U2FIFO          equ	707	;# 
 16082   0002C4                     U2UIR           equ	708	;# 
 16083   0002C5                     U2ERRIR         equ	709	;# 
 16084   0002C6                     U2ERRIE         equ	710	;# 
 16085   0002C7                     U3RXB           equ	711	;# 
 16086   0002C7                     U3RXBL          equ	711	;# 
 16087   0002C9                     U3TXB           equ	713	;# 
 16088   0002C9                     U3TXBL          equ	713	;# 
 16089   0002CB                     U3P1            equ	715	;# 
 16090   0002CB                     U3P1L           equ	715	;# 
 16091   0002CD                     U3P2            equ	717	;# 
 16092   0002CD                     U3P2L           equ	717	;# 
 16093   0002CF                     U3P3            equ	719	;# 
 16094   0002CF                     U3P3L           equ	719	;# 
 16095   0002D1                     U3CON0          equ	721	;# 
 16096   0002D2                     U3CON1          equ	722	;# 
 16097   0002D3                     U3CON2          equ	723	;# 
 16098   0002D4                     U3BRG           equ	724	;# 
 16099   0002D4                     U3BRGL          equ	724	;# 
 16100   0002D5                     U3BRGH          equ	725	;# 
 16101   0002D6                     U3FIFO          equ	726	;# 
 16102   0002D7                     U3UIR           equ	727	;# 
 16103   0002D8                     U3ERRIR         equ	728	;# 
 16104   0002D9                     U3ERRIE         equ	729	;# 
 16105   0002DA                     U4RXB           equ	730	;# 
 16106   0002DA                     U4RXBL          equ	730	;# 
 16107   0002DC                     U4TXB           equ	732	;# 
 16108   0002DC                     U4TXBL          equ	732	;# 
 16109   0002DE                     U4P1            equ	734	;# 
 16110   0002DE                     U4P1L           equ	734	;# 
 16111   0002E0                     U4P2            equ	736	;# 
 16112   0002E0                     U4P2L           equ	736	;# 
 16113   0002E2                     U4P3            equ	738	;# 
 16114   0002E2                     U4P3L           equ	738	;# 
 16115   0002E4                     U4CON0          equ	740	;# 
 16116   0002E5                     U4CON1          equ	741	;# 
 16117   0002E6                     U4CON2          equ	742	;# 
 16118   0002E7                     U4BRG           equ	743	;# 
 16119   0002E7                     U4BRGL          equ	743	;# 
 16120   0002E8                     U4BRGH          equ	744	;# 
 16121   0002E9                     U4FIFO          equ	745	;# 
 16122   0002EA                     U4UIR           equ	746	;# 
 16123   0002EB                     U4ERRIR         equ	747	;# 
 16124   0002EC                     U4ERRIE         equ	748	;# 
 16125   0002ED                     U5RXB           equ	749	;# 
 16126   0002ED                     U5RXBL          equ	749	;# 
 16127   0002EF                     U5TXB           equ	751	;# 
 16128   0002EF                     U5TXBL          equ	751	;# 
 16129   0002F1                     U5P1            equ	753	;# 
 16130   0002F1                     U5P1L           equ	753	;# 
 16131   0002F3                     U5P2            equ	755	;# 
 16132   0002F3                     U5P2L           equ	755	;# 
 16133   0002F5                     U5P3            equ	757	;# 
 16134   0002F5                     U5P3L           equ	757	;# 
 16135   0002F7                     U5CON0          equ	759	;# 
 16136   0002F8                     U5CON1          equ	760	;# 
 16137   0002F9                     U5CON2          equ	761	;# 
 16138   0002FA                     U5BRG           equ	762	;# 
 16139   0002FA                     U5BRGL          equ	762	;# 
 16140   0002FB                     U5BRGH          equ	763	;# 
 16141   0002FC                     U5FIFO          equ	764	;# 
 16142   0002FD                     U5UIR           equ	765	;# 
 16143   0002FE                     U5ERRIR         equ	766	;# 
 16144   0002FF                     U5ERRIE         equ	767	;# 
 16145   000300                     SMT1TMR         equ	768	;# 
 16146   000300                     SMT1TMRL        equ	768	;# 
 16147   000301                     SMT1TMRH        equ	769	;# 
 16148   000302                     SMT1TMRU        equ	770	;# 
 16149   000303                     SMT1CPR         equ	771	;# 
 16150   000303                     SMT1CPRL        equ	771	;# 
 16151   000304                     SMT1CPRH        equ	772	;# 
 16152   000305                     SMT1CPRU        equ	773	;# 
 16153   000306                     SMT1CPW         equ	774	;# 
 16154   000306                     SMT1CPWL        equ	774	;# 
 16155   000307                     SMT1CPWH        equ	775	;# 
 16156   000308                     SMT1CPWU        equ	776	;# 
 16157   000309                     SMT1PR          equ	777	;# 
 16158   000309                     SMT1PRL         equ	777	;# 
 16159   00030A                     SMT1PRH         equ	778	;# 
 16160   00030B                     SMT1PRU         equ	779	;# 
 16161   00030C                     SMT1CON0        equ	780	;# 
 16162   00030D                     SMT1CON1        equ	781	;# 
 16163   00030E                     SMT1STAT        equ	782	;# 
 16164   00030F                     SMT1CLK         equ	783	;# 
 16165   000310                     SMT1SIG         equ	784	;# 
 16166   000311                     SMT1WIN         equ	785	;# 
 16167   000318                     TMR0L           equ	792	;# 
 16168   000318                     TMR0            equ	792	;# 
 16169   000319                     TMR0H           equ	793	;# 
 16170   000319                     PR0             equ	793	;# 
 16171   00031A                     T0CON0          equ	794	;# 
 16172   00031B                     T0CON1          equ	795	;# 
 16173   00031C                     TMR1            equ	796	;# 
 16174   00031C                     TMR1L           equ	796	;# 
 16175   00031D                     TMR1H           equ	797	;# 
 16176   00031E                     T1CON           equ	798	;# 
 16177   00031E                     TMR1CON         equ	798	;# 
 16178   00031F                     T1GCON          equ	799	;# 
 16179   00031F                     TMR1GCON        equ	799	;# 
 16180   000320                     T1GATE          equ	800	;# 
 16181   000320                     TMR1GATE        equ	800	;# 
 16182   000321                     T1CLK           equ	801	;# 
 16183   000321                     TMR1CLK         equ	801	;# 
 16184   000321                     PR1             equ	801	;# 
 16185   000322                     T2TMR           equ	802	;# 
 16186   000322                     TMR2            equ	802	;# 
 16187   000323                     T2PR            equ	803	;# 
 16188   000323                     PR2             equ	803	;# 
 16189   000324                     T2CON           equ	804	;# 
 16190   000325                     T2HLT           equ	805	;# 
 16191   000326                     T2CLKCON        equ	806	;# 
 16192   000326                     T2CLK           equ	806	;# 
 16193   000327                     T2RST           equ	807	;# 
 16194   000328                     TMR3            equ	808	;# 
 16195   000328                     TMR3L           equ	808	;# 
 16196   000329                     TMR3H           equ	809	;# 
 16197   00032A                     T3CON           equ	810	;# 
 16198   00032A                     TMR3CON         equ	810	;# 
 16199   00032B                     T3GCON          equ	811	;# 
 16200   00032B                     TMR3GCON        equ	811	;# 
 16201   00032C                     T3GATE          equ	812	;# 
 16202   00032C                     TMR3GATE        equ	812	;# 
 16203   00032D                     T3CLK           equ	813	;# 
 16204   00032D                     TMR3CLK         equ	813	;# 
 16205   00032D                     PR3             equ	813	;# 
 16206   00032E                     T4TMR           equ	814	;# 
 16207   00032E                     TMR4            equ	814	;# 
 16208   00032F                     T4PR            equ	815	;# 
 16209   00032F                     PR4             equ	815	;# 
 16210   000330                     T4CON           equ	816	;# 
 16211   000331                     T4HLT           equ	817	;# 
 16212   000332                     T4CLKCON        equ	818	;# 
 16213   000332                     T4CLK           equ	818	;# 
 16214   000333                     T4RST           equ	819	;# 
 16215   000334                     TMR5            equ	820	;# 
 16216   000334                     TMR5L           equ	820	;# 
 16217   000335                     TMR5H           equ	821	;# 
 16218   000336                     T5CON           equ	822	;# 
 16219   000336                     TMR5CON         equ	822	;# 
 16220   000337                     T5GCON          equ	823	;# 
 16221   000337                     TMR5GCON        equ	823	;# 
 16222   000338                     T5GATE          equ	824	;# 
 16223   000338                     TMR5GATE        equ	824	;# 
 16224   000339                     T5CLK           equ	825	;# 
 16225   000339                     TMR5CLK         equ	825	;# 
 16226   000339                     PR5             equ	825	;# 
 16227   00033A                     T6TMR           equ	826	;# 
 16228   00033A                     TMR6            equ	826	;# 
 16229   00033B                     T6PR            equ	827	;# 
 16230   00033B                     PR6             equ	827	;# 
 16231   00033C                     T6CON           equ	828	;# 
 16232   00033D                     T6HLT           equ	829	;# 
 16233   00033E                     T6CLKCON        equ	830	;# 
 16234   00033E                     T6CLK           equ	830	;# 
 16235   00033F                     T6RST           equ	831	;# 
 16236   000340                     CCPR1           equ	832	;# 
 16237   000340                     CCPR1L          equ	832	;# 
 16238   000341                     CCPR1H          equ	833	;# 
 16239   000342                     CCP1CON         equ	834	;# 
 16240   000343                     CCP1CAP         equ	835	;# 
 16241   000344                     CCPR2           equ	836	;# 
 16242   000344                     CCPR2L          equ	836	;# 
 16243   000345                     CCPR2H          equ	837	;# 
 16244   000346                     CCP2CON         equ	838	;# 
 16245   000347                     CCP2CAP         equ	839	;# 
 16246   000348                     CCPR3           equ	840	;# 
 16247   000348                     CCPR3L          equ	840	;# 
 16248   000349                     CCPR3H          equ	841	;# 
 16249   00034A                     CCP3CON         equ	842	;# 
 16250   00034B                     CCP3CAP         equ	843	;# 
 16251   00034C                     CCPTMRS0        equ	844	;# 
 16252   00034F                     CRCDATA         equ	847	;# 
 16253   00034F                     CRCDATAL        equ	847	;# 
 16254   000350                     CRCDATAH        equ	848	;# 
 16255   000351                     CRCDATAU        equ	849	;# 
 16256   000352                     CRCDATAT        equ	850	;# 
 16257   000353                     CRCOUT          equ	851	;# 
 16258   000353                     CRCSHFT         equ	851	;# 
 16259   000353                     CRCXOR          equ	851	;# 
 16260   000353                     CRCOUTL         equ	851	;# 
 16261   000353                     CRCSHFTL        equ	851	;# 
 16262   000353                     CRCSHIFTL       equ	851	;# 
 16263   000353                     CRCXORL         equ	851	;# 
 16264   000354                     CRCOUTH         equ	852	;# 
 16265   000354                     CRCSHFTH        equ	852	;# 
 16266   000354                     CRCSHIFTH       equ	852	;# 
 16267   000354                     CRCXORH         equ	852	;# 
 16268   000355                     CRCOUTU         equ	853	;# 
 16269   000355                     CRCSHFTU        equ	853	;# 
 16270   000355                     CRCSHIFTU       equ	853	;# 
 16271   000355                     CRCXORU         equ	853	;# 
 16272   000356                     CRCOUTT         equ	854	;# 
 16273   000356                     CRCSHFTT        equ	854	;# 
 16274   000356                     CRCSHIFTT       equ	854	;# 
 16275   000356                     CRCXORT         equ	854	;# 
 16276   000357                     CRCCON0         equ	855	;# 
 16277   000358                     CRCCON1         equ	856	;# 
 16278   000359                     CRCCON2         equ	857	;# 
 16279   00035A                     SCANLADR        equ	858	;# 
 16280   00035A                     SCANLADRL       equ	858	;# 
 16281   00035B                     SCANLADRH       equ	859	;# 
 16282   00035C                     SCANLADRU       equ	860	;# 
 16283   00035D                     SCANHADR        equ	861	;# 
 16284   00035D                     SCANHADRL       equ	861	;# 
 16285   00035E                     SCANHADRH       equ	862	;# 
 16286   00035F                     SCANHADRU       equ	863	;# 
 16287   000360                     SCANCON0        equ	864	;# 
 16288   000361                     SCANTRIG        equ	865	;# 
 16289   000362                     IPR0            equ	866	;# 
 16290   000363                     IPR1            equ	867	;# 
 16291   000364                     IPR2            equ	868	;# 
 16292   000365                     IPR3            equ	869	;# 
 16293   000366                     IPR4            equ	870	;# 
 16294   000367                     IPR5            equ	871	;# 
 16295   000368                     IPR6            equ	872	;# 
 16296   000369                     IPR7            equ	873	;# 
 16297   00036A                     IPR8            equ	874	;# 
 16298   00036B                     IPR9            equ	875	;# 
 16299   00036C                     IPR10           equ	876	;# 
 16300   00036D                     IPR11           equ	877	;# 
 16301   00036E                     IPR12           equ	878	;# 
 16302   00036F                     IPR13           equ	879	;# 
 16303   000370                     IPR14           equ	880	;# 
 16304   000371                     IPR15           equ	881	;# 
 16305   000373                     STATUS_CSHAD    equ	883	;# 
 16306   000374                     WREG_CSHAD      equ	884	;# 
 16307   000375                     BSR_CSHAD       equ	885	;# 
 16308   000376                     SHADCON         equ	886	;# 
 16309   000377                     STATUS_SHAD     equ	887	;# 
 16310   000378                     WREG_SHAD       equ	888	;# 
 16311   000379                     BSR_SHAD        equ	889	;# 
 16312   00037A                     PCLATH_SHAD     equ	890	;# 
 16313   00037B                     PCLATU_SHAD     equ	891	;# 
 16314   00037C                     FSR0SH          equ	892	;# 
 16315   00037C                     FSR0L_SHAD      equ	892	;# 
 16316   00037D                     FSR0H_SHAD      equ	893	;# 
 16317   00037E                     FSR1SH          equ	894	;# 
 16318   00037E                     FSR1L_SHAD      equ	894	;# 
 16319   00037F                     FSR1H_SHAD      equ	895	;# 
 16320   000380                     FSR2SH          equ	896	;# 
 16321   000380                     FSR2L_SHAD      equ	896	;# 
 16322   000381                     FSR2H_SHAD      equ	897	;# 
 16323   000382                     PRODSH          equ	898	;# 
 16324   000382                     PRODL_SHAD      equ	898	;# 
 16325   000383                     PRODH_SHAD      equ	899	;# 
 16326   000387                     TU16ACON0       equ	903	;# 
 16327   000388                     TU16ACON1       equ	904	;# 
 16328   000389                     TU16AHLT        equ	905	;# 
 16329   00038A                     TU16APS         equ	906	;# 
 16330   00038B                     TU16ATMR        equ	907	;# 
 16331   00038B                     TU16ACR         equ	907	;# 
 16332   00038B                     TU16ATMRL       equ	907	;# 
 16333   00038B                     TU16ACRL        equ	907	;# 
 16334   00038C                     TU16ATMRH       equ	908	;# 
 16335   00038C                     TU16ACRH        equ	908	;# 
 16336   00038D                     TU16APR         equ	909	;# 
 16337   00038D                     TU16APRL        equ	909	;# 
 16338   00038E                     TU16APRH        equ	910	;# 
 16339   00038F                     TU16ACLK        equ	911	;# 
 16340   000390                     TU16AERS        equ	912	;# 
 16341   000393                     TU16BCON0       equ	915	;# 
 16342   000394                     TU16BCON1       equ	916	;# 
 16343   000395                     TU16BHLT        equ	917	;# 
 16344   000396                     TU16BPS         equ	918	;# 
 16345   000397                     TU16BTMR        equ	919	;# 
 16346   000397                     TU16BCR         equ	919	;# 
 16347   000397                     TU16BTMRL       equ	919	;# 
 16348   000397                     TU16BCRL        equ	919	;# 
 16349   000398                     TU16BTMRH       equ	920	;# 
 16350   000398                     TU16BCRH        equ	920	;# 
 16351   000399                     TU16BPR         equ	921	;# 
 16352   000399                     TU16BPRL        equ	921	;# 
 16353   00039A                     TU16BPRH        equ	922	;# 
 16354   00039B                     TU16BCLK        equ	923	;# 
 16355   00039C                     TU16BERS        equ	924	;# 
 16356   0003BB                     TUCHAIN         equ	955	;# 
 16357   0003BC                     CWG1CLK         equ	956	;# 
 16358   0003BC                     CWG1CLKCON      equ	956	;# 
 16359   0003BD                     CWG1ISM         equ	957	;# 
 16360   0003BE                     CWG1DBR         equ	958	;# 
 16361   0003BF                     CWG1DBF         equ	959	;# 
 16362   0003C0                     CWG1CON0        equ	960	;# 
 16363   0003C1                     CWG1CON1        equ	961	;# 
 16364   0003C2                     CWG1AS0         equ	962	;# 
 16365   0003C3                     CWG1AS1         equ	963	;# 
 16366   0003C4                     CWG1STR         equ	964	;# 
 16367   0003C5                     CWG2CLK         equ	965	;# 
 16368   0003C5                     CWG2CLKCON      equ	965	;# 
 16369   0003C6                     CWG2ISM         equ	966	;# 
 16370   0003C7                     CWG2DBR         equ	967	;# 
 16371   0003C8                     CWG2DBF         equ	968	;# 
 16372   0003C9                     CWG2CON0        equ	969	;# 
 16373   0003CA                     CWG2CON1        equ	970	;# 
 16374   0003CB                     CWG2AS0         equ	971	;# 
 16375   0003CC                     CWG2AS1         equ	972	;# 
 16376   0003CD                     CWG2STR         equ	973	;# 
 16377   0003CE                     CWG3CLK         equ	974	;# 
 16378   0003CE                     CWG3CLKCON      equ	974	;# 
 16379   0003CF                     CWG3ISM         equ	975	;# 
 16380   0003D0                     CWG3DBR         equ	976	;# 
 16381   0003D1                     CWG3DBF         equ	977	;# 
 16382   0003D2                     CWG3CON0        equ	978	;# 
 16383   0003D3                     CWG3CON1        equ	979	;# 
 16384   0003D4                     CWG3AS0         equ	980	;# 
 16385   0003D5                     CWG3AS1         equ	981	;# 
 16386   0003D6                     CWG3STR         equ	982	;# 
 16387   0003D7                     FVRCON          equ	983	;# 
 16388   0003D8                     ADCPCON         equ	984	;# 
 16389   0003D8                     ADCP            equ	984	;# 
 16390   0003D9                     ADLTH           equ	985	;# 
 16391   0003D9                     ADLTHL          equ	985	;# 
 16392   0003DA                     ADLTHH          equ	986	;# 
 16393   0003DB                     ADUTH           equ	987	;# 
 16394   0003DB                     ADUTHL          equ	987	;# 
 16395   0003DC                     ADUTHH          equ	988	;# 
 16396   0003DD                     ADERR           equ	989	;# 
 16397   0003DD                     ADERRL          equ	989	;# 
 16398   0003DE                     ADERRH          equ	990	;# 
 16399   0003DF                     ADSTPT          equ	991	;# 
 16400   0003DF                     ADSTPTL         equ	991	;# 
 16401   0003E0                     ADSTPTH         equ	992	;# 
 16402   0003E1                     ADFLTR          equ	993	;# 
 16403   0003E1                     ADFLTRL         equ	993	;# 
 16404   0003E2                     ADFLTRH         equ	994	;# 
 16405   0003E3                     ADACC           equ	995	;# 
 16406   0003E3                     ADACCL          equ	995	;# 
 16407   0003E4                     ADACCH          equ	996	;# 
 16408   0003E5                     ADACCU          equ	997	;# 
 16409   0003E6                     ADCNT           equ	998	;# 
 16410   0003E7                     ADRPT           equ	999	;# 
 16411   0003E8                     ADPREV          equ	1000	;# 
 16412   0003E8                     ADPREVL         equ	1000	;# 
 16413   0003E9                     ADPREVH         equ	1001	;# 
 16414   0003EA                     ADRES           equ	1002	;# 
 16415   0003EA                     ADRESL          equ	1002	;# 
 16416   0003EB                     ADRESH          equ	1003	;# 
 16417   0003EC                     ADPCH           equ	1004	;# 
 16418   0003EE                     ADACQ           equ	1006	;# 
 16419   0003EE                     ADACQL          equ	1006	;# 
 16420   0003EF                     ADACQH          equ	1007	;# 
 16421   0003F0                     ADCAP           equ	1008	;# 
 16422   0003F1                     ADPRE           equ	1009	;# 
 16423   0003F1                     ADPREL          equ	1009	;# 
 16424   0003F2                     ADPREH          equ	1010	;# 
 16425   0003F3                     ADCON0          equ	1011	;# 
 16426   0003F4                     ADCON1          equ	1012	;# 
 16427   0003F5                     ADCON2          equ	1013	;# 
 16428   0003F6                     ADCON3          equ	1014	;# 
 16429   0003F7                     ADSTAT          equ	1015	;# 
 16430   0003F8                     ADREF           equ	1016	;# 
 16431   0003F9                     ADACT           equ	1017	;# 
 16432   0003FA                     ADCLK           equ	1018	;# 
 16433   0003FB                     ADCTX           equ	1019	;# 
 16434   0003FC                     ADCSEL1         equ	1020	;# 
 16435   0003FD                     ADCSEL2         equ	1021	;# 
 16436   0003FE                     ADCSEL3         equ	1022	;# 
 16437   0003FF                     ADCSEL4         equ	1023	;# 
 16438   000400                     ANSELA          equ	1024	;# 
 16439   000401                     WPUA            equ	1025	;# 
 16440   000402                     ODCONA          equ	1026	;# 
 16441   000403                     SLRCONA         equ	1027	;# 
 16442   000404                     INLVLA          equ	1028	;# 
 16443   000405                     IOCAP           equ	1029	;# 
 16444   000406                     IOCAN           equ	1030	;# 
 16445   000407                     IOCAF           equ	1031	;# 
 16446   000408                     ANSELB          equ	1032	;# 
 16447   000409                     WPUB            equ	1033	;# 
 16448   00040A                     ODCONB          equ	1034	;# 
 16449   00040B                     SLRCONB         equ	1035	;# 
 16450   00040C                     INLVLB          equ	1036	;# 
 16451   00040D                     IOCBP           equ	1037	;# 
 16452   00040E                     IOCBN           equ	1038	;# 
 16453   00040F                     IOCBF           equ	1039	;# 
 16454   000410                     ANSELC          equ	1040	;# 
 16455   000411                     WPUC            equ	1041	;# 
 16456   000412                     ODCONC          equ	1042	;# 
 16457   000413                     SLRCONC         equ	1043	;# 
 16458   000414                     INLVLC          equ	1044	;# 
 16459   000415                     IOCCP           equ	1045	;# 
 16460   000416                     IOCCN           equ	1046	;# 
 16461   000417                     IOCCF           equ	1047	;# 
 16462   000421                     WPUE            equ	1057	;# 
 16463   000424                     INLVLE          equ	1060	;# 
 16464   000425                     IOCEP           equ	1061	;# 
 16465   000426                     IOCEN           equ	1062	;# 
 16466   000427                     IOCEF           equ	1063	;# 
 16467   000440                     NCO1ACC         equ	1088	;# 
 16468   000440                     NCO1ACCL        equ	1088	;# 
 16469   000441                     NCO1ACCH        equ	1089	;# 
 16470   000442                     NCO1ACCU        equ	1090	;# 
 16471   000443                     NCO1INC         equ	1091	;# 
 16472   000443                     NCO1INCL        equ	1091	;# 
 16473   000444                     NCO1INCH        equ	1092	;# 
 16474   000445                     NCO1INCU        equ	1093	;# 
 16475   000446                     NCO1CON         equ	1094	;# 
 16476   000447                     NCO1CLK         equ	1095	;# 
 16477   000448                     NCO2ACC         equ	1096	;# 
 16478   000448                     NCO2ACCL        equ	1096	;# 
 16479   000449                     NCO2ACCH        equ	1097	;# 
 16480   00044A                     NCO2ACCU        equ	1098	;# 
 16481   00044B                     NCO2INC         equ	1099	;# 
 16482   00044B                     NCO2INCL        equ	1099	;# 
 16483   00044C                     NCO2INCH        equ	1100	;# 
 16484   00044D                     NCO2INCU        equ	1101	;# 
 16485   00044E                     NCO2CON         equ	1102	;# 
 16486   00044F                     NCO2CLK         equ	1103	;# 
 16487   000450                     NCO3ACC         equ	1104	;# 
 16488   000450                     NCO3ACCL        equ	1104	;# 
 16489   000451                     NCO3ACCH        equ	1105	;# 
 16490   000452                     NCO3ACCU        equ	1106	;# 
 16491   000453                     NCO3INC         equ	1107	;# 
 16492   000453                     NCO3INCL        equ	1107	;# 
 16493   000454                     NCO3INCH        equ	1108	;# 
 16494   000455                     NCO3INCU        equ	1109	;# 
 16495   000456                     NCO3CON         equ	1110	;# 
 16496   000457                     NCO3CLK         equ	1111	;# 
 16497   000458                     FSCMCON         equ	1112	;# 
 16498   000459                     IVTLOCK         equ	1113	;# 
 16499   00045A                     IVTAD           equ	1114	;# 
 16500   00045A                     IVTADL          equ	1114	;# 
 16501   00045B                     IVTADH          equ	1115	;# 
 16502   00045C                     IVTADU          equ	1116	;# 
 16503   00045D                     IVTBASE         equ	1117	;# 
 16504   00045D                     IVTBASEL        equ	1117	;# 
 16505   00045E                     IVTBASEH        equ	1118	;# 
 16506   00045F                     IVTBASEU        equ	1119	;# 
 16507   000460                     PWM1ERS         equ	1120	;# 
 16508   000461                     PWM1CLK         equ	1121	;# 
 16509   000462                     PWM1LDS         equ	1122	;# 
 16510   000463                     PWM1PR          equ	1123	;# 
 16511   000463                     PWM1PRL         equ	1123	;# 
 16512   000464                     PWM1PRH         equ	1124	;# 
 16513   000465                     PWM1CPRE        equ	1125	;# 
 16514   000466                     PWM1PIPOS       equ	1126	;# 
 16515   000467                     PWM1GIR         equ	1127	;# 
 16516   000468                     PWM1GIE         equ	1128	;# 
 16517   000469                     PWM1CON         equ	1129	;# 
 16518   00046A                     PWM1S1CFG       equ	1130	;# 
 16519   00046B                     PWM1S1P1        equ	1131	;# 
 16520   00046B                     PWM1S1P1L       equ	1131	;# 
 16521   00046C                     PWM1S1P1H       equ	1132	;# 
 16522   00046D                     PWM1S1P2        equ	1133	;# 
 16523   00046D                     PWM1S1P2L       equ	1133	;# 
 16524   00046E                     PWM1S1P2H       equ	1134	;# 
 16525   00046F                     PWM2ERS         equ	1135	;# 
 16526   000470                     PWM2CLK         equ	1136	;# 
 16527   000471                     PWM2LDS         equ	1137	;# 
 16528   000472                     PWM2PR          equ	1138	;# 
 16529   000472                     PWM2PRL         equ	1138	;# 
 16530   000473                     PWM2PRH         equ	1139	;# 
 16531   000474                     PWM2CPRE        equ	1140	;# 
 16532   000475                     PWM2PIPOS       equ	1141	;# 
 16533   000476                     PWM2GIR         equ	1142	;# 
 16534   000477                     PWM2GIE         equ	1143	;# 
 16535   000478                     PWM2CON         equ	1144	;# 
 16536   000479                     PWM2S1CFG       equ	1145	;# 
 16537   00047A                     PWM2S1P1        equ	1146	;# 
 16538   00047A                     PWM2S1P1L       equ	1146	;# 
 16539   00047B                     PWM2S1P1H       equ	1147	;# 
 16540   00047C                     PWM2S1P2        equ	1148	;# 
 16541   00047C                     PWM2S1P2L       equ	1148	;# 
 16542   00047D                     PWM2S1P2H       equ	1149	;# 
 16543   00047E                     PWM3ERS         equ	1150	;# 
 16544   00047F                     PWM3CLK         equ	1151	;# 
 16545   000480                     PWM3LDS         equ	1152	;# 
 16546   000481                     PWM3PR          equ	1153	;# 
 16547   000481                     PWM3PRL         equ	1153	;# 
 16548   000482                     PWM3PRH         equ	1154	;# 
 16549   000483                     PWM3CPRE        equ	1155	;# 
 16550   000484                     PWM3PIPOS       equ	1156	;# 
 16551   000485                     PWM3GIR         equ	1157	;# 
 16552   000486                     PWM3GIE         equ	1158	;# 
 16553   000487                     PWM3CON         equ	1159	;# 
 16554   000488                     PWM3S1CFG       equ	1160	;# 
 16555   000489                     PWM3S1P1        equ	1161	;# 
 16556   000489                     PWM3S1P1L       equ	1161	;# 
 16557   00048A                     PWM3S1P1H       equ	1162	;# 
 16558   00048B                     PWM3S1P2        equ	1163	;# 
 16559   00048B                     PWM3S1P2L       equ	1163	;# 
 16560   00048C                     PWM3S1P2H       equ	1164	;# 
 16561   00048D                     PWM4ERS         equ	1165	;# 
 16562   00048E                     PWM4CLK         equ	1166	;# 
 16563   00048F                     PWM4LDS         equ	1167	;# 
 16564   000490                     PWM4PR          equ	1168	;# 
 16565   000490                     PWM4PRL         equ	1168	;# 
 16566   000491                     PWM4PRH         equ	1169	;# 
 16567   000492                     PWM4CPRE        equ	1170	;# 
 16568   000493                     PWM4PIPOS       equ	1171	;# 
 16569   000494                     PWM4GIR         equ	1172	;# 
 16570   000495                     PWM4GIE         equ	1173	;# 
 16571   000496                     PWM4CON         equ	1174	;# 
 16572   000497                     PWM4S1CFG       equ	1175	;# 
 16573   000498                     PWM4S1P1        equ	1176	;# 
 16574   000498                     PWM4S1P1L       equ	1176	;# 
 16575   000499                     PWM4S1P1H       equ	1177	;# 
 16576   00049A                     PWM4S1P2        equ	1178	;# 
 16577   00049A                     PWM4S1P2L       equ	1178	;# 
 16578   00049B                     PWM4S1P2H       equ	1179	;# 
 16579   00049C                     PWMLOAD         equ	1180	;# 
 16580   00049D                     PWMEN           equ	1181	;# 
 16581   00049E                     PIE0            equ	1182	;# 
 16582   00049F                     PIE1            equ	1183	;# 
 16583   0004A0                     PIE2            equ	1184	;# 
 16584   0004A1                     PIE3            equ	1185	;# 
 16585   0004A2                     PIE4            equ	1186	;# 
 16586   0004A3                     PIE5            equ	1187	;# 
 16587   0004A4                     PIE6            equ	1188	;# 
 16588   0004A5                     PIE7            equ	1189	;# 
 16589   0004A6                     PIE8            equ	1190	;# 
 16590   0004A7                     PIE9            equ	1191	;# 
 16591   0004A8                     PIE10           equ	1192	;# 
 16592   0004A9                     PIE11           equ	1193	;# 
 16593   0004AA                     PIE12           equ	1194	;# 
 16594   0004AB                     PIE13           equ	1195	;# 
 16595   0004AC                     PIE14           equ	1196	;# 
 16596   0004AD                     PIE15           equ	1197	;# 
 16597   0004AE                     PIR0            equ	1198	;# 
 16598   0004AF                     PIR1            equ	1199	;# 
 16599   0004B0                     PIR2            equ	1200	;# 
 16600   0004B1                     PIR3            equ	1201	;# 
 16601   0004B2                     PIR4            equ	1202	;# 
 16602   0004B3                     PIR5            equ	1203	;# 
 16603   0004B4                     PIR6            equ	1204	;# 
 16604   0004B5                     PIR7            equ	1205	;# 
 16605   0004B6                     PIR8            equ	1206	;# 
 16606   0004B7                     PIR9            equ	1207	;# 
 16607   0004B8                     PIR10           equ	1208	;# 
 16608   0004B9                     PIR11           equ	1209	;# 
 16609   0004BA                     PIR12           equ	1210	;# 
 16610   0004BB                     PIR13           equ	1211	;# 
 16611   0004BC                     PIR14           equ	1212	;# 
 16612   0004BD                     PIR15           equ	1213	;# 
 16613   0004BE                     LATA            equ	1214	;# 
 16614   0004BF                     LATB            equ	1215	;# 
 16615   0004C0                     LATC            equ	1216	;# 
 16616   0004C6                     TRISA           equ	1222	;# 
 16617   0004C7                     TRISB           equ	1223	;# 
 16618   0004C8                     TRISC           equ	1224	;# 
 16619   0004CA                     TRISE           equ	1226	;# 
 16620   0004CE                     PORTA           equ	1230	;# 
 16621   0004CF                     PORTB           equ	1231	;# 
 16622   0004D0                     PORTC           equ	1232	;# 
 16623   0004D2                     PORTE           equ	1234	;# 
 16624   0004D6                     INTCON0         equ	1238	;# 
 16625   0004D7                     INTCON1         equ	1239	;# 
 16626   0004D8                     STATUS          equ	1240	;# 
 16627   0004D9                     FSR2            equ	1241	;# 
 16628   0004D9                     FSR2L           equ	1241	;# 
 16629   0004DA                     FSR2H           equ	1242	;# 
 16630   0004DB                     PLUSW2          equ	1243	;# 
 16631   0004DC                     PREINC2         equ	1244	;# 
 16632   0004DD                     POSTDEC2        equ	1245	;# 
 16633   0004DE                     POSTINC2        equ	1246	;# 
 16634   0004DF                     INDF2           equ	1247	;# 
 16635   0004E0                     BSR             equ	1248	;# 
 16636   0004E1                     FSR1            equ	1249	;# 
 16637   0004E1                     FSR1L           equ	1249	;# 
 16638   0004E2                     FSR1H           equ	1250	;# 
 16639   0004E3                     PLUSW1          equ	1251	;# 
 16640   0004E4                     PREINC1         equ	1252	;# 
 16641   0004E5                     POSTDEC1        equ	1253	;# 
 16642   0004E6                     POSTINC1        equ	1254	;# 
 16643   0004E7                     INDF1           equ	1255	;# 
 16644   0004E8                     WREG            equ	1256	;# 
 16645   0004E9                     FSR0            equ	1257	;# 
 16646   0004E9                     FSR0L           equ	1257	;# 
 16647   0004EA                     FSR0H           equ	1258	;# 
 16648   0004EB                     PLUSW0          equ	1259	;# 
 16649   0004EC                     PREINC0         equ	1260	;# 
 16650   0004ED                     POSTDEC0        equ	1261	;# 
 16651   0004EE                     POSTINC0        equ	1262	;# 
 16652   0004EF                     INDF0           equ	1263	;# 
 16653   0004F0                     PCON0           equ	1264	;# 
 16654   0004F1                     PCON1           equ	1265	;# 
 16655   0004F2                     CPUDOZE         equ	1266	;# 
 16656   0004F3                     PROD            equ	1267	;# 
 16657   0004F3                     PRODL           equ	1267	;# 
 16658   0004F4                     PRODH           equ	1268	;# 
 16659   0004F5                     TABLAT          equ	1269	;# 
 16660   0004F6                     TBLPTR          equ	1270	;# 
 16661   0004F6                     TBLPTRL         equ	1270	;# 
 16662   0004F7                     TBLPTRH         equ	1271	;# 
 16663   0004F8                     TBLPTRU         equ	1272	;# 
 16664   0004F9                     PCLAT           equ	1273	;# 
 16665   0004F9                     PCL             equ	1273	;# 
 16666   0004FA                     PCLATH          equ	1274	;# 
 16667   0004FB                     PCLATU          equ	1275	;# 
 16668   0004FC                     STKPTR          equ	1276	;# 
 16669   0004FD                     TOS             equ	1277	;# 
 16670   0004FD                     TOSL            equ	1277	;# 
 16671   0004FE                     TOSH            equ	1278	;# 
 16672   0004FF                     TOSU            equ	1279	;# 
 16673   000038                     BOOTREG         equ	56	;# 
 16674   000039                     CLKRCON         equ	57	;# 
 16675   00003A                     CLKRCLK         equ	58	;# 
 16676   000040                     NVMCON0         equ	64	;# 
 16677   000041                     NVMCON1         equ	65	;# 
 16678   000042                     NVMLOCK         equ	66	;# 
 16679   000043                     NVMADR          equ	67	;# 
 16680   000043                     NVMADRL         equ	67	;# 
 16681   000044                     NVMADRH         equ	68	;# 
 16682   000045                     NVMADRU         equ	69	;# 
 16683   000046                     NVMDAT          equ	70	;# 
 16684   000046                     NVMDATL         equ	70	;# 
 16685   000047                     NVMDATH         equ	71	;# 
 16686   000048                     VREGCON         equ	72	;# 
 16687   000049                     BORCON          equ	73	;# 
 16688   00004A                     HLVDCON0        equ	74	;# 
 16689   00004B                     HLVDCON1        equ	75	;# 
 16690   00004C                     ZCDCON          equ	76	;# 
 16691   000060                     PMD0            equ	96	;# 
 16692   000061                     PMD1            equ	97	;# 
 16693   000062                     PMD2            equ	98	;# 
 16694   000063                     PMD3            equ	99	;# 
 16695   000064                     PMD4            equ	100	;# 
 16696   000065                     PMD5            equ	101	;# 
 16697   000066                     PMD6            equ	102	;# 
 16698   000067                     PMD7            equ	103	;# 
 16699   000068                     PMD8            equ	104	;# 
 16700   00006A                     MD1CON0         equ	106	;# 
 16701   00006B                     MD1CON1         equ	107	;# 
 16702   00006C                     MD1SRC          equ	108	;# 
 16703   00006D                     MD1CARL         equ	109	;# 
 16704   00006E                     MD1CARH         equ	110	;# 
 16705   00006F                     CMOUT           equ	111	;# 
 16706   000070                     CM1CON0         equ	112	;# 
 16707   000071                     CM1CON1         equ	113	;# 
 16708   000072                     CM1NCH          equ	114	;# 
 16709   000073                     CM1PCH          equ	115	;# 
 16710   000074                     CM2CON0         equ	116	;# 
 16711   000075                     CM2CON1         equ	117	;# 
 16712   000076                     CM2NCH          equ	118	;# 
 16713   000077                     CM2PCH          equ	119	;# 
 16714   000078                     WDTCON0         equ	120	;# 
 16715   000079                     WDTCON1         equ	121	;# 
 16716   00007A                     WDTPSL          equ	122	;# 
 16717   00007B                     WDTPSH          equ	123	;# 
 16718   00007C                     WDTTMR          equ	124	;# 
 16719   00007D                     DAC1DAT         equ	125	;# 
 16720   00007D                     DAC1DATL        equ	125	;# 
 16721   00007F                     DAC1CON         equ	127	;# 
 16722   000080                     SPI1RXB         equ	128	;# 
 16723   000081                     SPI1TXB         equ	129	;# 
 16724   000082                     SPI1TCNT        equ	130	;# 
 16725   000082                     SPI1TCNTL       equ	130	;# 
 16726   000083                     SPI1TCNTH       equ	131	;# 
 16727   000084                     SPI1CON0        equ	132	;# 
 16728   000085                     SPI1CON1        equ	133	;# 
 16729   000086                     SPI1CON2        equ	134	;# 
 16730   000087                     SPI1STATUS      equ	135	;# 
 16731   000088                     SPI1TWIDTH      equ	136	;# 
 16732   000089                     SPI1BAUD        equ	137	;# 
 16733   00008A                     SPI1INTF        equ	138	;# 
 16734   00008B                     SPI1INTE        equ	139	;# 
 16735   00008C                     SPI1CLK         equ	140	;# 
 16736   00008D                     SPI2RXB         equ	141	;# 
 16737   00008E                     SPI2TXB         equ	142	;# 
 16738   00008F                     SPI2TCNT        equ	143	;# 
 16739   00008F                     SPI2TCNTL       equ	143	;# 
 16740   000090                     SPI2TCNTH       equ	144	;# 
 16741   000091                     SPI2CON0        equ	145	;# 
 16742   000092                     SPI2CON1        equ	146	;# 
 16743   000093                     SPI2CON2        equ	147	;# 
 16744   000094                     SPI2STATUS      equ	148	;# 
 16745   000095                     SPI2TWIDTH      equ	149	;# 
 16746   000096                     SPI2BAUD        equ	150	;# 
 16747   000097                     SPI2INTF        equ	151	;# 
 16748   000098                     SPI2INTE        equ	152	;# 
 16749   000099                     SPI2CLK         equ	153	;# 
 16750   0000AC                     ACTCON          equ	172	;# 
 16751   0000AD                     OSCCON1         equ	173	;# 
 16752   0000AE                     OSCCON2         equ	174	;# 
 16753   0000AF                     OSCCON3         equ	175	;# 
 16754   0000B0                     OSCTUNE         equ	176	;# 
 16755   0000B1                     OSCFRQ          equ	177	;# 
 16756   0000B1                     OSCFREQ         equ	177	;# 
 16757   0000B2                     OSCSTAT         equ	178	;# 
 16758   0000B2                     OSCSTAT1        equ	178	;# 
 16759   0000B3                     OSCEN           equ	179	;# 
 16760   0000B4                     PRLOCK          equ	180	;# 
 16761   0000B5                     SCANPR          equ	181	;# 
 16762   0000B6                     DMA1PR          equ	182	;# 
 16763   0000B7                     DMA2PR          equ	183	;# 
 16764   0000B8                     DMA3PR          equ	184	;# 
 16765   0000B9                     DMA4PR          equ	185	;# 
 16766   0000BA                     DMA5PR          equ	186	;# 
 16767   0000BB                     DMA6PR          equ	187	;# 
 16768   0000BC                     DMA7PR          equ	188	;# 
 16769   0000BD                     DMA8PR          equ	189	;# 
 16770   0000BE                     MAINPR          equ	190	;# 
 16771   0000BF                     ISRPR           equ	191	;# 
 16772   0000D4                     CLCDATA         equ	212	;# 
 16773   0000D5                     CLCSELECT       equ	213	;# 
 16774   0000D6                     CLCnCON         equ	214	;# 
 16775   0000D7                     CLCnPOL         equ	215	;# 
 16776   0000D8                     CLCnSEL0        equ	216	;# 
 16777   0000D9                     CLCnSEL1        equ	217	;# 
 16778   0000DA                     CLCnSEL2        equ	218	;# 
 16779   0000DB                     CLCnSEL3        equ	219	;# 
 16780   0000DC                     CLCnGLS0        equ	220	;# 
 16781   0000DD                     CLCnGLS1        equ	221	;# 
 16782   0000DE                     CLCnGLS2        equ	222	;# 
 16783   0000DF                     CLCnGLS3        equ	223	;# 
 16784   0000E8                     DMASELECT       equ	232	;# 
 16785   0000E9                     DMAnBUF         equ	233	;# 
 16786   0000EA                     DMAnDCNT        equ	234	;# 
 16787   0000EA                     DMAnDCNTL       equ	234	;# 
 16788   0000EB                     DMAnDCNTH       equ	235	;# 
 16789   0000EC                     DMAnDPTR        equ	236	;# 
 16790   0000EC                     DMAnDPTRL       equ	236	;# 
 16791   0000ED                     DMAnDPTRH       equ	237	;# 
 16792   0000EE                     DMAnDSZ         equ	238	;# 
 16793   0000EE                     DMAnDSZL        equ	238	;# 
 16794   0000EF                     DMAnDSZH        equ	239	;# 
 16795   0000F0                     DMAnDSA         equ	240	;# 
 16796   0000F0                     DMAnDSAL        equ	240	;# 
 16797   0000F1                     DMAnDSAH        equ	241	;# 
 16798   0000F2                     DMAnSCNT        equ	242	;# 
 16799   0000F2                     DMAnSCNTL       equ	242	;# 
 16800   0000F3                     DMAnSCNTH       equ	243	;# 
 16801   0000F4                     DMAnSPTR        equ	244	;# 
 16802   0000F4                     DMAnSPTRL       equ	244	;# 
 16803   0000F5                     DMAnSPTRH       equ	245	;# 
 16804   0000F6                     DMAnSPTRU       equ	246	;# 
 16805   0000F7                     DMAnSSZ         equ	247	;# 
 16806   0000F7                     DMAnSSZL        equ	247	;# 
 16807   0000F8                     DMAnSSZH        equ	248	;# 
 16808   0000F9                     DMAnSSA         equ	249	;# 
 16809   0000F9                     DMAnSSAL        equ	249	;# 
 16810   0000FA                     DMAnSSAH        equ	250	;# 
 16811   0000FB                     DMAnSSAU        equ	251	;# 
 16812   0000FC                     DMAnCON0        equ	252	;# 
 16813   0000FD                     DMAnCON1        equ	253	;# 
 16814   0000FE                     DMAnAIRQ        equ	254	;# 
 16815   0000FF                     DMAnSIRQ        equ	255	;# 
 16816   000100                     C1CONL          equ	256	;# 
 16817   000101                     C1CONH          equ	257	;# 
 16818   000102                     C1CONU          equ	258	;# 
 16819   000103                     C1CONT          equ	259	;# 
 16820   000104                     C1NBTCFGL       equ	260	;# 
 16821   000105                     C1NBTCFGH       equ	261	;# 
 16822   000106                     C1NBTCFGU       equ	262	;# 
 16823   000107                     C1NBTCFGT       equ	263	;# 
 16824   000108                     C1DBTCFGL       equ	264	;# 
 16825   000109                     C1DBTCFGH       equ	265	;# 
 16826   00010A                     C1DBTCFGU       equ	266	;# 
 16827   00010B                     C1DBTCFGT       equ	267	;# 
 16828   00010C                     C1TDCL          equ	268	;# 
 16829   00010D                     C1TDCH          equ	269	;# 
 16830   00010E                     C1TDCU          equ	270	;# 
 16831   000110                     C1TBC           equ	272	;# 
 16832   000110                     C1TBCL          equ	272	;# 
 16833   000111                     C1TBCH          equ	273	;# 
 16834   000112                     C1TBCU          equ	274	;# 
 16835   000113                     C1TBCT          equ	275	;# 
 16836   000114                     C1TSCONL        equ	276	;# 
 16837   000115                     C1TSCONH        equ	277	;# 
 16838   000116                     C1TSCONU        equ	278	;# 
 16839   000117                     C1TSCONT        equ	279	;# 
 16840   000118                     C1VECL          equ	280	;# 
 16841   000119                     C1VECH          equ	281	;# 
 16842   00011A                     C1VECU          equ	282	;# 
 16843   00011B                     C1VECT          equ	283	;# 
 16844   00011C                     C1INTL          equ	284	;# 
 16845   00011D                     C1INTH          equ	285	;# 
 16846   00011E                     C1INTU          equ	286	;# 
 16847   00011F                     C1INTT          equ	287	;# 
 16848   000120                     C1RXIF          equ	288	;# 
 16849   000120                     C1RXIFL         equ	288	;# 
 16850   000121                     C1RXIFH         equ	289	;# 
 16851   000122                     C1RXIFU         equ	290	;# 
 16852   000123                     C1RXIFT         equ	291	;# 
 16853   000124                     C1TXIF          equ	292	;# 
 16854   000124                     C1TXIFL         equ	292	;# 
 16855   000125                     C1TXIFH         equ	293	;# 
 16856   000126                     C1TXIFU         equ	294	;# 
 16857   000127                     C1TXIFT         equ	295	;# 
 16858   000128                     C1RXOVIF        equ	296	;# 
 16859   000128                     C1RXOVIFL       equ	296	;# 
 16860   000129                     C1RXOVIFH       equ	297	;# 
 16861   00012A                     C1RXOVIFU       equ	298	;# 
 16862   00012B                     C1RXOVIFT       equ	299	;# 
 16863   00012C                     C1TXATIF        equ	300	;# 
 16864   00012C                     C1TXATIFL       equ	300	;# 
 16865   00012D                     C1TXATIFH       equ	301	;# 
 16866   00012E                     C1TXATIFU       equ	302	;# 
 16867   00012F                     C1TXATIFT       equ	303	;# 
 16868   000130                     C1TXREQ         equ	304	;# 
 16869   000130                     C1TXREQL        equ	304	;# 
 16870   000131                     C1TXREQH        equ	305	;# 
 16871   000132                     C1TXREQU        equ	306	;# 
 16872   000133                     C1TXREQT        equ	307	;# 
 16873   000134                     C1TRECL         equ	308	;# 
 16874   000135                     C1TRECH         equ	309	;# 
 16875   000136                     C1TRECU         equ	310	;# 
 16876   000137                     C1TRECT         equ	311	;# 
 16877   000138                     C1BDIAG0L       equ	312	;# 
 16878   000139                     C1BDIAG0H       equ	313	;# 
 16879   00013C                     C1BDIAG1L       equ	316	;# 
 16880   00013D                     C1BDIAG1H       equ	317	;# 
 16881   00013E                     C1BDIAG1U       equ	318	;# 
 16882   00013F                     C1BDIAG1T       equ	319	;# 
 16883   000140                     C1TEFCONL       equ	320	;# 
 16884   000141                     C1TEFCONH       equ	321	;# 
 16885   000142                     C1TEFCONU       equ	322	;# 
 16886   000143                     C1TEFCONT       equ	323	;# 
 16887   000144                     C1TEFSTAL       equ	324	;# 
 16888   000145                     C1TEFSTAH       equ	325	;# 
 16889   000146                     C1TEFSTAU       equ	326	;# 
 16890   000147                     C1TEFSTAT       equ	327	;# 
 16891   000148                     C1TEFUA         equ	328	;# 
 16892   000148                     C1TEFUAL        equ	328	;# 
 16893   000149                     C1TEFUAH        equ	329	;# 
 16894   00014A                     C1TEFUAU        equ	330	;# 
 16895   00014B                     C1TEFUAT        equ	331	;# 
 16896   00014C                     C1FIFOBA        equ	332	;# 
 16897   00014C                     C1FIFOBAL       equ	332	;# 
 16898   00014D                     C1FIFOBAH       equ	333	;# 
 16899   00014E                     C1FIFOBAU       equ	334	;# 
 16900   00014F                     C1FIFOBAT       equ	335	;# 
 16901   000150                     C1TXQCONL       equ	336	;# 
 16902   000151                     C1TXQCONH       equ	337	;# 
 16903   000152                     C1TXQCONU       equ	338	;# 
 16904   000153                     C1TXQCONT       equ	339	;# 
 16905   000154                     C1TXQSTAL       equ	340	;# 
 16906   000155                     C1TXQSTAH       equ	341	;# 
 16907   000156                     C1TXQSTAU       equ	342	;# 
 16908   000157                     C1TXQSTAT       equ	343	;# 
 16909   000158                     C1TXQUA         equ	344	;# 
 16910   000158                     C1TXQUAL        equ	344	;# 
 16911   000159                     C1TXQUAH        equ	345	;# 
 16912   00015A                     C1TXQUAU        equ	346	;# 
 16913   00015B                     C1TXQUAT        equ	347	;# 
 16914   00015C                     C1FIFOCON1      equ	348	;# 
 16915   00015C                     C1FIFOCON1L     equ	348	;# 
 16916   00015D                     C1FIFOCON1H     equ	349	;# 
 16917   00015E                     C1FIFOCON1U     equ	350	;# 
 16918   00015F                     C1FIFOCON1T     equ	351	;# 
 16919   000160                     C1FIFOSTA1      equ	352	;# 
 16920   000160                     C1FIFOSTA1L     equ	352	;# 
 16921   000161                     C1FIFOSTA1H     equ	353	;# 
 16922   000162                     C1FIFOSTA1U     equ	354	;# 
 16923   000163                     C1FIFOSTA1T     equ	355	;# 
 16924   000164                     C1FIFOUA1       equ	356	;# 
 16925   000164                     C1FIFOUA1L      equ	356	;# 
 16926   000165                     C1FIFOUA1H      equ	357	;# 
 16927   000166                     C1FIFOUA1U      equ	358	;# 
 16928   000167                     C1FIFOUA1T      equ	359	;# 
 16929   000168                     C1FIFOCON2      equ	360	;# 
 16930   000168                     C1FIFOCON2L     equ	360	;# 
 16931   000169                     C1FIFOCON2H     equ	361	;# 
 16932   00016A                     C1FIFOCON2U     equ	362	;# 
 16933   00016B                     C1FIFOCON2T     equ	363	;# 
 16934   00016C                     C1FIFOSTA2      equ	364	;# 
 16935   00016C                     C1FIFOSTA2L     equ	364	;# 
 16936   00016D                     C1FIFOSTA2H     equ	365	;# 
 16937   00016E                     C1FIFOSTA2U     equ	366	;# 
 16938   00016F                     C1FIFOSTA2T     equ	367	;# 
 16939   000170                     C1FIFOUA2       equ	368	;# 
 16940   000170                     C1FIFOUA2L      equ	368	;# 
 16941   000171                     C1FIFOUA2H      equ	369	;# 
 16942   000172                     C1FIFOUA2U      equ	370	;# 
 16943   000173                     C1FIFOUA2T      equ	371	;# 
 16944   000174                     C1FIFOCON3      equ	372	;# 
 16945   000174                     C1FIFOCON3L     equ	372	;# 
 16946   000175                     C1FIFOCON3H     equ	373	;# 
 16947   000176                     C1FIFOCON3U     equ	374	;# 
 16948   000177                     C1FIFOCON3T     equ	375	;# 
 16949   000178                     C1FIFOSTA3      equ	376	;# 
 16950   000178                     C1FIFOSTA3L     equ	376	;# 
 16951   000179                     C1FIFOSTA3H     equ	377	;# 
 16952   00017A                     C1FIFOSTA3U     equ	378	;# 
 16953   00017B                     C1FIFOSTA3T     equ	379	;# 
 16954   00017C                     C1FIFOUA3       equ	380	;# 
 16955   00017C                     C1FIFOUA3L      equ	380	;# 
 16956   00017D                     C1FIFOUA3H      equ	381	;# 
 16957   00017E                     C1FIFOUA3U      equ	382	;# 
 16958   00017F                     C1FIFOUA3T      equ	383	;# 
 16959   000180                     C1FLTCON0L      equ	384	;# 
 16960   000181                     C1FLTCON0H      equ	385	;# 
 16961   000182                     C1FLTCON0U      equ	386	;# 
 16962   000183                     C1FLTCON0T      equ	387	;# 
 16963   000184                     C1FLTCON1L      equ	388	;# 
 16964   000185                     C1FLTCON1H      equ	389	;# 
 16965   000186                     C1FLTCON1U      equ	390	;# 
 16966   000187                     C1FLTCON1T      equ	391	;# 
 16967   000188                     C1FLTCON2L      equ	392	;# 
 16968   000189                     C1FLTCON2H      equ	393	;# 
 16969   00018A                     C1FLTCON2U      equ	394	;# 
 16970   00018B                     C1FLTCON2T      equ	395	;# 
 16971   00018C                     C1FLTOBJ0       equ	396	;# 
 16972   00018C                     C1FLTOBJ0L      equ	396	;# 
 16973   00018D                     C1FLTOBJ0H      equ	397	;# 
 16974   00018E                     C1FLTOBJ0U      equ	398	;# 
 16975   00018F                     C1FLTOBJ0T      equ	399	;# 
 16976   000190                     C1MASK0         equ	400	;# 
 16977   000190                     C1MASK0L        equ	400	;# 
 16978   000191                     C1MASK0H        equ	401	;# 
 16979   000192                     C1MASK0U        equ	402	;# 
 16980   000193                     C1MASK0T        equ	403	;# 
 16981   000194                     C1FLTOBJ1       equ	404	;# 
 16982   000194                     C1FLTOBJ1L      equ	404	;# 
 16983   000195                     C1FLTOBJ1H      equ	405	;# 
 16984   000196                     C1FLTOBJ1U      equ	406	;# 
 16985   000197                     C1FLTOBJ1T      equ	407	;# 
 16986   000198                     C1MASK1         equ	408	;# 
 16987   000198                     C1MASK1L        equ	408	;# 
 16988   000199                     C1MASK1H        equ	409	;# 
 16989   00019A                     C1MASK1U        equ	410	;# 
 16990   00019B                     C1MASK1T        equ	411	;# 
 16991   00019C                     C1FLTOBJ2       equ	412	;# 
 16992   00019C                     C1FLTOBJ2L      equ	412	;# 
 16993   00019D                     C1FLTOBJ2H      equ	413	;# 
 16994   00019E                     C1FLTOBJ2U      equ	414	;# 
 16995   00019F                     C1FLTOBJ2T      equ	415	;# 
 16996   0001A0                     C1MASK2         equ	416	;# 
 16997   0001A0                     C1MASK2L        equ	416	;# 
 16998   0001A1                     C1MASK2H        equ	417	;# 
 16999   0001A2                     C1MASK2U        equ	418	;# 
 17000   0001A3                     C1MASK2T        equ	419	;# 
 17001   0001A4                     C1FLTOBJ3       equ	420	;# 
 17002   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17003   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17004   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17005   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17006   0001A8                     C1MASK3         equ	424	;# 
 17007   0001A8                     C1MASK3L        equ	424	;# 
 17008   0001A9                     C1MASK3H        equ	425	;# 
 17009   0001AA                     C1MASK3U        equ	426	;# 
 17010   0001AB                     C1MASK3T        equ	427	;# 
 17011   0001AC                     C1FLTOBJ4       equ	428	;# 
 17012   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17013   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17014   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17015   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17016   0001B0                     C1MASK4         equ	432	;# 
 17017   0001B0                     C1MASK4L        equ	432	;# 
 17018   0001B1                     C1MASK4H        equ	433	;# 
 17019   0001B2                     C1MASK4U        equ	434	;# 
 17020   0001B3                     C1MASK4T        equ	435	;# 
 17021   0001B4                     C1FLTOBJ5       equ	436	;# 
 17022   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17023   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17024   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17025   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17026   0001B8                     C1MASK5         equ	440	;# 
 17027   0001B8                     C1MASK5L        equ	440	;# 
 17028   0001B9                     C1MASK5H        equ	441	;# 
 17029   0001BA                     C1MASK5U        equ	442	;# 
 17030   0001BB                     C1MASK5T        equ	443	;# 
 17031   0001BC                     C1FLTOBJ6       equ	444	;# 
 17032   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17033   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17034   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17035   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17036   0001C0                     C1MASK6         equ	448	;# 
 17037   0001C0                     C1MASK6L        equ	448	;# 
 17038   0001C1                     C1MASK6H        equ	449	;# 
 17039   0001C2                     C1MASK6U        equ	450	;# 
 17040   0001C3                     C1MASK6T        equ	451	;# 
 17041   0001C4                     C1FLTOBJ7       equ	452	;# 
 17042   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17043   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17044   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17045   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17046   0001C8                     C1MASK7         equ	456	;# 
 17047   0001C8                     C1MASK7L        equ	456	;# 
 17048   0001C9                     C1MASK7H        equ	457	;# 
 17049   0001CA                     C1MASK7U        equ	458	;# 
 17050   0001CB                     C1MASK7T        equ	459	;# 
 17051   0001CC                     C1FLTOBJ8       equ	460	;# 
 17052   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17053   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17054   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17055   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17056   0001D0                     C1MASK8         equ	464	;# 
 17057   0001D0                     C1MASK8L        equ	464	;# 
 17058   0001D1                     C1MASK8H        equ	465	;# 
 17059   0001D2                     C1MASK8U        equ	466	;# 
 17060   0001D3                     C1MASK8T        equ	467	;# 
 17061   0001D4                     C1FLTOBJ9       equ	468	;# 
 17062   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17063   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17064   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17065   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17066   0001D8                     C1MASK9         equ	472	;# 
 17067   0001D8                     C1MASK9L        equ	472	;# 
 17068   0001D9                     C1MASK9H        equ	473	;# 
 17069   0001DA                     C1MASK9U        equ	474	;# 
 17070   0001DB                     C1MASK9T        equ	475	;# 
 17071   0001DC                     C1FLTOBJ10      equ	476	;# 
 17072   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17073   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17074   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17075   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17076   0001E0                     C1MASK10        equ	480	;# 
 17077   0001E0                     C1MASK10L       equ	480	;# 
 17078   0001E1                     C1MASK10H       equ	481	;# 
 17079   0001E2                     C1MASK10U       equ	482	;# 
 17080   0001E3                     C1MASK10T       equ	483	;# 
 17081   0001E4                     C1FLTOBJ11      equ	484	;# 
 17082   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17083   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17084   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17085   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17086   0001E8                     C1MASK11        equ	488	;# 
 17087   0001E8                     C1MASK11L       equ	488	;# 
 17088   0001E9                     C1MASK11H       equ	489	;# 
 17089   0001EA                     C1MASK11U       equ	490	;# 
 17090   0001EB                     C1MASK11T       equ	491	;# 
 17091   000200                     PPSLOCK         equ	512	;# 
 17092   000201                     RA0PPS          equ	513	;# 
 17093   000202                     RA1PPS          equ	514	;# 
 17094   000203                     RA2PPS          equ	515	;# 
 17095   000204                     RA3PPS          equ	516	;# 
 17096   000205                     RA4PPS          equ	517	;# 
 17097   000206                     RA5PPS          equ	518	;# 
 17098   000207                     RA6PPS          equ	519	;# 
 17099   000208                     RA7PPS          equ	520	;# 
 17100   000209                     RB0PPS          equ	521	;# 
 17101   00020A                     RB1PPS          equ	522	;# 
 17102   00020B                     RB2PPS          equ	523	;# 
 17103   00020C                     RB3PPS          equ	524	;# 
 17104   00020D                     RB4PPS          equ	525	;# 
 17105   00020E                     RB5PPS          equ	526	;# 
 17106   00020F                     RB6PPS          equ	527	;# 
 17107   000210                     RB7PPS          equ	528	;# 
 17108   000211                     RC0PPS          equ	529	;# 
 17109   000212                     RC1PPS          equ	530	;# 
 17110   000213                     RC2PPS          equ	531	;# 
 17111   000214                     RC3PPS          equ	532	;# 
 17112   000215                     RC4PPS          equ	533	;# 
 17113   000216                     RC5PPS          equ	534	;# 
 17114   000217                     RC6PPS          equ	535	;# 
 17115   000218                     RC7PPS          equ	536	;# 
 17116   00023D                     CANRXPPS        equ	573	;# 
 17117   00023E                     INT0PPS         equ	574	;# 
 17118   00023F                     INT1PPS         equ	575	;# 
 17119   000240                     INT2PPS         equ	576	;# 
 17120   000241                     T0CKIPPS        equ	577	;# 
 17121   000242                     T1CKIPPS        equ	578	;# 
 17122   000243                     T1GPPS          equ	579	;# 
 17123   000244                     T3CKIPPS        equ	580	;# 
 17124   000245                     T3GPPS          equ	581	;# 
 17125   000246                     T5CKIPPS        equ	582	;# 
 17126   000247                     T5GPPS          equ	583	;# 
 17127   000248                     T2INPPS         equ	584	;# 
 17128   000249                     T4INPPS         equ	585	;# 
 17129   00024A                     T6INPPS         equ	586	;# 
 17130   00024B                     TUIN0PPS        equ	587	;# 
 17131   00024C                     TUIN1PPS        equ	588	;# 
 17132   00024F                     CCP1PPS         equ	591	;# 
 17133   000250                     CCP2PPS         equ	592	;# 
 17134   000251                     CCP3PPS         equ	593	;# 
 17135   000253                     PWM1ERSPPS      equ	595	;# 
 17136   000254                     PWM2ERSPPS      equ	596	;# 
 17137   000255                     PWM3ERSPPS      equ	597	;# 
 17138   000256                     PWM4ERSPPS      equ	598	;# 
 17139   000257                     PWMIN0PPS       equ	599	;# 
 17140   000258                     PWMIN1PPS       equ	600	;# 
 17141   000259                     SMT1WINPPS      equ	601	;# 
 17142   00025A                     SMT1SIGPPS      equ	602	;# 
 17143   00025B                     CWG1PPS         equ	603	;# 
 17144   00025B                     CWG1INPPS       equ	603	;# 
 17145   00025C                     CWG2PPS         equ	604	;# 
 17146   00025C                     CWG2INPPS       equ	604	;# 
 17147   00025D                     CWG3PPS         equ	605	;# 
 17148   00025D                     CWG3INPPS       equ	605	;# 
 17149   00025E                     MD1CARLPPS      equ	606	;# 
 17150   00025E                     MDCARLPPS       equ	606	;# 
 17151   00025F                     MD1CARHPPS      equ	607	;# 
 17152   00025F                     MDCARHPPS       equ	607	;# 
 17153   000260                     MD1SRCPPS       equ	608	;# 
 17154   000260                     MDSRCPPS        equ	608	;# 
 17155   000261                     CLCIN0PPS       equ	609	;# 
 17156   000262                     CLCIN1PPS       equ	610	;# 
 17157   000263                     CLCIN2PPS       equ	611	;# 
 17158   000264                     CLCIN3PPS       equ	612	;# 
 17159   000265                     CLCIN4PPS       equ	613	;# 
 17160   000266                     CLCIN5PPS       equ	614	;# 
 17161   000267                     CLCIN6PPS       equ	615	;# 
 17162   000268                     CLCIN7PPS       equ	616	;# 
 17163   000269                     ADACTPPS        equ	617	;# 
 17164   00026A                     SPI1SCKPPS      equ	618	;# 
 17165   00026B                     SPI1SDIPPS      equ	619	;# 
 17166   00026C                     SPI1SSPPS       equ	620	;# 
 17167   00026D                     SPI2SCKPPS      equ	621	;# 
 17168   00026E                     SPI2SDIPPS      equ	622	;# 
 17169   00026F                     SPI2SSPPS       equ	623	;# 
 17170   000270                     I2C1SDAPPS      equ	624	;# 
 17171   000271                     I2C1SCLPPS      equ	625	;# 
 17172   000272                     U1RXPPS         equ	626	;# 
 17173   000273                     U1CTSPPS        equ	627	;# 
 17174   000274                     U2RXPPS         equ	628	;# 
 17175   000275                     U2CTSPPS        equ	629	;# 
 17176   000276                     U3RXPPS         equ	630	;# 
 17177   000277                     U3CTSPPS        equ	631	;# 
 17178   000278                     U4RXPPS         equ	632	;# 
 17179   000279                     U4CTSPPS        equ	633	;# 
 17180   00027A                     U5RXPPS         equ	634	;# 
 17181   00027B                     U5CTSPPS        equ	635	;# 
 17182   000286                     RC4I2C          equ	646	;# 
 17183   000287                     RC3I2C          equ	647	;# 
 17184   000288                     RB2I2C          equ	648	;# 
 17185   000289                     RB1I2C          equ	649	;# 
 17186   00028A                     I2C1RXB         equ	650	;# 
 17187   00028B                     I2C1TXB         equ	651	;# 
 17188   00028C                     I2C1CNTL        equ	652	;# 
 17189   00028D                     I2C1CNTH        equ	653	;# 
 17190   00028E                     I2C1ADB0        equ	654	;# 
 17191   00028F                     I2C1ADB1        equ	655	;# 
 17192   000290                     I2C1ADR0        equ	656	;# 
 17193   000291                     I2C1ADR1        equ	657	;# 
 17194   000292                     I2C1ADR2        equ	658	;# 
 17195   000293                     I2C1ADR3        equ	659	;# 
 17196   000294                     I2C1CON0        equ	660	;# 
 17197   000295                     I2C1CON1        equ	661	;# 
 17198   000296                     I2C1CON2        equ	662	;# 
 17199   000297                     I2C1ERR         equ	663	;# 
 17200   000298                     I2C1STAT0       equ	664	;# 
 17201   000299                     I2C1STAT1       equ	665	;# 
 17202   00029A                     I2C1PIR         equ	666	;# 
 17203   00029B                     I2C1PIE         equ	667	;# 
 17204   00029C                     I2C1BTO         equ	668	;# 
 17205   00029D                     I2C1BAUD        equ	669	;# 
 17206   00029E                     I2C1CLK         equ	670	;# 
 17207   00029F                     I2C1BTOC        equ	671	;# 
 17208   0002A1                     U1RXB           equ	673	;# 
 17209   0002A1                     U1RXBL          equ	673	;# 
 17210   0002A2                     U1RXCHK         equ	674	;# 
 17211   0002A3                     U1TXB           equ	675	;# 
 17212   0002A3                     U1TXBL          equ	675	;# 
 17213   0002A4                     U1TXCHK         equ	676	;# 
 17214   0002A5                     U1P1            equ	677	;# 
 17215   0002A5                     U1P1L           equ	677	;# 
 17216   0002A6                     U1P1H           equ	678	;# 
 17217   0002A7                     U1P2            equ	679	;# 
 17218   0002A7                     U1P2L           equ	679	;# 
 17219   0002A8                     U1P2H           equ	680	;# 
 17220   0002A9                     U1P3            equ	681	;# 
 17221   0002A9                     U1P3L           equ	681	;# 
 17222   0002AA                     U1P3H           equ	682	;# 
 17223   0002AB                     U1CON0          equ	683	;# 
 17224   0002AC                     U1CON1          equ	684	;# 
 17225   0002AD                     U1CON2          equ	685	;# 
 17226   0002AE                     U1BRG           equ	686	;# 
 17227   0002AE                     U1BRGL          equ	686	;# 
 17228   0002AF                     U1BRGH          equ	687	;# 
 17229   0002B0                     U1FIFO          equ	688	;# 
 17230   0002B1                     U1UIR           equ	689	;# 
 17231   0002B2                     U1ERRIR         equ	690	;# 
 17232   0002B3                     U1ERRIE         equ	691	;# 
 17233   0002B4                     U2RXB           equ	692	;# 
 17234   0002B4                     U2RXBL          equ	692	;# 
 17235   0002B5                     U2RXCHK         equ	693	;# 
 17236   0002B6                     U2TXB           equ	694	;# 
 17237   0002B6                     U2TXBL          equ	694	;# 
 17238   0002B7                     U2TXCHK         equ	695	;# 
 17239   0002B8                     U2P1            equ	696	;# 
 17240   0002B8                     U2P1L           equ	696	;# 
 17241   0002B9                     U2P1H           equ	697	;# 
 17242   0002BA                     U2P2            equ	698	;# 
 17243   0002BA                     U2P2L           equ	698	;# 
 17244   0002BB                     U2P2H           equ	699	;# 
 17245   0002BC                     U2P3            equ	700	;# 
 17246   0002BC                     U2P3L           equ	700	;# 
 17247   0002BD                     U2P3H           equ	701	;# 
 17248   0002BE                     U2CON0          equ	702	;# 
 17249   0002BF                     U2CON1          equ	703	;# 
 17250   0002C0                     U2CON2          equ	704	;# 
 17251   0002C1                     U2BRG           equ	705	;# 
 17252   0002C1                     U2BRGL          equ	705	;# 
 17253   0002C2                     U2BRGH          equ	706	;# 
 17254   0002C3                     U2FIFO          equ	707	;# 
 17255   0002C4                     U2UIR           equ	708	;# 
 17256   0002C5                     U2ERRIR         equ	709	;# 
 17257   0002C6                     U2ERRIE         equ	710	;# 
 17258   0002C7                     U3RXB           equ	711	;# 
 17259   0002C7                     U3RXBL          equ	711	;# 
 17260   0002C9                     U3TXB           equ	713	;# 
 17261   0002C9                     U3TXBL          equ	713	;# 
 17262   0002CB                     U3P1            equ	715	;# 
 17263   0002CB                     U3P1L           equ	715	;# 
 17264   0002CD                     U3P2            equ	717	;# 
 17265   0002CD                     U3P2L           equ	717	;# 
 17266   0002CF                     U3P3            equ	719	;# 
 17267   0002CF                     U3P3L           equ	719	;# 
 17268   0002D1                     U3CON0          equ	721	;# 
 17269   0002D2                     U3CON1          equ	722	;# 
 17270   0002D3                     U3CON2          equ	723	;# 
 17271   0002D4                     U3BRG           equ	724	;# 
 17272   0002D4                     U3BRGL          equ	724	;# 
 17273   0002D5                     U3BRGH          equ	725	;# 
 17274   0002D6                     U3FIFO          equ	726	;# 
 17275   0002D7                     U3UIR           equ	727	;# 
 17276   0002D8                     U3ERRIR         equ	728	;# 
 17277   0002D9                     U3ERRIE         equ	729	;# 
 17278   0002DA                     U4RXB           equ	730	;# 
 17279   0002DA                     U4RXBL          equ	730	;# 
 17280   0002DC                     U4TXB           equ	732	;# 
 17281   0002DC                     U4TXBL          equ	732	;# 
 17282   0002DE                     U4P1            equ	734	;# 
 17283   0002DE                     U4P1L           equ	734	;# 
 17284   0002E0                     U4P2            equ	736	;# 
 17285   0002E0                     U4P2L           equ	736	;# 
 17286   0002E2                     U4P3            equ	738	;# 
 17287   0002E2                     U4P3L           equ	738	;# 
 17288   0002E4                     U4CON0          equ	740	;# 
 17289   0002E5                     U4CON1          equ	741	;# 
 17290   0002E6                     U4CON2          equ	742	;# 
 17291   0002E7                     U4BRG           equ	743	;# 
 17292   0002E7                     U4BRGL          equ	743	;# 
 17293   0002E8                     U4BRGH          equ	744	;# 
 17294   0002E9                     U4FIFO          equ	745	;# 
 17295   0002EA                     U4UIR           equ	746	;# 
 17296   0002EB                     U4ERRIR         equ	747	;# 
 17297   0002EC                     U4ERRIE         equ	748	;# 
 17298   0002ED                     U5RXB           equ	749	;# 
 17299   0002ED                     U5RXBL          equ	749	;# 
 17300   0002EF                     U5TXB           equ	751	;# 
 17301   0002EF                     U5TXBL          equ	751	;# 
 17302   0002F1                     U5P1            equ	753	;# 
 17303   0002F1                     U5P1L           equ	753	;# 
 17304   0002F3                     U5P2            equ	755	;# 
 17305   0002F3                     U5P2L           equ	755	;# 
 17306   0002F5                     U5P3            equ	757	;# 
 17307   0002F5                     U5P3L           equ	757	;# 
 17308   0002F7                     U5CON0          equ	759	;# 
 17309   0002F8                     U5CON1          equ	760	;# 
 17310   0002F9                     U5CON2          equ	761	;# 
 17311   0002FA                     U5BRG           equ	762	;# 
 17312   0002FA                     U5BRGL          equ	762	;# 
 17313   0002FB                     U5BRGH          equ	763	;# 
 17314   0002FC                     U5FIFO          equ	764	;# 
 17315   0002FD                     U5UIR           equ	765	;# 
 17316   0002FE                     U5ERRIR         equ	766	;# 
 17317   0002FF                     U5ERRIE         equ	767	;# 
 17318   000300                     SMT1TMR         equ	768	;# 
 17319   000300                     SMT1TMRL        equ	768	;# 
 17320   000301                     SMT1TMRH        equ	769	;# 
 17321   000302                     SMT1TMRU        equ	770	;# 
 17322   000303                     SMT1CPR         equ	771	;# 
 17323   000303                     SMT1CPRL        equ	771	;# 
 17324   000304                     SMT1CPRH        equ	772	;# 
 17325   000305                     SMT1CPRU        equ	773	;# 
 17326   000306                     SMT1CPW         equ	774	;# 
 17327   000306                     SMT1CPWL        equ	774	;# 
 17328   000307                     SMT1CPWH        equ	775	;# 
 17329   000308                     SMT1CPWU        equ	776	;# 
 17330   000309                     SMT1PR          equ	777	;# 
 17331   000309                     SMT1PRL         equ	777	;# 
 17332   00030A                     SMT1PRH         equ	778	;# 
 17333   00030B                     SMT1PRU         equ	779	;# 
 17334   00030C                     SMT1CON0        equ	780	;# 
 17335   00030D                     SMT1CON1        equ	781	;# 
 17336   00030E                     SMT1STAT        equ	782	;# 
 17337   00030F                     SMT1CLK         equ	783	;# 
 17338   000310                     SMT1SIG         equ	784	;# 
 17339   000311                     SMT1WIN         equ	785	;# 
 17340   000318                     TMR0L           equ	792	;# 
 17341   000318                     TMR0            equ	792	;# 
 17342   000319                     TMR0H           equ	793	;# 
 17343   000319                     PR0             equ	793	;# 
 17344   00031A                     T0CON0          equ	794	;# 
 17345   00031B                     T0CON1          equ	795	;# 
 17346   00031C                     TMR1            equ	796	;# 
 17347   00031C                     TMR1L           equ	796	;# 
 17348   00031D                     TMR1H           equ	797	;# 
 17349   00031E                     T1CON           equ	798	;# 
 17350   00031E                     TMR1CON         equ	798	;# 
 17351   00031F                     T1GCON          equ	799	;# 
 17352   00031F                     TMR1GCON        equ	799	;# 
 17353   000320                     T1GATE          equ	800	;# 
 17354   000320                     TMR1GATE        equ	800	;# 
 17355   000321                     T1CLK           equ	801	;# 
 17356   000321                     TMR1CLK         equ	801	;# 
 17357   000321                     PR1             equ	801	;# 
 17358   000322                     T2TMR           equ	802	;# 
 17359   000322                     TMR2            equ	802	;# 
 17360   000323                     T2PR            equ	803	;# 
 17361   000323                     PR2             equ	803	;# 
 17362   000324                     T2CON           equ	804	;# 
 17363   000325                     T2HLT           equ	805	;# 
 17364   000326                     T2CLKCON        equ	806	;# 
 17365   000326                     T2CLK           equ	806	;# 
 17366   000327                     T2RST           equ	807	;# 
 17367   000328                     TMR3            equ	808	;# 
 17368   000328                     TMR3L           equ	808	;# 
 17369   000329                     TMR3H           equ	809	;# 
 17370   00032A                     T3CON           equ	810	;# 
 17371   00032A                     TMR3CON         equ	810	;# 
 17372   00032B                     T3GCON          equ	811	;# 
 17373   00032B                     TMR3GCON        equ	811	;# 
 17374   00032C                     T3GATE          equ	812	;# 
 17375   00032C                     TMR3GATE        equ	812	;# 
 17376   00032D                     T3CLK           equ	813	;# 
 17377   00032D                     TMR3CLK         equ	813	;# 
 17378   00032D                     PR3             equ	813	;# 
 17379   00032E                     T4TMR           equ	814	;# 
 17380   00032E                     TMR4            equ	814	;# 
 17381   00032F                     T4PR            equ	815	;# 
 17382   00032F                     PR4             equ	815	;# 
 17383   000330                     T4CON           equ	816	;# 
 17384   000331                     T4HLT           equ	817	;# 
 17385   000332                     T4CLKCON        equ	818	;# 
 17386   000332                     T4CLK           equ	818	;# 
 17387   000333                     T4RST           equ	819	;# 
 17388   000334                     TMR5            equ	820	;# 
 17389   000334                     TMR5L           equ	820	;# 
 17390   000335                     TMR5H           equ	821	;# 
 17391   000336                     T5CON           equ	822	;# 
 17392   000336                     TMR5CON         equ	822	;# 
 17393   000337                     T5GCON          equ	823	;# 
 17394   000337                     TMR5GCON        equ	823	;# 
 17395   000338                     T5GATE          equ	824	;# 
 17396   000338                     TMR5GATE        equ	824	;# 
 17397   000339                     T5CLK           equ	825	;# 
 17398   000339                     TMR5CLK         equ	825	;# 
 17399   000339                     PR5             equ	825	;# 
 17400   00033A                     T6TMR           equ	826	;# 
 17401   00033A                     TMR6            equ	826	;# 
 17402   00033B                     T6PR            equ	827	;# 
 17403   00033B                     PR6             equ	827	;# 
 17404   00033C                     T6CON           equ	828	;# 
 17405   00033D                     T6HLT           equ	829	;# 
 17406   00033E                     T6CLKCON        equ	830	;# 
 17407   00033E                     T6CLK           equ	830	;# 
 17408   00033F                     T6RST           equ	831	;# 
 17409   000340                     CCPR1           equ	832	;# 
 17410   000340                     CCPR1L          equ	832	;# 
 17411   000341                     CCPR1H          equ	833	;# 
 17412   000342                     CCP1CON         equ	834	;# 
 17413   000343                     CCP1CAP         equ	835	;# 
 17414   000344                     CCPR2           equ	836	;# 
 17415   000344                     CCPR2L          equ	836	;# 
 17416   000345                     CCPR2H          equ	837	;# 
 17417   000346                     CCP2CON         equ	838	;# 
 17418   000347                     CCP2CAP         equ	839	;# 
 17419   000348                     CCPR3           equ	840	;# 
 17420   000348                     CCPR3L          equ	840	;# 
 17421   000349                     CCPR3H          equ	841	;# 
 17422   00034A                     CCP3CON         equ	842	;# 
 17423   00034B                     CCP3CAP         equ	843	;# 
 17424   00034C                     CCPTMRS0        equ	844	;# 
 17425   00034F                     CRCDATA         equ	847	;# 
 17426   00034F                     CRCDATAL        equ	847	;# 
 17427   000350                     CRCDATAH        equ	848	;# 
 17428   000351                     CRCDATAU        equ	849	;# 
 17429   000352                     CRCDATAT        equ	850	;# 
 17430   000353                     CRCOUT          equ	851	;# 
 17431   000353                     CRCSHFT         equ	851	;# 
 17432   000353                     CRCXOR          equ	851	;# 
 17433   000353                     CRCOUTL         equ	851	;# 
 17434   000353                     CRCSHFTL        equ	851	;# 
 17435   000353                     CRCSHIFTL       equ	851	;# 
 17436   000353                     CRCXORL         equ	851	;# 
 17437   000354                     CRCOUTH         equ	852	;# 
 17438   000354                     CRCSHFTH        equ	852	;# 
 17439   000354                     CRCSHIFTH       equ	852	;# 
 17440   000354                     CRCXORH         equ	852	;# 
 17441   000355                     CRCOUTU         equ	853	;# 
 17442   000355                     CRCSHFTU        equ	853	;# 
 17443   000355                     CRCSHIFTU       equ	853	;# 
 17444   000355                     CRCXORU         equ	853	;# 
 17445   000356                     CRCOUTT         equ	854	;# 
 17446   000356                     CRCSHFTT        equ	854	;# 
 17447   000356                     CRCSHIFTT       equ	854	;# 
 17448   000356                     CRCXORT         equ	854	;# 
 17449   000357                     CRCCON0         equ	855	;# 
 17450   000358                     CRCCON1         equ	856	;# 
 17451   000359                     CRCCON2         equ	857	;# 
 17452   00035A                     SCANLADR        equ	858	;# 
 17453   00035A                     SCANLADRL       equ	858	;# 
 17454   00035B                     SCANLADRH       equ	859	;# 
 17455   00035C                     SCANLADRU       equ	860	;# 
 17456   00035D                     SCANHADR        equ	861	;# 
 17457   00035D                     SCANHADRL       equ	861	;# 
 17458   00035E                     SCANHADRH       equ	862	;# 
 17459   00035F                     SCANHADRU       equ	863	;# 
 17460   000360                     SCANCON0        equ	864	;# 
 17461   000361                     SCANTRIG        equ	865	;# 
 17462   000362                     IPR0            equ	866	;# 
 17463   000363                     IPR1            equ	867	;# 
 17464   000364                     IPR2            equ	868	;# 
 17465   000365                     IPR3            equ	869	;# 
 17466   000366                     IPR4            equ	870	;# 
 17467   000367                     IPR5            equ	871	;# 
 17468   000368                     IPR6            equ	872	;# 
 17469   000369                     IPR7            equ	873	;# 
 17470   00036A                     IPR8            equ	874	;# 
 17471   00036B                     IPR9            equ	875	;# 
 17472   00036C                     IPR10           equ	876	;# 
 17473   00036D                     IPR11           equ	877	;# 
 17474   00036E                     IPR12           equ	878	;# 
 17475   00036F                     IPR13           equ	879	;# 
 17476   000370                     IPR14           equ	880	;# 
 17477   000371                     IPR15           equ	881	;# 
 17478   000373                     STATUS_CSHAD    equ	883	;# 
 17479   000374                     WREG_CSHAD      equ	884	;# 
 17480   000375                     BSR_CSHAD       equ	885	;# 
 17481   000376                     SHADCON         equ	886	;# 
 17482   000377                     STATUS_SHAD     equ	887	;# 
 17483   000378                     WREG_SHAD       equ	888	;# 
 17484   000379                     BSR_SHAD        equ	889	;# 
 17485   00037A                     PCLATH_SHAD     equ	890	;# 
 17486   00037B                     PCLATU_SHAD     equ	891	;# 
 17487   00037C                     FSR0SH          equ	892	;# 
 17488   00037C                     FSR0L_SHAD      equ	892	;# 
 17489   00037D                     FSR0H_SHAD      equ	893	;# 
 17490   00037E                     FSR1SH          equ	894	;# 
 17491   00037E                     FSR1L_SHAD      equ	894	;# 
 17492   00037F                     FSR1H_SHAD      equ	895	;# 
 17493   000380                     FSR2SH          equ	896	;# 
 17494   000380                     FSR2L_SHAD      equ	896	;# 
 17495   000381                     FSR2H_SHAD      equ	897	;# 
 17496   000382                     PRODSH          equ	898	;# 
 17497   000382                     PRODL_SHAD      equ	898	;# 
 17498   000383                     PRODH_SHAD      equ	899	;# 
 17499   000387                     TU16ACON0       equ	903	;# 
 17500   000388                     TU16ACON1       equ	904	;# 
 17501   000389                     TU16AHLT        equ	905	;# 
 17502   00038A                     TU16APS         equ	906	;# 
 17503   00038B                     TU16ATMR        equ	907	;# 
 17504   00038B                     TU16ACR         equ	907	;# 
 17505   00038B                     TU16ATMRL       equ	907	;# 
 17506   00038B                     TU16ACRL        equ	907	;# 
 17507   00038C                     TU16ATMRH       equ	908	;# 
 17508   00038C                     TU16ACRH        equ	908	;# 
 17509   00038D                     TU16APR         equ	909	;# 
 17510   00038D                     TU16APRL        equ	909	;# 
 17511   00038E                     TU16APRH        equ	910	;# 
 17512   00038F                     TU16ACLK        equ	911	;# 
 17513   000390                     TU16AERS        equ	912	;# 
 17514   000393                     TU16BCON0       equ	915	;# 
 17515   000394                     TU16BCON1       equ	916	;# 
 17516   000395                     TU16BHLT        equ	917	;# 
 17517   000396                     TU16BPS         equ	918	;# 
 17518   000397                     TU16BTMR        equ	919	;# 
 17519   000397                     TU16BCR         equ	919	;# 
 17520   000397                     TU16BTMRL       equ	919	;# 
 17521   000397                     TU16BCRL        equ	919	;# 
 17522   000398                     TU16BTMRH       equ	920	;# 
 17523   000398                     TU16BCRH        equ	920	;# 
 17524   000399                     TU16BPR         equ	921	;# 
 17525   000399                     TU16BPRL        equ	921	;# 
 17526   00039A                     TU16BPRH        equ	922	;# 
 17527   00039B                     TU16BCLK        equ	923	;# 
 17528   00039C                     TU16BERS        equ	924	;# 
 17529   0003BB                     TUCHAIN         equ	955	;# 
 17530   0003BC                     CWG1CLK         equ	956	;# 
 17531   0003BC                     CWG1CLKCON      equ	956	;# 
 17532   0003BD                     CWG1ISM         equ	957	;# 
 17533   0003BE                     CWG1DBR         equ	958	;# 
 17534   0003BF                     CWG1DBF         equ	959	;# 
 17535   0003C0                     CWG1CON0        equ	960	;# 
 17536   0003C1                     CWG1CON1        equ	961	;# 
 17537   0003C2                     CWG1AS0         equ	962	;# 
 17538   0003C3                     CWG1AS1         equ	963	;# 
 17539   0003C4                     CWG1STR         equ	964	;# 
 17540   0003C5                     CWG2CLK         equ	965	;# 
 17541   0003C5                     CWG2CLKCON      equ	965	;# 
 17542   0003C6                     CWG2ISM         equ	966	;# 
 17543   0003C7                     CWG2DBR         equ	967	;# 
 17544   0003C8                     CWG2DBF         equ	968	;# 
 17545   0003C9                     CWG2CON0        equ	969	;# 
 17546   0003CA                     CWG2CON1        equ	970	;# 
 17547   0003CB                     CWG2AS0         equ	971	;# 
 17548   0003CC                     CWG2AS1         equ	972	;# 
 17549   0003CD                     CWG2STR         equ	973	;# 
 17550   0003CE                     CWG3CLK         equ	974	;# 
 17551   0003CE                     CWG3CLKCON      equ	974	;# 
 17552   0003CF                     CWG3ISM         equ	975	;# 
 17553   0003D0                     CWG3DBR         equ	976	;# 
 17554   0003D1                     CWG3DBF         equ	977	;# 
 17555   0003D2                     CWG3CON0        equ	978	;# 
 17556   0003D3                     CWG3CON1        equ	979	;# 
 17557   0003D4                     CWG3AS0         equ	980	;# 
 17558   0003D5                     CWG3AS1         equ	981	;# 
 17559   0003D6                     CWG3STR         equ	982	;# 
 17560   0003D7                     FVRCON          equ	983	;# 
 17561   0003D8                     ADCPCON         equ	984	;# 
 17562   0003D8                     ADCP            equ	984	;# 
 17563   0003D9                     ADLTH           equ	985	;# 
 17564   0003D9                     ADLTHL          equ	985	;# 
 17565   0003DA                     ADLTHH          equ	986	;# 
 17566   0003DB                     ADUTH           equ	987	;# 
 17567   0003DB                     ADUTHL          equ	987	;# 
 17568   0003DC                     ADUTHH          equ	988	;# 
 17569   0003DD                     ADERR           equ	989	;# 
 17570   0003DD                     ADERRL          equ	989	;# 
 17571   0003DE                     ADERRH          equ	990	;# 
 17572   0003DF                     ADSTPT          equ	991	;# 
 17573   0003DF                     ADSTPTL         equ	991	;# 
 17574   0003E0                     ADSTPTH         equ	992	;# 
 17575   0003E1                     ADFLTR          equ	993	;# 
 17576   0003E1                     ADFLTRL         equ	993	;# 
 17577   0003E2                     ADFLTRH         equ	994	;# 
 17578   0003E3                     ADACC           equ	995	;# 
 17579   0003E3                     ADACCL          equ	995	;# 
 17580   0003E4                     ADACCH          equ	996	;# 
 17581   0003E5                     ADACCU          equ	997	;# 
 17582   0003E6                     ADCNT           equ	998	;# 
 17583   0003E7                     ADRPT           equ	999	;# 
 17584   0003E8                     ADPREV          equ	1000	;# 
 17585   0003E8                     ADPREVL         equ	1000	;# 
 17586   0003E9                     ADPREVH         equ	1001	;# 
 17587   0003EA                     ADRES           equ	1002	;# 
 17588   0003EA                     ADRESL          equ	1002	;# 
 17589   0003EB                     ADRESH          equ	1003	;# 
 17590   0003EC                     ADPCH           equ	1004	;# 
 17591   0003EE                     ADACQ           equ	1006	;# 
 17592   0003EE                     ADACQL          equ	1006	;# 
 17593   0003EF                     ADACQH          equ	1007	;# 
 17594   0003F0                     ADCAP           equ	1008	;# 
 17595   0003F1                     ADPRE           equ	1009	;# 
 17596   0003F1                     ADPREL          equ	1009	;# 
 17597   0003F2                     ADPREH          equ	1010	;# 
 17598   0003F3                     ADCON0          equ	1011	;# 
 17599   0003F4                     ADCON1          equ	1012	;# 
 17600   0003F5                     ADCON2          equ	1013	;# 
 17601   0003F6                     ADCON3          equ	1014	;# 
 17602   0003F7                     ADSTAT          equ	1015	;# 
 17603   0003F8                     ADREF           equ	1016	;# 
 17604   0003F9                     ADACT           equ	1017	;# 
 17605   0003FA                     ADCLK           equ	1018	;# 
 17606   0003FB                     ADCTX           equ	1019	;# 
 17607   0003FC                     ADCSEL1         equ	1020	;# 
 17608   0003FD                     ADCSEL2         equ	1021	;# 
 17609   0003FE                     ADCSEL3         equ	1022	;# 
 17610   0003FF                     ADCSEL4         equ	1023	;# 
 17611   000400                     ANSELA          equ	1024	;# 
 17612   000401                     WPUA            equ	1025	;# 
 17613   000402                     ODCONA          equ	1026	;# 
 17614   000403                     SLRCONA         equ	1027	;# 
 17615   000404                     INLVLA          equ	1028	;# 
 17616   000405                     IOCAP           equ	1029	;# 
 17617   000406                     IOCAN           equ	1030	;# 
 17618   000407                     IOCAF           equ	1031	;# 
 17619   000408                     ANSELB          equ	1032	;# 
 17620   000409                     WPUB            equ	1033	;# 
 17621   00040A                     ODCONB          equ	1034	;# 
 17622   00040B                     SLRCONB         equ	1035	;# 
 17623   00040C                     INLVLB          equ	1036	;# 
 17624   00040D                     IOCBP           equ	1037	;# 
 17625   00040E                     IOCBN           equ	1038	;# 
 17626   00040F                     IOCBF           equ	1039	;# 
 17627   000410                     ANSELC          equ	1040	;# 
 17628   000411                     WPUC            equ	1041	;# 
 17629   000412                     ODCONC          equ	1042	;# 
 17630   000413                     SLRCONC         equ	1043	;# 
 17631   000414                     INLVLC          equ	1044	;# 
 17632   000415                     IOCCP           equ	1045	;# 
 17633   000416                     IOCCN           equ	1046	;# 
 17634   000417                     IOCCF           equ	1047	;# 
 17635   000421                     WPUE            equ	1057	;# 
 17636   000424                     INLVLE          equ	1060	;# 
 17637   000425                     IOCEP           equ	1061	;# 
 17638   000426                     IOCEN           equ	1062	;# 
 17639   000427                     IOCEF           equ	1063	;# 
 17640   000440                     NCO1ACC         equ	1088	;# 
 17641   000440                     NCO1ACCL        equ	1088	;# 
 17642   000441                     NCO1ACCH        equ	1089	;# 
 17643   000442                     NCO1ACCU        equ	1090	;# 
 17644   000443                     NCO1INC         equ	1091	;# 
 17645   000443                     NCO1INCL        equ	1091	;# 
 17646   000444                     NCO1INCH        equ	1092	;# 
 17647   000445                     NCO1INCU        equ	1093	;# 
 17648   000446                     NCO1CON         equ	1094	;# 
 17649   000447                     NCO1CLK         equ	1095	;# 
 17650   000448                     NCO2ACC         equ	1096	;# 
 17651   000448                     NCO2ACCL        equ	1096	;# 
 17652   000449                     NCO2ACCH        equ	1097	;# 
 17653   00044A                     NCO2ACCU        equ	1098	;# 
 17654   00044B                     NCO2INC         equ	1099	;# 
 17655   00044B                     NCO2INCL        equ	1099	;# 
 17656   00044C                     NCO2INCH        equ	1100	;# 
 17657   00044D                     NCO2INCU        equ	1101	;# 
 17658   00044E                     NCO2CON         equ	1102	;# 
 17659   00044F                     NCO2CLK         equ	1103	;# 
 17660   000450                     NCO3ACC         equ	1104	;# 
 17661   000450                     NCO3ACCL        equ	1104	;# 
 17662   000451                     NCO3ACCH        equ	1105	;# 
 17663   000452                     NCO3ACCU        equ	1106	;# 
 17664   000453                     NCO3INC         equ	1107	;# 
 17665   000453                     NCO3INCL        equ	1107	;# 
 17666   000454                     NCO3INCH        equ	1108	;# 
 17667   000455                     NCO3INCU        equ	1109	;# 
 17668   000456                     NCO3CON         equ	1110	;# 
 17669   000457                     NCO3CLK         equ	1111	;# 
 17670   000458                     FSCMCON         equ	1112	;# 
 17671   000459                     IVTLOCK         equ	1113	;# 
 17672   00045A                     IVTAD           equ	1114	;# 
 17673   00045A                     IVTADL          equ	1114	;# 
 17674   00045B                     IVTADH          equ	1115	;# 
 17675   00045C                     IVTADU          equ	1116	;# 
 17676   00045D                     IVTBASE         equ	1117	;# 
 17677   00045D                     IVTBASEL        equ	1117	;# 
 17678   00045E                     IVTBASEH        equ	1118	;# 
 17679   00045F                     IVTBASEU        equ	1119	;# 
 17680   000460                     PWM1ERS         equ	1120	;# 
 17681   000461                     PWM1CLK         equ	1121	;# 
 17682   000462                     PWM1LDS         equ	1122	;# 
 17683   000463                     PWM1PR          equ	1123	;# 
 17684   000463                     PWM1PRL         equ	1123	;# 
 17685   000464                     PWM1PRH         equ	1124	;# 
 17686   000465                     PWM1CPRE        equ	1125	;# 
 17687   000466                     PWM1PIPOS       equ	1126	;# 
 17688   000467                     PWM1GIR         equ	1127	;# 
 17689   000468                     PWM1GIE         equ	1128	;# 
 17690   000469                     PWM1CON         equ	1129	;# 
 17691   00046A                     PWM1S1CFG       equ	1130	;# 
 17692   00046B                     PWM1S1P1        equ	1131	;# 
 17693   00046B                     PWM1S1P1L       equ	1131	;# 
 17694   00046C                     PWM1S1P1H       equ	1132	;# 
 17695   00046D                     PWM1S1P2        equ	1133	;# 
 17696   00046D                     PWM1S1P2L       equ	1133	;# 
 17697   00046E                     PWM1S1P2H       equ	1134	;# 
 17698   00046F                     PWM2ERS         equ	1135	;# 
 17699   000470                     PWM2CLK         equ	1136	;# 
 17700   000471                     PWM2LDS         equ	1137	;# 
 17701   000472                     PWM2PR          equ	1138	;# 
 17702   000472                     PWM2PRL         equ	1138	;# 
 17703   000473                     PWM2PRH         equ	1139	;# 
 17704   000474                     PWM2CPRE        equ	1140	;# 
 17705   000475                     PWM2PIPOS       equ	1141	;# 
 17706   000476                     PWM2GIR         equ	1142	;# 
 17707   000477                     PWM2GIE         equ	1143	;# 
 17708   000478                     PWM2CON         equ	1144	;# 
 17709   000479                     PWM2S1CFG       equ	1145	;# 
 17710   00047A                     PWM2S1P1        equ	1146	;# 
 17711   00047A                     PWM2S1P1L       equ	1146	;# 
 17712   00047B                     PWM2S1P1H       equ	1147	;# 
 17713   00047C                     PWM2S1P2        equ	1148	;# 
 17714   00047C                     PWM2S1P2L       equ	1148	;# 
 17715   00047D                     PWM2S1P2H       equ	1149	;# 
 17716   00047E                     PWM3ERS         equ	1150	;# 
 17717   00047F                     PWM3CLK         equ	1151	;# 
 17718   000480                     PWM3LDS         equ	1152	;# 
 17719   000481                     PWM3PR          equ	1153	;# 
 17720   000481                     PWM3PRL         equ	1153	;# 
 17721   000482                     PWM3PRH         equ	1154	;# 
 17722   000483                     PWM3CPRE        equ	1155	;# 
 17723   000484                     PWM3PIPOS       equ	1156	;# 
 17724   000485                     PWM3GIR         equ	1157	;# 
 17725   000486                     PWM3GIE         equ	1158	;# 
 17726   000487                     PWM3CON         equ	1159	;# 
 17727   000488                     PWM3S1CFG       equ	1160	;# 
 17728   000489                     PWM3S1P1        equ	1161	;# 
 17729   000489                     PWM3S1P1L       equ	1161	;# 
 17730   00048A                     PWM3S1P1H       equ	1162	;# 
 17731   00048B                     PWM3S1P2        equ	1163	;# 
 17732   00048B                     PWM3S1P2L       equ	1163	;# 
 17733   00048C                     PWM3S1P2H       equ	1164	;# 
 17734   00048D                     PWM4ERS         equ	1165	;# 
 17735   00048E                     PWM4CLK         equ	1166	;# 
 17736   00048F                     PWM4LDS         equ	1167	;# 
 17737   000490                     PWM4PR          equ	1168	;# 
 17738   000490                     PWM4PRL         equ	1168	;# 
 17739   000491                     PWM4PRH         equ	1169	;# 
 17740   000492                     PWM4CPRE        equ	1170	;# 
 17741   000493                     PWM4PIPOS       equ	1171	;# 
 17742   000494                     PWM4GIR         equ	1172	;# 
 17743   000495                     PWM4GIE         equ	1173	;# 
 17744   000496                     PWM4CON         equ	1174	;# 
 17745   000497                     PWM4S1CFG       equ	1175	;# 
 17746   000498                     PWM4S1P1        equ	1176	;# 
 17747   000498                     PWM4S1P1L       equ	1176	;# 
 17748   000499                     PWM4S1P1H       equ	1177	;# 
 17749   00049A                     PWM4S1P2        equ	1178	;# 
 17750   00049A                     PWM4S1P2L       equ	1178	;# 
 17751   00049B                     PWM4S1P2H       equ	1179	;# 
 17752   00049C                     PWMLOAD         equ	1180	;# 
 17753   00049D                     PWMEN           equ	1181	;# 
 17754   00049E                     PIE0            equ	1182	;# 
 17755   00049F                     PIE1            equ	1183	;# 
 17756   0004A0                     PIE2            equ	1184	;# 
 17757   0004A1                     PIE3            equ	1185	;# 
 17758   0004A2                     PIE4            equ	1186	;# 
 17759   0004A3                     PIE5            equ	1187	;# 
 17760   0004A4                     PIE6            equ	1188	;# 
 17761   0004A5                     PIE7            equ	1189	;# 
 17762   0004A6                     PIE8            equ	1190	;# 
 17763   0004A7                     PIE9            equ	1191	;# 
 17764   0004A8                     PIE10           equ	1192	;# 
 17765   0004A9                     PIE11           equ	1193	;# 
 17766   0004AA                     PIE12           equ	1194	;# 
 17767   0004AB                     PIE13           equ	1195	;# 
 17768   0004AC                     PIE14           equ	1196	;# 
 17769   0004AD                     PIE15           equ	1197	;# 
 17770   0004AE                     PIR0            equ	1198	;# 
 17771   0004AF                     PIR1            equ	1199	;# 
 17772   0004B0                     PIR2            equ	1200	;# 
 17773   0004B1                     PIR3            equ	1201	;# 
 17774   0004B2                     PIR4            equ	1202	;# 
 17775   0004B3                     PIR5            equ	1203	;# 
 17776   0004B4                     PIR6            equ	1204	;# 
 17777   0004B5                     PIR7            equ	1205	;# 
 17778   0004B6                     PIR8            equ	1206	;# 
 17779   0004B7                     PIR9            equ	1207	;# 
 17780   0004B8                     PIR10           equ	1208	;# 
 17781   0004B9                     PIR11           equ	1209	;# 
 17782   0004BA                     PIR12           equ	1210	;# 
 17783   0004BB                     PIR13           equ	1211	;# 
 17784   0004BC                     PIR14           equ	1212	;# 
 17785   0004BD                     PIR15           equ	1213	;# 
 17786   0004BE                     LATA            equ	1214	;# 
 17787   0004BF                     LATB            equ	1215	;# 
 17788   0004C0                     LATC            equ	1216	;# 
 17789   0004C6                     TRISA           equ	1222	;# 
 17790   0004C7                     TRISB           equ	1223	;# 
 17791   0004C8                     TRISC           equ	1224	;# 
 17792   0004CA                     TRISE           equ	1226	;# 
 17793   0004CE                     PORTA           equ	1230	;# 
 17794   0004CF                     PORTB           equ	1231	;# 
 17795   0004D0                     PORTC           equ	1232	;# 
 17796   0004D2                     PORTE           equ	1234	;# 
 17797   0004D6                     INTCON0         equ	1238	;# 
 17798   0004D7                     INTCON1         equ	1239	;# 
 17799   0004D8                     STATUS          equ	1240	;# 
 17800   0004D9                     FSR2            equ	1241	;# 
 17801   0004D9                     FSR2L           equ	1241	;# 
 17802   0004DA                     FSR2H           equ	1242	;# 
 17803   0004DB                     PLUSW2          equ	1243	;# 
 17804   0004DC                     PREINC2         equ	1244	;# 
 17805   0004DD                     POSTDEC2        equ	1245	;# 
 17806   0004DE                     POSTINC2        equ	1246	;# 
 17807   0004DF                     INDF2           equ	1247	;# 
 17808   0004E0                     BSR             equ	1248	;# 
 17809   0004E1                     FSR1            equ	1249	;# 
 17810   0004E1                     FSR1L           equ	1249	;# 
 17811   0004E2                     FSR1H           equ	1250	;# 
 17812   0004E3                     PLUSW1          equ	1251	;# 
 17813   0004E4                     PREINC1         equ	1252	;# 
 17814   0004E5                     POSTDEC1        equ	1253	;# 
 17815   0004E6                     POSTINC1        equ	1254	;# 
 17816   0004E7                     INDF1           equ	1255	;# 
 17817   0004E8                     WREG            equ	1256	;# 
 17818   0004E9                     FSR0            equ	1257	;# 
 17819   0004E9                     FSR0L           equ	1257	;# 
 17820   0004EA                     FSR0H           equ	1258	;# 
 17821   0004EB                     PLUSW0          equ	1259	;# 
 17822   0004EC                     PREINC0         equ	1260	;# 
 17823   0004ED                     POSTDEC0        equ	1261	;# 
 17824   0004EE                     POSTINC0        equ	1262	;# 
 17825   0004EF                     INDF0           equ	1263	;# 
 17826   0004F0                     PCON0           equ	1264	;# 
 17827   0004F1                     PCON1           equ	1265	;# 
 17828   0004F2                     CPUDOZE         equ	1266	;# 
 17829   0004F3                     PROD            equ	1267	;# 
 17830   0004F3                     PRODL           equ	1267	;# 
 17831   0004F4                     PRODH           equ	1268	;# 
 17832   0004F5                     TABLAT          equ	1269	;# 
 17833   0004F6                     TBLPTR          equ	1270	;# 
 17834   0004F6                     TBLPTRL         equ	1270	;# 
 17835   0004F7                     TBLPTRH         equ	1271	;# 
 17836   0004F8                     TBLPTRU         equ	1272	;# 
 17837   0004F9                     PCLAT           equ	1273	;# 
 17838   0004F9                     PCL             equ	1273	;# 
 17839   0004FA                     PCLATH          equ	1274	;# 
 17840   0004FB                     PCLATU          equ	1275	;# 
 17841   0004FC                     STKPTR          equ	1276	;# 
 17842   0004FD                     TOS             equ	1277	;# 
 17843   0004FD                     TOSL            equ	1277	;# 
 17844   0004FE                     TOSH            equ	1278	;# 
 17845   0004FF                     TOSU            equ	1279	;# 
 17846   000038                     BOOTREG         equ	56	;# 
 17847   000039                     CLKRCON         equ	57	;# 
 17848   00003A                     CLKRCLK         equ	58	;# 
 17849   000040                     NVMCON0         equ	64	;# 
 17850   000041                     NVMCON1         equ	65	;# 
 17851   000042                     NVMLOCK         equ	66	;# 
 17852   000043                     NVMADR          equ	67	;# 
 17853   000043                     NVMADRL         equ	67	;# 
 17854   000044                     NVMADRH         equ	68	;# 
 17855   000045                     NVMADRU         equ	69	;# 
 17856   000046                     NVMDAT          equ	70	;# 
 17857   000046                     NVMDATL         equ	70	;# 
 17858   000047                     NVMDATH         equ	71	;# 
 17859   000048                     VREGCON         equ	72	;# 
 17860   000049                     BORCON          equ	73	;# 
 17861   00004A                     HLVDCON0        equ	74	;# 
 17862   00004B                     HLVDCON1        equ	75	;# 
 17863   00004C                     ZCDCON          equ	76	;# 
 17864   000060                     PMD0            equ	96	;# 
 17865   000061                     PMD1            equ	97	;# 
 17866   000062                     PMD2            equ	98	;# 
 17867   000063                     PMD3            equ	99	;# 
 17868   000064                     PMD4            equ	100	;# 
 17869   000065                     PMD5            equ	101	;# 
 17870   000066                     PMD6            equ	102	;# 
 17871   000067                     PMD7            equ	103	;# 
 17872   000068                     PMD8            equ	104	;# 
 17873   00006A                     MD1CON0         equ	106	;# 
 17874   00006B                     MD1CON1         equ	107	;# 
 17875   00006C                     MD1SRC          equ	108	;# 
 17876   00006D                     MD1CARL         equ	109	;# 
 17877   00006E                     MD1CARH         equ	110	;# 
 17878   00006F                     CMOUT           equ	111	;# 
 17879   000070                     CM1CON0         equ	112	;# 
 17880   000071                     CM1CON1         equ	113	;# 
 17881   000072                     CM1NCH          equ	114	;# 
 17882   000073                     CM1PCH          equ	115	;# 
 17883   000074                     CM2CON0         equ	116	;# 
 17884   000075                     CM2CON1         equ	117	;# 
 17885   000076                     CM2NCH          equ	118	;# 
 17886   000077                     CM2PCH          equ	119	;# 
 17887   000078                     WDTCON0         equ	120	;# 
 17888   000079                     WDTCON1         equ	121	;# 
 17889   00007A                     WDTPSL          equ	122	;# 
 17890   00007B                     WDTPSH          equ	123	;# 
 17891   00007C                     WDTTMR          equ	124	;# 
 17892   00007D                     DAC1DAT         equ	125	;# 
 17893   00007D                     DAC1DATL        equ	125	;# 
 17894   00007F                     DAC1CON         equ	127	;# 
 17895   000080                     SPI1RXB         equ	128	;# 
 17896   000081                     SPI1TXB         equ	129	;# 
 17897   000082                     SPI1TCNT        equ	130	;# 
 17898   000082                     SPI1TCNTL       equ	130	;# 
 17899   000083                     SPI1TCNTH       equ	131	;# 
 17900   000084                     SPI1CON0        equ	132	;# 
 17901   000085                     SPI1CON1        equ	133	;# 
 17902   000086                     SPI1CON2        equ	134	;# 
 17903   000087                     SPI1STATUS      equ	135	;# 
 17904   000088                     SPI1TWIDTH      equ	136	;# 
 17905   000089                     SPI1BAUD        equ	137	;# 
 17906   00008A                     SPI1INTF        equ	138	;# 
 17907   00008B                     SPI1INTE        equ	139	;# 
 17908   00008C                     SPI1CLK         equ	140	;# 
 17909   00008D                     SPI2RXB         equ	141	;# 
 17910   00008E                     SPI2TXB         equ	142	;# 
 17911   00008F                     SPI2TCNT        equ	143	;# 
 17912   00008F                     SPI2TCNTL       equ	143	;# 
 17913   000090                     SPI2TCNTH       equ	144	;# 
 17914   000091                     SPI2CON0        equ	145	;# 
 17915   000092                     SPI2CON1        equ	146	;# 
 17916   000093                     SPI2CON2        equ	147	;# 
 17917   000094                     SPI2STATUS      equ	148	;# 
 17918   000095                     SPI2TWIDTH      equ	149	;# 
 17919   000096                     SPI2BAUD        equ	150	;# 
 17920   000097                     SPI2INTF        equ	151	;# 
 17921   000098                     SPI2INTE        equ	152	;# 
 17922   000099                     SPI2CLK         equ	153	;# 
 17923   0000AC                     ACTCON          equ	172	;# 
 17924   0000AD                     OSCCON1         equ	173	;# 
 17925   0000AE                     OSCCON2         equ	174	;# 
 17926   0000AF                     OSCCON3         equ	175	;# 
 17927   0000B0                     OSCTUNE         equ	176	;# 
 17928   0000B1                     OSCFRQ          equ	177	;# 
 17929   0000B1                     OSCFREQ         equ	177	;# 
 17930   0000B2                     OSCSTAT         equ	178	;# 
 17931   0000B2                     OSCSTAT1        equ	178	;# 
 17932   0000B3                     OSCEN           equ	179	;# 
 17933   0000B4                     PRLOCK          equ	180	;# 
 17934   0000B5                     SCANPR          equ	181	;# 
 17935   0000B6                     DMA1PR          equ	182	;# 
 17936   0000B7                     DMA2PR          equ	183	;# 
 17937   0000B8                     DMA3PR          equ	184	;# 
 17938   0000B9                     DMA4PR          equ	185	;# 
 17939   0000BA                     DMA5PR          equ	186	;# 
 17940   0000BB                     DMA6PR          equ	187	;# 
 17941   0000BC                     DMA7PR          equ	188	;# 
 17942   0000BD                     DMA8PR          equ	189	;# 
 17943   0000BE                     MAINPR          equ	190	;# 
 17944   0000BF                     ISRPR           equ	191	;# 
 17945   0000D4                     CLCDATA         equ	212	;# 
 17946   0000D5                     CLCSELECT       equ	213	;# 
 17947   0000D6                     CLCnCON         equ	214	;# 
 17948   0000D7                     CLCnPOL         equ	215	;# 
 17949   0000D8                     CLCnSEL0        equ	216	;# 
 17950   0000D9                     CLCnSEL1        equ	217	;# 
 17951   0000DA                     CLCnSEL2        equ	218	;# 
 17952   0000DB                     CLCnSEL3        equ	219	;# 
 17953   0000DC                     CLCnGLS0        equ	220	;# 
 17954   0000DD                     CLCnGLS1        equ	221	;# 
 17955   0000DE                     CLCnGLS2        equ	222	;# 
 17956   0000DF                     CLCnGLS3        equ	223	;# 
 17957   0000E8                     DMASELECT       equ	232	;# 
 17958   0000E9                     DMAnBUF         equ	233	;# 
 17959   0000EA                     DMAnDCNT        equ	234	;# 
 17960   0000EA                     DMAnDCNTL       equ	234	;# 
 17961   0000EB                     DMAnDCNTH       equ	235	;# 
 17962   0000EC                     DMAnDPTR        equ	236	;# 
 17963   0000EC                     DMAnDPTRL       equ	236	;# 
 17964   0000ED                     DMAnDPTRH       equ	237	;# 
 17965   0000EE                     DMAnDSZ         equ	238	;# 
 17966   0000EE                     DMAnDSZL        equ	238	;# 
 17967   0000EF                     DMAnDSZH        equ	239	;# 
 17968   0000F0                     DMAnDSA         equ	240	;# 
 17969   0000F0                     DMAnDSAL        equ	240	;# 
 17970   0000F1                     DMAnDSAH        equ	241	;# 
 17971   0000F2                     DMAnSCNT        equ	242	;# 
 17972   0000F2                     DMAnSCNTL       equ	242	;# 
 17973   0000F3                     DMAnSCNTH       equ	243	;# 
 17974   0000F4                     DMAnSPTR        equ	244	;# 
 17975   0000F4                     DMAnSPTRL       equ	244	;# 
 17976   0000F5                     DMAnSPTRH       equ	245	;# 
 17977   0000F6                     DMAnSPTRU       equ	246	;# 
 17978   0000F7                     DMAnSSZ         equ	247	;# 
 17979   0000F7                     DMAnSSZL        equ	247	;# 
 17980   0000F8                     DMAnSSZH        equ	248	;# 
 17981   0000F9                     DMAnSSA         equ	249	;# 
 17982   0000F9                     DMAnSSAL        equ	249	;# 
 17983   0000FA                     DMAnSSAH        equ	250	;# 
 17984   0000FB                     DMAnSSAU        equ	251	;# 
 17985   0000FC                     DMAnCON0        equ	252	;# 
 17986   0000FD                     DMAnCON1        equ	253	;# 
 17987   0000FE                     DMAnAIRQ        equ	254	;# 
 17988   0000FF                     DMAnSIRQ        equ	255	;# 
 17989   000100                     C1CONL          equ	256	;# 
 17990   000101                     C1CONH          equ	257	;# 
 17991   000102                     C1CONU          equ	258	;# 
 17992   000103                     C1CONT          equ	259	;# 
 17993   000104                     C1NBTCFGL       equ	260	;# 
 17994   000105                     C1NBTCFGH       equ	261	;# 
 17995   000106                     C1NBTCFGU       equ	262	;# 
 17996   000107                     C1NBTCFGT       equ	263	;# 
 17997   000108                     C1DBTCFGL       equ	264	;# 
 17998   000109                     C1DBTCFGH       equ	265	;# 
 17999   00010A                     C1DBTCFGU       equ	266	;# 
 18000   00010B                     C1DBTCFGT       equ	267	;# 
 18001   00010C                     C1TDCL          equ	268	;# 
 18002   00010D                     C1TDCH          equ	269	;# 
 18003   00010E                     C1TDCU          equ	270	;# 
 18004   000110                     C1TBC           equ	272	;# 
 18005   000110                     C1TBCL          equ	272	;# 
 18006   000111                     C1TBCH          equ	273	;# 
 18007   000112                     C1TBCU          equ	274	;# 
 18008   000113                     C1TBCT          equ	275	;# 
 18009   000114                     C1TSCONL        equ	276	;# 
 18010   000115                     C1TSCONH        equ	277	;# 
 18011   000116                     C1TSCONU        equ	278	;# 
 18012   000117                     C1TSCONT        equ	279	;# 
 18013   000118                     C1VECL          equ	280	;# 
 18014   000119                     C1VECH          equ	281	;# 
 18015   00011A                     C1VECU          equ	282	;# 
 18016   00011B                     C1VECT          equ	283	;# 
 18017   00011C                     C1INTL          equ	284	;# 
 18018   00011D                     C1INTH          equ	285	;# 
 18019   00011E                     C1INTU          equ	286	;# 
 18020   00011F                     C1INTT          equ	287	;# 
 18021   000120                     C1RXIF          equ	288	;# 
 18022   000120                     C1RXIFL         equ	288	;# 
 18023   000121                     C1RXIFH         equ	289	;# 
 18024   000122                     C1RXIFU         equ	290	;# 
 18025   000123                     C1RXIFT         equ	291	;# 
 18026   000124                     C1TXIF          equ	292	;# 
 18027   000124                     C1TXIFL         equ	292	;# 
 18028   000125                     C1TXIFH         equ	293	;# 
 18029   000126                     C1TXIFU         equ	294	;# 
 18030   000127                     C1TXIFT         equ	295	;# 
 18031   000128                     C1RXOVIF        equ	296	;# 
 18032   000128                     C1RXOVIFL       equ	296	;# 
 18033   000129                     C1RXOVIFH       equ	297	;# 
 18034   00012A                     C1RXOVIFU       equ	298	;# 
 18035   00012B                     C1RXOVIFT       equ	299	;# 
 18036   00012C                     C1TXATIF        equ	300	;# 
 18037   00012C                     C1TXATIFL       equ	300	;# 
 18038   00012D                     C1TXATIFH       equ	301	;# 
 18039   00012E                     C1TXATIFU       equ	302	;# 
 18040   00012F                     C1TXATIFT       equ	303	;# 
 18041   000130                     C1TXREQ         equ	304	;# 
 18042   000130                     C1TXREQL        equ	304	;# 
 18043   000131                     C1TXREQH        equ	305	;# 
 18044   000132                     C1TXREQU        equ	306	;# 
 18045   000133                     C1TXREQT        equ	307	;# 
 18046   000134                     C1TRECL         equ	308	;# 
 18047   000135                     C1TRECH         equ	309	;# 
 18048   000136                     C1TRECU         equ	310	;# 
 18049   000137                     C1TRECT         equ	311	;# 
 18050   000138                     C1BDIAG0L       equ	312	;# 
 18051   000139                     C1BDIAG0H       equ	313	;# 
 18052   00013C                     C1BDIAG1L       equ	316	;# 
 18053   00013D                     C1BDIAG1H       equ	317	;# 
 18054   00013E                     C1BDIAG1U       equ	318	;# 
 18055   00013F                     C1BDIAG1T       equ	319	;# 
 18056   000140                     C1TEFCONL       equ	320	;# 
 18057   000141                     C1TEFCONH       equ	321	;# 
 18058   000142                     C1TEFCONU       equ	322	;# 
 18059   000143                     C1TEFCONT       equ	323	;# 
 18060   000144                     C1TEFSTAL       equ	324	;# 
 18061   000145                     C1TEFSTAH       equ	325	;# 
 18062   000146                     C1TEFSTAU       equ	326	;# 
 18063   000147                     C1TEFSTAT       equ	327	;# 
 18064   000148                     C1TEFUA         equ	328	;# 
 18065   000148                     C1TEFUAL        equ	328	;# 
 18066   000149                     C1TEFUAH        equ	329	;# 
 18067   00014A                     C1TEFUAU        equ	330	;# 
 18068   00014B                     C1TEFUAT        equ	331	;# 
 18069   00014C                     C1FIFOBA        equ	332	;# 
 18070   00014C                     C1FIFOBAL       equ	332	;# 
 18071   00014D                     C1FIFOBAH       equ	333	;# 
 18072   00014E                     C1FIFOBAU       equ	334	;# 
 18073   00014F                     C1FIFOBAT       equ	335	;# 
 18074   000150                     C1TXQCONL       equ	336	;# 
 18075   000151                     C1TXQCONH       equ	337	;# 
 18076   000152                     C1TXQCONU       equ	338	;# 
 18077   000153                     C1TXQCONT       equ	339	;# 
 18078   000154                     C1TXQSTAL       equ	340	;# 
 18079   000155                     C1TXQSTAH       equ	341	;# 
 18080   000156                     C1TXQSTAU       equ	342	;# 
 18081   000157                     C1TXQSTAT       equ	343	;# 
 18082   000158                     C1TXQUA         equ	344	;# 
 18083   000158                     C1TXQUAL        equ	344	;# 
 18084   000159                     C1TXQUAH        equ	345	;# 
 18085   00015A                     C1TXQUAU        equ	346	;# 
 18086   00015B                     C1TXQUAT        equ	347	;# 
 18087   00015C                     C1FIFOCON1      equ	348	;# 
 18088   00015C                     C1FIFOCON1L     equ	348	;# 
 18089   00015D                     C1FIFOCON1H     equ	349	;# 
 18090   00015E                     C1FIFOCON1U     equ	350	;# 
 18091   00015F                     C1FIFOCON1T     equ	351	;# 
 18092   000160                     C1FIFOSTA1      equ	352	;# 
 18093   000160                     C1FIFOSTA1L     equ	352	;# 
 18094   000161                     C1FIFOSTA1H     equ	353	;# 
 18095   000162                     C1FIFOSTA1U     equ	354	;# 
 18096   000163                     C1FIFOSTA1T     equ	355	;# 
 18097   000164                     C1FIFOUA1       equ	356	;# 
 18098   000164                     C1FIFOUA1L      equ	356	;# 
 18099   000165                     C1FIFOUA1H      equ	357	;# 
 18100   000166                     C1FIFOUA1U      equ	358	;# 
 18101   000167                     C1FIFOUA1T      equ	359	;# 
 18102   000168                     C1FIFOCON2      equ	360	;# 
 18103   000168                     C1FIFOCON2L     equ	360	;# 
 18104   000169                     C1FIFOCON2H     equ	361	;# 
 18105   00016A                     C1FIFOCON2U     equ	362	;# 
 18106   00016B                     C1FIFOCON2T     equ	363	;# 
 18107   00016C                     C1FIFOSTA2      equ	364	;# 
 18108   00016C                     C1FIFOSTA2L     equ	364	;# 
 18109   00016D                     C1FIFOSTA2H     equ	365	;# 
 18110   00016E                     C1FIFOSTA2U     equ	366	;# 
 18111   00016F                     C1FIFOSTA2T     equ	367	;# 
 18112   000170                     C1FIFOUA2       equ	368	;# 
 18113   000170                     C1FIFOUA2L      equ	368	;# 
 18114   000171                     C1FIFOUA2H      equ	369	;# 
 18115   000172                     C1FIFOUA2U      equ	370	;# 
 18116   000173                     C1FIFOUA2T      equ	371	;# 
 18117   000174                     C1FIFOCON3      equ	372	;# 
 18118   000174                     C1FIFOCON3L     equ	372	;# 
 18119   000175                     C1FIFOCON3H     equ	373	;# 
 18120   000176                     C1FIFOCON3U     equ	374	;# 
 18121   000177                     C1FIFOCON3T     equ	375	;# 
 18122   000178                     C1FIFOSTA3      equ	376	;# 
 18123   000178                     C1FIFOSTA3L     equ	376	;# 
 18124   000179                     C1FIFOSTA3H     equ	377	;# 
 18125   00017A                     C1FIFOSTA3U     equ	378	;# 
 18126   00017B                     C1FIFOSTA3T     equ	379	;# 
 18127   00017C                     C1FIFOUA3       equ	380	;# 
 18128   00017C                     C1FIFOUA3L      equ	380	;# 
 18129   00017D                     C1FIFOUA3H      equ	381	;# 
 18130   00017E                     C1FIFOUA3U      equ	382	;# 
 18131   00017F                     C1FIFOUA3T      equ	383	;# 
 18132   000180                     C1FLTCON0L      equ	384	;# 
 18133   000181                     C1FLTCON0H      equ	385	;# 
 18134   000182                     C1FLTCON0U      equ	386	;# 
 18135   000183                     C1FLTCON0T      equ	387	;# 
 18136   000184                     C1FLTCON1L      equ	388	;# 
 18137   000185                     C1FLTCON1H      equ	389	;# 
 18138   000186                     C1FLTCON1U      equ	390	;# 
 18139   000187                     C1FLTCON1T      equ	391	;# 
 18140   000188                     C1FLTCON2L      equ	392	;# 
 18141   000189                     C1FLTCON2H      equ	393	;# 
 18142   00018A                     C1FLTCON2U      equ	394	;# 
 18143   00018B                     C1FLTCON2T      equ	395	;# 
 18144   00018C                     C1FLTOBJ0       equ	396	;# 
 18145   00018C                     C1FLTOBJ0L      equ	396	;# 
 18146   00018D                     C1FLTOBJ0H      equ	397	;# 
 18147   00018E                     C1FLTOBJ0U      equ	398	;# 
 18148   00018F                     C1FLTOBJ0T      equ	399	;# 
 18149   000190                     C1MASK0         equ	400	;# 
 18150   000190                     C1MASK0L        equ	400	;# 
 18151   000191                     C1MASK0H        equ	401	;# 
 18152   000192                     C1MASK0U        equ	402	;# 
 18153   000193                     C1MASK0T        equ	403	;# 
 18154   000194                     C1FLTOBJ1       equ	404	;# 
 18155   000194                     C1FLTOBJ1L      equ	404	;# 
 18156   000195                     C1FLTOBJ1H      equ	405	;# 
 18157   000196                     C1FLTOBJ1U      equ	406	;# 
 18158   000197                     C1FLTOBJ1T      equ	407	;# 
 18159   000198                     C1MASK1         equ	408	;# 
 18160   000198                     C1MASK1L        equ	408	;# 
 18161   000199                     C1MASK1H        equ	409	;# 
 18162   00019A                     C1MASK1U        equ	410	;# 
 18163   00019B                     C1MASK1T        equ	411	;# 
 18164   00019C                     C1FLTOBJ2       equ	412	;# 
 18165   00019C                     C1FLTOBJ2L      equ	412	;# 
 18166   00019D                     C1FLTOBJ2H      equ	413	;# 
 18167   00019E                     C1FLTOBJ2U      equ	414	;# 
 18168   00019F                     C1FLTOBJ2T      equ	415	;# 
 18169   0001A0                     C1MASK2         equ	416	;# 
 18170   0001A0                     C1MASK2L        equ	416	;# 
 18171   0001A1                     C1MASK2H        equ	417	;# 
 18172   0001A2                     C1MASK2U        equ	418	;# 
 18173   0001A3                     C1MASK2T        equ	419	;# 
 18174   0001A4                     C1FLTOBJ3       equ	420	;# 
 18175   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18176   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18177   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18178   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18179   0001A8                     C1MASK3         equ	424	;# 
 18180   0001A8                     C1MASK3L        equ	424	;# 
 18181   0001A9                     C1MASK3H        equ	425	;# 
 18182   0001AA                     C1MASK3U        equ	426	;# 
 18183   0001AB                     C1MASK3T        equ	427	;# 
 18184   0001AC                     C1FLTOBJ4       equ	428	;# 
 18185   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18186   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18187   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18188   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18189   0001B0                     C1MASK4         equ	432	;# 
 18190   0001B0                     C1MASK4L        equ	432	;# 
 18191   0001B1                     C1MASK4H        equ	433	;# 
 18192   0001B2                     C1MASK4U        equ	434	;# 
 18193   0001B3                     C1MASK4T        equ	435	;# 
 18194   0001B4                     C1FLTOBJ5       equ	436	;# 
 18195   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18196   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18197   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18198   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18199   0001B8                     C1MASK5         equ	440	;# 
 18200   0001B8                     C1MASK5L        equ	440	;# 
 18201   0001B9                     C1MASK5H        equ	441	;# 
 18202   0001BA                     C1MASK5U        equ	442	;# 
 18203   0001BB                     C1MASK5T        equ	443	;# 
 18204   0001BC                     C1FLTOBJ6       equ	444	;# 
 18205   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18206   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18207   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18208   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18209   0001C0                     C1MASK6         equ	448	;# 
 18210   0001C0                     C1MASK6L        equ	448	;# 
 18211   0001C1                     C1MASK6H        equ	449	;# 
 18212   0001C2                     C1MASK6U        equ	450	;# 
 18213   0001C3                     C1MASK6T        equ	451	;# 
 18214   0001C4                     C1FLTOBJ7       equ	452	;# 
 18215   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18216   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18217   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18218   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18219   0001C8                     C1MASK7         equ	456	;# 
 18220   0001C8                     C1MASK7L        equ	456	;# 
 18221   0001C9                     C1MASK7H        equ	457	;# 
 18222   0001CA                     C1MASK7U        equ	458	;# 
 18223   0001CB                     C1MASK7T        equ	459	;# 
 18224   0001CC                     C1FLTOBJ8       equ	460	;# 
 18225   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18226   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18227   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18228   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18229   0001D0                     C1MASK8         equ	464	;# 
 18230   0001D0                     C1MASK8L        equ	464	;# 
 18231   0001D1                     C1MASK8H        equ	465	;# 
 18232   0001D2                     C1MASK8U        equ	466	;# 
 18233   0001D3                     C1MASK8T        equ	467	;# 
 18234   0001D4                     C1FLTOBJ9       equ	468	;# 
 18235   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18236   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18237   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18238   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18239   0001D8                     C1MASK9         equ	472	;# 
 18240   0001D8                     C1MASK9L        equ	472	;# 
 18241   0001D9                     C1MASK9H        equ	473	;# 
 18242   0001DA                     C1MASK9U        equ	474	;# 
 18243   0001DB                     C1MASK9T        equ	475	;# 
 18244   0001DC                     C1FLTOBJ10      equ	476	;# 
 18245   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18246   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18247   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18248   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18249   0001E0                     C1MASK10        equ	480	;# 
 18250   0001E0                     C1MASK10L       equ	480	;# 
 18251   0001E1                     C1MASK10H       equ	481	;# 
 18252   0001E2                     C1MASK10U       equ	482	;# 
 18253   0001E3                     C1MASK10T       equ	483	;# 
 18254   0001E4                     C1FLTOBJ11      equ	484	;# 
 18255   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18256   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18257   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18258   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18259   0001E8                     C1MASK11        equ	488	;# 
 18260   0001E8                     C1MASK11L       equ	488	;# 
 18261   0001E9                     C1MASK11H       equ	489	;# 
 18262   0001EA                     C1MASK11U       equ	490	;# 
 18263   0001EB                     C1MASK11T       equ	491	;# 
 18264   000200                     PPSLOCK         equ	512	;# 
 18265   000201                     RA0PPS          equ	513	;# 
 18266   000202                     RA1PPS          equ	514	;# 
 18267   000203                     RA2PPS          equ	515	;# 
 18268   000204                     RA3PPS          equ	516	;# 
 18269   000205                     RA4PPS          equ	517	;# 
 18270   000206                     RA5PPS          equ	518	;# 
 18271   000207                     RA6PPS          equ	519	;# 
 18272   000208                     RA7PPS          equ	520	;# 
 18273   000209                     RB0PPS          equ	521	;# 
 18274   00020A                     RB1PPS          equ	522	;# 
 18275   00020B                     RB2PPS          equ	523	;# 
 18276   00020C                     RB3PPS          equ	524	;# 
 18277   00020D                     RB4PPS          equ	525	;# 
 18278   00020E                     RB5PPS          equ	526	;# 
 18279   00020F                     RB6PPS          equ	527	;# 
 18280   000210                     RB7PPS          equ	528	;# 
 18281   000211                     RC0PPS          equ	529	;# 
 18282   000212                     RC1PPS          equ	530	;# 
 18283   000213                     RC2PPS          equ	531	;# 
 18284   000214                     RC3PPS          equ	532	;# 
 18285   000215                     RC4PPS          equ	533	;# 
 18286   000216                     RC5PPS          equ	534	;# 
 18287   000217                     RC6PPS          equ	535	;# 
 18288   000218                     RC7PPS          equ	536	;# 
 18289   00023D                     CANRXPPS        equ	573	;# 
 18290   00023E                     INT0PPS         equ	574	;# 
 18291   00023F                     INT1PPS         equ	575	;# 
 18292   000240                     INT2PPS         equ	576	;# 
 18293   000241                     T0CKIPPS        equ	577	;# 
 18294   000242                     T1CKIPPS        equ	578	;# 
 18295   000243                     T1GPPS          equ	579	;# 
 18296   000244                     T3CKIPPS        equ	580	;# 
 18297   000245                     T3GPPS          equ	581	;# 
 18298   000246                     T5CKIPPS        equ	582	;# 
 18299   000247                     T5GPPS          equ	583	;# 
 18300   000248                     T2INPPS         equ	584	;# 
 18301   000249                     T4INPPS         equ	585	;# 
 18302   00024A                     T6INPPS         equ	586	;# 
 18303   00024B                     TUIN0PPS        equ	587	;# 
 18304   00024C                     TUIN1PPS        equ	588	;# 
 18305   00024F                     CCP1PPS         equ	591	;# 
 18306   000250                     CCP2PPS         equ	592	;# 
 18307   000251                     CCP3PPS         equ	593	;# 
 18308   000253                     PWM1ERSPPS      equ	595	;# 
 18309   000254                     PWM2ERSPPS      equ	596	;# 
 18310   000255                     PWM3ERSPPS      equ	597	;# 
 18311   000256                     PWM4ERSPPS      equ	598	;# 
 18312   000257                     PWMIN0PPS       equ	599	;# 
 18313   000258                     PWMIN1PPS       equ	600	;# 
 18314   000259                     SMT1WINPPS      equ	601	;# 
 18315   00025A                     SMT1SIGPPS      equ	602	;# 
 18316   00025B                     CWG1PPS         equ	603	;# 
 18317   00025B                     CWG1INPPS       equ	603	;# 
 18318   00025C                     CWG2PPS         equ	604	;# 
 18319   00025C                     CWG2INPPS       equ	604	;# 
 18320   00025D                     CWG3PPS         equ	605	;# 
 18321   00025D                     CWG3INPPS       equ	605	;# 
 18322   00025E                     MD1CARLPPS      equ	606	;# 
 18323   00025E                     MDCARLPPS       equ	606	;# 
 18324   00025F                     MD1CARHPPS      equ	607	;# 
 18325   00025F                     MDCARHPPS       equ	607	;# 
 18326   000260                     MD1SRCPPS       equ	608	;# 
 18327   000260                     MDSRCPPS        equ	608	;# 
 18328   000261                     CLCIN0PPS       equ	609	;# 
 18329   000262                     CLCIN1PPS       equ	610	;# 
 18330   000263                     CLCIN2PPS       equ	611	;# 
 18331   000264                     CLCIN3PPS       equ	612	;# 
 18332   000265                     CLCIN4PPS       equ	613	;# 
 18333   000266                     CLCIN5PPS       equ	614	;# 
 18334   000267                     CLCIN6PPS       equ	615	;# 
 18335   000268                     CLCIN7PPS       equ	616	;# 
 18336   000269                     ADACTPPS        equ	617	;# 
 18337   00026A                     SPI1SCKPPS      equ	618	;# 
 18338   00026B                     SPI1SDIPPS      equ	619	;# 
 18339   00026C                     SPI1SSPPS       equ	620	;# 
 18340   00026D                     SPI2SCKPPS      equ	621	;# 
 18341   00026E                     SPI2SDIPPS      equ	622	;# 
 18342   00026F                     SPI2SSPPS       equ	623	;# 
 18343   000270                     I2C1SDAPPS      equ	624	;# 
 18344   000271                     I2C1SCLPPS      equ	625	;# 
 18345   000272                     U1RXPPS         equ	626	;# 
 18346   000273                     U1CTSPPS        equ	627	;# 
 18347   000274                     U2RXPPS         equ	628	;# 
 18348   000275                     U2CTSPPS        equ	629	;# 
 18349   000276                     U3RXPPS         equ	630	;# 
 18350   000277                     U3CTSPPS        equ	631	;# 
 18351   000278                     U4RXPPS         equ	632	;# 
 18352   000279                     U4CTSPPS        equ	633	;# 
 18353   00027A                     U5RXPPS         equ	634	;# 
 18354   00027B                     U5CTSPPS        equ	635	;# 
 18355   000286                     RC4I2C          equ	646	;# 
 18356   000287                     RC3I2C          equ	647	;# 
 18357   000288                     RB2I2C          equ	648	;# 
 18358   000289                     RB1I2C          equ	649	;# 
 18359   00028A                     I2C1RXB         equ	650	;# 
 18360   00028B                     I2C1TXB         equ	651	;# 
 18361   00028C                     I2C1CNTL        equ	652	;# 
 18362   00028D                     I2C1CNTH        equ	653	;# 
 18363   00028E                     I2C1ADB0        equ	654	;# 
 18364   00028F                     I2C1ADB1        equ	655	;# 
 18365   000290                     I2C1ADR0        equ	656	;# 
 18366   000291                     I2C1ADR1        equ	657	;# 
 18367   000292                     I2C1ADR2        equ	658	;# 
 18368   000293                     I2C1ADR3        equ	659	;# 
 18369   000294                     I2C1CON0        equ	660	;# 
 18370   000295                     I2C1CON1        equ	661	;# 
 18371   000296                     I2C1CON2        equ	662	;# 
 18372   000297                     I2C1ERR         equ	663	;# 
 18373   000298                     I2C1STAT0       equ	664	;# 
 18374   000299                     I2C1STAT1       equ	665	;# 
 18375   00029A                     I2C1PIR         equ	666	;# 
 18376   00029B                     I2C1PIE         equ	667	;# 
 18377   00029C                     I2C1BTO         equ	668	;# 
 18378   00029D                     I2C1BAUD        equ	669	;# 
 18379   00029E                     I2C1CLK         equ	670	;# 
 18380   00029F                     I2C1BTOC        equ	671	;# 
 18381   0002A1                     U1RXB           equ	673	;# 
 18382   0002A1                     U1RXBL          equ	673	;# 
 18383   0002A2                     U1RXCHK         equ	674	;# 
 18384   0002A3                     U1TXB           equ	675	;# 
 18385   0002A3                     U1TXBL          equ	675	;# 
 18386   0002A4                     U1TXCHK         equ	676	;# 
 18387   0002A5                     U1P1            equ	677	;# 
 18388   0002A5                     U1P1L           equ	677	;# 
 18389   0002A6                     U1P1H           equ	678	;# 
 18390   0002A7                     U1P2            equ	679	;# 
 18391   0002A7                     U1P2L           equ	679	;# 
 18392   0002A8                     U1P2H           equ	680	;# 
 18393   0002A9                     U1P3            equ	681	;# 
 18394   0002A9                     U1P3L           equ	681	;# 
 18395   0002AA                     U1P3H           equ	682	;# 
 18396   0002AB                     U1CON0          equ	683	;# 
 18397   0002AC                     U1CON1          equ	684	;# 
 18398   0002AD                     U1CON2          equ	685	;# 
 18399   0002AE                     U1BRG           equ	686	;# 
 18400   0002AE                     U1BRGL          equ	686	;# 
 18401   0002AF                     U1BRGH          equ	687	;# 
 18402   0002B0                     U1FIFO          equ	688	;# 
 18403   0002B1                     U1UIR           equ	689	;# 
 18404   0002B2                     U1ERRIR         equ	690	;# 
 18405   0002B3                     U1ERRIE         equ	691	;# 
 18406   0002B4                     U2RXB           equ	692	;# 
 18407   0002B4                     U2RXBL          equ	692	;# 
 18408   0002B5                     U2RXCHK         equ	693	;# 
 18409   0002B6                     U2TXB           equ	694	;# 
 18410   0002B6                     U2TXBL          equ	694	;# 
 18411   0002B7                     U2TXCHK         equ	695	;# 
 18412   0002B8                     U2P1            equ	696	;# 
 18413   0002B8                     U2P1L           equ	696	;# 
 18414   0002B9                     U2P1H           equ	697	;# 
 18415   0002BA                     U2P2            equ	698	;# 
 18416   0002BA                     U2P2L           equ	698	;# 
 18417   0002BB                     U2P2H           equ	699	;# 
 18418   0002BC                     U2P3            equ	700	;# 
 18419   0002BC                     U2P3L           equ	700	;# 
 18420   0002BD                     U2P3H           equ	701	;# 
 18421   0002BE                     U2CON0          equ	702	;# 
 18422   0002BF                     U2CON1          equ	703	;# 
 18423   0002C0                     U2CON2          equ	704	;# 
 18424   0002C1                     U2BRG           equ	705	;# 
 18425   0002C1                     U2BRGL          equ	705	;# 
 18426   0002C2                     U2BRGH          equ	706	;# 
 18427   0002C3                     U2FIFO          equ	707	;# 
 18428   0002C4                     U2UIR           equ	708	;# 
 18429   0002C5                     U2ERRIR         equ	709	;# 
 18430   0002C6                     U2ERRIE         equ	710	;# 
 18431   0002C7                     U3RXB           equ	711	;# 
 18432   0002C7                     U3RXBL          equ	711	;# 
 18433   0002C9                     U3TXB           equ	713	;# 
 18434   0002C9                     U3TXBL          equ	713	;# 
 18435   0002CB                     U3P1            equ	715	;# 
 18436   0002CB                     U3P1L           equ	715	;# 
 18437   0002CD                     U3P2            equ	717	;# 
 18438   0002CD                     U3P2L           equ	717	;# 
 18439   0002CF                     U3P3            equ	719	;# 
 18440   0002CF                     U3P3L           equ	719	;# 
 18441   0002D1                     U3CON0          equ	721	;# 
 18442   0002D2                     U3CON1          equ	722	;# 
 18443   0002D3                     U3CON2          equ	723	;# 
 18444   0002D4                     U3BRG           equ	724	;# 
 18445   0002D4                     U3BRGL          equ	724	;# 
 18446   0002D5                     U3BRGH          equ	725	;# 
 18447   0002D6                     U3FIFO          equ	726	;# 
 18448   0002D7                     U3UIR           equ	727	;# 
 18449   0002D8                     U3ERRIR         equ	728	;# 
 18450   0002D9                     U3ERRIE         equ	729	;# 
 18451   0002DA                     U4RXB           equ	730	;# 
 18452   0002DA                     U4RXBL          equ	730	;# 
 18453   0002DC                     U4TXB           equ	732	;# 
 18454   0002DC                     U4TXBL          equ	732	;# 
 18455   0002DE                     U4P1            equ	734	;# 
 18456   0002DE                     U4P1L           equ	734	;# 
 18457   0002E0                     U4P2            equ	736	;# 
 18458   0002E0                     U4P2L           equ	736	;# 
 18459   0002E2                     U4P3            equ	738	;# 
 18460   0002E2                     U4P3L           equ	738	;# 
 18461   0002E4                     U4CON0          equ	740	;# 
 18462   0002E5                     U4CON1          equ	741	;# 
 18463   0002E6                     U4CON2          equ	742	;# 
 18464   0002E7                     U4BRG           equ	743	;# 
 18465   0002E7                     U4BRGL          equ	743	;# 
 18466   0002E8                     U4BRGH          equ	744	;# 
 18467   0002E9                     U4FIFO          equ	745	;# 
 18468   0002EA                     U4UIR           equ	746	;# 
 18469   0002EB                     U4ERRIR         equ	747	;# 
 18470   0002EC                     U4ERRIE         equ	748	;# 
 18471   0002ED                     U5RXB           equ	749	;# 
 18472   0002ED                     U5RXBL          equ	749	;# 
 18473   0002EF                     U5TXB           equ	751	;# 
 18474   0002EF                     U5TXBL          equ	751	;# 
 18475   0002F1                     U5P1            equ	753	;# 
 18476   0002F1                     U5P1L           equ	753	;# 
 18477   0002F3                     U5P2            equ	755	;# 
 18478   0002F3                     U5P2L           equ	755	;# 
 18479   0002F5                     U5P3            equ	757	;# 
 18480   0002F5                     U5P3L           equ	757	;# 
 18481   0002F7                     U5CON0          equ	759	;# 
 18482   0002F8                     U5CON1          equ	760	;# 
 18483   0002F9                     U5CON2          equ	761	;# 
 18484   0002FA                     U5BRG           equ	762	;# 
 18485   0002FA                     U5BRGL          equ	762	;# 
 18486   0002FB                     U5BRGH          equ	763	;# 
 18487   0002FC                     U5FIFO          equ	764	;# 
 18488   0002FD                     U5UIR           equ	765	;# 
 18489   0002FE                     U5ERRIR         equ	766	;# 
 18490   0002FF                     U5ERRIE         equ	767	;# 
 18491   000300                     SMT1TMR         equ	768	;# 
 18492   000300                     SMT1TMRL        equ	768	;# 
 18493   000301                     SMT1TMRH        equ	769	;# 
 18494   000302                     SMT1TMRU        equ	770	;# 
 18495   000303                     SMT1CPR         equ	771	;# 
 18496   000303                     SMT1CPRL        equ	771	;# 
 18497   000304                     SMT1CPRH        equ	772	;# 
 18498   000305                     SMT1CPRU        equ	773	;# 
 18499   000306                     SMT1CPW         equ	774	;# 
 18500   000306                     SMT1CPWL        equ	774	;# 
 18501   000307                     SMT1CPWH        equ	775	;# 
 18502   000308                     SMT1CPWU        equ	776	;# 
 18503   000309                     SMT1PR          equ	777	;# 
 18504   000309                     SMT1PRL         equ	777	;# 
 18505   00030A                     SMT1PRH         equ	778	;# 
 18506   00030B                     SMT1PRU         equ	779	;# 
 18507   00030C                     SMT1CON0        equ	780	;# 
 18508   00030D                     SMT1CON1        equ	781	;# 
 18509   00030E                     SMT1STAT        equ	782	;# 
 18510   00030F                     SMT1CLK         equ	783	;# 
 18511   000310                     SMT1SIG         equ	784	;# 
 18512   000311                     SMT1WIN         equ	785	;# 
 18513   000318                     TMR0L           equ	792	;# 
 18514   000318                     TMR0            equ	792	;# 
 18515   000319                     TMR0H           equ	793	;# 
 18516   000319                     PR0             equ	793	;# 
 18517   00031A                     T0CON0          equ	794	;# 
 18518   00031B                     T0CON1          equ	795	;# 
 18519   00031C                     TMR1            equ	796	;# 
 18520   00031C                     TMR1L           equ	796	;# 
 18521   00031D                     TMR1H           equ	797	;# 
 18522   00031E                     T1CON           equ	798	;# 
 18523   00031E                     TMR1CON         equ	798	;# 
 18524   00031F                     T1GCON          equ	799	;# 
 18525   00031F                     TMR1GCON        equ	799	;# 
 18526   000320                     T1GATE          equ	800	;# 
 18527   000320                     TMR1GATE        equ	800	;# 
 18528   000321                     T1CLK           equ	801	;# 
 18529   000321                     TMR1CLK         equ	801	;# 
 18530   000321                     PR1             equ	801	;# 
 18531   000322                     T2TMR           equ	802	;# 
 18532   000322                     TMR2            equ	802	;# 
 18533   000323                     T2PR            equ	803	;# 
 18534   000323                     PR2             equ	803	;# 
 18535   000324                     T2CON           equ	804	;# 
 18536   000325                     T2HLT           equ	805	;# 
 18537   000326                     T2CLKCON        equ	806	;# 
 18538   000326                     T2CLK           equ	806	;# 
 18539   000327                     T2RST           equ	807	;# 
 18540   000328                     TMR3            equ	808	;# 
 18541   000328                     TMR3L           equ	808	;# 
 18542   000329                     TMR3H           equ	809	;# 
 18543   00032A                     T3CON           equ	810	;# 
 18544   00032A                     TMR3CON         equ	810	;# 
 18545   00032B                     T3GCON          equ	811	;# 
 18546   00032B                     TMR3GCON        equ	811	;# 
 18547   00032C                     T3GATE          equ	812	;# 
 18548   00032C                     TMR3GATE        equ	812	;# 
 18549   00032D                     T3CLK           equ	813	;# 
 18550   00032D                     TMR3CLK         equ	813	;# 
 18551   00032D                     PR3             equ	813	;# 
 18552   00032E                     T4TMR           equ	814	;# 
 18553   00032E                     TMR4            equ	814	;# 
 18554   00032F                     T4PR            equ	815	;# 
 18555   00032F                     PR4             equ	815	;# 
 18556   000330                     T4CON           equ	816	;# 
 18557   000331                     T4HLT           equ	817	;# 
 18558   000332                     T4CLKCON        equ	818	;# 
 18559   000332                     T4CLK           equ	818	;# 
 18560   000333                     T4RST           equ	819	;# 
 18561   000334                     TMR5            equ	820	;# 
 18562   000334                     TMR5L           equ	820	;# 
 18563   000335                     TMR5H           equ	821	;# 
 18564   000336                     T5CON           equ	822	;# 
 18565   000336                     TMR5CON         equ	822	;# 
 18566   000337                     T5GCON          equ	823	;# 
 18567   000337                     TMR5GCON        equ	823	;# 
 18568   000338                     T5GATE          equ	824	;# 
 18569   000338                     TMR5GATE        equ	824	;# 
 18570   000339                     T5CLK           equ	825	;# 
 18571   000339                     TMR5CLK         equ	825	;# 
 18572   000339                     PR5             equ	825	;# 
 18573   00033A                     T6TMR           equ	826	;# 
 18574   00033A                     TMR6            equ	826	;# 
 18575   00033B                     T6PR            equ	827	;# 
 18576   00033B                     PR6             equ	827	;# 
 18577   00033C                     T6CON           equ	828	;# 
 18578   00033D                     T6HLT           equ	829	;# 
 18579   00033E                     T6CLKCON        equ	830	;# 
 18580   00033E                     T6CLK           equ	830	;# 
 18581   00033F                     T6RST           equ	831	;# 
 18582   000340                     CCPR1           equ	832	;# 
 18583   000340                     CCPR1L          equ	832	;# 
 18584   000341                     CCPR1H          equ	833	;# 
 18585   000342                     CCP1CON         equ	834	;# 
 18586   000343                     CCP1CAP         equ	835	;# 
 18587   000344                     CCPR2           equ	836	;# 
 18588   000344                     CCPR2L          equ	836	;# 
 18589   000345                     CCPR2H          equ	837	;# 
 18590   000346                     CCP2CON         equ	838	;# 
 18591   000347                     CCP2CAP         equ	839	;# 
 18592   000348                     CCPR3           equ	840	;# 
 18593   000348                     CCPR3L          equ	840	;# 
 18594   000349                     CCPR3H          equ	841	;# 
 18595   00034A                     CCP3CON         equ	842	;# 
 18596   00034B                     CCP3CAP         equ	843	;# 
 18597   00034C                     CCPTMRS0        equ	844	;# 
 18598   00034F                     CRCDATA         equ	847	;# 
 18599   00034F                     CRCDATAL        equ	847	;# 
 18600   000350                     CRCDATAH        equ	848	;# 
 18601   000351                     CRCDATAU        equ	849	;# 
 18602   000352                     CRCDATAT        equ	850	;# 
 18603   000353                     CRCOUT          equ	851	;# 
 18604   000353                     CRCSHFT         equ	851	;# 
 18605   000353                     CRCXOR          equ	851	;# 
 18606   000353                     CRCOUTL         equ	851	;# 
 18607   000353                     CRCSHFTL        equ	851	;# 
 18608   000353                     CRCSHIFTL       equ	851	;# 
 18609   000353                     CRCXORL         equ	851	;# 
 18610   000354                     CRCOUTH         equ	852	;# 
 18611   000354                     CRCSHFTH        equ	852	;# 
 18612   000354                     CRCSHIFTH       equ	852	;# 
 18613   000354                     CRCXORH         equ	852	;# 
 18614   000355                     CRCOUTU         equ	853	;# 
 18615   000355                     CRCSHFTU        equ	853	;# 
 18616   000355                     CRCSHIFTU       equ	853	;# 
 18617   000355                     CRCXORU         equ	853	;# 
 18618   000356                     CRCOUTT         equ	854	;# 
 18619   000356                     CRCSHFTT        equ	854	;# 
 18620   000356                     CRCSHIFTT       equ	854	;# 
 18621   000356                     CRCXORT         equ	854	;# 
 18622   000357                     CRCCON0         equ	855	;# 
 18623   000358                     CRCCON1         equ	856	;# 
 18624   000359                     CRCCON2         equ	857	;# 
 18625   00035A                     SCANLADR        equ	858	;# 
 18626   00035A                     SCANLADRL       equ	858	;# 
 18627   00035B                     SCANLADRH       equ	859	;# 
 18628   00035C                     SCANLADRU       equ	860	;# 
 18629   00035D                     SCANHADR        equ	861	;# 
 18630   00035D                     SCANHADRL       equ	861	;# 
 18631   00035E                     SCANHADRH       equ	862	;# 
 18632   00035F                     SCANHADRU       equ	863	;# 
 18633   000360                     SCANCON0        equ	864	;# 
 18634   000361                     SCANTRIG        equ	865	;# 
 18635   000362                     IPR0            equ	866	;# 
 18636   000363                     IPR1            equ	867	;# 
 18637   000364                     IPR2            equ	868	;# 
 18638   000365                     IPR3            equ	869	;# 
 18639   000366                     IPR4            equ	870	;# 
 18640   000367                     IPR5            equ	871	;# 
 18641   000368                     IPR6            equ	872	;# 
 18642   000369                     IPR7            equ	873	;# 
 18643   00036A                     IPR8            equ	874	;# 
 18644   00036B                     IPR9            equ	875	;# 
 18645   00036C                     IPR10           equ	876	;# 
 18646   00036D                     IPR11           equ	877	;# 
 18647   00036E                     IPR12           equ	878	;# 
 18648   00036F                     IPR13           equ	879	;# 
 18649   000370                     IPR14           equ	880	;# 
 18650   000371                     IPR15           equ	881	;# 
 18651   000373                     STATUS_CSHAD    equ	883	;# 
 18652   000374                     WREG_CSHAD      equ	884	;# 
 18653   000375                     BSR_CSHAD       equ	885	;# 
 18654   000376                     SHADCON         equ	886	;# 
 18655   000377                     STATUS_SHAD     equ	887	;# 
 18656   000378                     WREG_SHAD       equ	888	;# 
 18657   000379                     BSR_SHAD        equ	889	;# 
 18658   00037A                     PCLATH_SHAD     equ	890	;# 
 18659   00037B                     PCLATU_SHAD     equ	891	;# 
 18660   00037C                     FSR0SH          equ	892	;# 
 18661   00037C                     FSR0L_SHAD      equ	892	;# 
 18662   00037D                     FSR0H_SHAD      equ	893	;# 
 18663   00037E                     FSR1SH          equ	894	;# 
 18664   00037E                     FSR1L_SHAD      equ	894	;# 
 18665   00037F                     FSR1H_SHAD      equ	895	;# 
 18666   000380                     FSR2SH          equ	896	;# 
 18667   000380                     FSR2L_SHAD      equ	896	;# 
 18668   000381                     FSR2H_SHAD      equ	897	;# 
 18669   000382                     PRODSH          equ	898	;# 
 18670   000382                     PRODL_SHAD      equ	898	;# 
 18671   000383                     PRODH_SHAD      equ	899	;# 
 18672   000387                     TU16ACON0       equ	903	;# 
 18673   000388                     TU16ACON1       equ	904	;# 
 18674   000389                     TU16AHLT        equ	905	;# 
 18675   00038A                     TU16APS         equ	906	;# 
 18676   00038B                     TU16ATMR        equ	907	;# 
 18677   00038B                     TU16ACR         equ	907	;# 
 18678   00038B                     TU16ATMRL       equ	907	;# 
 18679   00038B                     TU16ACRL        equ	907	;# 
 18680   00038C                     TU16ATMRH       equ	908	;# 
 18681   00038C                     TU16ACRH        equ	908	;# 
 18682   00038D                     TU16APR         equ	909	;# 
 18683   00038D                     TU16APRL        equ	909	;# 
 18684   00038E                     TU16APRH        equ	910	;# 
 18685   00038F                     TU16ACLK        equ	911	;# 
 18686   000390                     TU16AERS        equ	912	;# 
 18687   000393                     TU16BCON0       equ	915	;# 
 18688   000394                     TU16BCON1       equ	916	;# 
 18689   000395                     TU16BHLT        equ	917	;# 
 18690   000396                     TU16BPS         equ	918	;# 
 18691   000397                     TU16BTMR        equ	919	;# 
 18692   000397                     TU16BCR         equ	919	;# 
 18693   000397                     TU16BTMRL       equ	919	;# 
 18694   000397                     TU16BCRL        equ	919	;# 
 18695   000398                     TU16BTMRH       equ	920	;# 
 18696   000398                     TU16BCRH        equ	920	;# 
 18697   000399                     TU16BPR         equ	921	;# 
 18698   000399                     TU16BPRL        equ	921	;# 
 18699   00039A                     TU16BPRH        equ	922	;# 
 18700   00039B                     TU16BCLK        equ	923	;# 
 18701   00039C                     TU16BERS        equ	924	;# 
 18702   0003BB                     TUCHAIN         equ	955	;# 
 18703   0003BC                     CWG1CLK         equ	956	;# 
 18704   0003BC                     CWG1CLKCON      equ	956	;# 
 18705   0003BD                     CWG1ISM         equ	957	;# 
 18706   0003BE                     CWG1DBR         equ	958	;# 
 18707   0003BF                     CWG1DBF         equ	959	;# 
 18708   0003C0                     CWG1CON0        equ	960	;# 
 18709   0003C1                     CWG1CON1        equ	961	;# 
 18710   0003C2                     CWG1AS0         equ	962	;# 
 18711   0003C3                     CWG1AS1         equ	963	;# 
 18712   0003C4                     CWG1STR         equ	964	;# 
 18713   0003C5                     CWG2CLK         equ	965	;# 
 18714   0003C5                     CWG2CLKCON      equ	965	;# 
 18715   0003C6                     CWG2ISM         equ	966	;# 
 18716   0003C7                     CWG2DBR         equ	967	;# 
 18717   0003C8                     CWG2DBF         equ	968	;# 
 18718   0003C9                     CWG2CON0        equ	969	;# 
 18719   0003CA                     CWG2CON1        equ	970	;# 
 18720   0003CB                     CWG2AS0         equ	971	;# 
 18721   0003CC                     CWG2AS1         equ	972	;# 
 18722   0003CD                     CWG2STR         equ	973	;# 
 18723   0003CE                     CWG3CLK         equ	974	;# 
 18724   0003CE                     CWG3CLKCON      equ	974	;# 
 18725   0003CF                     CWG3ISM         equ	975	;# 
 18726   0003D0                     CWG3DBR         equ	976	;# 
 18727   0003D1                     CWG3DBF         equ	977	;# 
 18728   0003D2                     CWG3CON0        equ	978	;# 
 18729   0003D3                     CWG3CON1        equ	979	;# 
 18730   0003D4                     CWG3AS0         equ	980	;# 
 18731   0003D5                     CWG3AS1         equ	981	;# 
 18732   0003D6                     CWG3STR         equ	982	;# 
 18733   0003D7                     FVRCON          equ	983	;# 
 18734   0003D8                     ADCPCON         equ	984	;# 
 18735   0003D8                     ADCP            equ	984	;# 
 18736   0003D9                     ADLTH           equ	985	;# 
 18737   0003D9                     ADLTHL          equ	985	;# 
 18738   0003DA                     ADLTHH          equ	986	;# 
 18739   0003DB                     ADUTH           equ	987	;# 
 18740   0003DB                     ADUTHL          equ	987	;# 
 18741   0003DC                     ADUTHH          equ	988	;# 
 18742   0003DD                     ADERR           equ	989	;# 
 18743   0003DD                     ADERRL          equ	989	;# 
 18744   0003DE                     ADERRH          equ	990	;# 
 18745   0003DF                     ADSTPT          equ	991	;# 
 18746   0003DF                     ADSTPTL         equ	991	;# 
 18747   0003E0                     ADSTPTH         equ	992	;# 
 18748   0003E1                     ADFLTR          equ	993	;# 
 18749   0003E1                     ADFLTRL         equ	993	;# 
 18750   0003E2                     ADFLTRH         equ	994	;# 
 18751   0003E3                     ADACC           equ	995	;# 
 18752   0003E3                     ADACCL          equ	995	;# 
 18753   0003E4                     ADACCH          equ	996	;# 
 18754   0003E5                     ADACCU          equ	997	;# 
 18755   0003E6                     ADCNT           equ	998	;# 
 18756   0003E7                     ADRPT           equ	999	;# 
 18757   0003E8                     ADPREV          equ	1000	;# 
 18758   0003E8                     ADPREVL         equ	1000	;# 
 18759   0003E9                     ADPREVH         equ	1001	;# 
 18760   0003EA                     ADRES           equ	1002	;# 
 18761   0003EA                     ADRESL          equ	1002	;# 
 18762   0003EB                     ADRESH          equ	1003	;# 
 18763   0003EC                     ADPCH           equ	1004	;# 
 18764   0003EE                     ADACQ           equ	1006	;# 
 18765   0003EE                     ADACQL          equ	1006	;# 
 18766   0003EF                     ADACQH          equ	1007	;# 
 18767   0003F0                     ADCAP           equ	1008	;# 
 18768   0003F1                     ADPRE           equ	1009	;# 
 18769   0003F1                     ADPREL          equ	1009	;# 
 18770   0003F2                     ADPREH          equ	1010	;# 
 18771   0003F3                     ADCON0          equ	1011	;# 
 18772   0003F4                     ADCON1          equ	1012	;# 
 18773   0003F5                     ADCON2          equ	1013	;# 
 18774   0003F6                     ADCON3          equ	1014	;# 
 18775   0003F7                     ADSTAT          equ	1015	;# 
 18776   0003F8                     ADREF           equ	1016	;# 
 18777   0003F9                     ADACT           equ	1017	;# 
 18778   0003FA                     ADCLK           equ	1018	;# 
 18779   0003FB                     ADCTX           equ	1019	;# 
 18780   0003FC                     ADCSEL1         equ	1020	;# 
 18781   0003FD                     ADCSEL2         equ	1021	;# 
 18782   0003FE                     ADCSEL3         equ	1022	;# 
 18783   0003FF                     ADCSEL4         equ	1023	;# 
 18784   000400                     ANSELA          equ	1024	;# 
 18785   000401                     WPUA            equ	1025	;# 
 18786   000402                     ODCONA          equ	1026	;# 
 18787   000403                     SLRCONA         equ	1027	;# 
 18788   000404                     INLVLA          equ	1028	;# 
 18789   000405                     IOCAP           equ	1029	;# 
 18790   000406                     IOCAN           equ	1030	;# 
 18791   000407                     IOCAF           equ	1031	;# 
 18792   000408                     ANSELB          equ	1032	;# 
 18793   000409                     WPUB            equ	1033	;# 
 18794   00040A                     ODCONB          equ	1034	;# 
 18795   00040B                     SLRCONB         equ	1035	;# 
 18796   00040C                     INLVLB          equ	1036	;# 
 18797   00040D                     IOCBP           equ	1037	;# 
 18798   00040E                     IOCBN           equ	1038	;# 
 18799   00040F                     IOCBF           equ	1039	;# 
 18800   000410                     ANSELC          equ	1040	;# 
 18801   000411                     WPUC            equ	1041	;# 
 18802   000412                     ODCONC          equ	1042	;# 
 18803   000413                     SLRCONC         equ	1043	;# 
 18804   000414                     INLVLC          equ	1044	;# 
 18805   000415                     IOCCP           equ	1045	;# 
 18806   000416                     IOCCN           equ	1046	;# 
 18807   000417                     IOCCF           equ	1047	;# 
 18808   000421                     WPUE            equ	1057	;# 
 18809   000424                     INLVLE          equ	1060	;# 
 18810   000425                     IOCEP           equ	1061	;# 
 18811   000426                     IOCEN           equ	1062	;# 
 18812   000427                     IOCEF           equ	1063	;# 
 18813   000440                     NCO1ACC         equ	1088	;# 
 18814   000440                     NCO1ACCL        equ	1088	;# 
 18815   000441                     NCO1ACCH        equ	1089	;# 
 18816   000442                     NCO1ACCU        equ	1090	;# 
 18817   000443                     NCO1INC         equ	1091	;# 
 18818   000443                     NCO1INCL        equ	1091	;# 
 18819   000444                     NCO1INCH        equ	1092	;# 
 18820   000445                     NCO1INCU        equ	1093	;# 
 18821   000446                     NCO1CON         equ	1094	;# 
 18822   000447                     NCO1CLK         equ	1095	;# 
 18823   000448                     NCO2ACC         equ	1096	;# 
 18824   000448                     NCO2ACCL        equ	1096	;# 
 18825   000449                     NCO2ACCH        equ	1097	;# 
 18826   00044A                     NCO2ACCU        equ	1098	;# 
 18827   00044B                     NCO2INC         equ	1099	;# 
 18828   00044B                     NCO2INCL        equ	1099	;# 
 18829   00044C                     NCO2INCH        equ	1100	;# 
 18830   00044D                     NCO2INCU        equ	1101	;# 
 18831   00044E                     NCO2CON         equ	1102	;# 
 18832   00044F                     NCO2CLK         equ	1103	;# 
 18833   000450                     NCO3ACC         equ	1104	;# 
 18834   000450                     NCO3ACCL        equ	1104	;# 
 18835   000451                     NCO3ACCH        equ	1105	;# 
 18836   000452                     NCO3ACCU        equ	1106	;# 
 18837   000453                     NCO3INC         equ	1107	;# 
 18838   000453                     NCO3INCL        equ	1107	;# 
 18839   000454                     NCO3INCH        equ	1108	;# 
 18840   000455                     NCO3INCU        equ	1109	;# 
 18841   000456                     NCO3CON         equ	1110	;# 
 18842   000457                     NCO3CLK         equ	1111	;# 
 18843   000458                     FSCMCON         equ	1112	;# 
 18844   000459                     IVTLOCK         equ	1113	;# 
 18845   00045A                     IVTAD           equ	1114	;# 
 18846   00045A                     IVTADL          equ	1114	;# 
 18847   00045B                     IVTADH          equ	1115	;# 
 18848   00045C                     IVTADU          equ	1116	;# 
 18849   00045D                     IVTBASE         equ	1117	;# 
 18850   00045D                     IVTBASEL        equ	1117	;# 
 18851   00045E                     IVTBASEH        equ	1118	;# 
 18852   00045F                     IVTBASEU        equ	1119	;# 
 18853   000460                     PWM1ERS         equ	1120	;# 
 18854   000461                     PWM1CLK         equ	1121	;# 
 18855   000462                     PWM1LDS         equ	1122	;# 
 18856   000463                     PWM1PR          equ	1123	;# 
 18857   000463                     PWM1PRL         equ	1123	;# 
 18858   000464                     PWM1PRH         equ	1124	;# 
 18859   000465                     PWM1CPRE        equ	1125	;# 
 18860   000466                     PWM1PIPOS       equ	1126	;# 
 18861   000467                     PWM1GIR         equ	1127	;# 
 18862   000468                     PWM1GIE         equ	1128	;# 
 18863   000469                     PWM1CON         equ	1129	;# 
 18864   00046A                     PWM1S1CFG       equ	1130	;# 
 18865   00046B                     PWM1S1P1        equ	1131	;# 
 18866   00046B                     PWM1S1P1L       equ	1131	;# 
 18867   00046C                     PWM1S1P1H       equ	1132	;# 
 18868   00046D                     PWM1S1P2        equ	1133	;# 
 18869   00046D                     PWM1S1P2L       equ	1133	;# 
 18870   00046E                     PWM1S1P2H       equ	1134	;# 
 18871   00046F                     PWM2ERS         equ	1135	;# 
 18872   000470                     PWM2CLK         equ	1136	;# 
 18873   000471                     PWM2LDS         equ	1137	;# 
 18874   000472                     PWM2PR          equ	1138	;# 
 18875   000472                     PWM2PRL         equ	1138	;# 
 18876   000473                     PWM2PRH         equ	1139	;# 
 18877   000474                     PWM2CPRE        equ	1140	;# 
 18878   000475                     PWM2PIPOS       equ	1141	;# 
 18879   000476                     PWM2GIR         equ	1142	;# 
 18880   000477                     PWM2GIE         equ	1143	;# 
 18881   000478                     PWM2CON         equ	1144	;# 
 18882   000479                     PWM2S1CFG       equ	1145	;# 
 18883   00047A                     PWM2S1P1        equ	1146	;# 
 18884   00047A                     PWM2S1P1L       equ	1146	;# 
 18885   00047B                     PWM2S1P1H       equ	1147	;# 
 18886   00047C                     PWM2S1P2        equ	1148	;# 
 18887   00047C                     PWM2S1P2L       equ	1148	;# 
 18888   00047D                     PWM2S1P2H       equ	1149	;# 
 18889   00047E                     PWM3ERS         equ	1150	;# 
 18890   00047F                     PWM3CLK         equ	1151	;# 
 18891   000480                     PWM3LDS         equ	1152	;# 
 18892   000481                     PWM3PR          equ	1153	;# 
 18893   000481                     PWM3PRL         equ	1153	;# 
 18894   000482                     PWM3PRH         equ	1154	;# 
 18895   000483                     PWM3CPRE        equ	1155	;# 
 18896   000484                     PWM3PIPOS       equ	1156	;# 
 18897   000485                     PWM3GIR         equ	1157	;# 
 18898   000486                     PWM3GIE         equ	1158	;# 
 18899   000487                     PWM3CON         equ	1159	;# 
 18900   000488                     PWM3S1CFG       equ	1160	;# 
 18901   000489                     PWM3S1P1        equ	1161	;# 
 18902   000489                     PWM3S1P1L       equ	1161	;# 
 18903   00048A                     PWM3S1P1H       equ	1162	;# 
 18904   00048B                     PWM3S1P2        equ	1163	;# 
 18905   00048B                     PWM3S1P2L       equ	1163	;# 
 18906   00048C                     PWM3S1P2H       equ	1164	;# 
 18907   00048D                     PWM4ERS         equ	1165	;# 
 18908   00048E                     PWM4CLK         equ	1166	;# 
 18909   00048F                     PWM4LDS         equ	1167	;# 
 18910   000490                     PWM4PR          equ	1168	;# 
 18911   000490                     PWM4PRL         equ	1168	;# 
 18912   000491                     PWM4PRH         equ	1169	;# 
 18913   000492                     PWM4CPRE        equ	1170	;# 
 18914   000493                     PWM4PIPOS       equ	1171	;# 
 18915   000494                     PWM4GIR         equ	1172	;# 
 18916   000495                     PWM4GIE         equ	1173	;# 
 18917   000496                     PWM4CON         equ	1174	;# 
 18918   000497                     PWM4S1CFG       equ	1175	;# 
 18919   000498                     PWM4S1P1        equ	1176	;# 
 18920   000498                     PWM4S1P1L       equ	1176	;# 
 18921   000499                     PWM4S1P1H       equ	1177	;# 
 18922   00049A                     PWM4S1P2        equ	1178	;# 
 18923   00049A                     PWM4S1P2L       equ	1178	;# 
 18924   00049B                     PWM4S1P2H       equ	1179	;# 
 18925   00049C                     PWMLOAD         equ	1180	;# 
 18926   00049D                     PWMEN           equ	1181	;# 
 18927   00049E                     PIE0            equ	1182	;# 
 18928   00049F                     PIE1            equ	1183	;# 
 18929   0004A0                     PIE2            equ	1184	;# 
 18930   0004A1                     PIE3            equ	1185	;# 
 18931   0004A2                     PIE4            equ	1186	;# 
 18932   0004A3                     PIE5            equ	1187	;# 
 18933   0004A4                     PIE6            equ	1188	;# 
 18934   0004A5                     PIE7            equ	1189	;# 
 18935   0004A6                     PIE8            equ	1190	;# 
 18936   0004A7                     PIE9            equ	1191	;# 
 18937   0004A8                     PIE10           equ	1192	;# 
 18938   0004A9                     PIE11           equ	1193	;# 
 18939   0004AA                     PIE12           equ	1194	;# 
 18940   0004AB                     PIE13           equ	1195	;# 
 18941   0004AC                     PIE14           equ	1196	;# 
 18942   0004AD                     PIE15           equ	1197	;# 
 18943   0004AE                     PIR0            equ	1198	;# 
 18944   0004AF                     PIR1            equ	1199	;# 
 18945   0004B0                     PIR2            equ	1200	;# 
 18946   0004B1                     PIR3            equ	1201	;# 
 18947   0004B2                     PIR4            equ	1202	;# 
 18948   0004B3                     PIR5            equ	1203	;# 
 18949   0004B4                     PIR6            equ	1204	;# 
 18950   0004B5                     PIR7            equ	1205	;# 
 18951   0004B6                     PIR8            equ	1206	;# 
 18952   0004B7                     PIR9            equ	1207	;# 
 18953   0004B8                     PIR10           equ	1208	;# 
 18954   0004B9                     PIR11           equ	1209	;# 
 18955   0004BA                     PIR12           equ	1210	;# 
 18956   0004BB                     PIR13           equ	1211	;# 
 18957   0004BC                     PIR14           equ	1212	;# 
 18958   0004BD                     PIR15           equ	1213	;# 
 18959   0004BE                     LATA            equ	1214	;# 
 18960   0004BF                     LATB            equ	1215	;# 
 18961   0004C0                     LATC            equ	1216	;# 
 18962   0004C6                     TRISA           equ	1222	;# 
 18963   0004C7                     TRISB           equ	1223	;# 
 18964   0004C8                     TRISC           equ	1224	;# 
 18965   0004CA                     TRISE           equ	1226	;# 
 18966   0004CE                     PORTA           equ	1230	;# 
 18967   0004CF                     PORTB           equ	1231	;# 
 18968   0004D0                     PORTC           equ	1232	;# 
 18969   0004D2                     PORTE           equ	1234	;# 
 18970   0004D6                     INTCON0         equ	1238	;# 
 18971   0004D7                     INTCON1         equ	1239	;# 
 18972   0004D8                     STATUS          equ	1240	;# 
 18973   0004D9                     FSR2            equ	1241	;# 
 18974   0004D9                     FSR2L           equ	1241	;# 
 18975   0004DA                     FSR2H           equ	1242	;# 
 18976   0004DB                     PLUSW2          equ	1243	;# 
 18977   0004DC                     PREINC2         equ	1244	;# 
 18978   0004DD                     POSTDEC2        equ	1245	;# 
 18979   0004DE                     POSTINC2        equ	1246	;# 
 18980   0004DF                     INDF2           equ	1247	;# 
 18981   0004E0                     BSR             equ	1248	;# 
 18982   0004E1                     FSR1            equ	1249	;# 
 18983   0004E1                     FSR1L           equ	1249	;# 
 18984   0004E2                     FSR1H           equ	1250	;# 
 18985   0004E3                     PLUSW1          equ	1251	;# 
 18986   0004E4                     PREINC1         equ	1252	;# 
 18987   0004E5                     POSTDEC1        equ	1253	;# 
 18988   0004E6                     POSTINC1        equ	1254	;# 
 18989   0004E7                     INDF1           equ	1255	;# 
 18990   0004E8                     WREG            equ	1256	;# 
 18991   0004E9                     FSR0            equ	1257	;# 
 18992   0004E9                     FSR0L           equ	1257	;# 
 18993   0004EA                     FSR0H           equ	1258	;# 
 18994   0004EB                     PLUSW0          equ	1259	;# 
 18995   0004EC                     PREINC0         equ	1260	;# 
 18996   0004ED                     POSTDEC0        equ	1261	;# 
 18997   0004EE                     POSTINC0        equ	1262	;# 
 18998   0004EF                     INDF0           equ	1263	;# 
 18999   0004F0                     PCON0           equ	1264	;# 
 19000   0004F1                     PCON1           equ	1265	;# 
 19001   0004F2                     CPUDOZE         equ	1266	;# 
 19002   0004F3                     PROD            equ	1267	;# 
 19003   0004F3                     PRODL           equ	1267	;# 
 19004   0004F4                     PRODH           equ	1268	;# 
 19005   0004F5                     TABLAT          equ	1269	;# 
 19006   0004F6                     TBLPTR          equ	1270	;# 
 19007   0004F6                     TBLPTRL         equ	1270	;# 
 19008   0004F7                     TBLPTRH         equ	1271	;# 
 19009   0004F8                     TBLPTRU         equ	1272	;# 
 19010   0004F9                     PCLAT           equ	1273	;# 
 19011   0004F9                     PCL             equ	1273	;# 
 19012   0004FA                     PCLATH          equ	1274	;# 
 19013   0004FB                     PCLATU          equ	1275	;# 
 19014   0004FC                     STKPTR          equ	1276	;# 
 19015   0004FD                     TOS             equ	1277	;# 
 19016   0004FD                     TOSL            equ	1277	;# 
 19017   0004FE                     TOSH            equ	1278	;# 
 19018   0004FF                     TOSU            equ	1279	;# 
 19019   3803FA                     	org	1018	;# 
 19020   3803FA  FF                 	db	255	;# 
 19021                           
 19022                           	psect	idataBANK5
 19023   0083AA                     __pidataBANK5:
 19024                           	callstack 0
 19025                           
 19026                           ;initializer for _flashBuffer
 19027   0083AA  00                 	db	0
 19028   0083AB  37                 	db	55
 19029                           
 19030                           	psect	mediumconst
 19031   00FE58                     __pmediumconst:
 19032                           	callstack 0
 19033   00FE58  00                 	db	0
 19034   00FE59                     _priorities:
 19035                           	callstack 0
 19036   00FE59  01                 	db	1
 19037   00FE5A  01                 	db	1
 19038   00FE5B  03                 	db	3
 19039   00FE5C  02                 	db	2
 19040   00FE5D  02                 	db	2
 19041   00FE5E  02                 	db	2
 19042   00FE5F  02                 	db	2
 19043   00FE60  03                 	db	3
 19044   00FE61  02                 	db	2
 19045   00FE62  02                 	db	2
 19046   00FE63  03                 	db	3
 19047   00FE64  01                 	db	1
 19048   00FE65  00                 	db	0
 19049   00FE66  00                 	db	0
 19050   00FE67  01                 	db	1
 19051   00FE68  01                 	db	1
 19052   00FE69  01                 	db	1
 19053   00FE6A  01                 	db	1
 19054   00FE6B  01                 	db	1
 19055   00FE6C  01                 	db	1
 19056   00FE6D  01                 	db	1
 19057   00FE6E  01                 	db	1
 19058   00FE6F  01                 	db	1
 19059   00FE70  01                 	db	1
 19060   00FE71  01                 	db	1
 19061   00FE72  01                 	db	1
 19062   00FE73  01                 	db	1
 19063   00FE74  01                 	db	1
 19064   00FE75  01                 	db	1
 19065   00FE76  01                 	db	1
 19066   00FE77  01                 	db	1
 19067   00FE78  01                 	db	1
 19068   00FE79  01                 	db	1
 19069   00FE7A  01                 	db	1
 19070   00FE7B  01                 	db	1
 19071   00FE7C  01                 	db	1
 19072   00FE7D  01                 	db	1
 19073   00FE7E  01                 	db	1
 19074   00FE7F  01                 	db	1
 19075   00FE80  01                 	db	1
 19076   00FE81  01                 	db	1
 19077   00FE82  01                 	db	1
 19078   00FE83  01                 	db	1
 19079   00FE84  01                 	db	1
 19080   00FE85  01                 	db	1
 19081   00FE86  01                 	db	1
 19082   00FE87  01                 	db	1
 19083   00FE88  01                 	db	1
 19084   00FE89  01                 	db	1
 19085   00FE8A  01                 	db	1
 19086   00FE8B  01                 	db	1
 19087   00FE8C  01                 	db	1
 19088   00FE8D  01                 	db	1
 19089   00FE8E  01                 	db	1
 19090   00FE8F  01                 	db	1
 19091   00FE90  01                 	db	1
 19092   00FE91  01                 	db	1
 19093   00FE92  01                 	db	1
 19094   00FE93  01                 	db	1
 19095   00FE94  01                 	db	1
 19096   00FE95  01                 	db	1
 19097   00FE96  01                 	db	1
 19098   00FE97  01                 	db	1
 19099   00FE98  00                 	db	0
 19100   00FE99  01                 	db	1
 19101   00FE9A  01                 	db	1
 19102   00FE9B  01                 	db	1
 19103   00FE9C  01                 	db	1
 19104   00FE9D  01                 	db	1
 19105   00FE9E  01                 	db	1
 19106   00FE9F  01                 	db	1
 19107   00FEA0  01                 	db	1
 19108   00FEA1  01                 	db	1
 19109   00FEA2  00                 	db	0
 19110   00FEA3  01                 	db	1
 19111   00FEA4  01                 	db	1
 19112   00FEA5  00                 	db	0
 19113   00FEA6  00                 	db	0
 19114   00FEA7  00                 	db	0
 19115   00FEA8  00                 	db	0
 19116   00FEA9  00                 	db	0
 19117   00FEAA  00                 	db	0
 19118   00FEAB  00                 	db	0
 19119   00FEAC  00                 	db	0
 19120   00FEAD  00                 	db	0
 19121   00FEAE  00                 	db	0
 19122   00FEAF  00                 	db	0
 19123   00FEB0  00                 	db	0
 19124   00FEB1  00                 	db	0
 19125   00FEB2  00                 	db	0
 19126   00FEB3  00                 	db	0
 19127   00FEB4  00                 	db	0
 19128   00FEB5  00                 	db	0
 19129   00FEB6  01                 	db	1
 19130   00FEB7  01                 	db	1
 19131   00FEB8  01                 	db	1
 19132   00FEB9  01                 	db	1
 19133   00FEBA  01                 	db	1
 19134   00FEBB  03                 	db	3
 19135   00FEBC  01                 	db	1
 19136   00FEBD  01                 	db	1
 19137   00FEBE  01                 	db	1
 19138   00FEBF  01                 	db	1
 19139   00FEC0  01                 	db	1
 19140   00FEC1  01                 	db	1
 19141   00FEC2  01                 	db	1
 19142   00FEC3  01                 	db	1
 19143   00FEC4  00                 	db	0
 19144   00FEC5  00                 	db	0
 19145   00FEC6  00                 	db	0
 19146   00FEC7  00                 	db	0
 19147   00FEC8  00                 	db	0
 19148   00FEC9  00                 	db	0
 19149   00FECA  00                 	db	0
 19150   00FECB  00                 	db	0
 19151   00FECC  01                 	db	1
 19152   00FECD  00                 	db	0
 19153   00FECE  01                 	db	1
 19154   00FECF  01                 	db	1
 19155   00FED0  01                 	db	1
 19156   00FED1  01                 	db	1
 19157   00FED2  01                 	db	1
 19158   00FED3  01                 	db	1
 19159   00FED4  00                 	db	0
 19160   00FED5  01                 	db	1
 19161   00FED6  01                 	db	1
 19162   00FED7  01                 	db	1
 19163   00FED8  01                 	db	1
 19164   00FED9  01                 	db	1
 19165   00FEDA  01                 	db	1
 19166   00FEDB  01                 	db	1
 19167   00FEDC  00                 	db	0
 19168   00FEDD  01                 	db	1
 19169   00FEDE  01                 	db	1
 19170   00FEDF  01                 	db	1
 19171   00FEE0  01                 	db	1
 19172   00FEE1  01                 	db	1
 19173   00FEE2  01                 	db	1
 19174   00FEE3  00                 	db	0
 19175   00FEE4  01                 	db	1
 19176   00FEE5  00                 	db	0
 19177   00FEE6  00                 	db	0
 19178   00FEE7  00                 	db	0
 19179   00FEE8  00                 	db	0
 19180   00FEE9  00                 	db	0
 19181   00FEEA  00                 	db	0
 19182   00FEEB  00                 	db	0
 19183   00FEEC  00                 	db	0
 19184   00FEED  00                 	db	0
 19185   00FEEE  00                 	db	0
 19186   00FEEF  00                 	db	0
 19187   00FEF0  00                 	db	0
 19188   00FEF1  00                 	db	0
 19189   00FEF2  00                 	db	0
 19190   00FEF3  00                 	db	0
 19191   00FEF4  00                 	db	0
 19192   00FEF5  01                 	db	1
 19193   00FEF6  01                 	db	1
 19194   00FEF7  01                 	db	1
 19195   00FEF8  01                 	db	1
 19196   00FEF9  01                 	db	1
 19197   00FEFA  01                 	db	1
 19198   00FEFB  01                 	db	1
 19199   00FEFC  01                 	db	1
 19200   00FEFD  01                 	db	1
 19201   00FEFE  01                 	db	1
 19202   00FEFF  01                 	db	1
 19203   00FF00  00                 	db	0
 19204   00FF01  00                 	db	0
 19205   00FF02  01                 	db	1
 19206   00FF03  01                 	db	1
 19207   00FF04  00                 	db	0
 19208   00FF05  00                 	db	0
 19209   00FF06  00                 	db	0
 19210   00FF07  00                 	db	0
 19211   00FF08  00                 	db	0
 19212   00FF09  00                 	db	0
 19213   00FF0A  00                 	db	0
 19214   00FF0B  00                 	db	0
 19215   00FF0C  01                 	db	1
 19216   00FF0D  00                 	db	0
 19217   00FF0E  00                 	db	0
 19218   00FF0F  01                 	db	1
 19219   00FF10  01                 	db	1
 19220   00FF11  01                 	db	1
 19221   00FF12  00                 	db	0
 19222   00FF13  00                 	db	0
 19223   00FF14  00                 	db	0
 19224   00FF15  01                 	db	1
 19225   00FF16  01                 	db	1
 19226   00FF17  01                 	db	1
 19227   00FF18  01                 	db	1
 19228   00FF19  01                 	db	1
 19229   00FF1A  01                 	db	1
 19230   00FF1B  01                 	db	1
 19231   00FF1C  00                 	db	0
 19232   00FF1D  01                 	db	1
 19233   00FF1E  01                 	db	1
 19234   00FF1F  01                 	db	1
 19235   00FF20  01                 	db	1
 19236   00FF21  01                 	db	1
 19237   00FF22  01                 	db	1
 19238   00FF23  01                 	db	1
 19239   00FF24  01                 	db	1
 19240   00FF25  00                 	db	0
 19241   00FF26  00                 	db	0
 19242   00FF27  00                 	db	0
 19243   00FF28  00                 	db	0
 19244   00FF29  00                 	db	0
 19245   00FF2A  00                 	db	0
 19246   00FF2B  01                 	db	1
 19247   00FF2C  01                 	db	1
 19248   00FF2D  00                 	db	0
 19249   00FF2E  00                 	db	0
 19250   00FF2F  01                 	db	1
 19251   00FF30  01                 	db	1
 19252   00FF31  01                 	db	1
 19253   00FF32  00                 	db	0
 19254   00FF33  00                 	db	0
 19255   00FF34  00                 	db	0
 19256   00FF35  01                 	db	1
 19257   00FF36  01                 	db	1
 19258   00FF37  00                 	db	0
 19259   00FF38  01                 	db	1
 19260   00FF39  01                 	db	1
 19261   00FF3A  01                 	db	1
 19262   00FF3B  00                 	db	0
 19263   00FF3C  00                 	db	0
 19264   00FF3D  01                 	db	1
 19265   00FF3E  00                 	db	0
 19266   00FF3F  01                 	db	1
 19267   00FF40  01                 	db	1
 19268   00FF41  01                 	db	1
 19269   00FF42  01                 	db	1
 19270   00FF43  01                 	db	1
 19271   00FF44  00                 	db	0
 19272   00FF45  00                 	db	0
 19273   00FF46  00                 	db	0
 19274   00FF47  00                 	db	0
 19275   00FF48  00                 	db	0
 19276   00FF49  00                 	db	0
 19277   00FF4A  00                 	db	0
 19278   00FF4B  00                 	db	0
 19279   00FF4C  00                 	db	0
 19280   00FF4D  00                 	db	0
 19281   00FF4E  00                 	db	0
 19282   00FF4F  00                 	db	0
 19283   00FF50  00                 	db	0
 19284   00FF51  00                 	db	0
 19285   00FF52  00                 	db	0
 19286   00FF53  01                 	db	1
 19287   00FF54  00                 	db	0
 19288   00FF55  00                 	db	0
 19289   00FF56  00                 	db	0
 19290   00FF57  00                 	db	0
 19291   00FF58  00                 	db	0
 19292   00FF59                     __end_of_priorities:
 19293                           	callstack 0
 19294   00FF59                     _defaultColours:
 19295                           	callstack 0
 19296   00FF59  00                 	db	0
 19297   00FF5A  00                 	db	0
 19298   00FF5B  00                 	db	0
 19299   00FF5C  3F                 	db	63
 19300   00FF5D  3F                 	db	63
 19301   00FF5E  3F                 	db	63
 19302   00FF5F  7F                 	db	127
 19303   00FF60  00                 	db	0
 19304   00FF61  00                 	db	0
 19305   00FF62  00                 	db	0
 19306   00FF63  7F                 	db	127
 19307   00FF64  00                 	db	0
 19308   00FF65  00                 	db	0
 19309   00FF66  00                 	db	0
 19310   00FF67  7F                 	db	127
 19311   00FF68  FA                 	db	250
 19312   00FF69  7F                 	db	127
 19313   00FF6A  00                 	db	0
 19314   00FF6B  9C                 	db	156
 19315   00FF6C  00                 	db	0
 19316   00FF6D  9C                 	db	156
 19317   00FF6E  00                 	db	0
 19318   00FF6F  9C                 	db	156
 19319   00FF70  9C                 	db	156
 19320   00FF71  7F                 	db	127
 19321   00FF72  7F                 	db	127
 19322   00FF73  7F                 	db	127
 19323   00FF74  FF                 	db	255
 19324   00FF75  00                 	db	0
 19325   00FF76  00                 	db	0
 19326   00FF77  00                 	db	0
 19327   00FF78  FF                 	db	255
 19328   00FF79  00                 	db	0
 19329   00FF7A  00                 	db	0
 19330   00FF7B  00                 	db	0
 19331   00FF7C  FF                 	db	255
 19332   00FF7D  FF                 	db	255
 19333   00FF7E  FF                 	db	255
 19334   00FF7F  00                 	db	0
 19335   00FF80  FF                 	db	255
 19336   00FF81  00                 	db	0
 19337   00FF82  FF                 	db	255
 19338   00FF83  00                 	db	0
 19339   00FF84  FF                 	db	255
 19340   00FF85  FF                 	db	255
 19341   00FF86  FF                 	db	255
 19342   00FF87  FF                 	db	255
 19343   00FF88  FF                 	db	255
 19344   00FF89                     __end_of_defaultColours:
 19345                           	callstack 0
 19346   000820                     _paramBlock_absaddr set	2080
 19347   00FF89                     _services:
 19348                           	callstack 0
 19349   00FF89  EB                 	db	low _canService
 19350   00FF8A  FF                 	db	high _canService
 19351   00FF8B  DD                 	db	low _mnsService
 19352   00FF8C  FF                 	db	high _mnsService
 19353   00FF8D  CF                 	db	low _nvService
 19354   00FF8E  FF                 	db	high _nvService
 19355   00FF8F  C1                 	db	low _bootService
 19356   00FF90  FF                 	db	high _bootService
 19357   00FF91  B3                 	db	low _eventTeachService
 19358   00FF92  FF                 	db	high _eventTeachService
 19359   00FF93  A5                 	db	low _eventConsumerService
 19360   00FF94  FF                 	db	high _eventConsumerService
 19361   00FF95                     __end_of_services:
 19362                           	callstack 0
 19363   00FF95                     _bl_version:
 19364                           	callstack 0
 19365   00FF95  42                 	db	66
 19366   00FF96  4C                 	db	76
 19367   00FF97  5F                 	db	95
 19368   00FF98  56                 	db	86
 19369   00FF99  45                 	db	69
 19370   00FF9A  52                 	db	82
 19371   00FF9B  53                 	db	83
 19372   00FF9C  49                 	db	73
 19373   00FF9D  4F                 	db	79
 19374   00FF9E  4E                 	db	78
 19375   00FF9F  3D                 	db	61
 19376   00FFA0                     __end_of_bl_version:
 19377                           	callstack 0
 19378   000848                     _name_absaddr   set	2120
 19379   00FFA0                     _canPri:
 19380                           	callstack 0
 19381   00FFA0  0B                 	db	11
 19382   00FFA1  0A                 	db	10
 19383   00FFA2  09                 	db	9
 19384   00FFA3  08                 	db	8
 19385   00FFA4  00                 	db	0
 19386   00FFA5                     __end_of_canPri:
 19387                           	callstack 0
 19388   00FFA5                     _eventConsumerService:
 19389                           	callstack 0
 19390   00FFA5  06                 	db	6
 19391   00FFA6  02                 	db	2
 19392   00FFA7  00                 	db	0
 19393   00FFA8  00                 	db	0
 19394   00FFA9  3A                 	db	low _consumerPowerUp
 19395   00FFAA  7E                 	db	high _consumerPowerUp
 19396   00FFAB  B8                 	db	low _consumerProcessMessage
 19397   00FFAC  3C                 	db	high _consumerProcessMessage
 19398   00FFAD  00                 	db	0
 19399   00FFAE  00                 	db	0
 19400   00FFAF  88                 	db	low _consumerEsdData
 19401   00FFB0  82                 	db	high _consumerEsdData
 19402   00FFB1  08                 	db	low _consumerGetDiagnostic
 19403   00FFB2  80                 	db	high _consumerGetDiagnostic
 19404   00FFB3                     __end_of_eventConsumerService:
 19405                           	callstack 0
 19406   00FFB3                     _eventTeachService:
 19407                           	callstack 0
 19408   00FFB3  04                 	db	4
 19409   00FFB4  01                 	db	1
 19410   00FFB5  84                 	db	low _teachFactoryReset
 19411   00FFB6  83                 	db	high _teachFactoryReset
 19412   00FFB7  C2                 	db	low _teachPowerUp
 19413   00FFB8  7D                 	db	high _teachPowerUp
 19414   00FFB9  F8                 	db	low _teachProcessMessage
 19415   00FFBA  16                 	db	high _teachProcessMessage
 19416   00FFBB  00                 	db	0
 19417   00FFBC  00                 	db	0
 19418   00FFBD  78                 	db	low _teachGetESDdata
 19419   00FFBE  7F                 	db	high _teachGetESDdata
 19420   00FFBF  38                 	db	low _teachGetDiagnostic
 19421   00FFC0  80                 	db	high _teachGetDiagnostic
 19422   00FFC1                     __end_of_eventTeachService:
 19423                           	callstack 0
 19424   00FFC1                     _bootService:
 19425                           	callstack 0
 19426   00FFC1  0A                 	db	10
 19427   00FFC2  03                 	db	3
 19428   00FFC3  00                 	db	0
 19429   00FFC4  00                 	db	0
 19430   00FFC5  36                 	db	low _bootPowerUp
 19431   00FFC6  5C                 	db	high _bootPowerUp
 19432   00FFC7  D4                 	db	low _bootProcessMessage
 19433   00FFC8  6B                 	db	high _bootProcessMessage
 19434   00FFC9  00                 	db	0
 19435   00FFCA  00                 	db	0
 19436   00FFCB  0E                 	db	low _bootEsdData
 19437   00FFCC  7F                 	db	high _bootEsdData
 19438   00FFCD  00                 	db	0
 19439   00FFCE  00                 	db	0
 19440   00FFCF                     __end_of_bootService:
 19441                           	callstack 0
 19442   00FFCF                     _nvService:
 19443                           	callstack 0
 19444   00FFCF  02                 	db	2
 19445   00FFD0  02                 	db	2
 19446   00FFD1  82                 	db	low _nvFactoryReset
 19447   00FFD2  7D                 	db	high _nvFactoryReset
 19448   00FFD3  00                 	db	low _nvPowerUp
 19449   00FFD4  7E                 	db	high _nvPowerUp
 19450   00FFD5  98                 	db	low _nvProcessMessage
 19451   00FFD6  32                 	db	high _nvProcessMessage
 19452   00FFD7  00                 	db	0
 19453   00FFD8  00                 	db	0
 19454   00FFD9  06                 	db	low _nvGetESDdata
 19455   00FFDA  82                 	db	high _nvGetESDdata
 19456   00FFDB  A8                 	db	low _nvGetDiagnostic
 19457   00FFDC  7F                 	db	high _nvGetDiagnostic
 19458   00FFDD                     __end_of_nvService:
 19459                           	callstack 0
 19460   00FFDD                     _mnsService:
 19461                           	callstack 0
 19462   00FFDD  01                 	db	1
 19463   00FFDE  02                 	db	2
 19464   00FFDF  60                 	db	low _mnsFactoryReset
 19465   00FFE0  76                 	db	high _mnsFactoryReset
 19466   00FFE1  50                 	db	low _mnsPowerUp
 19467   00FFE2  4F                 	db	high _mnsPowerUp
 19468   00FFE3  06                 	db	low _mnsProcessMessage
 19469   00FFE4  0A                 	db	high _mnsProcessMessage
 19470   00FFE5  00                 	db	low _mnsPoll
 19471   00FFE6  26                 	db	high _mnsPoll
 19472   00FFE7  00                 	db	0
 19473   00FFE8  00                 	db	0
 19474   00FFE9  D8                 	db	low _mnsGetDiagnostic
 19475   00FFEA  7F                 	db	high _mnsGetDiagnostic
 19476   00FFEB                     __end_of_mnsService:
 19477                           	callstack 0
 19478   00FFEB                     _canService:
 19479                           	callstack 0
 19480   00FFEB  03                 	db	3
 19481   00FFEC  02                 	db	2
 19482   00FFED  A4                 	db	low _canFactoryReset
 19483   00FFEE  82                 	db	high _canFactoryReset
 19484   00FFEF  DE                 	db	low _canPowerUp
 19485   00FFF0  4D                 	db	high _canPowerUp
 19486   00FFF1  1E                 	db	low _canProcessMessage
 19487   00FFF2  5D                 	db	high _canProcessMessage
 19488   00FFF3  7E                 	db	low _canPoll
 19489   00FFF4  83                 	db	high _canPoll
 19490   00FFF5  28                 	db	low _canEsdData
 19491   00FFF6  82                 	db	high _canEsdData
 19492   00FFF7  2E                 	db	low _canGetDiagnostic
 19493   00FFF8  66                 	db	high _canGetDiagnostic
 19494   00FFF9                     __end_of_canService:
 19495                           	callstack 0
 19496   00FFF9                     _canTransport:
 19497                           	callstack 0
 19498   00FFF9  9E                 	db	low _canSendMessage
 19499   00FFFA  2A                 	db	high _canSendMessage
 19500   00FFFB  3E                 	db	low _canReceiveMessage
 19501   00FFFC  42                 	db	high _canReceiveMessage
 19502   00FFFD  36                 	db	low _canWaitForTxQueueToDrain
 19503   00FFFE  83                 	db	high _canWaitForTxQueueToDrain
 19504   00FFFF                     __end_of_canTransport:
 19505                           	callstack 0
 19506   000820                     _paramBlock_absaddr set	2080
 19507   00FFFF  00                 	db	0	; dummy byte at the end
 19508   00FE58                     __smallconst    set	__pmediumconst
 19509   00FE58                     __mediumconst   set	__pmediumconst
 19510   000003                     __activetblptr  equ	3
 19511                           
 19512                           	psect	_paramBlock_text
 19513   000820                     __p_paramBlock_text:
 19514                           	callstack 0
 19515   000820                     _paramBlock:
 19516                           	callstack 0
 19517   000820  A5                 	db	165
 19518   000821  61                 	db	97
 19519   000822  FC                 	db	252
 19520   000823  FF                 	db	255
 19521   000824  FC                 	db	252
 19522   000825  31                 	db	49
 19523   000826  01                 	db	1
 19524   000827  09                 	db	9
 19525   000828  17                 	db	23
 19526   000829  01                 	db	1
 19527   00082A  00                 	db	0
 19528   00082B  08                 	db	8
 19529   00082C  00                 	db	0
 19530   00082D  00                 	db	0
 19531   00082E  00                 	db	0
 19532   00082F  00                 	db	0
 19533   000830  00                 	db	0
 19534   000831  00                 	db	0
 19535   000832  01                 	db	1
 19536   000833  01                 	db	1
 19537   000834  00                 	db	0
 19538   000835  00                 	db	0
 19539   000836  00                 	db	0
 19540   000837  00                 	db	0
 19541   000838  14                 	db	20
 19542   000839  00                 	db	0
 19543   00083A  48                 	db	72
 19544   00083B  08                 	db	8
 19545   00083C  00                 	db	0
 19546   00083D  00                 	db	0
 19547   00083E  BE                 	db	190
 19548   00083F  04                 	db	4
 19549   000840                     __end_of_paramBlock:
 19550                           	callstack 0
 19551   000848                     _name_absaddr   set	2120
 19552                           
 19553                           	psect	_name_text
 19554   000848                     __p_name_text:
 19555                           	callstack 0
 19556   000848                     _name:
 19557                           	callstack 0
 19558   000848  41                 	db	65
 19559   000849  52                 	db	82
 19560   00084A  47                 	db	71
 19561   00084B  42                 	db	66
 19562   00084C  20                 	db	32
 19563   00084D  20                 	db	32
 19564   00084E  20                 	db	32
 19565   00084F  00                 	db	0
 19566   000850                     __end_of_name:
 19567                           	callstack 0
 19568   000043                     _NVMADR         set	67
 19569   0000F9                     _DMAnSSA        set	249
 19570   0000F0                     _DMAnDSA        set	240
 19571   0000EE                     _DMAnDSZ        set	238
 19572   0000F7                     _DMAnSSZ        set	247
 19573   000082                     _SPI1TCNT       set	130
 19574   0000AF                     _OSCCON3bits    set	175
 19575   0000AD                     _OSCCON1bits    set	173
 19576   000042                     _NVMLOCK        set	66
 19577   000046                     _NVMDATL        set	70
 19578   000043                     _NVMADRL        set	67
 19579   000044                     _NVMADRH        set	68
 19580   000045                     _NVMADRU        set	69
 19581   000040                     _NVMCON0bits    set	64
 19582   000041                     _NVMCON1bits    set	65
 19583   00006A                     _MD1CON0bits    set	106
 19584   0000FE                     _DMAnAIRQ       set	254
 19585   0000FF                     _DMAnSIRQ       set	255
 19586   0000FD                     _DMAnCON1bits   set	253
 19587   0000E8                     _DMASELECT      set	232
 19588   00006C                     _MD1SRC         set	108
 19589   00006D                     _MD1CARL        set	109
 19590   00006E                     _MD1CARH        set	110
 19591   00006B                     _MD1CON1        set	107
 19592   00006A                     _MD1CON0        set	106
 19593   0000DF                     _CLCnGLS3       set	223
 19594   0000DE                     _CLCnGLS2       set	222
 19595   0000DD                     _CLCnGLS1       set	221
 19596   0000DC                     _CLCnGLS0       set	220
 19597   0000DB                     _CLCnSEL3       set	219
 19598   0000DA                     _CLCnSEL2       set	218
 19599   0000D9                     _CLCnSEL1       set	217
 19600   0000D8                     _CLCnSEL0       set	216
 19601   0000D7                     _CLCnPOL        set	215
 19602   0000D6                     _CLCnCON        set	214
 19603   0000D5                     _CLCSELECT      set	213
 19604   00008A                     _SPI1INTF       set	138
 19605   000089                     _SPI1BAUDbits   set	137
 19606   00008C                     _SPI1CLKbits    set	140
 19607   000086                     _SPI1CON2bits   set	134
 19608   000085                     _SPI1CON1bits   set	133
 19609   000088                     _SPI1TWIDTHbits set	136
 19610   000084                     _SPI1CON0bits   set	132
 19611   0000FC                     _DMAnCON0bits   set	252
 19612   000081                     _SPI1TXB        set	129
 19613   000158                     _C1TXQUA        set	344
 19614   00017C                     _C1FIFOUA3      set	380
 19615   000170                     _C1FIFOUA2      set	368
 19616   000164                     _C1FIFOUA1      set	356
 19617   00014C                     _C1FIFOBA       set	332
 19618   000102                     _C1CONUbits     set	258
 19619   000103                     _C1CONTbits     set	259
 19620   000175                     _C1FIFOCON3Hbits set	373
 19621   000179                     _C1FIFOSTA3Hbits set	377
 19622   00016D                     _C1FIFOSTA2Hbits set	365
 19623   00016C                     _C1FIFOSTA2Lbits set	364
 19624   000138                     _C1BDIAG0Lbits  set	312
 19625   000139                     _C1BDIAG0Hbits  set	313
 19626   000136                     _C1TRECU        set	310
 19627   000160                     _C1FIFOSTA1Lbits set	352
 19628   00015D                     _C1FIFOCON1Hbits set	349
 19629   00011D                     _C1INTHbits     set	285
 19630   000178                     _C1FIFOSTA3Lbits set	376
 19631   00011F                     _C1INTTbits     set	287
 19632   00011E                     _C1INTUbits     set	286
 19633   000180                     _C1FLTCON0L     set	384
 19634   000193                     _C1MASK0T       set	403
 19635   000192                     _C1MASK0U       set	402
 19636   000191                     _C1MASK0H       set	401
 19637   000190                     _C1MASK0L       set	400
 19638   00018F                     _C1FLTOBJ0T     set	399
 19639   00018E                     _C1FLTOBJ0U     set	398
 19640   00018D                     _C1FLTOBJ0H     set	397
 19641   00018C                     _C1FLTOBJ0L     set	396
 19642   000177                     _C1FIFOCON3T    set	375
 19643   000176                     _C1FIFOCON3U    set	374
 19644   000175                     _C1FIFOCON3H    set	373
 19645   000174                     _C1FIFOCON3L    set	372
 19646   00016B                     _C1FIFOCON2T    set	363
 19647   00016A                     _C1FIFOCON2U    set	362
 19648   000169                     _C1FIFOCON2H    set	361
 19649   000168                     _C1FIFOCON2L    set	360
 19650   00015F                     _C1FIFOCON1T    set	351
 19651   00015E                     _C1FIFOCON1U    set	350
 19652   00015D                     _C1FIFOCON1H    set	349
 19653   00015C                     _C1FIFOCON1L    set	348
 19654   000153                     _C1TXQCONT      set	339
 19655   000152                     _C1TXQCONU      set	338
 19656   000151                     _C1TXQCONH      set	337
 19657   000150                     _C1TXQCONL      set	336
 19658   000107                     _C1NBTCFGT      set	263
 19659   000106                     _C1NBTCFGU      set	262
 19660   000105                     _C1NBTCFGH      set	261
 19661   000104                     _C1NBTCFGL      set	260
 19662   000103                     _C1CONT         set	259
 19663   000102                     _C1CONU         set	258
 19664   000101                     _C1CONH         set	257
 19665   000100                     _C1CONL         set	256
 19666   000101                     _C1CONHbits     set	257
 19667   00023D                     _CANRXPPS       set	573
 19668   00020B                     _RB2PPS         set	523
 19669   000217                     _RC6PPS         set	535
 19670   000216                     _RC5PPS         set	534
 19671   000215                     _RC4PPS         set	533
 19672   000214                     _RC3PPS         set	532
 19673   000213                     _RC2PPS         set	531
 19674   000212                     _RC1PPS         set	530
 19675   000211                     _RC0PPS         set	529
 19676   000318                     _TMR0L          set	792
 19677   000319                     _TMR0H          set	793
 19678   00031A                     _T0CON0bits     set	794
 19679   00031B                     _T0CON1bits     set	795
 19680   000362                     _IPR0bits       set	866
 19681   000367                     _IPR5           set	871
 19682   000330                     _T4CONbits      set	816
 19683   000324                     _T2CONbits      set	804
 19684   00032F                     _T4PR           set	815
 19685   000333                     _T4RST          set	819
 19686   000331                     _T4HLT          set	817
 19687   000332                     _T4CLKCON       set	818
 19688   000330                     _T4CON          set	816
 19689   000323                     _T2PR           set	803
 19690   000327                     _T2RST          set	807
 19691   000325                     _T2HLT          set	805
 19692   000326                     _T2CLKCON       set	806
 19693   000324                     _T2CON          set	804
 19694   001B2F                     _TMR0IP         set	6959
 19695   00250F                     _TMR0IE         set	9487
 19696   00258F                     _TMR0IF         set	9615
 19697   000459                     _IVTLOCKbits    set	1113
 19698   000459                     _IVTLOCK        set	1113
 19699   00045D                     _IVTBASEL       set	1117
 19700   00045E                     _IVTBASEH       set	1118
 19701   00045F                     _IVTBASEU       set	1119
 19702   0004BF                     _LATBbits       set	1215
 19703   0004C6                     _TRISAbits      set	1222
 19704   0004F5                     _TABLAT         set	1269
 19705   0004F6                     _TBLPTRL        set	1270
 19706   0004F7                     _TBLPTRH        set	1271
 19707   0004F8                     _TBLPTRU        set	1272
 19708   0004CE                     _PORTAbits      set	1230
 19709   00049E                     _PIE0bits       set	1182
 19710   0004AE                     _PIR0bits       set	1198
 19711   0004C7                     _TRISBbits      set	1223
 19712   0004C0                     _LATCbits       set	1216
 19713   0004B1                     _PIR3bits       set	1201
 19714   0004C8                     _TRISC          set	1224
 19715   0004D6                     _INTCON0bits    set	1238
 19716   000410                     _ANSELC         set	1040
 19717   000408                     _ANSELB         set	1032
 19718   000400                     _ANSELA         set	1024
 19719                           
 19720                           ; #config settings
 19721                           
 19722                           	psect	cinit
 19723   0072C0                     __pcinit:
 19724                           	callstack 0
 19725   0072C0                     start_initialization:
 19726                           	callstack 0
 19727   0072C0                     __initialization:
 19728                           	callstack 0
 19729                           
 19730                           ; Initialize objects allocated to BANK5 (2 bytes)
 19731                           ; load TBLPTR registers with __pidataBANK5
 19732   0072C0  0EAA               	movlw	low __pidataBANK5
 19733   0072C2  6EF6               	movwf	tblptrl,c
 19734   0072C4  0E83               	movlw	high __pidataBANK5
 19735   0072C6  6EF7               	movwf	tblptrh,c
 19736   0072C8  0E00               	movlw	low (__pidataBANK5 shr (0+16))
 19737   0072CA  6EF8               	movwf	tblptru,c
 19738   0072CC  0009               	tblrd		*+	;fetch initializer
 19739   0072CE  C4F5 F5FD          	movff	tablat,__pdataBANK5
 19740   0072D2  0009               	tblrd		*+	;fetch initializer
 19741   0072D4  C4F5 F5FE          	movff	tablat,__pdataBANK5+1
 19742                           
 19743                           ; Clear objects allocated to BIGRAM (1405 bytes)
 19744   0072D8  EE02  F0FC         	lfsr	0,__pbssBIGRAM
 19745   0072DC  EE11 F17D          	lfsr	1,1405
 19746   0072E0                     clear_0:
 19747   0072E0  6AEE               	clrf	postinc0,c
 19748   0072E2  50E5               	movf	postdec1,w,c
 19749   0072E4  50E1               	movf	fsr1l,w,c
 19750   0072E6  E1FC               	bnz	clear_0
 19751   0072E8  50E2               	movf	fsr1h,w,c
 19752   0072EA  E1FA               	bnz	clear_0
 19753                           
 19754                           ; Clear objects allocated to BANK8 (252 bytes)
 19755   0072EC  EE02  F000         	lfsr	0,__pbssBANK8
 19756   0072F0  0EFC               	movlw	252
 19757   0072F2                     clear_1:
 19758   0072F2  6AEE               	clrf	postinc0,c
 19759   0072F4  06E8               	decf	wreg,f,c
 19760   0072F6  E1FD               	bnz	clear_1
 19761                           
 19762                           ; Clear objects allocated to BANK7 (255 bytes)
 19763   0072F8  EE01  F300         	lfsr	0,__pbssBANK7
 19764   0072FC  EE10 F0FF          	lfsr	1,255
 19765   007300                     clear_2:
 19766   007300  6AEE               	clrf	postinc0,c
 19767   007302  50E5               	movf	postdec1,w,c
 19768   007304  50E1               	movf	fsr1l,w,c
 19769   007306  E1FC               	bnz	clear_2
 19770   007308  50E2               	movf	fsr1h,w,c
 19771   00730A  E1FA               	bnz	clear_2
 19772                           
 19773                           ; Clear objects allocated to BANK6 (189 bytes)
 19774   00730C  EE01  F200         	lfsr	0,__pbssBANK6
 19775   007310  0EBD               	movlw	189
 19776   007312                     clear_3:
 19777   007312  6AEE               	clrf	postinc0,c
 19778   007314  06E8               	decf	wreg,f,c
 19779   007316  E1FD               	bnz	clear_3
 19780                           
 19781                           ; Clear objects allocated to BANK5 (112 bytes)
 19782   007318  EE01  F160         	lfsr	0,__pbssBANK5
 19783   00731C  0E70               	movlw	112
 19784   00731E                     clear_4:
 19785   00731E  6AEE               	clrf	postinc0,c
 19786   007320  06E8               	decf	wreg,f,c
 19787   007322  E1FD               	bnz	clear_4
 19788                           
 19789                           ;
 19790                           ; Setup IVTBASE
 19791                           ;
 19792   00045D                     IVTBASEL        equ	1117
 19793   00045E                     IVTBASEH        equ	1118
 19794   00045F                     IVTBASEU        equ	1119
 19795   007324  0104               	movlb	4
 19796   007326  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 19797   007328  6F5D               	movwf	93,b
 19798   00732A  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 19799   00732C  6F5E               	movwf	94,b
 19800   00732E  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 19801   007330  6F5F               	movwf	95,b
 19802   007332                     end_of_initialization:
 19803                           	callstack 0
 19804   007332                     __end_of__initialization:
 19805                           	callstack 0
 19806   007332  0100               	movlb	0
 19807   007334  EFB1  F031         	goto	_main	;jump to C main() function
 19808                           
 19809                           	psect	bssBANK5
 19810   000560                     __pbssBANK5:
 19811                           	callstack 0
 19812   000560                     _timedResponseTime:
 19813                           	callstack 0
 19814   000560                     	ds	4
 19815   000564                     _ledTimer:
 19816                           	callstack 0
 19817   000564                     	ds	4
 19818   000568                     _uptimeTimer:
 19819                           	callstack 0
 19820   000568                     	ds	4
 19821   00056C                     _heartbeatTimer:
 19822                           	callstack 0
 19823   00056C                     	ds	4
 19824   000570                     _pbTimer:
 19825                           	callstack 0
 19826   000570                     	ds	4
 19827   000574                     _enumerationStartTime:
 19828                           	callstack 0
 19829   000574                     	ds	4
 19830   000578                     _subtestTime:
 19831                           	callstack 0
 19832   000578                     	ds	4
 19833   00057C                     _testTime:
 19834                           	callstack 0
 19835   00057C                     	ds	4
 19836   000580                     _flashTime:
 19837                           	callstack 0
 19838   000580                     	ds	4
 19839   000584                     _flashBlock:
 19840                           	callstack 0
 19841   000584                     	ds	3
 19842   000587                     _timedResponseCallback:
 19843                           	callstack 0
 19844   000587                     	ds	2
 19845   000589                     _flashCounter:
 19846                           	callstack 0
 19847   000589                     	ds	2
 19848   00058B                     _ledState:
 19849                           	callstack 0
 19850   00058B                     	ds	2
 19851   00058D                     _previousNN:
 19852                           	callstack 0
 19853   00058D                     	ds	2
 19854   00058F                     _nn:
 19855                           	callstack 0
 19856   00058F                     	ds	2
 19857   000591                     _transport:
 19858                           	callstack 0
 19859   000591                     	ds	2
 19860   000593                     _timedResponseDelay:
 19861                           	callstack 0
 19862   000593                     	ds	1
 19863   000594                     _eeBootFlag:
 19864                           	callstack 0
 19865   000594                     	ds	1
 19866   000595                     _timedResponseStep:
 19867                           	callstack 0
 19868   000595                     	ds	1
 19869   000596                     _timedResponseType:
 19870                           	callstack 0
 19871   000596                     	ds	1
 19872   000597                     _timedResponseAllServicesFlag:
 19873                           	callstack 0
 19874   000597                     	ds	1
 19875   000598                     _timedResponseServiceIndex:
 19876                           	callstack 0
 19877   000598                     	ds	1
 19878   000599                     _timerExtension2:
 19879                           	callstack 0
 19880   000599                     	ds	1
 19881   00059A                     _timerExtension1:
 19882                           	callstack 0
 19883   00059A                     	ds	1
 19884   00059B                     _flashFlags:
 19885                           	callstack 0
 19886   00059B                     	ds	1
 19887   00059C                     _heartbeatSequence:
 19888                           	callstack 0
 19889   00059C                     	ds	1
 19890   00059D                     _pbWasPushed:
 19891                           	callstack 0
 19892   00059D                     	ds	1
 19893   00059E                     _setupModePreviousMode:
 19894                           	callstack 0
 19895   00059E                     	ds	1
 19896   00059F                     _last_mode_flags:
 19897                           	callstack 0
 19898   00059F                     	ds	1
 19899   0005A0                     _last_mode_state:
 19900                           	callstack 0
 19901   0005A0                     	ds	1
 19902   0005A1                     _mode_state:
 19903                           	callstack 0
 19904   0005A1                     	ds	1
 19905   0005A2                     _timedResponseOpcode:
 19906                           	callstack 0
 19907   0005A2                     	ds	1
 19908   0005A3                     _errno:
 19909                           	callstack 0
 19910   0005A3                     	ds	1
 19911   0005A4                     _mode_flags:
 19912                           	callstack 0
 19913   0005A4                     	ds	1
 19914   0005A5                     _enumerationState:
 19915                           	callstack 0
 19916   0005A5                     	ds	1
 19917   0005A6                     _EnumerationState:
 19918                           	callstack 0
 19919   0005A6                     	ds	1
 19920   0005A7                     _canTransmitFailed:
 19921                           	callstack 0
 19922   0005A7                     	ds	1
 19923   0005A8                     _canId:
 19924                           	callstack 0
 19925   0005A8                     	ds	1
 19926   0005A9                     _bootloaderVersion:
 19927                           	callstack 0
 19928   0005A9                     	ds	1
 19929   0005AA                     _bootloaderType:
 19930                           	callstack 0
 19931   0005AA                     	ds	1
 19932   0005AB                     _refreshRequired:
 19933                           	callstack 0
 19934   0005AB                     	ds	1
 19935   0005AC                     _flashState:
 19936                           	callstack 0
 19937   0005AC                     	ds	1
 19938   0005AD                     _mnsDiagnostics:
 19939                           	callstack 0
 19940   0005AD                     	ds	14
 19941   0005BB                     _nvDiagnostics:
 19942                           	callstack 0
 19943   0005BB                     	ds	6
 19944   0005C1                     _consumerDiagnostics:
 19945                           	callstack 0
 19946   0005C1                     	ds	6
 19947   0005C7                     _rxQueue:
 19948                           	callstack 0
 19949   0005C7                     	ds	5
 19950   0005CC                     _teachDiagnostics:
 19951                           	callstack 0
 19952   0005CC                     	ds	4
 19953                           
 19954                           	psect	dataBANK5
 19955   0005FD                     __pdataBANK5:
 19956                           	callstack 0
 19957   0005FD                     _flashBuffer:
 19958                           	callstack 0
 19959   0005FD                     	ds	2
 19960                           
 19961                           	psect	bssBANK6
 19962   000600                     __pbssBANK6:
 19963                           	callstack 0
 19964   000600                     _nvCache:
 19965                           	callstack 0
 19966   000600                     	ds	50
 19967   000632                     _enumerationResults:
 19968                           	callstack 0
 19969   000632                     	ds	16
 19970   000642                     _flashFlushTime:
 19971                           	callstack 0
 19972   000642                     	ds	4
 19973   000646                     _rxBuffers:
 19974                           	callstack 0
 19975   000646                     	ds	72
 19976   00068E                     _canDiagnostics:
 19977                           	callstack 0
 19978   00068E                     	ds	38
 19979   0006B4                     _tmpMessage:
 19980                           	callstack 0
 19981   0006B4                     	ds	9
 19982                           
 19983                           	psect	bssBANK7
 19984   000700                     __pbssBANK7:
 19985                           	callstack 0
 19986   000700                     _ledPaletteIndexes:
 19987                           	callstack 0
 19988   000700                     	ds	255
 19989                           
 19990                           	psect	bssBANK8
 19991   000800                     __pbssBANK8:
 19992                           	callstack 0
 19993   000800                     _evs:
 19994                           	callstack 0
 19995   000800                     	ds	252
 19996                           
 19997                           	psect	bssBIGRAM
 19998   0008FC                     __pbssBIGRAM:
 19999                           	callstack 0
 20000   0008FC                     _eventChains:
 20001                           	callstack 0
 20002   0008FC                     	ds	640
 20003   000B7C                     _leds:
 20004                           	callstack 0
 20005   000B7C                     	ds	765
 20006                           
 20007                           	psect	cstackBANK5
 20008   0005D0                     __pcstackBANK5:
 20009                           	callstack 0
 20010   0005D0                     ??_mnsProcessMessage:
 20011                           
 20012                           ; 1 bytes @ 0x0
 20013   0005D0                     	ds	30
 20014   0005EE                     ??_poll:
 20015                           
 20016                           ; 1 bytes @ 0x1E
 20017   0005EE                     	ds	4
 20018   0005F2                     poll@handled:
 20019                           	callstack 0
 20020                           
 20021                           ; 1 bytes @ 0x22
 20022   0005F2                     	ds	1
 20023   0005F3                     poll@i:
 20024                           	callstack 0
 20025                           
 20026                           ; 1 bytes @ 0x23
 20027   0005F3                     	ds	1
 20028   0005F4                     poll@m:
 20029                           	callstack 0
 20030                           
 20031                           ; 9 bytes @ 0x24
 20032   0005F4                     	ds	9
 20033                           
 20034                           	psect	cstackCOMRAM
 20035   000501                     __pcstackCOMRAM:
 20036                           	callstack 0
 20037   000501                     ?_getNV:
 20038                           	callstack 0
 20039   000501                     ?_getNextWriteMessage:
 20040                           	callstack 0
 20041   000501                     ?_pop:
 20042                           	callstack 0
 20043   000501                     ?___awdiv:
 20044                           	callstack 0
 20045   000501                     ?___awmod:
 20046                           	callstack 0
 20047   000501                     ?_tickGet:
 20048                           	callstack 0
 20049   000501                     ?___lmul:
 20050                           	callstack 0
 20051   000501                     initARGB@ledno:
 20052                           	callstack 0
 20053   000501                     updateLedRange@end_ledno:
 20054                           	callstack 0
 20055   000501                     APP_nvValidate@value:
 20056                           	callstack 0
 20057   000501                     APP_nvValueChanged@value:
 20058                           	callstack 0
 20059   000501                     bootEsdData@id:
 20060                           	callstack 0
 20061   000501                     canEsdData@id:
 20062                           	callstack 0
 20063   000501                     CAN1_OperationModeSet@status:
 20064                           	callstack 0
 20065   000501                     consumerPowerUp@temp:
 20066                           	callstack 0
 20067   000501                     isConsumedEvent@eventIndex:
 20068                           	callstack 0
 20069   000501                     consumerEsdData@index:
 20070                           	callstack 0
 20071   000501                     teachGetESDdata@id:
 20072                           	callstack 0
 20073   000501                     evtIdxToTableIndex@evtIdx:
 20074                           	callstack 0
 20075   000501                     tableIndexToEvtIdx@tableIndex:
 20076                           	callstack 0
 20077   000501                     nvGetESDdata@id:
 20078                           	callstack 0
 20079   000501                     setTimedResponseDelay@delay:
 20080                           	callstack 0
 20081   000501                     _isEvent$5824:
 20082                           	callstack 0
 20083   000501                     APP_preProcessMessage@m:
 20084                           	callstack 0
 20085   000501                     APP_postProcessMessage@m:
 20086                           	callstack 0
 20087   000501                     refreshString@offset:
 20088                           	callstack 0
 20089   000501                     prepareSelfEnumResponse@txFifoObj:
 20090                           	callstack 0
 20091   000501                     sendRTR@txFifoObj:
 20092                           	callstack 0
 20093   000501                     getNextWriteMessage@q:
 20094                           	callstack 0
 20095   000501                     pop@q:
 20096                           	callstack 0
 20097   000501                     ___awdiv@dividend:
 20098                           	callstack 0
 20099   000501                     ___awmod@dividend:
 20100                           	callstack 0
 20101   000501                     memcpy@d1:
 20102                           	callstack 0
 20103   000501                     EEPROM_Read@index:
 20104                           	callstack 0
 20105   000501                     EEPROM_WriteNoVerify@index:
 20106                           	callstack 0
 20107   000501                     FLASH_Read@address:
 20108                           	callstack 0
 20109   000501                     ___lmul@multiplier:
 20110                           	callstack 0
 20111   000501                     ??_getNumTxBuffersInUse:
 20112   000501                     ??_getNumRxBuffersInUse:
 20113   000501                     ??_have:
 20114   000501                     ??_findServiceIndex:
 20115   000501                     ??_showStatus:
 20116   000501                     ??_eraseFlashBlock:
 20117   000501                     ??_loadFlashBlock:
 20118   000501                     ??_initTicker:
 20119   000501                     
 20120                           ; 1 bytes @ 0x0
 20121   000501                     	ds	1
 20122   000502                     updateLedRange@colourIndexPair:
 20123                           	callstack 0
 20124   000502                     APP_nvValueChanged@oldValue:
 20125                           	callstack 0
 20126   000502                     CAN1_OperationModeSet@requestMode:
 20127                           	callstack 0
 20128   000502                     initTicker@priority:
 20129                           	callstack 0
 20130   000502                     isEvent@opc:
 20131                           	callstack 0
 20132   000502                     
 20133                           ; 1 bytes @ 0x1
 20134   000502                     	ds	1
 20135   000503                     updateLedRange@start_ledno:
 20136                           	callstack 0
 20137   000503                     showStatus@s:
 20138                           	callstack 0
 20139   000503                     initTicker@divider:
 20140                           	callstack 0
 20141   000503                     findServiceIndex@serviceType:
 20142                           	callstack 0
 20143   000503                     have@id:
 20144                           	callstack 0
 20145   000503                     ___awdiv@divisor:
 20146                           	callstack 0
 20147   000503                     ___awmod@divisor:
 20148                           	callstack 0
 20149   000503                     memcpy@s1:
 20150                           	callstack 0
 20151   000503                     ??_getNV:
 20152   000503                     ??_getNextWriteMessage:
 20153   000503                     ??_pop:
 20154   000503                     
 20155                           ; 1 bytes @ 0x2
 20156   000503                     	ds	1
 20157   000504                     updateLedRange@ledno:
 20158                           	callstack 0
 20159   000504                     getNV@index:
 20160                           	callstack 0
 20161   000504                     EEPROM_WriteNoVerify@value:
 20162                           	callstack 0
 20163   000504                     eraseFlashBlock@interruptEnabled:
 20164                           	callstack 0
 20165   000504                     initTicker@i:
 20166                           	callstack 0
 20167   000504                     findServiceIndex@i:
 20168                           	callstack 0
 20169   000504                     have@i:
 20170                           	callstack 0
 20171   000504                     ??_EEPROM_Read:
 20172   000504                     ??_FLASH_Read:
 20173                           
 20174                           ; 1 bytes @ 0x3
 20175   000504                     	ds	1
 20176   000505                     doFlash@order:
 20177                           	callstack 0
 20178   000505                     getParameterFlags@flags:
 20179                           	callstack 0
 20180   000505                     flushFlashBlock@interruptEnabled:
 20181                           	callstack 0
 20182   000505                     tickGet@IntFlag2:
 20183                           	callstack 0
 20184   000505                     startTimedResponse@serviceIndex:
 20185                           	callstack 0
 20186   000505                     ___awdiv@counter:
 20187                           	callstack 0
 20188   000505                     ___awmod@counter:
 20189                           	callstack 0
 20190   000505                     getNumTxBuffersInUse@i16:
 20191                           	callstack 0
 20192   000505                     getNumRxBuffersInUse@i16:
 20193                           	callstack 0
 20194   000505                     memcpy@n:
 20195                           	callstack 0
 20196   000505                     ___lmul@multiplicand:
 20197                           	callstack 0
 20198   000505                     ??_EEPROM_WriteNoVerify:
 20199   000505                     
 20200                           ; 1 bytes @ 0x4
 20201   000505                     	ds	1
 20202   000506                     doFlash@ledno:
 20203                           	callstack 0
 20204   000506                     tickGet@IntFlag1:
 20205                           	callstack 0
 20206   000506                     ___awdiv@sign:
 20207                           	callstack 0
 20208   000506                     ___awmod@sign:
 20209                           	callstack 0
 20210   000506                     startTimedResponse@callback:
 20211                           	callstack 0
 20212   000506                     FLASH_Write@index:
 20213                           	callstack 0
 20214   000506                     ??_getParameter:
 20215                           
 20216                           ; 1 bytes @ 0x5
 20217   000506                     	ds	1
 20218   000507                     ?_readNVM:
 20219                           	callstack 0
 20220   000507                     ?_canGetDiagnostic:
 20221                           	callstack 0
 20222   000507                     ?_consumerGetDiagnostic:
 20223                           	callstack 0
 20224   000507                     ?_teachGetDiagnostic:
 20225                           	callstack 0
 20226   000507                     ?_mnsGetDiagnostic:
 20227                           	callstack 0
 20228   000507                     ?_nvGetDiagnostic:
 20229                           	callstack 0
 20230   000507                     ___awdiv@quotient:
 20231                           	callstack 0
 20232   000507                     memcpy@d:
 20233                           	callstack 0
 20234   000507                     readNVM@index:
 20235                           	callstack 0
 20236   000507                     tickGet@currentTime:
 20237                           	callstack 0
 20238   000507                     
 20239                           ; 1 bytes @ 0x6
 20240   000507                     	ds	1
 20241   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 20242                           	callstack 0
 20243   000508                     startTimedResponse@type:
 20244                           	callstack 0
 20245   000508                     pop@ret:
 20246                           	callstack 0
 20247   000508                     
 20248                           ; 1 bytes @ 0x7
 20249   000508                     	ds	1
 20250   000509                     consumerGetDiagnostic@index:
 20251                           	callstack 0
 20252   000509                     teachGetDiagnostic@index:
 20253                           	callstack 0
 20254   000509                     mnsGetDiagnostic@index:
 20255                           	callstack 0
 20256   000509                     getParameter@idx:
 20257                           	callstack 0
 20258   000509                     nvGetDiagnostic@index:
 20259                           	callstack 0
 20260   000509                     FLASH_Write@value:
 20261                           	callstack 0
 20262   000509                     memcpy@s:
 20263                           	callstack 0
 20264   000509                     EEPROM_Write@index:
 20265                           	callstack 0
 20266   000509                     ___lmul@product:
 20267                           	callstack 0
 20268   000509                     ??_canGetDiagnostic:
 20269   000509                     ??_APP_nvDefault:
 20270   000509                     
 20271                           ; 1 bytes @ 0x8
 20272   000509                     	ds	1
 20273   00050A                     canGetDiagnostic@index:
 20274                           	callstack 0
 20275   00050A                     ??_readNVM:
 20276   00050A                     ??_FLASH_Write:
 20277                           
 20278                           ; 1 bytes @ 0x9
 20279   00050A                     	ds	1
 20280   00050B                     ?___lldiv:
 20281                           	callstack 0
 20282   00050B                     APP_nvDefault@index:
 20283                           	callstack 0
 20284   00050B                     startEnumeration@txWaiting:
 20285                           	callstack 0
 20286   00050B                     memcpy@tmp:
 20287                           	callstack 0
 20288   00050B                     ___lldiv@dividend:
 20289                           	callstack 0
 20290   00050B                     ??_handleSelfEnumeration:
 20291   00050B                     ??_APP_testMode:
 20292   00050B                     ??_loop:
 20293   00050B                     ??_leds_poll:
 20294                           
 20295                           ; 1 bytes @ 0xA
 20296   00050B                     	ds	1
 20297   00050C                     startEnumeration@i:
 20298                           	callstack 0
 20299   00050C                     getNextWriteMessage@wr:
 20300                           	callstack 0
 20301   00050C                     EEPROM_Write@value:
 20302                           	callstack 0
 20303   00050C                     readNVM@type:
 20304                           	callstack 0
 20305                           
 20306                           ; 1 bytes @ 0xB
 20307   00050C                     	ds	1
 20308   00050D                     ?_getEN:
 20309                           	callstack 0
 20310   00050D                     ?_getNN:
 20311                           	callstack 0
 20312   00050D                     ?_getEv:
 20313                           	callstack 0
 20314   00050D                     bootPowerUp@b:
 20315                           	callstack 0
 20316   00050D                     getEv@evNum:
 20317                           	callstack 0
 20318   00050D                     mnsPowerUp@i:
 20319                           	callstack 0
 20320   00050D                     canPowerUp@temp:
 20321                           	callstack 0
 20322   00050D                     canSendMessage@mp:
 20323                           	callstack 0
 20324   00050D                     ??_getEVs:
 20325   00050D                     ??_loadNvCache:
 20326   00050D                     
 20327                           ; 1 bytes @ 0xC
 20328   00050D                     	ds	1
 20329   00050E                     bootPowerUp@found:
 20330                           	callstack 0
 20331   00050E                     mnsPowerUp@temp:
 20332                           	callstack 0
 20333   00050E                     writeNVM@index:
 20334                           	callstack 0
 20335                           
 20336                           ; 3 bytes @ 0xD
 20337   00050E                     	ds	1
 20338   00050F                     APP_testMode@c:
 20339                           	callstack 0
 20340   00050F                     bootPowerUp@i:
 20341                           	callstack 0
 20342   00050F                     handleSelfEnumeration@receivedCanId:
 20343                           	callstack 0
 20344   00050F                     loadNvCache@temp:
 20345                           	callstack 0
 20346   00050F                     ___lldiv@divisor:
 20347                           	callstack 0
 20348   00050F                     ??_canSendMessage:
 20349   00050F                     ??_getEN:
 20350   00050F                     ??_getNN:
 20351   00050F                     ??_getEv:
 20352                           
 20353                           ; 1 bytes @ 0xE
 20354   00050F                     	ds	1
 20355   000510                     APP_testMode@step:
 20356                           	callstack 0
 20357   000510                     canReceiveMessage@m:
 20358                           	callstack 0
 20359   000510                     bootPowerUp@a:
 20360                           	callstack 0
 20361                           
 20362                           ; 3 bytes @ 0xF
 20363   000510                     	ds	1
 20364   000511                     APP_testMode@i:
 20365                           	callstack 0
 20366   000511                     loadNvCache@i:
 20367                           	callstack 0
 20368   000511                     writeNVM@value:
 20369                           	callstack 0
 20370                           
 20371                           ; 1 bytes @ 0x10
 20372   000511                     	ds	1
 20373   000512                     nvPowerUp@i:
 20374                           	callstack 0
 20375   000512                     ??_writeNVM:
 20376   000512                     ??_canReceiveMessage:
 20377   000512                     
 20378                           ; 1 bytes @ 0x11
 20379   000512                     	ds	1
 20380   000513                     canReceiveMessage@incomingCanId:
 20381                           	callstack 0
 20382   000513                     ___lldiv@quotient:
 20383                           	callstack 0
 20384   000513                     
 20385                           ; 1 bytes @ 0x12
 20386   000513                     	ds	1
 20387   000514                     writeNVM@type:
 20388                           	callstack 0
 20389   000514                     canReceiveMessage@mp:
 20390                           	callstack 0
 20391                           
 20392                           ; 2 bytes @ 0x13
 20393   000514                     	ds	1
 20394   000515                     setNewCanId@newCanId:
 20395                           	callstack 0
 20396   000515                     writeEv@evNum:
 20397                           	callstack 0
 20398   000515                     setNV@value:
 20399                           	callstack 0
 20400   000515                     canSendMessage@temp:
 20401                           	callstack 0
 20402   000515                     ??_nvFactoryReset:
 20403                           
 20404                           ; 1 bytes @ 0x14
 20405   000515                     	ds	1
 20406   000516                     writeEv@evVal:
 20407                           	callstack 0
 20408   000516                     canReceiveMessage@temp:
 20409                           	callstack 0
 20410   000516                     getNN@hi:
 20411                           	callstack 0
 20412   000516                     getEN@hi:
 20413                           	callstack 0
 20414   000516                     ??_processEnumeration:
 20415   000516                     ??_setNV:
 20416                           
 20417                           ; 1 bytes @ 0x15
 20418   000516                     	ds	1
 20419   000517                     nvFactoryReset@i:
 20420                           	callstack 0
 20421   000517                     ___lldiv@counter:
 20422                           	callstack 0
 20423   000517                     canSendMessage@m:
 20424                           	callstack 0
 20425   000517                     ??_writeEv:
 20426                           
 20427                           ; 1 bytes @ 0x16
 20428   000517                     	ds	1
 20429   000518                     setNV@oldValue:
 20430                           	callstack 0
 20431   000518                     canReceiveMessage@rxFifoObj:
 20432                           	callstack 0
 20433   000518                     getNN@lo:
 20434                           	callstack 0
 20435   000518                     getEN@lo:
 20436                           	callstack 0
 20437   000518                     ??_pbDownTimer:
 20438   000518                     ??_pbUpTimer:
 20439                           
 20440                           ; 1 bytes @ 0x17
 20441   000518                     	ds	1
 20442   000519                     setNV@index:
 20443                           	callstack 0
 20444   000519                     canSendMessage@txFifoObj:
 20445                           	callstack 0
 20446                           
 20447                           ; 2 bytes @ 0x18
 20448   000519                     	ds	1
 20449   00051A                     processEnumeration@enumResult:
 20450                           	callstack 0
 20451   00051A                     getEVs@tableIndex:
 20452                           	callstack 0
 20453   00051A                     getNN@flags:
 20454                           	callstack 0
 20455   00051A                     getEN@tableIndex:
 20456                           	callstack 0
 20457                           
 20458                           ; 1 bytes @ 0x19
 20459   00051A                     	ds	1
 20460   00051B                     processEnumeration@newCanId:
 20461                           	callstack 0
 20462   00051B                     getEVs@evIdx:
 20463                           	callstack 0
 20464   00051B                     getNN@tableIndex:
 20465                           	callstack 0
 20466   00051B                     sendMessage@len:
 20467                           	callstack 0
 20468                           
 20469                           ; 1 bytes @ 0x1A
 20470   00051B                     	ds	1
 20471   00051C                     processEnumeration@i:
 20472                           	callstack 0
 20473   00051C                     getEv@tableIndex:
 20474                           	callstack 0
 20475   00051C                     pbDownTimer@timeout:
 20476                           	callstack 0
 20477   00051C                     pbUpTimer@timeout:
 20478                           	callstack 0
 20479   00051C                     sendMessage@data1:
 20480                           	callstack 0
 20481   00051C                     APP_processConsumedEvent@m:
 20482                           	callstack 0
 20483   00051C                     getHash@nn:
 20484                           	callstack 0
 20485                           
 20486                           ; 2 bytes @ 0x1B
 20487   00051C                     	ds	1
 20488   00051D                     sendMessage@data2:
 20489                           	callstack 0
 20490   00051D                     
 20491                           ; 1 bytes @ 0x1C
 20492   00051D                     	ds	1
 20493   00051E                     APP_processConsumedEvent@tableIndex:
 20494                           	callstack 0
 20495   00051E                     sendMessage@data3:
 20496                           	callstack 0
 20497   00051E                     getHash@en:
 20498                           	callstack 0
 20499   00051E                     
 20500                           ; 1 bytes @ 0x1D
 20501   00051E                     	ds	1
 20502   00051F                     APP_processConsumedEvent@onOff:
 20503                           	callstack 0
 20504   00051F                     sendMessage@data4:
 20505                           	callstack 0
 20506                           
 20507                           ; 1 bytes @ 0x1E
 20508   00051F                     	ds	1
 20509   000520                     APP_processConsumedEvent@action:
 20510                           	callstack 0
 20511   000520                     sendMessage@data5:
 20512                           	callstack 0
 20513   000520                     ??_getHash:
 20514                           
 20515                           ; 1 bytes @ 0x1F
 20516   000520                     	ds	1
 20517   000521                     APP_processConsumedEvent@start_ledno:
 20518                           	callstack 0
 20519   000521                     getHash@hash:
 20520                           	callstack 0
 20521   000521                     sendMessage@data6:
 20522                           	callstack 0
 20523                           
 20524                           ; 1 bytes @ 0x20
 20525   000521                     	ds	1
 20526   000522                     APP_processConsumedEvent@end_ledno:
 20527                           	callstack 0
 20528   000522                     sendMessage@data7:
 20529                           	callstack 0
 20530   000522                     findEvent@nodeNumber:
 20531                           	callstack 0
 20532   000522                     ??_rebuildHashtable:
 20533                           
 20534                           ; 1 bytes @ 0x21
 20535   000522                     	ds	1
 20536   000523                     APP_processConsumedEvent@colourPixelIndexPair:
 20537                           	callstack 0
 20538   000523                     ??_sendMessage:
 20539                           
 20540                           ; 1 bytes @ 0x22
 20541   000523                     	ds	1
 20542   000524                     APP_processConsumedEvent@ev:
 20543                           	callstack 0
 20544   000524                     writeEv@tableIndex:
 20545                           	callstack 0
 20546   000524                     findEvent@eventNumber:
 20547                           	callstack 0
 20548                           
 20549                           ; 2 bytes @ 0x23
 20550   000524                     	ds	1
 20551   000525                     rebuildHashtable@hash:
 20552                           	callstack 0
 20553   000525                     sendMessage@opc:
 20554                           	callstack 0
 20555                           
 20556                           ; 1 bytes @ 0x24
 20557   000525                     	ds	1
 20558   000526                     rebuildHashtable@tableIndex:
 20559                           	callstack 0
 20560   000526                     sendMessage2@data1:
 20561                           	callstack 0
 20562   000526                     sendMessage3@data1:
 20563                           	callstack 0
 20564   000526                     sendMessage4@data1:
 20565                           	callstack 0
 20566   000526                     sendMessage5@data1:
 20567                           	callstack 0
 20568   000526                     sendMessage6@data1:
 20569                           	callstack 0
 20570   000526                     sendMessage7@data1:
 20571                           	callstack 0
 20572   000526                     ??_findEvent:
 20573                           
 20574                           ; 1 bytes @ 0x25
 20575   000526                     	ds	1
 20576   000527                     rebuildHashtable@chainIdx:
 20577                           	callstack 0
 20578   000527                     sendMessage2@data2:
 20579                           	callstack 0
 20580   000527                     sendMessage3@data2:
 20581                           	callstack 0
 20582   000527                     sendMessage4@data2:
 20583                           	callstack 0
 20584   000527                     sendMessage5@data2:
 20585                           	callstack 0
 20586   000527                     sendMessage6@data2:
 20587                           	callstack 0
 20588   000527                     sendMessage7@data2:
 20589                           	callstack 0
 20590                           
 20591                           ; 1 bytes @ 0x26
 20592   000527                     	ds	1
 20593   000528                     teachPowerUp@i:
 20594                           	callstack 0
 20595   000528                     sendMessage2@opc:
 20596                           	callstack 0
 20597   000528                     sendMessage3@data3:
 20598                           	callstack 0
 20599   000528                     sendMessage4@data3:
 20600                           	callstack 0
 20601   000528                     sendMessage5@data3:
 20602                           	callstack 0
 20603   000528                     sendMessage6@data3:
 20604                           	callstack 0
 20605   000528                     sendMessage7@data3:
 20606                           	callstack 0
 20607   000528                     findEvent@nn:
 20608                           	callstack 0
 20609   000528                     ??_removeTableEntry:
 20610   000528                     
 20611                           ; 1 bytes @ 0x27
 20612   000528                     	ds	1
 20613   000529                     sendMessage3@opc:
 20614                           	callstack 0
 20615   000529                     sendMessage4@data4:
 20616                           	callstack 0
 20617   000529                     sendMessage5@data4:
 20618                           	callstack 0
 20619   000529                     sendMessage6@data4:
 20620                           	callstack 0
 20621   000529                     sendMessage7@data4:
 20622                           	callstack 0
 20623   000529                     ??_powerUp:
 20624                           
 20625                           ; 1 bytes @ 0x28
 20626   000529                     	ds	1
 20627   00052A                     sendMessage4@opc:
 20628                           	callstack 0
 20629   00052A                     sendMessage5@data5:
 20630                           	callstack 0
 20631   00052A                     sendMessage6@data5:
 20632                           	callstack 0
 20633   00052A                     sendMessage7@data5:
 20634                           	callstack 0
 20635   00052A                     doNnevn@eventNumber:
 20636                           	callstack 0
 20637   00052A                     doRqevn@eventNumber:
 20638                           	callstack 0
 20639   00052A                     findEvent@en:
 20640                           	callstack 0
 20641   00052A                     
 20642                           ; 1 bytes @ 0x29
 20643   00052A                     	ds	1
 20644   00052B                     sendMessage5@opc:
 20645                           	callstack 0
 20646   00052B                     sendMessage6@data6:
 20647                           	callstack 0
 20648   00052B                     sendMessage7@data6:
 20649                           	callstack 0
 20650   00052B                     
 20651                           ; 1 bytes @ 0x2A
 20652   00052B                     	ds	1
 20653   00052C                     doNnevn@count:
 20654                           	callstack 0
 20655   00052C                     doRqevn@count:
 20656                           	callstack 0
 20657   00052C                     doReval@evNum:
 20658                           	callstack 0
 20659   00052C                     findEvent@hash:
 20660                           	callstack 0
 20661   00052C                     sendMessage6@opc:
 20662                           	callstack 0
 20663   00052C                     sendMessage7@data7:
 20664                           	callstack 0
 20665   00052C                     doNenrd@nodeNumber:
 20666                           	callstack 0
 20667   00052C                     checkLen@m:
 20668                           	callstack 0
 20669   00052C                     ??_mnsPoll:
 20670                           
 20671                           ; 1 bytes @ 0x2B
 20672   00052C                     	ds	1
 20673   00052D                     doNnevn@i:
 20674                           	callstack 0
 20675   00052D                     doRqevn@i:
 20676                           	callstack 0
 20677   00052D                     doReval@evIndex:
 20678                           	callstack 0
 20679   00052D                     findEvent@chainIdx:
 20680                           	callstack 0
 20681   00052D                     powerUp@i:
 20682                           	callstack 0
 20683   00052D                     sendMessage7@opc:
 20684                           	callstack 0
 20685   00052D                     
 20686                           ; 1 bytes @ 0x2C
 20687   00052D                     	ds	1
 20688   00052E                     doReval@enNum:
 20689                           	callstack 0
 20690   00052E                     findEvent@tableIndex:
 20691                           	callstack 0
 20692   00052E                     mnsTRallDiagnosticsCallback@serviceIndex:
 20693                           	callstack 0
 20694   00052E                     nvTRnvrdCallback@serviceIndex:
 20695                           	callstack 0
 20696   00052E                     checkLen@needed:
 20697                           	callstack 0
 20698   00052E                     doNenrd@eventNumber:
 20699                           	callstack 0
 20700                           
 20701                           ; 2 bytes @ 0x2D
 20702   00052E                     	ds	1
 20703   00052F                     nerdCallback@step:
 20704                           	callstack 0
 20705   00052F                     doReval@tableIndex:
 20706                           	callstack 0
 20707   00052F                     reqevCallback@step:
 20708                           	callstack 0
 20709   00052F                     mnsTRserviceDiscoveryCallback@step:
 20710                           	callstack 0
 20711   00052F                     mnsTRallDiagnosticsCallback@step:
 20712                           	callstack 0
 20713   00052F                     mnsTRrqnpnCallback@step:
 20714                           	callstack 0
 20715   00052F                     nvTRnvrdCallback@step:
 20716                           	callstack 0
 20717   00052F                     checkLen@service:
 20718                           	callstack 0
 20719   00052F                     doReqev@nodeNumber:
 20720                           	callstack 0
 20721   00052F                     addEvent@nodeNumber:
 20722                           	callstack 0
 20723                           
 20724                           ; 2 bytes @ 0x2E
 20725   00052F                     	ds	1
 20726   000530                     doNenrd@index:
 20727                           	callstack 0
 20728   000530                     nerdCallback@nodeNumber:
 20729                           	callstack 0
 20730   000530                     doReval@evVal:
 20731                           	callstack 0
 20732   000530                     nvTRnvrdCallback@valueOrError:
 20733                           	callstack 0
 20734   000530                     ??_reqevCallback:
 20735   000530                     ??_mnsTRallDiagnosticsCallback:
 20736   000530                     ??_mnsTRserviceDiscoveryCallback:
 20737   000530                     
 20738                           ; 1 bytes @ 0x2F
 20739   000530                     	ds	1
 20740   000531                     doNenrd@tableIndex:
 20741                           	callstack 0
 20742   000531                     consumerEventCheckLen@m:
 20743                           	callstack 0
 20744   000531                     teachCheckLen@m:
 20745                           	callstack 0
 20746   000531                     doReqev@eventNumber:
 20747                           	callstack 0
 20748   000531                     addEvent@eventNumber:
 20749                           	callstack 0
 20750                           
 20751                           ; 2 bytes @ 0x30
 20752   000531                     	ds	1
 20753   000532                     nerdCallback@eventNumber:
 20754                           	callstack 0
 20755                           
 20756                           ; 2 bytes @ 0x31
 20757   000532                     	ds	1
 20758   000533                     consumerEventCheckLen@needed:
 20759                           	callstack 0
 20760   000533                     teachCheckLen@needed:
 20761                           	callstack 0
 20762   000533                     doReqev@evNum:
 20763                           	callstack 0
 20764   000533                     addEvent@evNum:
 20765                           	callstack 0
 20766                           
 20767                           ; 1 bytes @ 0x32
 20768   000533                     	ds	1
 20769   000534                     teachCheckLen@learn:
 20770                           	callstack 0
 20771   000534                     removeTableEntry@i:
 20772                           	callstack 0
 20773   000534                     addEvent@evVal:
 20774                           	callstack 0
 20775   000534                     doReqev@evVal:
 20776                           	callstack 0
 20777   000534                     mnsTRallDiagnosticsCallback@d:
 20778                           	callstack 0
 20779   000534                     
 20780                           ; 1 bytes @ 0x33
 20781   000534                     	ds	1
 20782   000535                     reqevCallback@nEv:
 20783                           	callstack 0
 20784   000535                     removeTableEntry@tableIndex:
 20785                           	callstack 0
 20786   000535                     addEvent@forceOwnNN:
 20787                           	callstack 0
 20788   000535                     
 20789                           ; 1 bytes @ 0x34
 20790   000535                     	ds	1
 20791   000536                     clearAllEvents@tableIndex:
 20792                           	callstack 0
 20793   000536                     doReqev@tableIndex:
 20794                           	callstack 0
 20795   000536                     reqevCallback@eventNumber:
 20796                           	callstack 0
 20797   000536                     removeEvent@nodeNumber:
 20798                           	callstack 0
 20799   000536                     ??_addEvent:
 20800                           
 20801                           ; 1 bytes @ 0x35
 20802   000536                     	ds	1
 20803   000537                     ??_factoryReset:
 20804                           
 20805                           ; 1 bytes @ 0x36
 20806   000537                     	ds	1
 20807   000538                     reqevCallback@ev:
 20808                           	callstack 0
 20809   000538                     removeEvent@eventNumber:
 20810                           	callstack 0
 20811                           
 20812                           ; 2 bytes @ 0x37
 20813   000538                     	ds	2
 20814   00053A                     removeEvent@tableIndex:
 20815                           	callstack 0
 20816   00053A                     reqevCallback@nodeNumber:
 20817                           	callstack 0
 20818   00053A                     
 20819                           ; 1 bytes @ 0x39
 20820   00053A                     	ds	1
 20821   00053B                     factoryReset@i:
 20822                           	callstack 0
 20823   00053B                     doEvuln@nodeNumber:
 20824                           	callstack 0
 20825                           
 20826                           ; 2 bytes @ 0x3A
 20827   00053B                     	ds	1
 20828   00053C                     reqevCallback@tableIndex:
 20829                           	callstack 0
 20830   00053C                     checkPowerOnPb@i:
 20831                           	callstack 0
 20832   00053C                     
 20833                           ; 1 bytes @ 0x3B
 20834   00053C                     	ds	1
 20835   00053D                     doEvuln@eventNumber:
 20836                           	callstack 0
 20837   00053D                     ??_pollTimedResponse:
 20838                           
 20839                           ; 1 bytes @ 0x3C
 20840   00053D                     	ds	2
 20841   00053F                     doEvuln@result:
 20842                           	callstack 0
 20843   00053F                     pollTimedResponse@result:
 20844                           	callstack 0
 20845   00053F                     
 20846                           ; 1 bytes @ 0x3E
 20847   00053F                     	ds	4
 20848   000543                     addEvent@en:
 20849                           	callstack 0
 20850                           
 20851                           ; 2 bytes @ 0x42
 20852   000543                     	ds	2
 20853   000545                     addEvent@e:
 20854                           	callstack 0
 20855                           
 20856                           ; 1 bytes @ 0x44
 20857   000545                     	ds	1
 20858   000546                     addEvent@tableIndex:
 20859                           	callstack 0
 20860                           
 20861                           ; 1 bytes @ 0x45
 20862   000546                     	ds	1
 20863   000547                     APP_addEvent@nodeNumber:
 20864                           	callstack 0
 20865                           
 20866                           ; 2 bytes @ 0x46
 20867   000547                     	ds	2
 20868   000549                     APP_addEvent@eventNumber:
 20869                           	callstack 0
 20870                           
 20871                           ; 2 bytes @ 0x48
 20872   000549                     	ds	2
 20873   00054B                     APP_addEvent@evNum:
 20874                           	callstack 0
 20875                           
 20876                           ; 1 bytes @ 0x4A
 20877   00054B                     	ds	1
 20878   00054C                     APP_addEvent@evVal:
 20879                           	callstack 0
 20880                           
 20881                           ; 1 bytes @ 0x4B
 20882   00054C                     	ds	1
 20883   00054D                     APP_addEvent@forceOwnNN:
 20884                           	callstack 0
 20885                           
 20886                           ; 1 bytes @ 0x4C
 20887   00054D                     	ds	1
 20888   00054E                     doEvlrn@nodeNumber:
 20889                           	callstack 0
 20890   00054E                     
 20891                           ; 1 bytes @ 0x4D
 20892   00054E                     	ds	2
 20893   000550                     doEvlrn@eventNumber:
 20894                           	callstack 0
 20895                           
 20896                           ; 2 bytes @ 0x4F
 20897   000550                     	ds	2
 20898   000552                     doEvlrn@evNum:
 20899                           	callstack 0
 20900                           
 20901                           ; 1 bytes @ 0x51
 20902   000552                     	ds	1
 20903   000553                     doEvlrn@evVal:
 20904                           	callstack 0
 20905                           
 20906                           ; 1 bytes @ 0x52
 20907   000553                     	ds	1
 20908   000554                     bootProcessMessage@m:
 20909                           	callstack 0
 20910   000554                     canProcessMessage@m:
 20911                           	callstack 0
 20912   000554                     consumerProcessMessage@m:
 20913                           	callstack 0
 20914   000554                     teachProcessMessage@m:
 20915                           	callstack 0
 20916   000554                     mnsProcessMessage@m:
 20917                           	callstack 0
 20918   000554                     nvProcessMessage@m:
 20919                           	callstack 0
 20920   000554                     
 20921                           ; 1 bytes @ 0x53
 20922   000554                     	ds	2
 20923   000556                     mnsProcessMessage@i:
 20924                           	callstack 0
 20925   000556                     ??_bootProcessMessage:
 20926   000556                     ??_canProcessMessage:
 20927   000556                     ??_consumerProcessMessage:
 20928   000556                     ??_teachProcessMessage:
 20929   000556                     ??_nvProcessMessage:
 20930                           
 20931                           ; 1 bytes @ 0x55
 20932   000556                     	ds	1
 20933   000557                     _mnsProcessMessage$4494:
 20934                           	callstack 0
 20935                           
 20936                           ; 1 bytes @ 0x56
 20937   000557                     	ds	1
 20938   000558                     mnsProcessMessage@d:
 20939                           	callstack 0
 20940   000558                     nvProcessMessage@valueOrError:
 20941                           	callstack 0
 20942                           
 20943                           ; 2 bytes @ 0x57
 20944   000558                     	ds	1
 20945   000559                     consumerProcessMessage@enn:
 20946                           	callstack 0
 20947                           
 20948                           ; 2 bytes @ 0x58
 20949   000559                     	ds	1
 20950   00055A                     mnsProcessMessage@newMode:
 20951                           	callstack 0
 20952                           
 20953                           ; 1 bytes @ 0x59
 20954   00055A                     	ds	1
 20955   00055B                     consumerProcessMessage@ret:
 20956                           	callstack 0
 20957                           
 20958                           ; 1 bytes @ 0x5A
 20959   00055B                     	ds	1
 20960   00055C                     consumerProcessMessage@tableIndex:
 20961                           	callstack 0
 20962                           
 20963                           ; 1 bytes @ 0x5B
 20964   00055C                     	ds	1
 20965   00055D                     main@i:
 20966                           	callstack 0
 20967   00055D                     
 20968                           ; 1 bytes @ 0x5C
 20969   00055D                     	ds	1
 20970   00055E                     main@t1:
 20971                           	callstack 0
 20972                           
 20973                           ; 1 bytes @ 0x5D
 20974   00055E                     	ds	1
 20975   00055F                     main@t2:
 20976                           	callstack 0
 20977                           
 20978                           ; 1 bytes @ 0x5E
 20979   00055F                     	ds	1
 20980                           
 20981 ;;
 20982 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 20983 ;;
 20984 ;; *************** function _main *****************
 20985 ;; Defined at:
 20986 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 20987 ;; Parameters:    Size  Location     Type
 20988 ;;		None
 20989 ;; Auto vars:     Size  Location     Type
 20990 ;;  t2              1   94[COMRAM] unsigned char 
 20991 ;;  t1              1   93[COMRAM] unsigned char 
 20992 ;;  i               1   92[COMRAM] unsigned char 
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  1    wreg      void 
 20995 ;; Registers used:
 20996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/0
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21005 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21006 ;;Total ram usage:        3 bytes
 21007 ;; Hardware stack levels required when called: 12
 21008 ;; This function calls:
 21009 ;;		_checkPowerOnPb
 21010 ;;		_factoryReset
 21011 ;;		_initRomOps
 21012 ;;		_loop
 21013 ;;		_poll
 21014 ;;		_powerUp
 21015 ;;		_readNVM
 21016 ;;		_setup
 21017 ;; This function is called by:
 21018 ;;		Startup code after reset
 21019 ;; This function uses a non-reentrant model
 21020 ;;
 21021                           
 21022                           	psect	text0
 21023   006362                     __ptext0:
 21024                           	callstack 0
 21025   006362                     _main:
 21026                           	callstack 115
 21027   006362                     
 21028                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 21029   006362  0100               	movlb	0	; () banked
 21030   006364  51AD               	movf	173,w,b	;volatile
 21031   006366  0B8F               	andlw	-113
 21032   006368  0920               	iorlw	32
 21033   00636A  6FAD               	movwf	173,b	;volatile
 21034                           
 21035                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 21036   00636C  0EF0               	movlw	-16
 21037   00636E  17AD               	andwf	173,f,b	;volatile
 21038   006370                     l2093:
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;../../VLCBlib_PIC/vlcb.c: 1280:     while ( ! OSCCON3bits.ORDY) {
 21042   006370  A9AF               	btfss	175,4,b	;volatile
 21043   006372  EFBD  F031         	goto	u8691
 21044   006376  EFBF  F031         	goto	u8690
 21045   00637A                     u8691:
 21046   00637A  EFB8  F031         	goto	l2093
 21047   00637E                     u8690:
 21048   00637E                     
 21049                           ; BSR set to: 0
 21050                           ;../../VLCBlib_PIC/vlcb.c: 1289:     for (t1=0; t1<64; t1++) {
 21051   00637E  6A5E               	clrf	main@t1^(0+1280),c
 21052   006380                     l2096:
 21053                           
 21054                           ;../../VLCBlib_PIC/vlcb.c: 1290:         for (t2=0; t2<255; t2++) {
 21055   006380  6A5F               	clrf	main@t2^(0+1280),c
 21056   006382                     l2098:
 21057                           
 21058                           ;../../VLCBlib_PIC/vlcb.c: 1291:             for (i=0; i<255; i++) {
 21059   006382  6A5D               	clrf	main@i^(0+1280),c
 21060   006384                     l2100:
 21061                           
 21062                           ;../../VLCBlib_PIC/vlcb.c: 1293:                 (LATBbits.LATB7=0);
 21063   006384  9EBF               	bcf	191,7,c	;volatile
 21064   006386                     
 21065                           ;../../VLCBlib_PIC/vlcb.c: 1294:             }
 21066   006386  2A5D               	incf	main@i^(0+1280),f,c
 21067   006388  285D               	incf	main@i^(0+1280),w,c
 21068   00638A  A4D8               	btfss	status,2,c
 21069   00638C  EFCA  F031         	goto	u8701
 21070   006390  EFCC  F031         	goto	u8700
 21071   006394                     u8701:
 21072   006394  EFC2  F031         	goto	l2100
 21073   006398                     u8700:
 21074   006398                     
 21075                           ;../../VLCBlib_PIC/vlcb.c: 1295:         }
 21076   006398  2A5F               	incf	main@t2^(0+1280),f,c
 21077   00639A  285F               	incf	main@t2^(0+1280),w,c
 21078   00639C  A4D8               	btfss	status,2,c
 21079   00639E  EFD3  F031         	goto	u8711
 21080   0063A2  EFD5  F031         	goto	u8710
 21081   0063A6                     u8711:
 21082   0063A6  EFC1  F031         	goto	l2098
 21083   0063AA                     u8710:
 21084   0063AA                     
 21085                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
 21086   0063AA  2A5E               	incf	main@t1^(0+1280),f,c
 21087   0063AC  0E3F               	movlw	63
 21088   0063AE  645E               	cpfsgt	main@t1^(0+1280),c
 21089   0063B0  EFDC  F031         	goto	u8721
 21090   0063B4  EFDE  F031         	goto	u8720
 21091   0063B8                     u8721:
 21092   0063B8  EFC0  F031         	goto	l2096
 21093   0063BC                     u8720:
 21094   0063BC                     
 21095                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTBASEU = 0x00;
 21096   0063BC  0104               	movlb	4	; () banked
 21097   0063BE  6B5F               	clrf	95,b	;volatile
 21098   0063C0                     
 21099                           ; BSR set to: 4
 21100                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTBASEH = 0x09;
 21101   0063C0  0E09               	movlw	9
 21102   0063C2  6F5E               	movwf	94,b	;volatile
 21103   0063C4                     
 21104                           ; BSR set to: 4
 21105                           ;../../VLCBlib_PIC/vlcb.c: 1308:     IVTBASEL = 0x00;
 21106   0063C4  6B5D               	clrf	93,b	;volatile
 21107                           
 21108                           ;../../VLCBlib_PIC/vlcb.c: 1310:     IVTLOCK = 0x55;
 21109   0063C6  0E55               	movlw	85
 21110   0063C8  6F59               	movwf	89,b	;volatile
 21111                           
 21112                           ;../../VLCBlib_PIC/vlcb.c: 1311:     IVTLOCK = 0xAA;
 21113   0063CA  0EAA               	movlw	170
 21114   0063CC  6F59               	movwf	89,b	;volatile
 21115   0063CE                     
 21116                           ; BSR set to: 4
 21117                           ;../../VLCBlib_PIC/vlcb.c: 1312:     IVTLOCKbits.IVTLOCKED = 0x01;
 21118   0063CE  8159               	bsf	89,0,b	;volatile
 21119   0063D0                     
 21120                           ; BSR set to: 4
 21121                           ;../../VLCBlib_PIC/vlcb.c: 1324:     initRomOps();
 21122   0063D0  EC79  F041         	call	_initRomOps	;wreg free
 21123   0063D4                     
 21124                           ;../../VLCBlib_PIC/vlcb.c: 1326:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 21125   0063D4  0EFA               	movlw	250
 21126   0063D6  6E07               	movwf	readNVM@index^(0+1280),c
 21127   0063D8  0E03               	movlw	3
 21128   0063DA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21129   0063DC  0E00               	movlw	0
 21130   0063DE  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21131   0063E0  0E00               	movlw	0
 21132   0063E2  EC89  F03A         	call	_readNVM
 21133   0063E6  0407               	decf	?_readNVM^(0+1280),w,c
 21134   0063E8  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 21135   0063EA  B4D8               	btfsc	status,2,c
 21136   0063EC  EFFA  F031         	goto	u8731
 21137   0063F0  EFFC  F031         	goto	u8730
 21138   0063F4                     u8731:
 21139   0063F4  EFFE  F031         	goto	l2102
 21140   0063F8                     u8730:
 21141   0063F8                     
 21142                           ;../../VLCBlib_PIC/vlcb.c: 1327:         factoryReset();
 21143   0063F8  EC36  F02B         	call	_factoryReset	;wreg free
 21144   0063FC                     l2102:
 21145                           
 21146                           ;../../VLCBlib_PIC/vlcb.c: 1331:     powerUp();
 21147   0063FC  EC33  F02C         	call	_powerUp	;wreg free
 21148   006400                     
 21149                           ;../../VLCBlib_PIC/vlcb.c: 1334:     {INTCON0bits.GIE = 1;};
 21150   006400  8ED6               	bsf	214,7,c	;volatile
 21151                           
 21152                           ;../../VLCBlib_PIC/vlcb.c: 1335:     checkPowerOnPb();
 21153   006402  EC6A  F033         	call	_checkPowerOnPb	;wreg free
 21154   006406                     
 21155                           ;../../VLCBlib_PIC/vlcb.c: 1338:     {INTCON0bits.GIE = 0;};
 21156   006406  9ED6               	bcf	214,7,c	;volatile
 21157   006408                     
 21158                           ;../../VLCBlib_PIC/vlcb.c: 1339:     setup();
 21159   006408  ECF1  F023         	call	_setup	;wreg free
 21160   00640C                     
 21161                           ;../../VLCBlib_PIC/vlcb.c: 1342:     {INTCON0bits.GIE = 1;};
 21162   00640C  8ED6               	bsf	214,7,c	;volatile
 21163   00640E                     l11293:
 21164                           
 21165                           ;../../VLCBlib_PIC/vlcb.c: 1346:         poll();
 21166   00640E  EC63  F017         	call	_poll	;wreg free
 21167   006412                     
 21168                           ;../../VLCBlib_PIC/vlcb.c: 1347:         loop();
 21169   006412  ECF2  F03C         	call	_loop	;wreg free
 21170   006416  EF07  F032         	goto	l11293
 21171   00641A  EF01  F005         	goto	start
 21172   00641E                     __end_of_main:
 21173                           	callstack 0
 21174                           
 21175 ;; *************** function _setup *****************
 21176 ;; Defined at:
 21177 ;;		line 212 in file "../main.c"
 21178 ;; Parameters:    Size  Location     Type
 21179 ;;		None
 21180 ;; Auto vars:     Size  Location     Type
 21181 ;;		None
 21182 ;; Return value:  Size  Location     Type
 21183 ;;                  1    wreg      void 
 21184 ;; Registers used:
 21185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21186 ;; Tracked objects:
 21187 ;;		On entry : 0/0
 21188 ;;		On exit  : 0/0
 21189 ;;		Unchanged: 0/0
 21190 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21195 ;;Total ram usage:        0 bytes
 21196 ;; Hardware stack levels used: 1
 21197 ;; Hardware stack levels required when called: 3
 21198 ;; This function calls:
 21199 ;;		_doFlash
 21200 ;;		_initARGB
 21201 ;;		_refreshString
 21202 ;;		_setTimedResponseDelay
 21203 ;;		_tickGet
 21204 ;;		_updateLedRange
 21205 ;; This function is called by:
 21206 ;;		_main
 21207 ;; This function uses a non-reentrant model
 21208 ;;
 21209                           
 21210                           	psect	text1
 21211   0047E2                     __ptext1:
 21212                           	callstack 0
 21213   0047E2                     _setup:
 21214                           	callstack 123
 21215   0047E2                     
 21216                           ;../main.c: 214:     transport = &canTransport;
 21217   0047E2  0EF9               	movlw	low _canTransport
 21218   0047E4  0105               	movlb	5	; () banked
 21219   0047E6  6F91               	movwf	_transport& (0+255),b
 21220   0047E8  0EFF               	movlw	high _canTransport
 21221   0047EA  6F92               	movwf	(_transport+1)& (0+255),b
 21222   0047EC                     
 21223                           ; BSR set to: 5
 21224                           ;../main.c: 219:     setTimedResponseDelay(5);
 21225   0047EC  0E05               	movlw	5
 21226   0047EE  ECAE  F041         	call	_setTimedResponseDelay
 21227   0047F2                     
 21228                           ;../main.c: 221:     initARGB();
 21229   0047F2  EC35  F026         	call	_initARGB	;wreg free
 21230   0047F6                     
 21231                           ;../main.c: 223:     ANSELA = 0x00;
 21232   0047F6  0104               	movlb	4	; () banked
 21233   0047F8  6B00               	clrf	0,b	;volatile
 21234   0047FA                     
 21235                           ; BSR set to: 4
 21236                           ;../main.c: 224:     ANSELB = 0x00;
 21237   0047FA  6B08               	clrf	8,b	;volatile
 21238   0047FC                     
 21239                           ; BSR set to: 4
 21240                           ;../main.c: 225:     ANSELC = 0x00;
 21241   0047FC  6B10               	clrf	16,b	;volatile
 21242   0047FE                     
 21243                           ; BSR set to: 4
 21244                           ;../main.c: 228:     (INTCON0bits.GIE = 1);
 21245   0047FE  8ED6               	bsf	214,7,c	;volatile
 21246   004800                     
 21247                           ; BSR set to: 4
 21248                           ;../main.c: 229:     flashTime.val = tickGet();
 21249   004800  EC14  F03A         	call	_tickGet	;wreg free
 21250   004804  C501  F580         	movff	?_tickGet,_flashTime
 21251   004808  C502  F581         	movff	?_tickGet+1,_flashTime+1
 21252   00480C  C503  F582         	movff	?_tickGet+2,_flashTime+2
 21253   004810  C504  F583         	movff	?_tickGet+3,_flashTime+3
 21254   004814                     
 21255                           ;../main.c: 231:     updateLedRange(0, 22, (PaletteIndex)(uint8_t)0x00);
 21256   004814  0E16               	movlw	22
 21257   004816  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21258   004818  0E00               	movlw	0
 21259   00481A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21260   00481C  0E00               	movlw	0
 21261   00481E  EC9F  F03E         	call	_updateLedRange
 21262   004822                     
 21263                           ;../main.c: 232:     doFlash();refreshString();
 21264   004822  EC68  F00F         	call	_doFlash	;wreg free
 21265   004826  EC9B  F03B         	call	_refreshString	;wreg free
 21266   00482A                     
 21267                           ;../main.c: 233:     updateLedRange(3, 5, (PaletteIndex)(uint8_t)0x11);
 21268   00482A  0E05               	movlw	5
 21269   00482C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21270   00482E  0E11               	movlw	17
 21271   004830  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21272   004832  0E03               	movlw	3
 21273   004834  EC9F  F03E         	call	_updateLedRange
 21274   004838                     
 21275                           ;../main.c: 234:     doFlash();refreshString();
 21276   004838  EC68  F00F         	call	_doFlash	;wreg free
 21277   00483C  EC9B  F03B         	call	_refreshString	;wreg free
 21278   004840                     
 21279                           ;../main.c: 235:     updateLedRange(6, 8, (PaletteIndex)(uint8_t)0x22);
 21280   004840  0E08               	movlw	8
 21281   004842  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21282   004844  0E22               	movlw	34
 21283   004846  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21284   004848  0E06               	movlw	6
 21285   00484A  EC9F  F03E         	call	_updateLedRange
 21286   00484E                     
 21287                           ;../main.c: 236:     doFlash();refreshString();
 21288   00484E  EC68  F00F         	call	_doFlash	;wreg free
 21289   004852  EC9B  F03B         	call	_refreshString	;wreg free
 21290   004856                     
 21291                           ;../main.c: 237:     updateLedRange(9, 11, (PaletteIndex)(uint8_t)0x33);
 21292   004856  0E0B               	movlw	11
 21293   004858  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21294   00485A  0E33               	movlw	51
 21295   00485C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21296   00485E  0E09               	movlw	9
 21297   004860  EC9F  F03E         	call	_updateLedRange
 21298   004864                     
 21299                           ;../main.c: 238:     doFlash();refreshString();
 21300   004864  EC68  F00F         	call	_doFlash	;wreg free
 21301   004868  EC9B  F03B         	call	_refreshString	;wreg free
 21302   00486C                     
 21303                           ;../main.c: 239:     updateLedRange(12, 14, (PaletteIndex)(uint8_t)0x44);
 21304   00486C  0E0E               	movlw	14
 21305   00486E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21306   004870  0E44               	movlw	68
 21307   004872  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21308   004874  0E0C               	movlw	12
 21309   004876  EC9F  F03E         	call	_updateLedRange
 21310   00487A                     
 21311                           ;../main.c: 240:     doFlash();refreshString();
 21312   00487A  EC68  F00F         	call	_doFlash	;wreg free
 21313   00487E  EC9B  F03B         	call	_refreshString	;wreg free
 21314   004882                     
 21315                           ;../main.c: 241:     updateLedRange(15, 17, (PaletteIndex)(uint8_t)0x55);
 21316   004882  0E11               	movlw	17
 21317   004884  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21318   004886  0E55               	movlw	85
 21319   004888  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21320   00488A  0E0F               	movlw	15
 21321   00488C  EC9F  F03E         	call	_updateLedRange
 21322   004890                     
 21323                           ;../main.c: 242:     doFlash();refreshString();
 21324   004890  EC68  F00F         	call	_doFlash	;wreg free
 21325   004894  EC9B  F03B         	call	_refreshString	;wreg free
 21326   004898                     
 21327                           ;../main.c: 243:     updateLedRange(18, 20, (PaletteIndex)(uint8_t)0x66);
 21328   004898  0E14               	movlw	20
 21329   00489A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21330   00489C  0E66               	movlw	102
 21331   00489E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21332   0048A0  0E12               	movlw	18
 21333   0048A2  EC9F  F03E         	call	_updateLedRange
 21334   0048A6                     
 21335                           ;../main.c: 244:     doFlash();refreshString();
 21336   0048A6  EC68  F00F         	call	_doFlash	;wreg free
 21337   0048AA  EC9B  F03B         	call	_refreshString	;wreg free
 21338   0048AE                     
 21339                           ;../main.c: 245:     updateLedRange(21, 23, (PaletteIndex)(uint8_t)0x77);
 21340   0048AE  0E17               	movlw	23
 21341   0048B0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21342   0048B2  0E77               	movlw	119
 21343   0048B4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21344   0048B6  0E15               	movlw	21
 21345   0048B8  EC9F  F03E         	call	_updateLedRange
 21346   0048BC                     
 21347                           ;../main.c: 246:     doFlash();refreshString();
 21348   0048BC  EC68  F00F         	call	_doFlash	;wreg free
 21349   0048C0  EC9B  F03B         	call	_refreshString	;wreg free
 21350   0048C4                     
 21351                           ;../main.c: 247:     updateLedRange(24, 26, (PaletteIndex)(uint8_t)0x88);
 21352   0048C4  0E1A               	movlw	26
 21353   0048C6  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21354   0048C8  0E88               	movlw	136
 21355   0048CA  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21356   0048CC  0E18               	movlw	24
 21357   0048CE  EC9F  F03E         	call	_updateLedRange
 21358   0048D2                     
 21359                           ;../main.c: 248:     doFlash();refreshString();
 21360   0048D2  EC68  F00F         	call	_doFlash	;wreg free
 21361   0048D6  EC9B  F03B         	call	_refreshString	;wreg free
 21362   0048DA                     
 21363                           ;../main.c: 249:     updateLedRange(27, 29, (PaletteIndex)(uint8_t)0x99);
 21364   0048DA  0E1D               	movlw	29
 21365   0048DC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21366   0048DE  0E99               	movlw	153
 21367   0048E0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21368   0048E2  0E1B               	movlw	27
 21369   0048E4  EC9F  F03E         	call	_updateLedRange
 21370   0048E8                     
 21371                           ;../main.c: 250:     doFlash();refreshString();
 21372   0048E8  EC68  F00F         	call	_doFlash	;wreg free
 21373   0048EC  EC9B  F03B         	call	_refreshString	;wreg free
 21374   0048F0                     
 21375                           ;../main.c: 251:     updateLedRange(30, 32, (PaletteIndex)(uint8_t)0xAA);
 21376   0048F0  0E20               	movlw	32
 21377   0048F2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21378   0048F4  0EAA               	movlw	170
 21379   0048F6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21380   0048F8  0E1E               	movlw	30
 21381   0048FA  EC9F  F03E         	call	_updateLedRange
 21382   0048FE                     
 21383                           ;../main.c: 252:     doFlash();refreshString();
 21384   0048FE  EC68  F00F         	call	_doFlash	;wreg free
 21385   004902  EC9B  F03B         	call	_refreshString	;wreg free
 21386   004906                     
 21387                           ;../main.c: 253:     updateLedRange(33, 35, (PaletteIndex)(uint8_t)0xBB);
 21388   004906  0E23               	movlw	35
 21389   004908  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21390   00490A  0EBB               	movlw	187
 21391   00490C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21392   00490E  0E21               	movlw	33
 21393   004910  EC9F  F03E         	call	_updateLedRange
 21394   004914                     
 21395                           ;../main.c: 254:     doFlash();refreshString();
 21396   004914  EC68  F00F         	call	_doFlash	;wreg free
 21397   004918  EC9B  F03B         	call	_refreshString	;wreg free
 21398   00491C                     
 21399                           ;../main.c: 255:     updateLedRange(36, 38, (PaletteIndex)(uint8_t)0xCC);
 21400   00491C  0E26               	movlw	38
 21401   00491E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21402   004920  0ECC               	movlw	204
 21403   004922  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21404   004924  0E24               	movlw	36
 21405   004926  EC9F  F03E         	call	_updateLedRange
 21406   00492A                     
 21407                           ;../main.c: 256:     doFlash();refreshString();
 21408   00492A  EC68  F00F         	call	_doFlash	;wreg free
 21409   00492E  EC9B  F03B         	call	_refreshString	;wreg free
 21410   004932                     
 21411                           ;../main.c: 257:     updateLedRange(39, 41, (PaletteIndex)(uint8_t)0xDD);
 21412   004932  0E29               	movlw	41
 21413   004934  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21414   004936  0EDD               	movlw	221
 21415   004938  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21416   00493A  0E27               	movlw	39
 21417   00493C  EC9F  F03E         	call	_updateLedRange
 21418   004940                     
 21419                           ;../main.c: 258:     doFlash();refreshString();
 21420   004940  EC68  F00F         	call	_doFlash	;wreg free
 21421   004944  EC9B  F03B         	call	_refreshString	;wreg free
 21422   004948                     
 21423                           ;../main.c: 259:     updateLedRange(42, 44, (PaletteIndex)(uint8_t)0xEE);
 21424   004948  0E2C               	movlw	44
 21425   00494A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21426   00494C  0EEE               	movlw	238
 21427   00494E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21428   004950  0E2A               	movlw	42
 21429   004952  EC9F  F03E         	call	_updateLedRange
 21430   004956                     
 21431                           ;../main.c: 260:     doFlash();refreshString();
 21432   004956  EC68  F00F         	call	_doFlash	;wreg free
 21433   00495A  EC9B  F03B         	call	_refreshString	;wreg free
 21434   00495E                     
 21435                           ;../main.c: 261:     updateLedRange(45, 48, (PaletteIndex)(uint8_t)0xFF);
 21436   00495E  0E30               	movlw	48
 21437   004960  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21438   004962  0EFF               	movlw	255
 21439   004964  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21440   004966  0E2D               	movlw	45
 21441   004968  EC9F  F03E         	call	_updateLedRange
 21442   00496C                     
 21443                           ;../main.c: 262:     doFlash();refreshString();
 21444   00496C  EC68  F00F         	call	_doFlash	;wreg free
 21445   004970  EC9B  F03B         	call	_refreshString	;wreg free
 21446   004974  0012               	return		;funcret
 21447   004976                     __end_of_setup:
 21448                           	callstack 0
 21449                           
 21450 ;; *************** function _setTimedResponseDelay *****************
 21451 ;; Defined at:
 21452 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 21453 ;; Parameters:    Size  Location     Type
 21454 ;;  delay           1    wreg     unsigned char 
 21455 ;; Auto vars:     Size  Location     Type
 21456 ;;  delay           1    0[COMRAM] unsigned char 
 21457 ;; Return value:  Size  Location     Type
 21458 ;;                  1    wreg      void 
 21459 ;; Registers used:
 21460 ;;		wreg
 21461 ;; Tracked objects:
 21462 ;;		On entry : 0/0
 21463 ;;		On exit  : 0/0
 21464 ;;		Unchanged: 0/0
 21465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21470 ;;Total ram usage:        1 bytes
 21471 ;; Hardware stack levels used: 1
 21472 ;; Hardware stack levels required when called: 1
 21473 ;; This function calls:
 21474 ;;		Nothing
 21475 ;; This function is called by:
 21476 ;;		_setup
 21477 ;; This function uses a non-reentrant model
 21478 ;;
 21479                           
 21480                           	psect	text2
 21481   00835C                     __ptext2:
 21482                           	callstack 0
 21483   00835C                     _setTimedResponseDelay:
 21484                           	callstack 124
 21485                           
 21486                           ;incstack = 0
 21487                           ;setTimedResponseDelay@delay stored from wreg
 21488   00835C  6E01               	movwf	setTimedResponseDelay@delay^(0+1280),c
 21489   00835E                     
 21490                           ;../../VLCBlib_PIC/vlcb.c: 912:     timedResponseDelay = delay;
 21491   00835E  C501  F593         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 21492   008362  0012               	return		;funcret
 21493   008364                     __end_of_setTimedResponseDelay:
 21494                           	callstack 0
 21495                           
 21496 ;; *************** function _powerUp *****************
 21497 ;; Defined at:
 21498 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;		None
 21501 ;; Auto vars:     Size  Location     Type
 21502 ;;  i               1   44[COMRAM] unsigned char 
 21503 ;;  divider         1    0        unsigned char 
 21504 ;; Return value:  Size  Location     Type
 21505 ;;                  1    wreg      void 
 21506 ;; Registers used:
 21507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21508 ;; Tracked objects:
 21509 ;;		On entry : 0/0
 21510 ;;		On exit  : 0/0
 21511 ;;		Unchanged: 0/0
 21512 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21516 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21517 ;;Total ram usage:        5 bytes
 21518 ;; Hardware stack levels used: 1
 21519 ;; Hardware stack levels required when called: 6
 21520 ;; This function calls:
 21521 ;;		_bootPowerUp
 21522 ;;		_canPowerUp
 21523 ;;		_consumerPowerUp
 21524 ;;		_initTicker
 21525 ;;		_initTimedResponse
 21526 ;;		_leds_powerUp
 21527 ;;		_mnsPowerUp
 21528 ;;		_nvPowerUp
 21529 ;;		_teachPowerUp
 21530 ;; This function is called by:
 21531 ;;		_main
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           	psect	text3
 21536   005866                     __ptext3:
 21537                           	callstack 0
 21538   005866                     _powerUp:
 21539                           	callstack 120
 21540   005866                     
 21541                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 21542   005866  0E00               	movlw	0
 21543   005868  EC33  F03C         	call	_initTicker
 21544   00586C                     
 21545                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 21546   00586C  ECB6  F041         	call	_initTimedResponse	;wreg free
 21547   005870                     
 21548                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 21549   005870  ECC9  F040         	call	_leds_powerUp	;wreg free
 21550   005874                     
 21551                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 21552   005874  0E05               	movlw	5
 21553   005876  0105               	movlb	5	; () banked
 21554   005878  6F93               	movwf	_timedResponseDelay& (0+255),b
 21555   00587A                     
 21556                           ; BSR set to: 5
 21557                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<6; i++) {
 21558   00587A  6A2D               	clrf	powerUp@i^(0+1280),c
 21559   00587C                     l11103:
 21560                           
 21561                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 21562   00587C  502D               	movf	powerUp@i^(0+1280),w,c
 21563   00587E  0D02               	mullw	2
 21564   005880  0E89               	movlw	low _services
 21565   005882  24F3               	addwf	243,w,c
 21566   005884  6EF6               	movwf	tblptrl,c
 21567   005886  0EFF               	movlw	high _services
 21568   005888  20F4               	addwfc	244,w,c
 21569   00588A  6EF7               	movwf	tblptrh,c
 21570   00588C                     	if	1	;There are 3 active tblptr bytes
 21571   00588C  6AF8               	clrf	tblptru,c
 21572   00588E  0E00               	movlw	low (__mediumconst shr (0+16))
 21573   005890  22F8               	addwfc	tblptru,f,c
 21574   005892                     	endif
 21575   005892  0009               	tblrd		*+
 21576   005894  50F5               	movf	tablat,w,c
 21577   005896  0009               	tblrd		*+
 21578   005898  10F5               	iorwf	tablat,w,c
 21579   00589A  B4D8               	btfsc	status,2,c
 21580   00589C  EF52  F02C         	goto	u8351
 21581   0058A0  EF54  F02C         	goto	u8350
 21582   0058A4                     u8351:
 21583   0058A4  EFA5  F02C         	goto	l11109
 21584   0058A8                     u8350:
 21585   0058A8  502D               	movf	powerUp@i^(0+1280),w,c
 21586   0058AA  0D02               	mullw	2
 21587   0058AC  0E89               	movlw	low _services
 21588   0058AE  24F3               	addwf	243,w,c
 21589   0058B0  6EF6               	movwf	tblptrl,c
 21590   0058B2  0EFF               	movlw	high _services
 21591   0058B4  20F4               	addwfc	244,w,c
 21592   0058B6  6EF7               	movwf	tblptrh,c
 21593   0058B8                     	if	1	;There are 3 active tblptr bytes
 21594   0058B8  6AF8               	clrf	tblptru,c
 21595   0058BA  0E00               	movlw	low (__mediumconst shr (0+16))
 21596   0058BC  22F8               	addwfc	tblptru,f,c
 21597   0058BE                     	endif
 21598   0058BE  0009               	tblrd		*+
 21599   0058C0  C4F5 F529          	movff	tablat,??_powerUp
 21600   0058C4  0009               	tblrd		*+
 21601   0058C6  C4F5 F52A          	movff	tablat,??_powerUp+1
 21602   0058CA  0E04               	movlw	4
 21603   0058CC  2629               	addwf	??_powerUp^(0+1280),f,c
 21604   0058CE  0E00               	movlw	0
 21605   0058D0  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21606   0058D2  C529  F4F6         	movff	??_powerUp,tblptrl
 21607   0058D6  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21608   0058DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21609   0058DA  6AF8               	clrf	tblptru,c
 21610   0058DC                     	endif
 21611   0058DC                     	if	0	;tblptru may be non-zero
 21612   0058DC                     	endif
 21613   0058DC  0009               	tblrd		*+
 21614   0058DE  50F5               	movf	tablat,w,c
 21615   0058E0  0009               	tblrd		*+
 21616   0058E2  10F5               	iorwf	tablat,w,c
 21617   0058E4  B4D8               	btfsc	status,2,c
 21618   0058E6  EF77  F02C         	goto	u8361
 21619   0058EA  EF79  F02C         	goto	u8360
 21620   0058EE                     u8361:
 21621   0058EE  EFA5  F02C         	goto	l11109
 21622   0058F2                     u8360:
 21623   0058F2                     
 21624                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 21625   0058F2  502D               	movf	powerUp@i^(0+1280),w,c
 21626   0058F4  0D02               	mullw	2
 21627   0058F6  0E89               	movlw	low _services
 21628   0058F8  24F3               	addwf	243,w,c
 21629   0058FA  6EF6               	movwf	tblptrl,c
 21630   0058FC  0EFF               	movlw	high _services
 21631   0058FE  20F4               	addwfc	244,w,c
 21632   005900  6EF7               	movwf	tblptrh,c
 21633   005902                     	if	1	;There are 3 active tblptr bytes
 21634   005902  6AF8               	clrf	tblptru,c
 21635   005904  0E00               	movlw	low (__mediumconst shr (0+16))
 21636   005906  22F8               	addwfc	tblptru,f,c
 21637   005908                     	endif
 21638   005908  0009               	tblrd		*+
 21639   00590A  C4F5 F529          	movff	tablat,??_powerUp
 21640   00590E  0009               	tblrd		*+
 21641   005910  C4F5 F52A          	movff	tablat,??_powerUp+1
 21642   005914  0E04               	movlw	4
 21643   005916  2629               	addwf	??_powerUp^(0+1280),f,c
 21644   005918  0E00               	movlw	0
 21645   00591A  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21646   00591C  C529  F4F6         	movff	??_powerUp,tblptrl
 21647   005920  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21648   005924                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21649   005924  6AF8               	clrf	tblptru,c
 21650   005926                     	endif
 21651   005926                     	if	0	;tblptru may be non-zero
 21652   005926                     	endif
 21653   005926  0009               	tblrd		*+
 21654   005928  C4F5 F52B          	movff	tablat,??_powerUp+2
 21655   00592C  0009               	tblrd		*+
 21656   00592E  C4F5 F52C          	movff	tablat,??_powerUp+3
 21657   005932  D802               	call	u8378
 21658   005934  EFA5  F02C         	goto	u8379
 21659   005938                     u8378:
 21660   005938  0005               	push	
 21661   00593A  6EFA               	movwf	pclath,c
 21662   00593C  502B               	movf	(??_powerUp+2)^(0+1280),w,c
 21663   00593E  6EFD               	movwf	tosl,c
 21664   005940  502C               	movf	(??_powerUp+3)^(0+1280),w,c
 21665   005942  6EFE               	movwf	tosh,c
 21666   005944  6AFF               	clrf	tosu,c
 21667   005946  50FA               	movf	pclath,w,c
 21668   005948  0012               	return		;indir
 21669   00594A                     u8379:
 21670   00594A                     l11109:
 21671                           
 21672                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 21673   00594A  2A2D               	incf	powerUp@i^(0+1280),f,c
 21674   00594C  0E05               	movlw	5
 21675   00594E  642D               	cpfsgt	powerUp@i^(0+1280),c
 21676   005950  EFAC  F02C         	goto	u8381
 21677   005954  EFAE  F02C         	goto	u8380
 21678   005958                     u8381:
 21679   005958  EF3E  F02C         	goto	l11103
 21680   00595C                     u8380:
 21681   00595C  0012               	return		;funcret
 21682   00595E                     __end_of_powerUp:
 21683                           	callstack 0
 21684                           
 21685 ;; *************** function _nvPowerUp *****************
 21686 ;; Defined at:
 21687 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 21688 ;; Parameters:    Size  Location     Type
 21689 ;;		None
 21690 ;; Auto vars:     Size  Location     Type
 21691 ;;  i               1   17[COMRAM] unsigned char 
 21692 ;; Return value:  Size  Location     Type
 21693 ;;                  1    wreg      void 
 21694 ;; Registers used:
 21695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21696 ;; Tracked objects:
 21697 ;;		On entry : 0/0
 21698 ;;		On exit  : 0/0
 21699 ;;		Unchanged: 0/0
 21700 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21705 ;;Total ram usage:        1 bytes
 21706 ;; Hardware stack levels used: 1
 21707 ;; Hardware stack levels required when called: 4
 21708 ;; This function calls:
 21709 ;;		_loadNvCache
 21710 ;; This function is called by:
 21711 ;;		_powerUp
 21712 ;; This function uses a non-reentrant model
 21713 ;;
 21714                           
 21715                           	psect	text4
 21716   007E00                     __ptext4:
 21717                           	callstack 0
 21718   007E00                     _nvPowerUp:
 21719                           	callstack 121
 21720   007E00                     
 21721                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 21722   007E00  0E01               	movlw	1
 21723   007E02  6E12               	movwf	nvPowerUp@i^(0+1280),c
 21724   007E04                     l10699:
 21725                           
 21726                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 21727   007E04  5012               	movf	nvPowerUp@i^(0+1280),w,c
 21728   007E06  0D02               	mullw	2
 21729   007E08  0EBB               	movlw	low _nvDiagnostics
 21730   007E0A  24F3               	addwf	243,w,c
 21731   007E0C  6ED9               	movwf	fsr2l,c
 21732   007E0E  0E05               	movlw	high _nvDiagnostics
 21733   007E10  20F4               	addwfc	prodh,w,c
 21734   007E12  6EDA               	movwf	fsr2h,c
 21735   007E14  6ADE               	clrf	postinc2,c
 21736   007E16  6ADD               	clrf	postdec2,c
 21737   007E18                     
 21738                           ;../../VLCBlib_PIC/nv.c: 141:     }
 21739   007E18  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 21740   007E1A  0E02               	movlw	2
 21741   007E1C  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 21742   007E1E  EF13  F03F         	goto	u8051
 21743   007E22  EF15  F03F         	goto	u8050
 21744   007E26                     u8051:
 21745   007E26  EF02  F03F         	goto	l10699
 21746   007E2A                     u8050:
 21747   007E2A                     
 21748                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 21749   007E2A  0E00               	movlw	0
 21750   007E2C  0105               	movlb	5	; () banked
 21751   007E2E  6FBC               	movwf	(_nvDiagnostics+1)& (0+255),b
 21752   007E30  0E02               	movlw	2
 21753   007E32  6FBB               	movwf	_nvDiagnostics& (0+255),b
 21754   007E34                     
 21755                           ; BSR set to: 5
 21756                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 21757   007E34  EC02  F03C         	call	_loadNvCache	;wreg free
 21758   007E38  0012               	return		;funcret
 21759   007E3A                     __end_of_nvPowerUp:
 21760                           	callstack 0
 21761                           
 21762 ;; *************** function _mnsPowerUp *****************
 21763 ;; Defined at:
 21764 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 21765 ;; Parameters:    Size  Location     Type
 21766 ;;		None
 21767 ;; Auto vars:     Size  Location     Type
 21768 ;;  temp            2   13[COMRAM] int 
 21769 ;;  i               1   12[COMRAM] unsigned char 
 21770 ;; Return value:  Size  Location     Type
 21771 ;;                  1    wreg      void 
 21772 ;; Registers used:
 21773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21774 ;; Tracked objects:
 21775 ;;		On entry : 0/0
 21776 ;;		On exit  : 0/0
 21777 ;;		Unchanged: 0/0
 21778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21783 ;;Total ram usage:        3 bytes
 21784 ;; Hardware stack levels used: 1
 21785 ;; Hardware stack levels required when called: 3
 21786 ;; This function calls:
 21787 ;;		_readNVM
 21788 ;;		_setLEDsByMode
 21789 ;;		_tickGet
 21790 ;; This function is called by:
 21791 ;;		_powerUp
 21792 ;; This function uses a non-reentrant model
 21793 ;;
 21794                           
 21795                           	psect	text5
 21796   004F50                     __ptext5:
 21797                           	callstack 0
 21798   004F50                     _mnsPowerUp:
 21799                           	callstack 122
 21800   004F50                     
 21801                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 21802   004F50  0EFD               	movlw	253
 21803   004F52  6E07               	movwf	readNVM@index^(0+1280),c
 21804   004F54  0E03               	movlw	3
 21805   004F56  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21806   004F58  0E00               	movlw	0
 21807   004F5A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21808   004F5C  0E00               	movlw	0
 21809   004F5E  EC89  F03A         	call	_readNVM
 21810   004F62  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21811   004F66  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21812   004F6A                     
 21813                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 21814   004F6A  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21815   004F6C  EFBC  F027         	goto	u7440
 21816   004F70  EFBA  F027         	goto	u7441
 21817   004F74                     u7441:
 21818   004F74  EFC1  F027         	goto	l1295
 21819   004F78                     u7440:
 21820   004F78                     l10167:
 21821                           
 21822                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 21823   004F78  0105               	movlb	5	; () banked
 21824   004F7A  6B90               	clrf	(_nn+1)& (0+255),b
 21825                           
 21826                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 21827   004F7C  6B8F               	clrf	_nn& (0+255),b
 21828                           
 21829                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 21830   004F7E  EFDB  F027         	goto	l10175
 21831   004F82                     l1295:
 21832                           
 21833                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 21834   004F82  C50E  F590         	movff	mnsPowerUp@temp,_nn+1
 21835   004F86                     
 21836                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 21837   004F86  0EFC               	movlw	252
 21838   004F88  6E07               	movwf	readNVM@index^(0+1280),c
 21839   004F8A  0E03               	movlw	3
 21840   004F8C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21841   004F8E  0E00               	movlw	0
 21842   004F90  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21843   004F92  0E00               	movlw	0
 21844   004F94  EC89  F03A         	call	_readNVM
 21845   004F98  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21846   004F9C  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21847   004FA0                     
 21848                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 21849   004FA0  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21850   004FA2  EFD7  F027         	goto	u7450
 21851   004FA6  EFD5  F027         	goto	u7451
 21852   004FAA                     u7451:
 21853   004FAA  EFD9  F027         	goto	l1297
 21854   004FAE                     u7450:
 21855   004FAE  EFBC  F027         	goto	l10167
 21856   004FB2                     l1297:
 21857                           
 21858                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 21859   004FB2  C50E  F58F         	movff	mnsPowerUp@temp,_nn
 21860   004FB6                     l10175:
 21861                           
 21862                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 21863   004FB6  0EFB               	movlw	251
 21864   004FB8  6E07               	movwf	readNVM@index^(0+1280),c
 21865   004FBA  0E03               	movlw	3
 21866   004FBC  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21867   004FBE  0E00               	movlw	0
 21868   004FC0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21869   004FC2  0E00               	movlw	0
 21870   004FC4  EC89  F03A         	call	_readNVM
 21871   004FC8  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21872   004FCC  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21873   004FD0                     
 21874                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 21875   004FD0  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21876   004FD2  EFEF  F027         	goto	u7460
 21877   004FD6  EFED  F027         	goto	u7461
 21878   004FDA                     u7461:
 21879   004FDA  EFF3  F027         	goto	l1299
 21880   004FDE                     u7460:
 21881   004FDE                     
 21882                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 21883   004FDE  0105               	movlb	5	; () banked
 21884   004FE0  69A1               	setf	_mode_state& (0+255),b
 21885                           
 21886                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 21887   004FE2  EFF5  F027         	goto	l1300
 21888   004FE6                     l1299:
 21889                           
 21890                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 21891   004FE6  C50E  F5A1         	movff	mnsPowerUp@temp,_mode_state
 21892   004FEA                     l1300:
 21893                           
 21894                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 21895   004FEA  C5A1  F59E         	movff	_mode_state,_setupModePreviousMode
 21896   004FEE                     
 21897                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 21898   004FEE  0EF9               	movlw	249
 21899   004FF0  6E07               	movwf	readNVM@index^(0+1280),c
 21900   004FF2  0E03               	movlw	3
 21901   004FF4  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21902   004FF6  0E00               	movlw	0
 21903   004FF8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21904   004FFA  0E00               	movlw	0
 21905   004FFC  EC89  F03A         	call	_readNVM
 21906   005000  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21907   005004  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21908   005008                     
 21909                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 21910   005008  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21911   00500A  EF0B  F028         	goto	u7470
 21912   00500E  EF09  F028         	goto	u7471
 21913   005012                     u7471:
 21914   005012  EF0F  F028         	goto	l1301
 21915   005016                     u7470:
 21916   005016                     
 21917                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 21918   005016  0105               	movlb	5	; () banked
 21919   005018  6BA4               	clrf	_mode_flags& (0+255),b
 21920                           
 21921                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 21922   00501A  EF11  F028         	goto	l10187
 21923   00501E                     l1301:
 21924                           
 21925                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 21926   00501E  C50E  F5A4         	movff	mnsPowerUp@temp,_mode_flags
 21927   005022                     l10187:
 21928                           
 21929                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 21930   005022  0105               	movlb	5	; () banked
 21931   005024  97A4               	bcf	_mode_flags& (0+255),3,b
 21932                           
 21933                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 21934   005026  87A4               	bsf	_mode_flags& (0+255),3,b
 21935   005028                     
 21936                           ; BSR set to: 5
 21937                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 21938   005028  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 21939   00502C                     
 21940                           ; BSR set to: 5
 21941                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 21942   00502C  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 21943   005030                     
 21944                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 21945   005030  EC14  F03A         	call	_tickGet	;wreg free
 21946   005034  C501  F570         	movff	?_tickGet,_pbTimer
 21947   005038  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 21948   00503C  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 21949   005040  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 21950   005044                     
 21951                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 21952   005044  0105               	movlb	5	; () banked
 21953   005046  6B9D               	clrf	_pbWasPushed& (0+255),b
 21954   005048                     
 21955                           ; BSR set to: 5
 21956                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 21957   005048  0E01               	movlw	1
 21958   00504A  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 21959   00504C                     l10203:
 21960                           
 21961                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 21962   00504C  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 21963   00504E  0D02               	mullw	2
 21964   005050  0EAD               	movlw	low _mnsDiagnostics
 21965   005052  24F3               	addwf	243,w,c
 21966   005054  6ED9               	movwf	fsr2l,c
 21967   005056  0E05               	movlw	high _mnsDiagnostics
 21968   005058  20F4               	addwfc	prodh,w,c
 21969   00505A  6EDA               	movwf	fsr2h,c
 21970   00505C  6ADE               	clrf	postinc2,c
 21971   00505E  6ADD               	clrf	postdec2,c
 21972   005060                     
 21973                           ;../../VLCBlib_PIC/mns.c: 342:     }
 21974   005060  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 21975   005062  0E06               	movlw	6
 21976   005064  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 21977   005066  EF37  F028         	goto	u7481
 21978   00506A  EF39  F028         	goto	u7480
 21979   00506E                     u7481:
 21980   00506E  EF26  F028         	goto	l10203
 21981   005072                     u7480:
 21982   005072                     
 21983                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 21984   005072  0E00               	movlw	0
 21985   005074  0105               	movlb	5	; () banked
 21986   005076  6FAE               	movwf	(_mnsDiagnostics+1)& (0+255),b
 21987   005078  0E06               	movlw	6
 21988   00507A  6FAD               	movwf	_mnsDiagnostics& (0+255),b
 21989   00507C                     
 21990                           ; BSR set to: 5
 21991                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 21992   00507C  6B9C               	clrf	_heartbeatSequence& (0+255),b
 21993                           
 21994                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 21995   00507E  0E00               	movlw	0
 21996   005080  6F6C               	movwf	_heartbeatTimer& (0+255),b
 21997   005082  0E00               	movlw	0
 21998   005084  6F6D               	movwf	(_heartbeatTimer+1)& (0+255),b
 21999   005086  0E00               	movlw	0
 22000   005088  6F6E               	movwf	(_heartbeatTimer+2)& (0+255),b
 22001   00508A  0E00               	movlw	0
 22002   00508C  6F6F               	movwf	(_heartbeatTimer+3)& (0+255),b
 22003                           
 22004                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 22005   00508E  0E00               	movlw	0
 22006   005090  6F68               	movwf	_uptimeTimer& (0+255),b
 22007   005092  0E00               	movlw	0
 22008   005094  6F69               	movwf	(_uptimeTimer+1)& (0+255),b
 22009   005096  0E00               	movlw	0
 22010   005098  6F6A               	movwf	(_uptimeTimer+2)& (0+255),b
 22011   00509A  0E00               	movlw	0
 22012   00509C  6F6B               	movwf	(_uptimeTimer+3)& (0+255),b
 22013   00509E                     
 22014                           ; BSR set to: 5
 22015   00509E  0012               	return		;funcret
 22016   0050A0                     __end_of_mnsPowerUp:
 22017                           	callstack 0
 22018                           
 22019 ;; *************** function _consumerPowerUp *****************
 22020 ;; Defined at:
 22021 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 22022 ;; Parameters:    Size  Location     Type
 22023 ;;		None
 22024 ;; Auto vars:     Size  Location     Type
 22025 ;;  temp            1    0[COMRAM] unsigned char 
 22026 ;; Return value:  Size  Location     Type
 22027 ;;                  1    wreg      void 
 22028 ;; Registers used:
 22029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22030 ;; Tracked objects:
 22031 ;;		On entry : 0/0
 22032 ;;		On exit  : 0/0
 22033 ;;		Unchanged: 0/0
 22034 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22039 ;;Total ram usage:        1 bytes
 22040 ;; Hardware stack levels used: 1
 22041 ;; Hardware stack levels required when called: 1
 22042 ;; This function calls:
 22043 ;;		Nothing
 22044 ;; This function is called by:
 22045 ;;		_powerUp
 22046 ;; This function uses a non-reentrant model
 22047 ;;
 22048                           
 22049                           	psect	text6
 22050   007E3A                     __ptext6:
 22051                           	callstack 0
 22052   007E3A                     _consumerPowerUp:
 22053                           	callstack 124
 22054   007E3A                     
 22055                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 22056   007E3A  0E01               	movlw	1
 22057   007E3C  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 22058   007E3E                     l9777:
 22059                           
 22060                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 22061   007E3E  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 22062   007E40  0D02               	mullw	2
 22063   007E42  0EC1               	movlw	low _consumerDiagnostics
 22064   007E44  24F3               	addwf	243,w,c
 22065   007E46  6ED9               	movwf	fsr2l,c
 22066   007E48  0E05               	movlw	high _consumerDiagnostics
 22067   007E4A  20F4               	addwfc	prodh,w,c
 22068   007E4C  6EDA               	movwf	fsr2h,c
 22069   007E4E  6ADE               	clrf	postinc2,c
 22070   007E50  6ADD               	clrf	postdec2,c
 22071   007E52                     
 22072                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 22073   007E52  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 22074   007E54  0E02               	movlw	2
 22075   007E56  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 22076   007E58  EF30  F03F         	goto	u6931
 22077   007E5C  EF32  F03F         	goto	u6930
 22078   007E60                     u6931:
 22079   007E60  EF1F  F03F         	goto	l9777
 22080   007E64                     u6930:
 22081   007E64                     
 22082                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 22083   007E64  0E00               	movlw	0
 22084   007E66  0105               	movlb	5	; () banked
 22085   007E68  6FC2               	movwf	(_consumerDiagnostics+1)& (0+255),b
 22086   007E6A  0E02               	movlw	2
 22087   007E6C  6FC1               	movwf	_consumerDiagnostics& (0+255),b
 22088   007E6E                     
 22089                           ; BSR set to: 5
 22090   007E6E  0012               	return		;funcret
 22091   007E70                     __end_of_consumerPowerUp:
 22092                           	callstack 0
 22093                           
 22094 ;; *************** function _canPowerUp *****************
 22095 ;; Defined at:
 22096 ;;		line 254 in file "../../VLCBlib_PIC/can18_can_2.c"
 22097 ;; Parameters:    Size  Location     Type
 22098 ;;		None
 22099 ;; Auto vars:     Size  Location     Type
 22100 ;;  temp            2   12[COMRAM] int 
 22101 ;;  txFifoObj       2    0        PTR unsigned char 
 22102 ;; Return value:  Size  Location     Type
 22103 ;;                  1    wreg      void 
 22104 ;; Registers used:
 22105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22106 ;; Tracked objects:
 22107 ;;		On entry : 0/0
 22108 ;;		On exit  : 0/0
 22109 ;;		Unchanged: 0/0
 22110 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22115 ;;Total ram usage:        2 bytes
 22116 ;; Hardware stack levels used: 1
 22117 ;; Hardware stack levels required when called: 3
 22118 ;; This function calls:
 22119 ;;		_CAN1_OperationModeSet
 22120 ;;		_prepareSelfEnumResponse
 22121 ;;		_readNVM
 22122 ;;		_tickGet
 22123 ;; This function is called by:
 22124 ;;		_powerUp
 22125 ;; This function uses a non-reentrant model
 22126 ;;
 22127                           
 22128                           	psect	text7
 22129   004DDE                     __ptext7:
 22130                           	callstack 0
 22131   004DDE                     _canPowerUp:
 22132                           	callstack 122
 22133   004DDE                     
 22134                           ;../../VLCBlib_PIC/can18_can_2.c: 255:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          6:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.readIndex =
      +                           0;
 22135   004DDE  0105               	movlb	5	; () banked
 22136   004DE0  6BC9               	clrf	(_rxQueue+2)& (0+255),b
 22137                           
 22138                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.writeIndex = 0;
 22139   004DE2  6BCA               	clrf	(_rxQueue+3)& (0+255),b
 22140   004DE4                     
 22141                           ; BSR set to: 5
 22142                           ;../../VLCBlib_PIC/can18_can_2.c: 261:     rxQueue.messages = rxBuffers;
 22143   004DE4  0E46               	movlw	low _rxBuffers
 22144   004DE6  6FC7               	movwf	_rxQueue& (0+255),b
 22145   004DE8  0E06               	movlw	high _rxBuffers
 22146   004DEA  6FC8               	movwf	(_rxQueue+1)& (0+255),b
 22147   004DEC                     
 22148                           ; BSR set to: 5
 22149                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     rxQueue.size = 8;
 22150   004DEC  0E08               	movlw	8
 22151   004DEE  6FCB               	movwf	(_rxQueue+4)& (0+255),b
 22152   004DF0                     
 22153                           ; BSR set to: 5
 22154                           ;../../VLCBlib_PIC/can18_can_2.c: 264:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 22155   004DF0  0EFE               	movlw	254
 22156   004DF2  6E07               	movwf	readNVM@index^(0+1280),c
 22157   004DF4  0E03               	movlw	3
 22158   004DF6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22159   004DF8  0E00               	movlw	0
 22160   004DFA  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22161   004DFC  0E00               	movlw	0
 22162   004DFE  EC89  F03A         	call	_readNVM
 22163   004E02  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 22164   004E06  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 22165   004E0A                     
 22166                           ;../../VLCBlib_PIC/can18_can_2.c: 265:     if (temp < 0) {
 22167   004E0A  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22168   004E0C  EF0C  F027         	goto	u6810
 22169   004E10  EF0A  F027         	goto	u6811
 22170   004E14                     u6811:
 22171   004E14  EF10  F027         	goto	l570
 22172   004E18                     u6810:
 22173   004E18                     
 22174                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = 0;
 22175   004E18  0105               	movlb	5	; () banked
 22176   004E1A  6BA8               	clrf	_canId& (0+255),b
 22177                           
 22178                           ;../../VLCBlib_PIC/can18_can_2.c: 268:     } else {
 22179   004E1C  EF12  F027         	goto	l9533
 22180   004E20                     l570:
 22181                           
 22182                           ;../../VLCBlib_PIC/can18_can_2.c: 269:         canId = (uint8_t)temp;
 22183   004E20  C50D  F5A8         	movff	canPowerUp@temp,_canId
 22184   004E24                     l9533:
 22185                           
 22186                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     for (temp=1; temp<18; temp++) {
 22187   004E24  0E00               	movlw	0
 22188   004E26  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 22189   004E28  0E01               	movlw	1
 22190   004E2A  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 22191   004E2C                     l9539:
 22192                           
 22193                           ;../../VLCBlib_PIC/can18_can_2.c: 274:         canDiagnostics[temp].asUint = 0;
 22194   004E2C  90D8               	bcf	status,0,c
 22195   004E2E  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 22196   004E30  6ED9               	movwf	fsr2l,c
 22197   004E32  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 22198   004E34  6EDA               	movwf	fsr2h,c
 22199   004E36  0E8E               	movlw	low _canDiagnostics
 22200   004E38  26D9               	addwf	fsr2l,f,c
 22201   004E3A  0E06               	movlw	high _canDiagnostics
 22202   004E3C  22DA               	addwfc	fsr2h,f,c
 22203   004E3E  6ADE               	clrf	postinc2,c
 22204   004E40  6ADD               	clrf	postdec2,c
 22205   004E42                     
 22206                           ;../../VLCBlib_PIC/can18_can_2.c: 275:     }
 22207   004E42  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 22208   004E44  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 22209   004E46  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22210   004E48  EF2F  F027         	goto	u6821
 22211   004E4C  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 22212   004E4E  E109               	bnz	u6820
 22213   004E50  0E12               	movlw	18
 22214   004E52  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 22215   004E54  A0D8               	btfss	status,0,c
 22216   004E56  EF2F  F027         	goto	u6821
 22217   004E5A  EF31  F027         	goto	u6820
 22218   004E5E                     u6821:
 22219   004E5E  EF16  F027         	goto	l9539
 22220   004E62                     u6820:
 22221   004E62                     
 22222                           ;../../VLCBlib_PIC/can18_can_2.c: 276:     canDiagnostics[0x00].asUint = 18;
 22223   004E62  0E00               	movlw	0
 22224   004E64  0106               	movlb	6	; () banked
 22225   004E66  6F8F               	movwf	(_canDiagnostics+1)& (0+255),b
 22226   004E68  0E12               	movlw	18
 22227   004E6A  6F8E               	movwf	_canDiagnostics& (0+255),b
 22228   004E6C                     
 22229                           ; BSR set to: 6
 22230                           ;../../VLCBlib_PIC/can18_can_2.c: 279:     canTransmitFailed=0;
 22231   004E6C  0105               	movlb	5	; () banked
 22232   004E6E  6BA7               	clrf	_canTransmitFailed& (0+255),b
 22233                           
 22234                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     RB2PPS = 0x46;
 22235   004E70  0E46               	movlw	70
 22236   004E72  0102               	movlb	2	; () banked
 22237   004E74  6F0B               	movwf	11,b	;volatile
 22238                           
 22239                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     CANRXPPS = 013 ;
 22240   004E76  0E0B               	movlw	11
 22241   004E78  6F3D               	movwf	61,b	;volatile
 22242   004E7A                     
 22243                           ; BSR set to: 2
 22244                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     TRISBbits.TRISB2 = 0;
 22245   004E7A  94C7               	bcf	199,2,c	;volatile
 22246   004E7C                     
 22247                           ; BSR set to: 2
 22248                           ;../../VLCBlib_PIC/can18_can_2.c: 285:     TRISBbits.TRISB3 = 1;
 22249   004E7C  86C7               	bsf	199,3,c	;volatile
 22250   004E7E                     
 22251                           ; BSR set to: 2
 22252                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     IPR5 = 0;
 22253   004E7E  0103               	movlb	3	; () banked
 22254   004E80  6B67               	clrf	103,b	;volatile
 22255   004E82                     
 22256                           ; BSR set to: 3
 22257                           ;../../VLCBlib_PIC/can18_can_2.c: 288:     C1CONHbits.ON = 1;
 22258   004E82  0101               	movlb	1	; () banked
 22259   004E84  8F01               	bsf	1,7,b	;volatile
 22260   004E86                     
 22261                           ; BSR set to: 1
 22262                           ;../../VLCBlib_PIC/can18_can_2.c: 291:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 22263   004E86  0E04               	movlw	4
 22264   004E88  EC20  F038         	call	_CAN1_OperationModeSet
 22265   004E8C  0900               	iorlw	0
 22266   004E8E  A4D8               	btfss	status,2,c
 22267   004E90  EF4C  F027         	goto	u6831
 22268   004E94  EF4E  F027         	goto	u6830
 22269   004E98                     u6831:
 22270   004E98  EF91  F027         	goto	l9643
 22271   004E9C                     u6830:
 22272   004E9C                     
 22273                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1FIFOBA = 0x3BB0;
 22274   004E9C  0EB0               	movlw	176
 22275   004E9E  0101               	movlb	1	; () banked
 22276   004EA0  6F4C               	movwf	76,b	;volatile
 22277   004EA2  0E3B               	movlw	59
 22278   004EA4  6F4D               	movwf	77,b	;volatile
 22279   004EA6  0E00               	movlw	0
 22280   004EA8  6F4E               	movwf	78,b	;volatile
 22281   004EAA  0E00               	movlw	0
 22282   004EAC  6F4F               	movwf	79,b	;volatile
 22283   004EAE                     
 22284                           ; BSR set to: 1
 22285                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONL = 0x00;
 22286   004EAE  6B00               	clrf	0,b	;volatile
 22287                           
 22288                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONH = 0x87;
 22289   004EB0  0E87               	movlw	135
 22290   004EB2  6F01               	movwf	1,b	;volatile
 22291                           
 22292                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1CONU = 0x10;
 22293   004EB4  0E10               	movlw	16
 22294   004EB6  6F02               	movwf	2,b	;volatile
 22295                           
 22296                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1CONT = 0x50;
 22297   004EB8  0E50               	movlw	80
 22298   004EBA  6F03               	movwf	3,b	;volatile
 22299   004EBC                     
 22300                           ; BSR set to: 1
 22301                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGL = 0x00;
 22302   004EBC  6B04               	clrf	4,b	;volatile
 22303                           
 22304                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGH = 0x03;
 22305   004EBE  0E03               	movlw	3
 22306   004EC0  6F05               	movwf	5,b	;volatile
 22307                           
 22308                           ;../../VLCBlib_PIC/can18_can_2.c: 303:         C1NBTCFGU = 0x02;
 22309   004EC2  0E02               	movlw	2
 22310   004EC4  6F06               	movwf	6,b	;volatile
 22311                           
 22312                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1NBTCFGT = 0x3F;
 22313   004EC6  0E3F               	movlw	63
 22314   004EC8  6F07               	movwf	7,b	;volatile
 22315                           
 22316                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONL = 0x10;
 22317   004ECA  0E10               	movlw	16
 22318   004ECC  6F50               	movwf	80,b	;volatile
 22319                           
 22320                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONH = 0x04;
 22321   004ECE  0E04               	movlw	4
 22322   004ED0  6F51               	movwf	81,b	;volatile
 22323                           
 22324                           ;../../VLCBlib_PIC/can18_can_2.c: 308:         C1TXQCONU = 0x6F;
 22325   004ED2  0E6F               	movlw	111
 22326   004ED4  6F52               	movwf	82,b	;volatile
 22327   004ED6                     
 22328                           ; BSR set to: 1
 22329   004ED6  0E03               	movlw	3
 22330   004ED8  6F53               	movwf	83,b	;volatile
 22331   004EDA                     
 22332                           ; BSR set to: 1
 22333                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1L = 0x80;
 22334   004EDA  0E80               	movlw	128
 22335   004EDC  6F5C               	movwf	92,b	;volatile
 22336   004EDE                     
 22337                           ; BSR set to: 1
 22338                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1H = 0x04;
 22339   004EDE  0E04               	movlw	4
 22340   004EE0  6F5D               	movwf	93,b	;volatile
 22341   004EE2                     
 22342                           ; BSR set to: 1
 22343                           ;../../VLCBlib_PIC/can18_can_2.c: 316:         C1FIFOCON1U = 0x6F;
 22344   004EE2  0E6F               	movlw	111
 22345   004EE4  6F5E               	movwf	94,b	;volatile
 22346   004EE6                     
 22347                           ; BSR set to: 1
 22348   004EE6  6B5F               	clrf	95,b	;volatile
 22349   004EE8                     
 22350                           ; BSR set to: 1
 22351                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2L = 0x80;
 22352   004EE8  0E80               	movlw	128
 22353   004EEA  6F68               	movwf	104,b	;volatile
 22354   004EEC                     
 22355                           ; BSR set to: 1
 22356                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2H = 0x04;
 22357   004EEC  0E04               	movlw	4
 22358   004EEE  6F69               	movwf	105,b	;volatile
 22359   004EF0                     
 22360                           ; BSR set to: 1
 22361                           ;../../VLCBlib_PIC/can18_can_2.c: 324:         C1FIFOCON2U = 0x60;
 22362   004EF0  0E60               	movlw	96
 22363   004EF2  6F6A               	movwf	106,b	;volatile
 22364   004EF4                     
 22365                           ; BSR set to: 1
 22366   004EF4  0E1F               	movlw	31
 22367   004EF6  6F6B               	movwf	107,b	;volatile
 22368   004EF8                     
 22369                           ; BSR set to: 1
 22370                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3L = 0x08;
 22371   004EF8  0E08               	movlw	8
 22372   004EFA  6F74               	movwf	116,b	;volatile
 22373   004EFC                     
 22374                           ; BSR set to: 1
 22375                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3H = 0x04;
 22376   004EFC  0E04               	movlw	4
 22377   004EFE  6F75               	movwf	117,b	;volatile
 22378   004F00                     
 22379                           ; BSR set to: 1
 22380                           ;../../VLCBlib_PIC/can18_can_2.c: 332:         C1FIFOCON3U = 0x00;
 22381   004F00  6B76               	clrf	118,b	;volatile
 22382   004F02                     
 22383                           ; BSR set to: 1
 22384   004F02  0E1F               	movlw	31
 22385   004F04  6F77               	movwf	119,b	;volatile
 22386   004F06                     
 22387                           ; BSR set to: 1
 22388                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0L = 0x00;
 22389   004F06  6B8C               	clrf	140,b	;volatile
 22390   004F08                     
 22391                           ; BSR set to: 1
 22392                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0H = 0x00;
 22393   004F08  6B8D               	clrf	141,b	;volatile
 22394   004F0A                     
 22395                           ; BSR set to: 1
 22396                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1FLTOBJ0U = 0x00;
 22397   004F0A  6B8E               	clrf	142,b	;volatile
 22398   004F0C                     
 22399                           ; BSR set to: 1
 22400                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1FLTOBJ0T = 0x00;
 22401   004F0C  6B8F               	clrf	143,b	;volatile
 22402   004F0E                     
 22403                           ; BSR set to: 1
 22404                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0L = 0x00;
 22405   004F0E  6B90               	clrf	144,b	;volatile
 22406   004F10                     
 22407                           ; BSR set to: 1
 22408                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0H = 0x00;
 22409   004F10  6B91               	clrf	145,b	;volatile
 22410   004F12                     
 22411                           ; BSR set to: 1
 22412                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1MASK0U = 0x00;
 22413   004F12  6B92               	clrf	146,b	;volatile
 22414   004F14                     
 22415                           ; BSR set to: 1
 22416                           ;../../VLCBlib_PIC/can18_can_2.c: 345:         C1MASK0T = 0x40;
 22417   004F14  0E40               	movlw	64
 22418   004F16  6F93               	movwf	147,b	;volatile
 22419   004F18                     
 22420                           ; BSR set to: 1
 22421                           ;../../VLCBlib_PIC/can18_can_2.c: 346:         C1FLTCON0L = 0x83;
 22422   004F18  0E83               	movlw	131
 22423   004F1A  6F80               	movwf	128,b	;volatile
 22424   004F1C                     
 22425                           ; BSR set to: 1
 22426                           ;../../VLCBlib_PIC/can18_can_2.c: 349:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 22427   004F1C  0E06               	movlw	6
 22428   004F1E  EC20  F038         	call	_CAN1_OperationModeSet
 22429   004F22                     l9643:
 22430                           
 22431                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     prepareSelfEnumResponse();
 22432   004F22  EC9C  F039         	call	_prepareSelfEnumResponse	;wreg free
 22433   004F26                     
 22434                           ;../../VLCBlib_PIC/can18_can_2.c: 355:     enumerationState = NO_ENUMERATION;
 22435   004F26  0105               	movlb	5	; () banked
 22436   004F28  6BA5               	clrf	_enumerationState& (0+255),b
 22437   004F2A                     
 22438                           ; BSR set to: 5
 22439                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     enumerationStartTime.val = tickGet();
 22440   004F2A  EC14  F03A         	call	_tickGet	;wreg free
 22441   004F2E  C501  F574         	movff	?_tickGet,_enumerationStartTime
 22442   004F32  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 22443   004F36  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 22444   004F3A  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 22445   004F3E                     
 22446                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     IPR0bits.CANIP = 0;
 22447   004F3E  0103               	movlb	3	; () banked
 22448   004F40  9D62               	bcf	98,6,b	;volatile
 22449   004F42                     
 22450                           ; BSR set to: 3
 22451                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     PIR0bits.CANIF = 0;
 22452   004F42  9CAE               	bcf	174,6,c	;volatile
 22453   004F44                     
 22454                           ; BSR set to: 3
 22455                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTUbits.TXIE = 1;
 22456   004F44  0101               	movlb	1	; () banked
 22457   004F46  811E               	bsf	30,0,b	;volatile
 22458   004F48                     
 22459                           ; BSR set to: 1
 22460                           ;../../VLCBlib_PIC/can18_can_2.c: 361:     C1INTTbits.RXOVIE = 1;
 22461   004F48  871F               	bsf	31,3,b	;volatile
 22462   004F4A                     
 22463                           ; BSR set to: 1
 22464                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     C1INTTbits.IVMIE = 1;
 22465   004F4A  8F1F               	bsf	31,7,b	;volatile
 22466   004F4C                     
 22467                           ; BSR set to: 1
 22468                           ;../../VLCBlib_PIC/can18_can_2.c: 364:     PIE0bits.CANIE = 1;
 22469   004F4C  8C9E               	bsf	158,6,c	;volatile
 22470   004F4E                     
 22471                           ; BSR set to: 1
 22472   004F4E  0012               	return		;funcret
 22473   004F50                     __end_of_canPowerUp:
 22474                           	callstack 0
 22475                           
 22476 ;; *************** function _bootPowerUp *****************
 22477 ;; Defined at:
 22478 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 22479 ;; Parameters:    Size  Location     Type
 22480 ;;		None
 22481 ;; Auto vars:     Size  Location     Type
 22482 ;;  a               3   15[COMRAM] unsigned um
 22483 ;;  i               1   14[COMRAM] unsigned char 
 22484 ;;  found           1   13[COMRAM] unsigned char 
 22485 ;;  b               1   12[COMRAM] unsigned char 
 22486 ;; Return value:  Size  Location     Type
 22487 ;;                  1    wreg      void 
 22488 ;; Registers used:
 22489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22490 ;; Tracked objects:
 22491 ;;		On entry : 0/0
 22492 ;;		On exit  : 0/0
 22493 ;;		Unchanged: 0/0
 22494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22496 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22499 ;;Total ram usage:        6 bytes
 22500 ;; Hardware stack levels used: 1
 22501 ;; Hardware stack levels required when called: 3
 22502 ;; This function calls:
 22503 ;;		_readNVM
 22504 ;; This function is called by:
 22505 ;;		_powerUp
 22506 ;; This function uses a non-reentrant model
 22507 ;;
 22508                           
 22509                           	psect	text8
 22510   005C36                     __ptext8:
 22511                           	callstack 0
 22512   005C36                     _bootPowerUp:
 22513                           	callstack 122
 22514   005C36                     
 22515                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 22516   005C36  0105               	movlb	5	; () banked
 22517   005C38  6BAA               	clrf	_bootloaderType& (0+255),b
 22518                           
 22519                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 22520   005C3A  6BA9               	clrf	_bootloaderVersion& (0+255),b
 22521   005C3C                     
 22522                           ; BSR set to: 5
 22523                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 22524   005C3C  0E00               	movlw	0
 22525   005C3E  6E10               	movwf	bootPowerUp@a^(0+1280),c
 22526   005C40  0E00               	movlw	0
 22527   005C42  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 22528   005C44  0E00               	movlw	0
 22529   005C46  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 22530   005C48                     l9459:
 22531   005C48                     
 22532                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 22533   005C48  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 22534   005C4A                     l9467:
 22535                           
 22536                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 22537   005C4A  500F               	movf	bootPowerUp@i^(0+1280),w,c
 22538   005C4C  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22539   005C4E  6E07               	movwf	readNVM@index^(0+1280),c
 22540   005C50  0E00               	movlw	0
 22541   005C52  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22542   005C54  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22543   005C56  0E00               	movlw	0
 22544   005C58  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22545   005C5A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22546   005C5C  0E01               	movlw	1
 22547   005C5E  EC89  F03A         	call	_readNVM
 22548   005C62  5007               	movf	?_readNVM^(0+1280),w,c
 22549   005C64  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 22550   005C66                     
 22551                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 22552   005C66  0E95               	movlw	low _bl_version
 22553   005C68  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 22554   005C6A  6EF6               	movwf	tblptrl,c
 22555   005C6C  6AF7               	clrf	tblptrh,c
 22556   005C6E  0EFF               	movlw	high _bl_version
 22557   005C70  22F7               	addwfc	tblptrh,f,c
 22558   005C72                     	if	1	;There are 3 active tblptr bytes
 22559   005C72  6AF8               	clrf	tblptru,c
 22560   005C74  0E00               	movlw	low (__mediumconst shr (0+16))
 22561   005C76  22F8               	addwfc	tblptru,f,c
 22562   005C78                     	endif
 22563   005C78  0008               	tblrd		*
 22564   005C7A  50F5               	movf	tablat,w,c
 22565   005C7C  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 22566   005C7E  B4D8               	btfsc	status,2,c
 22567   005C80  EF44  F02E         	goto	u6751
 22568   005C84  EF46  F02E         	goto	u6750
 22569   005C88                     u6751:
 22570   005C88  EF49  F02E         	goto	l9475
 22571   005C8C                     u6750:
 22572   005C8C                     
 22573                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 22574   005C8C  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 22575                           
 22576                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 22577   005C8E  EF54  F02E         	goto	l9481
 22578   005C92                     l9475:
 22579                           
 22580                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 22581   005C92  0E01               	movlw	1
 22582   005C94  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 22583   005C96                     
 22584                           ;../../VLCBlib_PIC/boot.c: 217:         }
 22585   005C96  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 22586   005C98  0E0A               	movlw	10
 22587   005C9A  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 22588   005C9C  EF52  F02E         	goto	u6761
 22589   005CA0  EF54  F02E         	goto	u6760
 22590   005CA4                     u6761:
 22591   005CA4  EF25  F02E         	goto	l9467
 22592   005CA8                     u6760:
 22593   005CA8                     l9481:
 22594                           
 22595                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 22596   005CA8  500E               	movf	bootPowerUp@found^(0+1280),w,c
 22597   005CAA  B4D8               	btfsc	status,2,c
 22598   005CAC  EF5A  F02E         	goto	u6771
 22599   005CB0  EF5C  F02E         	goto	u6770
 22600   005CB4                     u6771:
 22601   005CB4  EF7C  F02E         	goto	l340
 22602   005CB8                     u6770:
 22603   005CB8                     
 22604                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 22605   005CB8  0E0B               	movlw	11
 22606   005CBA  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22607   005CBC  6E07               	movwf	readNVM@index^(0+1280),c
 22608   005CBE  0E00               	movlw	0
 22609   005CC0  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22610   005CC2  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22611   005CC4  0E00               	movlw	0
 22612   005CC6  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22613   005CC8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22614   005CCA  0E01               	movlw	1
 22615   005CCC  EC89  F03A         	call	_readNVM
 22616   005CD0  5007               	movf	?_readNVM^(0+1280),w,c
 22617   005CD2  0105               	movlb	5	; () banked
 22618   005CD4  6FAA               	movwf	_bootloaderType& (0+255),b
 22619                           
 22620                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 22621   005CD6  0E0C               	movlw	12
 22622   005CD8  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22623   005CDA  6E07               	movwf	readNVM@index^(0+1280),c
 22624   005CDC  0E00               	movlw	0
 22625   005CDE  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22626   005CE0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22627   005CE2  0E00               	movlw	0
 22628   005CE4  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22629   005CE6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22630   005CE8  0E01               	movlw	1
 22631   005CEA  EC89  F03A         	call	_readNVM
 22632   005CEE  5007               	movf	?_readNVM^(0+1280),w,c
 22633   005CF0  0105               	movlb	5	; () banked
 22634   005CF2  6FA9               	movwf	_bootloaderVersion& (0+255),b
 22635   005CF4  EF8E  F02E         	goto	l341
 22636   005CF8                     l340:
 22637                           
 22638                           ;../../VLCBlib_PIC/boot.c: 223:     }
 22639   005CF8  0E01               	movlw	1
 22640   005CFA  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 22641   005CFC  0E00               	movlw	0
 22642   005CFE  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 22643   005D00  0E00               	movlw	0
 22644   005D02  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 22645   005D04  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 22646   005D06  E10A               	bnz	u6780
 22647   005D08  2810               	incf	bootPowerUp@a^(0+1280),w,c
 22648   005D0A  0E07               	movlw	7
 22649   005D0C  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 22650   005D0E  A0D8               	btfss	status,0,c
 22651   005D10  EF8C  F02E         	goto	u6781
 22652   005D14  EF8E  F02E         	goto	u6780
 22653   005D18                     u6781:
 22654   005D18  EF24  F02E         	goto	l9459
 22655   005D1C                     u6780:
 22656   005D1C                     l341:
 22657   005D1C  0012               	return		;funcret
 22658   005D1E                     __end_of_bootPowerUp:
 22659                           	callstack 0
 22660                           
 22661 ;; *************** function _teachPowerUp *****************
 22662 ;; Defined at:
 22663 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 22664 ;; Parameters:    Size  Location     Type
 22665 ;;		None
 22666 ;; Auto vars:     Size  Location     Type
 22667 ;;  i               1   39[COMRAM] unsigned char 
 22668 ;; Return value:  Size  Location     Type
 22669 ;;                  1    wreg      void 
 22670 ;; Registers used:
 22671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22672 ;; Tracked objects:
 22673 ;;		On entry : 0/0
 22674 ;;		On exit  : 0/0
 22675 ;;		Unchanged: 0/0
 22676 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22681 ;;Total ram usage:        1 bytes
 22682 ;; Hardware stack levels used: 1
 22683 ;; Hardware stack levels required when called: 5
 22684 ;; This function calls:
 22685 ;;		_rebuildHashtable
 22686 ;; This function is called by:
 22687 ;;		_powerUp
 22688 ;; This function uses a non-reentrant model
 22689 ;;
 22690                           
 22691                           	psect	text9
 22692   007DC2                     __ptext9:
 22693                           	callstack 0
 22694   007DC2                     _teachPowerUp:
 22695                           	callstack 120
 22696   007DC2                     
 22697                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 22698   007DC2  ECB5  F02B         	call	_rebuildHashtable	;wreg free
 22699   007DC6                     
 22700                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 22701   007DC6  0E01               	movlw	1
 22702   007DC8  6E28               	movwf	teachPowerUp@i^(0+1280),c
 22703   007DCA                     l9881:
 22704                           
 22705                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 22706   007DCA  5028               	movf	teachPowerUp@i^(0+1280),w,c
 22707   007DCC  0D02               	mullw	2
 22708   007DCE  0ECC               	movlw	low _teachDiagnostics
 22709   007DD0  24F3               	addwf	243,w,c
 22710   007DD2  6ED9               	movwf	fsr2l,c
 22711   007DD4  0E05               	movlw	high _teachDiagnostics
 22712   007DD6  20F4               	addwfc	prodh,w,c
 22713   007DD8  6EDA               	movwf	fsr2h,c
 22714   007DDA  6ADE               	clrf	postinc2,c
 22715   007DDC  6ADD               	clrf	postdec2,c
 22716   007DDE                     
 22717                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 22718   007DDE  2A28               	incf	teachPowerUp@i^(0+1280),f,c
 22719   007DE0  0E01               	movlw	1
 22720   007DE2  6428               	cpfsgt	teachPowerUp@i^(0+1280),c
 22721   007DE4  EFF6  F03E         	goto	u7061
 22722   007DE8  EFF8  F03E         	goto	u7060
 22723   007DEC                     u7061:
 22724   007DEC  EFE5  F03E         	goto	l9881
 22725   007DF0                     u7060:
 22726   007DF0                     
 22727                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 22728   007DF0  0E00               	movlw	0
 22729   007DF2  0105               	movlb	5	; () banked
 22730   007DF4  6FCD               	movwf	(_teachDiagnostics+1)& (0+255),b
 22731   007DF6  0E01               	movlw	1
 22732   007DF8  6FCC               	movwf	_teachDiagnostics& (0+255),b
 22733   007DFA                     
 22734                           ; BSR set to: 5
 22735                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 22736   007DFA  6BA3               	clrf	_errno& (0+255),b
 22737   007DFC                     
 22738                           ; BSR set to: 5
 22739                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 22740   007DFC  91A4               	bcf	_mode_flags& (0+255),0,b
 22741   007DFE                     
 22742                           ; BSR set to: 5
 22743   007DFE  0012               	return		;funcret
 22744   007E00                     __end_of_teachPowerUp:
 22745                           	callstack 0
 22746                           
 22747 ;; *************** function _loadNvCache *****************
 22748 ;; Defined at:
 22749 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 22750 ;; Parameters:    Size  Location     Type
 22751 ;;		None
 22752 ;; Auto vars:     Size  Location     Type
 22753 ;;  temp            2   14[COMRAM] short 
 22754 ;;  i               1   16[COMRAM] unsigned char 
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  1    wreg      void 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22765 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22768 ;;Total ram usage:        5 bytes
 22769 ;; Hardware stack levels used: 1
 22770 ;; Hardware stack levels required when called: 3
 22771 ;; This function calls:
 22772 ;;		_readNVM
 22773 ;; This function is called by:
 22774 ;;		_nvPowerUp
 22775 ;; This function uses a non-reentrant model
 22776 ;;
 22777                           
 22778                           	psect	text10
 22779   007804                     __ptext10:
 22780                           	callstack 0
 22781   007804                     _loadNvCache:
 22782                           	callstack 121
 22783   007804                     
 22784                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 49; i++) {
 22785   007804  0E01               	movlw	1
 22786   007806  6E11               	movwf	loadNvCache@i^(0+1280),c
 22787   007808                     l9087:
 22788                           
 22789                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 22790   007808  0E00               	movlw	0
 22791   00780A  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22792   00780C  6E0D               	movwf	??_loadNvCache^(0+1280),c
 22793   00780E  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 22794   007810  0E02               	movlw	2
 22795   007812  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 22796   007814  C50D  F507         	movff	??_loadNvCache,readNVM@index
 22797   007818  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 22798   00781C  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 22799   00781E  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 22800   007820  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 22801   007822  0E00               	movlw	0
 22802   007824  EC89  F03A         	call	_readNVM
 22803   007828  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 22804   00782C  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 22805   007830                     
 22806                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 22807   007830  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 22808   007832  EF1F  F03C         	goto	u6350
 22809   007836  EF1D  F03C         	goto	u6351
 22810   00783A                     u6351:
 22811   00783A  EF21  F03C         	goto	l9093
 22812   00783E                     u6350:
 22813   00783E  EF29  F03C         	goto	l9095
 22814   007842                     l9093:
 22815                           
 22816                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 22817   007842  0E00               	movlw	low _nvCache
 22818   007844  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22819   007846  6ED9               	movwf	fsr2l,c
 22820   007848  6ADA               	clrf	fsr2h,c
 22821   00784A  0E06               	movlw	high _nvCache
 22822   00784C  22DA               	addwfc	fsr2h,f,c
 22823   00784E  C50F  F4DF         	movff	loadNvCache@temp,indf2
 22824   007852                     l9095:
 22825                           
 22826                           ;../../VLCBlib_PIC/nv.c: 173:     }
 22827   007852  2A11               	incf	loadNvCache@i^(0+1280),f,c
 22828   007854  0E31               	movlw	49
 22829   007856  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 22830   007858  EF30  F03C         	goto	u6361
 22831   00785C  EF32  F03C         	goto	u6360
 22832   007860                     u6361:
 22833   007860  EF04  F03C         	goto	l9087
 22834   007864                     u6360:
 22835   007864  0012               	return		;funcret
 22836   007866                     __end_of_loadNvCache:
 22837                           	callstack 0
 22838                           
 22839 ;; *************** function _leds_powerUp *****************
 22840 ;; Defined at:
 22841 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 22842 ;; Parameters:    Size  Location     Type
 22843 ;;		None
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;		None
 22846 ;; Return value:  Size  Location     Type
 22847 ;;                  1    wreg      void 
 22848 ;; Registers used:
 22849 ;;		wreg, status,2, status,0, cstack
 22850 ;; Tracked objects:
 22851 ;;		On entry : 0/0
 22852 ;;		On exit  : 0/0
 22853 ;;		Unchanged: 0/0
 22854 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22859 ;;Total ram usage:        0 bytes
 22860 ;; Hardware stack levels used: 1
 22861 ;; Hardware stack levels required when called: 2
 22862 ;; This function calls:
 22863 ;;		_tickGet
 22864 ;; This function is called by:
 22865 ;;		_powerUp
 22866 ;; This function uses a non-reentrant model
 22867 ;;
 22868                           
 22869                           	psect	text11
 22870   008192                     __ptext11:
 22871                           	callstack 0
 22872   008192                     _leds_powerUp:
 22873                           	callstack 123
 22874   008192                     
 22875                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
 22876   008192  0104               	movlb	4	; () banked
 22877   008194  6B08               	clrf	8,b	;volatile
 22878   008196  6B00               	clrf	0,b	;volatile
 22879   008198  9EC7               	bcf	199,7,c	;volatile
 22880   00819A  9CC7               	bcf	199,6,c	;volatile
 22881   00819C  84C6               	bsf	198,2,c	;volatile
 22882                           
 22883                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 22884   00819E  0105               	movlb	5	; () banked
 22885   0081A0  6B89               	clrf	_flashCounter& (0+255),b
 22886                           
 22887                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 22888   0081A2  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 22889   0081A4                     
 22890                           ; BSR set to: 5
 22891                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 22892   0081A4  EC14  F03A         	call	_tickGet	;wreg free
 22893   0081A8  C501  F564         	movff	?_tickGet,_ledTimer
 22894   0081AC  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 22895   0081B0  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 22896   0081B4  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 22897   0081B8  0012               	return		;funcret
 22898   0081BA                     __end_of_leds_powerUp:
 22899                           	callstack 0
 22900                           
 22901 ;; *************** function _initTimedResponse *****************
 22902 ;; Defined at:
 22903 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 22904 ;; Parameters:    Size  Location     Type
 22905 ;;		None
 22906 ;; Auto vars:     Size  Location     Type
 22907 ;;		None
 22908 ;; Return value:  Size  Location     Type
 22909 ;;                  1    wreg      void 
 22910 ;; Registers used:
 22911 ;;		None
 22912 ;; Tracked objects:
 22913 ;;		On entry : 0/0
 22914 ;;		On exit  : 0/0
 22915 ;;		Unchanged: 0/0
 22916 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22921 ;;Total ram usage:        0 bytes
 22922 ;; Hardware stack levels used: 1
 22923 ;; Hardware stack levels required when called: 1
 22924 ;; This function calls:
 22925 ;;		Nothing
 22926 ;; This function is called by:
 22927 ;;		_powerUp
 22928 ;; This function uses a non-reentrant model
 22929 ;;
 22930                           
 22931                           	psect	text12
 22932   00836C                     __ptext12:
 22933                           	callstack 0
 22934   00836C                     _initTimedResponse:
 22935                           	callstack 124
 22936   00836C                     
 22937                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 22938   00836C  0105               	movlb	5	; () banked
 22939   00836E  6996               	setf	_timedResponseType& (0+255),b
 22940   008370                     
 22941                           ; BSR set to: 5
 22942   008370  0012               	return		;funcret
 22943   008372                     __end_of_initTimedResponse:
 22944                           	callstack 0
 22945                           
 22946 ;; *************** function _initTicker *****************
 22947 ;; Defined at:
 22948 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 22949 ;; Parameters:    Size  Location     Type
 22950 ;;  priority        1    wreg     unsigned char 
 22951 ;; Auto vars:     Size  Location     Type
 22952 ;;  priority        1    1[COMRAM] unsigned char 
 22953 ;;  i               1    3[COMRAM] unsigned char 
 22954 ;;  divider         1    2[COMRAM] unsigned char 
 22955 ;; Return value:  Size  Location     Type
 22956 ;;                  1    wreg      void 
 22957 ;; Registers used:
 22958 ;;		wreg, status,2, status,0
 22959 ;; Tracked objects:
 22960 ;;		On entry : 0/0
 22961 ;;		On exit  : 0/0
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22965 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22968 ;;Total ram usage:        4 bytes
 22969 ;; Hardware stack levels used: 1
 22970 ;; Hardware stack levels required when called: 1
 22971 ;; This function calls:
 22972 ;;		Nothing
 22973 ;; This function is called by:
 22974 ;;		_powerUp
 22975 ;; This function uses a non-reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text13
 22979   007866                     __ptext13:
 22980                           	callstack 0
 22981   007866                     _initTicker:
 22982                           	callstack 124
 22983                           
 22984                           ; BSR set to: 5
 22985                           ;incstack = 0
 22986                           ;initTicker@priority stored from wreg
 22987   007866  6E02               	movwf	initTicker@priority^(0+1280),c
 22988   007868                     
 22989                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 22990   007868  6A03               	clrf	initTicker@divider^(0+1280),c
 22991   00786A                     
 22992                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 22993   00786A  0E40               	movlw	64
 22994   00786C  6E04               	movwf	initTicker@i^(0+1280),c
 22995   00786E                     l10859:
 22996                           
 22997                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 22998   00786E  2A03               	incf	initTicker@divider^(0+1280),f,c
 22999   007870  90D8               	bcf	status,0,c
 23000   007872  3204               	rrcf	initTicker@i^(0+1280),f,c
 23001   007874  5004               	movf	initTicker@i^(0+1280),w,c
 23002   007876  A4D8               	btfss	status,2,c
 23003   007878  EF40  F03C         	goto	u8181
 23004   00787C  EF42  F03C         	goto	u8180
 23005   007880                     u8181:
 23006   007880  EF37  F03C         	goto	l10859
 23007   007884                     u8180:
 23008   007884                     
 23009                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 23010   007884  C503  F501         	movff	initTicker@divider,??_initTicker
 23011   007888  0E01               	movlw	1
 23012   00788A  2601               	addwf	??_initTicker^(0+1280),f,c
 23013   00788C  0103               	movlb	3	; () banked
 23014   00788E  511B               	movf	27,w,b	;volatile
 23015   007890  1801               	xorwf	??_initTicker^(0+1280),w,c
 23016   007892  0BF0               	andlw	-16
 23017   007894  1801               	xorwf	??_initTicker^(0+1280),w,c
 23018   007896  6F1B               	movwf	27,b	;volatile
 23019   007898                     
 23020                           ; BSR set to: 3
 23021                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 23022   007898  891A               	bsf	26,4,b	;volatile
 23023   00789A                     
 23024                           ; BSR set to: 3
 23025                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 23026   00789A  511B               	movf	27,w,b	;volatile
 23027   00789C  0B1F               	andlw	-225
 23028   00789E  0940               	iorlw	64
 23029   0078A0  6F1B               	movwf	27,b	;volatile
 23030   0078A2                     
 23031                           ; BSR set to: 3
 23032                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 23033   0078A2  6B19               	clrf	25,b	;volatile
 23034   0078A4                     
 23035                           ; BSR set to: 3
 23036                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 23037   0078A4  6B18               	clrf	24,b	;volatile
 23038   0078A6                     
 23039                           ; BSR set to: 3
 23040                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 23041   0078A6  B002               	btfsc	initTicker@priority^(0+1280),0,c
 23042   0078A8  EF58  F03C         	goto	u8191
 23043   0078AC  EF5B  F03C         	goto	u8190
 23044   0078B0                     u8191:
 23045   0078B0  8F65               	bsf	101,7,b	;volatile
 23046   0078B2  EF5D  F03C         	goto	u8205
 23047   0078B6                     u8190:
 23048   0078B6  0103               	movlb	3	; () banked
 23049   0078B8  9F65               	bcf	101,7,b	;volatile
 23050   0078BA                     u8205:
 23051   0078BA                     
 23052                           ; BSR set to: 3
 23053                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 23054   0078BA  9EB1               	bcf	1201,7,c	;volatile
 23055   0078BC                     
 23056                           ; BSR set to: 3
 23057                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 23058   0078BC  8EA1               	bsf	1185,7,c	;volatile
 23059   0078BE                     
 23060                           ; BSR set to: 3
 23061                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 23062   0078BE  8F1A               	bsf	26,7,b	;volatile
 23063   0078C0                     
 23064                           ; BSR set to: 3
 23065                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 23066   0078C0  0105               	movlb	5	; () banked
 23067   0078C2  6B9A               	clrf	_timerExtension1& (0+255),b	;volatile
 23068   0078C4                     
 23069                           ; BSR set to: 5
 23070                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 23071   0078C4  6B99               	clrf	_timerExtension2& (0+255),b	;volatile
 23072   0078C6                     
 23073                           ; BSR set to: 5
 23074   0078C6  0012               	return		;funcret
 23075   0078C8                     __end_of_initTicker:
 23076                           	callstack 0
 23077                           
 23078 ;; *************** function _CAN1_OperationModeSet *****************
 23079 ;; Defined at:
 23080 ;;		line 919 in file "../../VLCBlib_PIC/can18_can_2.c"
 23081 ;; Parameters:    Size  Location     Type
 23082 ;;  requestMode     1    wreg     const enum E23640
 23083 ;; Auto vars:     Size  Location     Type
 23084 ;;  requestMode     1    1[COMRAM] const enum E23640
 23085 ;;  status          1    0[COMRAM] enum E23649
 23086 ;; Return value:  Size  Location     Type
 23087 ;;                  1    wreg      enum E23649
 23088 ;; Registers used:
 23089 ;;		wreg, status,2, status,0, cstack
 23090 ;; Tracked objects:
 23091 ;;		On entry : 0/0
 23092 ;;		On exit  : 0/0
 23093 ;;		Unchanged: 0/0
 23094 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23099 ;;Total ram usage:        2 bytes
 23100 ;; Hardware stack levels used: 1
 23101 ;; Hardware stack levels required when called: 2
 23102 ;; This function calls:
 23103 ;;		_CAN1_OperationModeGet
 23104 ;; This function is called by:
 23105 ;;		_canPowerUp
 23106 ;; This function uses a non-reentrant model
 23107 ;;
 23108                           
 23109                           	psect	text14
 23110   007040                     __ptext14:
 23111                           	callstack 0
 23112   007040                     _CAN1_OperationModeSet:
 23113                           	callstack 122
 23114                           
 23115                           ; BSR set to: 5
 23116                           ;incstack = 0
 23117                           ;CAN1_OperationModeSet@requestMode stored from wreg
 23118   007040  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 23119   007042                     
 23120                           ;../../VLCBlib_PIC/can18_can_2.c: 919: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 920: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 921:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 23121   007042  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 23122   007044                     
 23123                           ;../../VLCBlib_PIC/can18_can_2.c: 923:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 23124   007044  ECA4  F041         	call	_CAN1_OperationModeGet	;wreg free
 23125   007048  0A04               	xorlw	4
 23126   00704A  B4D8               	btfsc	status,2,c
 23127   00704C  EF2A  F038         	goto	u5831
 23128   007050  EF2C  F038         	goto	u5830
 23129   007054                     u5831:
 23130   007054  EF3D  F038         	goto	l8597
 23131   007058                     u5830:
 23132   007058  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23133   00705A  B4D8               	btfsc	status,2,c
 23134   00705C  EF32  F038         	goto	u5841
 23135   007060  EF34  F038         	goto	u5840
 23136   007064                     u5841:
 23137   007064  EF3D  F038         	goto	l8597
 23138   007068                     u5840:
 23139   007068  0E04               	movlw	4
 23140   00706A  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23141   00706C  A4D8               	btfss	status,2,c
 23142   00706E  EF3B  F038         	goto	u5851
 23143   007072  EF3D  F038         	goto	u5850
 23144   007076                     u5851:
 23145   007076  EF5D  F038         	goto	l8603
 23146   00707A                     u5850:
 23147   00707A                     l8597:
 23148                           
 23149                           ;../../VLCBlib_PIC/can18_can_2.c: 926:     {;../../VLCBlib_PIC/can18_can_2.c: 927:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 23150   00707A  0101               	movlb	1	; () banked
 23151   00707C  5103               	movf	3,w,b	;volatile
 23152   00707E  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23153   007080  0BF8               	andlw	-8
 23154   007082  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23155   007084  6F03               	movwf	3,b	;volatile
 23156                           
 23157                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23158   007086  EF50  F038         	goto	l8601
 23159   00708A                     l754:
 23160                           
 23161                           ; BSR set to: 1
 23162                           ;../../VLCBlib_PIC/can18_can_2.c: 930:         {;../../VLCBlib_PIC/can18_can_2.c: 932:  
      +                                     if (C1INTHbits.SERRIF == 1)
 23163   00708A  A91D               	btfss	29,4,b	;volatile
 23164   00708C  EF4A  F038         	goto	u5861
 23165   007090  EF4C  F038         	goto	u5860
 23166   007094                     u5861:
 23167   007094  EF50  F038         	goto	l8601
 23168   007098                     u5860:
 23169   007098                     
 23170                           ; BSR set to: 1
 23171                           ;../../VLCBlib_PIC/can18_can_2.c: 933:             {;../../VLCBlib_PIC/can18_can_2.c: 93
      +                          4:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 23172   007098  0E02               	movlw	2
 23173   00709A  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23174                           
 23175                           ;../../VLCBlib_PIC/can18_can_2.c: 935:                 break;
 23176   00709C  EF5F  F038         	goto	l757
 23177   0070A0                     l8601:
 23178                           
 23179                           ; BSR set to: 1
 23180                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23181   0070A0  3902               	swapf	2,w,b	;volatile
 23182   0070A2  32E8               	rrcf	wreg,f,c
 23183   0070A4  0B07               	andlw	7
 23184   0070A6  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23185   0070A8  A4D8               	btfss	status,2,c
 23186   0070AA  EF59  F038         	goto	u5871
 23187   0070AE  EF5B  F038         	goto	u5870
 23188   0070B2                     u5871:
 23189   0070B2  EF45  F038         	goto	l754
 23190   0070B6                     u5870:
 23191   0070B6  EF5F  F038         	goto	l757
 23192   0070BA                     l8603:
 23193                           
 23194                           ;../../VLCBlib_PIC/can18_can_2.c: 940:     {;../../VLCBlib_PIC/can18_can_2.c: 941:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 23195   0070BA  0E01               	movlw	1
 23196   0070BC  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23197   0070BE                     l757:
 23198                           
 23199                           ;../../VLCBlib_PIC/can18_can_2.c: 944:     return status;
 23200   0070BE  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 23201   0070C0  0012               	return		;funcret
 23202   0070C2                     __end_of_CAN1_OperationModeSet:
 23203                           	callstack 0
 23204                           
 23205 ;; *************** function _CAN1_OperationModeGet *****************
 23206 ;; Defined at:
 23207 ;;		line 952 in file "../../VLCBlib_PIC/can18_can_2.c"
 23208 ;; Parameters:    Size  Location     Type
 23209 ;;		None
 23210 ;; Auto vars:     Size  Location     Type
 23211 ;;		None
 23212 ;; Return value:  Size  Location     Type
 23213 ;;                  1    wreg      enum E23640
 23214 ;; Registers used:
 23215 ;;		wreg, status,2, status,0
 23216 ;; Tracked objects:
 23217 ;;		On entry : 0/0
 23218 ;;		On exit  : 0/0
 23219 ;;		Unchanged: 0/0
 23220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23225 ;;Total ram usage:        0 bytes
 23226 ;; Hardware stack levels used: 1
 23227 ;; Hardware stack levels required when called: 1
 23228 ;; This function calls:
 23229 ;;		Nothing
 23230 ;; This function is called by:
 23231 ;;		_CAN1_OperationModeSet
 23232 ;; This function uses a non-reentrant model
 23233 ;;
 23234                           
 23235                           	psect	text15
 23236   008348                     __ptext15:
 23237                           	callstack 0
 23238   008348                     _CAN1_OperationModeGet:
 23239                           	callstack 122
 23240   008348                     
 23241                           ;../../VLCBlib_PIC/can18_can_2.c: 954:     return C1CONUbits.OPMOD;
 23242   008348  0101               	movlb	1	; () banked
 23243   00834A  3902               	swapf	2,w,b	;volatile
 23244   00834C  32E8               	rrcf	wreg,f,c
 23245   00834E  0B07               	andlw	7
 23246   008350                     
 23247                           ; BSR set to: 1
 23248   008350  0012               	return		;funcret
 23249   008352                     __end_of_CAN1_OperationModeGet:
 23250                           	callstack 0
 23251                           
 23252 ;; *************** function _poll *****************
 23253 ;; Defined at:
 23254 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 23255 ;; Parameters:    Size  Location     Type
 23256 ;;		None
 23257 ;; Auto vars:     Size  Location     Type
 23258 ;;  m               9   36[BANK5 ] struct Message
 23259 ;;  i               1   35[BANK5 ] unsigned char 
 23260 ;;  handled         1   34[BANK5 ] enum E23340
 23261 ;; Return value:  Size  Location     Type
 23262 ;;                  1    wreg      void 
 23263 ;; Registers used:
 23264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23265 ;; Tracked objects:
 23266 ;;		On entry : 0/0
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23271 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23273 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23274 ;;Total ram usage:       15 bytes
 23275 ;; Hardware stack levels used: 1
 23276 ;; Hardware stack levels required when called: 11
 23277 ;; This function calls:
 23278 ;;		NULL
 23279 ;;		_APP_postProcessMessage
 23280 ;;		_APP_preProcessMessage
 23281 ;;		___lmul
 23282 ;;		_bootProcessMessage
 23283 ;;		_canPoll
 23284 ;;		_canProcessMessage
 23285 ;;		_canReceiveMessage
 23286 ;;		_consumerProcessMessage
 23287 ;;		_flushFlashBlock
 23288 ;;		_leds_poll
 23289 ;;		_mnsPoll
 23290 ;;		_mnsProcessMessage
 23291 ;;		_nvProcessMessage
 23292 ;;		_pollTimedResponse
 23293 ;;		_showStatus
 23294 ;;		_teachProcessMessage
 23295 ;;		_tickGet
 23296 ;; This function is called by:
 23297 ;;		_main
 23298 ;; This function uses a non-reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text16
 23302   002EC6                     __ptext16:
 23303                           	callstack 0
 23304   002EC6                     _poll:
 23305                           	callstack 115
 23306   002EC6                     
 23307                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 23308   002EC6  EC14  F03A         	call	_tickGet	;wreg free
 23309   002ECA  0105               	movlb	5	; () banked
 23310   002ECC  5160               	movf	_timedResponseTime& (0+255),w,b
 23311   002ECE  5C01               	subwf	?_tickGet^(0+1280),w,c
 23312   002ED0  6FEE               	movwf	??_poll& (0+255),b
 23313   002ED2  5161               	movf	(_timedResponseTime+1)& (0+255),w,b
 23314   002ED4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23315   002ED6  6FEF               	movwf	(??_poll+1)& (0+255),b
 23316   002ED8  5162               	movf	(_timedResponseTime+2)& (0+255),w,b
 23317   002EDA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23318   002EDC  6FF0               	movwf	(??_poll+2)& (0+255),b
 23319   002EDE  5163               	movf	(_timedResponseTime+3)& (0+255),w,b
 23320   002EE0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23321   002EE2  6FF1               	movwf	(??_poll+3)& (0+255),b
 23322   002EE4  5193               	movf	_timedResponseDelay& (0+255),w,b
 23323   002EE6  6E01               	movwf	___lmul@multiplier^(0+1280),c
 23324   002EE8  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 23325   002EEA  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 23326   002EEC  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 23327   002EEE  0E3E               	movlw	62
 23328   002EF0  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 23329   002EF2  0E00               	movlw	0
 23330   002EF4  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 23331   002EF6  0E00               	movlw	0
 23332   002EF8  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 23333   002EFA  0E00               	movlw	0
 23334   002EFC  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 23335   002EFE  EC66  F03B         	call	___lmul	;wreg free
 23336   002F02  0105               	movlb	5	; () banked
 23337   002F04  51EE               	movf	??_poll& (0+255),w,b
 23338   002F06  5C01               	subwf	?___lmul^(0+1280),w,c
 23339   002F08  51EF               	movf	(??_poll+1)& (0+255),w,b
 23340   002F0A  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 23341   002F0C  51F0               	movf	(??_poll+2)& (0+255),w,b
 23342   002F0E  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 23343   002F10  51F1               	movf	(??_poll+3)& (0+255),w,b
 23344   002F12  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 23345   002F14  B0D8               	btfsc	status,0,c
 23346   002F16  EF8F  F017         	goto	u8461
 23347   002F1A  EF91  F017         	goto	u8460
 23348   002F1E                     u8461:
 23349   002F1E  EF9D  F017         	goto	l11149
 23350   002F22                     u8460:
 23351   002F22                     
 23352                           ; BSR set to: 5
 23353                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 23354   002F22  ECF2  F030         	call	_pollTimedResponse	;wreg free
 23355   002F26                     
 23356                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 23357   002F26  EC14  F03A         	call	_tickGet	;wreg free
 23358   002F2A  C501  F560         	movff	?_tickGet,_timedResponseTime
 23359   002F2E  C502  F561         	movff	?_tickGet+1,_timedResponseTime+1
 23360   002F32  C503  F562         	movff	?_tickGet+2,_timedResponseTime+2
 23361   002F36  C504  F563         	movff	?_tickGet+3,_timedResponseTime+3
 23362   002F3A                     l11149:
 23363                           
 23364                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 23365   002F3A  EC14  F03A         	call	_tickGet	;wreg free
 23366   002F3E  0106               	movlb	6	; () banked
 23367   002F40  5142               	movf	_flashFlushTime& (0+255),w,b
 23368   002F42  5C01               	subwf	?_tickGet^(0+1280),w,c
 23369   002F44  0105               	movlb	5	; () banked
 23370   002F46  6FEE               	movwf	??_poll& (0+255),b
 23371   002F48  0106               	movlb	6	; () banked
 23372   002F4A  5143               	movf	(_flashFlushTime+1)& (0+255),w,b
 23373   002F4C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23374   002F4E  0105               	movlb	5	; () banked
 23375   002F50  6FEF               	movwf	(??_poll+1)& (0+255),b
 23376   002F52  0106               	movlb	6	; () banked
 23377   002F54  5144               	movf	(_flashFlushTime+2)& (0+255),w,b
 23378   002F56  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23379   002F58  0105               	movlb	5	; () banked
 23380   002F5A  6FF0               	movwf	(??_poll+2)& (0+255),b
 23381   002F5C  0106               	movlb	6	; () banked
 23382   002F5E  5145               	movf	(_flashFlushTime+3)& (0+255),w,b
 23383   002F60  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23384   002F62  0105               	movlb	5	; () banked
 23385   002F64  6FF1               	movwf	(??_poll+3)& (0+255),b
 23386   002F66  51F1               	movf	(??_poll+3)& (0+255),w,b
 23387   002F68  11F0               	iorwf	(??_poll+2)& (0+255),w,b
 23388   002F6A  E10B               	bnz	u8470
 23389   002F6C  0E25               	movlw	37
 23390   002F6E  5DEE               	subwf	??_poll& (0+255),w,b
 23391   002F70  0EF4               	movlw	244
 23392   002F72  59EF               	subwfb	(??_poll+1)& (0+255),w,b
 23393   002F74  A0D8               	btfss	status,0,c
 23394   002F76  EFBF  F017         	goto	u8471
 23395   002F7A  EFC1  F017         	goto	u8470
 23396   002F7E                     u8471:
 23397   002F7E  EFCD  F017         	goto	l11155
 23398   002F82                     u8470:
 23399   002F82                     
 23400                           ; BSR set to: 5
 23401                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 23402   002F82  EC01  F035         	call	_flushFlashBlock	;wreg free
 23403   002F86                     
 23404                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 23405   002F86  EC14  F03A         	call	_tickGet	;wreg free
 23406   002F8A  C501  F642         	movff	?_tickGet,_flashFlushTime
 23407   002F8E  C502  F643         	movff	?_tickGet+1,_flashFlushTime+1
 23408   002F92  C503  F644         	movff	?_tickGet+2,_flashFlushTime+2
 23409   002F96  C504  F645         	movff	?_tickGet+3,_flashFlushTime+3
 23410   002F9A                     l11155:
 23411                           
 23412                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<6; i++) {
 23413   002F9A  0105               	movlb	5	; () banked
 23414   002F9C  6BF3               	clrf	poll@i& (0+255),b
 23415   002F9E                     l11161:
 23416                           
 23417                           ; BSR set to: 5
 23418                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 23419   002F9E  51F3               	movf	poll@i& (0+255),w,b
 23420   002FA0  0D02               	mullw	2
 23421   002FA2  0E89               	movlw	low _services
 23422   002FA4  24F3               	addwf	243,w,c
 23423   002FA6  6EF6               	movwf	tblptrl,c
 23424   002FA8  0EFF               	movlw	high _services
 23425   002FAA  20F4               	addwfc	244,w,c
 23426   002FAC  6EF7               	movwf	tblptrh,c
 23427   002FAE                     	if	1	;There are 3 active tblptr bytes
 23428   002FAE  6AF8               	clrf	tblptru,c
 23429   002FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 23430   002FB2  22F8               	addwfc	tblptru,f,c
 23431   002FB4                     	endif
 23432   002FB4  0009               	tblrd		*+
 23433   002FB6  50F5               	movf	tablat,w,c
 23434   002FB8  0009               	tblrd		*+
 23435   002FBA  10F5               	iorwf	tablat,w,c
 23436   002FBC  B4D8               	btfsc	status,2,c
 23437   002FBE  EFE3  F017         	goto	u8481
 23438   002FC2  EFE5  F017         	goto	u8480
 23439   002FC6                     u8481:
 23440   002FC6  EF36  F018         	goto	l11167
 23441   002FCA                     u8480:
 23442   002FCA                     
 23443                           ; BSR set to: 5
 23444   002FCA  51F3               	movf	poll@i& (0+255),w,b
 23445   002FCC  0D02               	mullw	2
 23446   002FCE  0E89               	movlw	low _services
 23447   002FD0  24F3               	addwf	243,w,c
 23448   002FD2  6EF6               	movwf	tblptrl,c
 23449   002FD4  0EFF               	movlw	high _services
 23450   002FD6  20F4               	addwfc	244,w,c
 23451   002FD8  6EF7               	movwf	tblptrh,c
 23452   002FDA                     	if	1	;There are 3 active tblptr bytes
 23453   002FDA  6AF8               	clrf	tblptru,c
 23454   002FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 23455   002FDE  22F8               	addwfc	tblptru,f,c
 23456   002FE0                     	endif
 23457   002FE0  0009               	tblrd		*+
 23458   002FE2  C4F5 F5EE          	movff	tablat,??_poll
 23459   002FE6  0009               	tblrd		*+
 23460   002FE8  C4F5 F5EF          	movff	tablat,??_poll+1
 23461   002FEC  0E08               	movlw	8
 23462   002FEE  27EE               	addwf	??_poll& (0+255),f,b
 23463   002FF0  0E00               	movlw	0
 23464   002FF2  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23465   002FF4  C5EE  F4F6         	movff	??_poll,tblptrl
 23466   002FF8  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23467   002FFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23468   002FFC  6AF8               	clrf	tblptru,c
 23469   002FFE                     	endif
 23470   002FFE                     	if	0	;tblptru may be non-zero
 23471   002FFE                     	endif
 23472   002FFE  0009               	tblrd		*+
 23473   003000  50F5               	movf	tablat,w,c
 23474   003002  0009               	tblrd		*+
 23475   003004  10F5               	iorwf	tablat,w,c
 23476   003006  B4D8               	btfsc	status,2,c
 23477   003008  EF08  F018         	goto	u8491
 23478   00300C  EF0A  F018         	goto	u8490
 23479   003010                     u8491:
 23480   003010  EF36  F018         	goto	l11167
 23481   003014                     u8490:
 23482   003014                     
 23483                           ; BSR set to: 5
 23484                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 23485   003014  51F3               	movf	poll@i& (0+255),w,b
 23486   003016  0D02               	mullw	2
 23487   003018  0E89               	movlw	low _services
 23488   00301A  24F3               	addwf	243,w,c
 23489   00301C  6EF6               	movwf	tblptrl,c
 23490   00301E  0EFF               	movlw	high _services
 23491   003020  20F4               	addwfc	244,w,c
 23492   003022  6EF7               	movwf	tblptrh,c
 23493   003024                     	if	1	;There are 3 active tblptr bytes
 23494   003024  6AF8               	clrf	tblptru,c
 23495   003026  0E00               	movlw	low (__mediumconst shr (0+16))
 23496   003028  22F8               	addwfc	tblptru,f,c
 23497   00302A                     	endif
 23498   00302A  0009               	tblrd		*+
 23499   00302C  C4F5 F5EE          	movff	tablat,??_poll
 23500   003030  0009               	tblrd		*+
 23501   003032  C4F5 F5EF          	movff	tablat,??_poll+1
 23502   003036  0E08               	movlw	8
 23503   003038  27EE               	addwf	??_poll& (0+255),f,b
 23504   00303A  0E00               	movlw	0
 23505   00303C  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23506   00303E  C5EE  F4F6         	movff	??_poll,tblptrl
 23507   003042  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23508   003046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23509   003046  6AF8               	clrf	tblptru,c
 23510   003048                     	endif
 23511   003048                     	if	0	;tblptru may be non-zero
 23512   003048                     	endif
 23513   003048  0009               	tblrd		*+
 23514   00304A  C4F5 F5F0          	movff	tablat,??_poll+2
 23515   00304E  0009               	tblrd		*+
 23516   003050  C4F5 F5F1          	movff	tablat,??_poll+3
 23517   003054  D802               	call	u8508
 23518   003056  EF36  F018         	goto	u8509
 23519   00305A                     u8508:
 23520   00305A  0005               	push	
 23521   00305C  6EFA               	movwf	pclath,c
 23522   00305E  51F0               	movf	(??_poll+2)& (0+255),w,b
 23523   003060  6EFD               	movwf	tosl,c
 23524   003062  51F1               	movf	(??_poll+3)& (0+255),w,b
 23525   003064  6EFE               	movwf	tosh,c
 23526   003066  6AFF               	clrf	tosu,c
 23527   003068  50FA               	movf	pclath,w,c
 23528   00306A  0012               	return		;indir
 23529   00306C                     u8509:
 23530   00306C                     l11167:
 23531                           
 23532                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 23533   00306C  0105               	movlb	5	; () banked
 23534   00306E  2BF3               	incf	poll@i& (0+255),f,b
 23535   003070                     
 23536                           ; BSR set to: 5
 23537   003070  0E05               	movlw	5
 23538   003072  65F3               	cpfsgt	poll@i& (0+255),b
 23539   003074  EF3E  F018         	goto	u8511
 23540   003078  EF40  F018         	goto	u8510
 23541   00307C                     u8511:
 23542   00307C  EFCF  F017         	goto	l11161
 23543   003080                     u8510:
 23544   003080                     
 23545                           ; BSR set to: 5
 23546                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 23547   003080  EC22  F01B         	call	_leds_poll	;wreg free
 23548   003084                     
 23549                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 23550   003084  0105               	movlb	5	; () banked
 23551   003086  6BF2               	clrf	poll@handled& (0+255),b
 23552   003088                     
 23553                           ; BSR set to: 5
 23554                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 23555   003088  5191               	movf	_transport& (0+255),w,b
 23556   00308A  1192               	iorwf	(_transport+1)& (0+255),w,b
 23557   00308C  B4D8               	btfsc	status,2,c
 23558   00308E  EF4B  F018         	goto	u8521
 23559   003092  EF4D  F018         	goto	u8520
 23560   003096                     u8521:
 23561   003096  EF3D  F019         	goto	l11209
 23562   00309A                     u8520:
 23563   00309A                     
 23564                           ; BSR set to: 5
 23565                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 23566   00309A  0E02               	movlw	2
 23567   00309C  2591               	addwf	_transport& (0+255),w,b
 23568   00309E  6FEE               	movwf	??_poll& (0+255),b
 23569   0030A0  0E00               	movlw	0
 23570   0030A2  2192               	addwfc	(_transport+1)& (0+255),w,b
 23571   0030A4  6FEF               	movwf	(??_poll+1)& (0+255),b
 23572   0030A6  C5EE  F4F6         	movff	??_poll,tblptrl
 23573   0030AA  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23574   0030AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23575   0030AE  6AF8               	clrf	tblptru,c
 23576   0030B0                     	endif
 23577   0030B0                     	if	0	;tblptru may be non-zero
 23578   0030B0                     	endif
 23579   0030B0  0009               	tblrd		*+
 23580   0030B2  50F5               	movf	tablat,w,c
 23581   0030B4  0009               	tblrd		*+
 23582   0030B6  10F5               	iorwf	tablat,w,c
 23583   0030B8  B4D8               	btfsc	status,2,c
 23584   0030BA  EF61  F018         	goto	u8531
 23585   0030BE  EF63  F018         	goto	u8530
 23586   0030C2                     u8531:
 23587   0030C2  EF3D  F019         	goto	l11209
 23588   0030C6                     u8530:
 23589   0030C6                     
 23590                           ; BSR set to: 5
 23591                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 23592   0030C6  0EF4               	movlw	low poll@m
 23593   0030C8  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 23594   0030CA  0E05               	movlw	high poll@m
 23595   0030CC  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 23596   0030CE  0E02               	movlw	2
 23597   0030D0  2591               	addwf	_transport& (0+255),w,b
 23598   0030D2  6FEE               	movwf	??_poll& (0+255),b
 23599   0030D4  0E00               	movlw	0
 23600   0030D6  2192               	addwfc	(_transport+1)& (0+255),w,b
 23601   0030D8  6FEF               	movwf	(??_poll+1)& (0+255),b
 23602   0030DA  C5EE  F4F6         	movff	??_poll,tblptrl
 23603   0030DE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23604   0030E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23605   0030E2  6AF8               	clrf	tblptru,c
 23606   0030E4                     	endif
 23607   0030E4                     	if	0	;tblptru may be non-zero
 23608   0030E4                     	endif
 23609   0030E4  0009               	tblrd		*+
 23610   0030E6  C4F5 F5F0          	movff	tablat,??_poll+2
 23611   0030EA  0009               	tblrd		*+
 23612   0030EC  C4F5 F5F1          	movff	tablat,??_poll+3
 23613   0030F0  D802               	call	u8548
 23614   0030F2  EF84  F018         	goto	u8549
 23615   0030F6                     u8548:
 23616   0030F6  0005               	push	
 23617   0030F8  6EFA               	movwf	pclath,c
 23618   0030FA  51F0               	movf	(??_poll+2)& (0+255),w,b
 23619   0030FC  6EFD               	movwf	tosl,c
 23620   0030FE  51F1               	movf	(??_poll+3)& (0+255),w,b
 23621   003100  6EFE               	movwf	tosh,c
 23622   003102  6AFF               	clrf	tosu,c
 23623   003104  50FA               	movf	pclath,w,c
 23624   003106  0012               	return		;indir
 23625   003108                     u8549:
 23626   003108  0900               	iorlw	0
 23627   00310A  B4D8               	btfsc	status,2,c
 23628   00310C  EF8A  F018         	goto	u8551
 23629   003110  EF8C  F018         	goto	u8550
 23630   003114                     u8551:
 23631   003114  EF3D  F019         	goto	l11209
 23632   003118                     u8550:
 23633   003118                     
 23634                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 23635   003118  0105               	movlb	5	; () banked
 23636   00311A  51F4               	movf	poll@m& (0+255),w,b
 23637   00311C  B4D8               	btfsc	status,2,c
 23638   00311E  EF93  F018         	goto	u8561
 23639   003122  EF95  F018         	goto	u8560
 23640   003126                     u8561:
 23641   003126  EF3D  F019         	goto	l11209
 23642   00312A                     u8560:
 23643   00312A                     
 23644                           ; BSR set to: 5
 23645                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 23646   00312A  0E07               	movlw	7
 23647   00312C  EC50  F028         	call	_showStatus
 23648                           
 23649                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 23650   003130  0EF4               	movlw	low poll@m
 23651   003132  6E01               	movwf	APP_preProcessMessage@m^(0+1280),c
 23652   003134  0E05               	movlw	high poll@m
 23653   003136  6E02               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 23654   003138  ECD1  F041         	call	_APP_preProcessMessage	;wreg free
 23655   00313C  0105               	movlb	5	; () banked
 23656   00313E  6FF2               	movwf	poll@handled& (0+255),b
 23657   003140                     
 23658                           ; BSR set to: 5
 23659                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 23660   003140  51F2               	movf	poll@handled& (0+255),w,b
 23661   003142  A4D8               	btfss	status,2,c
 23662   003144  EFA6  F018         	goto	u8571
 23663   003148  EFA8  F018         	goto	u8570
 23664   00314C                     u8571:
 23665   00314C  EF3D  F019         	goto	l11209
 23666   003150                     u8570:
 23667   003150                     
 23668                           ; BSR set to: 5
 23669                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<6; i++) {
 23670   003150  6BF3               	clrf	poll@i& (0+255),b
 23671   003152                     l11193:
 23672                           
 23673                           ; BSR set to: 5
 23674                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 23675   003152  51F3               	movf	poll@i& (0+255),w,b
 23676   003154  0D02               	mullw	2
 23677   003156  0E89               	movlw	low _services
 23678   003158  24F3               	addwf	243,w,c
 23679   00315A  6EF6               	movwf	tblptrl,c
 23680   00315C  0EFF               	movlw	high _services
 23681   00315E  20F4               	addwfc	244,w,c
 23682   003160  6EF7               	movwf	tblptrh,c
 23683   003162                     	if	1	;There are 3 active tblptr bytes
 23684   003162  6AF8               	clrf	tblptru,c
 23685   003164  0E00               	movlw	low (__mediumconst shr (0+16))
 23686   003166  22F8               	addwfc	tblptru,f,c
 23687   003168                     	endif
 23688   003168  0009               	tblrd		*+
 23689   00316A  50F5               	movf	tablat,w,c
 23690   00316C  0009               	tblrd		*+
 23691   00316E  10F5               	iorwf	tablat,w,c
 23692   003170  B4D8               	btfsc	status,2,c
 23693   003172  EFBD  F018         	goto	u8581
 23694   003176  EFBF  F018         	goto	u8580
 23695   00317A                     u8581:
 23696   00317A  EF21  F019         	goto	l11201
 23697   00317E                     u8580:
 23698   00317E                     
 23699                           ; BSR set to: 5
 23700   00317E  51F3               	movf	poll@i& (0+255),w,b
 23701   003180  0D02               	mullw	2
 23702   003182  0E89               	movlw	low _services
 23703   003184  24F3               	addwf	243,w,c
 23704   003186  6EF6               	movwf	tblptrl,c
 23705   003188  0EFF               	movlw	high _services
 23706   00318A  20F4               	addwfc	244,w,c
 23707   00318C  6EF7               	movwf	tblptrh,c
 23708   00318E                     	if	1	;There are 3 active tblptr bytes
 23709   00318E  6AF8               	clrf	tblptru,c
 23710   003190  0E00               	movlw	low (__mediumconst shr (0+16))
 23711   003192  22F8               	addwfc	tblptru,f,c
 23712   003194                     	endif
 23713   003194  0009               	tblrd		*+
 23714   003196  C4F5 F5EE          	movff	tablat,??_poll
 23715   00319A  0009               	tblrd		*+
 23716   00319C  C4F5 F5EF          	movff	tablat,??_poll+1
 23717   0031A0  0E06               	movlw	6
 23718   0031A2  27EE               	addwf	??_poll& (0+255),f,b
 23719   0031A4  0E00               	movlw	0
 23720   0031A6  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23721   0031A8  C5EE  F4F6         	movff	??_poll,tblptrl
 23722   0031AC  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23723   0031B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23724   0031B0  6AF8               	clrf	tblptru,c
 23725   0031B2                     	endif
 23726   0031B2                     	if	0	;tblptru may be non-zero
 23727   0031B2                     	endif
 23728   0031B2  0009               	tblrd		*+
 23729   0031B4  50F5               	movf	tablat,w,c
 23730   0031B6  0009               	tblrd		*+
 23731   0031B8  10F5               	iorwf	tablat,w,c
 23732   0031BA  B4D8               	btfsc	status,2,c
 23733   0031BC  EFE2  F018         	goto	u8591
 23734   0031C0  EFE4  F018         	goto	u8590
 23735   0031C4                     u8591:
 23736   0031C4  EF21  F019         	goto	l11201
 23737   0031C8                     u8590:
 23738   0031C8                     
 23739                           ; BSR set to: 5
 23740                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 23741   0031C8  0EF4               	movlw	low poll@m
 23742   0031CA  6E54               	movwf	nvProcessMessage@m^(0+1280),c
 23743   0031CC  0E05               	movlw	high poll@m
 23744   0031CE  6E55               	movwf	(nvProcessMessage@m+1)^(0+1280),c
 23745   0031D0  51F3               	movf	poll@i& (0+255),w,b
 23746   0031D2  0D02               	mullw	2
 23747   0031D4  0E89               	movlw	low _services
 23748   0031D6  24F3               	addwf	243,w,c
 23749   0031D8  6EF6               	movwf	tblptrl,c
 23750   0031DA  0EFF               	movlw	high _services
 23751   0031DC  20F4               	addwfc	244,w,c
 23752   0031DE  6EF7               	movwf	tblptrh,c
 23753   0031E0                     	if	1	;There are 3 active tblptr bytes
 23754   0031E0  6AF8               	clrf	tblptru,c
 23755   0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23756   0031E4  22F8               	addwfc	tblptru,f,c
 23757   0031E6                     	endif
 23758   0031E6  0009               	tblrd		*+
 23759   0031E8  C4F5 F5EE          	movff	tablat,??_poll
 23760   0031EC  0009               	tblrd		*+
 23761   0031EE  C4F5 F5EF          	movff	tablat,??_poll+1
 23762   0031F2  0E06               	movlw	6
 23763   0031F4  27EE               	addwf	??_poll& (0+255),f,b
 23764   0031F6  0E00               	movlw	0
 23765   0031F8  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23766   0031FA  C5EE  F4F6         	movff	??_poll,tblptrl
 23767   0031FE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23768   003202                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23769   003202  6AF8               	clrf	tblptru,c
 23770   003204                     	endif
 23771   003204                     	if	0	;tblptru may be non-zero
 23772   003204                     	endif
 23773   003204  0009               	tblrd		*+
 23774   003206  C4F5 F5F0          	movff	tablat,??_poll+2
 23775   00320A  0009               	tblrd		*+
 23776   00320C  C4F5 F5F1          	movff	tablat,??_poll+3
 23777   003210  D802               	call	u8608
 23778   003212  EF14  F019         	goto	u8609
 23779   003216                     u8608:
 23780   003216  0005               	push	
 23781   003218  6EFA               	movwf	pclath,c
 23782   00321A  51F0               	movf	(??_poll+2)& (0+255),w,b
 23783   00321C  6EFD               	movwf	tosl,c
 23784   00321E  51F1               	movf	(??_poll+3)& (0+255),w,b
 23785   003220  6EFE               	movwf	tosh,c
 23786   003222  6AFF               	clrf	tosu,c
 23787   003224  50FA               	movf	pclath,w,c
 23788   003226  0012               	return		;indir
 23789   003228                     u8609:
 23790   003228  06E8               	decf	wreg,f,c
 23791   00322A  A4D8               	btfss	status,2,c
 23792   00322C  EF1A  F019         	goto	u8611
 23793   003230  EF1C  F019         	goto	u8610
 23794   003234                     u8611:
 23795   003234  EF21  F019         	goto	l11201
 23796   003238                     u8610:
 23797   003238                     
 23798                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 23799   003238  0E01               	movlw	1
 23800   00323A  0105               	movlb	5	; () banked
 23801   00323C  6FF2               	movwf	poll@handled& (0+255),b
 23802                           
 23803                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 23804   00323E  EF2B  F019         	goto	l11205
 23805   003242                     l11201:
 23806                           
 23807                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 23808   003242  0105               	movlb	5	; () banked
 23809   003244  2BF3               	incf	poll@i& (0+255),f,b
 23810   003246                     
 23811                           ; BSR set to: 5
 23812   003246  0E05               	movlw	5
 23813   003248  65F3               	cpfsgt	poll@i& (0+255),b
 23814   00324A  EF29  F019         	goto	u8621
 23815   00324E  EF2B  F019         	goto	u8620
 23816   003252                     u8621:
 23817   003252  EFA9  F018         	goto	l11193
 23818   003256                     u8620:
 23819   003256                     l11205:
 23820                           
 23821                           ; BSR set to: 5
 23822                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 23823   003256  51F2               	movf	poll@handled& (0+255),w,b
 23824   003258  A4D8               	btfss	status,2,c
 23825   00325A  EF31  F019         	goto	u8631
 23826   00325E  EF33  F019         	goto	u8630
 23827   003262                     u8631:
 23828   003262  EF3D  F019         	goto	l2039
 23829   003266                     u8630:
 23830   003266                     
 23831                           ; BSR set to: 5
 23832                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 23833   003266  0EF4               	movlw	low poll@m
 23834   003268  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 23835   00326A  0E05               	movlw	high poll@m
 23836   00326C  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 23837   00326E  ECD3  F041         	call	_APP_postProcessMessage	;wreg free
 23838   003272  0105               	movlb	5	; () banked
 23839   003274  6FF2               	movwf	poll@handled& (0+255),b
 23840   003276  EF3D  F019         	goto	l11209
 23841   00327A                     l2039:
 23842   00327A                     l11209:
 23843                           
 23844                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 23845   00327A  0105               	movlb	5	; () banked
 23846   00327C  51F2               	movf	poll@handled& (0+255),w,b
 23847   00327E  B4D8               	btfsc	status,2,c
 23848   003280  EF44  F019         	goto	u8641
 23849   003284  EF46  F019         	goto	u8640
 23850   003288                     u8641:
 23851   003288  EF4B  F019         	goto	l2048
 23852   00328C                     u8640:
 23853   00328C                     
 23854                           ; BSR set to: 5
 23855                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 23856   00328C  4BB9               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 23857   00328E  2BBA               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 23858   003290                     
 23859                           ; BSR set to: 5
 23860                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 23861   003290  0E08               	movlw	8
 23862   003292  EC50  F028         	call	_showStatus
 23863   003296                     l2048:
 23864   003296  0012               	return		;funcret
 23865   003298                     __end_of_poll:
 23866                           	callstack 0
 23867                           
 23868 ;; *************** function _nvProcessMessage *****************
 23869 ;; Defined at:
 23870 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;  m               2   83[COMRAM] PTR struct Message
 23873 ;;		 -> poll@m(9), 
 23874 ;; Auto vars:     Size  Location     Type
 23875 ;;  valueOrError    2   87[COMRAM] short 
 23876 ;; Return value:  Size  Location     Type
 23877 ;;                  1    wreg      enum E23340
 23878 ;; Registers used:
 23879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23880 ;; Tracked objects:
 23881 ;;		On entry : 0/0
 23882 ;;		On exit  : 0/0
 23883 ;;		Unchanged: 0/0
 23884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23889 ;;Total ram usage:        6 bytes
 23890 ;; Hardware stack levels used: 1
 23891 ;; Hardware stack levels required when called: 7
 23892 ;; This function calls:
 23893 ;;		_findServiceIndex
 23894 ;;		_getNV
 23895 ;;		_sendMessage2
 23896 ;;		_sendMessage3
 23897 ;;		_sendMessage4
 23898 ;;		_sendMessage5
 23899 ;;		_setNV
 23900 ;;		_startTimedResponse
 23901 ;; This function is called by:
 23902 ;;		_poll
 23903 ;; This function uses a non-reentrant model
 23904 ;;
 23905                           
 23906                           	psect	text17
 23907   003298                     __ptext17:
 23908                           	callstack 0
 23909   003298                     _nvProcessMessage:
 23910                           	callstack 118
 23911   003298                     
 23912                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 23913   003298  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23914   00329C  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23915   0032A0  0E03               	movlw	3
 23916   0032A2  60DF               	cpfslt	indf2,c
 23917   0032A4  EF56  F019         	goto	u8061
 23918   0032A8  EF58  F019         	goto	u8060
 23919   0032AC                     u8061:
 23920   0032AC  EF5B  F019         	goto	l10715
 23921   0032B0                     u8060:
 23922   0032B0                     l10711:
 23923                           
 23924                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 23925   0032B0  0E00               	movlw	0
 23926   0032B2  EF21  F01B         	goto	l1567
 23927   0032B6                     l10715:
 23928                           
 23929                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 23930   0032B6  EE20 F002          	lfsr	2,2
 23931   0032BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23932   0032BC  26D9               	addwf	fsr2l,f,c
 23933   0032BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23934   0032C0  22DA               	addwfc	fsr2h,f,c
 23935   0032C2  50DE               	movf	postinc2,w,c
 23936   0032C4  0105               	movlb	5	; () banked
 23937   0032C6  1990               	xorwf	(_nn+1)& (0+255),w,b
 23938   0032C8  B4D8               	btfsc	status,2,c
 23939   0032CA  EF69  F019         	goto	u8071
 23940   0032CE  EF6B  F019         	goto	u8070
 23941   0032D2                     u8071:
 23942   0032D2  EF6D  F019         	goto	l10721
 23943   0032D6                     u8070:
 23944   0032D6  EF58  F019         	goto	l10711
 23945   0032DA                     l10721:
 23946                           
 23947                           ; BSR set to: 5
 23948                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 23949   0032DA  EE20 F003          	lfsr	2,3
 23950   0032DE  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23951   0032E0  26D9               	addwf	fsr2l,f,c
 23952   0032E2  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23953   0032E4  22DA               	addwfc	fsr2h,f,c
 23954   0032E6  518F               	movf	_nn& (0+255),w,b
 23955   0032E8  18DE               	xorwf	postinc2,w,c
 23956   0032EA  B4D8               	btfsc	status,2,c
 23957   0032EC  EF7A  F019         	goto	u8081
 23958   0032F0  EF7C  F019         	goto	u8080
 23959   0032F4                     u8081:
 23960   0032F4  EF02  F01B         	goto	l10839
 23961   0032F8                     u8080:
 23962   0032F8  EF58  F019         	goto	l10711
 23963   0032FC                     l10727:
 23964                           
 23965                           ; BSR set to: 5
 23966                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 23967   0032FC  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23968   003300  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23969   003304  0E04               	movlw	4
 23970   003306  60DF               	cpfslt	indf2,c
 23971   003308  EF88  F019         	goto	u8091
 23972   00330C  EF8A  F019         	goto	u8090
 23973   003310                     u8091:
 23974   003310  EFA6  F019         	goto	l10737
 23975   003314                     u8090:
 23976   003314                     
 23977                           ; BSR set to: 5
 23978                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 23979   003314  C590  F526         	movff	_nn+1,sendMessage3@data1
 23980   003318  C58F  F527         	movff	_nn,sendMessage3@data2
 23981   00331C  0E01               	movlw	1
 23982   00331E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23983   003320  0E6F               	movlw	111
 23984   003322  EC75  F040         	call	_sendMessage3
 23985                           
 23986                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23987   003326  C590  F526         	movff	_nn+1,sendMessage5@data1
 23988   00332A  C58F  F527         	movff	_nn,sendMessage5@data2
 23989   00332E  0E71               	movlw	113
 23990   003330  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23991   003332  0E01               	movlw	1
 23992   003334  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23993   003336  0E01               	movlw	1
 23994   003338  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23995   00333A  0EAF               	movlw	175
 23996   00333C  ECB4  F040         	call	_sendMessage5
 23997   003340                     l10731:
 23998                           
 23999                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 24000   003340  0105               	movlb	5	; () banked
 24001   003342  4BBF               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 24002   003344  2BC0               	incf	(_nvDiagnostics+5)& (0+255),f,b
 24003   003346                     l10733:
 24004                           
 24005                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 24006   003346  0E01               	movlw	1
 24007   003348  EF21  F01B         	goto	l1567
 24008   00334C                     l10737:
 24009                           
 24010                           ; BSR set to: 5
 24011                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 24012   00334C  EE20 F004          	lfsr	2,4
 24013   003350  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24014   003352  26D9               	addwf	fsr2l,f,c
 24015   003354  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24016   003356  22DA               	addwfc	fsr2h,f,c
 24017   003358  50DF               	movf	indf2,w,c
 24018   00335A  EC73  F03D         	call	_getNV
 24019   00335E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 24020   003362  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 24021   003366                     
 24022                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 24023   003366  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24024   003368  EFBA  F019         	goto	u8100
 24025   00336C  EFB8  F019         	goto	u8101
 24026   003370                     u8101:
 24027   003370  EFD4  F019         	goto	l10749
 24028   003374                     u8100:
 24029   003374                     
 24030                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24031   003374  C590  F526         	movff	_nn+1,sendMessage3@data1
 24032   003378  C58F  F527         	movff	_nn,sendMessage3@data2
 24033   00337C  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24034   00337E  0800               	sublw	0
 24035   003380  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24036   003382  0E6F               	movlw	111
 24037   003384  EC75  F040         	call	_sendMessage3
 24038                           
 24039                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24040   003388  C590  F526         	movff	_nn+1,sendMessage5@data1
 24041   00338C  C58F  F527         	movff	_nn,sendMessage5@data2
 24042   003390  0E71               	movlw	113
 24043   003392  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24044   003394  0E01               	movlw	1
 24045   003396  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24046   003398  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24047   00339A  0800               	sublw	0
 24048   00339C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24049   00339E  0EAF               	movlw	175
 24050   0033A0  ECB4  F040         	call	_sendMessage5
 24051   0033A4  EFA0  F019         	goto	l10731
 24052   0033A8                     l10749:
 24053                           
 24054                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 24055   0033A8  0105               	movlb	5	; () banked
 24056   0033AA  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24057   0033AC  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24058   0033AE                     
 24059                           ; BSR set to: 5
 24060                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24061   0033AE  C590  F526         	movff	_nn+1,sendMessage4@data1
 24062   0033B2  C58F  F527         	movff	_nn,sendMessage4@data2
 24063   0033B6  EE20 F004          	lfsr	2,4
 24064   0033BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24065   0033BC  26D9               	addwf	fsr2l,f,c
 24066   0033BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24067   0033C0  22DA               	addwfc	fsr2h,f,c
 24068   0033C2  50DF               	movf	indf2,w,c
 24069   0033C4  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24070   0033C6  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24071   0033CA  0E97               	movlw	151
 24072   0033CC  EC60  F040         	call	_sendMessage4
 24073   0033D0                     
 24074                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 24075   0033D0  0105               	movlb	5	; () banked
 24076   0033D2  B7A4               	btfsc	_mode_flags& (0+255),3,b
 24077   0033D4  EFEE  F019         	goto	u8111
 24078   0033D8  EFF0  F019         	goto	u8110
 24079   0033DC                     u8111:
 24080   0033DC  EFA3  F019         	goto	l10733
 24081   0033E0                     u8110:
 24082   0033E0                     
 24083                           ; BSR set to: 5
 24084   0033E0  EE20 F004          	lfsr	2,4
 24085   0033E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24086   0033E6  26D9               	addwf	fsr2l,f,c
 24087   0033E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24088   0033EA  22DA               	addwfc	fsr2h,f,c
 24089   0033EC  50DF               	movf	indf2,w,c
 24090   0033EE  A4D8               	btfss	status,2,c
 24091   0033F0  EFFC  F019         	goto	u8121
 24092   0033F4  EFFE  F019         	goto	u8120
 24093   0033F8                     u8121:
 24094   0033F8  EFA3  F019         	goto	l10733
 24095   0033FC                     u8120:
 24096   0033FC                     
 24097                           ; BSR set to: 5
 24098                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 24099   0033FC  0E02               	movlw	2
 24100   0033FE  EC0E  F037         	call	_findServiceIndex
 24101   003402  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 24102   003404  0E3C               	movlw	low _nvTRnvrdCallback
 24103   003406  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 24104   003408  0E7A               	movlw	high _nvTRnvrdCallback
 24105   00340A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 24106   00340C  0E06               	movlw	6
 24107   00340E  ECC4  F03C         	call	_startTimedResponse
 24108   003412  EFA3  F019         	goto	l10733
 24109   003416                     l10763:
 24110                           
 24111                           ; BSR set to: 5
 24112                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 24113   003416  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24114   00341A  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24115   00341E  0E05               	movlw	5
 24116   003420  60DF               	cpfslt	indf2,c
 24117   003422  EF15  F01A         	goto	u8131
 24118   003426  EF17  F01A         	goto	u8130
 24119   00342A                     u8131:
 24120   00342A  EF26  F01A         	goto	l10773
 24121   00342E                     u8130:
 24122   00342E                     
 24123                           ; BSR set to: 5
 24124                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24125   00342E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24126   003432  C58F  F527         	movff	_nn,sendMessage5@data2
 24127   003436  0E96               	movlw	150
 24128   003438  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24129   00343A  0E01               	movlw	1
 24130   00343C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24131   00343E  0E01               	movlw	1
 24132   003440  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24133   003442  0EAF               	movlw	175
 24134   003444  ECB4  F040         	call	_sendMessage5
 24135   003448  EFA0  F019         	goto	l10731
 24136   00344C                     l10773:
 24137                           
 24138                           ; BSR set to: 5
 24139                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24140   00344C  EE20 F005          	lfsr	2,5
 24141   003450  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24142   003452  26D9               	addwf	fsr2l,f,c
 24143   003454  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24144   003456  22DA               	addwfc	fsr2h,f,c
 24145   003458  50DF               	movf	indf2,w,c
 24146   00345A  6E15               	movwf	setNV@value^(0+1280),c
 24147   00345C  EE20 F004          	lfsr	2,4
 24148   003460  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24149   003462  26D9               	addwf	fsr2l,f,c
 24150   003464  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24151   003466  22DA               	addwfc	fsr2h,f,c
 24152   003468  50DF               	movf	indf2,w,c
 24153   00346A  ECC7  F036         	call	_setNV
 24154   00346E  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24155   003470  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24156   003472  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24157   003474  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24158   003476                     
 24159                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 24160   003476  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24161   003478  EF46  F01A         	goto	u8141
 24162   00347C  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24163   00347E  E108               	bnz	u8140
 24164   003480  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24165   003482  A0D8               	btfss	status,0,c
 24166   003484  EF46  F01A         	goto	u8141
 24167   003488  EF48  F01A         	goto	u8140
 24168   00348C                     u8141:
 24169   00348C  EF53  F01A         	goto	l10785
 24170   003490                     u8140:
 24171   003490                     
 24172                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24173   003490  C590  F526         	movff	_nn+1,sendMessage3@data1
 24174   003494  C58F  F527         	movff	_nn,sendMessage3@data2
 24175   003498  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24176   00349C  0E6F               	movlw	111
 24177   00349E  EC75  F040         	call	_sendMessage3
 24178   0034A2  EFA0  F019         	goto	l10731
 24179   0034A6                     l10785:
 24180                           
 24181                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 24182   0034A6  C590  F526         	movff	_nn+1,sendMessage2@data1
 24183   0034AA  C58F  F527         	movff	_nn,sendMessage2@data2
 24184   0034AE  0E59               	movlw	89
 24185   0034B0  EC8A  F040         	call	_sendMessage2
 24186                           
 24187                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 24188   0034B4  C590  F526         	movff	_nn+1,sendMessage5@data1
 24189   0034B8  C58F  F527         	movff	_nn,sendMessage5@data2
 24190   0034BC  0E96               	movlw	150
 24191   0034BE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24192   0034C0  0E01               	movlw	1
 24193   0034C2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24194   0034C4  0E00               	movlw	0
 24195   0034C6  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24196   0034C8  0EAF               	movlw	175
 24197   0034CA  ECB4  F040         	call	_sendMessage5
 24198   0034CE  EFA3  F019         	goto	l10733
 24199   0034D2                     l10791:
 24200                           
 24201                           ; BSR set to: 5
 24202                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 24203   0034D2  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24204   0034D6  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24205   0034DA  0E05               	movlw	5
 24206   0034DC  60DF               	cpfslt	indf2,c
 24207   0034DE  EF73  F01A         	goto	u8151
 24208   0034E2  EF75  F01A         	goto	u8150
 24209   0034E6                     u8151:
 24210   0034E6  EF84  F01A         	goto	l10801
 24211   0034EA                     u8150:
 24212   0034EA                     
 24213                           ; BSR set to: 5
 24214                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24215   0034EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 24216   0034EE  C58F  F527         	movff	_nn,sendMessage5@data2
 24217   0034F2  0E8E               	movlw	142
 24218   0034F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24219   0034F6  0E01               	movlw	1
 24220   0034F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24221   0034FA  0E01               	movlw	1
 24222   0034FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24223   0034FE  0EAF               	movlw	175
 24224   003500  ECB4  F040         	call	_sendMessage5
 24225   003504  EFA0  F019         	goto	l10731
 24226   003508                     l10801:
 24227                           
 24228                           ; BSR set to: 5
 24229                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24230   003508  EE20 F005          	lfsr	2,5
 24231   00350C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24232   00350E  26D9               	addwf	fsr2l,f,c
 24233   003510  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24234   003512  22DA               	addwfc	fsr2h,f,c
 24235   003514  50DF               	movf	indf2,w,c
 24236   003516  6E15               	movwf	setNV@value^(0+1280),c
 24237   003518  EE20 F004          	lfsr	2,4
 24238   00351C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24239   00351E  26D9               	addwf	fsr2l,f,c
 24240   003520  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24241   003522  22DA               	addwfc	fsr2h,f,c
 24242   003524  50DF               	movf	indf2,w,c
 24243   003526  ECC7  F036         	call	_setNV
 24244   00352A  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24245   00352C  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24246   00352E  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24247   003530  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24248   003532                     
 24249                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 24250   003532  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24251   003534  EFA4  F01A         	goto	u8161
 24252   003538  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24253   00353A  E108               	bnz	u8160
 24254   00353C  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24255   00353E  A0D8               	btfss	status,0,c
 24256   003540  EFA4  F01A         	goto	u8161
 24257   003544  EFA6  F01A         	goto	u8160
 24258   003548                     u8161:
 24259   003548  EFBE  F01A         	goto	l10813
 24260   00354C                     u8160:
 24261   00354C                     
 24262                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24263   00354C  C590  F526         	movff	_nn+1,sendMessage3@data1
 24264   003550  C58F  F527         	movff	_nn,sendMessage3@data2
 24265   003554  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24266   003558  0E6F               	movlw	111
 24267   00355A  EC75  F040         	call	_sendMessage3
 24268                           
 24269                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 24270   00355E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24271   003562  C58F  F527         	movff	_nn,sendMessage5@data2
 24272   003566  0E8E               	movlw	142
 24273   003568  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24274   00356A  0E01               	movlw	1
 24275   00356C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24276   00356E  C558  F52A         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 24277   003572  0EAF               	movlw	175
 24278   003574  ECB4  F040         	call	_sendMessage5
 24279   003578  EFA0  F019         	goto	l10731
 24280   00357C                     l10813:
 24281                           
 24282                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 24283   00357C  EE20 F004          	lfsr	2,4
 24284   003580  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24285   003582  26D9               	addwf	fsr2l,f,c
 24286   003584  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24287   003586  22DA               	addwfc	fsr2h,f,c
 24288   003588  50DF               	movf	indf2,w,c
 24289   00358A  EC73  F03D         	call	_getNV
 24290   00358E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 24291   003592  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 24292   003596                     
 24293                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 24294   003596  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24295   003598  EFD2  F01A         	goto	u8170
 24296   00359C  EFD0  F01A         	goto	u8171
 24297   0035A0                     u8171:
 24298   0035A0  EFEC  F01A         	goto	l10825
 24299   0035A4                     u8170:
 24300   0035A4                     
 24301                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24302   0035A4  C590  F526         	movff	_nn+1,sendMessage3@data1
 24303   0035A8  C58F  F527         	movff	_nn,sendMessage3@data2
 24304   0035AC  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24305   0035AE  0800               	sublw	0
 24306   0035B0  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24307   0035B2  0E6F               	movlw	111
 24308   0035B4  EC75  F040         	call	_sendMessage3
 24309                           
 24310                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24311   0035B8  C590  F526         	movff	_nn+1,sendMessage5@data1
 24312   0035BC  C58F  F527         	movff	_nn,sendMessage5@data2
 24313   0035C0  0E8E               	movlw	142
 24314   0035C2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24315   0035C4  0E01               	movlw	1
 24316   0035C6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24317   0035C8  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24318   0035CA  0800               	sublw	0
 24319   0035CC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24320   0035CE  0EAF               	movlw	175
 24321   0035D0  ECB4  F040         	call	_sendMessage5
 24322   0035D4  EFA0  F019         	goto	l10731
 24323   0035D8                     l10825:
 24324                           
 24325                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24326   0035D8  C590  F526         	movff	_nn+1,sendMessage4@data1
 24327   0035DC  C58F  F527         	movff	_nn,sendMessage4@data2
 24328   0035E0  EE20 F004          	lfsr	2,4
 24329   0035E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24330   0035E6  26D9               	addwf	fsr2l,f,c
 24331   0035E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24332   0035EA  22DA               	addwfc	fsr2h,f,c
 24333   0035EC  50DF               	movf	indf2,w,c
 24334   0035EE  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24335   0035F0  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24336   0035F4  0E97               	movlw	151
 24337   0035F6  EC60  F040         	call	_sendMessage4
 24338   0035FA                     
 24339                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 24340   0035FA  0105               	movlb	5	; () banked
 24341   0035FC  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24342   0035FE  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24343   003600  EFA3  F019         	goto	l10733
 24344   003604                     l10839:
 24345                           
 24346                           ; BSR set to: 5
 24347   003604  EE20 F001          	lfsr	2,1
 24348   003608  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24349   00360A  26D9               	addwf	fsr2l,f,c
 24350   00360C  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24351   00360E  22DA               	addwfc	fsr2h,f,c
 24352   003610  50DF               	movf	indf2,w,c
 24353   003612  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24354   003614  6A57               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 24355                           
 24356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24357                           ; Switch size 1, requested type "simple"
 24358                           ; Number of cases is 1, Range of values is 0 to 0
 24359                           ; switch strategies available:
 24360                           ; Name         Instructions Cycles
 24361                           ; simple_byte            4     3 (average)
 24362                           ;	Chosen strategy is simple_byte
 24363   003616  5057               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 24364   003618  0A00               	xorlw	0	; case 0
 24365   00361A  B4D8               	btfsc	status,2,c
 24366   00361C  EF12  F01B         	goto	l11777
 24367   003620  EF58  F019         	goto	l10711
 24368   003624                     l11777:
 24369                           
 24370                           ; BSR set to: 5
 24371                           ; Switch size 1, requested type "simple"
 24372                           ; Number of cases is 3, Range of values is 113 to 150
 24373                           ; switch strategies available:
 24374                           ; Name         Instructions Cycles
 24375                           ; simple_byte           10     6 (average)
 24376                           ;	Chosen strategy is simple_byte
 24377   003624  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24378   003626  0A71               	xorlw	113	; case 113
 24379   003628  B4D8               	btfsc	status,2,c
 24380   00362A  EF7E  F019         	goto	l10727
 24381   00362E  0AFF               	xorlw	255	; case 142
 24382   003630  B4D8               	btfsc	status,2,c
 24383   003632  EF69  F01A         	goto	l10791
 24384   003636  0A18               	xorlw	24	; case 150
 24385   003638  B4D8               	btfsc	status,2,c
 24386   00363A  EF0B  F01A         	goto	l10763
 24387   00363E  EF58  F019         	goto	l10711
 24388   003642                     l1567:
 24389   003642  0012               	return		;funcret
 24390   003644                     __end_of_nvProcessMessage:
 24391                           	callstack 0
 24392                           
 24393 ;; *************** function _mnsProcessMessage *****************
 24394 ;; Defined at:
 24395 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;  m               2   83[COMRAM] PTR struct Message
 24398 ;;		 -> poll@m(9), 
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;  d               2   87[COMRAM] PTR struct DiagnosticVal
 24401 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 24402 ;;		 -> canDiagnostics(38), NULL(0), 
 24403 ;;  newMode         1   89[COMRAM] unsigned char 
 24404 ;;  i               1   85[COMRAM] unsigned char 
 24405 ;;  flags           1    0        unsigned char 
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  1    wreg      enum E23340
 24408 ;; Registers used:
 24409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24410 ;; Tracked objects:
 24411 ;;		On entry : 0/0
 24412 ;;		On exit  : 0/0
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24416 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24417 ;;      Temps:          0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24418 ;;      Totals:         7      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24419 ;;Total ram usage:       37 bytes
 24420 ;; Hardware stack levels used: 1
 24421 ;; Hardware stack levels required when called: 6
 24422 ;; This function calls:
 24423 ;;		NULL
 24424 ;;		_bootEsdData
 24425 ;;		_canEsdData
 24426 ;;		_canGetDiagnostic
 24427 ;;		_canWaitForTxQueueToDrain
 24428 ;;		_consumerEsdData
 24429 ;;		_consumerGetDiagnostic
 24430 ;;		_findServiceIndex
 24431 ;;		_getParameter
 24432 ;;		_getParameterFlags
 24433 ;;		_mnsGetDiagnostic
 24434 ;;		_nvGetDiagnostic
 24435 ;;		_nvGetESDdata
 24436 ;;		_rebuildHashtable
 24437 ;;		_sendMessage2
 24438 ;;		_sendMessage3
 24439 ;;		_sendMessage4
 24440 ;;		_sendMessage5
 24441 ;;		_sendMessage6
 24442 ;;		_sendMessage7
 24443 ;;		_setLEDsByMode
 24444 ;;		_startTimedResponse
 24445 ;;		_teachGetDiagnostic
 24446 ;;		_teachGetESDdata
 24447 ;;		_writeNVM
 24448 ;; This function is called by:
 24449 ;;		_poll
 24450 ;; This function uses a non-reentrant model
 24451 ;;
 24452                           
 24453                           	psect	text18
 24454   000A06                     __ptext18:
 24455                           	callstack 0
 24456   000A06                     _mnsProcessMessage:
 24457                           	callstack 119
 24458   000A06                     
 24459                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 24460   000A06  0105               	movlb	5	; () banked
 24461   000A08  51A1               	movf	_mode_state& (0+255),w,b
 24462   000A0A  A4D8               	btfss	status,2,c
 24463   000A0C  EF0A  F005         	goto	u7491
 24464   000A10  EF0C  F005         	goto	u7490
 24465   000A14                     u7491:
 24466   000A14  EF62  F006         	goto	l10317
 24467   000A18                     u7490:
 24468   000A18  EFCA  F005         	goto	l10261
 24469   000A1C                     l10217:
 24470                           
 24471                           ; BSR set to: 5
 24472                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 24473   000A1C  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24474   000A20  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24475   000A24  0E03               	movlw	3
 24476   000A26  60DF               	cpfslt	indf2,c
 24477   000A28  EF18  F005         	goto	u7501
 24478   000A2C  EF1A  F005         	goto	u7500
 24479   000A30                     u7501:
 24480   000A30  EF29  F005         	goto	l10221
 24481   000A34                     u7500:
 24482   000A34                     
 24483                           ; BSR set to: 5
 24484                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24485   000A34  C590  F526         	movff	_nn+1,sendMessage5@data1
 24486   000A38  C58F  F527         	movff	_nn,sendMessage5@data2
 24487   000A3C  0E42               	movlw	66
 24488   000A3E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24489   000A40  0E01               	movlw	1
 24490   000A42  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24491   000A44  0E01               	movlw	1
 24492   000A46  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24493   000A48  0EAF               	movlw	175
 24494   000A4A  ECB4  F040         	call	_sendMessage5
 24495                           
 24496                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 24497   000A4E  EF60  F005         	goto	l10237
 24498   000A52                     l10221:
 24499                           
 24500                           ; BSR set to: 5
 24501                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 24502   000A52  EE20 F002          	lfsr	2,2
 24503   000A56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24504   000A58  26D9               	addwf	fsr2l,f,c
 24505   000A5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24506   000A5C  22DA               	addwfc	fsr2h,f,c
 24507   000A5E  50DF               	movf	indf2,w,c
 24508   000A60  6F90               	movwf	(_nn+1)& (0+255),b
 24509                           
 24510                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 24511   000A62  EE20 F003          	lfsr	2,3
 24512   000A66  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24513   000A68  26D9               	addwf	fsr2l,f,c
 24514   000A6A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24515   000A6C  22DA               	addwfc	fsr2h,f,c
 24516   000A6E  50DF               	movf	indf2,w,c
 24517   000A70  6F8F               	movwf	_nn& (0+255),b
 24518   000A72                     
 24519                           ; BSR set to: 5
 24520                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 24521   000A72  0EFD               	movlw	253
 24522   000A74  6E0E               	movwf	writeNVM@index^(0+1280),c
 24523   000A76  0E03               	movlw	3
 24524   000A78  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24525   000A7A  0E00               	movlw	0
 24526   000A7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24527   000A7E  C590  F511         	movff	_nn+1,writeNVM@value
 24528   000A82  0E00               	movlw	0
 24529   000A84  EC64  F03C         	call	_writeNVM
 24530   000A88                     
 24531                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 24532   000A88  0EFC               	movlw	252
 24533   000A8A  6E0E               	movwf	writeNVM@index^(0+1280),c
 24534   000A8C  0E03               	movlw	3
 24535   000A8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24536   000A90  0E00               	movlw	0
 24537   000A92  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24538   000A94  C58F  F511         	movff	_nn,writeNVM@value
 24539   000A98  0E00               	movlw	0
 24540   000A9A  EC64  F03C         	call	_writeNVM
 24541   000A9E                     
 24542                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 24543   000A9E  0E01               	movlw	1
 24544   000AA0  0105               	movlb	5	; () banked
 24545   000AA2  6FA1               	movwf	_mode_state& (0+255),b
 24546   000AA4                     
 24547                           ; BSR set to: 5
 24548                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 24549   000AA4  ECB5  F02B         	call	_rebuildHashtable	;wreg free
 24550   000AA8                     
 24551                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 24552   000AA8  C590  F526         	movff	_nn+1,sendMessage2@data1
 24553   000AAC  C58F  F527         	movff	_nn,sendMessage2@data2
 24554   000AB0  0E52               	movlw	82
 24555   000AB2  EC8A  F040         	call	_sendMessage2
 24556   000AB6                     
 24557                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 24558   000AB6  0105               	movlb	5	; () banked
 24559   000AB8  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 24560   000ABA  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 24561   000ABC                     l10235:
 24562                           
 24563                           ; BSR set to: 5
 24564                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 24565   000ABC  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 24566   000AC0                     l10237:
 24567                           
 24568                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 24569   000AC0  0E01               	movlw	1
 24570   000AC2  EF7B  F00B         	goto	l1313
 24571   000AC6                     l10241:
 24572                           
 24573                           ; BSR set to: 5
 24574                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 24575   000AC6  0EA5               	movlw	165
 24576   000AC8  6E26               	movwf	sendMessage7@data1^(0+1280),c
 24577   000ACA  0E61               	movlw	97
 24578   000ACC  6E27               	movwf	sendMessage7@data2^(0+1280),c
 24579   000ACE  0EFC               	movlw	252
 24580   000AD0  6E28               	movwf	sendMessage7@data3^(0+1280),c
 24581   000AD2  0EFF               	movlw	255
 24582   000AD4  6E29               	movwf	sendMessage7@data4^(0+1280),c
 24583   000AD6  0EFC               	movlw	252
 24584   000AD8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 24585   000ADA  0E31               	movlw	49
 24586   000ADC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 24587   000ADE  0E01               	movlw	1
 24588   000AE0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 24589   000AE2  0EEF               	movlw	239
 24590   000AE4  EC9F  F040         	call	_sendMessage7
 24591   000AE8  EF60  F005         	goto	l10237
 24592   000AEC                     l10247:
 24593                           
 24594                           ; BSR set to: 5
 24595                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 24596   000AEC  0E48               	movlw	72
 24597   000AEE  6EF6               	movwf	tblptrl,c
 24598   000AF0                     	if	1	;There is more than 1 active tblptr byte
 24599   000AF0  0E08               	movlw	8
 24600   000AF2  6EF7               	movwf	tblptrh,c
 24601   000AF4                     	endif
 24602   000AF4                     	if	1	;There are 3 active tblptr bytes
 24603   000AF4  0E00               	movlw	0
 24604   000AF6  6EF8               	movwf	tblptru,c
 24605   000AF8                     	endif
 24606   000AF8  0008               	tblrd		*
 24607   000AFA  C4F5 F526          	movff	tablat,sendMessage7@data1
 24608   000AFE  0E49               	movlw	73
 24609   000B00  6EF6               	movwf	tblptrl,c
 24610   000B02  0E08               	movlw	8
 24611   000B04  6EF7               	movwf	tblptrh,c
 24612   000B06  0E00               	movlw	0
 24613   000B08  6EF8               	movwf	tblptru,c
 24614   000B0A  0008               	tblrd		*
 24615   000B0C  C4F5 F527          	movff	tablat,sendMessage7@data2
 24616   000B10  0E4A               	movlw	74
 24617   000B12  6EF6               	movwf	tblptrl,c
 24618   000B14  0E08               	movlw	8
 24619   000B16  6EF7               	movwf	tblptrh,c
 24620   000B18  0E00               	movlw	0
 24621   000B1A  6EF8               	movwf	tblptru,c
 24622   000B1C  0008               	tblrd		*
 24623   000B1E  C4F5 F528          	movff	tablat,sendMessage7@data3
 24624   000B22  0E4B               	movlw	75
 24625   000B24  6EF6               	movwf	tblptrl,c
 24626   000B26  0E08               	movlw	8
 24627   000B28  6EF7               	movwf	tblptrh,c
 24628   000B2A  0E00               	movlw	0
 24629   000B2C  6EF8               	movwf	tblptru,c
 24630   000B2E  0008               	tblrd		*
 24631   000B30  C4F5 F529          	movff	tablat,sendMessage7@data4
 24632   000B34  0E4C               	movlw	76
 24633   000B36  6EF6               	movwf	tblptrl,c
 24634   000B38  0E08               	movlw	8
 24635   000B3A  6EF7               	movwf	tblptrh,c
 24636   000B3C  0E00               	movlw	0
 24637   000B3E  6EF8               	movwf	tblptru,c
 24638   000B40  0008               	tblrd		*
 24639   000B42  C4F5 F52A          	movff	tablat,sendMessage7@data5
 24640   000B46  0E4D               	movlw	77
 24641   000B48  6EF6               	movwf	tblptrl,c
 24642   000B4A  0E08               	movlw	8
 24643   000B4C  6EF7               	movwf	tblptrh,c
 24644   000B4E  0E00               	movlw	0
 24645   000B50  6EF8               	movwf	tblptru,c
 24646   000B52  0008               	tblrd		*
 24647   000B54  C4F5 F52B          	movff	tablat,sendMessage7@data6
 24648   000B58  0E4E               	movlw	78
 24649   000B5A  6EF6               	movwf	tblptrl,c
 24650   000B5C  0E08               	movlw	8
 24651   000B5E  6EF7               	movwf	tblptrh,c
 24652   000B60  0E00               	movlw	0
 24653   000B62  6EF8               	movwf	tblptru,c
 24654   000B64  0008               	tblrd		*
 24655   000B66  C4F5 F52C          	movff	tablat,sendMessage7@data7
 24656   000B6A  0EE2               	movlw	226
 24657   000B6C  EC9F  F040         	call	_sendMessage7
 24658   000B70  EF60  F005         	goto	l10237
 24659   000B74                     l10253:
 24660                           
 24661                           ; BSR set to: 5
 24662                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_VLCB, getParameterFlags());
 24663   000B74  0E00               	movlw	0
 24664   000B76  6E26               	movwf	sendMessage5@data1^(0+1280),c
 24665   000B78  0E00               	movlw	0
 24666   000B7A  6E27               	movwf	sendMessage5@data2^(0+1280),c
 24667   000B7C  0EA5               	movlw	165
 24668   000B7E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24669   000B80  0EFC               	movlw	252
 24670   000B82  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24671   000B84  EC9A  F037         	call	_getParameterFlags	;wreg free
 24672   000B88  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24673   000B8A  0EB6               	movlw	182
 24674   000B8C  ECB4  F040         	call	_sendMessage5
 24675   000B90  EF60  F005         	goto	l10237
 24676   000B94                     l10261:
 24677                           
 24678                           ; BSR set to: 5
 24679   000B94  EE20 F001          	lfsr	2,1
 24680   000B98  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24681   000B9A  26D9               	addwf	fsr2l,f,c
 24682   000B9C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24683   000B9E  22DA               	addwfc	fsr2h,f,c
 24684   000BA0  50DF               	movf	indf2,w,c
 24685   000BA2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24686   000BA4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24687                           
 24688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24689                           ; Switch size 1, requested type "simple"
 24690                           ; Number of cases is 1, Range of values is 0 to 0
 24691                           ; switch strategies available:
 24692                           ; Name         Instructions Cycles
 24693                           ; simple_byte            4     3 (average)
 24694                           ;	Chosen strategy is simple_byte
 24695   000BA6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24696   000BA8  0A00               	xorlw	0	; case 0
 24697   000BAA  B4D8               	btfsc	status,2,c
 24698   000BAC  EFDA  F005         	goto	l11779
 24699   000BB0  EFED  F005         	goto	l10263
 24700   000BB4                     l11779:
 24701                           
 24702                           ; BSR set to: 5
 24703                           ; Switch size 1, requested type "simple"
 24704                           ; Number of cases is 4, Range of values is 13 to 66
 24705                           ; switch strategies available:
 24706                           ; Name         Instructions Cycles
 24707                           ; simple_byte           13     7 (average)
 24708                           ;	Chosen strategy is simple_byte
 24709   000BB4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24710   000BB6  0A0D               	xorlw	13	; case 13
 24711   000BB8  B4D8               	btfsc	status,2,c
 24712   000BBA  EFBA  F005         	goto	l10253
 24713   000BBE  0A1D               	xorlw	29	; case 16
 24714   000BC0  B4D8               	btfsc	status,2,c
 24715   000BC2  EF63  F005         	goto	l10241
 24716   000BC6  0A01               	xorlw	1	; case 17
 24717   000BC8  B4D8               	btfsc	status,2,c
 24718   000BCA  EF76  F005         	goto	l10247
 24719   000BCE  0A53               	xorlw	83	; case 66
 24720   000BD0  B4D8               	btfsc	status,2,c
 24721   000BD2  EF0E  F005         	goto	l10217
 24722   000BD6  EFED  F005         	goto	l10263
 24723   000BDA                     l10263:
 24724                           
 24725                           ; BSR set to: 5
 24726                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 24727   000BDA  0E00               	movlw	0
 24728   000BDC  EF7B  F00B         	goto	l1313
 24729   000BE0                     l10267:
 24730                           
 24731                           ; BSR set to: 5
 24732                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_VLCB, getParameterFlags());
 24733   000BE0  C590  F526         	movff	_nn+1,sendMessage5@data1
 24734   000BE4  C58F  F527         	movff	_nn,sendMessage5@data2
 24735   000BE8  0EA5               	movlw	165
 24736   000BEA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24737   000BEC  0EFC               	movlw	252
 24738   000BEE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24739   000BF0  EC9A  F037         	call	_getParameterFlags	;wreg free
 24740   000BF4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24741   000BF6  0EB6               	movlw	182
 24742   000BF8  ECB4  F040         	call	_sendMessage5
 24743   000BFC  EF60  F005         	goto	l10237
 24744   000C00                     l10273:
 24745                           
 24746                           ; BSR set to: 5
 24747                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 24748   000C00  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24749   000C04  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24750   000C08  0E04               	movlw	4
 24751   000C0A  60DF               	cpfslt	indf2,c
 24752   000C0C  EF0A  F006         	goto	u7511
 24753   000C10  EF0C  F006         	goto	u7510
 24754   000C14                     u7511:
 24755   000C14  EF1B  F006         	goto	l10281
 24756   000C18                     u7510:
 24757   000C18                     
 24758                           ; BSR set to: 5
 24759                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24760   000C18  C590  F526         	movff	_nn+1,sendMessage5@data1
 24761   000C1C  C58F  F527         	movff	_nn,sendMessage5@data2
 24762   000C20  0E76               	movlw	118
 24763   000C22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24764   000C24  0E01               	movlw	1
 24765   000C26  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24766   000C28  0E01               	movlw	1
 24767   000C2A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24768   000C2C  0EAF               	movlw	175
 24769   000C2E  ECB4  F040         	call	_sendMessage5
 24770   000C32  EF60  F005         	goto	l10237
 24771   000C36                     l10281:
 24772                           
 24773                           ; BSR set to: 5
 24774                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 24775   000C36  EE20 F002          	lfsr	2,2
 24776   000C3A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24777   000C3C  26D9               	addwf	fsr2l,f,c
 24778   000C3E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24779   000C40  22DA               	addwfc	fsr2h,f,c
 24780   000C42  50DF               	movf	indf2,w,c
 24781   000C44  A4D8               	btfss	status,2,c
 24782   000C46  EF27  F006         	goto	u7521
 24783   000C4A  EF29  F006         	goto	u7520
 24784   000C4E                     u7521:
 24785   000C4E  EF7D  F006         	goto	l10319
 24786   000C52                     u7520:
 24787   000C52                     
 24788                           ; BSR set to: 5
 24789   000C52  EE20 F003          	lfsr	2,3
 24790   000C56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24791   000C58  26D9               	addwf	fsr2l,f,c
 24792   000C5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24793   000C5C  22DA               	addwfc	fsr2h,f,c
 24794   000C5E  50DF               	movf	indf2,w,c
 24795   000C60  A4D8               	btfss	status,2,c
 24796   000C62  EF35  F006         	goto	u7531
 24797   000C66  EF37  F006         	goto	u7530
 24798   000C6A                     u7531:
 24799   000C6A  EF7D  F006         	goto	l10319
 24800   000C6E                     u7530:
 24801   000C6E                     
 24802                           ; BSR set to: 5
 24803                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 24804   000C6E  EE20 F004          	lfsr	2,4
 24805   000C72  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24806   000C74  26D9               	addwf	fsr2l,f,c
 24807   000C76  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24808   000C78  22DA               	addwfc	fsr2h,f,c
 24809   000C7A  50DF               	movf	indf2,w,c
 24810   000C7C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 24811                           
 24812                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 24813   000C7E  EF4D  F006         	goto	l10313
 24814   000C82                     l10287:
 24815                           
 24816                           ; BSR set to: 5
 24817                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 24818   000C82  85A4               	bsf	_mode_flags& (0+255),2,b
 24819   000C84  EF60  F005         	goto	l10237
 24820   000C88                     l10293:
 24821                           
 24822                           ; BSR set to: 5
 24823                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 24824   000C88  95A4               	bcf	_mode_flags& (0+255),2,b
 24825   000C8A  EF60  F005         	goto	l10237
 24826   000C8E                     l10299:
 24827                           
 24828                           ; BSR set to: 5
 24829                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 24830   000C8E  87A4               	bsf	_mode_flags& (0+255),3,b
 24831   000C90  EF60  F005         	goto	l10237
 24832   000C94                     l10305:
 24833                           
 24834                           ; BSR set to: 5
 24835                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 24836   000C94  97A4               	bcf	_mode_flags& (0+255),3,b
 24837   000C96  EF60  F005         	goto	l10237
 24838   000C9A                     l10313:
 24839                           
 24840                           ; BSR set to: 5
 24841   000C9A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 24842                           
 24843                           ; Switch size 1, requested type "simple"
 24844                           ; Number of cases is 4, Range of values is 12 to 17
 24845                           ; switch strategies available:
 24846                           ; Name         Instructions Cycles
 24847                           ; simple_byte           13     7 (average)
 24848                           ;	Chosen strategy is simple_byte
 24849   000C9C  0A0C               	xorlw	12	; case 12
 24850   000C9E  B4D8               	btfsc	status,2,c
 24851   000CA0  EF41  F006         	goto	l10287
 24852   000CA4  0A01               	xorlw	1	; case 13
 24853   000CA6  B4D8               	btfsc	status,2,c
 24854   000CA8  EF44  F006         	goto	l10293
 24855   000CAC  0A1D               	xorlw	29	; case 16
 24856   000CAE  B4D8               	btfsc	status,2,c
 24857   000CB0  EF47  F006         	goto	l10299
 24858   000CB4  0A01               	xorlw	1	; case 17
 24859   000CB6  B4D8               	btfsc	status,2,c
 24860   000CB8  EF4A  F006         	goto	l10305
 24861   000CBC  EF60  F006         	goto	l1323
 24862   000CC0                     l1323:
 24863                           
 24864                           ; BSR set to: 5
 24865                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 24866   000CC0  EF7D  F006         	goto	l10319
 24867   000CC4                     l10317:
 24868                           
 24869                           ; BSR set to: 5
 24870   000CC4  EE20 F001          	lfsr	2,1
 24871   000CC8  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24872   000CCA  26D9               	addwf	fsr2l,f,c
 24873   000CCC  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24874   000CCE  22DA               	addwfc	fsr2h,f,c
 24875   000CD0  50DF               	movf	indf2,w,c
 24876   000CD2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24877   000CD4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24878                           
 24879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24880                           ; Switch size 1, requested type "simple"
 24881                           ; Number of cases is 1, Range of values is 0 to 0
 24882                           ; switch strategies available:
 24883                           ; Name         Instructions Cycles
 24884                           ; simple_byte            4     3 (average)
 24885                           ;	Chosen strategy is simple_byte
 24886   000CD6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24887   000CD8  0A00               	xorlw	0	; case 0
 24888   000CDA  B4D8               	btfsc	status,2,c
 24889   000CDC  EF72  F006         	goto	l11781
 24890   000CE0  EF7D  F006         	goto	l10319
 24891   000CE4                     l11781:
 24892                           
 24893                           ; BSR set to: 5
 24894                           ; Switch size 1, requested type "simple"
 24895                           ; Number of cases is 2, Range of values is 13 to 118
 24896                           ; switch strategies available:
 24897                           ; Name         Instructions Cycles
 24898                           ; simple_byte            7     4 (average)
 24899                           ;	Chosen strategy is simple_byte
 24900   000CE4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24901   000CE6  0A0D               	xorlw	13	; case 13
 24902   000CE8  B4D8               	btfsc	status,2,c
 24903   000CEA  EFF0  F005         	goto	l10267
 24904   000CEE  0A7B               	xorlw	123	; case 118
 24905   000CF0  B4D8               	btfsc	status,2,c
 24906   000CF2  EF00  F006         	goto	l10273
 24907   000CF6  EF7D  F006         	goto	l10319
 24908   000CFA                     l10319:
 24909                           
 24910                           ; BSR set to: 5
 24911                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 24912   000CFA  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24913   000CFE  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24914   000D02  0E03               	movlw	3
 24915   000D04  60DF               	cpfslt	indf2,c
 24916   000D06  EF87  F006         	goto	u7541
 24917   000D0A  EF89  F006         	goto	u7540
 24918   000D0E                     u7541:
 24919   000D0E  EF8B  F006         	goto	l10325
 24920   000D12                     u7540:
 24921   000D12  EFED  F005         	goto	l10263
 24922   000D16                     l10325:
 24923                           
 24924                           ; BSR set to: 5
 24925                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 24926   000D16  EE20 F002          	lfsr	2,2
 24927   000D1A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24928   000D1C  26D9               	addwf	fsr2l,f,c
 24929   000D1E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24930   000D20  22DA               	addwfc	fsr2h,f,c
 24931   000D22  50DE               	movf	postinc2,w,c
 24932   000D24  1990               	xorwf	(_nn+1)& (0+255),w,b
 24933   000D26  B4D8               	btfsc	status,2,c
 24934   000D28  EF98  F006         	goto	u7551
 24935   000D2C  EF9A  F006         	goto	u7550
 24936   000D30                     u7551:
 24937   000D30  EF9C  F006         	goto	l10331
 24938   000D34                     u7550:
 24939   000D34  EFED  F005         	goto	l10263
 24940   000D38                     l10331:
 24941                           
 24942                           ; BSR set to: 5
 24943                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 24944   000D38  EE20 F003          	lfsr	2,3
 24945   000D3C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24946   000D3E  26D9               	addwf	fsr2l,f,c
 24947   000D40  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24948   000D42  22DA               	addwfc	fsr2h,f,c
 24949   000D44  518F               	movf	_nn& (0+255),w,b
 24950   000D46  18DE               	xorwf	postinc2,w,c
 24951   000D48  B4D8               	btfsc	status,2,c
 24952   000D4A  EFA9  F006         	goto	u7561
 24953   000D4E  EFAB  F006         	goto	u7560
 24954   000D52                     u7561:
 24955   000D52  EF50  F00B         	goto	l10541
 24956   000D56                     u7560:
 24957   000D56  EFED  F005         	goto	l10263
 24958   000D5A                     l10337:
 24959                           
 24960                           ; BSR set to: 5
 24961                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 24962   000D5A  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24963   000D5E  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24964   000D62  0E04               	movlw	4
 24965   000D64  60DF               	cpfslt	indf2,c
 24966   000D66  EFB7  F006         	goto	u7571
 24967   000D6A  EFB9  F006         	goto	u7570
 24968   000D6E                     u7571:
 24969   000D6E  EFC8  F006         	goto	l10345
 24970   000D72                     u7570:
 24971   000D72                     
 24972                           ; BSR set to: 5
 24973                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24974   000D72  C590  F526         	movff	_nn+1,sendMessage5@data1
 24975   000D76  C58F  F527         	movff	_nn,sendMessage5@data2
 24976   000D7A  0E73               	movlw	115
 24977   000D7C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24978   000D7E  0E01               	movlw	1
 24979   000D80  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24980   000D82  0E01               	movlw	1
 24981   000D84  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24982   000D86  0EAF               	movlw	175
 24983   000D88  ECB4  F040         	call	_sendMessage5
 24984   000D8C  EF60  F005         	goto	l10237
 24985   000D90                     l10345:
 24986                           
 24987                           ; BSR set to: 5
 24988                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 24989   000D90  EE20 F004          	lfsr	2,4
 24990   000D94  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24991   000D96  26D9               	addwf	fsr2l,f,c
 24992   000D98  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24993   000D9A  22DA               	addwfc	fsr2h,f,c
 24994   000D9C  0E14               	movlw	20
 24995   000D9E  64DF               	cpfsgt	indf2,c
 24996   000DA0  EFD4  F006         	goto	u7581
 24997   000DA4  EFD6  F006         	goto	u7580
 24998   000DA8                     u7581:
 24999   000DA8  EFEE  F006         	goto	l10353
 25000   000DAC                     u7580:
 25001   000DAC                     
 25002                           ; BSR set to: 5
 25003                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 25004   000DAC  C590  F526         	movff	_nn+1,sendMessage3@data1
 25005   000DB0  C58F  F527         	movff	_nn,sendMessage3@data2
 25006   000DB4  0E09               	movlw	9
 25007   000DB6  6E28               	movwf	sendMessage3@data3^(0+1280),c
 25008   000DB8  0E6F               	movlw	111
 25009   000DBA  EC75  F040         	call	_sendMessage3
 25010                           
 25011                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 25012   000DBE  C590  F526         	movff	_nn+1,sendMessage5@data1
 25013   000DC2  C58F  F527         	movff	_nn,sendMessage5@data2
 25014   000DC6  0E73               	movlw	115
 25015   000DC8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25016   000DCA  0E01               	movlw	1
 25017   000DCC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25018   000DCE  0E09               	movlw	9
 25019   000DD0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25020   000DD2  0EAF               	movlw	175
 25021   000DD4  ECB4  F040         	call	_sendMessage5
 25022   000DD8  EF60  F005         	goto	l10237
 25023   000DDC                     l10353:
 25024                           
 25025                           ; BSR set to: 5
 25026                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 25027   000DDC  EE20 F004          	lfsr	2,4
 25028   000DE0  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25029   000DE2  26D9               	addwf	fsr2l,f,c
 25030   000DE4  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25031   000DE6  22DA               	addwfc	fsr2h,f,c
 25032   000DE8  50DF               	movf	indf2,w,c
 25033   000DEA  ECBB  F024         	call	_getParameter
 25034   000DEE  6E56               	movwf	mnsProcessMessage@i^(0+1280),c
 25035   000DF0                     
 25036                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 25037   000DF0  C590  F526         	movff	_nn+1,sendMessage4@data1
 25038   000DF4  C58F  F527         	movff	_nn,sendMessage4@data2
 25039   000DF8  EE20 F004          	lfsr	2,4
 25040   000DFC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25041   000DFE  26D9               	addwf	fsr2l,f,c
 25042   000E00  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25043   000E02  22DA               	addwfc	fsr2h,f,c
 25044   000E04  50DF               	movf	indf2,w,c
 25045   000E06  6E28               	movwf	sendMessage4@data3^(0+1280),c
 25046   000E08  C556  F529         	movff	mnsProcessMessage@i,sendMessage4@data4
 25047   000E0C  0E9B               	movlw	155
 25048   000E0E  EC60  F040         	call	_sendMessage4
 25049   000E12                     
 25050                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 25051   000E12  0105               	movlb	5	; () banked
 25052   000E14  B7A4               	btfsc	_mode_flags& (0+255),3,b
 25053   000E16  EF0F  F007         	goto	u7591
 25054   000E1A  EF11  F007         	goto	u7590
 25055   000E1E                     u7591:
 25056   000E1E  EF60  F005         	goto	l10237
 25057   000E22                     u7590:
 25058   000E22                     
 25059                           ; BSR set to: 5
 25060   000E22  EE20 F004          	lfsr	2,4
 25061   000E26  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25062   000E28  26D9               	addwf	fsr2l,f,c
 25063   000E2A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25064   000E2C  22DA               	addwfc	fsr2h,f,c
 25065   000E2E  50DF               	movf	indf2,w,c
 25066   000E30  A4D8               	btfss	status,2,c
 25067   000E32  EF1D  F007         	goto	u7601
 25068   000E36  EF1F  F007         	goto	u7600
 25069   000E3A                     u7601:
 25070   000E3A  EF60  F005         	goto	l10237
 25071   000E3E                     u7600:
 25072   000E3E                     
 25073                           ; BSR set to: 5
 25074                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 25075   000E3E  0E01               	movlw	1
 25076   000E40  EC0E  F037         	call	_findServiceIndex
 25077   000E44  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25078   000E46  0EDA               	movlw	low _mnsTRrqnpnCallback
 25079   000E48  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25080   000E4A  0E7E               	movlw	high _mnsTRrqnpnCallback
 25081   000E4C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25082   000E4E  0E07               	movlw	7
 25083   000E50  ECC4  F03C         	call	_startTimedResponse
 25084   000E54  EF60  F005         	goto	l10237
 25085   000E58                     l1341:
 25086                           
 25087                           ; BSR set to: 5
 25088                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 25089   000E58  C58F  F58D         	movff	_nn,_previousNN
 25090   000E5C  C590  F58E         	movff	_nn+1,_previousNN+1
 25091   000E60                     
 25092                           ; BSR set to: 5
 25093                           ;../../VLCBlib_PIC/mns.c: 480:             writeNVM(EEPROM_NVM_TYPE, 0x3FA, 0xFF);
 25094   000E60  0EFA               	movlw	250
 25095   000E62  6E0E               	movwf	writeNVM@index^(0+1280),c
 25096   000E64  0E03               	movlw	3
 25097   000E66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25098   000E68  0E00               	movlw	0
 25099   000E6A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25100   000E6C  0EFF               	movlw	255
 25101   000E6E  6E11               	movwf	writeNVM@value^(0+1280),c
 25102   000E70  0E00               	movlw	0
 25103   000E72  EC64  F03C         	call	_writeNVM
 25104   000E76                     
 25105                           ;../../VLCBlib_PIC/mns.c: 481:             if (previousNN.word != 0) {
 25106   000E76  0105               	movlb	5	; () banked
 25107   000E78  518D               	movf	_previousNN& (0+255),w,b
 25108   000E7A  118E               	iorwf	(_previousNN+1)& (0+255),w,b
 25109   000E7C  B4D8               	btfsc	status,2,c
 25110   000E7E  EF43  F007         	goto	u7611
 25111   000E82  EF45  F007         	goto	u7610
 25112   000E86                     u7611:
 25113   000E86  EF6A  F007         	goto	l1342
 25114   000E8A                     u7610:
 25115   000E8A                     
 25116                           ; BSR set to: 5
 25117                           ;../../VLCBlib_PIC/mns.c: 482:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 25118   000E8A  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 25119   000E8E  C58D  F527         	movff	_previousNN,sendMessage2@data2
 25120   000E92  0E51               	movlw	81
 25121   000E94  EC8A  F040         	call	_sendMessage2
 25122   000E98                     
 25123                           ;../../VLCBlib_PIC/mns.c: 483:                 transport->waitForTxQueueToDrain();
 25124   000E98  0E04               	movlw	4
 25125   000E9A  0105               	movlb	5	; () banked
 25126   000E9C  2591               	addwf	_transport& (0+255),w,b
 25127   000E9E  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25128   000EA0  0E00               	movlw	0
 25129   000EA2  2192               	addwfc	(_transport+1)& (0+255),w,b
 25130   000EA4  6FD1               	movwf	(??_mnsProcessMessage+1)& (0+255),b
 25131   000EA6  C5D0  F4F6         	movff	??_mnsProcessMessage,tblptrl
 25132   000EAA  C5D1  F4F7         	movff	??_mnsProcessMessage+1,tblptrh
 25133   000EAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25134   000EAE  6AF8               	clrf	tblptru,c
 25135   000EB0                     	endif
 25136   000EB0                     	if	0	;tblptru may be non-zero
 25137   000EB0                     	endif
 25138   000EB0  0009               	tblrd		*+
 25139   000EB2  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+2
 25140   000EB6  0009               	tblrd		*+
 25141   000EB8  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+3
 25142   000EBC  D802               	call	u7628
 25143   000EBE  EF6A  F007         	goto	u7629
 25144   000EC2                     u7628:
 25145   000EC2  0005               	push	
 25146   000EC4  6EFA               	movwf	pclath,c
 25147   000EC6  51D2               	movf	(??_mnsProcessMessage+2)& (0+255),w,b
 25148   000EC8  6EFD               	movwf	tosl,c
 25149   000ECA  51D3               	movf	(??_mnsProcessMessage+3)& (0+255),w,b
 25150   000ECC  6EFE               	movwf	tosh,c
 25151   000ECE  6AFF               	clrf	tosu,c
 25152   000ED0  50FA               	movf	pclath,w,c
 25153   000ED2  0012               	return		;indir
 25154   000ED4                     u7629:
 25155   000ED4                     l1342:
 25156   000ED4  00FF               	reset		;# 
 25157   000ED6                     l10375:
 25158                           
 25159                           ;../../VLCBlib_PIC/mns.c: 488:             if (m->len < 5) {
 25160   000ED6  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25161   000EDA  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25162   000EDE  0E05               	movlw	5
 25163   000EE0  60DF               	cpfslt	indf2,c
 25164   000EE2  EF75  F007         	goto	u7631
 25165   000EE6  EF77  F007         	goto	u7630
 25166   000EEA                     u7631:
 25167   000EEA  EF86  F007         	goto	l10383
 25168   000EEE                     u7630:
 25169   000EEE                     
 25170                           ;../../VLCBlib_PIC/mns.c: 489:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25171   000EEE  C590  F526         	movff	_nn+1,sendMessage5@data1
 25172   000EF2  C58F  F527         	movff	_nn,sendMessage5@data2
 25173   000EF6  0E87               	movlw	135
 25174   000EF8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25175   000EFA  0E01               	movlw	1
 25176   000EFC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25177   000EFE  0E01               	movlw	1
 25178   000F00  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25179   000F02  0EAF               	movlw	175
 25180   000F04  ECB4  F040         	call	_sendMessage5
 25181   000F08  EF60  F005         	goto	l10237
 25182   000F0C                     l10383:
 25183                           
 25184                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->bytes[2] == 0) {
 25185   000F0C  EE20 F004          	lfsr	2,4
 25186   000F10  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25187   000F12  26D9               	addwf	fsr2l,f,c
 25188   000F14  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25189   000F16  22DA               	addwfc	fsr2h,f,c
 25190   000F18  50DF               	movf	indf2,w,c
 25191   000F1A  A4D8               	btfss	status,2,c
 25192   000F1C  EF92  F007         	goto	u7641
 25193   000F20  EF94  F007         	goto	u7640
 25194   000F24                     u7641:
 25195   000F24  EF9F  F007         	goto	l10387
 25196   000F28                     u7640:
 25197   000F28                     
 25198                           ;../../VLCBlib_PIC/mns.c: 494:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 25199   000F28  0E00               	movlw	0
 25200   000F2A  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25201   000F2C  0E40               	movlw	low _mnsTRallDiagnosticsCallback
 25202   000F2E  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25203   000F30  0E54               	movlw	high _mnsTRallDiagnosticsCallback
 25204   000F32  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25205   000F34  0E04               	movlw	4
 25206   000F36  ECC4  F03C         	call	_startTimedResponse
 25207                           
 25208                           ;../../VLCBlib_PIC/mns.c: 495:             } else {
 25209   000F3A  EF60  F005         	goto	l10237
 25210   000F3E                     l10387:
 25211                           
 25212                           ;../../VLCBlib_PIC/mns.c: 497:                 if (m->bytes[2] > 6) {
 25213   000F3E  EE20 F004          	lfsr	2,4
 25214   000F42  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25215   000F44  26D9               	addwf	fsr2l,f,c
 25216   000F46  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25217   000F48  22DA               	addwfc	fsr2h,f,c
 25218   000F4A  0E06               	movlw	6
 25219   000F4C  64DF               	cpfsgt	indf2,c
 25220   000F4E  EFAB  F007         	goto	u7651
 25221   000F52  EFAD  F007         	goto	u7650
 25222   000F56                     u7651:
 25223   000F56  EFBC  F007         	goto	l10395
 25224   000F5A                     u7650:
 25225   000F5A                     
 25226                           ;../../VLCBlib_PIC/mns.c: 498:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 25227   000F5A  C590  F526         	movff	_nn+1,sendMessage5@data1
 25228   000F5E  C58F  F527         	movff	_nn,sendMessage5@data2
 25229   000F62  0E87               	movlw	135
 25230   000F64  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25231   000F66  0E01               	movlw	1
 25232   000F68  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25233   000F6A  0EFC               	movlw	252
 25234   000F6C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25235   000F6E  0EAF               	movlw	175
 25236   000F70  ECB4  F040         	call	_sendMessage5
 25237   000F74  EF60  F005         	goto	l10237
 25238   000F78                     l10395:
 25239                           
 25240                           ;../../VLCBlib_PIC/mns.c: 501:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 25241   000F78  EE20 F004          	lfsr	2,4
 25242   000F7C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25243   000F7E  26D9               	addwf	fsr2l,f,c
 25244   000F80  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25245   000F82  22DA               	addwfc	fsr2h,f,c
 25246   000F84  50DF               	movf	indf2,w,c
 25247   000F86  0105               	movlb	5	; () banked
 25248   000F88  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25249   000F8A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25250   000F8C  90D8               	bcf	status,0,c
 25251   000F8E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25252   000F90  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25253   000F92  0EFE               	movlw	254
 25254   000F94  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25255   000F96  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25256   000F98  0EFF               	movlw	255
 25257   000F9A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25258   000F9C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25259   000F9E  0E89               	movlw	low _services
 25260   000FA0  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25261   000FA2  6EF6               	movwf	tblptrl,c
 25262   000FA4  0EFF               	movlw	high _services
 25263   000FA6  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25264   000FA8  6EF7               	movwf	tblptrh,c
 25265   000FAA                     	if	1	;There are 3 active tblptr bytes
 25266   000FAA  6AF8               	clrf	tblptru,c
 25267   000FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 25268   000FAE  22F8               	addwfc	tblptru,f,c
 25269   000FB0                     	endif
 25270   000FB0  0009               	tblrd		*+
 25271   000FB2  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25272   000FB6  0009               	tblrd		*+
 25273   000FB8  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25274   000FBC  0E0C               	movlw	12
 25275   000FBE  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25276   000FC0  0E00               	movlw	0
 25277   000FC2  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25278   000FC4  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25279   000FC8  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25280   000FCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25281   000FCC  6AF8               	clrf	tblptru,c
 25282   000FCE                     	endif
 25283   000FCE                     	if	0	;tblptru may be non-zero
 25284   000FCE                     	endif
 25285   000FCE  0009               	tblrd		*+
 25286   000FD0  50F5               	movf	tablat,w,c
 25287   000FD2  0009               	tblrd		*+
 25288   000FD4  10F5               	iorwf	tablat,w,c
 25289   000FD6  A4D8               	btfss	status,2,c
 25290   000FD8  EFF0  F007         	goto	u7661
 25291   000FDC  EFF2  F007         	goto	u7660
 25292   000FE0                     u7661:
 25293   000FE0  EF05  F008         	goto	l10399
 25294   000FE4                     u7660:
 25295   000FE4                     
 25296                           ; BSR set to: 5
 25297                           ;../../VLCBlib_PIC/mns.c: 503:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 25298   000FE4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25299   000FE8  C58F  F527         	movff	_nn,sendMessage5@data2
 25300   000FEC  0E87               	movlw	135
 25301   000FEE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25302   000FF0  EE20 F004          	lfsr	2,4
 25303   000FF4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25304   000FF6  26D9               	addwf	fsr2l,f,c
 25305   000FF8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25306   000FFA  22DA               	addwfc	fsr2h,f,c
 25307   000FFC  50DF               	movf	indf2,w,c
 25308   000FFE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25309   001000  0E00               	movlw	0
 25310   001002  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25311   001004  0EC7               	movlw	199
 25312   001006  ECB4  F040         	call	_sendMessage5
 25313   00100A                     l10399:
 25314                           
 25315                           ;../../VLCBlib_PIC/mns.c: 505:                 if (m->bytes[3] == 0) {
 25316   00100A  EE20 F005          	lfsr	2,5
 25317   00100E  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25318   001010  26D9               	addwf	fsr2l,f,c
 25319   001012  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25320   001014  22DA               	addwfc	fsr2h,f,c
 25321   001016  50DF               	movf	indf2,w,c
 25322   001018  A4D8               	btfss	status,2,c
 25323   00101A  EF11  F008         	goto	u7671
 25324   00101E  EF13  F008         	goto	u7670
 25325   001022                     u7671:
 25326   001022  EF24  F008         	goto	l10409
 25327   001026                     u7670:
 25328   001026                     
 25329                           ;../../VLCBlib_PIC/mns.c: 507:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 25330   001026  EE20 F004          	lfsr	2,4
 25331   00102A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25332   00102C  26D9               	addwf	fsr2l,f,c
 25333   00102E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25334   001030  22DA               	addwfc	fsr2h,f,c
 25335   001032  50DF               	movf	indf2,w,c
 25336   001034  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25337   001036  0E40               	movlw	low _mnsTRallDiagnosticsCallback
 25338   001038  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25339   00103A  0E54               	movlw	high _mnsTRallDiagnosticsCallback
 25340   00103C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25341   00103E  0E04               	movlw	4
 25342   001040  ECC4  F03C         	call	_startTimedResponse
 25343   001044  EF60  F005         	goto	l10237
 25344   001048                     l10409:
 25345                           
 25346                           ;../../VLCBlib_PIC/mns.c: 510:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 25347   001048  EE20 F004          	lfsr	2,4
 25348   00104C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25349   00104E  26D9               	addwf	fsr2l,f,c
 25350   001050  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25351   001052  22DA               	addwfc	fsr2h,f,c
 25352   001054  50DF               	movf	indf2,w,c
 25353   001056  0105               	movlb	5	; () banked
 25354   001058  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25355   00105A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25356   00105C  90D8               	bcf	status,0,c
 25357   00105E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25358   001060  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25359   001062  0EFE               	movlw	254
 25360   001064  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25361   001066  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25362   001068  0EFF               	movlw	255
 25363   00106A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25364   00106C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25365   00106E  0E89               	movlw	low _services
 25366   001070  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25367   001072  6EF6               	movwf	tblptrl,c
 25368   001074  0EFF               	movlw	high _services
 25369   001076  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25370   001078  6EF7               	movwf	tblptrh,c
 25371   00107A                     	if	1	;There are 3 active tblptr bytes
 25372   00107A  6AF8               	clrf	tblptru,c
 25373   00107C  0E00               	movlw	low (__mediumconst shr (0+16))
 25374   00107E  22F8               	addwfc	tblptru,f,c
 25375   001080                     	endif
 25376   001080  0009               	tblrd		*+
 25377   001082  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25378   001086  0009               	tblrd		*+
 25379   001088  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25380   00108C  0E0C               	movlw	12
 25381   00108E  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25382   001090  0E00               	movlw	0
 25383   001092  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25384   001094  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25385   001098  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25386   00109C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25387   00109C  6AF8               	clrf	tblptru,c
 25388   00109E                     	endif
 25389   00109E                     	if	0	;tblptru may be non-zero
 25390   00109E                     	endif
 25391   00109E  0009               	tblrd		*+
 25392   0010A0  C4F5 F5D6          	movff	tablat,??_mnsProcessMessage+6
 25393   0010A4  0009               	tblrd		*+
 25394   0010A6  C4F5 F5D7          	movff	tablat,??_mnsProcessMessage+7
 25395   0010AA  D802               	call	u7688
 25396   0010AC  EF68  F008         	goto	u7689
 25397   0010B0                     u7688:
 25398   0010B0  0005               	push	
 25399   0010B2  6EFA               	movwf	pclath,c
 25400   0010B4  51D6               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 25401   0010B6  6EFD               	movwf	tosl,c
 25402   0010B8  51D7               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 25403   0010BA  6EFE               	movwf	tosh,c
 25404   0010BC  6AFF               	clrf	tosu,c
 25405   0010BE  50FA               	movf	pclath,w,c
 25406   0010C0  EE20 F005          	lfsr	2,5
 25407   0010C4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25408   0010C6  26D9               	addwf	fsr2l,f,c
 25409   0010C8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25410   0010CA  22DA               	addwfc	fsr2h,f,c
 25411   0010CC  50DF               	movf	indf2,w,c
 25412   0010CE  0012               	return		;indir
 25413   0010D0                     u7689:
 25414   0010D0  C507  F558         	movff	?_nvGetDiagnostic,mnsProcessMessage@d
 25415   0010D4  C508  F559         	movff	?_nvGetDiagnostic+1,mnsProcessMessage@d+1
 25416   0010D8                     
 25417                           ;../../VLCBlib_PIC/mns.c: 511:                     if (d == ((void*)0)) {
 25418   0010D8  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25419   0010DA  1059               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25420   0010DC  A4D8               	btfss	status,2,c
 25421   0010DE  EF73  F008         	goto	u7691
 25422   0010E2  EF75  F008         	goto	u7690
 25423   0010E6                     u7691:
 25424   0010E6  EF84  F008         	goto	l10415
 25425   0010EA                     u7690:
 25426   0010EA                     
 25427                           ;../../VLCBlib_PIC/mns.c: 513:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 25428   0010EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 25429   0010EE  C58F  F527         	movff	_nn,sendMessage5@data2
 25430   0010F2  0E87               	movlw	135
 25431   0010F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25432   0010F6  0E01               	movlw	1
 25433   0010F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25434   0010FA  0EFD               	movlw	253
 25435   0010FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25436   0010FE  0EAF               	movlw	175
 25437   001100  ECB4  F040         	call	_sendMessage5
 25438                           
 25439                           ;../../VLCBlib_PIC/mns.c: 514:                     } else {
 25440   001104  EF60  F005         	goto	l10237
 25441   001108                     l10415:
 25442                           
 25443                           ;../../VLCBlib_PIC/mns.c: 516:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 25444   001108  C590  F526         	movff	_nn+1,sendMessage6@data1
 25445   00110C  C58F  F527         	movff	_nn,sendMessage6@data2
 25446   001110  EE20 F004          	lfsr	2,4
 25447   001114  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25448   001116  26D9               	addwf	fsr2l,f,c
 25449   001118  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25450   00111A  22DA               	addwfc	fsr2h,f,c
 25451   00111C  50DF               	movf	indf2,w,c
 25452   00111E  6E28               	movwf	sendMessage6@data3^(0+1280),c
 25453   001120  EE20 F005          	lfsr	2,5
 25454   001124  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25455   001126  26D9               	addwf	fsr2l,f,c
 25456   001128  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25457   00112A  22DA               	addwfc	fsr2h,f,c
 25458   00112C  50DF               	movf	indf2,w,c
 25459   00112E  6E29               	movwf	sendMessage6@data4^(0+1280),c
 25460   001130  EE20 F001          	lfsr	2,1
 25461   001134  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25462   001136  26D9               	addwf	fsr2l,f,c
 25463   001138  5059               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25464   00113A  22DA               	addwfc	fsr2h,f,c
 25465   00113C  50DF               	movf	indf2,w,c
 25466   00113E  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 25467   001140  C558  F4D9         	movff	mnsProcessMessage@d,fsr2l
 25468   001144  C559  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 25469   001148  50DF               	movf	indf2,w,c
 25470   00114A  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 25471   00114C  0EC7               	movlw	199
 25472   00114E  EC4B  F040         	call	_sendMessage6
 25473   001152  EF60  F005         	goto	l10237
 25474   001156                     l10421:
 25475                           
 25476                           ; BSR set to: 5
 25477                           ;../../VLCBlib_PIC/mns.c: 524:             if (m->len < 4) {
 25478   001156  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25479   00115A  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25480   00115E  0E04               	movlw	4
 25481   001160  60DF               	cpfslt	indf2,c
 25482   001162  EFB5  F008         	goto	u7701
 25483   001166  EFB7  F008         	goto	u7700
 25484   00116A                     u7701:
 25485   00116A  EFC6  F008         	goto	l10429
 25486   00116E                     u7700:
 25487   00116E                     
 25488                           ; BSR set to: 5
 25489                           ;../../VLCBlib_PIC/mns.c: 525:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25490   00116E  C590  F526         	movff	_nn+1,sendMessage5@data1
 25491   001172  C58F  F527         	movff	_nn,sendMessage5@data2
 25492   001176  0E78               	movlw	120
 25493   001178  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25494   00117A  0E01               	movlw	1
 25495   00117C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25496   00117E  0E01               	movlw	1
 25497   001180  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25498   001182  0EAF               	movlw	175
 25499   001184  ECB4  F040         	call	_sendMessage5
 25500   001188  EF60  F005         	goto	l10237
 25501   00118C                     l10429:
 25502                           
 25503                           ; BSR set to: 5
 25504                           ;../../VLCBlib_PIC/mns.c: 528:             if (m->bytes[2] == 0) {
 25505   00118C  EE20 F004          	lfsr	2,4
 25506   001190  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25507   001192  26D9               	addwf	fsr2l,f,c
 25508   001194  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25509   001196  22DA               	addwfc	fsr2h,f,c
 25510   001198  50DF               	movf	indf2,w,c
 25511   00119A  A4D8               	btfss	status,2,c
 25512   00119C  EFD2  F008         	goto	u7711
 25513   0011A0  EFD4  F008         	goto	u7710
 25514   0011A4                     u7711:
 25515   0011A4  EFEC  F008         	goto	l10435
 25516   0011A8                     u7710:
 25517   0011A8                     
 25518                           ; BSR set to: 5
 25519                           ;../../VLCBlib_PIC/mns.c: 530:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 6);
 25520   0011A8  C590  F526         	movff	_nn+1,sendMessage5@data1
 25521   0011AC  C58F  F527         	movff	_nn,sendMessage5@data2
 25522   0011B0  0E00               	movlw	0
 25523   0011B2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25524   0011B4  0E00               	movlw	0
 25525   0011B6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25526   0011B8  0E06               	movlw	6
 25527   0011BA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25528   0011BC  0EAC               	movlw	172
 25529   0011BE  ECB4  F040         	call	_sendMessage5
 25530   0011C2                     
 25531                           ;../../VLCBlib_PIC/mns.c: 532:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 25532   0011C2  0E01               	movlw	1
 25533   0011C4  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25534   0011C6  0E3C               	movlw	low _mnsTRserviceDiscoveryCallback
 25535   0011C8  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25536   0011CA  0E6B               	movlw	high _mnsTRserviceDiscoveryCallback
 25537   0011CC  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25538   0011CE  0E03               	movlw	3
 25539   0011D0  ECC4  F03C         	call	_startTimedResponse
 25540                           
 25541                           ;../../VLCBlib_PIC/mns.c: 533:             } else if (m->bytes[2] > 6) {
 25542   0011D4  EF60  F005         	goto	l10237
 25543   0011D8                     l10435:
 25544                           
 25545                           ; BSR set to: 5
 25546   0011D8  EE20 F004          	lfsr	2,4
 25547   0011DC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25548   0011DE  26D9               	addwf	fsr2l,f,c
 25549   0011E0  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25550   0011E2  22DA               	addwfc	fsr2h,f,c
 25551   0011E4  0E06               	movlw	6
 25552   0011E6  64DF               	cpfsgt	indf2,c
 25553   0011E8  EFF8  F008         	goto	u7721
 25554   0011EC  EFFA  F008         	goto	u7720
 25555   0011F0                     u7721:
 25556   0011F0  EF09  F009         	goto	l10445
 25557   0011F4                     u7720:
 25558   0011F4                     
 25559                           ; BSR set to: 5
 25560                           ;../../VLCBlib_PIC/mns.c: 534:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 25561   0011F4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25562   0011F8  C58F  F527         	movff	_nn,sendMessage5@data2
 25563   0011FC  0E78               	movlw	120
 25564   0011FE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25565   001200  0E01               	movlw	1
 25566   001202  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25567   001204  0EFC               	movlw	252
 25568   001206  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25569   001208  0EAF               	movlw	175
 25570   00120A  ECB4  F040         	call	_sendMessage5
 25571   00120E  EF60  F005         	goto	l10237
 25572   001212                     l10445:
 25573                           
 25574                           ; BSR set to: 5
 25575                           ;../../VLCBlib_PIC/mns.c: 538:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 25576   001212  EE20 F004          	lfsr	2,4
 25577   001216  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25578   001218  26D9               	addwf	fsr2l,f,c
 25579   00121A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25580   00121C  22DA               	addwfc	fsr2h,f,c
 25581   00121E  50DF               	movf	indf2,w,c
 25582   001220  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25583   001222  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25584   001224  90D8               	bcf	status,0,c
 25585   001226  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25586   001228  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25587   00122A  0EFE               	movlw	254
 25588   00122C  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25589   00122E  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25590   001230  0EFF               	movlw	255
 25591   001232  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25592   001234  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25593   001236  0E89               	movlw	low _services
 25594   001238  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25595   00123A  6EF6               	movwf	tblptrl,c
 25596   00123C  0EFF               	movlw	high _services
 25597   00123E  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25598   001240  6EF7               	movwf	tblptrh,c
 25599   001242                     	if	1	;There are 3 active tblptr bytes
 25600   001242  6AF8               	clrf	tblptru,c
 25601   001244  0E00               	movlw	low (__mediumconst shr (0+16))
 25602   001246  22F8               	addwfc	tblptru,f,c
 25603   001248                     	endif
 25604   001248  0009               	tblrd		*+
 25605   00124A  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25606   00124E  0009               	tblrd		*+
 25607   001250  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25608   001254  0E0A               	movlw	10
 25609   001256  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25610   001258  0E00               	movlw	0
 25611   00125A  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25612   00125C  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25613   001260  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25614   001264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25615   001264  6AF8               	clrf	tblptru,c
 25616   001266                     	endif
 25617   001266                     	if	0	;tblptru may be non-zero
 25618   001266                     	endif
 25619   001266  0009               	tblrd		*+
 25620   001268  50F5               	movf	tablat,w,c
 25621   00126A  0009               	tblrd		*+
 25622   00126C  10F5               	iorwf	tablat,w,c
 25623   00126E  A4D8               	btfss	status,2,c
 25624   001270  EF3C  F009         	goto	u7731
 25625   001274  EF3E  F009         	goto	u7730
 25626   001278                     u7731:
 25627   001278  EF7E  F009         	goto	l10449
 25628   00127C                     u7730:
 25629   00127C                     
 25630                           ; BSR set to: 5
 25631                           ;../../VLCBlib_PIC/mns.c: 539:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 25632   00127C  C590  F526         	movff	_nn+1,sendMessage7@data1
 25633   001280  C58F  F527         	movff	_nn,sendMessage7@data2
 25634   001284  EE20 F004          	lfsr	2,4
 25635   001288  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25636   00128A  26D9               	addwf	fsr2l,f,c
 25637   00128C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25638   00128E  22DA               	addwfc	fsr2h,f,c
 25639   001290  50DF               	movf	indf2,w,c
 25640   001292  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25641   001294  EE20 F004          	lfsr	2,4
 25642   001298  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25643   00129A  26D9               	addwf	fsr2l,f,c
 25644   00129C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25645   00129E  22DA               	addwfc	fsr2h,f,c
 25646   0012A0  50DF               	movf	indf2,w,c
 25647   0012A2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25648   0012A4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25649   0012A6  90D8               	bcf	status,0,c
 25650   0012A8  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25651   0012AA  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25652   0012AC  0EFE               	movlw	254
 25653   0012AE  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25654   0012B0  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25655   0012B2  0EFF               	movlw	255
 25656   0012B4  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25657   0012B6  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25658   0012B8  0E89               	movlw	low _services
 25659   0012BA  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25660   0012BC  6EF6               	movwf	tblptrl,c
 25661   0012BE  0EFF               	movlw	high _services
 25662   0012C0  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25663   0012C2  6EF7               	movwf	tblptrh,c
 25664   0012C4                     	if	1	;There are 3 active tblptr bytes
 25665   0012C4  6AF8               	clrf	tblptru,c
 25666   0012C6  0E00               	movlw	low (__mediumconst shr (0+16))
 25667   0012C8  22F8               	addwfc	tblptru,f,c
 25668   0012CA                     	endif
 25669   0012CA  0009               	tblrd		*+
 25670   0012CC  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25671   0012D0  0009               	tblrd		*+
 25672   0012D2  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25673   0012D6  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25674   0012DA  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25675   0012DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25676   0012DE  6AF8               	clrf	tblptru,c
 25677   0012E0                     	endif
 25678   0012E0                     	if	0	;tblptru may be non-zero
 25679   0012E0                     	endif
 25680   0012E0  0008               	tblrd		*
 25681   0012E2  C4F5 F529          	movff	tablat,sendMessage7@data4
 25682   0012E6  0E00               	movlw	0
 25683   0012E8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25684   0012EA  0E00               	movlw	0
 25685   0012EC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25686   0012EE  0E00               	movlw	0
 25687   0012F0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25688   0012F2  0EE7               	movlw	231
 25689   0012F4  EC9F  F040         	call	_sendMessage7
 25690                           
 25691                           ;../../VLCBlib_PIC/mns.c: 540:                 } else {
 25692   0012F8  EF60  F005         	goto	l10237
 25693   0012FC                     l10449:
 25694                           
 25695                           ; BSR set to: 5
 25696                           ;../../VLCBlib_PIC/mns.c: 541:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 25697   0012FC  C590  F526         	movff	_nn+1,sendMessage7@data1
 25698   001300  C58F  F527         	movff	_nn,sendMessage7@data2
 25699   001304  EE20 F004          	lfsr	2,4
 25700   001308  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25701   00130A  26D9               	addwf	fsr2l,f,c
 25702   00130C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25703   00130E  22DA               	addwfc	fsr2h,f,c
 25704   001310  50DF               	movf	indf2,w,c
 25705   001312  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25706   001314  EE20 F004          	lfsr	2,4
 25707   001318  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25708   00131A  26D9               	addwf	fsr2l,f,c
 25709   00131C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25710   00131E  22DA               	addwfc	fsr2h,f,c
 25711   001320  50DF               	movf	indf2,w,c
 25712   001322  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25713   001324  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25714   001326  90D8               	bcf	status,0,c
 25715   001328  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25716   00132A  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25717   00132C  0EFE               	movlw	254
 25718   00132E  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25719   001330  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25720   001332  0EFF               	movlw	255
 25721   001334  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25722   001336  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25723   001338  0E89               	movlw	low _services
 25724   00133A  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25725   00133C  6EF6               	movwf	tblptrl,c
 25726   00133E  0EFF               	movlw	high _services
 25727   001340  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25728   001342  6EF7               	movwf	tblptrh,c
 25729   001344                     	if	1	;There are 3 active tblptr bytes
 25730   001344  6AF8               	clrf	tblptru,c
 25731   001346  0E00               	movlw	low (__mediumconst shr (0+16))
 25732   001348  22F8               	addwfc	tblptru,f,c
 25733   00134A                     	endif
 25734   00134A  0009               	tblrd		*+
 25735   00134C  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25736   001350  0009               	tblrd		*+
 25737   001352  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25738   001356  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25739   00135A  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25740   00135E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25741   00135E  6AF8               	clrf	tblptru,c
 25742   001360                     	endif
 25743   001360                     	if	0	;tblptru may be non-zero
 25744   001360                     	endif
 25745   001360  0008               	tblrd		*
 25746   001362  C4F5 F529          	movff	tablat,sendMessage7@data4
 25747   001366  EE20 F004          	lfsr	2,4
 25748   00136A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25749   00136C  26D9               	addwf	fsr2l,f,c
 25750   00136E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25751   001370  22DA               	addwfc	fsr2h,f,c
 25752   001372  50DF               	movf	indf2,w,c
 25753   001374  6FD6               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 25754   001376  6BD7               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 25755   001378  90D8               	bcf	status,0,c
 25756   00137A  37D6               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 25757   00137C  37D7               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 25758   00137E  0EFE               	movlw	254
 25759   001380  25D6               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 25760   001382  6FD8               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 25761   001384  0EFF               	movlw	255
 25762   001386  21D7               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 25763   001388  6FD9               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 25764   00138A  0E89               	movlw	low _services
 25765   00138C  25D8               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 25766   00138E  6EF6               	movwf	tblptrl,c
 25767   001390  0EFF               	movlw	high _services
 25768   001392  21D9               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 25769   001394  6EF7               	movwf	tblptrh,c
 25770   001396                     	if	1	;There are 3 active tblptr bytes
 25771   001396  6AF8               	clrf	tblptru,c
 25772   001398  0E00               	movlw	low (__mediumconst shr (0+16))
 25773   00139A  22F8               	addwfc	tblptru,f,c
 25774   00139C                     	endif
 25775   00139C  0009               	tblrd		*+
 25776   00139E  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+10
 25777   0013A2  0009               	tblrd		*+
 25778   0013A4  C4F5 F5DB          	movff	tablat,??_mnsProcessMessage+11
 25779   0013A8  0E0A               	movlw	10
 25780   0013AA  27DA               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 25781   0013AC  0E00               	movlw	0
 25782   0013AE  23DB               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 25783   0013B0  C5DA  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 25784   0013B4  C5DB  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 25785   0013B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25786   0013B8  6AF8               	clrf	tblptru,c
 25787   0013BA                     	endif
 25788   0013BA                     	if	0	;tblptru may be non-zero
 25789   0013BA                     	endif
 25790   0013BA  0009               	tblrd		*+
 25791   0013BC  C4F5 F5DC          	movff	tablat,??_mnsProcessMessage+12
 25792   0013C0  0009               	tblrd		*+
 25793   0013C2  C4F5 F5DD          	movff	tablat,??_mnsProcessMessage+13
 25794   0013C6  D802               	call	u7748
 25795   0013C8  EFF0  F009         	goto	u7749
 25796   0013CC                     u7748:
 25797   0013CC  0005               	push	
 25798   0013CE  6EFA               	movwf	pclath,c
 25799   0013D0  51DC               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 25800   0013D2  6EFD               	movwf	tosl,c
 25801   0013D4  51DD               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 25802   0013D6  6EFE               	movwf	tosh,c
 25803   0013D8  6AFF               	clrf	tosu,c
 25804   0013DA  50FA               	movf	pclath,w,c
 25805   0013DC  0E01               	movlw	1
 25806   0013DE  0012               	return		;indir
 25807   0013E0                     u7749:
 25808   0013E0  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25809   0013E2  EE20 F004          	lfsr	2,4
 25810   0013E6  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25811   0013E8  26D9               	addwf	fsr2l,f,c
 25812   0013EA  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25813   0013EC  22DA               	addwfc	fsr2h,f,c
 25814   0013EE  50DF               	movf	indf2,w,c
 25815   0013F0  0105               	movlb	5	; () banked
 25816   0013F2  6FDE               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 25817   0013F4  6BDF               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 25818   0013F6  90D8               	bcf	status,0,c
 25819   0013F8  37DE               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 25820   0013FA  37DF               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 25821   0013FC  0EFE               	movlw	254
 25822   0013FE  25DE               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 25823   001400  6FE0               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 25824   001402  0EFF               	movlw	255
 25825   001404  21DF               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 25826   001406  6FE1               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 25827   001408  0E89               	movlw	low _services
 25828   00140A  25E0               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 25829   00140C  6EF6               	movwf	tblptrl,c
 25830   00140E  0EFF               	movlw	high _services
 25831   001410  21E1               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 25832   001412  6EF7               	movwf	tblptrh,c
 25833   001414                     	if	1	;There are 3 active tblptr bytes
 25834   001414  6AF8               	clrf	tblptru,c
 25835   001416  0E00               	movlw	low (__mediumconst shr (0+16))
 25836   001418  22F8               	addwfc	tblptru,f,c
 25837   00141A                     	endif
 25838   00141A  0009               	tblrd		*+
 25839   00141C  C4F5 F5E2          	movff	tablat,??_mnsProcessMessage+18
 25840   001420  0009               	tblrd		*+
 25841   001422  C4F5 F5E3          	movff	tablat,??_mnsProcessMessage+19
 25842   001426  0E0A               	movlw	10
 25843   001428  27E2               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 25844   00142A  0E00               	movlw	0
 25845   00142C  23E3               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 25846   00142E  C5E2  F4F6         	movff	??_mnsProcessMessage+18,tblptrl
 25847   001432  C5E3  F4F7         	movff	??_mnsProcessMessage+19,tblptrh
 25848   001436                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25849   001436  6AF8               	clrf	tblptru,c
 25850   001438                     	endif
 25851   001438                     	if	0	;tblptru may be non-zero
 25852   001438                     	endif
 25853   001438  0009               	tblrd		*+
 25854   00143A  C4F5 F5E4          	movff	tablat,??_mnsProcessMessage+20
 25855   00143E  0009               	tblrd		*+
 25856   001440  C4F5 F5E5          	movff	tablat,??_mnsProcessMessage+21
 25857   001444  D802               	call	u7758
 25858   001446  EF2F  F00A         	goto	u7759
 25859   00144A                     u7758:
 25860   00144A  0005               	push	
 25861   00144C  6EFA               	movwf	pclath,c
 25862   00144E  51E4               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 25863   001450  6EFD               	movwf	tosl,c
 25864   001452  51E5               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 25865   001454  6EFE               	movwf	tosh,c
 25866   001456  6AFF               	clrf	tosu,c
 25867   001458  50FA               	movf	pclath,w,c
 25868   00145A  0E02               	movlw	2
 25869   00145C  0012               	return		;indir
 25870   00145E                     u7759:
 25871   00145E  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25872   001460  EE20 F004          	lfsr	2,4
 25873   001464  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25874   001466  26D9               	addwf	fsr2l,f,c
 25875   001468  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25876   00146A  22DA               	addwfc	fsr2h,f,c
 25877   00146C  50DF               	movf	indf2,w,c
 25878   00146E  0105               	movlb	5	; () banked
 25879   001470  6FE6               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 25880   001472  6BE7               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 25881   001474  90D8               	bcf	status,0,c
 25882   001476  37E6               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 25883   001478  37E7               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 25884   00147A  0EFE               	movlw	254
 25885   00147C  25E6               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 25886   00147E  6FE8               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 25887   001480  0EFF               	movlw	255
 25888   001482  21E7               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 25889   001484  6FE9               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 25890   001486  0E89               	movlw	low _services
 25891   001488  25E8               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 25892   00148A  6EF6               	movwf	tblptrl,c
 25893   00148C  0EFF               	movlw	high _services
 25894   00148E  21E9               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 25895   001490  6EF7               	movwf	tblptrh,c
 25896   001492                     	if	1	;There are 3 active tblptr bytes
 25897   001492  6AF8               	clrf	tblptru,c
 25898   001494  0E00               	movlw	low (__mediumconst shr (0+16))
 25899   001496  22F8               	addwfc	tblptru,f,c
 25900   001498                     	endif
 25901   001498  0009               	tblrd		*+
 25902   00149A  C4F5 F5EA          	movff	tablat,??_mnsProcessMessage+26
 25903   00149E  0009               	tblrd		*+
 25904   0014A0  C4F5 F5EB          	movff	tablat,??_mnsProcessMessage+27
 25905   0014A4  0E0A               	movlw	10
 25906   0014A6  27EA               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 25907   0014A8  0E00               	movlw	0
 25908   0014AA  23EB               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 25909   0014AC  C5EA  F4F6         	movff	??_mnsProcessMessage+26,tblptrl
 25910   0014B0  C5EB  F4F7         	movff	??_mnsProcessMessage+27,tblptrh
 25911   0014B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25912   0014B4  6AF8               	clrf	tblptru,c
 25913   0014B6                     	endif
 25914   0014B6                     	if	0	;tblptru may be non-zero
 25915   0014B6                     	endif
 25916   0014B6  0009               	tblrd		*+
 25917   0014B8  C4F5 F5EC          	movff	tablat,??_mnsProcessMessage+28
 25918   0014BC  0009               	tblrd		*+
 25919   0014BE  C4F5 F5ED          	movff	tablat,??_mnsProcessMessage+29
 25920   0014C2  D802               	call	u7768
 25921   0014C4  EF6E  F00A         	goto	u7769
 25922   0014C8                     u7768:
 25923   0014C8  0005               	push	
 25924   0014CA  6EFA               	movwf	pclath,c
 25925   0014CC  51EC               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 25926   0014CE  6EFD               	movwf	tosl,c
 25927   0014D0  51ED               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 25928   0014D2  6EFE               	movwf	tosh,c
 25929   0014D4  6AFF               	clrf	tosu,c
 25930   0014D6  50FA               	movf	pclath,w,c
 25931   0014D8  0E03               	movlw	3
 25932   0014DA  0012               	return		;indir
 25933   0014DC                     u7769:
 25934   0014DC  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25935   0014DE  0EE7               	movlw	231
 25936   0014E0  EC9F  F040         	call	_sendMessage7
 25937   0014E4  EF60  F005         	goto	l10237
 25938   0014E8                     l10455:
 25939                           
 25940                           ; BSR set to: 5
 25941                           ;../../VLCBlib_PIC/mns.c: 551:             if (m->len < 4) {
 25942   0014E8  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25943   0014EC  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25944   0014F0  0E04               	movlw	4
 25945   0014F2  60DF               	cpfslt	indf2,c
 25946   0014F4  EF7E  F00A         	goto	u7771
 25947   0014F8  EF80  F00A         	goto	u7770
 25948   0014FC                     u7771:
 25949   0014FC  EF8F  F00A         	goto	l10463
 25950   001500                     u7770:
 25951   001500                     
 25952                           ; BSR set to: 5
 25953                           ;../../VLCBlib_PIC/mns.c: 552:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25954   001500  C590  F526         	movff	_nn+1,sendMessage5@data1
 25955   001504  C58F  F527         	movff	_nn,sendMessage5@data2
 25956   001508  0E76               	movlw	118
 25957   00150A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25958   00150C  0E01               	movlw	1
 25959   00150E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25960   001510  0E01               	movlw	1
 25961   001512  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25962   001514  0EAF               	movlw	175
 25963   001516  ECB4  F040         	call	_sendMessage5
 25964   00151A  EF60  F005         	goto	l10237
 25965   00151E                     l10463:
 25966                           
 25967                           ; BSR set to: 5
 25968                           ;../../VLCBlib_PIC/mns.c: 555:             newMode = m->bytes[2];
 25969   00151E  EE20 F004          	lfsr	2,4
 25970   001522  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25971   001524  26D9               	addwf	fsr2l,f,c
 25972   001526  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25973   001528  22DA               	addwfc	fsr2h,f,c
 25974   00152A  50DF               	movf	indf2,w,c
 25975   00152C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 25976   00152E                     
 25977                           ; BSR set to: 5
 25978                           ;../../VLCBlib_PIC/mns.c: 556:             previousNN.word = nn.word;
 25979   00152E  C58F  F58D         	movff	_nn,_previousNN
 25980   001532  C590  F58E         	movff	_nn+1,_previousNN+1
 25981                           
 25982                           ;../../VLCBlib_PIC/mns.c: 558:             switch (newMode) {
 25983   001536  EF32  F00B         	goto	l10529
 25984   00153A                     l10467:
 25985                           
 25986                           ; BSR set to: 5
 25987                           ;../../VLCBlib_PIC/mns.c: 561:                     if (mode_state == MODE_NORMAL) {
 25988   00153A  05A1               	decf	_mode_state& (0+255),w,b
 25989   00153C  A4D8               	btfss	status,2,c
 25990   00153E  EFA3  F00A         	goto	u7781
 25991   001542  EFA5  F00A         	goto	u7780
 25992   001546                     u7781:
 25993   001546  EFED  F005         	goto	l10263
 25994   00154A                     u7780:
 25995   00154A                     
 25996                           ; BSR set to: 5
 25997                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 25998   00154A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25999   00154C  B4D8               	btfsc	status,2,c
 26000   00154E  EFAB  F00A         	goto	u7791
 26001   001552  EFAD  F00A         	goto	u7790
 26002   001556                     u7791:
 26003   001556  EFB1  F00A         	goto	l10473
 26004   00155A                     u7790:
 26005   00155A                     
 26006                           ; BSR set to: 5
 26007   00155A  0E51               	movlw	81
 26008   00155C  6E57               	movwf	_mnsProcessMessage$4494^(0+1280),c
 26009   00155E  EFB3  F00A         	goto	l10475
 26010   001562                     l10473:
 26011                           
 26012                           ; BSR set to: 5
 26013   001562  0E50               	movlw	80
 26014   001564  6E57               	movwf	_mnsProcessMessage$4494^(0+1280),c
 26015   001566                     l10475:
 26016                           
 26017                           ; BSR set to: 5
 26018   001566  C590  F526         	movff	_nn+1,sendMessage2@data1
 26019   00156A  C58F  F527         	movff	_nn,sendMessage2@data2
 26020   00156E  5057               	movf	_mnsProcessMessage$4494^(0+1280),w,c
 26021   001570  EC8A  F040         	call	_sendMessage2
 26022   001574                     
 26023                           ;../../VLCBlib_PIC/mns.c: 563:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26024   001574  C590  F526         	movff	_nn+1,sendMessage5@data1
 26025   001578  C58F  F527         	movff	_nn,sendMessage5@data2
 26026   00157C  0E76               	movlw	118
 26027   00157E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26028   001580  0E01               	movlw	1
 26029   001582  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26030   001584  0E00               	movlw	0
 26031   001586  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26032   001588  0EAF               	movlw	175
 26033   00158A  ECB4  F040         	call	_sendMessage5
 26034   00158E                     
 26035                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 26036   00158E  0105               	movlb	5	; () banked
 26037   001590  6B90               	clrf	(_nn+1)& (0+255),b
 26038   001592  6B8F               	clrf	_nn& (0+255),b
 26039   001594                     
 26040                           ; BSR set to: 5
 26041                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 26042   001594  0EFD               	movlw	253
 26043   001596  6E0E               	movwf	writeNVM@index^(0+1280),c
 26044   001598  0E03               	movlw	3
 26045   00159A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26046   00159C  0E00               	movlw	0
 26047   00159E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26048   0015A0  C590  F511         	movff	_nn+1,writeNVM@value
 26049   0015A4  0E00               	movlw	0
 26050   0015A6  EC64  F03C         	call	_writeNVM
 26051   0015AA                     
 26052                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 26053   0015AA  0EFC               	movlw	252
 26054   0015AC  6E0E               	movwf	writeNVM@index^(0+1280),c
 26055   0015AE  0E03               	movlw	3
 26056   0015B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26057   0015B2  0E00               	movlw	0
 26058   0015B4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26059   0015B6  C58F  F511         	movff	_nn,writeNVM@value
 26060   0015BA  0E00               	movlw	0
 26061   0015BC  EC64  F03C         	call	_writeNVM
 26062                           
 26063                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 26064   0015C0  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 26065   0015C2  B4D8               	btfsc	status,2,c
 26066   0015C4  EFE6  F00A         	goto	u7801
 26067   0015C8  EFE8  F00A         	goto	u7800
 26068   0015CC                     u7801:
 26069   0015CC  EFEC  F00A         	goto	l1372
 26070   0015D0                     u7800:
 26071   0015D0  0105               	movlb	5	; () banked
 26072   0015D2  69A1               	setf	_mode_state& (0+255),b
 26073   0015D4  EFEE  F00A         	goto	l10487
 26074   0015D8                     l1372:
 26075   0015D8  0105               	movlb	5	; () banked
 26076   0015DA  6BA1               	clrf	_mode_state& (0+255),b
 26077   0015DC                     l10487:
 26078                           
 26079                           ; BSR set to: 5
 26080                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 26081   0015DC  0E01               	movlw	1
 26082   0015DE  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 26083   0015E0  EF5E  F005         	goto	l10235
 26084   0015E4                     l10495:
 26085                           
 26086                           ; BSR set to: 5
 26087                           ;../../VLCBlib_PIC/mns.c: 576:                     mode_flags |= 4;
 26088   0015E4  85A4               	bsf	_mode_flags& (0+255),2,b
 26089   0015E6                     
 26090                           ; BSR set to: 5
 26091                           ;../../VLCBlib_PIC/mns.c: 577:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26092   0015E6  C590  F526         	movff	_nn+1,sendMessage5@data1
 26093   0015EA  C58F  F527         	movff	_nn,sendMessage5@data2
 26094   0015EE  0E76               	movlw	118
 26095   0015F0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26096   0015F2  0E01               	movlw	1
 26097   0015F4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26098   0015F6  0E00               	movlw	0
 26099   0015F8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26100   0015FA  0EAF               	movlw	175
 26101   0015FC  ECB4  F040         	call	_sendMessage5
 26102   001600  EF60  F005         	goto	l10237
 26103   001604                     l10503:
 26104                           
 26105                           ; BSR set to: 5
 26106                           ;../../VLCBlib_PIC/mns.c: 580:                     mode_flags &= ~4;
 26107   001604  95A4               	bcf	_mode_flags& (0+255),2,b
 26108   001606                     
 26109                           ; BSR set to: 5
 26110                           ;../../VLCBlib_PIC/mns.c: 581:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26111   001606  C590  F526         	movff	_nn+1,sendMessage5@data1
 26112   00160A  C58F  F527         	movff	_nn,sendMessage5@data2
 26113   00160E  0E76               	movlw	118
 26114   001610  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26115   001612  0E01               	movlw	1
 26116   001614  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26117   001616  0E00               	movlw	0
 26118   001618  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26119   00161A  0EAF               	movlw	175
 26120   00161C  ECB4  F040         	call	_sendMessage5
 26121   001620  EF60  F005         	goto	l10237
 26122   001624                     l10511:
 26123                           
 26124                           ; BSR set to: 5
 26125                           ;../../VLCBlib_PIC/mns.c: 584:                     mode_flags |= 8;
 26126   001624  87A4               	bsf	_mode_flags& (0+255),3,b
 26127   001626                     
 26128                           ; BSR set to: 5
 26129                           ;../../VLCBlib_PIC/mns.c: 585:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26130   001626  C590  F526         	movff	_nn+1,sendMessage5@data1
 26131   00162A  C58F  F527         	movff	_nn,sendMessage5@data2
 26132   00162E  0E76               	movlw	118
 26133   001630  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26134   001632  0E01               	movlw	1
 26135   001634  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26136   001636  0E00               	movlw	0
 26137   001638  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26138   00163A  0EAF               	movlw	175
 26139   00163C  ECB4  F040         	call	_sendMessage5
 26140   001640  EF60  F005         	goto	l10237
 26141   001644                     l10519:
 26142                           
 26143                           ; BSR set to: 5
 26144                           ;../../VLCBlib_PIC/mns.c: 588:                     mode_flags &= ~8;
 26145   001644  97A4               	bcf	_mode_flags& (0+255),3,b
 26146   001646                     
 26147                           ; BSR set to: 5
 26148                           ;../../VLCBlib_PIC/mns.c: 589:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26149   001646  C590  F526         	movff	_nn+1,sendMessage5@data1
 26150   00164A  C58F  F527         	movff	_nn,sendMessage5@data2
 26151   00164E  0E76               	movlw	118
 26152   001650  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26153   001652  0E01               	movlw	1
 26154   001654  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26155   001656  0E00               	movlw	0
 26156   001658  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26157   00165A  0EAF               	movlw	175
 26158   00165C  ECB4  F040         	call	_sendMessage5
 26159   001660  EF60  F005         	goto	l10237
 26160   001664                     l10529:
 26161                           
 26162                           ; BSR set to: 5
 26163   001664  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 26164                           
 26165                           ; Switch size 1, requested type "simple"
 26166                           ; Number of cases is 6, Range of values is 0 to 255
 26167                           ; switch strategies available:
 26168                           ; Name         Instructions Cycles
 26169                           ; simple_byte           19    10 (average)
 26170                           ;	Chosen strategy is simple_byte
 26171   001666  0A00               	xorlw	0	; case 0
 26172   001668  B4D8               	btfsc	status,2,c
 26173   00166A  EF9D  F00A         	goto	l10467
 26174   00166E  0A0C               	xorlw	12	; case 12
 26175   001670  B4D8               	btfsc	status,2,c
 26176   001672  EFF2  F00A         	goto	l10495
 26177   001676  0A01               	xorlw	1	; case 13
 26178   001678  B4D8               	btfsc	status,2,c
 26179   00167A  EF02  F00B         	goto	l10503
 26180   00167E  0A1D               	xorlw	29	; case 16
 26181   001680  B4D8               	btfsc	status,2,c
 26182   001682  EF12  F00B         	goto	l10511
 26183   001686  0A01               	xorlw	1	; case 17
 26184   001688  B4D8               	btfsc	status,2,c
 26185   00168A  EF22  F00B         	goto	l10519
 26186   00168E  0AEE               	xorlw	238	; case 255
 26187   001690  B4D8               	btfsc	status,2,c
 26188   001692  EF9D  F00A         	goto	l10467
 26189   001696  EFED  F005         	goto	l10263
 26190   00169A                     l1381:
 26191                           
 26192                           ; BSR set to: 5
 26193   00169A  00FF               	reset		;# 
 26194   00169C  EF60  F005         	goto	l10237
 26195   0016A0                     l10541:
 26196                           
 26197                           ; BSR set to: 5
 26198   0016A0  EE20 F001          	lfsr	2,1
 26199   0016A4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 26200   0016A6  26D9               	addwf	fsr2l,f,c
 26201   0016A8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 26202   0016AA  22DA               	addwfc	fsr2h,f,c
 26203   0016AC  50DF               	movf	indf2,w,c
 26204   0016AE  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 26205   0016B0  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 26206                           
 26207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26208                           ; Switch size 1, requested type "simple"
 26209                           ; Number of cases is 1, Range of values is 0 to 0
 26210                           ; switch strategies available:
 26211                           ; Name         Instructions Cycles
 26212                           ; simple_byte            4     3 (average)
 26213                           ;	Chosen strategy is simple_byte
 26214   0016B2  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 26215   0016B4  0A00               	xorlw	0	; case 0
 26216   0016B6  B4D8               	btfsc	status,2,c
 26217   0016B8  EF60  F00B         	goto	l11783
 26218   0016BC  EFED  F005         	goto	l10263
 26219   0016C0                     l11783:
 26220                           
 26221                           ; BSR set to: 5
 26222                           ; Switch size 1, requested type "simple"
 26223                           ; Number of cases is 6, Range of values is 79 to 135
 26224                           ; switch strategies available:
 26225                           ; Name         Instructions Cycles
 26226                           ; simple_byte           19    10 (average)
 26227                           ;	Chosen strategy is simple_byte
 26228   0016C0  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 26229   0016C2  0A4F               	xorlw	79	; case 79
 26230   0016C4  B4D8               	btfsc	status,2,c
 26231   0016C6  EF2C  F007         	goto	l1341
 26232   0016CA  0A11               	xorlw	17	; case 94
 26233   0016CC  B4D8               	btfsc	status,2,c
 26234   0016CE  EF4D  F00B         	goto	l1381
 26235   0016D2  0A2D               	xorlw	45	; case 115
 26236   0016D4  B4D8               	btfsc	status,2,c
 26237   0016D6  EFAD  F006         	goto	l10337
 26238   0016DA  0A05               	xorlw	5	; case 118
 26239   0016DC  B4D8               	btfsc	status,2,c
 26240   0016DE  EF74  F00A         	goto	l10455
 26241   0016E2  0A0E               	xorlw	14	; case 120
 26242   0016E4  B4D8               	btfsc	status,2,c
 26243   0016E6  EFAB  F008         	goto	l10421
 26244   0016EA  0AFF               	xorlw	255	; case 135
 26245   0016EC  B4D8               	btfsc	status,2,c
 26246   0016EE  EF6B  F007         	goto	l10375
 26247   0016F2  EFED  F005         	goto	l10263
 26248   0016F6                     l1313:
 26249   0016F6  0012               	return		;funcret
 26250   0016F8                     __end_of_mnsProcessMessage:
 26251                           	callstack 0
 26252                           
 26253 ;; *************** function _consumerProcessMessage *****************
 26254 ;; Defined at:
 26255 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 26256 ;; Parameters:    Size  Location     Type
 26257 ;;  m               2   83[COMRAM] PTR struct Message
 26258 ;;		 -> poll@m(9), 
 26259 ;; Auto vars:     Size  Location     Type
 26260 ;;  enn             2   88[COMRAM] unsigned short 
 26261 ;;  tableIndex      1   91[COMRAM] unsigned char 
 26262 ;;  ret             1   90[COMRAM] enum E23340
 26263 ;; Return value:  Size  Location     Type
 26264 ;;                  1    wreg      enum E23340
 26265 ;; Registers used:
 26266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26267 ;; Tracked objects:
 26268 ;;		On entry : 0/0
 26269 ;;		On exit  : 0/0
 26270 ;;		Unchanged: 0/0
 26271 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26273 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26274 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26275 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26276 ;;Total ram usage:        9 bytes
 26277 ;; Hardware stack levels used: 1
 26278 ;; Hardware stack levels required when called: 8
 26279 ;; This function calls:
 26280 ;;		_APP_processConsumedEvent
 26281 ;;		_consumerEventCheckLen
 26282 ;;		_findEvent
 26283 ;;		_isConsumedEvent
 26284 ;;		_sendMessage7
 26285 ;; This function is called by:
 26286 ;;		_poll
 26287 ;; This function uses a non-reentrant model
 26288 ;;
 26289                           
 26290                           	psect	text19
 26291   003CB8                     __ptext19:
 26292                           	callstack 0
 26293   003CB8                     _consumerProcessMessage:
 26294                           	callstack 117
 26295   003CB8                     
 26296                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 26297   003CB8  EE20 F001          	lfsr	2,1
 26298   003CBC  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26299   003CBE  26D9               	addwf	fsr2l,f,c
 26300   003CC0  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26301   003CC2  22DA               	addwfc	fsr2h,f,c
 26302   003CC4  0E76               	movlw	118
 26303   003CC6  18DE               	xorwf	postinc2,w,c
 26304   003CC8  A4D8               	btfss	status,2,c
 26305   003CCA  EF69  F01E         	goto	u6941
 26306   003CCE  EF6B  F01E         	goto	u6940
 26307   003CD2                     u6941:
 26308   003CD2  EFC4  F01E         	goto	l9819
 26309   003CD6                     u6940:
 26310   003CD6                     
 26311                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 26312   003CD6  C554  F531         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 26313   003CDA  C555  F532         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 26314   003CDE  0E04               	movlw	4
 26315   003CE0  6E33               	movwf	consumerEventCheckLen@needed^(0+1280),c
 26316   003CE2  EC85  F041         	call	_consumerEventCheckLen	;wreg free
 26317   003CE6  06E8               	decf	wreg,f,c
 26318   003CE8  A4D8               	btfss	status,2,c
 26319   003CEA  EF79  F01E         	goto	u6951
 26320   003CEE  EF7B  F01E         	goto	u6950
 26321   003CF2                     u6951:
 26322   003CF2  EF7E  F01E         	goto	l9793
 26323   003CF6                     u6950:
 26324   003CF6                     l9789:
 26325   003CF6  0E01               	movlw	1
 26326   003CF8  EFCE  F01F         	goto	l801
 26327   003CFC                     l9793:
 26328                           
 26329                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 26330   003CFC  EE20 F002          	lfsr	2,2
 26331   003D00  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26332   003D02  26D9               	addwf	fsr2l,f,c
 26333   003D04  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26334   003D06  22DA               	addwfc	fsr2h,f,c
 26335   003D08  50DE               	movf	postinc2,w,c
 26336   003D0A  0105               	movlb	5	; () banked
 26337   003D0C  1990               	xorwf	(_nn+1)& (0+255),w,b
 26338   003D0E  A4D8               	btfss	status,2,c
 26339   003D10  EF8C  F01E         	goto	u6961
 26340   003D14  EF8E  F01E         	goto	u6960
 26341   003D18                     u6961:
 26342   003D18  EFC1  F01E         	goto	l9815
 26343   003D1C                     u6960:
 26344   003D1C                     
 26345                           ; BSR set to: 5
 26346   003D1C  EE20 F003          	lfsr	2,3
 26347   003D20  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26348   003D22  26D9               	addwf	fsr2l,f,c
 26349   003D24  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26350   003D26  22DA               	addwfc	fsr2h,f,c
 26351   003D28  518F               	movf	_nn& (0+255),w,b
 26352   003D2A  18DE               	xorwf	postinc2,w,c
 26353   003D2C  A4D8               	btfss	status,2,c
 26354   003D2E  EF9B  F01E         	goto	u6971
 26355   003D32  EF9D  F01E         	goto	u6970
 26356   003D36                     u6971:
 26357   003D36  EFC1  F01E         	goto	l9815
 26358   003D3A                     u6970:
 26359   003D3A                     
 26360                           ; BSR set to: 5
 26361                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 26362   003D3A  EE20 F004          	lfsr	2,4
 26363   003D3E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26364   003D40  26D9               	addwf	fsr2l,f,c
 26365   003D42  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26366   003D44  22DA               	addwfc	fsr2h,f,c
 26367   003D46  0E0A               	movlw	10
 26368   003D48  18DE               	xorwf	postinc2,w,c
 26369   003D4A  A4D8               	btfss	status,2,c
 26370   003D4C  EFAA  F01E         	goto	u6981
 26371   003D50  EFAC  F01E         	goto	u6980
 26372   003D54                     u6981:
 26373   003D54  EFAF  F01E         	goto	l9807
 26374   003D58                     u6980:
 26375   003D58                     
 26376                           ; BSR set to: 5
 26377                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 26378   003D58  83A4               	bsf	_mode_flags& (0+255),1,b
 26379   003D5A  EF7B  F01E         	goto	l9789
 26380   003D5E                     l9807:
 26381                           
 26382                           ; BSR set to: 5
 26383   003D5E  EE20 F004          	lfsr	2,4
 26384   003D62  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26385   003D64  26D9               	addwf	fsr2l,f,c
 26386   003D66  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26387   003D68  22DA               	addwfc	fsr2h,f,c
 26388   003D6A  0E0B               	movlw	11
 26389   003D6C  18DE               	xorwf	postinc2,w,c
 26390   003D6E  A4D8               	btfss	status,2,c
 26391   003D70  EFBC  F01E         	goto	u6991
 26392   003D74  EFBE  F01E         	goto	u6990
 26393   003D78                     u6991:
 26394   003D78  EFC1  F01E         	goto	l9815
 26395   003D7C                     u6990:
 26396   003D7C                     
 26397                           ; BSR set to: 5
 26398                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 26399   003D7C  93A4               	bcf	_mode_flags& (0+255),1,b
 26400   003D7E  EF7B  F01E         	goto	l9789
 26401   003D82                     l9815:
 26402                           
 26403                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 26404   003D82  0E00               	movlw	0
 26405   003D84  EFCE  F01F         	goto	l801
 26406   003D88                     l9819:
 26407                           
 26408                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 26409   003D88  C554  F4D9         	movff	consumerProcessMessage@m,fsr2l
 26410   003D8C  C555  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 26411   003D90  0E05               	movlw	5
 26412   003D92  60DF               	cpfslt	indf2,c
 26413   003D94  EFCE  F01E         	goto	u7001
 26414   003D98  EFD0  F01E         	goto	u7000
 26415   003D9C                     u7001:
 26416   003D9C  EFD2  F01E         	goto	l9825
 26417   003DA0                     u7000:
 26418   003DA0  EFC1  F01E         	goto	l9815
 26419   003DA4                     l9825:
 26420                           
 26421                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 26422   003DA4  EE20 F003          	lfsr	2,3
 26423   003DA8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26424   003DAA  26D9               	addwf	fsr2l,f,c
 26425   003DAC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26426   003DAE  22DA               	addwfc	fsr2h,f,c
 26427   003DB0  50DF               	movf	indf2,w,c
 26428   003DB2  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26429   003DB4  EE20 F002          	lfsr	2,2
 26430   003DB8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26431   003DBA  26D9               	addwf	fsr2l,f,c
 26432   003DBC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26433   003DBE  22DA               	addwfc	fsr2h,f,c
 26434   003DC0  50DF               	movf	indf2,w,c
 26435   003DC2  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26436   003DC4  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26437   003DC6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26438   003DC8  C557  F55A         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 26439                           
 26440                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 26441   003DCC  EFF0  F01E         	goto	l9837
 26442   003DD0                     l810:
 26443   003DD0                     l9827:
 26444                           
 26445                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 26446   003DD0  0E00               	movlw	0
 26447   003DD2  6E5A               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 26448   003DD4  0E00               	movlw	0
 26449   003DD6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26450   003DD8  EF43  F01F         	goto	l9839
 26451   003DDC                     l815:
 26452                           
 26453                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 26454   003DDC  EF43  F01F         	goto	l9839
 26455   003DE0                     l9837:
 26456   003DE0  EE20 F001          	lfsr	2,1
 26457   003DE4  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26458   003DE6  26D9               	addwf	fsr2l,f,c
 26459   003DE8  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26460   003DEA  22DA               	addwfc	fsr2h,f,c
 26461   003DEC  50DF               	movf	indf2,w,c
 26462   003DEE  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26463   003DF0  6A57               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 26464                           
 26465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26466                           ; Switch size 1, requested type "simple"
 26467                           ; Number of cases is 1, Range of values is 0 to 0
 26468                           ; switch strategies available:
 26469                           ; Name         Instructions Cycles
 26470                           ; simple_byte            4     3 (average)
 26471                           ;	Chosen strategy is simple_byte
 26472   003DF2  5057               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 26473   003DF4  0A00               	xorlw	0	; case 0
 26474   003DF6  B4D8               	btfsc	status,2,c
 26475   003DF8  EF00  F01F         	goto	l11785
 26476   003DFC  EFC1  F01E         	goto	l9815
 26477   003E00                     l11785:
 26478                           
 26479                           ; Switch size 1, requested type "simple"
 26480                           ; Number of cases is 16, Range of values is 144 to 249
 26481                           ; switch strategies available:
 26482                           ; Name         Instructions Cycles
 26483                           ; simple_byte           49    25 (average)
 26484                           ;	Chosen strategy is simple_byte
 26485   003E00  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26486   003E02  0A90               	xorlw	144	; case 144
 26487   003E04  B4D8               	btfsc	status,2,c
 26488   003E06  EFEE  F01E         	goto	l815
 26489   003E0A  0A01               	xorlw	1	; case 145
 26490   003E0C  B4D8               	btfsc	status,2,c
 26491   003E0E  EFEE  F01E         	goto	l815
 26492   003E12  0A09               	xorlw	9	; case 152
 26493   003E14  B4D8               	btfsc	status,2,c
 26494   003E16  EFE8  F01E         	goto	l810
 26495   003E1A  0A01               	xorlw	1	; case 153
 26496   003E1C  B4D8               	btfsc	status,2,c
 26497   003E1E  EFE8  F01E         	goto	l810
 26498   003E22  0A29               	xorlw	41	; case 176
 26499   003E24  B4D8               	btfsc	status,2,c
 26500   003E26  EF43  F01F         	goto	l9839
 26501   003E2A  0A01               	xorlw	1	; case 177
 26502   003E2C  B4D8               	btfsc	status,2,c
 26503   003E2E  EF43  F01F         	goto	l9839
 26504   003E32  0A09               	xorlw	9	; case 184
 26505   003E34  B4D8               	btfsc	status,2,c
 26506   003E36  EFE8  F01E         	goto	l9827
 26507   003E3A  0A01               	xorlw	1	; case 185
 26508   003E3C  B4D8               	btfsc	status,2,c
 26509   003E3E  EFE8  F01E         	goto	l9827
 26510   003E42  0A69               	xorlw	105	; case 208
 26511   003E44  B4D8               	btfsc	status,2,c
 26512   003E46  EF43  F01F         	goto	l9839
 26513   003E4A  0A01               	xorlw	1	; case 209
 26514   003E4C  B4D8               	btfsc	status,2,c
 26515   003E4E  EF43  F01F         	goto	l9839
 26516   003E52  0A09               	xorlw	9	; case 216
 26517   003E54  B4D8               	btfsc	status,2,c
 26518   003E56  EFE8  F01E         	goto	l9827
 26519   003E5A  0A01               	xorlw	1	; case 217
 26520   003E5C  B4D8               	btfsc	status,2,c
 26521   003E5E  EFE8  F01E         	goto	l9827
 26522   003E62  0A29               	xorlw	41	; case 240
 26523   003E64  B4D8               	btfsc	status,2,c
 26524   003E66  EF43  F01F         	goto	l9839
 26525   003E6A  0A01               	xorlw	1	; case 241
 26526   003E6C  B4D8               	btfsc	status,2,c
 26527   003E6E  EF43  F01F         	goto	l9839
 26528   003E72  0A09               	xorlw	9	; case 248
 26529   003E74  B4D8               	btfsc	status,2,c
 26530   003E76  EFE8  F01E         	goto	l9827
 26531   003E7A  0A01               	xorlw	1	; case 249
 26532   003E7C  B4D8               	btfsc	status,2,c
 26533   003E7E  EFE8  F01E         	goto	l9827
 26534   003E82  EFC1  F01E         	goto	l9815
 26535   003E86                     l9839:
 26536                           
 26537                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 26538   003E86  C559  F522         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 26539   003E8A  C55A  F523         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 26540   003E8E  EE20 F005          	lfsr	2,5
 26541   003E92  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26542   003E94  26D9               	addwf	fsr2l,f,c
 26543   003E96  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26544   003E98  22DA               	addwfc	fsr2h,f,c
 26545   003E9A  50DF               	movf	indf2,w,c
 26546   003E9C  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26547   003E9E  EE20 F004          	lfsr	2,4
 26548   003EA2  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26549   003EA4  26D9               	addwf	fsr2l,f,c
 26550   003EA6  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26551   003EA8  22DA               	addwfc	fsr2h,f,c
 26552   003EAA  50DF               	movf	indf2,w,c
 26553   003EAC  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26554   003EAE  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26555   003EB0  6E24               	movwf	findEvent@eventNumber^(0+1280),c
 26556   003EB2  C557  F525         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 26557   003EB6  EC0F  F032         	call	_findEvent	;wreg free
 26558   003EBA  6E5C               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 26559   003EBC                     
 26560                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 26561   003EBC  285C               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26562   003EBE  A4D8               	btfss	status,2,c
 26563   003EC0  EF64  F01F         	goto	u7011
 26564   003EC4  EF66  F01F         	goto	u7010
 26565   003EC8                     u7011:
 26566   003EC8  EF68  F01F         	goto	l9847
 26567   003ECC                     u7010:
 26568   003ECC  EFC1  F01E         	goto	l9815
 26569   003ED0                     l9847:
 26570                           
 26571                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 26572   003ED0  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26573   003ED2  ECA9  F041         	call	_isConsumedEvent
 26574   003ED6  0900               	iorlw	0
 26575   003ED8  A4D8               	btfss	status,2,c
 26576   003EDA  EF71  F01F         	goto	u7021
 26577   003EDE  EF73  F01F         	goto	u7020
 26578   003EE2                     u7021:
 26579   003EE2  EF75  F01F         	goto	l827
 26580   003EE6                     u7020:
 26581   003EE6  EFC1  F01E         	goto	l9815
 26582   003EEA                     l827:
 26583                           
 26584                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 26585   003EEA  0105               	movlb	5	; () banked
 26586   003EEC  A3A4               	btfss	_mode_flags& (0+255),1,b
 26587   003EEE  EF7B  F01F         	goto	u7031
 26588   003EF2  EF7D  F01F         	goto	u7030
 26589   003EF6                     u7031:
 26590   003EF6  EFBA  F01F         	goto	l9859
 26591   003EFA                     u7030:
 26592   003EFA                     
 26593                           ; BSR set to: 5
 26594   003EFA  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26595   003EFC  ECA9  F041         	call	_isConsumedEvent
 26596   003F00  0900               	iorlw	0
 26597   003F02  B4D8               	btfsc	status,2,c
 26598   003F04  EF86  F01F         	goto	u7041
 26599   003F08  EF88  F01F         	goto	u7040
 26600   003F0C                     u7041:
 26601   003F0C  EFBA  F01F         	goto	l9859
 26602   003F10                     u7040:
 26603   003F10                     
 26604                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 26605   003F10  C590  F526         	movff	_nn+1,sendMessage7@data1
 26606   003F14  C58F  F527         	movff	_nn,sendMessage7@data2
 26607   003F18  EE20 F001          	lfsr	2,1
 26608   003F1C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26609   003F1E  26D9               	addwf	fsr2l,f,c
 26610   003F20  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26611   003F22  22DA               	addwfc	fsr2h,f,c
 26612   003F24  50DF               	movf	indf2,w,c
 26613   003F26  6E28               	movwf	sendMessage7@data3^(0+1280),c
 26614   003F28  EE20 F002          	lfsr	2,2
 26615   003F2C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26616   003F2E  26D9               	addwf	fsr2l,f,c
 26617   003F30  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26618   003F32  22DA               	addwfc	fsr2h,f,c
 26619   003F34  50DF               	movf	indf2,w,c
 26620   003F36  6E29               	movwf	sendMessage7@data4^(0+1280),c
 26621   003F38  EE20 F003          	lfsr	2,3
 26622   003F3C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26623   003F3E  26D9               	addwf	fsr2l,f,c
 26624   003F40  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26625   003F42  22DA               	addwfc	fsr2h,f,c
 26626   003F44  50DF               	movf	indf2,w,c
 26627   003F46  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 26628   003F48  EE20 F004          	lfsr	2,4
 26629   003F4C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26630   003F4E  26D9               	addwf	fsr2l,f,c
 26631   003F50  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26632   003F52  22DA               	addwfc	fsr2h,f,c
 26633   003F54  50DF               	movf	indf2,w,c
 26634   003F56  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 26635   003F58  EE20 F005          	lfsr	2,5
 26636   003F5C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26637   003F5E  26D9               	addwf	fsr2l,f,c
 26638   003F60  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26639   003F62  22DA               	addwfc	fsr2h,f,c
 26640   003F64  50DF               	movf	indf2,w,c
 26641   003F66  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 26642   003F68  0EE6               	movlw	230
 26643   003F6A  EC9F  F040         	call	_sendMessage7
 26644   003F6E                     
 26645                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 26646   003F6E  0105               	movlb	5	; () banked
 26647   003F70  4BC5               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 26648   003F72  2BC6               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 26649   003F74                     l9859:
 26650                           
 26651                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 26652   003F74  C554  F51C         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 26653   003F78  C555  F51D         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 26654   003F7C  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26655   003F7E  EC2B  F02D         	call	_APP_processConsumedEvent
 26656   003F82  6E5B               	movwf	consumerProcessMessage@ret^(0+1280),c
 26657   003F84                     
 26658                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 26659   003F84  045B               	decf	consumerProcessMessage@ret^(0+1280),w,c
 26660   003F86  A4D8               	btfss	status,2,c
 26661   003F88  EFC8  F01F         	goto	u7051
 26662   003F8C  EFCA  F01F         	goto	u7050
 26663   003F90                     u7051:
 26664   003F90  EFCD  F01F         	goto	l9865
 26665   003F94                     u7050:
 26666   003F94                     
 26667                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 26668   003F94  0105               	movlb	5	; () banked
 26669   003F96  4BC3               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 26670   003F98  2BC4               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 26671   003F9A                     l9865:
 26672                           
 26673                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 26674   003F9A  505B               	movf	consumerProcessMessage@ret^(0+1280),w,c
 26675   003F9C                     l801:
 26676   003F9C  0012               	return		;funcret
 26677   003F9E                     __end_of_consumerProcessMessage:
 26678                           	callstack 0
 26679                           
 26680 ;; *************** function _canProcessMessage *****************
 26681 ;; Defined at:
 26682 ;;		line 411 in file "../../VLCBlib_PIC/can18_can_2.c"
 26683 ;; Parameters:    Size  Location     Type
 26684 ;;  m               2   83[COMRAM] PTR struct Message
 26685 ;;		 -> poll@m(9), 
 26686 ;; Auto vars:     Size  Location     Type
 26687 ;;		None
 26688 ;; Return value:  Size  Location     Type
 26689 ;;                  1    wreg      enum E23507
 26690 ;; Registers used:
 26691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26692 ;; Tracked objects:
 26693 ;;		On entry : 0/0
 26694 ;;		On exit  : 0/0
 26695 ;;		Unchanged: 0/0
 26696 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26701 ;;Total ram usage:        4 bytes
 26702 ;; Hardware stack levels used: 1
 26703 ;; Hardware stack levels required when called: 6
 26704 ;; This function calls:
 26705 ;;		_sendMessage5
 26706 ;; This function is called by:
 26707 ;;		_poll
 26708 ;; This function uses a non-reentrant model
 26709 ;;
 26710                           
 26711                           	psect	text20
 26712   005D1E                     __ptext20:
 26713                           	callstack 0
 26714   005D1E                     _canProcessMessage:
 26715                           	callstack 119
 26716   005D1E                     
 26717                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->len < 3) return NOT_PROCESSED;
 26718   005D1E  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26719   005D22  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26720   005D26  0E03               	movlw	3
 26721   005D28  60DF               	cpfslt	indf2,c
 26722   005D2A  EF99  F02E         	goto	u6841
 26723   005D2E  EF9B  F02E         	goto	u6840
 26724   005D32                     u6841:
 26725   005D32  EF9E  F02E         	goto	l9667
 26726   005D36                     u6840:
 26727   005D36                     l9663:
 26728   005D36  0E00               	movlw	0
 26729   005D38  EFFA  F02E         	goto	l624
 26730   005D3C                     l9667:
 26731                           
 26732                           ;../../VLCBlib_PIC/can18_can_2.c: 414:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 26733   005D3C  EE20 F002          	lfsr	2,2
 26734   005D40  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26735   005D42  26D9               	addwf	fsr2l,f,c
 26736   005D44  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26737   005D46  22DA               	addwfc	fsr2h,f,c
 26738   005D48  50DE               	movf	postinc2,w,c
 26739   005D4A  0105               	movlb	5	; () banked
 26740   005D4C  1990               	xorwf	(_nn+1)& (0+255),w,b
 26741   005D4E  B4D8               	btfsc	status,2,c
 26742   005D50  EFAC  F02E         	goto	u6851
 26743   005D54  EFAE  F02E         	goto	u6850
 26744   005D58                     u6851:
 26745   005D58  EFB0  F02E         	goto	l9673
 26746   005D5C                     u6850:
 26747   005D5C  EF9B  F02E         	goto	l9663
 26748   005D60                     l9673:
 26749                           
 26750                           ; BSR set to: 5
 26751                           ;../../VLCBlib_PIC/can18_can_2.c: 415:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 26752   005D60  EE20 F003          	lfsr	2,3
 26753   005D64  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26754   005D66  26D9               	addwf	fsr2l,f,c
 26755   005D68  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26756   005D6A  22DA               	addwfc	fsr2h,f,c
 26757   005D6C  518F               	movf	_nn& (0+255),w,b
 26758   005D6E  18DE               	xorwf	postinc2,w,c
 26759   005D70  B4D8               	btfsc	status,2,c
 26760   005D72  EFBD  F02E         	goto	u6861
 26761   005D76  EFBF  F02E         	goto	u6860
 26762   005D7A                     u6861:
 26763   005D7A  EFDF  F02E         	goto	l9697
 26764   005D7E                     u6860:
 26765   005D7E  EF9B  F02E         	goto	l9663
 26766   005D82                     l9679:
 26767                           
 26768                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             return PROCESSED;
 26769   005D82  0E01               	movlw	1
 26770   005D84  EFFA  F02E         	goto	l624
 26771   005D88                     l9683:
 26772                           
 26773                           ; BSR set to: 5
 26774                           ;../../VLCBlib_PIC/can18_can_2.c: 423:             if (m->len < 4) {
 26775   005D88  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26776   005D8C  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26777   005D90  0E04               	movlw	4
 26778   005D92  60DF               	cpfslt	indf2,c
 26779   005D94  EFCE  F02E         	goto	u6871
 26780   005D98  EFD0  F02E         	goto	u6870
 26781   005D9C                     u6871:
 26782   005D9C  EFC1  F02E         	goto	l9679
 26783   005DA0                     u6870:
 26784   005DA0                     
 26785                           ; BSR set to: 5
 26786                           ;../../VLCBlib_PIC/can18_can_2.c: 425:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 26787   005DA0  C590  F526         	movff	_nn+1,sendMessage5@data1
 26788   005DA4  C58F  F527         	movff	_nn,sendMessage5@data2
 26789   005DA8  0E75               	movlw	117
 26790   005DAA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26791   005DAC  0E01               	movlw	1
 26792   005DAE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26793   005DB0  0E01               	movlw	1
 26794   005DB2  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26795   005DB4  0EAF               	movlw	175
 26796   005DB6  ECB4  F040         	call	_sendMessage5
 26797   005DBA  EFC1  F02E         	goto	l9679
 26798   005DBE                     l9697:
 26799                           
 26800                           ; BSR set to: 5
 26801   005DBE  EE20 F001          	lfsr	2,1
 26802   005DC2  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26803   005DC4  26D9               	addwf	fsr2l,f,c
 26804   005DC6  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26805   005DC8  22DA               	addwfc	fsr2h,f,c
 26806   005DCA  50DF               	movf	indf2,w,c
 26807   005DCC  6E56               	movwf	??_canProcessMessage^(0+1280),c
 26808   005DCE  6A57               	clrf	(??_canProcessMessage+1)^(0+1280),c
 26809                           
 26810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26811                           ; Switch size 1, requested type "simple"
 26812                           ; Number of cases is 1, Range of values is 0 to 0
 26813                           ; switch strategies available:
 26814                           ; Name         Instructions Cycles
 26815                           ; simple_byte            4     3 (average)
 26816                           ;	Chosen strategy is simple_byte
 26817   005DD0  5057               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 26818   005DD2  0A00               	xorlw	0	; case 0
 26819   005DD4  B4D8               	btfsc	status,2,c
 26820   005DD6  EFEF  F02E         	goto	l11787
 26821   005DDA  EF9B  F02E         	goto	l9663
 26822   005DDE                     l11787:
 26823                           
 26824                           ; BSR set to: 5
 26825                           ; Switch size 1, requested type "simple"
 26826                           ; Number of cases is 2, Range of values is 93 to 117
 26827                           ; switch strategies available:
 26828                           ; Name         Instructions Cycles
 26829                           ; simple_byte            7     4 (average)
 26830                           ;	Chosen strategy is simple_byte
 26831   005DDE  5056               	movf	??_canProcessMessage^(0+1280),w,c
 26832   005DE0  0A5D               	xorlw	93	; case 93
 26833   005DE2  B4D8               	btfsc	status,2,c
 26834   005DE4  EFC1  F02E         	goto	l9679
 26835   005DE8  0A28               	xorlw	40	; case 117
 26836   005DEA  B4D8               	btfsc	status,2,c
 26837   005DEC  EFC4  F02E         	goto	l9683
 26838   005DF0  EF9B  F02E         	goto	l9663
 26839   005DF4                     l624:
 26840   005DF4  0012               	return		;funcret
 26841   005DF6                     __end_of_canProcessMessage:
 26842                           	callstack 0
 26843                           
 26844 ;; *************** function _bootProcessMessage *****************
 26845 ;; Defined at:
 26846 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 26847 ;; Parameters:    Size  Location     Type
 26848 ;;  m               2   83[COMRAM] PTR struct Message
 26849 ;;		 -> poll@m(9), 
 26850 ;; Auto vars:     Size  Location     Type
 26851 ;;		None
 26852 ;; Return value:  Size  Location     Type
 26853 ;;                  1    wreg      enum E23340
 26854 ;; Registers used:
 26855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26856 ;; Tracked objects:
 26857 ;;		On entry : 0/0
 26858 ;;		On exit  : 0/0
 26859 ;;		Unchanged: 0/0
 26860 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26863 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26865 ;;Total ram usage:        4 bytes
 26866 ;; Hardware stack levels used: 1
 26867 ;; Hardware stack levels required when called: 6
 26868 ;; This function calls:
 26869 ;;		_writeNVM
 26870 ;; This function is called by:
 26871 ;;		_poll
 26872 ;; This function uses a non-reentrant model
 26873 ;;
 26874                           
 26875                           	psect	text21
 26876   006BD4                     __ptext21:
 26877                           	callstack 0
 26878   006BD4                     _bootProcessMessage:
 26879                           	callstack 119
 26880   006BD4                     
 26881                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 26882   006BD4  EE20 F002          	lfsr	2,2
 26883   006BD8  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26884   006BDA  26D9               	addwf	fsr2l,f,c
 26885   006BDC  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26886   006BDE  22DA               	addwfc	fsr2h,f,c
 26887   006BE0  50DE               	movf	postinc2,w,c
 26888   006BE2  0105               	movlb	5	; () banked
 26889   006BE4  1990               	xorwf	(_nn+1)& (0+255),w,b
 26890   006BE6  B4D8               	btfsc	status,2,c
 26891   006BE8  EFF8  F035         	goto	u6791
 26892   006BEC  EFFA  F035         	goto	u6790
 26893   006BF0                     u6791:
 26894   006BF0  EFFD  F035         	goto	l9495
 26895   006BF4                     u6790:
 26896   006BF4                     l9491:
 26897                           
 26898                           ; BSR set to: 5
 26899   006BF4  0E00               	movlw	0
 26900   006BF6  EF34  F036         	goto	l345
 26901   006BFA                     l9495:
 26902                           
 26903                           ; BSR set to: 5
 26904                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 26905   006BFA  EE20 F003          	lfsr	2,3
 26906   006BFE  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26907   006C00  26D9               	addwf	fsr2l,f,c
 26908   006C02  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26909   006C04  22DA               	addwfc	fsr2h,f,c
 26910   006C06  518F               	movf	_nn& (0+255),w,b
 26911   006C08  18DE               	xorwf	postinc2,w,c
 26912   006C0A  B4D8               	btfsc	status,2,c
 26913   006C0C  EF0A  F036         	goto	u6801
 26914   006C10  EF0C  F036         	goto	u6800
 26915   006C14                     u6801:
 26916   006C14  EF1D  F036         	goto	l9513
 26917   006C18                     u6800:
 26918   006C18  EFFA  F035         	goto	l9491
 26919   006C1C                     l9501:
 26920                           
 26921                           ; BSR set to: 5
 26922                           ;../../VLCBlib_PIC/boot.c: 239:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 26923   006C1C  0EFF               	movlw	255
 26924   006C1E  6E0E               	movwf	writeNVM@index^(0+1280),c
 26925   006C20  0E03               	movlw	3
 26926   006C22  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26927   006C24  0E00               	movlw	0
 26928   006C26  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26929   006C28  0EFF               	movlw	255
 26930   006C2A  6E11               	movwf	writeNVM@value^(0+1280),c
 26931   006C2C  0E00               	movlw	0
 26932   006C2E  EC64  F03C         	call	_writeNVM
 26933   006C32  00FF               	reset		;# 
 26934   006C34                     
 26935                           ;../../VLCBlib_PIC/boot.c: 241:             return PROCESSED;
 26936   006C34  0E01               	movlw	1
 26937   006C36  EF34  F036         	goto	l345
 26938   006C3A                     l9513:
 26939                           
 26940                           ; BSR set to: 5
 26941   006C3A  EE20 F001          	lfsr	2,1
 26942   006C3E  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26943   006C40  26D9               	addwf	fsr2l,f,c
 26944   006C42  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26945   006C44  22DA               	addwfc	fsr2h,f,c
 26946   006C46  50DF               	movf	indf2,w,c
 26947   006C48  6E56               	movwf	??_bootProcessMessage^(0+1280),c
 26948   006C4A  6A57               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 26949                           
 26950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26951                           ; Switch size 1, requested type "simple"
 26952                           ; Number of cases is 1, Range of values is 0 to 0
 26953                           ; switch strategies available:
 26954                           ; Name         Instructions Cycles
 26955                           ; simple_byte            4     3 (average)
 26956                           ;	Chosen strategy is simple_byte
 26957   006C4C  5057               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 26958   006C4E  0A00               	xorlw	0	; case 0
 26959   006C50  B4D8               	btfsc	status,2,c
 26960   006C52  EF2D  F036         	goto	l11789
 26961   006C56  EFFA  F035         	goto	l9491
 26962   006C5A                     l11789:
 26963                           
 26964                           ; BSR set to: 5
 26965                           ; Switch size 1, requested type "simple"
 26966                           ; Number of cases is 1, Range of values is 92 to 92
 26967                           ; switch strategies available:
 26968                           ; Name         Instructions Cycles
 26969                           ; simple_byte            4     3 (average)
 26970                           ;	Chosen strategy is simple_byte
 26971   006C5A  5056               	movf	??_bootProcessMessage^(0+1280),w,c
 26972   006C5C  0A5C               	xorlw	92	; case 92
 26973   006C5E  B4D8               	btfsc	status,2,c
 26974   006C60  EF0E  F036         	goto	l9501
 26975   006C64  EFFA  F035         	goto	l9491
 26976   006C68                     l345:
 26977   006C68  0012               	return		;funcret
 26978   006C6A                     __end_of_bootProcessMessage:
 26979                           	callstack 0
 26980                           
 26981 ;; *************** function _teachProcessMessage *****************
 26982 ;; Defined at:
 26983 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 26984 ;; Parameters:    Size  Location     Type
 26985 ;;  m               2   83[COMRAM] PTR struct Message
 26986 ;;		 -> poll@m(9), 
 26987 ;; Auto vars:     Size  Location     Type
 26988 ;;		None
 26989 ;; Return value:  Size  Location     Type
 26990 ;;                  1    wreg      enum E23340
 26991 ;; Registers used:
 26992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26993 ;; Tracked objects:
 26994 ;;		On entry : 0/0
 26995 ;;		On exit  : 0/0
 26996 ;;		Unchanged: 0/0
 26997 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27000 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27001 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27002 ;;Total ram usage:        8 bytes
 27003 ;; Hardware stack levels used: 1
 27004 ;; Hardware stack levels required when called: 10
 27005 ;; This function calls:
 27006 ;;		_doEvlrn
 27007 ;;		_doEvuln
 27008 ;;		_doNenrd
 27009 ;;		_doNerd
 27010 ;;		_doNnclr
 27011 ;;		_doNnevn
 27012 ;;		_doReqev
 27013 ;;		_doReval
 27014 ;;		_doRqevn
 27015 ;;		_sendMessage3
 27016 ;;		_sendMessage5
 27017 ;;		_teachCheckLen
 27018 ;; This function is called by:
 27019 ;;		_poll
 27020 ;; This function uses a non-reentrant model
 27021 ;;
 27022                           
 27023                           	psect	text22
 27024   0016F8                     __ptext22:
 27025                           	callstack 0
 27026   0016F8                     _teachProcessMessage:
 27027                           	callstack 115
 27028   0016F8                     
 27029                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 27030   0016F8  EF20  F00F         	goto	l10153
 27031   0016FC                     l9895:
 27032                           
 27033                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27034   0016FC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27035   001700  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27036   001704  0E03               	movlw	3
 27037   001706  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27038   001708  0E00               	movlw	0
 27039   00170A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27040   00170C  EC61  F038         	call	_teachCheckLen	;wreg free
 27041   001710  06E8               	decf	wreg,f,c
 27042   001712  A4D8               	btfss	status,2,c
 27043   001714  EF8E  F00B         	goto	u7071
 27044   001718  EF90  F00B         	goto	u7070
 27045   00171C                     u7071:
 27046   00171C  EF93  F00B         	goto	l9901
 27047   001720                     u7070:
 27048   001720                     l9897:
 27049   001720  0E01               	movlw	1
 27050   001722  EF67  F00F         	goto	l958
 27051   001726                     l9901:
 27052                           
 27053                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 27054   001726  EE20 F002          	lfsr	2,2
 27055   00172A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27056   00172C  26D9               	addwf	fsr2l,f,c
 27057   00172E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27058   001730  22DA               	addwfc	fsr2h,f,c
 27059   001732  50DE               	movf	postinc2,w,c
 27060   001734  0105               	movlb	5	; () banked
 27061   001736  1990               	xorwf	(_nn+1)& (0+255),w,b
 27062   001738  A4D8               	btfss	status,2,c
 27063   00173A  EFA1  F00B         	goto	u7081
 27064   00173E  EFA3  F00B         	goto	u7080
 27065   001742                     u7081:
 27066   001742  EFB5  F00B         	goto	l9907
 27067   001746                     u7080:
 27068   001746                     
 27069                           ; BSR set to: 5
 27070   001746  EE20 F003          	lfsr	2,3
 27071   00174A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27072   00174C  26D9               	addwf	fsr2l,f,c
 27073   00174E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27074   001750  22DA               	addwfc	fsr2h,f,c
 27075   001752  518F               	movf	_nn& (0+255),w,b
 27076   001754  18DE               	xorwf	postinc2,w,c
 27077   001756  A4D8               	btfss	status,2,c
 27078   001758  EFB0  F00B         	goto	u7091
 27079   00175C  EFB2  F00B         	goto	u7090
 27080   001760                     u7091:
 27081   001760  EFB5  F00B         	goto	l9907
 27082   001764                     u7090:
 27083   001764                     l9905:
 27084                           
 27085                           ; BSR set to: 5
 27086                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 27087   001764  81A4               	bsf	_mode_flags& (0+255),0,b
 27088                           
 27089                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 27090   001766  EF90  F00B         	goto	l9897
 27091   00176A                     l9907:
 27092                           
 27093                           ; BSR set to: 5
 27094                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 27095   00176A  91A4               	bcf	_mode_flags& (0+255),0,b
 27096   00176C  EF90  F00B         	goto	l9897
 27097   001770                     l9913:
 27098                           
 27099                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27100   001770  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27101   001774  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27102   001778  0E04               	movlw	4
 27103   00177A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27104   00177C  0E00               	movlw	0
 27105   00177E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27106   001780  EC61  F038         	call	_teachCheckLen	;wreg free
 27107   001784  06E8               	decf	wreg,f,c
 27108   001786  A4D8               	btfss	status,2,c
 27109   001788  EFC8  F00B         	goto	u7101
 27110   00178C  EFCA  F00B         	goto	u7100
 27111   001790                     u7101:
 27112   001790  EFCC  F00B         	goto	l9919
 27113   001794                     u7100:
 27114   001794  EF90  F00B         	goto	l9897
 27115   001798                     l9919:
 27116                           
 27117                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 27118   001798  EE20 F002          	lfsr	2,2
 27119   00179C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27120   00179E  26D9               	addwf	fsr2l,f,c
 27121   0017A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27122   0017A2  22DA               	addwfc	fsr2h,f,c
 27123   0017A4  50DE               	movf	postinc2,w,c
 27124   0017A6  0105               	movlb	5	; () banked
 27125   0017A8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27126   0017AA  A4D8               	btfss	status,2,c
 27127   0017AC  EFDA  F00B         	goto	u7111
 27128   0017B0  EFDC  F00B         	goto	u7110
 27129   0017B4                     u7111:
 27130   0017B4  EF0D  F00C         	goto	l9941
 27131   0017B8                     u7110:
 27132   0017B8                     
 27133                           ; BSR set to: 5
 27134   0017B8  EE20 F003          	lfsr	2,3
 27135   0017BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27136   0017BE  26D9               	addwf	fsr2l,f,c
 27137   0017C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27138   0017C2  22DA               	addwfc	fsr2h,f,c
 27139   0017C4  518F               	movf	_nn& (0+255),w,b
 27140   0017C6  18DE               	xorwf	postinc2,w,c
 27141   0017C8  A4D8               	btfss	status,2,c
 27142   0017CA  EFE9  F00B         	goto	u7121
 27143   0017CE  EFEB  F00B         	goto	u7120
 27144   0017D2                     u7121:
 27145   0017D2  EF0D  F00C         	goto	l9941
 27146   0017D6                     u7120:
 27147   0017D6                     
 27148                           ; BSR set to: 5
 27149                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 27150   0017D6  EE20 F004          	lfsr	2,4
 27151   0017DA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27152   0017DC  26D9               	addwf	fsr2l,f,c
 27153   0017DE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27154   0017E0  22DA               	addwfc	fsr2h,f,c
 27155   0017E2  0E08               	movlw	8
 27156   0017E4  18DE               	xorwf	postinc2,w,c
 27157   0017E6  A4D8               	btfss	status,2,c
 27158   0017E8  EFF8  F00B         	goto	u7131
 27159   0017EC  EFFA  F00B         	goto	u7130
 27160   0017F0                     u7131:
 27161   0017F0  EFFC  F00B         	goto	l9933
 27162   0017F4                     u7130:
 27163   0017F4  EFB2  F00B         	goto	l9905
 27164   0017F8                     l9933:
 27165                           
 27166                           ; BSR set to: 5
 27167   0017F8  EE20 F004          	lfsr	2,4
 27168   0017FC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27169   0017FE  26D9               	addwf	fsr2l,f,c
 27170   001800  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27171   001802  22DA               	addwfc	fsr2h,f,c
 27172   001804  0E09               	movlw	9
 27173   001806  18DE               	xorwf	postinc2,w,c
 27174   001808  A4D8               	btfss	status,2,c
 27175   00180A  EF09  F00C         	goto	u7141
 27176   00180E  EF0B  F00C         	goto	u7140
 27177   001812                     u7141:
 27178   001812  EF0E  F00C         	goto	l9943
 27179   001816                     u7140:
 27180   001816  EFB5  F00B         	goto	l9907
 27181   00181A                     l9941:
 27182                           
 27183                           ; BSR set to: 5
 27184                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 27185   00181A  91A4               	bcf	_mode_flags& (0+255),0,b
 27186   00181C                     l9943:
 27187                           
 27188                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 27189   00181C  0E00               	movlw	0
 27190   00181E  EF67  F00F         	goto	l958
 27191   001822                     l9947:
 27192                           
 27193                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 27194   001822  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27195   001826  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27196   00182A  0E07               	movlw	7
 27197   00182C  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27198   00182E  0E01               	movlw	1
 27199   001830  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27200   001832  EC61  F038         	call	_teachCheckLen	;wreg free
 27201   001836  06E8               	decf	wreg,f,c
 27202   001838  A4D8               	btfss	status,2,c
 27203   00183A  EF21  F00C         	goto	u7151
 27204   00183E  EF23  F00C         	goto	u7150
 27205   001842                     u7151:
 27206   001842  EF2E  F00C         	goto	l969
 27207   001846                     u7150:
 27208   001846                     
 27209                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 27210   001846  C590  F526         	movff	_nn+1,sendMessage3@data1
 27211   00184A  C58F  F527         	movff	_nn,sendMessage3@data2
 27212   00184E  0E01               	movlw	1
 27213   001850  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27214   001852  0E6F               	movlw	111
 27215   001854  EC75  F040         	call	_sendMessage3
 27216   001858  EF90  F00B         	goto	l9897
 27217   00185C                     l969:
 27218                           
 27219                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27220   00185C  0105               	movlb	5	; () banked
 27221   00185E  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27222   001860  EF34  F00C         	goto	u7161
 27223   001864  EF36  F00C         	goto	u7160
 27224   001868                     u7161:
 27225   001868  EF38  F00C         	goto	l9959
 27226   00186C                     u7160:
 27227   00186C  EF90  F00B         	goto	l9897
 27228   001870                     l9959:
 27229                           
 27230                           ; BSR set to: 5
 27231                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 27232   001870  EE20 F003          	lfsr	2,3
 27233   001874  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27234   001876  26D9               	addwf	fsr2l,f,c
 27235   001878  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27236   00187A  22DA               	addwfc	fsr2h,f,c
 27237   00187C  50DF               	movf	indf2,w,c
 27238   00187E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27239   001880  EE20 F002          	lfsr	2,2
 27240   001884  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27241   001886  26D9               	addwf	fsr2l,f,c
 27242   001888  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27243   00188A  22DA               	addwfc	fsr2h,f,c
 27244   00188C  50DF               	movf	indf2,w,c
 27245   00188E  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27246   001890  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27247   001892  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27248   001894  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27249   001898  EE20 F005          	lfsr	2,5
 27250   00189C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27251   00189E  26D9               	addwf	fsr2l,f,c
 27252   0018A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27253   0018A2  22DA               	addwfc	fsr2h,f,c
 27254   0018A4  50DF               	movf	indf2,w,c
 27255   0018A6  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27256   0018A8  EE20 F004          	lfsr	2,4
 27257   0018AC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27258   0018AE  26D9               	addwf	fsr2l,f,c
 27259   0018B0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27260   0018B2  22DA               	addwfc	fsr2h,f,c
 27261   0018B4  50DF               	movf	indf2,w,c
 27262   0018B6  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27263   0018B8  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27264   0018BA  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27265   0018BC  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27266   0018C0  EE20 F006          	lfsr	2,6
 27267   0018C4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27268   0018C6  26D9               	addwf	fsr2l,f,c
 27269   0018C8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27270   0018CA  22DA               	addwfc	fsr2h,f,c
 27271   0018CC  50DF               	movf	indf2,w,c
 27272   0018CE  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27273   0018D0  EE20 F007          	lfsr	2,7
 27274   0018D4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27275   0018D6  26D9               	addwf	fsr2l,f,c
 27276   0018D8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27277   0018DA  22DA               	addwfc	fsr2h,f,c
 27278   0018DC  50DF               	movf	indf2,w,c
 27279   0018DE  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27280   0018E0  EC66  F02F         	call	_doEvlrn	;wreg free
 27281   0018E4  EF90  F00B         	goto	l9897
 27282   0018E8                     l9965:
 27283                           
 27284                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 27285   0018E8  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27286   0018EC  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27287   0018F0  0E05               	movlw	5
 27288   0018F2  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27289   0018F4  0E01               	movlw	1
 27290   0018F6  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27291   0018F8  EC61  F038         	call	_teachCheckLen	;wreg free
 27292   0018FC  06E8               	decf	wreg,f,c
 27293   0018FE  A4D8               	btfss	status,2,c
 27294   001900  EF84  F00C         	goto	u7171
 27295   001904  EF86  F00C         	goto	u7170
 27296   001908                     u7171:
 27297   001908  EF88  F00C         	goto	l972
 27298   00190C                     u7170:
 27299   00190C  EF90  F00B         	goto	l9897
 27300   001910                     l972:
 27301                           
 27302                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27303   001910  0105               	movlb	5	; () banked
 27304   001912  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27305   001914  EF8E  F00C         	goto	u7181
 27306   001918  EF90  F00C         	goto	u7180
 27307   00191C                     u7181:
 27308   00191C  EF92  F00C         	goto	l9975
 27309   001920                     u7180:
 27310   001920  EF90  F00B         	goto	l9897
 27311   001924                     l9975:
 27312                           
 27313                           ; BSR set to: 5
 27314                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 27315   001924  EE20 F003          	lfsr	2,3
 27316   001928  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27317   00192A  26D9               	addwf	fsr2l,f,c
 27318   00192C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27319   00192E  22DA               	addwfc	fsr2h,f,c
 27320   001930  50DF               	movf	indf2,w,c
 27321   001932  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27322   001934  EE20 F002          	lfsr	2,2
 27323   001938  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27324   00193A  26D9               	addwf	fsr2l,f,c
 27325   00193C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27326   00193E  22DA               	addwfc	fsr2h,f,c
 27327   001940  50DF               	movf	indf2,w,c
 27328   001942  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27329   001944  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27330   001946  6E3B               	movwf	doEvuln@nodeNumber^(0+1280),c
 27331   001948  C557  F53C         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 27332   00194C  EE20 F005          	lfsr	2,5
 27333   001950  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27334   001952  26D9               	addwf	fsr2l,f,c
 27335   001954  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27336   001956  22DA               	addwfc	fsr2h,f,c
 27337   001958  50DF               	movf	indf2,w,c
 27338   00195A  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27339   00195C  EE20 F004          	lfsr	2,4
 27340   001960  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27341   001962  26D9               	addwf	fsr2l,f,c
 27342   001964  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27343   001966  22DA               	addwfc	fsr2h,f,c
 27344   001968  50DF               	movf	indf2,w,c
 27345   00196A  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27346   00196C  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27347   00196E  6E3D               	movwf	doEvuln@eventNumber^(0+1280),c
 27348   001970  C55A  F53E         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 27349   001974  ECE3  F038         	call	_doEvuln	;wreg free
 27350   001978  EF90  F00B         	goto	l9897
 27351   00197C                     l9981:
 27352                           
 27353                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 27354   00197C  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27355   001980  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27356   001984  0E06               	movlw	6
 27357   001986  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27358   001988  0E01               	movlw	1
 27359   00198A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27360   00198C  EC61  F038         	call	_teachCheckLen	;wreg free
 27361   001990  06E8               	decf	wreg,f,c
 27362   001992  A4D8               	btfss	status,2,c
 27363   001994  EFCE  F00C         	goto	u7191
 27364   001998  EFD0  F00C         	goto	u7190
 27365   00199C                     u7191:
 27366   00199C  EFD2  F00C         	goto	l975
 27367   0019A0                     u7190:
 27368   0019A0  EF90  F00B         	goto	l9897
 27369   0019A4                     l975:
 27370                           
 27371                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27372   0019A4  0105               	movlb	5	; () banked
 27373   0019A6  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27374   0019A8  EFD8  F00C         	goto	u7201
 27375   0019AC  EFDA  F00C         	goto	u7200
 27376   0019B0                     u7201:
 27377   0019B0  EFDC  F00C         	goto	l9991
 27378   0019B4                     u7200:
 27379   0019B4  EF90  F00B         	goto	l9897
 27380   0019B8                     l9991:
 27381                           
 27382                           ; BSR set to: 5
 27383                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 27384   0019B8  EE20 F003          	lfsr	2,3
 27385   0019BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27386   0019BE  26D9               	addwf	fsr2l,f,c
 27387   0019C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27388   0019C2  22DA               	addwfc	fsr2h,f,c
 27389   0019C4  50DF               	movf	indf2,w,c
 27390   0019C6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27391   0019C8  EE20 F002          	lfsr	2,2
 27392   0019CC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27393   0019CE  26D9               	addwf	fsr2l,f,c
 27394   0019D0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27395   0019D2  22DA               	addwfc	fsr2h,f,c
 27396   0019D4  50DF               	movf	indf2,w,c
 27397   0019D6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27398   0019D8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27399   0019DA  6E2F               	movwf	doReqev@nodeNumber^(0+1280),c
 27400   0019DC  C557  F530         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 27401   0019E0  EE20 F005          	lfsr	2,5
 27402   0019E4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27403   0019E6  26D9               	addwf	fsr2l,f,c
 27404   0019E8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27405   0019EA  22DA               	addwfc	fsr2h,f,c
 27406   0019EC  50DF               	movf	indf2,w,c
 27407   0019EE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27408   0019F0  EE20 F004          	lfsr	2,4
 27409   0019F4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27410   0019F6  26D9               	addwf	fsr2l,f,c
 27411   0019F8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27412   0019FA  22DA               	addwfc	fsr2h,f,c
 27413   0019FC  50DF               	movf	indf2,w,c
 27414   0019FE  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27415   001A00  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27416   001A02  6E31               	movwf	doReqev@eventNumber^(0+1280),c
 27417   001A04  C55A  F532         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 27418   001A08  EE20 F006          	lfsr	2,6
 27419   001A0C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27420   001A0E  26D9               	addwf	fsr2l,f,c
 27421   001A10  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27422   001A12  22DA               	addwfc	fsr2h,f,c
 27423   001A14  50DF               	movf	indf2,w,c
 27424   001A16  6E33               	movwf	doReqev@evNum^(0+1280),c
 27425   001A18  EC7B  F025         	call	_doReqev	;wreg free
 27426   001A1C  EF90  F00B         	goto	l9897
 27427   001A20                     l9997:
 27428                           
 27429                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27430   001A20  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27431   001A24  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27432   001A28  0E03               	movlw	3
 27433   001A2A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27434   001A2C  0E00               	movlw	0
 27435   001A2E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27436   001A30  EC61  F038         	call	_teachCheckLen	;wreg free
 27437   001A34  06E8               	decf	wreg,f,c
 27438   001A36  A4D8               	btfss	status,2,c
 27439   001A38  EF20  F00D         	goto	u7211
 27440   001A3C  EF22  F00D         	goto	u7210
 27441   001A40                     u7211:
 27442   001A40  EF24  F00D         	goto	l10003
 27443   001A44                     u7210:
 27444   001A44  EF90  F00B         	goto	l9897
 27445   001A48                     l10003:
 27446                           
 27447                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27448   001A48  EE20 F002          	lfsr	2,2
 27449   001A4C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27450   001A4E  26D9               	addwf	fsr2l,f,c
 27451   001A50  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27452   001A52  22DA               	addwfc	fsr2h,f,c
 27453   001A54  50DE               	movf	postinc2,w,c
 27454   001A56  0105               	movlb	5	; () banked
 27455   001A58  1990               	xorwf	(_nn+1)& (0+255),w,b
 27456   001A5A  A4D8               	btfss	status,2,c
 27457   001A5C  EF32  F00D         	goto	u7221
 27458   001A60  EF34  F00D         	goto	u7220
 27459   001A64                     u7221:
 27460   001A64  EF90  F00B         	goto	l9897
 27461   001A68                     u7220:
 27462   001A68                     
 27463                           ; BSR set to: 5
 27464   001A68  EE20 F003          	lfsr	2,3
 27465   001A6C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27466   001A6E  26D9               	addwf	fsr2l,f,c
 27467   001A70  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27468   001A72  22DA               	addwfc	fsr2h,f,c
 27469   001A74  518F               	movf	_nn& (0+255),w,b
 27470   001A76  18DE               	xorwf	postinc2,w,c
 27471   001A78  B4D8               	btfsc	status,2,c
 27472   001A7A  EF41  F00D         	goto	u7231
 27473   001A7E  EF43  F00D         	goto	u7230
 27474   001A82                     u7231:
 27475   001A82  EFB5  F00B         	goto	l9907
 27476   001A86                     u7230:
 27477   001A86  EF90  F00B         	goto	l9897
 27478   001A8A                     l10017:
 27479                           
 27480                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 27481   001A8A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27482   001A8E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27483   001A92  0E03               	movlw	3
 27484   001A94  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27485   001A96  0E01               	movlw	1
 27486   001A98  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27487   001A9A  EC61  F038         	call	_teachCheckLen	;wreg free
 27488   001A9E  06E8               	decf	wreg,f,c
 27489   001AA0  A4D8               	btfss	status,2,c
 27490   001AA2  EF55  F00D         	goto	u7241
 27491   001AA6  EF57  F00D         	goto	u7240
 27492   001AAA                     u7241:
 27493   001AAA  EF59  F00D         	goto	l10023
 27494   001AAE                     u7240:
 27495   001AAE  EF90  F00B         	goto	l9897
 27496   001AB2                     l10023:
 27497                           
 27498                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27499   001AB2  EE20 F002          	lfsr	2,2
 27500   001AB6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27501   001AB8  26D9               	addwf	fsr2l,f,c
 27502   001ABA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27503   001ABC  22DA               	addwfc	fsr2h,f,c
 27504   001ABE  50DE               	movf	postinc2,w,c
 27505   001AC0  0105               	movlb	5	; () banked
 27506   001AC2  1990               	xorwf	(_nn+1)& (0+255),w,b
 27507   001AC4  A4D8               	btfss	status,2,c
 27508   001AC6  EF67  F00D         	goto	u7251
 27509   001ACA  EF69  F00D         	goto	u7250
 27510   001ACE                     u7251:
 27511   001ACE  EF90  F00B         	goto	l9897
 27512   001AD2                     u7250:
 27513   001AD2                     
 27514                           ; BSR set to: 5
 27515   001AD2  EE20 F003          	lfsr	2,3
 27516   001AD6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27517   001AD8  26D9               	addwf	fsr2l,f,c
 27518   001ADA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27519   001ADC  22DA               	addwfc	fsr2h,f,c
 27520   001ADE  518F               	movf	_nn& (0+255),w,b
 27521   001AE0  18DE               	xorwf	postinc2,w,c
 27522   001AE2  B4D8               	btfsc	status,2,c
 27523   001AE4  EF76  F00D         	goto	u7261
 27524   001AE8  EF78  F00D         	goto	u7260
 27525   001AEC                     u7261:
 27526   001AEC  EF7A  F00D         	goto	l984
 27527   001AF0                     u7260:
 27528   001AF0  EF90  F00B         	goto	l9897
 27529   001AF4                     l984:
 27530                           
 27531                           ; BSR set to: 5
 27532                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 27533   001AF4  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27534   001AF6  EF7F  F00D         	goto	u7271
 27535   001AFA  EF81  F00D         	goto	u7270
 27536   001AFE                     u7271:
 27537   001AFE  EF99  F00D         	goto	l10037
 27538   001B02                     u7270:
 27539   001B02                     
 27540                           ; BSR set to: 5
 27541                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 27542   001B02  C590  F526         	movff	_nn+1,sendMessage3@data1
 27543   001B06  C58F  F527         	movff	_nn,sendMessage3@data2
 27544   001B0A  0E02               	movlw	2
 27545   001B0C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27546   001B0E  0E6F               	movlw	111
 27547   001B10  EC75  F040         	call	_sendMessage3
 27548                           
 27549                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 27550   001B14  C590  F526         	movff	_nn+1,sendMessage5@data1
 27551   001B18  C58F  F527         	movff	_nn,sendMessage5@data2
 27552   001B1C  0E55               	movlw	85
 27553   001B1E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27554   001B20  0E04               	movlw	4
 27555   001B22  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27556   001B24  0E02               	movlw	2
 27557   001B26  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27558   001B28  0EAF               	movlw	175
 27559   001B2A  ECB4  F040         	call	_sendMessage5
 27560   001B2E  EF90  F00B         	goto	l9897
 27561   001B32                     l10037:
 27562                           
 27563                           ; BSR set to: 5
 27564                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 27565   001B32  EC34  F040         	call	_doNnclr	;wreg free
 27566                           
 27567                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 27568   001B36  EF0E  F00C         	goto	l9943
 27569   001B3A                     l10039:
 27570                           
 27571                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27572   001B3A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27573   001B3E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27574   001B42  0E03               	movlw	3
 27575   001B44  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27576   001B46  0E00               	movlw	0
 27577   001B48  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27578   001B4A  EC61  F038         	call	_teachCheckLen	;wreg free
 27579   001B4E  06E8               	decf	wreg,f,c
 27580   001B50  A4D8               	btfss	status,2,c
 27581   001B52  EFAD  F00D         	goto	u7281
 27582   001B56  EFAF  F00D         	goto	u7280
 27583   001B5A                     u7281:
 27584   001B5A  EFB1  F00D         	goto	l10045
 27585   001B5E                     u7280:
 27586   001B5E  EF90  F00B         	goto	l9897
 27587   001B62                     l10045:
 27588                           
 27589                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27590   001B62  EE20 F002          	lfsr	2,2
 27591   001B66  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27592   001B68  26D9               	addwf	fsr2l,f,c
 27593   001B6A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27594   001B6C  22DA               	addwfc	fsr2h,f,c
 27595   001B6E  50DE               	movf	postinc2,w,c
 27596   001B70  0105               	movlb	5	; () banked
 27597   001B72  1990               	xorwf	(_nn+1)& (0+255),w,b
 27598   001B74  A4D8               	btfss	status,2,c
 27599   001B76  EFBF  F00D         	goto	u7291
 27600   001B7A  EFC1  F00D         	goto	u7290
 27601   001B7E                     u7291:
 27602   001B7E  EF90  F00B         	goto	l9897
 27603   001B82                     u7290:
 27604   001B82                     
 27605                           ; BSR set to: 5
 27606   001B82  EE20 F003          	lfsr	2,3
 27607   001B86  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27608   001B88  26D9               	addwf	fsr2l,f,c
 27609   001B8A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27610   001B8C  22DA               	addwfc	fsr2h,f,c
 27611   001B8E  518F               	movf	_nn& (0+255),w,b
 27612   001B90  18DE               	xorwf	postinc2,w,c
 27613   001B92  B4D8               	btfsc	status,2,c
 27614   001B94  EFCE  F00D         	goto	u7301
 27615   001B98  EFD0  F00D         	goto	u7300
 27616   001B9C                     u7301:
 27617   001B9C  EFD2  F00D         	goto	l10053
 27618   001BA0                     u7300:
 27619   001BA0  EF90  F00B         	goto	l9897
 27620   001BA4                     l10053:
 27621                           
 27622                           ; BSR set to: 5
 27623                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 27624   001BA4  EC6D  F041         	call	_doNerd	;wreg free
 27625   001BA8  EF90  F00B         	goto	l9897
 27626   001BAC                     l10059:
 27627                           
 27628                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27629   001BAC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27630   001BB0  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27631   001BB4  0E03               	movlw	3
 27632   001BB6  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27633   001BB8  0E00               	movlw	0
 27634   001BBA  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27635   001BBC  EC61  F038         	call	_teachCheckLen	;wreg free
 27636   001BC0  06E8               	decf	wreg,f,c
 27637   001BC2  A4D8               	btfss	status,2,c
 27638   001BC4  EFE6  F00D         	goto	u7311
 27639   001BC8  EFE8  F00D         	goto	u7310
 27640   001BCC                     u7311:
 27641   001BCC  EFEA  F00D         	goto	l10065
 27642   001BD0                     u7310:
 27643   001BD0  EF90  F00B         	goto	l9897
 27644   001BD4                     l10065:
 27645                           
 27646                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27647   001BD4  EE20 F002          	lfsr	2,2
 27648   001BD8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27649   001BDA  26D9               	addwf	fsr2l,f,c
 27650   001BDC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27651   001BDE  22DA               	addwfc	fsr2h,f,c
 27652   001BE0  50DE               	movf	postinc2,w,c
 27653   001BE2  0105               	movlb	5	; () banked
 27654   001BE4  1990               	xorwf	(_nn+1)& (0+255),w,b
 27655   001BE6  A4D8               	btfss	status,2,c
 27656   001BE8  EFF8  F00D         	goto	u7321
 27657   001BEC  EFFA  F00D         	goto	u7320
 27658   001BF0                     u7321:
 27659   001BF0  EF90  F00B         	goto	l9897
 27660   001BF4                     u7320:
 27661   001BF4                     
 27662                           ; BSR set to: 5
 27663   001BF4  EE20 F003          	lfsr	2,3
 27664   001BF8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27665   001BFA  26D9               	addwf	fsr2l,f,c
 27666   001BFC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27667   001BFE  22DA               	addwfc	fsr2h,f,c
 27668   001C00  518F               	movf	_nn& (0+255),w,b
 27669   001C02  18DE               	xorwf	postinc2,w,c
 27670   001C04  B4D8               	btfsc	status,2,c
 27671   001C06  EF07  F00E         	goto	u7331
 27672   001C0A  EF09  F00E         	goto	u7330
 27673   001C0E                     u7331:
 27674   001C0E  EF0B  F00E         	goto	l10073
 27675   001C12                     u7330:
 27676   001C12  EF90  F00B         	goto	l9897
 27677   001C16                     l10073:
 27678                           
 27679                           ; BSR set to: 5
 27680                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 27681   001C16  EC11  F03E         	call	_doNnevn	;wreg free
 27682   001C1A  EF90  F00B         	goto	l9897
 27683   001C1E                     l10079:
 27684                           
 27685                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27686   001C1E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27687   001C22  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27688   001C26  0E03               	movlw	3
 27689   001C28  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27690   001C2A  0E00               	movlw	0
 27691   001C2C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27692   001C2E  EC61  F038         	call	_teachCheckLen	;wreg free
 27693   001C32  06E8               	decf	wreg,f,c
 27694   001C34  A4D8               	btfss	status,2,c
 27695   001C36  EF1F  F00E         	goto	u7341
 27696   001C3A  EF21  F00E         	goto	u7340
 27697   001C3E                     u7341:
 27698   001C3E  EF23  F00E         	goto	l10085
 27699   001C42                     u7340:
 27700   001C42  EF90  F00B         	goto	l9897
 27701   001C46                     l10085:
 27702                           
 27703                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27704   001C46  EE20 F002          	lfsr	2,2
 27705   001C4A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27706   001C4C  26D9               	addwf	fsr2l,f,c
 27707   001C4E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27708   001C50  22DA               	addwfc	fsr2h,f,c
 27709   001C52  50DE               	movf	postinc2,w,c
 27710   001C54  0105               	movlb	5	; () banked
 27711   001C56  1990               	xorwf	(_nn+1)& (0+255),w,b
 27712   001C58  A4D8               	btfss	status,2,c
 27713   001C5A  EF31  F00E         	goto	u7351
 27714   001C5E  EF33  F00E         	goto	u7350
 27715   001C62                     u7351:
 27716   001C62  EF90  F00B         	goto	l9897
 27717   001C66                     u7350:
 27718   001C66                     
 27719                           ; BSR set to: 5
 27720   001C66  EE20 F003          	lfsr	2,3
 27721   001C6A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27722   001C6C  26D9               	addwf	fsr2l,f,c
 27723   001C6E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27724   001C70  22DA               	addwfc	fsr2h,f,c
 27725   001C72  518F               	movf	_nn& (0+255),w,b
 27726   001C74  18DE               	xorwf	postinc2,w,c
 27727   001C76  B4D8               	btfsc	status,2,c
 27728   001C78  EF40  F00E         	goto	u7361
 27729   001C7C  EF42  F00E         	goto	u7360
 27730   001C80                     u7361:
 27731   001C80  EF44  F00E         	goto	l10093
 27732   001C84                     u7360:
 27733   001C84  EF90  F00B         	goto	l9897
 27734   001C88                     l10093:
 27735                           
 27736                           ; BSR set to: 5
 27737                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 27738   001C88  ECEB  F03D         	call	_doRqevn	;wreg free
 27739   001C8C  EF90  F00B         	goto	l9897
 27740   001C90                     l10099:
 27741                           
 27742                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27743   001C90  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27744   001C94  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27745   001C98  0E04               	movlw	4
 27746   001C9A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27747   001C9C  0E00               	movlw	0
 27748   001C9E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27749   001CA0  EC61  F038         	call	_teachCheckLen	;wreg free
 27750   001CA4  06E8               	decf	wreg,f,c
 27751   001CA6  A4D8               	btfss	status,2,c
 27752   001CA8  EF58  F00E         	goto	u7371
 27753   001CAC  EF5A  F00E         	goto	u7370
 27754   001CB0                     u7371:
 27755   001CB0  EF5C  F00E         	goto	l10105
 27756   001CB4                     u7370:
 27757   001CB4  EF90  F00B         	goto	l9897
 27758   001CB8                     l10105:
 27759                           
 27760                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27761   001CB8  EE20 F002          	lfsr	2,2
 27762   001CBC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27763   001CBE  26D9               	addwf	fsr2l,f,c
 27764   001CC0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27765   001CC2  22DA               	addwfc	fsr2h,f,c
 27766   001CC4  50DE               	movf	postinc2,w,c
 27767   001CC6  0105               	movlb	5	; () banked
 27768   001CC8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27769   001CCA  A4D8               	btfss	status,2,c
 27770   001CCC  EF6A  F00E         	goto	u7381
 27771   001CD0  EF6C  F00E         	goto	u7380
 27772   001CD4                     u7381:
 27773   001CD4  EF90  F00B         	goto	l9897
 27774   001CD8                     u7380:
 27775   001CD8                     
 27776                           ; BSR set to: 5
 27777   001CD8  EE20 F003          	lfsr	2,3
 27778   001CDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27779   001CDE  26D9               	addwf	fsr2l,f,c
 27780   001CE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27781   001CE2  22DA               	addwfc	fsr2h,f,c
 27782   001CE4  518F               	movf	_nn& (0+255),w,b
 27783   001CE6  18DE               	xorwf	postinc2,w,c
 27784   001CE8  B4D8               	btfsc	status,2,c
 27785   001CEA  EF79  F00E         	goto	u7391
 27786   001CEE  EF7B  F00E         	goto	u7390
 27787   001CF2                     u7391:
 27788   001CF2  EF7D  F00E         	goto	l10113
 27789   001CF6                     u7390:
 27790   001CF6  EF90  F00B         	goto	l9897
 27791   001CFA                     l10113:
 27792                           
 27793                           ; BSR set to: 5
 27794                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 27795   001CFA  EE20 F004          	lfsr	2,4
 27796   001CFE  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27797   001D00  26D9               	addwf	fsr2l,f,c
 27798   001D02  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27799   001D04  22DA               	addwfc	fsr2h,f,c
 27800   001D06  50DF               	movf	indf2,w,c
 27801   001D08  ECA2  F038         	call	_doNenrd
 27802   001D0C  EF90  F00B         	goto	l9897
 27803   001D10                     l10119:
 27804                           
 27805                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 27806   001D10  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27807   001D14  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27808   001D18  0E05               	movlw	5
 27809   001D1A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27810   001D1C  0E00               	movlw	0
 27811   001D1E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27812   001D20  EC61  F038         	call	_teachCheckLen	;wreg free
 27813   001D24  06E8               	decf	wreg,f,c
 27814   001D26  A4D8               	btfss	status,2,c
 27815   001D28  EF98  F00E         	goto	u7401
 27816   001D2C  EF9A  F00E         	goto	u7400
 27817   001D30                     u7401:
 27818   001D30  EF9C  F00E         	goto	l10125
 27819   001D34                     u7400:
 27820   001D34  EF90  F00B         	goto	l9897
 27821   001D38                     l10125:
 27822                           
 27823                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27824   001D38  EE20 F002          	lfsr	2,2
 27825   001D3C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27826   001D3E  26D9               	addwf	fsr2l,f,c
 27827   001D40  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27828   001D42  22DA               	addwfc	fsr2h,f,c
 27829   001D44  50DE               	movf	postinc2,w,c
 27830   001D46  0105               	movlb	5	; () banked
 27831   001D48  1990               	xorwf	(_nn+1)& (0+255),w,b
 27832   001D4A  A4D8               	btfss	status,2,c
 27833   001D4C  EFAA  F00E         	goto	u7411
 27834   001D50  EFAC  F00E         	goto	u7410
 27835   001D54                     u7411:
 27836   001D54  EF90  F00B         	goto	l9897
 27837   001D58                     u7410:
 27838   001D58                     
 27839                           ; BSR set to: 5
 27840   001D58  EE20 F003          	lfsr	2,3
 27841   001D5C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27842   001D5E  26D9               	addwf	fsr2l,f,c
 27843   001D60  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27844   001D62  22DA               	addwfc	fsr2h,f,c
 27845   001D64  518F               	movf	_nn& (0+255),w,b
 27846   001D66  18DE               	xorwf	postinc2,w,c
 27847   001D68  B4D8               	btfsc	status,2,c
 27848   001D6A  EFB9  F00E         	goto	u7421
 27849   001D6E  EFBB  F00E         	goto	u7420
 27850   001D72                     u7421:
 27851   001D72  EFBD  F00E         	goto	l10133
 27852   001D76                     u7420:
 27853   001D76  EF90  F00B         	goto	l9897
 27854   001D7A                     l10133:
 27855                           
 27856                           ; BSR set to: 5
 27857                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 27858   001D7A  EE20 F005          	lfsr	2,5
 27859   001D7E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27860   001D80  26D9               	addwf	fsr2l,f,c
 27861   001D82  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27862   001D84  22DA               	addwfc	fsr2h,f,c
 27863   001D86  50DF               	movf	indf2,w,c
 27864   001D88  6E2C               	movwf	doReval@evNum^(0+1280),c
 27865   001D8A  EE20 F004          	lfsr	2,4
 27866   001D8E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27867   001D90  26D9               	addwf	fsr2l,f,c
 27868   001D92  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27869   001D94  22DA               	addwfc	fsr2h,f,c
 27870   001D96  50DF               	movf	indf2,w,c
 27871   001D98  ECA6  F02D         	call	_doReval
 27872   001D9C  EF90  F00B         	goto	l9897
 27873   001DA0                     l10139:
 27874                           
 27875                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 27876   001DA0  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27877   001DA4  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27878   001DA8  0E08               	movlw	8
 27879   001DAA  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27880   001DAC  0E01               	movlw	1
 27881   001DAE  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27882   001DB0  EC61  F038         	call	_teachCheckLen	;wreg free
 27883   001DB4  06E8               	decf	wreg,f,c
 27884   001DB6  A4D8               	btfss	status,2,c
 27885   001DB8  EFE0  F00E         	goto	u7431
 27886   001DBC  EFE2  F00E         	goto	u7430
 27887   001DC0                     u7431:
 27888   001DC0  EFE4  F00E         	goto	l10145
 27889   001DC4                     u7430:
 27890   001DC4  EF90  F00B         	goto	l9897
 27891   001DC8                     l10145:
 27892                           
 27893                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 27894   001DC8  EE20 F003          	lfsr	2,3
 27895   001DCC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27896   001DCE  26D9               	addwf	fsr2l,f,c
 27897   001DD0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27898   001DD2  22DA               	addwfc	fsr2h,f,c
 27899   001DD4  50DF               	movf	indf2,w,c
 27900   001DD6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27901   001DD8  EE20 F002          	lfsr	2,2
 27902   001DDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27903   001DDE  26D9               	addwf	fsr2l,f,c
 27904   001DE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27905   001DE2  22DA               	addwfc	fsr2h,f,c
 27906   001DE4  50DF               	movf	indf2,w,c
 27907   001DE6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27908   001DE8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27909   001DEA  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27910   001DEC  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27911   001DF0  EE20 F005          	lfsr	2,5
 27912   001DF4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27913   001DF6  26D9               	addwf	fsr2l,f,c
 27914   001DF8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27915   001DFA  22DA               	addwfc	fsr2h,f,c
 27916   001DFC  50DF               	movf	indf2,w,c
 27917   001DFE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27918   001E00  EE20 F004          	lfsr	2,4
 27919   001E04  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27920   001E06  26D9               	addwf	fsr2l,f,c
 27921   001E08  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27922   001E0A  22DA               	addwfc	fsr2h,f,c
 27923   001E0C  50DF               	movf	indf2,w,c
 27924   001E0E  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27925   001E10  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27926   001E12  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27927   001E14  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27928   001E18  EE20 F007          	lfsr	2,7
 27929   001E1C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27930   001E1E  26D9               	addwf	fsr2l,f,c
 27931   001E20  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27932   001E22  22DA               	addwfc	fsr2h,f,c
 27933   001E24  50DF               	movf	indf2,w,c
 27934   001E26  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27935   001E28  EE20 F008          	lfsr	2,8
 27936   001E2C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27937   001E2E  26D9               	addwf	fsr2l,f,c
 27938   001E30  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27939   001E32  22DA               	addwfc	fsr2h,f,c
 27940   001E34  50DF               	movf	indf2,w,c
 27941   001E36  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27942   001E38  EC66  F02F         	call	_doEvlrn	;wreg free
 27943   001E3C  EF90  F00B         	goto	l9897
 27944   001E40                     l10153:
 27945   001E40  EE20 F001          	lfsr	2,1
 27946   001E44  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27947   001E46  26D9               	addwf	fsr2l,f,c
 27948   001E48  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27949   001E4A  22DA               	addwfc	fsr2h,f,c
 27950   001E4C  50DF               	movf	indf2,w,c
 27951   001E4E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27952   001E50  6A57               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 27953                           
 27954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27955                           ; Switch size 1, requested type "simple"
 27956                           ; Number of cases is 1, Range of values is 0 to 0
 27957                           ; switch strategies available:
 27958                           ; Name         Instructions Cycles
 27959                           ; simple_byte            4     3 (average)
 27960                           ;	Chosen strategy is simple_byte
 27961   001E52  5057               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 27962   001E54  0A00               	xorlw	0	; case 0
 27963   001E56  B4D8               	btfsc	status,2,c
 27964   001E58  EF30  F00F         	goto	l11791
 27965   001E5C  EF0E  F00C         	goto	l9943
 27966   001E60                     l11791:
 27967                           
 27968                           ; Switch size 1, requested type "simple"
 27969                           ; Number of cases is 13, Range of values is 83 to 245
 27970                           ; switch strategies available:
 27971                           ; Name         Instructions Cycles
 27972                           ; simple_byte           40    21 (average)
 27973                           ;	Chosen strategy is simple_byte
 27974   001E60  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27975   001E62  0A53               	xorlw	83	; case 83
 27976   001E64  B4D8               	btfsc	status,2,c
 27977   001E66  EF7E  F00B         	goto	l9895
 27978   001E6A  0A07               	xorlw	7	; case 84
 27979   001E6C  B4D8               	btfsc	status,2,c
 27980   001E6E  EF10  F00D         	goto	l9997
 27981   001E72  0A01               	xorlw	1	; case 85
 27982   001E74  B4D8               	btfsc	status,2,c
 27983   001E76  EF45  F00D         	goto	l10017
 27984   001E7A  0A03               	xorlw	3	; case 86
 27985   001E7C  B4D8               	btfsc	status,2,c
 27986   001E7E  EFD6  F00D         	goto	l10059
 27987   001E82  0A01               	xorlw	1	; case 87
 27988   001E84  B4D8               	btfsc	status,2,c
 27989   001E86  EF9D  F00D         	goto	l10039
 27990   001E8A  0A0F               	xorlw	15	; case 88
 27991   001E8C  B4D8               	btfsc	status,2,c
 27992   001E8E  EF0F  F00E         	goto	l10079
 27993   001E92  0A2A               	xorlw	42	; case 114
 27994   001E94  B4D8               	btfsc	status,2,c
 27995   001E96  EF48  F00E         	goto	l10099
 27996   001E9A  0A04               	xorlw	4	; case 118
 27997   001E9C  B4D8               	btfsc	status,2,c
 27998   001E9E  EFB8  F00B         	goto	l9913
 27999   001EA2  0AE3               	xorlw	227	; case 149
 28000   001EA4  B4D8               	btfsc	status,2,c
 28001   001EA6  EF74  F00C         	goto	l9965
 28002   001EAA  0A09               	xorlw	9	; case 156
 28003   001EAC  B4D8               	btfsc	status,2,c
 28004   001EAE  EF88  F00E         	goto	l10119
 28005   001EB2  0A2E               	xorlw	46	; case 178
 28006   001EB4  B4D8               	btfsc	status,2,c
 28007   001EB6  EFBE  F00C         	goto	l9981
 28008   001EBA  0A60               	xorlw	96	; case 210
 28009   001EBC  B4D8               	btfsc	status,2,c
 28010   001EBE  EF11  F00C         	goto	l9947
 28011   001EC2  0A27               	xorlw	39	; case 245
 28012   001EC4  B4D8               	btfsc	status,2,c
 28013   001EC6  EFD0  F00E         	goto	l10139
 28014   001ECA  EF0E  F00C         	goto	l9943
 28015   001ECE                     l958:
 28016   001ECE  0012               	return		;funcret
 28017   001ED0                     __end_of_teachProcessMessage:
 28018                           	callstack 0
 28019                           
 28020 ;; *************** function _teachCheckLen *****************
 28021 ;; Defined at:
 28022 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28023 ;; Parameters:    Size  Location     Type
 28024 ;;  m               2   48[COMRAM] PTR struct Message
 28025 ;;		 -> poll@m(9), 
 28026 ;;  needed          1   50[COMRAM] unsigned char 
 28027 ;;  learn           1   51[COMRAM] unsigned char 
 28028 ;; Auto vars:     Size  Location     Type
 28029 ;;		None
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  1    wreg      enum E23340
 28032 ;; Registers used:
 28033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/0
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28042 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28043 ;;Total ram usage:        5 bytes
 28044 ;; Hardware stack levels used: 1
 28045 ;; Hardware stack levels required when called: 7
 28046 ;; This function calls:
 28047 ;;		_checkLen
 28048 ;;		_sendMessage5
 28049 ;; This function is called by:
 28050 ;;		_teachProcessMessage
 28051 ;; This function uses a non-reentrant model
 28052 ;;
 28053                           
 28054                           	psect	text23
 28055   0070C2                     __ptext23:
 28056                           	callstack 0
 28057   0070C2                     _teachCheckLen:
 28058                           	callstack 117
 28059   0070C2                     
 28060                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 28061   0070C2  5034               	movf	teachCheckLen@learn^(0+1280),w,c
 28062   0070C4  B4D8               	btfsc	status,2,c
 28063   0070C6  EF67  F038         	goto	u6041
 28064   0070CA  EF69  F038         	goto	u6040
 28065   0070CE                     u6041:
 28066   0070CE  EF97  F038         	goto	l8785
 28067   0070D2                     u6040:
 28068   0070D2                     
 28069                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 28070   0070D2  C531  F4D9         	movff	teachCheckLen@m,fsr2l
 28071   0070D6  C532  F4DA         	movff	teachCheckLen@m+1,fsr2h
 28072   0070DA  5033               	movf	teachCheckLen@needed^(0+1280),w,c
 28073   0070DC  5CDE               	subwf	postinc2,w,c
 28074   0070DE  B0D8               	btfsc	status,0,c
 28075   0070E0  EF74  F038         	goto	u6051
 28076   0070E4  EF76  F038         	goto	u6050
 28077   0070E8                     u6051:
 28078   0070E8  EF94  F038         	goto	l8781
 28079   0070EC                     u6050:
 28080   0070EC                     
 28081                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 28082   0070EC  0105               	movlb	5	; () banked
 28083   0070EE  A1A4               	btfss	_mode_flags& (0+255),0,b
 28084   0070F0  EF7C  F038         	goto	u6061
 28085   0070F4  EF7E  F038         	goto	u6060
 28086   0070F8                     u6061:
 28087   0070F8  EF91  F038         	goto	l8777
 28088   0070FC                     u6060:
 28089   0070FC                     
 28090                           ; BSR set to: 5
 28091                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 28092   0070FC  C590  F526         	movff	_nn+1,sendMessage5@data1
 28093   007100  C58F  F527         	movff	_nn,sendMessage5@data2
 28094   007104  EE20 F001          	lfsr	2,1
 28095   007108  5031               	movf	teachCheckLen@m^(0+1280),w,c
 28096   00710A  26D9               	addwf	fsr2l,f,c
 28097   00710C  5032               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 28098   00710E  22DA               	addwfc	fsr2h,f,c
 28099   007110  50DF               	movf	indf2,w,c
 28100   007112  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28101   007114  0E04               	movlw	4
 28102   007116  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28103   007118  0E01               	movlw	1
 28104   00711A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28105   00711C  0EAF               	movlw	175
 28106   00711E  ECB4  F040         	call	_sendMessage5
 28107   007122                     l8777:
 28108                           
 28109                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 28110   007122  0E01               	movlw	1
 28111   007124  EFA1  F038         	goto	l1022
 28112   007128                     l8781:
 28113                           
 28114                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 28115   007128  0E00               	movlw	0
 28116   00712A  EFA1  F038         	goto	l1022
 28117   00712E                     l8785:
 28118                           
 28119                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 28120   00712E  C531  F52C         	movff	teachCheckLen@m,checkLen@m
 28121   007132  C532  F52D         	movff	teachCheckLen@m+1,checkLen@m+1
 28122   007136  C533  F52E         	movff	teachCheckLen@needed,checkLen@needed
 28123   00713A  0E04               	movlw	4
 28124   00713C  6E2F               	movwf	checkLen@service^(0+1280),c
 28125   00713E  EC62  F034         	call	_checkLen	;wreg free
 28126   007142                     l1022:
 28127   007142  0012               	return		;funcret
 28128   007144                     __end_of_teachCheckLen:
 28129                           	callstack 0
 28130                           
 28131 ;; *************** function _doRqevn *****************
 28132 ;; Defined at:
 28133 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28134 ;; Parameters:    Size  Location     Type
 28135 ;;		None
 28136 ;; Auto vars:     Size  Location     Type
 28137 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28138 ;;  i               1   44[COMRAM] unsigned char 
 28139 ;;  count           1   43[COMRAM] unsigned char 
 28140 ;; Return value:  Size  Location     Type
 28141 ;;                  1    wreg      void 
 28142 ;; Registers used:
 28143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28144 ;; Tracked objects:
 28145 ;;		On entry : 0/0
 28146 ;;		On exit  : 0/0
 28147 ;;		Unchanged: 0/0
 28148 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28150 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28153 ;;Total ram usage:        4 bytes
 28154 ;; Hardware stack levels used: 1
 28155 ;; Hardware stack levels required when called: 6
 28156 ;; This function calls:
 28157 ;;		_getEN
 28158 ;;		_sendMessage3
 28159 ;; This function is called by:
 28160 ;;		_teachProcessMessage
 28161 ;; This function uses a non-reentrant model
 28162 ;;
 28163                           
 28164                           	psect	text24
 28165   007BD6                     __ptext24:
 28166                           	callstack 0
 28167   007BD6                     _doRqevn:
 28168                           	callstack 118
 28169   007BD6                     
 28170                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 28171   007BD6  6A2C               	clrf	doRqevn@count^(0+1280),c
 28172                           
 28173                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<255; i++) {
 28174   007BD8  6A2D               	clrf	doRqevn@i^(0+1280),c
 28175   007BDA                     l8893:
 28176                           
 28177                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 28178   007BDA  502D               	movf	doRqevn@i^(0+1280),w,c
 28179   007BDC  ECBD  F033         	call	_getEN
 28180   007BE0  C50D  F52A         	movff	?_getEN,doRqevn@eventNumber
 28181   007BE4  C50E  F52B         	movff	?_getEN+1,doRqevn@eventNumber+1
 28182   007BE8                     
 28183                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 28184   007BE8  502A               	movf	doRqevn@eventNumber^(0+1280),w,c
 28185   007BEA  102B               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 28186   007BEC  B4D8               	btfsc	status,2,c
 28187   007BEE  EFFB  F03D         	goto	u6171
 28188   007BF2  EFFD  F03D         	goto	u6170
 28189   007BF6                     u6171:
 28190   007BF6  EFFE  F03D         	goto	l1062
 28191   007BFA                     u6170:
 28192   007BFA                     
 28193                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 28194   007BFA  2A2C               	incf	doRqevn@count^(0+1280),f,c
 28195   007BFC                     l1062:
 28196                           
 28197                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 28198   007BFC  2A2D               	incf	doRqevn@i^(0+1280),f,c
 28199   007BFE  282D               	incf	doRqevn@i^(0+1280),w,c
 28200   007C00  A4D8               	btfss	status,2,c
 28201   007C02  EF05  F03E         	goto	u6181
 28202   007C06  EF07  F03E         	goto	u6180
 28203   007C0A                     u6181:
 28204   007C0A  EFED  F03D         	goto	l8893
 28205   007C0E                     u6180:
 28206   007C0E                     
 28207                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28208   007C0E  C590  F526         	movff	_nn+1,sendMessage3@data1
 28209   007C12  C58F  F527         	movff	_nn,sendMessage3@data2
 28210   007C16  C52C  F528         	movff	doRqevn@count,sendMessage3@data3
 28211   007C1A  0E74               	movlw	116
 28212   007C1C  EC75  F040         	call	_sendMessage3
 28213   007C20  0012               	return		;funcret
 28214   007C22                     __end_of_doRqevn:
 28215                           	callstack 0
 28216                           
 28217 ;; *************** function _doReval *****************
 28218 ;; Defined at:
 28219 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28220 ;; Parameters:    Size  Location     Type
 28221 ;;  enNum           1    wreg     unsigned char 
 28222 ;;  evNum           1   43[COMRAM] unsigned char 
 28223 ;; Auto vars:     Size  Location     Type
 28224 ;;  enNum           1   45[COMRAM] unsigned char 
 28225 ;;  evVal           2   47[COMRAM] int 
 28226 ;;  tableIndex      1   46[COMRAM] unsigned char 
 28227 ;;  evIndex         1   44[COMRAM] unsigned char 
 28228 ;; Return value:  Size  Location     Type
 28229 ;;                  1    wreg      void 
 28230 ;; Registers used:
 28231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28232 ;; Tracked objects:
 28233 ;;		On entry : 0/0
 28234 ;;		On exit  : 0/0
 28235 ;;		Unchanged: 0/0
 28236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28237 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28238 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28240 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28241 ;;Total ram usage:        6 bytes
 28242 ;; Hardware stack levels used: 1
 28243 ;; Hardware stack levels required when called: 6
 28244 ;; This function calls:
 28245 ;;		_evtIdxToTableIndex
 28246 ;;		_findServiceIndex
 28247 ;;		_getEv
 28248 ;;		_sendMessage3
 28249 ;;		_sendMessage5
 28250 ;;		_startTimedResponse
 28251 ;; This function is called by:
 28252 ;;		_teachProcessMessage
 28253 ;; This function uses a non-reentrant model
 28254 ;;
 28255                           
 28256                           	psect	text25
 28257   005B4C                     __ptext25:
 28258                           	callstack 0
 28259   005B4C                     _doReval:
 28260                           	callstack 118
 28261                           
 28262                           ;incstack = 0
 28263                           ;doReval@enNum stored from wreg
 28264   005B4C  6E2E               	movwf	doReval@enNum^(0+1280),c
 28265   005B4E                     
 28266                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 28267   005B4E  502E               	movf	doReval@enNum^(0+1280),w,c
 28268   005B50  ECB9  F041         	call	_evtIdxToTableIndex
 28269   005B54  6E2F               	movwf	doReval@tableIndex^(0+1280),c
 28270   005B56                     
 28271                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 255) {
 28272   005B56  282F               	incf	doReval@tableIndex^(0+1280),w,c
 28273   005B58  A4D8               	btfss	status,2,c
 28274   005B5A  EFB1  F02D         	goto	u6201
 28275   005B5E  EFB3  F02D         	goto	u6200
 28276   005B62                     u6201:
 28277   005B62  EFBE  F02D         	goto	l8923
 28278   005B66                     u6200:
 28279   005B66                     
 28280                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28281   005B66  C590  F526         	movff	_nn+1,sendMessage3@data1
 28282   005B6A  C58F  F527         	movff	_nn,sendMessage3@data2
 28283   005B6E  0E06               	movlw	6
 28284   005B70  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28285   005B72  0E6F               	movlw	111
 28286   005B74  EC75  F040         	call	_sendMessage3
 28287   005B78  EF1A  F02E         	goto	l1075
 28288   005B7C                     l8923:
 28289                           
 28290                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 28291   005B7C  042C               	decf	doReval@evNum^(0+1280),w,c
 28292   005B7E  6E2D               	movwf	doReval@evIndex^(0+1280),c
 28293   005B80                     
 28294                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 28295   005B80  502C               	movf	doReval@evNum^(0+1280),w,c
 28296   005B82  A4D8               	btfss	status,2,c
 28297   005B84  EFC6  F02D         	goto	u6211
 28298   005B88  EFC8  F02D         	goto	u6210
 28299   005B8C                     u6211:
 28300   005B8C  EFE3  F02D         	goto	l8935
 28301   005B90                     u6210:
 28302   005B90                     
 28303                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 248;
 28304   005B90  0E00               	movlw	0
 28305   005B92  6E31               	movwf	(doReval@evVal+1)^(0+1280),c
 28306   005B94  0EF8               	movlw	248
 28307   005B96  6E30               	movwf	doReval@evVal^(0+1280),c
 28308   005B98                     
 28309                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 28310   005B98  0105               	movlb	5	; () banked
 28311   005B9A  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28312   005B9C  EFD2  F02D         	goto	u6221
 28313   005BA0  EFD4  F02D         	goto	u6220
 28314   005BA4                     u6221:
 28315   005BA4  EFEC  F02D         	goto	l8937
 28316   005BA8                     u6220:
 28317   005BA8                     
 28318                           ; BSR set to: 5
 28319                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 28320   005BA8  0EB5               	movlw	181
 28321   005BAA  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28322   005BAC                     
 28323                           ; BSR set to: 5
 28324                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28325   005BAC  0E04               	movlw	4
 28326   005BAE  EC0E  F037         	call	_findServiceIndex
 28327   005BB2  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28328   005BB4  0EF6               	movlw	low _reqevCallback
 28329   005BB6  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28330   005BB8  0E5D               	movlw	high _reqevCallback
 28331   005BBA  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28332   005BBC  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28333   005BBE  ECC4  F03C         	call	_startTimedResponse
 28334   005BC2  EFEC  F02D         	goto	l8937
 28335   005BC6                     l8935:
 28336                           
 28337                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 28338   005BC6  C52D  F50D         	movff	doReval@evIndex,getEv@evNum
 28339   005BCA  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28340   005BCC  ECB2  F034         	call	_getEv
 28341   005BD0  C50D  F530         	movff	?_getEv,doReval@evVal
 28342   005BD4  C50E  F531         	movff	?_getEv+1,doReval@evVal+1
 28343   005BD8                     l8937:
 28344                           
 28345                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 28346   005BD8  BE31               	btfsc	(doReval@evVal+1)^(0+1280),7,c
 28347   005BDA  EFF3  F02D         	goto	u6230
 28348   005BDE  EFF1  F02D         	goto	u6231
 28349   005BE2                     u6231:
 28350   005BE2  EF0D  F02E         	goto	l8943
 28351   005BE6                     u6230:
 28352   005BE6                     
 28353                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28354   005BE6  C590  F526         	movff	_nn+1,sendMessage3@data1
 28355   005BEA  C58F  F527         	movff	_nn,sendMessage3@data2
 28356   005BEE  5030               	movf	doReval@evVal^(0+1280),w,c
 28357   005BF0  0800               	sublw	0
 28358   005BF2  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28359   005BF4  0E6F               	movlw	111
 28360   005BF6  EC75  F040         	call	_sendMessage3
 28361                           
 28362                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28363   005BFA  C590  F526         	movff	_nn+1,sendMessage5@data1
 28364   005BFE  C58F  F527         	movff	_nn,sendMessage5@data2
 28365   005C02  0E9C               	movlw	156
 28366   005C04  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28367   005C06  0E04               	movlw	4
 28368   005C08  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28369   005C0A  5030               	movf	doReval@evVal^(0+1280),w,c
 28370   005C0C  0800               	sublw	0
 28371   005C0E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28372   005C10  0EAF               	movlw	175
 28373   005C12  ECB4  F040         	call	_sendMessage5
 28374   005C16  EF1A  F02E         	goto	l1075
 28375   005C1A                     l8943:
 28376                           
 28377                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 28378   005C1A  C590  F526         	movff	_nn+1,sendMessage5@data1
 28379   005C1E  C58F  F527         	movff	_nn,sendMessage5@data2
 28380   005C22  C52E  F528         	movff	doReval@enNum,sendMessage5@data3
 28381   005C26  C52C  F529         	movff	doReval@evNum,sendMessage5@data4
 28382   005C2A  C530  F52A         	movff	doReval@evVal,sendMessage5@data5
 28383   005C2E  0EB5               	movlw	181
 28384   005C30  ECB4  F040         	call	_sendMessage5
 28385   005C34                     l1075:
 28386   005C34  0012               	return		;funcret
 28387   005C36                     __end_of_doReval:
 28388                           	callstack 0
 28389                           
 28390 ;; *************** function _doReqev *****************
 28391 ;; Defined at:
 28392 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28393 ;; Parameters:    Size  Location     Type
 28394 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 28395 ;;  eventNumber     2   48[COMRAM] unsigned short 
 28396 ;;  evNum           1   50[COMRAM] unsigned char 
 28397 ;; Auto vars:     Size  Location     Type
 28398 ;;  evVal           2   51[COMRAM] short 
 28399 ;;  tableIndex      1   53[COMRAM] unsigned char 
 28400 ;; Return value:  Size  Location     Type
 28401 ;;                  1    wreg      void 
 28402 ;; Registers used:
 28403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28404 ;; Tracked objects:
 28405 ;;		On entry : 0/0
 28406 ;;		On exit  : 0/0
 28407 ;;		Unchanged: 0/0
 28408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28409 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28410 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28412 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28413 ;;Total ram usage:        8 bytes
 28414 ;; Hardware stack levels used: 1
 28415 ;; Hardware stack levels required when called: 6
 28416 ;; This function calls:
 28417 ;;		_findEvent
 28418 ;;		_findServiceIndex
 28419 ;;		_getEv
 28420 ;;		_numEv
 28421 ;;		_sendMessage3
 28422 ;;		_sendMessage5
 28423 ;;		_sendMessage6
 28424 ;;		_startTimedResponse
 28425 ;; This function is called by:
 28426 ;;		_teachProcessMessage
 28427 ;; This function uses a non-reentrant model
 28428 ;;
 28429                           
 28430                           	psect	text26
 28431   004AF6                     __ptext26:
 28432                           	callstack 0
 28433   004AF6                     _doReqev:
 28434                           	callstack 118
 28435   004AF6                     
 28436                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 28437   004AF6  C52F  F522         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 28438   004AFA  C530  F523         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 28439   004AFE  C531  F524         	movff	doReqev@eventNumber,findEvent@eventNumber
 28440   004B02  C532  F525         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 28441   004B06  EC0F  F032         	call	_findEvent	;wreg free
 28442   004B0A  6E36               	movwf	doReqev@tableIndex^(0+1280),c
 28443   004B0C                     
 28444                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 28445   004B0C  2836               	incf	doReqev@tableIndex^(0+1280),w,c
 28446   004B0E  A4D8               	btfss	status,2,c
 28447   004B10  EF8C  F025         	goto	u6101
 28448   004B14  EF8E  F025         	goto	u6100
 28449   004B18                     u6101:
 28450   004B18  EFA6  F025         	goto	l8831
 28451   004B1C                     u6100:
 28452   004B1C                     
 28453                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 28454   004B1C  C590  F526         	movff	_nn+1,sendMessage3@data1
 28455   004B20  C58F  F527         	movff	_nn,sendMessage3@data2
 28456   004B24  0E07               	movlw	7
 28457   004B26  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28458   004B28  0E6F               	movlw	111
 28459   004B2A  EC75  F040         	call	_sendMessage3
 28460                           
 28461                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 28462   004B2E  C590  F526         	movff	_nn+1,sendMessage5@data1
 28463   004B32  C58F  F527         	movff	_nn,sendMessage5@data2
 28464   004B36  0EB2               	movlw	178
 28465   004B38  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28466   004B3A  0E04               	movlw	4
 28467   004B3C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28468   004B3E  0E07               	movlw	7
 28469   004B40  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28470   004B42  0EAF               	movlw	175
 28471   004B44  ECB4  F040         	call	_sendMessage5
 28472   004B48  EF34  F026         	goto	l1087
 28473   004B4C                     l8831:
 28474                           
 28475                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 252) {
 28476   004B4C  0EFC               	movlw	252
 28477   004B4E  6433               	cpfsgt	doReqev@evNum^(0+1280),c
 28478   004B50  EFAC  F025         	goto	u6111
 28479   004B54  EFAE  F025         	goto	u6110
 28480   004B58                     u6111:
 28481   004B58  EFC6  F025         	goto	l8837
 28482   004B5C                     u6110:
 28483   004B5C                     
 28484                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28485   004B5C  C590  F526         	movff	_nn+1,sendMessage3@data1
 28486   004B60  C58F  F527         	movff	_nn,sendMessage3@data2
 28487   004B64  0E06               	movlw	6
 28488   004B66  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28489   004B68  0E6F               	movlw	111
 28490   004B6A  EC75  F040         	call	_sendMessage3
 28491                           
 28492                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 28493   004B6E  C590  F526         	movff	_nn+1,sendMessage5@data1
 28494   004B72  C58F  F527         	movff	_nn,sendMessage5@data2
 28495   004B76  0EB2               	movlw	178
 28496   004B78  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28497   004B7A  0E04               	movlw	4
 28498   004B7C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28499   004B7E  0E06               	movlw	6
 28500   004B80  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28501   004B82  0EAF               	movlw	175
 28502   004B84  ECB4  F040         	call	_sendMessage5
 28503   004B88  EF34  F026         	goto	l1087
 28504   004B8C                     l8837:
 28505                           
 28506                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 28507   004B8C  5033               	movf	doReqev@evNum^(0+1280),w,c
 28508   004B8E  A4D8               	btfss	status,2,c
 28509   004B90  EFCC  F025         	goto	u6121
 28510   004B94  EFCE  F025         	goto	u6120
 28511   004B98                     u6121:
 28512   004B98  EFFB  F025         	goto	l8851
 28513   004B9C                     u6120:
 28514   004B9C                     
 28515                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 248;
 28516   004B9C  0E00               	movlw	0
 28517   004B9E  6E35               	movwf	(doReqev@evVal+1)^(0+1280),c
 28518   004BA0  0EF8               	movlw	248
 28519   004BA2  6E34               	movwf	doReqev@evVal^(0+1280),c
 28520   004BA4                     
 28521                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 28522   004BA4  0105               	movlb	5	; () banked
 28523   004BA6  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28524   004BA8  EFD8  F025         	goto	u6131
 28525   004BAC  EFDA  F025         	goto	u6130
 28526   004BB0                     u6131:
 28527   004BB0  EF04  F026         	goto	l8853
 28528   004BB4                     u6130:
 28529   004BB4                     
 28530                           ; BSR set to: 5
 28531                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 28532   004BB4  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28533   004BB6  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28534   004BB8  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28535   004BBC  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28536   004BBE  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28537   004BC0  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28538   004BC4  0E00               	movlw	0
 28539   004BC6  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 28540   004BC8  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28541   004BCA  ECCB  F041         	call	_numEv
 28542   004BCE  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 28543   004BD0  0ED3               	movlw	211
 28544   004BD2  EC4B  F040         	call	_sendMessage6
 28545   004BD6                     
 28546                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 28547   004BD6  0ED3               	movlw	211
 28548   004BD8  0105               	movlb	5	; () banked
 28549   004BDA  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28550   004BDC                     
 28551                           ; BSR set to: 5
 28552                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28553   004BDC  0E04               	movlw	4
 28554   004BDE  EC0E  F037         	call	_findServiceIndex
 28555   004BE2  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28556   004BE4  0EF6               	movlw	low _reqevCallback
 28557   004BE6  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28558   004BE8  0E5D               	movlw	high _reqevCallback
 28559   004BEA  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28560   004BEC  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28561   004BEE  ECC4  F03C         	call	_startTimedResponse
 28562   004BF2  EF34  F026         	goto	l1087
 28563   004BF6                     l8851:
 28564                           
 28565                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 28566   004BF6  0433               	decf	doReqev@evNum^(0+1280),w,c
 28567   004BF8  6E0D               	movwf	getEv@evNum^(0+1280),c
 28568   004BFA  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28569   004BFC  ECB2  F034         	call	_getEv
 28570   004C00  C50D  F534         	movff	?_getEv,doReqev@evVal
 28571   004C04  C50E  F535         	movff	?_getEv+1,doReqev@evVal+1
 28572   004C08                     l8853:
 28573                           
 28574                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 28575   004C08  BE35               	btfsc	(doReqev@evVal+1)^(0+1280),7,c
 28576   004C0A  EF0B  F026         	goto	u6140
 28577   004C0E  EF09  F026         	goto	u6141
 28578   004C12                     u6141:
 28579   004C12  EF25  F026         	goto	l8859
 28580   004C16                     u6140:
 28581   004C16                     
 28582                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28583   004C16  C590  F526         	movff	_nn+1,sendMessage3@data1
 28584   004C1A  C58F  F527         	movff	_nn,sendMessage3@data2
 28585   004C1E  5034               	movf	doReqev@evVal^(0+1280),w,c
 28586   004C20  0800               	sublw	0
 28587   004C22  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28588   004C24  0E6F               	movlw	111
 28589   004C26  EC75  F040         	call	_sendMessage3
 28590                           
 28591                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28592   004C2A  C590  F526         	movff	_nn+1,sendMessage5@data1
 28593   004C2E  C58F  F527         	movff	_nn,sendMessage5@data2
 28594   004C32  0EB2               	movlw	178
 28595   004C34  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28596   004C36  0E04               	movlw	4
 28597   004C38  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28598   004C3A  5034               	movf	doReqev@evVal^(0+1280),w,c
 28599   004C3C  0800               	sublw	0
 28600   004C3E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28601   004C40  0EAF               	movlw	175
 28602   004C42  ECB4  F040         	call	_sendMessage5
 28603   004C46  EF34  F026         	goto	l1087
 28604   004C4A                     l8859:
 28605                           
 28606                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 28607   004C4A  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28608   004C4C  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28609   004C4E  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28610   004C52  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28611   004C54  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28612   004C56  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28613   004C5A  C533  F52A         	movff	doReqev@evNum,sendMessage6@data5
 28614   004C5E  C534  F52B         	movff	doReqev@evVal,sendMessage6@data6
 28615   004C62  0ED3               	movlw	211
 28616   004C64  EC4B  F040         	call	_sendMessage6
 28617   004C68                     l1087:
 28618   004C68  0012               	return		;funcret
 28619   004C6A                     __end_of_doReqev:
 28620                           	callstack 0
 28621                           
 28622 ;; *************** function _doNnevn *****************
 28623 ;; Defined at:
 28624 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28625 ;; Parameters:    Size  Location     Type
 28626 ;;		None
 28627 ;; Auto vars:     Size  Location     Type
 28628 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28629 ;;  i               1   44[COMRAM] unsigned char 
 28630 ;;  count           1   43[COMRAM] unsigned char 
 28631 ;; Return value:  Size  Location     Type
 28632 ;;                  1    wreg      void 
 28633 ;; Registers used:
 28634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28635 ;; Tracked objects:
 28636 ;;		On entry : 0/0
 28637 ;;		On exit  : 0/0
 28638 ;;		Unchanged: 0/0
 28639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28641 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28644 ;;Total ram usage:        4 bytes
 28645 ;; Hardware stack levels used: 1
 28646 ;; Hardware stack levels required when called: 6
 28647 ;; This function calls:
 28648 ;;		_getEN
 28649 ;;		_sendMessage3
 28650 ;; This function is called by:
 28651 ;;		_teachProcessMessage
 28652 ;; This function uses a non-reentrant model
 28653 ;;
 28654                           
 28655                           	psect	text27
 28656   007C22                     __ptext27:
 28657                           	callstack 0
 28658   007C22                     _doNnevn:
 28659                           	callstack 118
 28660   007C22                     
 28661                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 28662   007C22  6A2C               	clrf	doNnevn@count^(0+1280),c
 28663                           
 28664                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<255; i++) {
 28665   007C24  6A2D               	clrf	doNnevn@i^(0+1280),c
 28666   007C26                     l8877:
 28667                           
 28668                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 28669   007C26  502D               	movf	doNnevn@i^(0+1280),w,c
 28670   007C28  ECBD  F033         	call	_getEN
 28671   007C2C  C50D  F52A         	movff	?_getEN,doNnevn@eventNumber
 28672   007C30  C50E  F52B         	movff	?_getEN+1,doNnevn@eventNumber+1
 28673   007C34                     
 28674                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 28675   007C34  502A               	movf	doNnevn@eventNumber^(0+1280),w,c
 28676   007C36  102B               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 28677   007C38  A4D8               	btfss	status,2,c
 28678   007C3A  EF21  F03E         	goto	u6151
 28679   007C3E  EF23  F03E         	goto	u6150
 28680   007C42                     u6151:
 28681   007C42  EF24  F03E         	goto	l1044
 28682   007C46                     u6150:
 28683   007C46                     
 28684                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 28685   007C46  2A2C               	incf	doNnevn@count^(0+1280),f,c
 28686   007C48                     l1044:
 28687                           
 28688                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 28689   007C48  2A2D               	incf	doNnevn@i^(0+1280),f,c
 28690   007C4A  282D               	incf	doNnevn@i^(0+1280),w,c
 28691   007C4C  A4D8               	btfss	status,2,c
 28692   007C4E  EF2B  F03E         	goto	u6161
 28693   007C52  EF2D  F03E         	goto	u6160
 28694   007C56                     u6161:
 28695   007C56  EF13  F03E         	goto	l8877
 28696   007C5A                     u6160:
 28697   007C5A                     
 28698                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28699   007C5A  C590  F526         	movff	_nn+1,sendMessage3@data1
 28700   007C5E  C58F  F527         	movff	_nn,sendMessage3@data2
 28701   007C62  C52C  F528         	movff	doNnevn@count,sendMessage3@data3
 28702   007C66  0E70               	movlw	112
 28703   007C68  EC75  F040         	call	_sendMessage3
 28704   007C6C  0012               	return		;funcret
 28705   007C6E                     __end_of_doNnevn:
 28706                           	callstack 0
 28707                           
 28708 ;; *************** function _doNnclr *****************
 28709 ;; Defined at:
 28710 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28711 ;; Parameters:    Size  Location     Type
 28712 ;;		None
 28713 ;; Auto vars:     Size  Location     Type
 28714 ;;		None
 28715 ;; Return value:  Size  Location     Type
 28716 ;;                  1    wreg      void 
 28717 ;; Registers used:
 28718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28719 ;; Tracked objects:
 28720 ;;		On entry : 0/0
 28721 ;;		On exit  : 0/0
 28722 ;;		Unchanged: 0/0
 28723 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28728 ;;Total ram usage:        0 bytes
 28729 ;; Hardware stack levels used: 1
 28730 ;; Hardware stack levels required when called: 8
 28731 ;; This function calls:
 28732 ;;		_clearAllEvents
 28733 ;;		_sendMessage2
 28734 ;;		_sendMessage5
 28735 ;; This function is called by:
 28736 ;;		_teachProcessMessage
 28737 ;; This function uses a non-reentrant model
 28738 ;;
 28739                           
 28740                           	psect	text28
 28741   008068                     __ptext28:
 28742                           	callstack 0
 28743   008068                     _doNnclr:
 28744                           	callstack 116
 28745   008068                     
 28746                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 28747   008068  EC25  F041         	call	_clearAllEvents	;wreg free
 28748   00806C                     
 28749                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28750   00806C  C590  F526         	movff	_nn+1,sendMessage2@data1
 28751   008070  C58F  F527         	movff	_nn,sendMessage2@data2
 28752   008074  0E59               	movlw	89
 28753   008076  EC8A  F040         	call	_sendMessage2
 28754   00807A                     
 28755                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28756   00807A  C590  F526         	movff	_nn+1,sendMessage5@data1
 28757   00807E  C58F  F527         	movff	_nn,sendMessage5@data2
 28758   008082  0E55               	movlw	85
 28759   008084  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28760   008086  0E04               	movlw	4
 28761   008088  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28762   00808A  0E00               	movlw	0
 28763   00808C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28764   00808E  0EAF               	movlw	175
 28765   008090  ECB4  F040         	call	_sendMessage5
 28766   008094  0012               	return		;funcret
 28767   008096                     __end_of_doNnclr:
 28768                           	callstack 0
 28769                           
 28770 ;; *************** function _doNerd *****************
 28771 ;; Defined at:
 28772 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28773 ;; Parameters:    Size  Location     Type
 28774 ;;		None
 28775 ;; Auto vars:     Size  Location     Type
 28776 ;;		None
 28777 ;; Return value:  Size  Location     Type
 28778 ;;                  1    wreg      void 
 28779 ;; Registers used:
 28780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28781 ;; Tracked objects:
 28782 ;;		On entry : 0/0
 28783 ;;		On exit  : 0/0
 28784 ;;		Unchanged: 0/0
 28785 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28790 ;;Total ram usage:        0 bytes
 28791 ;; Hardware stack levels used: 1
 28792 ;; Hardware stack levels required when called: 2
 28793 ;; This function calls:
 28794 ;;		_findServiceIndex
 28795 ;;		_startTimedResponse
 28796 ;; This function is called by:
 28797 ;;		_teachProcessMessage
 28798 ;; This function uses a non-reentrant model
 28799 ;;
 28800                           
 28801                           	psect	text29
 28802   0082DA                     __ptext29:
 28803                           	callstack 0
 28804   0082DA                     _doNerd:
 28805                           	callstack 122
 28806   0082DA                     
 28807                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 28808   0082DA  0E04               	movlw	4
 28809   0082DC  EC0E  F037         	call	_findServiceIndex
 28810   0082E0  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28811   0082E2  0E86               	movlw	low _nerdCallback
 28812   0082E4  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28813   0082E6  0E75               	movlw	high _nerdCallback
 28814   0082E8  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28815   0082EA  0E02               	movlw	2
 28816   0082EC  ECC4  F03C         	call	_startTimedResponse
 28817   0082F0  0012               	return		;funcret
 28818   0082F2                     __end_of_doNerd:
 28819                           	callstack 0
 28820                           
 28821 ;; *************** function _doNenrd *****************
 28822 ;; Defined at:
 28823 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28824 ;; Parameters:    Size  Location     Type
 28825 ;;  index           1    wreg     unsigned char 
 28826 ;; Auto vars:     Size  Location     Type
 28827 ;;  index           1   47[COMRAM] unsigned char 
 28828 ;;  eventNumber     2   45[COMRAM] unsigned short 
 28829 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 28830 ;;  tableIndex      1   48[COMRAM] unsigned char 
 28831 ;; Return value:  Size  Location     Type
 28832 ;;                  1    wreg      void 
 28833 ;; Registers used:
 28834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28835 ;; Tracked objects:
 28836 ;;		On entry : 0/0
 28837 ;;		On exit  : 0/0
 28838 ;;		Unchanged: 0/0
 28839 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28841 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28843 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28844 ;;Total ram usage:        6 bytes
 28845 ;; Hardware stack levels used: 1
 28846 ;; Hardware stack levels required when called: 6
 28847 ;; This function calls:
 28848 ;;		_evtIdxToTableIndex
 28849 ;;		_getEN
 28850 ;;		_getNN
 28851 ;;		_sendMessage3
 28852 ;;		_sendMessage5
 28853 ;; This function is called by:
 28854 ;;		_teachProcessMessage
 28855 ;; This function uses a non-reentrant model
 28856 ;;
 28857                           
 28858                           	psect	text30
 28859   007144                     __ptext30:
 28860                           	callstack 0
 28861   007144                     _doNenrd:
 28862                           	callstack 118
 28863                           
 28864                           ;incstack = 0
 28865                           ;doNenrd@index stored from wreg
 28866   007144  6E30               	movwf	doNenrd@index^(0+1280),c
 28867   007146                     
 28868                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 28869   007146  5030               	movf	doNenrd@index^(0+1280),w,c
 28870   007148  ECB9  F041         	call	_evtIdxToTableIndex
 28871   00714C  6E31               	movwf	doNenrd@tableIndex^(0+1280),c
 28872   00714E                     
 28873                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 255) {
 28874   00714E  2831               	incf	doNenrd@tableIndex^(0+1280),w,c
 28875   007150  A4D8               	btfss	status,2,c
 28876   007152  EFAD  F038         	goto	u6191
 28877   007156  EFAF  F038         	goto	u6190
 28878   00715A                     u6191:
 28879   00715A  EFC7  F038         	goto	l8911
 28880   00715E                     u6190:
 28881   00715E                     
 28882                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 28883   00715E  C590  F526         	movff	_nn+1,sendMessage3@data1
 28884   007162  C58F  F527         	movff	_nn,sendMessage3@data2
 28885   007166  0E08               	movlw	8
 28886   007168  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28887   00716A  0E6F               	movlw	111
 28888   00716C  EC75  F040         	call	_sendMessage3
 28889                           
 28890                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 28891   007170  C590  F526         	movff	_nn+1,sendMessage5@data1
 28892   007174  C58F  F527         	movff	_nn,sendMessage5@data2
 28893   007178  0E72               	movlw	114
 28894   00717A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28895   00717C  0E04               	movlw	4
 28896   00717E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28897   007180  0E08               	movlw	8
 28898   007182  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28899   007184  0EAF               	movlw	175
 28900   007186  ECB4  F040         	call	_sendMessage5
 28901   00718A  EFE2  F038         	goto	l1057
 28902   00718E                     l8911:
 28903                           
 28904                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 28905   00718E  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28906   007190  EC8F  F029         	call	_getNN
 28907   007194  C50D  F52C         	movff	?_getNN,doNenrd@nodeNumber
 28908   007198  C50E  F52D         	movff	?_getNN+1,doNenrd@nodeNumber+1
 28909                           
 28910                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 28911   00719C  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28912   00719E  ECBD  F033         	call	_getEN
 28913   0071A2  C50D  F52E         	movff	?_getEN,doNenrd@eventNumber
 28914   0071A6  C50E  F52F         	movff	?_getEN+1,doNenrd@eventNumber+1
 28915   0071AA                     
 28916                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 28917   0071AA  502D               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 28918   0071AC  6E26               	movwf	sendMessage5@data1^(0+1280),c
 28919   0071AE  C52C  F527         	movff	doNenrd@nodeNumber,sendMessage5@data2
 28920   0071B2  502F               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 28921   0071B4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28922   0071B6  C52E  F529         	movff	doNenrd@eventNumber,sendMessage5@data4
 28923   0071BA  C530  F52A         	movff	doNenrd@index,sendMessage5@data5
 28924   0071BE  0EF2               	movlw	242
 28925   0071C0  ECB4  F040         	call	_sendMessage5
 28926   0071C4                     l1057:
 28927   0071C4  0012               	return		;funcret
 28928   0071C6                     __end_of_doNenrd:
 28929                           	callstack 0
 28930                           
 28931 ;; *************** function _evtIdxToTableIndex *****************
 28932 ;; Defined at:
 28933 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28934 ;; Parameters:    Size  Location     Type
 28935 ;;  evtIdx          1    wreg     unsigned char 
 28936 ;; Auto vars:     Size  Location     Type
 28937 ;;  evtIdx          1    0[COMRAM] unsigned char 
 28938 ;; Return value:  Size  Location     Type
 28939 ;;                  1    wreg      unsigned char 
 28940 ;; Registers used:
 28941 ;;		wreg, status,2, status,0
 28942 ;; Tracked objects:
 28943 ;;		On entry : 0/0
 28944 ;;		On exit  : 0/0
 28945 ;;		Unchanged: 0/0
 28946 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28951 ;;Total ram usage:        1 bytes
 28952 ;; Hardware stack levels used: 1
 28953 ;; Hardware stack levels required when called: 1
 28954 ;; This function calls:
 28955 ;;		Nothing
 28956 ;; This function is called by:
 28957 ;;		_doNenrd
 28958 ;;		_doReval
 28959 ;; This function uses a non-reentrant model
 28960 ;;
 28961                           
 28962                           	psect	text31
 28963   008372                     __ptext31:
 28964                           	callstack 0
 28965   008372                     _evtIdxToTableIndex:
 28966                           	callstack 122
 28967                           
 28968                           ;incstack = 0
 28969                           ;evtIdxToTableIndex@evtIdx stored from wreg
 28970   008372  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 28971   008374                     
 28972                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 28973   008374  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 28974   008376  0012               	return		;funcret
 28975   008378                     __end_of_evtIdxToTableIndex:
 28976                           	callstack 0
 28977                           
 28978 ;; *************** function _doEvuln *****************
 28979 ;; Defined at:
 28980 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28981 ;; Parameters:    Size  Location     Type
 28982 ;;  nodeNumber      2   58[COMRAM] unsigned short 
 28983 ;;  eventNumber     2   60[COMRAM] unsigned short 
 28984 ;; Auto vars:     Size  Location     Type
 28985 ;;  result          1   62[COMRAM] unsigned char 
 28986 ;; Return value:  Size  Location     Type
 28987 ;;                  1    wreg      void 
 28988 ;; Registers used:
 28989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28990 ;; Tracked objects:
 28991 ;;		On entry : 0/0
 28992 ;;		On exit  : 0/0
 28993 ;;		Unchanged: 0/0
 28994 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28998 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28999 ;;Total ram usage:        5 bytes
 29000 ;; Hardware stack levels used: 1
 29001 ;; Hardware stack levels required when called: 8
 29002 ;; This function calls:
 29003 ;;		_removeEvent
 29004 ;;		_sendMessage2
 29005 ;;		_sendMessage3
 29006 ;;		_sendMessage5
 29007 ;; This function is called by:
 29008 ;;		_teachProcessMessage
 29009 ;; This function uses a non-reentrant model
 29010 ;;
 29011                           
 29012                           	psect	text32
 29013   0071C6                     __ptext32:
 29014                           	callstack 0
 29015   0071C6                     _doEvuln:
 29016                           	callstack 116
 29017   0071C6                     
 29018                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 29019   0071C6  C53B  F536         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 29020   0071CA  C53C  F537         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 29021   0071CE  C53D  F538         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 29022   0071D2  C53E  F539         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 29023   0071D6  EC53  F03F         	call	_removeEvent	;wreg free
 29024   0071DA  6E3F               	movwf	doEvuln@result^(0+1280),c
 29025   0071DC                     
 29026                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 29027   0071DC  503F               	movf	doEvuln@result^(0+1280),w,c
 29028   0071DE  B4D8               	btfsc	status,2,c
 29029   0071E0  EFF4  F038         	goto	u6091
 29030   0071E4  EFF6  F038         	goto	u6090
 29031   0071E8                     u6091:
 29032   0071E8  EF0E  F039         	goto	l8821
 29033   0071EC                     u6090:
 29034   0071EC                     
 29035                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 29036   0071EC  C590  F526         	movff	_nn+1,sendMessage3@data1
 29037   0071F0  C58F  F527         	movff	_nn,sendMessage3@data2
 29038   0071F4  C53F  F528         	movff	doEvuln@result,sendMessage3@data3
 29039   0071F8  0E6F               	movlw	111
 29040   0071FA  EC75  F040         	call	_sendMessage3
 29041                           
 29042                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 29043   0071FE  C590  F526         	movff	_nn+1,sendMessage5@data1
 29044   007202  C58F  F527         	movff	_nn,sendMessage5@data2
 29045   007206  0E95               	movlw	149
 29046   007208  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29047   00720A  0E04               	movlw	4
 29048   00720C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29049   00720E  C53F  F52A         	movff	doEvuln@result,sendMessage5@data5
 29050   007212  0EAF               	movlw	175
 29051   007214  ECB4  F040         	call	_sendMessage5
 29052   007218  EF22  F039         	goto	l1083
 29053   00721C                     l8821:
 29054                           
 29055                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29056   00721C  C590  F526         	movff	_nn+1,sendMessage2@data1
 29057   007220  C58F  F527         	movff	_nn,sendMessage2@data2
 29058   007224  0E59               	movlw	89
 29059   007226  EC8A  F040         	call	_sendMessage2
 29060                           
 29061                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29062   00722A  C590  F526         	movff	_nn+1,sendMessage5@data1
 29063   00722E  C58F  F527         	movff	_nn,sendMessage5@data2
 29064   007232  0E95               	movlw	149
 29065   007234  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29066   007236  0E04               	movlw	4
 29067   007238  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29068   00723A  0E00               	movlw	0
 29069   00723C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29070   00723E  0EAF               	movlw	175
 29071   007240  ECB4  F040         	call	_sendMessage5
 29072   007244                     l1083:
 29073   007244  0012               	return		;funcret
 29074   007246                     __end_of_doEvuln:
 29075                           	callstack 0
 29076                           
 29077 ;; *************** function _removeEvent *****************
 29078 ;; Defined at:
 29079 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29080 ;; Parameters:    Size  Location     Type
 29081 ;;  nodeNumber      2   53[COMRAM] unsigned short 
 29082 ;;  eventNumber     2   55[COMRAM] unsigned short 
 29083 ;; Auto vars:     Size  Location     Type
 29084 ;;  tableIndex      1   57[COMRAM] unsigned char 
 29085 ;; Return value:  Size  Location     Type
 29086 ;;                  1    wreg      unsigned char 
 29087 ;; Registers used:
 29088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29089 ;; Tracked objects:
 29090 ;;		On entry : 0/0
 29091 ;;		On exit  : 0/0
 29092 ;;		Unchanged: 0/0
 29093 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29097 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29098 ;;Total ram usage:        5 bytes
 29099 ;; Hardware stack levels used: 1
 29100 ;; Hardware stack levels required when called: 7
 29101 ;; This function calls:
 29102 ;;		_findEvent
 29103 ;;		_removeTableEntry
 29104 ;; This function is called by:
 29105 ;;		_doEvuln
 29106 ;; This function uses a non-reentrant model
 29107 ;;
 29108                           
 29109                           	psect	text33
 29110   007EA6                     __ptext33:
 29111                           	callstack 0
 29112   007EA6                     _removeEvent:
 29113                           	callstack 116
 29114   007EA6                     
 29115                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 29116   007EA6  C536  F522         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 29117   007EAA  C537  F523         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 29118   007EAE  C538  F524         	movff	removeEvent@eventNumber,findEvent@eventNumber
 29119   007EB2  C539  F525         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 29120   007EB6  EC0F  F032         	call	_findEvent	;wreg free
 29121   007EBA  6E3A               	movwf	removeEvent@tableIndex^(0+1280),c
 29122   007EBC                     
 29123                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 29124   007EBC  283A               	incf	removeEvent@tableIndex^(0+1280),w,c
 29125   007EBE  A4D8               	btfss	status,2,c
 29126   007EC0  EF64  F03F         	goto	u5651
 29127   007EC4  EF66  F03F         	goto	u5650
 29128   007EC8                     u5651:
 29129   007EC8  EF69  F03F         	goto	l8275
 29130   007ECC                     u5650:
 29131   007ECC  0E07               	movlw	7
 29132   007ECE  EF6C  F03F         	goto	l1103
 29133   007ED2                     l8275:
 29134                           
 29135                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 29136   007ED2  503A               	movf	removeEvent@tableIndex^(0+1280),w,c
 29137   007ED4  EC1A  F022         	call	_removeTableEntry
 29138   007ED8                     l1103:
 29139   007ED8  0012               	return		;funcret
 29140   007EDA                     __end_of_removeEvent:
 29141                           	callstack 0
 29142                           
 29143 ;; *************** function _doEvlrn *****************
 29144 ;; Defined at:
 29145 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29146 ;; Parameters:    Size  Location     Type
 29147 ;;  nodeNumber      2   77[COMRAM] unsigned short 
 29148 ;;  eventNumber     2   79[COMRAM] unsigned short 
 29149 ;;  evNum           1   81[COMRAM] unsigned char 
 29150 ;;  evVal           1   82[COMRAM] unsigned char 
 29151 ;; Auto vars:     Size  Location     Type
 29152 ;;		None
 29153 ;; Return value:  Size  Location     Type
 29154 ;;                  1    wreg      void 
 29155 ;; Registers used:
 29156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29157 ;; Tracked objects:
 29158 ;;		On entry : 0/0
 29159 ;;		On exit  : 0/0
 29160 ;;		Unchanged: 0/0
 29161 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29166 ;;Total ram usage:        6 bytes
 29167 ;; Hardware stack levels used: 1
 29168 ;; Hardware stack levels required when called: 9
 29169 ;; This function calls:
 29170 ;;		_APP_addEvent
 29171 ;;		_sendMessage2
 29172 ;;		_sendMessage3
 29173 ;;		_sendMessage5
 29174 ;; This function is called by:
 29175 ;;		_teachProcessMessage
 29176 ;; This function uses a non-reentrant model
 29177 ;;
 29178                           
 29179                           	psect	text34
 29180   005ECC                     __ptext34:
 29181                           	callstack 0
 29182   005ECC                     _doEvlrn:
 29183                           	callstack 115
 29184   005ECC                     
 29185                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 29186   005ECC  0652               	decf	doEvlrn@evNum^(0+1280),f,c
 29187   005ECE                     
 29188                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 252) {
 29189   005ECE  0EFB               	movlw	251
 29190   005ED0  6452               	cpfsgt	doEvlrn@evNum^(0+1280),c
 29191   005ED2  EF6D  F02F         	goto	u6071
 29192   005ED6  EF6F  F02F         	goto	u6070
 29193   005EDA                     u6071:
 29194   005EDA  EF87  F02F         	goto	l8797
 29195   005EDE                     u6070:
 29196   005EDE                     
 29197                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 29198   005EDE  C590  F526         	movff	_nn+1,sendMessage3@data1
 29199   005EE2  C58F  F527         	movff	_nn,sendMessage3@data2
 29200   005EE6  0E06               	movlw	6
 29201   005EE8  6E28               	movwf	sendMessage3@data3^(0+1280),c
 29202   005EEA  0E6F               	movlw	111
 29203   005EEC  EC75  F040         	call	_sendMessage3
 29204                           
 29205                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 29206   005EF0  C590  F526         	movff	_nn+1,sendMessage5@data1
 29207   005EF4  C58F  F527         	movff	_nn,sendMessage5@data2
 29208   005EF8  0ED2               	movlw	210
 29209   005EFA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29210   005EFC  0E04               	movlw	4
 29211   005EFE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29212   005F00  0E06               	movlw	6
 29213   005F02  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29214   005F04  0EAF               	movlw	175
 29215   005F06  ECB4  F040         	call	_sendMessage5
 29216   005F0A  EFCE  F02F         	goto	l1070
 29217   005F0E                     l8797:
 29218                           
 29219                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 29220   005F0E  C54E  F547         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 29221   005F12  C54F  F548         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 29222   005F16  C550  F549         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 29223   005F1A  C551  F54A         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 29224   005F1E  C552  F54B         	movff	doEvlrn@evNum,APP_addEvent@evNum
 29225   005F22  C553  F54C         	movff	doEvlrn@evVal,APP_addEvent@evVal
 29226   005F26  0E00               	movlw	0
 29227   005F28  6E4D               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 29228   005F2A  ECF2  F040         	call	_APP_addEvent	;wreg free
 29229   005F2E                     
 29230                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 29231   005F2E  0105               	movlb	5	; () banked
 29232   005F30  51A3               	movf	_errno& (0+255),w,b
 29233   005F32  B4D8               	btfsc	status,2,c
 29234   005F34  EF9E  F02F         	goto	u6081
 29235   005F38  EFA0  F02F         	goto	u6080
 29236   005F3C                     u6081:
 29237   005F3C  EFB8  F02F         	goto	l8805
 29238   005F40                     u6080:
 29239   005F40                     
 29240                           ; BSR set to: 5
 29241                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 29242   005F40  C590  F526         	movff	_nn+1,sendMessage3@data1
 29243   005F44  C58F  F527         	movff	_nn,sendMessage3@data2
 29244   005F48  C5A3  F528         	movff	_errno,sendMessage3@data3
 29245   005F4C  0E6F               	movlw	111
 29246   005F4E  EC75  F040         	call	_sendMessage3
 29247                           
 29248                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 29249   005F52  C590  F526         	movff	_nn+1,sendMessage5@data1
 29250   005F56  C58F  F527         	movff	_nn,sendMessage5@data2
 29251   005F5A  0ED2               	movlw	210
 29252   005F5C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29253   005F5E  0E04               	movlw	4
 29254   005F60  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29255   005F62  C5A3  F52A         	movff	_errno,sendMessage5@data5
 29256   005F66  0EAF               	movlw	175
 29257   005F68  ECB4  F040         	call	_sendMessage5
 29258   005F6C  EFCE  F02F         	goto	l1070
 29259   005F70                     l8805:
 29260                           
 29261                           ; BSR set to: 5
 29262                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 29263   005F70  4BCE               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 29264   005F72  2BCF               	incf	(_teachDiagnostics+3)& (0+255),f,b
 29265   005F74                     
 29266                           ; BSR set to: 5
 29267                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29268   005F74  C590  F526         	movff	_nn+1,sendMessage2@data1
 29269   005F78  C58F  F527         	movff	_nn,sendMessage2@data2
 29270   005F7C  0E59               	movlw	89
 29271   005F7E  EC8A  F040         	call	_sendMessage2
 29272   005F82                     
 29273                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29274   005F82  C590  F526         	movff	_nn+1,sendMessage5@data1
 29275   005F86  C58F  F527         	movff	_nn,sendMessage5@data2
 29276   005F8A  0ED2               	movlw	210
 29277   005F8C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29278   005F8E  0E04               	movlw	4
 29279   005F90  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29280   005F92  0E00               	movlw	0
 29281   005F94  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29282   005F96  0EAF               	movlw	175
 29283   005F98  ECB4  F040         	call	_sendMessage5
 29284   005F9C                     l1070:
 29285   005F9C  0012               	return		;funcret
 29286   005F9E                     __end_of_doEvlrn:
 29287                           	callstack 0
 29288                           
 29289 ;; *************** function _APP_addEvent *****************
 29290 ;; Defined at:
 29291 ;;		line 93 in file "../canargb_events.c"
 29292 ;; Parameters:    Size  Location     Type
 29293 ;;  nodeNumber      2   70[COMRAM] unsigned short 
 29294 ;;  eventNumber     2   72[COMRAM] unsigned short 
 29295 ;;  evNum           1   74[COMRAM] unsigned char 
 29296 ;;  evVal           1   75[COMRAM] unsigned char 
 29297 ;;  forceOwnNN      1   76[COMRAM] enum E23257
 29298 ;; Auto vars:     Size  Location     Type
 29299 ;;		None
 29300 ;; Return value:  Size  Location     Type
 29301 ;;                  1    wreg      unsigned char 
 29302 ;; Registers used:
 29303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29304 ;; Tracked objects:
 29305 ;;		On entry : 0/0
 29306 ;;		On exit  : 0/0
 29307 ;;		Unchanged: 0/0
 29308 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29309 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29312 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29313 ;;Total ram usage:        7 bytes
 29314 ;; Hardware stack levels used: 1
 29315 ;; Hardware stack levels required when called: 8
 29316 ;; This function calls:
 29317 ;;		_addEvent
 29318 ;; This function is called by:
 29319 ;;		_doEvlrn
 29320 ;; This function uses a non-reentrant model
 29321 ;;
 29322                           
 29323                           	psect	text35
 29324   0081E4                     __ptext35:
 29325                           	callstack 0
 29326   0081E4                     _APP_addEvent:
 29327                           	callstack 115
 29328   0081E4                     
 29329                           ;../canargb_events.c: 94:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 29330   0081E4  C547  F52F         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 29331   0081E8  C548  F530         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 29332   0081EC  C549  F531         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 29333   0081F0  C54A  F532         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 29334   0081F4  C54B  F533         	movff	APP_addEvent@evNum,addEvent@evNum
 29335   0081F8  C54C  F534         	movff	APP_addEvent@evVal,addEvent@evVal
 29336   0081FC  C54D  F535         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 29337   008200  ECE8  F01C         	call	_addEvent	;wreg free
 29338   008204  0012               	return		;funcret
 29339   008206                     __end_of_APP_addEvent:
 29340                           	callstack 0
 29341                           
 29342 ;; *************** function _addEvent *****************
 29343 ;; Defined at:
 29344 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29345 ;; Parameters:    Size  Location     Type
 29346 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 29347 ;;  eventNumber     2   48[COMRAM] unsigned short 
 29348 ;;  evNum           1   50[COMRAM] unsigned char 
 29349 ;;  evVal           1   51[COMRAM] unsigned char 
 29350 ;;  forceOwnNN      1   52[COMRAM] enum E23307
 29351 ;; Auto vars:     Size  Location     Type
 29352 ;;  e               1   68[COMRAM] unsigned char 
 29353 ;;  en              2   66[COMRAM] unsigned short 
 29354 ;;  tableIndex      1   69[COMRAM] unsigned char 
 29355 ;; Return value:  Size  Location     Type
 29356 ;;                  1    wreg      unsigned char 
 29357 ;; Registers used:
 29358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29359 ;; Tracked objects:
 29360 ;;		On entry : 0/0
 29361 ;;		On exit  : 0/0
 29362 ;;		Unchanged: 0/0
 29363 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29364 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29365 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29366 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29367 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29368 ;;Total ram usage:       24 bytes
 29369 ;; Hardware stack levels used: 1
 29370 ;; Hardware stack levels required when called: 7
 29371 ;; This function calls:
 29372 ;;		_findEvent
 29373 ;;		_flushFlashBlock
 29374 ;;		_getEN
 29375 ;;		_rebuildHashtable
 29376 ;;		_writeEv
 29377 ;;		_writeNVM
 29378 ;; This function is called by:
 29379 ;;		_APP_addEvent
 29380 ;; This function uses a non-reentrant model
 29381 ;;
 29382                           
 29383                           	psect	text36
 29384   0039D0                     __ptext36:
 29385                           	callstack 0
 29386   0039D0                     _addEvent:
 29387                           	callstack 115
 29388   0039D0                     
 29389                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 29390   0039D0  C52F  F522         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 29391   0039D4  C530  F523         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 29392   0039D8  C531  F524         	movff	addEvent@eventNumber,findEvent@eventNumber
 29393   0039DC  C532  F525         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 29394   0039E0  EC0F  F032         	call	_findEvent	;wreg free
 29395   0039E4  6E46               	movwf	addEvent@tableIndex^(0+1280),c
 29396   0039E6                     
 29397                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 29398   0039E6  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29399   0039E8  A4D8               	btfss	status,2,c
 29400   0039EA  EFF9  F01C         	goto	u5141
 29401   0039EE  EFFB  F01C         	goto	u5140
 29402   0039F2                     u5141:
 29403   0039F2  EF42  F01E         	goto	l7889
 29404   0039F6                     u5140:
 29405   0039F6                     
 29406                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 29407   0039F6  0E04               	movlw	4
 29408   0039F8  0105               	movlb	5	; () banked
 29409   0039FA  6FA3               	movwf	_errno& (0+255),b
 29410   0039FC                     
 29411                           ; BSR set to: 5
 29412                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<255;
      +                           tableIndex++) {
 29413   0039FC  6A46               	clrf	addEvent@tableIndex^(0+1280),c
 29414   0039FE                     l7851:
 29415   0039FE  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29416   003A00  A4D8               	btfss	status,2,c
 29417   003A02  EF05  F01D         	goto	u5151
 29418   003A06  EF07  F01D         	goto	u5150
 29419   003A0A                     u5151:
 29420   003A0A  EF09  F01D         	goto	l7855
 29421   003A0E                     u5150:
 29422   003A0E  EF36  F01E         	goto	l7883
 29423   003A12                     l7855:
 29424                           
 29425                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 29426   003A12  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29427   003A14  ECBD  F033         	call	_getEN
 29428   003A18  C50D  F543         	movff	?_getEN,addEvent@en
 29429   003A1C  C50E  F544         	movff	?_getEN+1,addEvent@en+1
 29430   003A20                     
 29431                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 29432   003A20  5043               	movf	addEvent@en^(0+1280),w,c
 29433   003A22  1044               	iorwf	(addEvent@en+1)^(0+1280),w,c
 29434   003A24  A4D8               	btfss	status,2,c
 29435   003A26  EF17  F01D         	goto	u5161
 29436   003A2A  EF19  F01D         	goto	u5160
 29437   003A2E                     u5161:
 29438   003A2E  EF33  F01E         	goto	l7879
 29439   003A32                     u5160:
 29440   003A32                     
 29441                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof
      +                          (Event) + 1 + 252)*tableIndex+1, nodeNumber&0xFF);
 29442   003A32  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29443   003A34  6E36               	movwf	??_addEvent^(0+1280),c
 29444   003A36  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29445   003A38  0E01               	movlw	1
 29446   003A3A  0236               	mulwf	??_addEvent^(0+1280),c
 29447   003A3C  C4F3 F538          	movff	prodl,??_addEvent+2
 29448   003A40  C4F4 F539          	movff	prodh,??_addEvent+3
 29449   003A44  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29450   003A46  50F3               	movf	prodl,w,c
 29451   003A48  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29452   003A4A  0E01               	movlw	1
 29453   003A4C  0236               	mulwf	??_addEvent^(0+1280),c
 29454   003A4E  50F3               	movf	prodl,w,c
 29455   003A50  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29456   003A52  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29457   003A56  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29458   003A5A  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29459   003A5C  0E01               	movlw	1
 29460   003A5E  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29461   003A60  6E0E               	movwf	writeNVM@index^(0+1280),c
 29462   003A62  0E00               	movlw	0
 29463   003A64  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29464   003A66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29465   003A68  0E01               	movlw	1
 29466   003A6A  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29467   003A6C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29468   003A6E  C52F  F511         	movff	addEvent@nodeNumber,writeNVM@value
 29469   003A72  0E01               	movlw	1
 29470   003A74  EC64  F03C         	call	_writeNVM
 29471                           
 29472                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0, nodeNumber>>8);
 29473   003A78  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29474   003A7A  6E36               	movwf	??_addEvent^(0+1280),c
 29475   003A7C  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29476   003A7E  0E01               	movlw	1
 29477   003A80  0236               	mulwf	??_addEvent^(0+1280),c
 29478   003A82  C4F3 F538          	movff	prodl,??_addEvent+2
 29479   003A86  C4F4 F539          	movff	prodh,??_addEvent+3
 29480   003A8A  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29481   003A8C  50F3               	movf	prodl,w,c
 29482   003A8E  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29483   003A90  0E01               	movlw	1
 29484   003A92  0236               	mulwf	??_addEvent^(0+1280),c
 29485   003A94  50F3               	movf	prodl,w,c
 29486   003A96  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29487   003A98  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29488   003A9C  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29489   003AA0  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29490   003AA2  0E00               	movlw	0
 29491   003AA4  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29492   003AA6  6E0E               	movwf	writeNVM@index^(0+1280),c
 29493   003AA8  0E00               	movlw	0
 29494   003AAA  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29495   003AAC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29496   003AAE  0E01               	movlw	1
 29497   003AB0  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29498   003AB2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29499   003AB4  5030               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 29500   003AB6  6E11               	movwf	writeNVM@value^(0+1280),c
 29501   003AB8  0E01               	movlw	1
 29502   003ABA  EC64  F03C         	call	_writeNVM
 29503                           
 29504                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3, eventNumber&0xFF);
 29505   003ABE  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29506   003AC0  6E36               	movwf	??_addEvent^(0+1280),c
 29507   003AC2  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29508   003AC4  0E01               	movlw	1
 29509   003AC6  0236               	mulwf	??_addEvent^(0+1280),c
 29510   003AC8  C4F3 F538          	movff	prodl,??_addEvent+2
 29511   003ACC  C4F4 F539          	movff	prodh,??_addEvent+3
 29512   003AD0  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29513   003AD2  50F3               	movf	prodl,w,c
 29514   003AD4  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29515   003AD6  0E01               	movlw	1
 29516   003AD8  0236               	mulwf	??_addEvent^(0+1280),c
 29517   003ADA  50F3               	movf	prodl,w,c
 29518   003ADC  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29519   003ADE  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29520   003AE2  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29521   003AE6  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29522   003AE8  0E03               	movlw	3
 29523   003AEA  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29524   003AEC  6E0E               	movwf	writeNVM@index^(0+1280),c
 29525   003AEE  0E00               	movlw	0
 29526   003AF0  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29527   003AF2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29528   003AF4  0E01               	movlw	1
 29529   003AF6  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29530   003AF8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29531   003AFA  C531  F511         	movff	addEvent@eventNumber,writeNVM@value
 29532   003AFE  0E01               	movlw	1
 29533   003B00  EC64  F03C         	call	_writeNVM
 29534                           
 29535                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2, eventNumber>>8);
 29536   003B04  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29537   003B06  6E36               	movwf	??_addEvent^(0+1280),c
 29538   003B08  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29539   003B0A  0E01               	movlw	1
 29540   003B0C  0236               	mulwf	??_addEvent^(0+1280),c
 29541   003B0E  C4F3 F538          	movff	prodl,??_addEvent+2
 29542   003B12  C4F4 F539          	movff	prodh,??_addEvent+3
 29543   003B16  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29544   003B18  50F3               	movf	prodl,w,c
 29545   003B1A  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29546   003B1C  0E01               	movlw	1
 29547   003B1E  0236               	mulwf	??_addEvent^(0+1280),c
 29548   003B20  50F3               	movf	prodl,w,c
 29549   003B22  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29550   003B24  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29551   003B28  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29552   003B2C  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29553   003B2E  0E02               	movlw	2
 29554   003B30  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29555   003B32  6E0E               	movwf	writeNVM@index^(0+1280),c
 29556   003B34  0E00               	movlw	0
 29557   003B36  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29558   003B38  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29559   003B3A  0E01               	movlw	1
 29560   003B3C  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29561   003B3E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29562   003B40  5032               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 29563   003B42  6E11               	movwf	writeNVM@value^(0+1280),c
 29564   003B44  0E01               	movlw	1
 29565   003B46  EC64  F03C         	call	_writeNVM
 29566   003B4A                     
 29567                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 29568   003B4A  5035               	movf	addEvent@forceOwnNN^(0+1280),w,c
 29569   003B4C  B4D8               	btfsc	status,2,c
 29570   003B4E  EFAB  F01D         	goto	u5171
 29571   003B52  EFAD  F01D         	goto	u5170
 29572   003B56                     u5171:
 29573   003B56  EFD2  F01D         	goto	l7865
 29574   003B5A                     u5170:
 29575   003B5A                     
 29576                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 1);
 29577   003B5A  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29578   003B5C  6E36               	movwf	??_addEvent^(0+1280),c
 29579   003B5E  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29580   003B60  0E01               	movlw	1
 29581   003B62  0236               	mulwf	??_addEvent^(0+1280),c
 29582   003B64  C4F3 F538          	movff	prodl,??_addEvent+2
 29583   003B68  C4F4 F539          	movff	prodh,??_addEvent+3
 29584   003B6C  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29585   003B6E  50F3               	movf	prodl,w,c
 29586   003B70  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29587   003B72  0E01               	movlw	1
 29588   003B74  0236               	mulwf	??_addEvent^(0+1280),c
 29589   003B76  50F3               	movf	prodl,w,c
 29590   003B78  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29591   003B7A  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29592   003B7E  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29593   003B82  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29594   003B84  0E04               	movlw	4
 29595   003B86  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29596   003B88  6E0E               	movwf	writeNVM@index^(0+1280),c
 29597   003B8A  0E00               	movlw	0
 29598   003B8C  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29599   003B8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29600   003B90  0E01               	movlw	1
 29601   003B92  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29602   003B94  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29603   003B96  0E01               	movlw	1
 29604   003B98  6E11               	movwf	writeNVM@value^(0+1280),c
 29605   003B9A  0E01               	movlw	1
 29606   003B9C  EC64  F03C         	call	_writeNVM
 29607                           
 29608                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 29609   003BA0  EFF5  F01D         	goto	l7867
 29610   003BA4                     l7865:
 29611                           
 29612                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 0);
 29613   003BA4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29614   003BA6  6E36               	movwf	??_addEvent^(0+1280),c
 29615   003BA8  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29616   003BAA  0E01               	movlw	1
 29617   003BAC  0236               	mulwf	??_addEvent^(0+1280),c
 29618   003BAE  C4F3 F538          	movff	prodl,??_addEvent+2
 29619   003BB2  C4F4 F539          	movff	prodh,??_addEvent+3
 29620   003BB6  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29621   003BB8  50F3               	movf	prodl,w,c
 29622   003BBA  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29623   003BBC  0E01               	movlw	1
 29624   003BBE  0236               	mulwf	??_addEvent^(0+1280),c
 29625   003BC0  50F3               	movf	prodl,w,c
 29626   003BC2  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29627   003BC4  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29628   003BC8  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29629   003BCC  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29630   003BCE  0E04               	movlw	4
 29631   003BD0  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29632   003BD2  6E0E               	movwf	writeNVM@index^(0+1280),c
 29633   003BD4  0E00               	movlw	0
 29634   003BD6  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29635   003BD8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29636   003BDA  0E01               	movlw	1
 29637   003BDC  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29638   003BDE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29639   003BE0  0E00               	movlw	0
 29640   003BE2  6E11               	movwf	writeNVM@value^(0+1280),c
 29641   003BE4  0E01               	movlw	1
 29642   003BE6  EC64  F03C         	call	_writeNVM
 29643   003BEA                     l7867:
 29644                           
 29645                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 248; e++) 
      +                          {
 29646   003BEA  6A45               	clrf	addEvent@e^(0+1280),c
 29647   003BEC                     l7873:
 29648                           
 29649                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +e, 0);
 29650   003BEC  5045               	movf	addEvent@e^(0+1280),w,c
 29651   003BEE  6E36               	movwf	??_addEvent^(0+1280),c
 29652   003BF0  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29653   003BF2  6A38               	clrf	(??_addEvent+2)^(0+1280),c
 29654   003BF4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29655   003BF6  6E39               	movwf	(??_addEvent+3)^(0+1280),c
 29656   003BF8  6A3A               	clrf	(??_addEvent+4)^(0+1280),c
 29657   003BFA  0E01               	movlw	1
 29658   003BFC  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29659   003BFE  C4F3 F53B          	movff	prodl,??_addEvent+5
 29660   003C02  C4F4 F53C          	movff	prodh,??_addEvent+6
 29661   003C06  023A               	mulwf	(??_addEvent+4)^(0+1280),c
 29662   003C08  50F3               	movf	prodl,w,c
 29663   003C0A  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29664   003C0C  0E01               	movlw	1
 29665   003C0E  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29666   003C10  50F3               	movf	prodl,w,c
 29667   003C12  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29668   003C14  C53B  F53D         	movff	??_addEvent+5,??_addEvent+7
 29669   003C18  C53C  F53E         	movff	??_addEvent+6,??_addEvent+8
 29670   003C1C  6A3F               	clrf	(??_addEvent+9)^(0+1280),c
 29671   003C1E  5036               	movf	??_addEvent^(0+1280),w,c
 29672   003C20  243D               	addwf	(??_addEvent+7)^(0+1280),w,c
 29673   003C22  6E40               	movwf	(??_addEvent+10)^(0+1280),c
 29674   003C24  5037               	movf	(??_addEvent+1)^(0+1280),w,c
 29675   003C26  203E               	addwfc	(??_addEvent+8)^(0+1280),w,c
 29676   003C28  6E41               	movwf	(??_addEvent+11)^(0+1280),c
 29677   003C2A  5038               	movf	(??_addEvent+2)^(0+1280),w,c
 29678   003C2C  203F               	addwfc	(??_addEvent+9)^(0+1280),w,c
 29679   003C2E  6E42               	movwf	(??_addEvent+12)^(0+1280),c
 29680   003C30  0E05               	movlw	5
 29681   003C32  2440               	addwf	(??_addEvent+10)^(0+1280),w,c
 29682   003C34  6E0E               	movwf	writeNVM@index^(0+1280),c
 29683   003C36  0E00               	movlw	0
 29684   003C38  2041               	addwfc	(??_addEvent+11)^(0+1280),w,c
 29685   003C3A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29686   003C3C  0E01               	movlw	1
 29687   003C3E  2042               	addwfc	(??_addEvent+12)^(0+1280),w,c
 29688   003C40  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29689   003C42  0E00               	movlw	0
 29690   003C44  6E11               	movwf	writeNVM@value^(0+1280),c
 29691   003C46  0E01               	movlw	1
 29692   003C48  EC64  F03C         	call	_writeNVM
 29693   003C4C                     
 29694                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 29695   003C4C  2A45               	incf	addEvent@e^(0+1280),f,c
 29696   003C4E  0EF7               	movlw	247
 29697   003C50  6445               	cpfsgt	addEvent@e^(0+1280),c
 29698   003C52  EF2D  F01E         	goto	u5181
 29699   003C56  EF2F  F01E         	goto	u5180
 29700   003C5A                     u5181:
 29701   003C5A  EFF6  F01D         	goto	l7873
 29702   003C5E                     u5180:
 29703   003C5E                     
 29704                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 29705   003C5E  0105               	movlb	5	; () banked
 29706   003C60  6BA3               	clrf	_errno& (0+255),b
 29707                           
 29708                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 29709   003C62  EF36  F01E         	goto	l7883
 29710   003C66                     l7879:
 29711                           
 29712                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 29713   003C66  2A46               	incf	addEvent@tableIndex^(0+1280),f,c
 29714   003C68  EFFF  F01C         	goto	l7851
 29715   003C6C                     l7883:
 29716                           
 29717                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 29718   003C6C  0105               	movlb	5	; () banked
 29719   003C6E  51A3               	movf	_errno& (0+255),w,b
 29720   003C70  B4D8               	btfsc	status,2,c
 29721   003C72  EF3D  F01E         	goto	u5191
 29722   003C76  EF3F  F01E         	goto	u5190
 29723   003C7A                     u5191:
 29724   003C7A  EF42  F01E         	goto	l7889
 29725   003C7E                     u5190:
 29726   003C7E                     l7885:
 29727                           
 29728                           ; BSR set to: 5
 29729                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 29730   003C7E  0EFF               	movlw	255
 29731   003C80  EF5B  F01E         	goto	l1120
 29732   003C84                     l7889:
 29733                           
 29734                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 29735   003C84  C533  F515         	movff	addEvent@evNum,writeEv@evNum
 29736   003C88  C534  F516         	movff	addEvent@evVal,writeEv@evVal
 29737   003C8C  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29738   003C8E  EC35  F036         	call	_writeEv
 29739   003C92  0900               	iorlw	0
 29740   003C94  B4D8               	btfsc	status,2,c
 29741   003C96  EF4F  F01E         	goto	u5201
 29742   003C9A  EF51  F01E         	goto	u5200
 29743   003C9E                     u5201:
 29744   003C9E  EF56  F01E         	goto	l7897
 29745   003CA2                     u5200:
 29746   003CA2                     
 29747                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 29748   003CA2  0E06               	movlw	6
 29749   003CA4  0105               	movlb	5	; () banked
 29750   003CA6  6FA3               	movwf	_errno& (0+255),b
 29751   003CA8  EF3F  F01E         	goto	l7885
 29752   003CAC                     l7897:
 29753                           
 29754                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 29755   003CAC  EC01  F035         	call	_flushFlashBlock	;wreg free
 29756   003CB0                     
 29757                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 29758   003CB0  ECB5  F02B         	call	_rebuildHashtable	;wreg free
 29759   003CB4                     
 29760                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 29761   003CB4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29762   003CB6                     l1120:
 29763   003CB6  0012               	return		;funcret
 29764   003CB8                     __end_of_addEvent:
 29765                           	callstack 0
 29766                           
 29767 ;; *************** function _writeEv *****************
 29768 ;; Defined at:
 29769 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29770 ;; Parameters:    Size  Location     Type
 29771 ;;  tableIndex      1    wreg     unsigned char 
 29772 ;;  evNum           1   20[COMRAM] unsigned char 
 29773 ;;  evVal           1   21[COMRAM] unsigned char 
 29774 ;; Auto vars:     Size  Location     Type
 29775 ;;  tableIndex      1   35[COMRAM] unsigned char 
 29776 ;; Return value:  Size  Location     Type
 29777 ;;                  1    wreg      unsigned char 
 29778 ;; Registers used:
 29779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29780 ;; Tracked objects:
 29781 ;;		On entry : 0/0
 29782 ;;		On exit  : 0/0
 29783 ;;		Unchanged: 0/0
 29784 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29787 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29788 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29789 ;;Total ram usage:       16 bytes
 29790 ;; Hardware stack levels used: 1
 29791 ;; Hardware stack levels required when called: 6
 29792 ;; This function calls:
 29793 ;;		_writeNVM
 29794 ;; This function is called by:
 29795 ;;		_addEvent
 29796 ;; This function uses a non-reentrant model
 29797 ;;
 29798                           
 29799                           	psect	text37
 29800   006C6A                     __ptext37:
 29801                           	callstack 0
 29802   006C6A                     _writeEv:
 29803                           	callstack 115
 29804                           
 29805                           ;incstack = 0
 29806                           ;writeEv@tableIndex stored from wreg
 29807   006C6A  6E24               	movwf	writeEv@tableIndex^(0+1280),c
 29808   006C6C                     
 29809                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 252) {
 29810   006C6C  0EFB               	movlw	251
 29811   006C6E  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 29812   006C70  EF3C  F036         	goto	u5081
 29813   006C74  EF3E  F036         	goto	u5080
 29814   006C78                     u5081:
 29815   006C78  EF41  F036         	goto	l7793
 29816   006C7C                     u5080:
 29817   006C7C                     
 29818                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 29819   006C7C  0E06               	movlw	6
 29820   006C7E  EF7D  F036         	goto	l1132
 29821   006C82                     l7793:
 29822                           
 29823                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 255) {
 29824   006C82  2824               	incf	writeEv@tableIndex^(0+1280),w,c
 29825   006C84  A4D8               	btfss	status,2,c
 29826   006C86  EF47  F036         	goto	u5091
 29827   006C8A  EF49  F036         	goto	u5090
 29828   006C8E                     u5091:
 29829   006C8E  EF4C  F036         	goto	l7799
 29830   006C92                     u5090:
 29831   006C92                     
 29832                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 29833   006C92  0E08               	movlw	8
 29834   006C94  EF7D  F036         	goto	l1132
 29835   006C98                     l7799:
 29836                           
 29837                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex+5 +evNum, evVal);
 29838   006C98  5015               	movf	writeEv@evNum^(0+1280),w,c
 29839   006C9A  6E17               	movwf	??_writeEv^(0+1280),c
 29840   006C9C  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 29841   006C9E  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 29842   006CA0  5024               	movf	writeEv@tableIndex^(0+1280),w,c
 29843   006CA2  6E1A               	movwf	(??_writeEv+3)^(0+1280),c
 29844   006CA4  6A1B               	clrf	(??_writeEv+4)^(0+1280),c
 29845   006CA6  0E01               	movlw	1
 29846   006CA8  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29847   006CAA  C4F3 F51C          	movff	prodl,??_writeEv+5
 29848   006CAE  C4F4 F51D          	movff	prodh,??_writeEv+6
 29849   006CB2  021B               	mulwf	(??_writeEv+4)^(0+1280),c
 29850   006CB4  50F3               	movf	prodl,w,c
 29851   006CB6  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29852   006CB8  0E01               	movlw	1
 29853   006CBA  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29854   006CBC  50F3               	movf	prodl,w,c
 29855   006CBE  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29856   006CC0  C51C  F51E         	movff	??_writeEv+5,??_writeEv+7
 29857   006CC4  C51D  F51F         	movff	??_writeEv+6,??_writeEv+8
 29858   006CC8  6A20               	clrf	(??_writeEv+9)^(0+1280),c
 29859   006CCA  5017               	movf	??_writeEv^(0+1280),w,c
 29860   006CCC  241E               	addwf	(??_writeEv+7)^(0+1280),w,c
 29861   006CCE  6E21               	movwf	(??_writeEv+10)^(0+1280),c
 29862   006CD0  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 29863   006CD2  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 29864   006CD4  6E22               	movwf	(??_writeEv+11)^(0+1280),c
 29865   006CD6  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 29866   006CD8  2020               	addwfc	(??_writeEv+9)^(0+1280),w,c
 29867   006CDA  6E23               	movwf	(??_writeEv+12)^(0+1280),c
 29868   006CDC  0E05               	movlw	5
 29869   006CDE  2421               	addwf	(??_writeEv+10)^(0+1280),w,c
 29870   006CE0  6E0E               	movwf	writeNVM@index^(0+1280),c
 29871   006CE2  0E00               	movlw	0
 29872   006CE4  2022               	addwfc	(??_writeEv+11)^(0+1280),w,c
 29873   006CE6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29874   006CE8  0E01               	movlw	1
 29875   006CEA  2023               	addwfc	(??_writeEv+12)^(0+1280),w,c
 29876   006CEC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29877   006CEE  C516  F511         	movff	writeEv@evVal,writeNVM@value
 29878   006CF2  0E01               	movlw	1
 29879   006CF4  EC64  F03C         	call	_writeNVM
 29880   006CF8                     
 29881                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 29882   006CF8  0E00               	movlw	0
 29883   006CFA                     l1132:
 29884   006CFA  0012               	return		;funcret
 29885   006CFC                     __end_of_writeEv:
 29886                           	callstack 0
 29887                           
 29888 ;; *************** function _pollTimedResponse *****************
 29889 ;; Defined at:
 29890 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 29891 ;; Parameters:    Size  Location     Type
 29892 ;;		None
 29893 ;; Auto vars:     Size  Location     Type
 29894 ;;  result          1   62[COMRAM] enum E23467
 29895 ;; Return value:  Size  Location     Type
 29896 ;;                  1    wreg      void 
 29897 ;; Registers used:
 29898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29899 ;; Tracked objects:
 29900 ;;		On entry : 0/0
 29901 ;;		On exit  : 0/0
 29902 ;;		Unchanged: 0/0
 29903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29908 ;;Total ram usage:        3 bytes
 29909 ;; Hardware stack levels used: 1
 29910 ;; Hardware stack levels required when called: 7
 29911 ;; This function calls:
 29912 ;;		NULL
 29913 ;;		_mnsTRallDiagnosticsCallback
 29914 ;;		_mnsTRrqnpnCallback
 29915 ;;		_mnsTRserviceDiscoveryCallback
 29916 ;;		_nerdCallback
 29917 ;;		_nvTRnvrdCallback
 29918 ;;		_reqevCallback
 29919 ;; This function is called by:
 29920 ;;		_poll
 29921 ;; This function uses a non-reentrant model
 29922 ;;
 29923                           
 29924                           	psect	text38
 29925   0061E4                     __ptext38:
 29926                           	callstack 0
 29927   0061E4                     _pollTimedResponse:
 29928                           	callstack 118
 29929   0061E4                     
 29930                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 29931   0061E4  0105               	movlb	5	; () banked
 29932   0061E6  2996               	incf	_timedResponseType& (0+255),w,b
 29933   0061E8  A4D8               	btfss	status,2,c
 29934   0061EA  EFF9  F030         	goto	u8211
 29935   0061EE  EFFB  F030         	goto	u8210
 29936   0061F2                     u8211:
 29937   0061F2  EFFD  F030         	goto	l10893
 29938   0061F6                     u8210:
 29939   0061F6  EF51  F031         	goto	l1881
 29940   0061FA                     l10893:
 29941                           
 29942                           ; BSR set to: 5
 29943                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 29944   0061FA  5187               	movf	_timedResponseCallback& (0+255),w,b
 29945   0061FC  1188               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 29946   0061FE  A4D8               	btfss	status,2,c
 29947   006200  EF04  F031         	goto	u8221
 29948   006204  EF06  F031         	goto	u8220
 29949   006208                     u8221:
 29950   006208  EF09  F031         	goto	l10897
 29951   00620C                     u8220:
 29952   00620C                     l10895:
 29953                           
 29954                           ; BSR set to: 5
 29955                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 29956   00620C  6996               	setf	_timedResponseType& (0+255),b
 29957                           
 29958                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 29959   00620E  EF51  F031         	goto	l1881
 29960   006212                     l10897:
 29961                           
 29962                           ; BSR set to: 5
 29963                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 29964   006212  D802               	call	u8238
 29965   006214  EF1A  F031         	goto	u8239
 29966   006218                     u8238:
 29967   006218  0005               	push	
 29968   00621A  6EFA               	movwf	pclath,c
 29969   00621C  5187               	movf	_timedResponseCallback& (0+255),w,b
 29970   00621E  6EFD               	movwf	tosl,c
 29971   006220  5188               	movf	(_timedResponseCallback+1)& (0+255),w,b
 29972   006222  6EFE               	movwf	tosh,c
 29973   006224  6AFF               	clrf	tosu,c
 29974   006226  50FA               	movf	pclath,w,c
 29975   006228  C598  F52E         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 29976   00622C  C595  F52F         	movff	_timedResponseStep,nvTRnvrdCallback@step
 29977   006230  5196               	movf	_timedResponseType& (0+255),w,b
 29978   006232  0012               	return		;indir
 29979   006234                     u8239:
 29980   006234  6E3F               	movwf	pollTimedResponse@result^(0+1280),c
 29981                           
 29982                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 29983   006236  EF38  F031         	goto	l10911
 29984   00623A                     l10899:
 29985                           
 29986                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 29987   00623A  0105               	movlb	5	; () banked
 29988   00623C  5197               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 29989   00623E  B4D8               	btfsc	status,2,c
 29990   006240  EF24  F031         	goto	u8241
 29991   006244  EF26  F031         	goto	u8240
 29992   006248                     u8241:
 29993   006248  EF06  F031         	goto	l10895
 29994   00624C                     u8240:
 29995   00624C                     
 29996                           ; BSR set to: 5
 29997                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 29998   00624C  2B98               	incf	_timedResponseServiceIndex& (0+255),f,b
 29999   00624E                     
 30000                           ; BSR set to: 5
 30001                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 6) {
 30002   00624E  0E05               	movlw	5
 30003   006250  6598               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 30004   006252  EF2D  F031         	goto	u8251
 30005   006256  EF2F  F031         	goto	u8250
 30006   00625A                     u8251:
 30007   00625A  EF31  F031         	goto	l1886
 30008   00625E                     u8250:
 30009   00625E  EF06  F031         	goto	l10895
 30010   006262                     l1886:
 30011                           
 30012                           ; BSR set to: 5
 30013                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 30014   006262  6B95               	clrf	_timedResponseStep& (0+255),b
 30015   006264  EF51  F031         	goto	l1881
 30016   006268                     l10907:
 30017                           
 30018                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 30019   006268  0105               	movlb	5	; () banked
 30020   00626A  2B95               	incf	_timedResponseStep& (0+255),f,b
 30021                           
 30022                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 30023   00626C  EF51  F031         	goto	l1881
 30024   006270                     l10911:
 30025   006270  503F               	movf	pollTimedResponse@result^(0+1280),w,c
 30026   006272  6E3D               	movwf	??_pollTimedResponse^(0+1280),c
 30027   006274  6A3E               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 30028                           
 30029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30030                           ; Switch size 1, requested type "simple"
 30031                           ; Number of cases is 1, Range of values is 0 to 0
 30032                           ; switch strategies available:
 30033                           ; Name         Instructions Cycles
 30034                           ; simple_byte            4     3 (average)
 30035                           ;	Chosen strategy is simple_byte
 30036   006276  503E               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 30037   006278  0A00               	xorlw	0	; case 0
 30038   00627A  B4D8               	btfsc	status,2,c
 30039   00627C  EF42  F031         	goto	l11793
 30040   006280  EF51  F031         	goto	l1881
 30041   006284                     l11793:
 30042                           
 30043                           ; Switch size 1, requested type "simple"
 30044                           ; Number of cases is 3, Range of values is 0 to 2
 30045                           ; switch strategies available:
 30046                           ; Name         Instructions Cycles
 30047                           ; simple_byte           10     6 (average)
 30048                           ;	Chosen strategy is simple_byte
 30049   006284  503D               	movf	??_pollTimedResponse^(0+1280),w,c
 30050   006286  0A00               	xorlw	0	; case 0
 30051   006288  B4D8               	btfsc	status,2,c
 30052   00628A  EF1D  F031         	goto	l10899
 30053   00628E  0A01               	xorlw	1	; case 1
 30054   006290  B4D8               	btfsc	status,2,c
 30055   006292  EF51  F031         	goto	l1881
 30056   006296  0A03               	xorlw	3	; case 2
 30057   006298  B4D8               	btfsc	status,2,c
 30058   00629A  EF34  F031         	goto	l10907
 30059   00629E  EF51  F031         	goto	l1881
 30060   0062A2                     l1881:
 30061   0062A2  0012               	return		;funcret
 30062   0062A4                     __end_of_pollTimedResponse:
 30063                           	callstack 0
 30064                           
 30065 ;; *************** function _nvTRnvrdCallback *****************
 30066 ;; Defined at:
 30067 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 30068 ;; Parameters:    Size  Location     Type
 30069 ;;  type            1    wreg     unsigned char 
 30070 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30071 ;;  step            1   46[COMRAM] unsigned char 
 30072 ;; Auto vars:     Size  Location     Type
 30073 ;;  type            1    0[COMRAM] unsigned char 
 30074 ;;  valueOrError    2   47[COMRAM] short 
 30075 ;; Return value:  Size  Location     Type
 30076 ;;                  1    wreg      enum E23491
 30077 ;; Registers used:
 30078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30079 ;; Tracked objects:
 30080 ;;		On entry : 0/0
 30081 ;;		On exit  : 0/0
 30082 ;;		Unchanged: 0/0
 30083 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30088 ;;Total ram usage:        4 bytes
 30089 ;; Hardware stack levels used: 1
 30090 ;; Hardware stack levels required when called: 6
 30091 ;; This function calls:
 30092 ;;		_getNV
 30093 ;;		_sendMessage4
 30094 ;; This function is called by:
 30095 ;;		_nvProcessMessage
 30096 ;;		_pollTimedResponse
 30097 ;; This function uses a non-reentrant model
 30098 ;;
 30099                           
 30100                           	psect	text39
 30101   007A3C                     __ptext39:
 30102                           	callstack 0
 30103   007A3C                     _nvTRnvrdCallback:
 30104                           	callstack 118
 30105   007A3C                     
 30106                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 49) {
 30107   007A3C  0E31               	movlw	49
 30108   007A3E  642F               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 30109   007A40  EF24  F03D         	goto	u6391
 30110   007A44  EF26  F03D         	goto	u6390
 30111   007A48                     u6391:
 30112   007A48  EF29  F03D         	goto	l9141
 30113   007A4C                     u6390:
 30114   007A4C                     l9137:
 30115                           
 30116                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 30117   007A4C  0E00               	movlw	0
 30118   007A4E  EF48  F03D         	goto	l1594
 30119   007A52                     l9141:
 30120                           
 30121                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 30122   007A52  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30123   007A54  EC73  F03D         	call	_getNV
 30124   007A58  C501  F530         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 30125   007A5C  C502  F531         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 30126   007A60                     
 30127                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 30128   007A60  BE31               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 30129   007A62  EF37  F03D         	goto	u6400
 30130   007A66  EF35  F03D         	goto	u6401
 30131   007A6A                     u6401:
 30132   007A6A  EF39  F03D         	goto	l9149
 30133   007A6E                     u6400:
 30134   007A6E  EF26  F03D         	goto	l9137
 30135   007A72                     l9149:
 30136                           
 30137                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 30138   007A72  C590  F526         	movff	_nn+1,sendMessage4@data1
 30139   007A76  C58F  F527         	movff	_nn,sendMessage4@data2
 30140   007A7A  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30141   007A7C  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30142   007A7E  C530  F529         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 30143   007A82  0E97               	movlw	151
 30144   007A84  EC60  F040         	call	_sendMessage4
 30145   007A88                     
 30146                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 30147   007A88  0105               	movlb	5	; () banked
 30148   007A8A  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 30149   007A8C  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 30150   007A8E                     
 30151                           ; BSR set to: 5
 30152                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 30153   007A8E  0E02               	movlw	2
 30154   007A90                     l1594:
 30155   007A90  0012               	return		;funcret
 30156   007A92                     __end_of_nvTRnvrdCallback:
 30157                           	callstack 0
 30158                           
 30159 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 30160 ;; Defined at:
 30161 ;;		line 901 in file "../../VLCBlib_PIC/mns.c"
 30162 ;; Parameters:    Size  Location     Type
 30163 ;;  type            1    wreg     unsigned char 
 30164 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30165 ;;  step            1   46[COMRAM] unsigned char 
 30166 ;; Auto vars:     Size  Location     Type
 30167 ;;  type            1    0[COMRAM] unsigned char 
 30168 ;; Return value:  Size  Location     Type
 30169 ;;                  1    wreg      enum E23474
 30170 ;; Registers used:
 30171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30172 ;; Tracked objects:
 30173 ;;		On entry : 0/0
 30174 ;;		On exit  : 0/0
 30175 ;;		Unchanged: 0/0
 30176 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30179 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30181 ;;Total ram usage:        6 bytes
 30182 ;; Hardware stack levels used: 1
 30183 ;; Hardware stack levels required when called: 6
 30184 ;; This function calls:
 30185 ;;		_sendMessage5
 30186 ;; This function is called by:
 30187 ;;		_mnsProcessMessage
 30188 ;;		_pollTimedResponse
 30189 ;; This function uses a non-reentrant model
 30190 ;;
 30191                           
 30192                           	psect	text40
 30193   006B3C                     __ptext40:
 30194                           	callstack 0
 30195   006B3C                     _mnsTRserviceDiscoveryCallback:
 30196                           	callstack 118
 30197   006B3C                     
 30198                           ;../../VLCBlib_PIC/mns.c: 902:     if (step >= 6) {
 30199   006B3C  0E05               	movlw	5
 30200   006B3E  642F               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 30201   006B40  EFA4  F035         	goto	u6291
 30202   006B44  EFA6  F035         	goto	u6290
 30203   006B48                     u6291:
 30204   006B48  EFA9  F035         	goto	l9029
 30205   006B4C                     u6290:
 30206   006B4C                     
 30207                           ;../../VLCBlib_PIC/mns.c: 903:         return TIMED_RESPONSE_RESULT_FINISHED;
 30208   006B4C  0E00               	movlw	0
 30209   006B4E  EFE9  F035         	goto	l1474
 30210   006B52                     l9029:
 30211                           
 30212                           ;../../VLCBlib_PIC/mns.c: 906:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 30213   006B52  C590  F526         	movff	_nn+1,sendMessage5@data1
 30214   006B56  C58F  F527         	movff	_nn,sendMessage5@data2
 30215   006B5A  282F               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30216   006B5C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30217   006B5E  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30218   006B60  0D02               	mullw	2
 30219   006B62  0E89               	movlw	low _services
 30220   006B64  24F3               	addwf	243,w,c
 30221   006B66  6EF6               	movwf	tblptrl,c
 30222   006B68  0EFF               	movlw	high _services
 30223   006B6A  20F4               	addwfc	244,w,c
 30224   006B6C  6EF7               	movwf	tblptrh,c
 30225   006B6E                     	if	1	;There are 3 active tblptr bytes
 30226   006B6E  6AF8               	clrf	tblptru,c
 30227   006B70  0E00               	movlw	low (__mediumconst shr (0+16))
 30228   006B72  22F8               	addwfc	tblptru,f,c
 30229   006B74                     	endif
 30230   006B74  0009               	tblrd		*+
 30231   006B76  C4F5 F530          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 30232   006B7A  0009               	tblrd		*+
 30233   006B7C  C4F5 F531          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 30234   006B80  C530  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 30235   006B84  C531  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 30236   006B88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30237   006B88  6AF8               	clrf	tblptru,c
 30238   006B8A                     	endif
 30239   006B8A                     	if	0	;tblptru may be non-zero
 30240   006B8A                     	endif
 30241   006B8A  0008               	tblrd		*
 30242   006B8C  C4F5 F529          	movff	tablat,sendMessage5@data4
 30243   006B90  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30244   006B92  0D02               	mullw	2
 30245   006B94  0E89               	movlw	low _services
 30246   006B96  24F3               	addwf	243,w,c
 30247   006B98  6EF6               	movwf	tblptrl,c
 30248   006B9A  0EFF               	movlw	high _services
 30249   006B9C  20F4               	addwfc	244,w,c
 30250   006B9E  6EF7               	movwf	tblptrh,c
 30251   006BA0                     	if	1	;There are 3 active tblptr bytes
 30252   006BA0  6AF8               	clrf	tblptru,c
 30253   006BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 30254   006BA4  22F8               	addwfc	tblptru,f,c
 30255   006BA6                     	endif
 30256   006BA6  0009               	tblrd		*+
 30257   006BA8  C4F5 F532          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 30258   006BAC  0009               	tblrd		*+
 30259   006BAE  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 30260   006BB2  0E01               	movlw	1
 30261   006BB4  2632               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 30262   006BB6  0E00               	movlw	0
 30263   006BB8  2233               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 30264   006BBA  C532  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 30265   006BBE  C533  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 30266   006BC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30267   006BC2  6AF8               	clrf	tblptru,c
 30268   006BC4                     	endif
 30269   006BC4                     	if	0	;tblptru may be non-zero
 30270   006BC4                     	endif
 30271   006BC4  0008               	tblrd		*
 30272   006BC6  C4F5 F52A          	movff	tablat,sendMessage5@data5
 30273   006BCA  0EAC               	movlw	172
 30274   006BCC  ECB4  F040         	call	_sendMessage5
 30275   006BD0                     
 30276                           ;../../VLCBlib_PIC/mns.c: 908:     return TIMED_RESPONSE_RESULT_NEXT;
 30277   006BD0  0E02               	movlw	2
 30278   006BD2                     l1474:
 30279   006BD2  0012               	return		;funcret
 30280   006BD4                     __end_of_mnsTRserviceDiscoveryCallback:
 30281                           	callstack 0
 30282                           
 30283 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 30284 ;; Defined at:
 30285 ;;		line 920 in file "../../VLCBlib_PIC/mns.c"
 30286 ;; Parameters:    Size  Location     Type
 30287 ;;  type            1    wreg     unsigned char 
 30288 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30289 ;;  step            1   46[COMRAM] unsigned char 
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;  type            1    0[COMRAM] unsigned char 
 30292 ;;  d               2   51[COMRAM] PTR struct DiagnosticVal
 30293 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 30294 ;;		 -> canDiagnostics(38), NULL(0), 
 30295 ;; Return value:  Size  Location     Type
 30296 ;;                  1    wreg      enum E23474
 30297 ;; Registers used:
 30298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30299 ;; Tracked objects:
 30300 ;;		On entry : 0/0
 30301 ;;		On exit  : 0/0
 30302 ;;		Unchanged: 0/0
 30303 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30306 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30307 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30308 ;;Total ram usage:        8 bytes
 30309 ;; Hardware stack levels used: 1
 30310 ;; Hardware stack levels required when called: 6
 30311 ;; This function calls:
 30312 ;;		NULL
 30313 ;;		_canGetDiagnostic
 30314 ;;		_consumerGetDiagnostic
 30315 ;;		_mnsGetDiagnostic
 30316 ;;		_nvGetDiagnostic
 30317 ;;		_sendMessage6
 30318 ;;		_teachGetDiagnostic
 30319 ;; This function is called by:
 30320 ;;		_mnsProcessMessage
 30321 ;;		_pollTimedResponse
 30322 ;; This function uses a non-reentrant model
 30323 ;;
 30324                           
 30325                           	psect	text41
 30326   005440                     __ptext41:
 30327                           	callstack 0
 30328   005440                     _mnsTRallDiagnosticsCallback:
 30329                           	callstack 118
 30330   005440                     
 30331                           ;../../VLCBlib_PIC/mns.c: 921:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 30332   005440  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30333   005442  0D02               	mullw	2
 30334   005444  0E89               	movlw	low _services
 30335   005446  24F3               	addwf	243,w,c
 30336   005448  6EF6               	movwf	tblptrl,c
 30337   00544A  0EFF               	movlw	high _services
 30338   00544C  20F4               	addwfc	244,w,c
 30339   00544E  6EF7               	movwf	tblptrh,c
 30340   005450                     	if	1	;There are 3 active tblptr bytes
 30341   005450  6AF8               	clrf	tblptru,c
 30342   005452  0E00               	movlw	low (__mediumconst shr (0+16))
 30343   005454  22F8               	addwfc	tblptru,f,c
 30344   005456                     	endif
 30345   005456  0009               	tblrd		*+
 30346   005458  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30347   00545C  0009               	tblrd		*+
 30348   00545E  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30349   005462  0E0C               	movlw	12
 30350   005464  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30351   005466  0E00               	movlw	0
 30352   005468  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30353   00546A  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30354   00546E  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30355   005472                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30356   005472  6AF8               	clrf	tblptru,c
 30357   005474                     	endif
 30358   005474                     	if	0	;tblptru may be non-zero
 30359   005474                     	endif
 30360   005474  0009               	tblrd		*+
 30361   005476  50F5               	movf	tablat,w,c
 30362   005478  0009               	tblrd		*+
 30363   00547A  10F5               	iorwf	tablat,w,c
 30364   00547C  A4D8               	btfss	status,2,c
 30365   00547E  EF43  F02A         	goto	u6301
 30366   005482  EF45  F02A         	goto	u6300
 30367   005486                     u6301:
 30368   005486  EF57  F02A         	goto	l9043
 30369   00548A                     u6300:
 30370   00548A                     
 30371                           ;../../VLCBlib_PIC/mns.c: 922:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 30372   00548A  C590  F526         	movff	_nn+1,sendMessage6@data1
 30373   00548E  C58F  F527         	movff	_nn,sendMessage6@data2
 30374   005492  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30375   005494  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30376   005496  0E00               	movlw	0
 30377   005498  6E29               	movwf	sendMessage6@data4^(0+1280),c
 30378   00549A  0E00               	movlw	0
 30379   00549C  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30380   00549E  0E00               	movlw	0
 30381   0054A0  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30382   0054A2  0EC7               	movlw	199
 30383   0054A4  EC4B  F040         	call	_sendMessage6
 30384   0054A8                     l9039:
 30385                           
 30386                           ;../../VLCBlib_PIC/mns.c: 923:         return TIMED_RESPONSE_RESULT_FINISHED;
 30387   0054A8  0E00               	movlw	0
 30388   0054AA  EFAD  F02A         	goto	l1478
 30389   0054AE                     l9043:
 30390                           
 30391                           ;../../VLCBlib_PIC/mns.c: 925:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 30392   0054AE  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30393   0054B0  0D02               	mullw	2
 30394   0054B2  0E89               	movlw	low _services
 30395   0054B4  24F3               	addwf	243,w,c
 30396   0054B6  6EF6               	movwf	tblptrl,c
 30397   0054B8  0EFF               	movlw	high _services
 30398   0054BA  20F4               	addwfc	244,w,c
 30399   0054BC  6EF7               	movwf	tblptrh,c
 30400   0054BE                     	if	1	;There are 3 active tblptr bytes
 30401   0054BE  6AF8               	clrf	tblptru,c
 30402   0054C0  0E00               	movlw	low (__mediumconst shr (0+16))
 30403   0054C2  22F8               	addwfc	tblptru,f,c
 30404   0054C4                     	endif
 30405   0054C4  0009               	tblrd		*+
 30406   0054C6  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30407   0054CA  0009               	tblrd		*+
 30408   0054CC  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30409   0054D0  0E0C               	movlw	12
 30410   0054D2  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30411   0054D4  0E00               	movlw	0
 30412   0054D6  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30413   0054D8  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30414   0054DC  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30415   0054E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30416   0054E0  6AF8               	clrf	tblptru,c
 30417   0054E2                     	endif
 30418   0054E2                     	if	0	;tblptru may be non-zero
 30419   0054E2                     	endif
 30420   0054E2  0009               	tblrd		*+
 30421   0054E4  C4F5 F532          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 30422   0054E8  0009               	tblrd		*+
 30423   0054EA  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 30424   0054EE  D802               	call	u6318
 30425   0054F0  EF84  F02A         	goto	u6319
 30426   0054F4                     u6318:
 30427   0054F4  0005               	push	
 30428   0054F6  6EFA               	movwf	pclath,c
 30429   0054F8  5032               	movf	(??_mnsTRallDiagnosticsCallback+2)^(0+1280),w,c
 30430   0054FA  6EFD               	movwf	tosl,c
 30431   0054FC  5033               	movf	(??_mnsTRallDiagnosticsCallback+3)^(0+1280),w,c
 30432   0054FE  6EFE               	movwf	tosh,c
 30433   005500  6AFF               	clrf	tosu,c
 30434   005502  50FA               	movf	pclath,w,c
 30435   005504  502F               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 30436   005506  0012               	return		;indir
 30437   005508                     u6319:
 30438   005508  C507  F534         	movff	?_nvGetDiagnostic,mnsTRallDiagnosticsCallback@d
 30439   00550C  C508  F535         	movff	?_nvGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 30440   005510                     
 30441                           ;../../VLCBlib_PIC/mns.c: 926:     if (d == ((void*)0)) {
 30442   005510  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30443   005512  1035               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30444   005514  A4D8               	btfss	status,2,c
 30445   005516  EF8F  F02A         	goto	u6321
 30446   00551A  EF91  F02A         	goto	u6320
 30447   00551E                     u6321:
 30448   00551E  EF93  F02A         	goto	l9051
 30449   005522                     u6320:
 30450   005522  EF54  F02A         	goto	l9039
 30451   005526                     l9051:
 30452                           
 30453                           ;../../VLCBlib_PIC/mns.c: 931:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 30454   005526  C590  F526         	movff	_nn+1,sendMessage6@data1
 30455   00552A  C58F  F527         	movff	_nn,sendMessage6@data2
 30456   00552E  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30457   005530  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30458   005532  C52F  F529         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 30459   005536  EE20 F001          	lfsr	2,1
 30460   00553A  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30461   00553C  26D9               	addwf	fsr2l,f,c
 30462   00553E  5035               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30463   005540  22DA               	addwfc	fsr2h,f,c
 30464   005542  50DF               	movf	indf2,w,c
 30465   005544  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30466   005546  C534  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 30467   00554A  C535  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 30468   00554E  50DF               	movf	indf2,w,c
 30469   005550  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30470   005552  0EC7               	movlw	199
 30471   005554  EC4B  F040         	call	_sendMessage6
 30472   005558                     
 30473                           ;../../VLCBlib_PIC/mns.c: 932:     return TIMED_RESPONSE_RESULT_NEXT;
 30474   005558  0E02               	movlw	2
 30475   00555A                     l1478:
 30476   00555A  0012               	return		;funcret
 30477   00555C                     __end_of_mnsTRallDiagnosticsCallback:
 30478                           	callstack 0
 30479                           
 30480 ;; *************** function _mnsTRrqnpnCallback *****************
 30481 ;; Defined at:
 30482 ;;		line 943 in file "../../VLCBlib_PIC/mns.c"
 30483 ;; Parameters:    Size  Location     Type
 30484 ;;  type            1    wreg     unsigned char 
 30485 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30486 ;;  step            1   46[COMRAM] unsigned char 
 30487 ;; Auto vars:     Size  Location     Type
 30488 ;;  type            1    0[COMRAM] unsigned char 
 30489 ;; Return value:  Size  Location     Type
 30490 ;;                  1    wreg      enum E23474
 30491 ;; Registers used:
 30492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30493 ;; Tracked objects:
 30494 ;;		On entry : 0/0
 30495 ;;		On exit  : 0/0
 30496 ;;		Unchanged: 0/0
 30497 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30502 ;;Total ram usage:        2 bytes
 30503 ;; Hardware stack levels used: 1
 30504 ;; Hardware stack levels required when called: 6
 30505 ;; This function calls:
 30506 ;;		_getParameter
 30507 ;;		_sendMessage4
 30508 ;; This function is called by:
 30509 ;;		_mnsProcessMessage
 30510 ;;		_pollTimedResponse
 30511 ;; This function uses a non-reentrant model
 30512 ;;
 30513                           
 30514                           	psect	text42
 30515   007EDA                     __ptext42:
 30516                           	callstack 0
 30517   007EDA                     _mnsTRrqnpnCallback:
 30518                           	callstack 118
 30519   007EDA                     
 30520                           ;../../VLCBlib_PIC/mns.c: 944:     if (step >= 20) {
 30521   007EDA  0E13               	movlw	19
 30522   007EDC  642F               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 30523   007EDE  EF73  F03F         	goto	u6331
 30524   007EE2  EF75  F03F         	goto	u6330
 30525   007EE6                     u6331:
 30526   007EE6  EF78  F03F         	goto	l9063
 30527   007EEA                     u6330:
 30528   007EEA                     
 30529                           ;../../VLCBlib_PIC/mns.c: 945:         return TIMED_RESPONSE_RESULT_FINISHED;
 30530   007EEA  0E00               	movlw	0
 30531   007EEC  EF86  F03F         	goto	l1483
 30532   007EF0                     l9063:
 30533                           
 30534                           ;../../VLCBlib_PIC/mns.c: 947:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 30535   007EF0  C590  F526         	movff	_nn+1,sendMessage4@data1
 30536   007EF4  C58F  F527         	movff	_nn,sendMessage4@data2
 30537   007EF8  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30538   007EFA  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30539   007EFC  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30540   007EFE  ECBB  F024         	call	_getParameter
 30541   007F02  6E29               	movwf	sendMessage4@data4^(0+1280),c
 30542   007F04  0E9B               	movlw	155
 30543   007F06  EC60  F040         	call	_sendMessage4
 30544   007F0A                     
 30545                           ;../../VLCBlib_PIC/mns.c: 948:     return TIMED_RESPONSE_RESULT_NEXT;
 30546   007F0A  0E02               	movlw	2
 30547   007F0C                     l1483:
 30548   007F0C  0012               	return		;funcret
 30549   007F0E                     __end_of_mnsTRrqnpnCallback:
 30550                           	callstack 0
 30551                           
 30552 ;; *************** function _nerdCallback *****************
 30553 ;; Defined at:
 30554 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30555 ;; Parameters:    Size  Location     Type
 30556 ;;  type            1    wreg     unsigned char 
 30557 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30558 ;;  step            1   46[COMRAM] unsigned char 
 30559 ;; Auto vars:     Size  Location     Type
 30560 ;;  type            1    0[COMRAM] unsigned char 
 30561 ;;  eventNumber     2   49[COMRAM] struct Word
 30562 ;;  nodeNumber      2   47[COMRAM] struct Word
 30563 ;; Return value:  Size  Location     Type
 30564 ;;                  1    wreg      enum E23474
 30565 ;; Registers used:
 30566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30567 ;; Tracked objects:
 30568 ;;		On entry : 0/0
 30569 ;;		On exit  : 0/0
 30570 ;;		Unchanged: 0/0
 30571 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30573 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30576 ;;Total ram usage:        6 bytes
 30577 ;; Hardware stack levels used: 1
 30578 ;; Hardware stack levels required when called: 6
 30579 ;; This function calls:
 30580 ;;		_getEN
 30581 ;;		_getNN
 30582 ;;		_sendMessage7
 30583 ;;		_tableIndexToEvtIdx
 30584 ;; This function is called by:
 30585 ;;		_doNerd
 30586 ;;		_pollTimedResponse
 30587 ;; This function uses a non-reentrant model
 30588 ;;
 30589                           
 30590                           	psect	text43
 30591   007586                     __ptext43:
 30592                           	callstack 0
 30593   007586                     _nerdCallback:
 30594                           	callstack 118
 30595   007586                     
 30596                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 255) {
 30597   007586  282F               	incf	nerdCallback@step^(0+1280),w,c
 30598   007588  A4D8               	btfss	status,2,c
 30599   00758A  EFC9  F03A         	goto	u6241
 30600   00758E  EFCB  F03A         	goto	u6240
 30601   007592                     u6241:
 30602   007592  EFCE  F03A         	goto	l8969
 30603   007596                     u6240:
 30604   007596                     
 30605                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30606   007596  0E00               	movlw	0
 30607   007598  EFF9  F03A         	goto	l1052
 30608   00759C                     l8969:
 30609                           
 30610                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 30611   00759C  502F               	movf	nerdCallback@step^(0+1280),w,c
 30612   00759E  ECBD  F033         	call	_getEN
 30613   0075A2  C50D  F532         	movff	?_getEN,nerdCallback@eventNumber
 30614   0075A6  C50E  F533         	movff	?_getEN+1,nerdCallback@eventNumber+1
 30615   0075AA                     
 30616                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 30617   0075AA  5032               	movf	nerdCallback@eventNumber^(0+1280),w,c
 30618   0075AC  1033               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 30619   0075AE  B4D8               	btfsc	status,2,c
 30620   0075B0  EFDC  F03A         	goto	u6251
 30621   0075B4  EFDE  F03A         	goto	u6250
 30622   0075B8                     u6251:
 30623   0075B8  EFF8  F03A         	goto	l8977
 30624   0075BC                     u6250:
 30625   0075BC                     
 30626                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 30627   0075BC  502F               	movf	nerdCallback@step^(0+1280),w,c
 30628   0075BE  EC8F  F029         	call	_getNN
 30629   0075C2  C50D  F530         	movff	?_getNN,nerdCallback@nodeNumber
 30630   0075C6  C50E  F531         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 30631   0075CA                     
 30632                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 30633   0075CA  C590  F526         	movff	_nn+1,sendMessage7@data1
 30634   0075CE  C58F  F527         	movff	_nn,sendMessage7@data2
 30635   0075D2  C531  F528         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 30636   0075D6  C530  F529         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 30637   0075DA  C533  F52A         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 30638   0075DE  C532  F52B         	movff	nerdCallback@eventNumber,sendMessage7@data6
 30639   0075E2  502F               	movf	nerdCallback@step^(0+1280),w,c
 30640   0075E4  ECBC  F041         	call	_tableIndexToEvtIdx
 30641   0075E8  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 30642   0075EA  0EF2               	movlw	242
 30643   0075EC  EC9F  F040         	call	_sendMessage7
 30644   0075F0                     l8977:
 30645                           
 30646                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 30647   0075F0  0E02               	movlw	2
 30648   0075F2                     l1052:
 30649   0075F2  0012               	return		;funcret
 30650   0075F4                     __end_of_nerdCallback:
 30651                           	callstack 0
 30652                           
 30653 ;; *************** function _reqevCallback *****************
 30654 ;; Defined at:
 30655 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30656 ;; Parameters:    Size  Location     Type
 30657 ;;  tableIndex      1    wreg     unsigned char 
 30658 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30659 ;;  step            1   46[COMRAM] unsigned char 
 30660 ;; Auto vars:     Size  Location     Type
 30661 ;;  tableIndex      1   59[COMRAM] unsigned char 
 30662 ;;  nodeNumber      2   57[COMRAM] struct Word
 30663 ;;  ev              2   55[COMRAM] short 
 30664 ;;  eventNumber     2   53[COMRAM] struct Word
 30665 ;;  nEv             1   52[COMRAM] unsigned char 
 30666 ;; Return value:  Size  Location     Type
 30667 ;;                  1    wreg      enum E23474
 30668 ;; Registers used:
 30669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30670 ;; Tracked objects:
 30671 ;;		On entry : 0/0
 30672 ;;		On exit  : 0/0
 30673 ;;		Unchanged: 0/0
 30674 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30676 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30678 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30679 ;;Total ram usage:       15 bytes
 30680 ;; Hardware stack levels used: 1
 30681 ;; Hardware stack levels required when called: 6
 30682 ;; This function calls:
 30683 ;;		_getEN
 30684 ;;		_getEv
 30685 ;;		_getNN
 30686 ;;		_numEv
 30687 ;;		_sendMessage5
 30688 ;;		_sendMessage6
 30689 ;;		_tableIndexToEvtIdx
 30690 ;; This function is called by:
 30691 ;;		_doReval
 30692 ;;		_doReqev
 30693 ;;		_pollTimedResponse
 30694 ;; This function uses a non-reentrant model
 30695 ;;
 30696                           
 30697                           	psect	text44
 30698   005DF6                     __ptext44:
 30699                           	callstack 0
 30700   005DF6                     _reqevCallback:
 30701                           	callstack 118
 30702                           
 30703                           ;incstack = 0
 30704                           ;reqevCallback@tableIndex stored from wreg
 30705   005DF6  6E3C               	movwf	reqevCallback@tableIndex^(0+1280),c
 30706   005DF8                     
 30707                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 30708   005DF8  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30709   005DFA  ECCB  F041         	call	_numEv
 30710   005DFE  6E35               	movwf	reqevCallback@nEv^(0+1280),c
 30711   005E00                     
 30712                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 30713   005E00  502F               	movf	reqevCallback@step^(0+1280),w,c
 30714   005E02  6E30               	movwf	??_reqevCallback^(0+1280),c
 30715   005E04  6A31               	clrf	(??_reqevCallback+1)^(0+1280),c
 30716   005E06  0E01               	movlw	1
 30717   005E08  2630               	addwf	??_reqevCallback^(0+1280),f,c
 30718   005E0A  0E00               	movlw	0
 30719   005E0C  2231               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 30720   005E0E  5035               	movf	reqevCallback@nEv^(0+1280),w,c
 30721   005E10  6E32               	movwf	(??_reqevCallback+2)^(0+1280),c
 30722   005E12  6A33               	clrf	(??_reqevCallback+3)^(0+1280),c
 30723   005E14  5030               	movf	??_reqevCallback^(0+1280),w,c
 30724   005E16  5C32               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 30725   005E18  5033               	movf	(??_reqevCallback+3)^(0+1280),w,c
 30726   005E1A  0A80               	xorlw	128
 30727   005E1C  6E34               	movwf	(??_reqevCallback+4)^(0+1280),c
 30728   005E1E  5031               	movf	(??_reqevCallback+1)^(0+1280),w,c
 30729   005E20  0A80               	xorlw	128
 30730   005E22  5834               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 30731   005E24  B0D8               	btfsc	status,0,c
 30732   005E26  EF17  F02F         	goto	u6261
 30733   005E2A  EF19  F02F         	goto	u6260
 30734   005E2E                     u6261:
 30735   005E2E  EF1C  F02F         	goto	l8989
 30736   005E32                     u6260:
 30737   005E32                     
 30738                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30739   005E32  0E00               	movlw	0
 30740   005E34  EF65  F02F         	goto	l1096
 30741   005E38                     l8989:
 30742                           
 30743                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 30744   005E38  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30745   005E3A  EC8F  F029         	call	_getNN
 30746   005E3E  C50D  F53A         	movff	?_getNN,reqevCallback@nodeNumber
 30747   005E42  C50E  F53B         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 30748                           
 30749                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 30750   005E46  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30751   005E48  ECBD  F033         	call	_getEN
 30752   005E4C  C50D  F536         	movff	?_getEN,reqevCallback@eventNumber
 30753   005E50  C50E  F537         	movff	?_getEN+1,reqevCallback@eventNumber+1
 30754                           
 30755                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 30756   005E54  C52F  F50D         	movff	reqevCallback@step,getEv@evNum
 30757   005E58  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30758   005E5A  ECB2  F034         	call	_getEv
 30759   005E5E  C50D  F538         	movff	?_getEv,reqevCallback@ev
 30760   005E62  C50E  F539         	movff	?_getEv+1,reqevCallback@ev+1
 30761   005E66                     
 30762                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 30763   005E66  BE39               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 30764   005E68  EF38  F02F         	goto	u6271
 30765   005E6C  EF3A  F02F         	goto	u6270
 30766   005E70                     u6271:
 30767   005E70  EF64  F02F         	goto	l8999
 30768   005E74                     u6270:
 30769   005E74                     
 30770                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 30771   005E74  0ED3               	movlw	211
 30772   005E76  0105               	movlb	5	; () banked
 30773   005E78  19A2               	xorwf	_timedResponseOpcode& (0+255),w,b
 30774   005E7A  A4D8               	btfss	status,2,c
 30775   005E7C  EF42  F02F         	goto	u6281
 30776   005E80  EF44  F02F         	goto	u6280
 30777   005E84                     u6281:
 30778   005E84  EF55  F02F         	goto	l8997
 30779   005E88                     u6280:
 30780   005E88                     
 30781                           ; BSR set to: 5
 30782                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 30783   005E88  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 30784   005E8C  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 30785   005E90  C537  F528         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 30786   005E94  C536  F529         	movff	reqevCallback@eventNumber,sendMessage6@data4
 30787   005E98  282F               	incf	reqevCallback@step^(0+1280),w,c
 30788   005E9A  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30789   005E9C  C538  F52B         	movff	reqevCallback@ev,sendMessage6@data6
 30790   005EA0  0ED3               	movlw	211
 30791   005EA2  EC4B  F040         	call	_sendMessage6
 30792                           
 30793                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 30794   005EA6  EF64  F02F         	goto	l8999
 30795   005EAA                     l8997:
 30796                           
 30797                           ; BSR set to: 5
 30798                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 30799   005EAA  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 30800   005EAE  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 30801   005EB2  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30802   005EB4  ECBC  F041         	call	_tableIndexToEvtIdx
 30803   005EB8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30804   005EBA  282F               	incf	reqevCallback@step^(0+1280),w,c
 30805   005EBC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 30806   005EBE  C538  F52A         	movff	reqevCallback@ev,sendMessage5@data5
 30807   005EC2  0EB5               	movlw	181
 30808   005EC4  ECB4  F040         	call	_sendMessage5
 30809   005EC8                     l8999:
 30810                           
 30811                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 30812   005EC8  0E02               	movlw	2
 30813   005ECA                     l1096:
 30814   005ECA  0012               	return		;funcret
 30815   005ECC                     __end_of_reqevCallback:
 30816                           	callstack 0
 30817                           
 30818 ;; *************** function _numEv *****************
 30819 ;; Defined at:
 30820 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30821 ;; Parameters:    Size  Location     Type
 30822 ;;  tableIndex      1    wreg     unsigned char 
 30823 ;; Auto vars:     Size  Location     Type
 30824 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30825 ;; Return value:  Size  Location     Type
 30826 ;;                  1    wreg      unsigned char 
 30827 ;; Registers used:
 30828 ;;		wreg
 30829 ;; Tracked objects:
 30830 ;;		On entry : 0/0
 30831 ;;		On exit  : 0/0
 30832 ;;		Unchanged: 0/0
 30833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30838 ;;Total ram usage:        0 bytes
 30839 ;; Hardware stack levels used: 1
 30840 ;; Hardware stack levels required when called: 1
 30841 ;; This function calls:
 30842 ;;		Nothing
 30843 ;; This function is called by:
 30844 ;;		_doReqev
 30845 ;;		_reqevCallback
 30846 ;; This function uses a non-reentrant model
 30847 ;;
 30848                           
 30849                           	psect	text45
 30850   008396                     __ptext45:
 30851                           	callstack 0
 30852   008396                     _numEv:
 30853                           	callstack 122
 30854   008396                     
 30855                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 252;
 30856   008396  0EFC               	movlw	252
 30857   008398  0012               	return		;funcret
 30858   00839A                     __end_of_numEv:
 30859                           	callstack 0
 30860                           
 30861 ;; *************** function _getEv *****************
 30862 ;; Defined at:
 30863 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30864 ;; Parameters:    Size  Location     Type
 30865 ;;  tableIndex      1    wreg     unsigned char 
 30866 ;;  evNum           1   12[COMRAM] unsigned char 
 30867 ;; Auto vars:     Size  Location     Type
 30868 ;;  tableIndex      1   27[COMRAM] unsigned char 
 30869 ;; Return value:  Size  Location     Type
 30870 ;;                  2   12[COMRAM] short 
 30871 ;; Registers used:
 30872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30873 ;; Tracked objects:
 30874 ;;		On entry : 0/0
 30875 ;;		On exit  : 0/0
 30876 ;;		Unchanged: 0/0
 30877 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30880 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30881 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30882 ;;Total ram usage:       16 bytes
 30883 ;; Hardware stack levels used: 1
 30884 ;; Hardware stack levels required when called: 3
 30885 ;; This function calls:
 30886 ;;		_readNVM
 30887 ;; This function is called by:
 30888 ;;		_doReval
 30889 ;;		_doReqev
 30890 ;;		_reqevCallback
 30891 ;; This function uses a non-reentrant model
 30892 ;;
 30893                           
 30894                           	psect	text46
 30895   006964                     __ptext46:
 30896                           	callstack 0
 30897   006964                     _getEv:
 30898                           	callstack 120
 30899                           
 30900                           ;incstack = 0
 30901                           ;getEv@tableIndex stored from wreg
 30902   006964  6E1C               	movwf	getEv@tableIndex^(0+1280),c
 30903   006966                     
 30904                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 255) {
 30905   006966  281C               	incf	getEv@tableIndex^(0+1280),w,c
 30906   006968  A4D8               	btfss	status,2,c
 30907   00696A  EFB9  F034         	goto	u5631
 30908   00696E  EFBB  F034         	goto	u5630
 30909   006972                     u5631:
 30910   006972  EFC1  F034         	goto	l8257
 30911   006976                     u5630:
 30912   006976                     
 30913                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 30914   006976  0E00               	movlw	0
 30915   006978  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30916   00697A  0E08               	movlw	8
 30917   00697C  6E0D               	movwf	?_getEv^(0+1280),c
 30918   00697E  EF00  F035         	goto	l1137
 30919   006982                     l8257:
 30920                           
 30921                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 252) {
 30922   006982  0EFB               	movlw	251
 30923   006984  640D               	cpfsgt	getEv@evNum^(0+1280),c
 30924   006986  EFC7  F034         	goto	u5641
 30925   00698A  EFC9  F034         	goto	u5640
 30926   00698E                     u5641:
 30927   00698E  EFCF  F034         	goto	l8263
 30928   006992                     u5640:
 30929   006992                     
 30930                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 30931   006992  0EFF               	movlw	255
 30932   006994  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30933   006996  0EFA               	movlw	250
 30934   006998  6E0D               	movwf	?_getEv^(0+1280),c
 30935   00699A  EF00  F035         	goto	l1137
 30936   00699E                     l8263:
 30937                           
 30938                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evNum);
 30939   00699E  500D               	movf	getEv@evNum^(0+1280),w,c
 30940   0069A0  6E0F               	movwf	??_getEv^(0+1280),c
 30941   0069A2  6A10               	clrf	(??_getEv+1)^(0+1280),c
 30942   0069A4  6A11               	clrf	(??_getEv+2)^(0+1280),c
 30943   0069A6  501C               	movf	getEv@tableIndex^(0+1280),w,c
 30944   0069A8  6E12               	movwf	(??_getEv+3)^(0+1280),c
 30945   0069AA  6A13               	clrf	(??_getEv+4)^(0+1280),c
 30946   0069AC  0E01               	movlw	1
 30947   0069AE  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30948   0069B0  C4F3 F514          	movff	prodl,??_getEv+5
 30949   0069B4  C4F4 F515          	movff	prodh,??_getEv+6
 30950   0069B8  0213               	mulwf	(??_getEv+4)^(0+1280),c
 30951   0069BA  50F3               	movf	prodl,w,c
 30952   0069BC  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30953   0069BE  0E01               	movlw	1
 30954   0069C0  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30955   0069C2  50F3               	movf	prodl,w,c
 30956   0069C4  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30957   0069C6  C514  F516         	movff	??_getEv+5,??_getEv+7
 30958   0069CA  C515  F517         	movff	??_getEv+6,??_getEv+8
 30959   0069CE  6A18               	clrf	(??_getEv+9)^(0+1280),c
 30960   0069D0  500F               	movf	??_getEv^(0+1280),w,c
 30961   0069D2  2416               	addwf	(??_getEv+7)^(0+1280),w,c
 30962   0069D4  6E19               	movwf	(??_getEv+10)^(0+1280),c
 30963   0069D6  5010               	movf	(??_getEv+1)^(0+1280),w,c
 30964   0069D8  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 30965   0069DA  6E1A               	movwf	(??_getEv+11)^(0+1280),c
 30966   0069DC  5011               	movf	(??_getEv+2)^(0+1280),w,c
 30967   0069DE  2018               	addwfc	(??_getEv+9)^(0+1280),w,c
 30968   0069E0  6E1B               	movwf	(??_getEv+12)^(0+1280),c
 30969   0069E2  0E05               	movlw	5
 30970   0069E4  2419               	addwf	(??_getEv+10)^(0+1280),w,c
 30971   0069E6  6E07               	movwf	readNVM@index^(0+1280),c
 30972   0069E8  0E00               	movlw	0
 30973   0069EA  201A               	addwfc	(??_getEv+11)^(0+1280),w,c
 30974   0069EC  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 30975   0069EE  0E01               	movlw	1
 30976   0069F0  201B               	addwfc	(??_getEv+12)^(0+1280),w,c
 30977   0069F2  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 30978   0069F4  0E01               	movlw	1
 30979   0069F6  EC89  F03A         	call	_readNVM
 30980   0069FA  5007               	movf	?_readNVM^(0+1280),w,c
 30981   0069FC  6E0D               	movwf	?_getEv^(0+1280),c
 30982   0069FE  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 30983   006A00                     l1137:
 30984   006A00  0012               	return		;funcret
 30985   006A02                     __end_of_getEv:
 30986                           	callstack 0
 30987                           
 30988 ;; *************** function _tableIndexToEvtIdx *****************
 30989 ;; Defined at:
 30990 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30991 ;; Parameters:    Size  Location     Type
 30992 ;;  tableIndex      1    wreg     unsigned char 
 30993 ;; Auto vars:     Size  Location     Type
 30994 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30995 ;; Return value:  Size  Location     Type
 30996 ;;                  1    wreg      unsigned char 
 30997 ;; Registers used:
 30998 ;;		wreg, status,2, status,0
 30999 ;; Tracked objects:
 31000 ;;		On entry : 0/0
 31001 ;;		On exit  : 0/0
 31002 ;;		Unchanged: 0/0
 31003 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31008 ;;Total ram usage:        1 bytes
 31009 ;; Hardware stack levels used: 1
 31010 ;; Hardware stack levels required when called: 1
 31011 ;; This function calls:
 31012 ;;		Nothing
 31013 ;; This function is called by:
 31014 ;;		_nerdCallback
 31015 ;;		_reqevCallback
 31016 ;; This function uses a non-reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text47
 31020   008378                     __ptext47:
 31021                           	callstack 0
 31022   008378                     _tableIndexToEvtIdx:
 31023                           	callstack 122
 31024                           
 31025                           ;incstack = 0
 31026                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 31027   008378  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 31028   00837A                     
 31029                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 31030   00837A  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 31031   00837C  0012               	return		;funcret
 31032   00837E                     __end_of_tableIndexToEvtIdx:
 31033                           	callstack 0
 31034                           
 31035 ;; *************** function _setNV *****************
 31036 ;; Defined at:
 31037 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 31038 ;; Parameters:    Size  Location     Type
 31039 ;;  index           1    wreg     unsigned char 
 31040 ;;  value           1   20[COMRAM] unsigned char 
 31041 ;; Auto vars:     Size  Location     Type
 31042 ;;  index           1   24[COMRAM] unsigned char 
 31043 ;;  oldValue        1   23[COMRAM] unsigned char 
 31044 ;; Return value:  Size  Location     Type
 31045 ;;                  1    wreg      unsigned char 
 31046 ;; Registers used:
 31047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31048 ;; Tracked objects:
 31049 ;;		On entry : 0/0
 31050 ;;		On exit  : 0/0
 31051 ;;		Unchanged: 0/0
 31052 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31056 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31057 ;;Total ram usage:        5 bytes
 31058 ;; Hardware stack levels used: 1
 31059 ;; Hardware stack levels required when called: 6
 31060 ;; This function calls:
 31061 ;;		_APP_nvValidate
 31062 ;;		_APP_nvValueChanged
 31063 ;;		_writeNVM
 31064 ;; This function is called by:
 31065 ;;		_nvProcessMessage
 31066 ;; This function uses a non-reentrant model
 31067 ;;
 31068                           
 31069                           	psect	text48
 31070   006D8E                     __ptext48:
 31071                           	callstack 0
 31072   006D8E                     _setNV:
 31073                           	callstack 118
 31074                           
 31075                           ;incstack = 0
 31076                           ;setNV@index stored from wreg
 31077   006D8E  6E19               	movwf	setNV@index^(0+1280),c
 31078   006D90                     
 31079                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 49) return CMDERR_INV_NV_IDX;
 31080   006D90  0E31               	movlw	49
 31081   006D92  6419               	cpfsgt	setNV@index^(0+1280),c
 31082   006D94  EFCE  F036         	goto	u6371
 31083   006D98  EFD0  F036         	goto	u6370
 31084   006D9C                     u6371:
 31085   006D9C  EFD3  F036         	goto	l9105
 31086   006DA0                     u6370:
 31087   006DA0  0E0A               	movlw	10
 31088   006DA2  EF0D  F037         	goto	l1562
 31089   006DA6                     l9105:
 31090                           
 31091                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 31092   006DA6  C515  F501         	movff	setNV@value,APP_nvValidate@value
 31093   006DAA  5019               	movf	setNV@index^(0+1280),w,c
 31094   006DAC  ECCD  F041         	call	_APP_nvValidate
 31095   006DB0  0900               	iorlw	0
 31096   006DB2  A4D8               	btfss	status,2,c
 31097   006DB4  EFDE  F036         	goto	u6381
 31098   006DB8  EFE0  F036         	goto	u6380
 31099   006DBC                     u6381:
 31100   006DBC  EFE3  F036         	goto	l9111
 31101   006DC0                     u6380:
 31102   006DC0  0E0C               	movlw	12
 31103   006DC2  EF0D  F037         	goto	l1562
 31104   006DC6                     l9111:
 31105                           
 31106                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 31107   006DC6  0E00               	movlw	low _nvCache
 31108   006DC8  2419               	addwf	setNV@index^(0+1280),w,c
 31109   006DCA  6ED9               	movwf	fsr2l,c
 31110   006DCC  6ADA               	clrf	fsr2h,c
 31111   006DCE  0E06               	movlw	high _nvCache
 31112   006DD0  22DA               	addwfc	fsr2h,f,c
 31113   006DD2  50DF               	movf	indf2,w,c
 31114   006DD4  6E18               	movwf	setNV@oldValue^(0+1280),c
 31115                           
 31116                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 31117   006DD6  0E00               	movlw	low _nvCache
 31118   006DD8  2419               	addwf	setNV@index^(0+1280),w,c
 31119   006DDA  6ED9               	movwf	fsr2l,c
 31120   006DDC  6ADA               	clrf	fsr2h,c
 31121   006DDE  0E06               	movlw	high _nvCache
 31122   006DE0  22DA               	addwfc	fsr2h,f,c
 31123   006DE2  C515  F4DF         	movff	setNV@value,indf2
 31124   006DE6                     
 31125                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 31126   006DE6  0E00               	movlw	0
 31127   006DE8  2419               	addwf	setNV@index^(0+1280),w,c
 31128   006DEA  6E16               	movwf	??_setNV^(0+1280),c
 31129   006DEC  6A17               	clrf	(??_setNV+1)^(0+1280),c
 31130   006DEE  0E02               	movlw	2
 31131   006DF0  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 31132   006DF2  C516  F50E         	movff	??_setNV,writeNVM@index
 31133   006DF6  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 31134   006DFA  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 31135   006DFC  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 31136   006DFE  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 31137   006E00  C515  F511         	movff	setNV@value,writeNVM@value
 31138   006E04  0E00               	movlw	0
 31139   006E06  EC64  F03C         	call	_writeNVM
 31140   006E0A                     
 31141                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 31142   006E0A  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 31143   006E0E  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 31144   006E12  5019               	movf	setNV@index^(0+1280),w,c
 31145   006E14  ECD6  F041         	call	_APP_nvValueChanged
 31146   006E18                     
 31147                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 31148   006E18  0E00               	movlw	0
 31149   006E1A                     l1562:
 31150   006E1A  0012               	return		;funcret
 31151   006E1C                     __end_of_setNV:
 31152                           	callstack 0
 31153                           
 31154 ;; *************** function _APP_nvValueChanged *****************
 31155 ;; Defined at:
 31156 ;;		line 100 in file "../canargb_nvs.c"
 31157 ;; Parameters:    Size  Location     Type
 31158 ;;  index           1    wreg     unsigned char 
 31159 ;;  value           1    0[COMRAM] unsigned char 
 31160 ;;  oldValue        1    1[COMRAM] unsigned char 
 31161 ;; Auto vars:     Size  Location     Type
 31162 ;;  index           1    0[COMRAM] unsigned char 
 31163 ;; Return value:  Size  Location     Type
 31164 ;;                  1    wreg      void 
 31165 ;; Registers used:
 31166 ;;		wreg
 31167 ;; Tracked objects:
 31168 ;;		On entry : 0/0
 31169 ;;		On exit  : 0/0
 31170 ;;		Unchanged: 0/0
 31171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31176 ;;Total ram usage:        2 bytes
 31177 ;; Hardware stack levels used: 1
 31178 ;; Hardware stack levels required when called: 1
 31179 ;; This function calls:
 31180 ;;		Nothing
 31181 ;; This function is called by:
 31182 ;;		_setNV
 31183 ;; This function uses a non-reentrant model
 31184 ;;
 31185                           
 31186                           	psect	text49
 31187   0083AC                     __ptext49:
 31188                           	callstack 0
 31189   0083AC                     _APP_nvValueChanged:
 31190                           	callstack 122
 31191   0083AC  0012               	return		;funcret
 31192   0083AE                     __end_of_APP_nvValueChanged:
 31193                           	callstack 0
 31194                           
 31195 ;; *************** function _APP_nvValidate *****************
 31196 ;; Defined at:
 31197 ;;		line 92 in file "../canargb_nvs.c"
 31198 ;; Parameters:    Size  Location     Type
 31199 ;;  index           1    wreg     unsigned char 
 31200 ;;  value           1    0[COMRAM] unsigned char 
 31201 ;; Auto vars:     Size  Location     Type
 31202 ;;  index           1    0[COMRAM] unsigned char 
 31203 ;; Return value:  Size  Location     Type
 31204 ;;                  1    wreg      enum E23468
 31205 ;; Registers used:
 31206 ;;		wreg
 31207 ;; Tracked objects:
 31208 ;;		On entry : 0/0
 31209 ;;		On exit  : 0/0
 31210 ;;		Unchanged: 0/0
 31211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31212 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31216 ;;Total ram usage:        1 bytes
 31217 ;; Hardware stack levels used: 1
 31218 ;; Hardware stack levels required when called: 1
 31219 ;; This function calls:
 31220 ;;		Nothing
 31221 ;; This function is called by:
 31222 ;;		_setNV
 31223 ;; This function uses a non-reentrant model
 31224 ;;
 31225                           
 31226                           	psect	text50
 31227   00839A                     __ptext50:
 31228                           	callstack 0
 31229   00839A                     _APP_nvValidate:
 31230                           	callstack 122
 31231   00839A                     
 31232                           ;../canargb_nvs.c: 93:     return VALID;
 31233   00839A  0E01               	movlw	1
 31234   00839C  0012               	return		;funcret
 31235   00839E                     __end_of_APP_nvValidate:
 31236                           	callstack 0
 31237                           
 31238 ;; *************** function _nvGetESDdata *****************
 31239 ;; Defined at:
 31240 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 31241 ;; Parameters:    Size  Location     Type
 31242 ;;  id              1    wreg     unsigned char 
 31243 ;; Auto vars:     Size  Location     Type
 31244 ;;  id              1    0[COMRAM] unsigned char 
 31245 ;; Return value:  Size  Location     Type
 31246 ;;                  1    wreg      unsigned char 
 31247 ;; Registers used:
 31248 ;;		wreg, status,2, status,0
 31249 ;; Tracked objects:
 31250 ;;		On entry : 0/0
 31251 ;;		On exit  : 0/0
 31252 ;;		Unchanged: 0/0
 31253 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31258 ;;Total ram usage:        1 bytes
 31259 ;; Hardware stack levels used: 1
 31260 ;; Hardware stack levels required when called: 1
 31261 ;; This function calls:
 31262 ;;		Nothing
 31263 ;; This function is called by:
 31264 ;;		_mnsProcessMessage
 31265 ;; This function uses a non-reentrant model
 31266 ;;
 31267                           
 31268                           	psect	text51
 31269   008206                     __ptext51:
 31270                           	callstack 0
 31271   008206                     _nvGetESDdata:
 31272                           	callstack 123
 31273                           
 31274                           ;incstack = 0
 31275                           ;nvGetESDdata@id stored from wreg
 31276   008206  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 31277   008208                     
 31278                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 31279   008208  EF0C  F041         	goto	l9133
 31280   00820C                     l9123:
 31281   00820C  0E31               	movlw	49
 31282   00820E  EF13  F041         	goto	l1588
 31283   008212                     l9127:
 31284   008212  0E00               	movlw	0
 31285   008214  EF13  F041         	goto	l1588
 31286   008218                     l9133:
 31287   008218  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 31288                           
 31289                           ; Switch size 1, requested type "simple"
 31290                           ; Number of cases is 1, Range of values is 1 to 1
 31291                           ; switch strategies available:
 31292                           ; Name         Instructions Cycles
 31293                           ; simple_byte            4     3 (average)
 31294                           ;	Chosen strategy is simple_byte
 31295   00821A  0A01               	xorlw	1	; case 1
 31296   00821C  B4D8               	btfsc	status,2,c
 31297   00821E  EF06  F041         	goto	l9123
 31298   008222  EF09  F041         	goto	l9127
 31299   008226                     l1588:
 31300   008226  0012               	return		;funcret
 31301   008228                     __end_of_nvGetESDdata:
 31302                           	callstack 0
 31303                           
 31304 ;; *************** function _consumerEsdData *****************
 31305 ;; Defined at:
 31306 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31307 ;; Parameters:    Size  Location     Type
 31308 ;;  index           1    wreg     unsigned char 
 31309 ;; Auto vars:     Size  Location     Type
 31310 ;;  index           1    0[COMRAM] unsigned char 
 31311 ;; Return value:  Size  Location     Type
 31312 ;;                  1    wreg      unsigned char 
 31313 ;; Registers used:
 31314 ;;		wreg, status,2, status,0
 31315 ;; Tracked objects:
 31316 ;;		On entry : 0/0
 31317 ;;		On exit  : 0/0
 31318 ;;		Unchanged: 0/0
 31319 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31324 ;;Total ram usage:        1 bytes
 31325 ;; Hardware stack levels used: 1
 31326 ;; Hardware stack levels required when called: 1
 31327 ;; This function calls:
 31328 ;;		Nothing
 31329 ;; This function is called by:
 31330 ;;		_mnsProcessMessage
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text52
 31335   008288                     __ptext52:
 31336                           	callstack 0
 31337   008288                     _consumerEsdData:
 31338                           	callstack 123
 31339                           
 31340                           ;incstack = 0
 31341                           ;consumerEsdData@index stored from wreg
 31342   008288  6E01               	movwf	consumerEsdData@index^(0+1280),c
 31343   00828A                     
 31344                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 31345   00828A  EF4A  F041         	goto	l8765
 31346   00828E                     l8755:
 31347                           
 31348                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 31349   00828E  0E00               	movlw	0
 31350   008290  EF51  F041         	goto	l841
 31351   008294                     l8765:
 31352   008294  5001               	movf	consumerEsdData@index^(0+1280),w,c
 31353                           
 31354                           ; Switch size 1, requested type "simple"
 31355                           ; Number of cases is 1, Range of values is 0 to 0
 31356                           ; switch strategies available:
 31357                           ; Name         Instructions Cycles
 31358                           ; simple_byte            4     3 (average)
 31359                           ;	Chosen strategy is simple_byte
 31360   008296  0A00               	xorlw	0	; case 0
 31361   008298  B4D8               	btfsc	status,2,c
 31362   00829A  EF47  F041         	goto	l8755
 31363   00829E  EF47  F041         	goto	l8755
 31364   0082A2                     l841:
 31365   0082A2  0012               	return		;funcret
 31366   0082A4                     __end_of_consumerEsdData:
 31367                           	callstack 0
 31368                           
 31369 ;; *************** function _canEsdData *****************
 31370 ;; Defined at:
 31371 ;;		line 468 in file "../../VLCBlib_PIC/can18_can_2.c"
 31372 ;; Parameters:    Size  Location     Type
 31373 ;;  id              1    wreg     unsigned char 
 31374 ;; Auto vars:     Size  Location     Type
 31375 ;;  id              1    0[COMRAM] unsigned char 
 31376 ;; Return value:  Size  Location     Type
 31377 ;;                  1    wreg      unsigned char 
 31378 ;; Registers used:
 31379 ;;		wreg, status,2, status,0
 31380 ;; Tracked objects:
 31381 ;;		On entry : 0/0
 31382 ;;		On exit  : 0/0
 31383 ;;		Unchanged: 0/0
 31384 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31389 ;;Total ram usage:        1 bytes
 31390 ;; Hardware stack levels used: 1
 31391 ;; Hardware stack levels required when called: 1
 31392 ;; This function calls:
 31393 ;;		Nothing
 31394 ;; This function is called by:
 31395 ;;		_mnsProcessMessage
 31396 ;; This function uses a non-reentrant model
 31397 ;;
 31398                           
 31399                           	psect	text53
 31400   008228                     __ptext53:
 31401                           	callstack 0
 31402   008228                     _canEsdData:
 31403                           	callstack 123
 31404                           
 31405                           ;incstack = 0
 31406                           ;canEsdData@id stored from wreg
 31407   008228  6E01               	movwf	canEsdData@id^(0+1280),c
 31408   00822A                     
 31409                           ;../../VLCBlib_PIC/can18_can_2.c: 469:     switch(id) {
 31410   00822A  EF1D  F041         	goto	l8689
 31411   00822E                     l8679:
 31412                           
 31413                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return CAN_HW_PIC_CAN_2_0;
 31414   00822E  0E02               	movlw	2
 31415   008230  EF24  F041         	goto	l640
 31416   008234                     l8683:
 31417                           
 31418                           ;../../VLCBlib_PIC/can18_can_2.c: 473:             return 0;
 31419   008234  0E00               	movlw	0
 31420   008236  EF24  F041         	goto	l640
 31421   00823A                     l8689:
 31422   00823A  5001               	movf	canEsdData@id^(0+1280),w,c
 31423                           
 31424                           ; Switch size 1, requested type "simple"
 31425                           ; Number of cases is 1, Range of values is 1 to 1
 31426                           ; switch strategies available:
 31427                           ; Name         Instructions Cycles
 31428                           ; simple_byte            4     3 (average)
 31429                           ;	Chosen strategy is simple_byte
 31430   00823C  0A01               	xorlw	1	; case 1
 31431   00823E  B4D8               	btfsc	status,2,c
 31432   008240  EF17  F041         	goto	l8679
 31433   008244  EF1A  F041         	goto	l8683
 31434   008248                     l640:
 31435   008248  0012               	return		;funcret
 31436   00824A                     __end_of_canEsdData:
 31437                           	callstack 0
 31438                           
 31439 ;; *************** function _bootEsdData *****************
 31440 ;; Defined at:
 31441 ;;		line 252 in file "../../VLCBlib_PIC/boot.c"
 31442 ;; Parameters:    Size  Location     Type
 31443 ;;  id              1    wreg     unsigned char 
 31444 ;; Auto vars:     Size  Location     Type
 31445 ;;  id              1    0[COMRAM] unsigned char 
 31446 ;; Return value:  Size  Location     Type
 31447 ;;                  1    wreg      unsigned char 
 31448 ;; Registers used:
 31449 ;;		wreg, status,2, status,0
 31450 ;; Tracked objects:
 31451 ;;		On entry : 0/0
 31452 ;;		On exit  : 0/0
 31453 ;;		Unchanged: 0/0
 31454 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31459 ;;Total ram usage:        1 bytes
 31460 ;; Hardware stack levels used: 1
 31461 ;; Hardware stack levels required when called: 1
 31462 ;; This function calls:
 31463 ;;		Nothing
 31464 ;; This function is called by:
 31465 ;;		_mnsProcessMessage
 31466 ;; This function uses a non-reentrant model
 31467 ;;
 31468                           
 31469                           	psect	text54
 31470   007F0E                     __ptext54:
 31471                           	callstack 0
 31472   007F0E                     _bootEsdData:
 31473                           	callstack 123
 31474                           
 31475                           ;incstack = 0
 31476                           ;bootEsdData@id stored from wreg
 31477   007F0E  6E01               	movwf	bootEsdData@id^(0+1280),c
 31478   007F10                     
 31479                           ;../../VLCBlib_PIC/boot.c: 253:     switch (id) {
 31480   007F10  EF95  F03F         	goto	l8583
 31481   007F14                     l354:
 31482                           
 31483                           ;../../VLCBlib_PIC/boot.c: 256:             return bootloaderType;
 31484   007F14  0105               	movlb	5	; () banked
 31485   007F16  51AA               	movf	_bootloaderType& (0+255),w,b
 31486   007F18  EFA0  F03F         	goto	l355
 31487   007F1C                     l356:
 31488                           
 31489                           ;../../VLCBlib_PIC/boot.c: 259:             return bootloaderVersion;
 31490   007F1C  0105               	movlb	5	; () banked
 31491   007F1E  51A9               	movf	_bootloaderVersion& (0+255),w,b
 31492   007F20  EFA0  F03F         	goto	l355
 31493   007F24                     l8577:
 31494                           
 31495                           ;../../VLCBlib_PIC/boot.c: 261:             return 0;
 31496   007F24  0E00               	movlw	0
 31497   007F26  EFA0  F03F         	goto	l355
 31498   007F2A                     l8583:
 31499   007F2A  5001               	movf	bootEsdData@id^(0+1280),w,c
 31500                           
 31501                           ; Switch size 1, requested type "simple"
 31502                           ; Number of cases is 2, Range of values is 1 to 2
 31503                           ; switch strategies available:
 31504                           ; Name         Instructions Cycles
 31505                           ; simple_byte            7     4 (average)
 31506                           ;	Chosen strategy is simple_byte
 31507   007F2C  0A01               	xorlw	1	; case 1
 31508   007F2E  B4D8               	btfsc	status,2,c
 31509   007F30  EF8A  F03F         	goto	l354
 31510   007F34  0A03               	xorlw	3	; case 2
 31511   007F36  B4D8               	btfsc	status,2,c
 31512   007F38  EF8E  F03F         	goto	l356
 31513   007F3C  EF92  F03F         	goto	l8577
 31514   007F40                     l355:
 31515   007F40  0012               	return		;funcret
 31516   007F42                     __end_of_bootEsdData:
 31517                           	callstack 0
 31518                           
 31519 ;; *************** function _teachGetESDdata *****************
 31520 ;; Defined at:
 31521 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31522 ;; Parameters:    Size  Location     Type
 31523 ;;  id              1    wreg     unsigned char 
 31524 ;; Auto vars:     Size  Location     Type
 31525 ;;  id              1    0[COMRAM] unsigned char 
 31526 ;; Return value:  Size  Location     Type
 31527 ;;                  1    wreg      unsigned char 
 31528 ;; Registers used:
 31529 ;;		wreg, status,2, status,0
 31530 ;; Tracked objects:
 31531 ;;		On entry : 0/0
 31532 ;;		On exit  : 0/0
 31533 ;;		Unchanged: 0/0
 31534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31539 ;;Total ram usage:        1 bytes
 31540 ;; Hardware stack levels used: 1
 31541 ;; Hardware stack levels required when called: 1
 31542 ;; This function calls:
 31543 ;;		Nothing
 31544 ;; This function is called by:
 31545 ;;		_mnsProcessMessage
 31546 ;; This function uses a non-reentrant model
 31547 ;;
 31548                           
 31549                           	psect	text55
 31550   007F78                     __ptext55:
 31551                           	callstack 0
 31552   007F78                     _teachGetESDdata:
 31553                           	callstack 123
 31554                           
 31555                           ;incstack = 0
 31556                           ;teachGetESDdata@id stored from wreg
 31557   007F78  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 31558   007F7A                     
 31559                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 31560   007F7A  EFC8  F03F         	goto	l8961
 31561   007F7E                     l8947:
 31562   007F7E  0EFF               	movlw	255
 31563   007F80  EFD3  F03F         	goto	l1027
 31564   007F84                     l8951:
 31565   007F84  0EFC               	movlw	252
 31566   007F86  EFD3  F03F         	goto	l1027
 31567   007F8A                     l8955:
 31568   007F8A  0E00               	movlw	0
 31569   007F8C  EFD3  F03F         	goto	l1027
 31570   007F90                     l8961:
 31571   007F90  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 31572                           
 31573                           ; Switch size 1, requested type "simple"
 31574                           ; Number of cases is 2, Range of values is 1 to 2
 31575                           ; switch strategies available:
 31576                           ; Name         Instructions Cycles
 31577                           ; simple_byte            7     4 (average)
 31578                           ;	Chosen strategy is simple_byte
 31579   007F92  0A01               	xorlw	1	; case 1
 31580   007F94  B4D8               	btfsc	status,2,c
 31581   007F96  EFBF  F03F         	goto	l8947
 31582   007F9A  0A03               	xorlw	3	; case 2
 31583   007F9C  B4D8               	btfsc	status,2,c
 31584   007F9E  EFC2  F03F         	goto	l8951
 31585   007FA2  EFC5  F03F         	goto	l8955
 31586   007FA6                     l1027:
 31587   007FA6  0012               	return		;funcret
 31588   007FA8                     __end_of_teachGetESDdata:
 31589                           	callstack 0
 31590                           
 31591 ;; *************** function _nvGetDiagnostic *****************
 31592 ;; Defined at:
 31593 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 31594 ;; Parameters:    Size  Location     Type
 31595 ;;  index           1    wreg     unsigned char 
 31596 ;; Auto vars:     Size  Location     Type
 31597 ;;  index           1    8[COMRAM] unsigned char 
 31598 ;; Return value:  Size  Location     Type
 31599 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31600 ;; Registers used:
 31601 ;;		wreg, status,2, status,0, prodl, prodh
 31602 ;; Tracked objects:
 31603 ;;		On entry : 0/0
 31604 ;;		On exit  : 0/0
 31605 ;;		Unchanged: 0/0
 31606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31611 ;;Total ram usage:        3 bytes
 31612 ;; Hardware stack levels used: 1
 31613 ;; Hardware stack levels required when called: 1
 31614 ;; This function calls:
 31615 ;;		Nothing
 31616 ;; This function is called by:
 31617 ;;		_mnsTRallDiagnosticsCallback
 31618 ;;		_mnsProcessMessage
 31619 ;; This function uses a non-reentrant model
 31620 ;;
 31621                           
 31622                           	psect	text56
 31623   007FA8                     __ptext56:
 31624                           	callstack 0
 31625   007FA8                     _nvGetDiagnostic:
 31626                           	callstack 122
 31627                           
 31628                           ;incstack = 0
 31629                           ;nvGetDiagnostic@index stored from wreg
 31630   007FA8  6E09               	movwf	nvGetDiagnostic@index^(0+1280),c
 31631   007FAA                     
 31632                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 31633   007FAA  0E02               	movlw	2
 31634   007FAC  6409               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 31635   007FAE  EFDB  F03F         	goto	u5731
 31636   007FB2  EFDD  F03F         	goto	u5730
 31637   007FB6                     u5731:
 31638   007FB6  EFE3  F03F         	goto	l8441
 31639   007FBA                     u5730:
 31640   007FBA                     
 31641                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 31642   007FBA  0E00               	movlw	0
 31643   007FBC  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31644   007FBE  0E00               	movlw	0
 31645   007FC0  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31646   007FC2  EFEB  F03F         	goto	l1543
 31647   007FC6                     l8441:
 31648                           
 31649                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 31650   007FC6  5009               	movf	nvGetDiagnostic@index^(0+1280),w,c
 31651   007FC8  0D02               	mullw	2
 31652   007FCA  0EBB               	movlw	low _nvDiagnostics
 31653   007FCC  24F3               	addwf	243,w,c
 31654   007FCE  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31655   007FD0  0E05               	movlw	high _nvDiagnostics
 31656   007FD2  20F4               	addwfc	prodh,w,c
 31657   007FD4  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31658   007FD6                     l1543:
 31659   007FD6  0012               	return		;funcret
 31660   007FD8                     __end_of_nvGetDiagnostic:
 31661                           	callstack 0
 31662                           
 31663 ;; *************** function _mnsGetDiagnostic *****************
 31664 ;; Defined at:
 31665 ;;		line 807 in file "../../VLCBlib_PIC/mns.c"
 31666 ;; Parameters:    Size  Location     Type
 31667 ;;  index           1    wreg     unsigned char 
 31668 ;; Auto vars:     Size  Location     Type
 31669 ;;  index           1    8[COMRAM] unsigned char 
 31670 ;; Return value:  Size  Location     Type
 31671 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31672 ;; Registers used:
 31673 ;;		wreg, status,2, status,0, prodl, prodh
 31674 ;; Tracked objects:
 31675 ;;		On entry : 0/0
 31676 ;;		On exit  : 0/0
 31677 ;;		Unchanged: 0/0
 31678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31683 ;;Total ram usage:        3 bytes
 31684 ;; Hardware stack levels used: 1
 31685 ;; Hardware stack levels required when called: 1
 31686 ;; This function calls:
 31687 ;;		Nothing
 31688 ;; This function is called by:
 31689 ;;		_mnsTRallDiagnosticsCallback
 31690 ;;		_mnsProcessMessage
 31691 ;; This function uses a non-reentrant model
 31692 ;;
 31693                           
 31694                           	psect	text57
 31695   007FD8                     __ptext57:
 31696                           	callstack 0
 31697   007FD8                     _mnsGetDiagnostic:
 31698                           	callstack 122
 31699                           
 31700                           ;incstack = 0
 31701                           ;mnsGetDiagnostic@index stored from wreg
 31702   007FD8  6E09               	movwf	mnsGetDiagnostic@index^(0+1280),c
 31703   007FDA                     
 31704                           ;../../VLCBlib_PIC/mns.c: 808:     if (index > 6) {
 31705   007FDA  0E06               	movlw	6
 31706   007FDC  6409               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 31707   007FDE  EFF3  F03F         	goto	u5681
 31708   007FE2  EFF5  F03F         	goto	u5680
 31709   007FE6                     u5681:
 31710   007FE6  EFFB  F03F         	goto	l8393
 31711   007FEA                     u5680:
 31712   007FEA                     
 31713                           ;../../VLCBlib_PIC/mns.c: 809:         return ((void*)0);
 31714   007FEA  0E00               	movlw	0
 31715   007FEC  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31716   007FEE  0E00               	movlw	0
 31717   007FF0  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31718   007FF2  EF03  F040         	goto	l1433
 31719   007FF6                     l8393:
 31720                           
 31721                           ;../../VLCBlib_PIC/mns.c: 811:     return &(mnsDiagnostics[index]);
 31722   007FF6  5009               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 31723   007FF8  0D02               	mullw	2
 31724   007FFA  0EAD               	movlw	low _mnsDiagnostics
 31725   007FFC  24F3               	addwf	243,w,c
 31726   007FFE  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31727   008000  0E05               	movlw	high _mnsDiagnostics
 31728   008002  20F4               	addwfc	prodh,w,c
 31729   008004  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31730   008006                     l1433:
 31731   008006  0012               	return		;funcret
 31732   008008                     __end_of_mnsGetDiagnostic:
 31733                           	callstack 0
 31734                           
 31735 ;; *************** function _consumerGetDiagnostic *****************
 31736 ;; Defined at:
 31737 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31738 ;; Parameters:    Size  Location     Type
 31739 ;;  index           1    wreg     unsigned char 
 31740 ;; Auto vars:     Size  Location     Type
 31741 ;;  index           1    8[COMRAM] unsigned char 
 31742 ;; Return value:  Size  Location     Type
 31743 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31744 ;; Registers used:
 31745 ;;		wreg, status,2, status,0, prodl, prodh
 31746 ;; Tracked objects:
 31747 ;;		On entry : 0/0
 31748 ;;		On exit  : 0/0
 31749 ;;		Unchanged: 0/0
 31750 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31755 ;;Total ram usage:        3 bytes
 31756 ;; Hardware stack levels used: 1
 31757 ;; Hardware stack levels required when called: 1
 31758 ;; This function calls:
 31759 ;;		Nothing
 31760 ;; This function is called by:
 31761 ;;		_mnsTRallDiagnosticsCallback
 31762 ;;		_mnsProcessMessage
 31763 ;; This function uses a non-reentrant model
 31764 ;;
 31765                           
 31766                           	psect	text58
 31767   008008                     __ptext58:
 31768                           	callstack 0
 31769   008008                     _consumerGetDiagnostic:
 31770                           	callstack 122
 31771                           
 31772                           ;incstack = 0
 31773                           ;consumerGetDiagnostic@index stored from wreg
 31774   008008  6E09               	movwf	consumerGetDiagnostic@index^(0+1280),c
 31775   00800A                     
 31776                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 31777   00800A  0E02               	movlw	2
 31778   00800C  6409               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 31779   00800E  EF0B  F040         	goto	u5511
 31780   008012  EF0D  F040         	goto	u5510
 31781   008016                     u5511:
 31782   008016  EF13  F040         	goto	l8169
 31783   00801A                     u5510:
 31784   00801A                     
 31785                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 31786   00801A  0E00               	movlw	0
 31787   00801C  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31788   00801E  0E00               	movlw	0
 31789   008020  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31790   008022  EF1B  F040         	goto	l836
 31791   008026                     l8169:
 31792                           
 31793                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 31794   008026  5009               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 31795   008028  0D02               	mullw	2
 31796   00802A  0EC1               	movlw	low _consumerDiagnostics
 31797   00802C  24F3               	addwf	243,w,c
 31798   00802E  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31799   008030  0E05               	movlw	high _consumerDiagnostics
 31800   008032  20F4               	addwfc	prodh,w,c
 31801   008034  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31802   008036                     l836:
 31803   008036  0012               	return		;funcret
 31804   008038                     __end_of_consumerGetDiagnostic:
 31805                           	callstack 0
 31806                           
 31807 ;; *************** function _canGetDiagnostic *****************
 31808 ;; Defined at:
 31809 ;;		line 500 in file "../../VLCBlib_PIC/can18_can_2.c"
 31810 ;; Parameters:    Size  Location     Type
 31811 ;;  index           1    wreg     unsigned char 
 31812 ;; Auto vars:     Size  Location     Type
 31813 ;;  index           1    9[COMRAM] unsigned char 
 31814 ;;  i16             2    0        short 
 31815 ;; Return value:  Size  Location     Type
 31816 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31817 ;; Registers used:
 31818 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31819 ;; Tracked objects:
 31820 ;;		On entry : 0/0
 31821 ;;		On exit  : 0/0
 31822 ;;		Unchanged: 0/0
 31823 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31828 ;;Total ram usage:        4 bytes
 31829 ;; Hardware stack levels used: 1
 31830 ;; Hardware stack levels required when called: 2
 31831 ;; This function calls:
 31832 ;;		_getNumRxBuffersInUse
 31833 ;;		_getNumTxBuffersInUse
 31834 ;; This function is called by:
 31835 ;;		_mnsTRallDiagnosticsCallback
 31836 ;;		_mnsProcessMessage
 31837 ;; This function uses a non-reentrant model
 31838 ;;
 31839                           
 31840                           	psect	text59
 31841   00662E                     __ptext59:
 31842                           	callstack 0
 31843   00662E                     _canGetDiagnostic:
 31844                           	callstack 121
 31845                           
 31846                           ;incstack = 0
 31847                           ;canGetDiagnostic@index stored from wreg
 31848   00662E  6E0A               	movwf	canGetDiagnostic@index^(0+1280),c
 31849   006630                     
 31850                           ;../../VLCBlib_PIC/can18_can_2.c: 501:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           503:     if (index > 18) {
 31851   006630  0E12               	movlw	18
 31852   006632  640A               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 31853   006634  EF1E  F033         	goto	u5481
 31854   006638  EF20  F033         	goto	u5480
 31855   00663C                     u5481:
 31856   00663C  EF4A  F033         	goto	l8137
 31857   006640                     u5480:
 31858   006640                     
 31859                           ;../../VLCBlib_PIC/can18_can_2.c: 504:         return ((void*)0);
 31860   006640  0E00               	movlw	0
 31861   006642  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31862   006644  0E00               	movlw	0
 31863   006646  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31864   006648  EF69  F033         	goto	l646
 31865   00664C                     l648:
 31866                           
 31867                           ;../../VLCBlib_PIC/can18_can_2.c: 508:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 31868   00664C  C136 F694          	movff	310,_canDiagnostics+6	;volatile
 31869   006650  0106               	movlb	6	; () banked
 31870   006652  6B95               	clrf	(_canDiagnostics+7)& (0+255),b
 31871                           
 31872                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             break;
 31873   006654  EF61  F033         	goto	l8139
 31874   006658                     l8131:
 31875                           
 31876                           ;../../VLCBlib_PIC/can18_can_2.c: 511:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 31877   006658  EC23  F039         	call	_getNumTxBuffersInUse	;wreg free
 31878   00665C  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31879   00665E  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31880   006660  0106               	movlb	6	; () banked
 31881   006662  6F96               	movwf	(_canDiagnostics+8)& (0+255),b
 31882   006664  6B97               	clrf	(_canDiagnostics+9)& (0+255),b
 31883                           
 31884                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             break;
 31885   006666  EF61  F033         	goto	l8139
 31886   00666A                     l8133:
 31887                           
 31888                           ;../../VLCBlib_PIC/can18_can_2.c: 514:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 31889   00666A  EC4F  F03A         	call	_getNumRxBuffersInUse	;wreg free
 31890   00666E  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31891   006670  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31892   006672  0106               	movlb	6	; () banked
 31893   006674  6F9C               	movwf	(_canDiagnostics+14)& (0+255),b
 31894   006676  6B9D               	clrf	(_canDiagnostics+15)& (0+255),b
 31895                           
 31896                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             break;
 31897   006678  EF61  F033         	goto	l8139
 31898   00667C                     l652:
 31899                           
 31900                           ;../../VLCBlib_PIC/can18_can_2.c: 517:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 31901   00667C  C139 F692          	movff	313,_canDiagnostics+4	;volatile
 31902   006680  0106               	movlb	6	; () banked
 31903   006682  6B93               	clrf	(_canDiagnostics+5)& (0+255),b
 31904                           
 31905                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             break;
 31906   006684  EF61  F033         	goto	l8139
 31907   006688                     l653:
 31908                           
 31909                           ;../../VLCBlib_PIC/can18_can_2.c: 520:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 31910   006688  C138 F690          	movff	312,_canDiagnostics+2	;volatile
 31911   00668C  0106               	movlb	6	; () banked
 31912   00668E  6B91               	clrf	(_canDiagnostics+3)& (0+255),b
 31913                           
 31914                           ;../../VLCBlib_PIC/can18_can_2.c: 521:             break;
 31915   006690  EF61  F033         	goto	l8139
 31916   006694                     l8137:
 31917   006694  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31918                           
 31919                           ; Switch size 1, requested type "simple"
 31920                           ; Number of cases is 5, Range of values is 1 to 7
 31921                           ; switch strategies available:
 31922                           ; Name         Instructions Cycles
 31923                           ; simple_byte           16     9 (average)
 31924                           ;	Chosen strategy is simple_byte
 31925   006696  0A01               	xorlw	1	; case 1
 31926   006698  B4D8               	btfsc	status,2,c
 31927   00669A  EF44  F033         	goto	l653
 31928   00669E  0A03               	xorlw	3	; case 2
 31929   0066A0  B4D8               	btfsc	status,2,c
 31930   0066A2  EF3E  F033         	goto	l652
 31931   0066A6  0A01               	xorlw	1	; case 3
 31932   0066A8  B4D8               	btfsc	status,2,c
 31933   0066AA  EF26  F033         	goto	l648
 31934   0066AE  0A07               	xorlw	7	; case 4
 31935   0066B0  B4D8               	btfsc	status,2,c
 31936   0066B2  EF2C  F033         	goto	l8131
 31937   0066B6  0A03               	xorlw	3	; case 7
 31938   0066B8  B4D8               	btfsc	status,2,c
 31939   0066BA  EF35  F033         	goto	l8133
 31940   0066BE  EF61  F033         	goto	l8139
 31941   0066C2                     l8139:
 31942                           
 31943                           ;../../VLCBlib_PIC/can18_can_2.c: 524:     return &(canDiagnostics[index]);
 31944   0066C2  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31945   0066C4  0D02               	mullw	2
 31946   0066C6  0E8E               	movlw	low _canDiagnostics
 31947   0066C8  24F3               	addwf	243,w,c
 31948   0066CA  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31949   0066CC  0E06               	movlw	high _canDiagnostics
 31950   0066CE  20F4               	addwfc	prodh,w,c
 31951   0066D0  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31952   0066D2                     l646:
 31953   0066D2  0012               	return		;funcret
 31954   0066D4                     __end_of_canGetDiagnostic:
 31955                           	callstack 0
 31956                           
 31957 ;; *************** function _teachGetDiagnostic *****************
 31958 ;; Defined at:
 31959 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31960 ;; Parameters:    Size  Location     Type
 31961 ;;  index           1    wreg     unsigned char 
 31962 ;; Auto vars:     Size  Location     Type
 31963 ;;  index           1    8[COMRAM] unsigned char 
 31964 ;; Return value:  Size  Location     Type
 31965 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31966 ;; Registers used:
 31967 ;;		wreg, status,2, status,0, prodl, prodh
 31968 ;; Tracked objects:
 31969 ;;		On entry : 0/0
 31970 ;;		On exit  : 0/0
 31971 ;;		Unchanged: 0/0
 31972 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31976 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31977 ;;Total ram usage:        3 bytes
 31978 ;; Hardware stack levels used: 1
 31979 ;; Hardware stack levels required when called: 1
 31980 ;; This function calls:
 31981 ;;		Nothing
 31982 ;; This function is called by:
 31983 ;;		_mnsTRallDiagnosticsCallback
 31984 ;;		_mnsProcessMessage
 31985 ;; This function uses a non-reentrant model
 31986 ;;
 31987                           
 31988                           	psect	text60
 31989   008038                     __ptext60:
 31990                           	callstack 0
 31991   008038                     _teachGetDiagnostic:
 31992                           	callstack 122
 31993                           
 31994                           ;incstack = 0
 31995                           ;teachGetDiagnostic@index stored from wreg
 31996   008038  6E09               	movwf	teachGetDiagnostic@index^(0+1280),c
 31997   00803A                     
 31998                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 31999   00803A  0E01               	movlw	1
 32000   00803C  6409               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 32001   00803E  EF23  F040         	goto	u5561
 32002   008042  EF25  F040         	goto	u5560
 32003   008046                     u5561:
 32004   008046  EF2B  F040         	goto	l8199
 32005   00804A                     u5560:
 32006   00804A                     
 32007                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 32008   00804A  0E00               	movlw	0
 32009   00804C  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 32010   00804E  0E00               	movlw	0
 32011   008050  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 32012   008052  EF33  F040         	goto	l1034
 32013   008056                     l8199:
 32014                           
 32015                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 32016   008056  5009               	movf	teachGetDiagnostic@index^(0+1280),w,c
 32017   008058  0D02               	mullw	2
 32018   00805A  0ECC               	movlw	low _teachDiagnostics
 32019   00805C  24F3               	addwf	243,w,c
 32020   00805E  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 32021   008060  0E05               	movlw	high _teachDiagnostics
 32022   008062  20F4               	addwfc	prodh,w,c
 32023   008064  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 32024   008066                     l1034:
 32025   008066  0012               	return		;funcret
 32026   008068                     __end_of_teachGetDiagnostic:
 32027                           	callstack 0
 32028                           
 32029 ;; *************** function _startTimedResponse *****************
 32030 ;; Defined at:
 32031 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 32032 ;; Parameters:    Size  Location     Type
 32033 ;;  type            1    wreg     unsigned char 
 32034 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 32035 ;;  callback        2    5[COMRAM] PTR FTN(unsigned char ,u
 32036 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 32037 ;;		 -> reqevCallback(1), nerdCallback(1), 
 32038 ;; Auto vars:     Size  Location     Type
 32039 ;;  type            1    7[COMRAM] unsigned char 
 32040 ;; Return value:  Size  Location     Type
 32041 ;;                  1    wreg      void 
 32042 ;; Registers used:
 32043 ;;		wreg, status,2, status,0
 32044 ;; Tracked objects:
 32045 ;;		On entry : 0/0
 32046 ;;		On exit  : 0/0
 32047 ;;		Unchanged: 0/0
 32048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32049 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32053 ;;Total ram usage:        4 bytes
 32054 ;; Hardware stack levels used: 1
 32055 ;; Hardware stack levels required when called: 1
 32056 ;; This function calls:
 32057 ;;		Nothing
 32058 ;; This function is called by:
 32059 ;;		_doNerd
 32060 ;;		_doReval
 32061 ;;		_doReqev
 32062 ;;		_mnsProcessMessage
 32063 ;;		_nvProcessMessage
 32064 ;; This function uses a non-reentrant model
 32065 ;;
 32066                           
 32067                           	psect	text61
 32068   007988                     __ptext61:
 32069                           	callstack 0
 32070   007988                     _startTimedResponse:
 32071                           	callstack 122
 32072                           
 32073                           ;incstack = 0
 32074                           ;startTimedResponse@type stored from wreg
 32075   007988  6E08               	movwf	startTimedResponse@type^(0+1280),c
 32076   00798A                     
 32077                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 32078   00798A  C508  F596         	movff	startTimedResponse@type,_timedResponseType
 32079   00798E                     
 32080                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 32081   00798E  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 32082   007990  A4D8               	btfss	status,2,c
 32083   007992  EFCD  F03C         	goto	u5601
 32084   007996  EFCF  F03C         	goto	u5600
 32085   00799A                     u5601:
 32086   00799A  EFD5  F03C         	goto	l1872
 32087   00799E                     u5600:
 32088   00799E                     
 32089                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 32090   00799E  0E01               	movlw	1
 32091   0079A0  0105               	movlb	5	; () banked
 32092   0079A2  6F97               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32093   0079A4                     
 32094                           ; BSR set to: 5
 32095                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 32096   0079A4  6B98               	clrf	_timedResponseServiceIndex& (0+255),b
 32097                           
 32098                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 32099   0079A6  EFEC  F03C         	goto	l8239
 32100   0079AA                     l1872:
 32101                           
 32102                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 32103   0079AA  0105               	movlb	5	; () banked
 32104   0079AC  6B97               	clrf	_timedResponseAllServicesFlag& (0+255),b
 32105   0079AE                     
 32106                           ; BSR set to: 5
 32107                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 6)) {
 32108   0079AE  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 32109   0079B0  B4D8               	btfsc	status,2,c
 32110   0079B2  EFDD  F03C         	goto	u5611
 32111   0079B6  EFDF  F03C         	goto	u5610
 32112   0079BA                     u5611:
 32113   0079BA  EFE7  F03C         	goto	l1876
 32114   0079BE                     u5610:
 32115   0079BE                     
 32116                           ; BSR set to: 5
 32117   0079BE  0E06               	movlw	6
 32118   0079C0  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 32119   0079C2  EFE5  F03C         	goto	u5621
 32120   0079C6  EFE7  F03C         	goto	u5620
 32121   0079CA                     u5621:
 32122   0079CA  EFEA  F03C         	goto	l8237
 32123   0079CE                     u5620:
 32124   0079CE                     l1876:
 32125                           
 32126                           ; BSR set to: 5
 32127                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 32128   0079CE  6996               	setf	_timedResponseType& (0+255),b
 32129                           
 32130                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 32131   0079D0  EFF1  F03C         	goto	l1877
 32132   0079D4                     l8237:
 32133                           
 32134                           ; BSR set to: 5
 32135                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 32136   0079D4  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 32137   0079D6  6F98               	movwf	_timedResponseServiceIndex& (0+255),b
 32138   0079D8                     l8239:
 32139                           
 32140                           ; BSR set to: 5
 32141                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 32142   0079D8  6B95               	clrf	_timedResponseStep& (0+255),b
 32143                           
 32144                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 32145   0079DA  C506  F587         	movff	startTimedResponse@callback,_timedResponseCallback
 32146   0079DE  C507  F588         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 32147   0079E2                     l1877:
 32148                           
 32149                           ; BSR set to: 5
 32150   0079E2  0012               	return		;funcret
 32151   0079E4                     __end_of_startTimedResponse:
 32152                           	callstack 0
 32153                           
 32154 ;; *************** function _sendMessage6 *****************
 32155 ;; Defined at:
 32156 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 32157 ;; Parameters:    Size  Location     Type
 32158 ;;  opc             1    wreg     enum E22928
 32159 ;;  data1           1   37[COMRAM] unsigned char 
 32160 ;;  data2           1   38[COMRAM] unsigned char 
 32161 ;;  data3           1   39[COMRAM] unsigned char 
 32162 ;;  data4           1   40[COMRAM] unsigned char 
 32163 ;;  data5           1   41[COMRAM] unsigned char 
 32164 ;;  data6           1   42[COMRAM] unsigned char 
 32165 ;; Auto vars:     Size  Location     Type
 32166 ;;  opc             1   43[COMRAM] enum E22928
 32167 ;; Return value:  Size  Location     Type
 32168 ;;                  1    wreg      void 
 32169 ;; Registers used:
 32170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32171 ;; Tracked objects:
 32172 ;;		On entry : 0/0
 32173 ;;		On exit  : 0/0
 32174 ;;		Unchanged: 0/0
 32175 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32179 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32180 ;;Total ram usage:        7 bytes
 32181 ;; Hardware stack levels used: 1
 32182 ;; Hardware stack levels required when called: 5
 32183 ;; This function calls:
 32184 ;;		_sendMessage
 32185 ;; This function is called by:
 32186 ;;		_doReqev
 32187 ;;		_reqevCallback
 32188 ;;		_mnsProcessMessage
 32189 ;;		_mnsTRallDiagnosticsCallback
 32190 ;; This function uses a non-reentrant model
 32191 ;;
 32192                           
 32193                           	psect	text62
 32194   008096                     __ptext62:
 32195                           	callstack 0
 32196   008096                     _sendMessage6:
 32197                           	callstack 118
 32198                           
 32199                           ; BSR set to: 5
 32200                           ;incstack = 0
 32201                           ;sendMessage6@opc stored from wreg
 32202   008096  6E2C               	movwf	sendMessage6@opc^(0+1280),c
 32203   008098                     
 32204                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 32205   008098  0E07               	movlw	7
 32206   00809A  6E1B               	movwf	sendMessage@len^(0+1280),c
 32207   00809C  C526  F51C         	movff	sendMessage6@data1,sendMessage@data1
 32208   0080A0  C527  F51D         	movff	sendMessage6@data2,sendMessage@data2
 32209   0080A4  C528  F51E         	movff	sendMessage6@data3,sendMessage@data3
 32210   0080A8  C529  F51F         	movff	sendMessage6@data4,sendMessage@data4
 32211   0080AC  C52A  F520         	movff	sendMessage6@data5,sendMessage@data5
 32212   0080B0  C52B  F521         	movff	sendMessage6@data6,sendMessage@data6
 32213   0080B4  0E00               	movlw	0
 32214   0080B6  6E22               	movwf	sendMessage@data7^(0+1280),c
 32215   0080B8  502C               	movf	sendMessage6@opc^(0+1280),w,c
 32216   0080BA  EC7E  F036         	call	_sendMessage
 32217   0080BE  0012               	return		;funcret
 32218   0080C0                     __end_of_sendMessage6:
 32219                           	callstack 0
 32220                           
 32221 ;; *************** function _sendMessage4 *****************
 32222 ;; Defined at:
 32223 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;  opc             1    wreg     enum E22928
 32226 ;;  data1           1   37[COMRAM] unsigned char 
 32227 ;;  data2           1   38[COMRAM] unsigned char 
 32228 ;;  data3           1   39[COMRAM] unsigned char 
 32229 ;;  data4           1   40[COMRAM] unsigned char 
 32230 ;; Auto vars:     Size  Location     Type
 32231 ;;  opc             1   41[COMRAM] enum E22928
 32232 ;; Return value:  Size  Location     Type
 32233 ;;                  1    wreg      void 
 32234 ;; Registers used:
 32235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32236 ;; Tracked objects:
 32237 ;;		On entry : 0/0
 32238 ;;		On exit  : 0/0
 32239 ;;		Unchanged: 0/0
 32240 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32245 ;;Total ram usage:        5 bytes
 32246 ;; Hardware stack levels used: 1
 32247 ;; Hardware stack levels required when called: 5
 32248 ;; This function calls:
 32249 ;;		_sendMessage
 32250 ;; This function is called by:
 32251 ;;		_mnsProcessMessage
 32252 ;;		_mnsTRrqnpnCallback
 32253 ;;		_nvProcessMessage
 32254 ;;		_nvTRnvrdCallback
 32255 ;; This function uses a non-reentrant model
 32256 ;;
 32257                           
 32258                           	psect	text63
 32259   0080C0                     __ptext63:
 32260                           	callstack 0
 32261   0080C0                     _sendMessage4:
 32262                           	callstack 118
 32263                           
 32264                           ;incstack = 0
 32265                           ;sendMessage4@opc stored from wreg
 32266   0080C0  6E2A               	movwf	sendMessage4@opc^(0+1280),c
 32267   0080C2                     
 32268                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32269   0080C2  0E05               	movlw	5
 32270   0080C4  6E1B               	movwf	sendMessage@len^(0+1280),c
 32271   0080C6  C526  F51C         	movff	sendMessage4@data1,sendMessage@data1
 32272   0080CA  C527  F51D         	movff	sendMessage4@data2,sendMessage@data2
 32273   0080CE  C528  F51E         	movff	sendMessage4@data3,sendMessage@data3
 32274   0080D2  C529  F51F         	movff	sendMessage4@data4,sendMessage@data4
 32275   0080D6  0E00               	movlw	0
 32276   0080D8  6E20               	movwf	sendMessage@data5^(0+1280),c
 32277   0080DA  0E00               	movlw	0
 32278   0080DC  6E21               	movwf	sendMessage@data6^(0+1280),c
 32279   0080DE  0E00               	movlw	0
 32280   0080E0  6E22               	movwf	sendMessage@data7^(0+1280),c
 32281   0080E2  502A               	movf	sendMessage4@opc^(0+1280),w,c
 32282   0080E4  EC7E  F036         	call	_sendMessage
 32283   0080E8  0012               	return		;funcret
 32284   0080EA                     __end_of_sendMessage4:
 32285                           	callstack 0
 32286                           
 32287 ;; *************** function _sendMessage3 *****************
 32288 ;; Defined at:
 32289 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 32290 ;; Parameters:    Size  Location     Type
 32291 ;;  opc             1    wreg     enum E22928
 32292 ;;  data1           1   37[COMRAM] unsigned char 
 32293 ;;  data2           1   38[COMRAM] unsigned char 
 32294 ;;  data3           1   39[COMRAM] unsigned char 
 32295 ;; Auto vars:     Size  Location     Type
 32296 ;;  opc             1   40[COMRAM] enum E22928
 32297 ;; Return value:  Size  Location     Type
 32298 ;;                  1    wreg      void 
 32299 ;; Registers used:
 32300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32301 ;; Tracked objects:
 32302 ;;		On entry : 0/0
 32303 ;;		On exit  : 0/0
 32304 ;;		Unchanged: 0/0
 32305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32306 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32310 ;;Total ram usage:        4 bytes
 32311 ;; Hardware stack levels used: 1
 32312 ;; Hardware stack levels required when called: 5
 32313 ;; This function calls:
 32314 ;;		_sendMessage
 32315 ;; This function is called by:
 32316 ;;		_teachProcessMessage
 32317 ;;		_doNnevn
 32318 ;;		_doNenrd
 32319 ;;		_doRqevn
 32320 ;;		_doEvlrn
 32321 ;;		_doReval
 32322 ;;		_doEvuln
 32323 ;;		_doReqev
 32324 ;;		_mnsProcessMessage
 32325 ;;		_nvProcessMessage
 32326 ;; This function uses a non-reentrant model
 32327 ;;
 32328                           
 32329                           	psect	text64
 32330   0080EA                     __ptext64:
 32331                           	callstack 0
 32332   0080EA                     _sendMessage3:
 32333                           	callstack 119
 32334                           
 32335                           ;incstack = 0
 32336                           ;sendMessage3@opc stored from wreg
 32337   0080EA  6E29               	movwf	sendMessage3@opc^(0+1280),c
 32338   0080EC                     
 32339                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 32340   0080EC  0E04               	movlw	4
 32341   0080EE  6E1B               	movwf	sendMessage@len^(0+1280),c
 32342   0080F0  C526  F51C         	movff	sendMessage3@data1,sendMessage@data1
 32343   0080F4  C527  F51D         	movff	sendMessage3@data2,sendMessage@data2
 32344   0080F8  C528  F51E         	movff	sendMessage3@data3,sendMessage@data3
 32345   0080FC  0E00               	movlw	0
 32346   0080FE  6E1F               	movwf	sendMessage@data4^(0+1280),c
 32347   008100  0E00               	movlw	0
 32348   008102  6E20               	movwf	sendMessage@data5^(0+1280),c
 32349   008104  0E00               	movlw	0
 32350   008106  6E21               	movwf	sendMessage@data6^(0+1280),c
 32351   008108  0E00               	movlw	0
 32352   00810A  6E22               	movwf	sendMessage@data7^(0+1280),c
 32353   00810C  5029               	movf	sendMessage3@opc^(0+1280),w,c
 32354   00810E  EC7E  F036         	call	_sendMessage
 32355   008112  0012               	return		;funcret
 32356   008114                     __end_of_sendMessage3:
 32357                           	callstack 0
 32358                           
 32359 ;; *************** function _getParameter *****************
 32360 ;; Defined at:
 32361 ;;		line 838 in file "../../VLCBlib_PIC/mns.c"
 32362 ;; Parameters:    Size  Location     Type
 32363 ;;  idx             1    wreg     unsigned char 
 32364 ;; Auto vars:     Size  Location     Type
 32365 ;;  idx             1    8[COMRAM] unsigned char 
 32366 ;;  i               1    0        unsigned char 
 32367 ;; Return value:  Size  Location     Type
 32368 ;;                  1    wreg      unsigned char 
 32369 ;; Registers used:
 32370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32371 ;; Tracked objects:
 32372 ;;		On entry : 0/0
 32373 ;;		On exit  : 0/0
 32374 ;;		Unchanged: 0/0
 32375 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32378 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32380 ;;Total ram usage:        4 bytes
 32381 ;; Hardware stack levels used: 1
 32382 ;; Hardware stack levels required when called: 3
 32383 ;; This function calls:
 32384 ;;		_getParameterFlags
 32385 ;;		_have
 32386 ;; This function is called by:
 32387 ;;		_mnsProcessMessage
 32388 ;;		_mnsTRrqnpnCallback
 32389 ;; This function uses a non-reentrant model
 32390 ;;
 32391                           
 32392                           	psect	text65
 32393   004976                     __ptext65:
 32394                           	callstack 0
 32395   004976                     _getParameter:
 32396                           	callstack 120
 32397                           
 32398                           ;incstack = 0
 32399                           ;getParameter@idx stored from wreg
 32400   004976  6E09               	movwf	getParameter@idx^(0+1280),c
 32401   004978                     
 32402                           ;../../VLCBlib_PIC/mns.c: 839:     uint8_t i;;../../VLCBlib_PIC/mns.c: 840:     switch(i
      +                          dx) {
 32403   004978  EF23  F025         	goto	l8383
 32404   00497C                     l8287:
 32405                           
 32406                           ;../../VLCBlib_PIC/mns.c: 842:         return 20;
 32407   00497C  0E14               	movlw	20
 32408   00497E  EF7A  F025         	goto	l1447
 32409   004982                     l8291:
 32410                           
 32411                           ;../../VLCBlib_PIC/mns.c: 844:         return MANU_MERG;
 32412   004982  0EA5               	movlw	165
 32413   004984  EF7A  F025         	goto	l1447
 32414   004988                     l8295:
 32415                           
 32416                           ;../../VLCBlib_PIC/mns.c: 846:         return 'a';
 32417   004988  0E61               	movlw	97
 32418   00498A  EF7A  F025         	goto	l1447
 32419   00498E                     l8299:
 32420                           
 32421                           ;../../VLCBlib_PIC/mns.c: 848:         return MTYP_VLCB;
 32422   00498E  0EFC               	movlw	252
 32423   004990  EF7A  F025         	goto	l1447
 32424   004994                     l8303:
 32425                           
 32426                           ;../../VLCBlib_PIC/mns.c: 850:         return 255;
 32427   004994  0EFF               	movlw	255
 32428   004996  EF7A  F025         	goto	l1447
 32429   00499A                     l8311:
 32430                           
 32431                           ;../../VLCBlib_PIC/mns.c: 854:         return 49;
 32432   00499A  0E31               	movlw	49
 32433   00499C  EF7A  F025         	goto	l1447
 32434   0049A0                     l8315:
 32435                           
 32436                           ;../../VLCBlib_PIC/mns.c: 856:         return 1;
 32437   0049A0  0E01               	movlw	1
 32438   0049A2  EF7A  F025         	goto	l1447
 32439   0049A6                     l8319:
 32440                           
 32441                           ;../../VLCBlib_PIC/mns.c: 858:         return getParameterFlags();
 32442   0049A6  EC9A  F037         	call	_getParameterFlags	;wreg free
 32443   0049AA  EF7A  F025         	goto	l1447
 32444   0049AE                     l8323:
 32445                           
 32446                           ;../../VLCBlib_PIC/mns.c: 860:         return P18F27Q83;
 32447   0049AE  0E17               	movlw	23
 32448   0049B0  EF7A  F025         	goto	l1447
 32449   0049B4                     l8327:
 32450                           
 32451                           ;../../VLCBlib_PIC/mns.c: 862:         if (have(SERVICE_ID_CAN)) {
 32452   0049B4  0E03               	movlw	3
 32453   0049B6  EC54  F037         	call	_have
 32454   0049BA  0900               	iorlw	0
 32455   0049BC  B4D8               	btfsc	status,2,c
 32456   0049BE  EFE3  F024         	goto	u5661
 32457   0049C2  EFE5  F024         	goto	u5660
 32458   0049C6                     u5661:
 32459   0049C6  EFE7  F024         	goto	l8333
 32460   0049CA                     u5660:
 32461   0049CA  EFD0  F024         	goto	l8315
 32462   0049CE                     l8333:
 32463                           
 32464                           ;../../VLCBlib_PIC/mns.c: 865:         return 0;
 32465   0049CE  0E00               	movlw	0
 32466   0049D0  EF7A  F025         	goto	l1447
 32467   0049D4                     l8341:
 32468                           
 32469                           ;../../VLCBlib_PIC/mns.c: 869:         return 0x08;
 32470   0049D4  0E08               	movlw	8
 32471   0049D6  EF7A  F025         	goto	l1447
 32472   0049DA                     l8353:
 32473                           
 32474                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFC;
 32475   0049DA  0EFC               	movlw	252
 32476   0049DC  6EF6               	movwf	tblptrl,c
 32477   0049DE                     	if	1	;There is more than 1 active tblptr byte
 32478   0049DE  0EFF               	movlw	255
 32479   0049E0  6EF7               	movwf	tblptrh,c
 32480   0049E2                     	endif
 32481   0049E2                     	if	1	;There are 3 active tblptr bytes
 32482   0049E2  0E00               	movlw	0
 32483   0049E4  6EF8               	movwf	tblptru,c
 32484   0049E6                     	endif
 32485   0049E6  0008               	tblrd		*
 32486   0049E8  50F5               	movf	tablat,w,c
 32487   0049EA  EF7A  F025         	goto	l1447
 32488   0049EE                     l8357:
 32489                           
 32490                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFD;
 32491   0049EE  0EFD               	movlw	253
 32492   0049F0  6EF6               	movwf	tblptrl,c
 32493   0049F2                     	if	1	;There is more than 1 active tblptr byte
 32494   0049F2  0EFF               	movlw	255
 32495   0049F4  6EF7               	movwf	tblptrh,c
 32496   0049F6                     	endif
 32497   0049F6                     	if	1	;There are 3 active tblptr bytes
 32498   0049F6  0E00               	movlw	0
 32499   0049F8  6EF8               	movwf	tblptru,c
 32500   0049FA                     	endif
 32501   0049FA  0008               	tblrd		*
 32502   0049FC  50F5               	movf	tablat,w,c
 32503   0049FE  EF7A  F025         	goto	l1447
 32504   004A02                     l8361:
 32505                           
 32506                           ;../../VLCBlib_PIC/mns.c: 881:         return *(const uint8_t*)0x3FFFFE;
 32507   004A02  0EFE               	movlw	254
 32508   004A04  6EF6               	movwf	tblptrl,c
 32509   004A06                     	if	1	;There is more than 1 active tblptr byte
 32510   004A06  0EFF               	movlw	255
 32511   004A08  6EF7               	movwf	tblptrh,c
 32512   004A0A                     	endif
 32513   004A0A                     	if	1	;There are 3 active tblptr bytes
 32514   004A0A  0E00               	movlw	0
 32515   004A0C  6EF8               	movwf	tblptru,c
 32516   004A0E                     	endif
 32517   004A0E  0008               	tblrd		*
 32518   004A10  50F5               	movf	tablat,w,c
 32519   004A12  EF7A  F025         	goto	l1447
 32520   004A16                     l8365:
 32521                           
 32522                           ;../../VLCBlib_PIC/mns.c: 883:         return *(const uint8_t*)0x3FFFFF;
 32523   004A16  0EFF               	movlw	255
 32524   004A18  6E06               	movwf	??_getParameter^(0+1280),c
 32525   004A1A  0EFF               	movlw	255
 32526   004A1C  6E07               	movwf	(??_getParameter+1)^(0+1280),c
 32527   004A1E  0E00               	movlw	0
 32528   004A20  6E08               	movwf	(??_getParameter+2)^(0+1280),c
 32529   004A22  C506  F4F6         	movff	??_getParameter,tblptrl
 32530   004A26  C507  F4F7         	movff	??_getParameter+1,tblptrh
 32531   004A2A  5008               	movf	(??_getParameter+2)^(0+1280),w,c
 32532   004A2C  BEE8               	btfsc	wreg,7,c
 32533   004A2E  D004               	bra	u5677
 32534   004A30  6EF8               	movwf	tblptru,c
 32535   004A32  0008               	tblrd		*
 32536   004A34  50F5               	movf	tablat,w,c
 32537   004A36  D005               	bra	u5670
 32538   004A38                     u5677:
 32539   004A38  C4F6 F4E1          	movff	tblptrl,fsr1l
 32540   004A3C  C4F7 F4E2          	movff	tblptrh,fsr1h
 32541   004A40  50E7               	movf	indf1,w,c
 32542   004A42                     u5670:
 32543   004A42  EF7A  F025         	goto	l1447
 32544   004A46                     l8383:
 32545   004A46  5009               	movf	getParameter@idx^(0+1280),w,c
 32546                           
 32547                           ; Switch size 1, requested type "simple"
 32548                           ; Number of cases is 21, Range of values is 0 to 20
 32549                           ; switch strategies available:
 32550                           ; Name         Instructions Cycles
 32551                           ; simple_byte           64    33 (average)
 32552                           ;	Chosen strategy is simple_byte
 32553   004A48  0A00               	xorlw	0	; case 0
 32554   004A4A  B4D8               	btfsc	status,2,c
 32555   004A4C  EFBE  F024         	goto	l8287
 32556   004A50  0A01               	xorlw	1	; case 1
 32557   004A52  B4D8               	btfsc	status,2,c
 32558   004A54  EFC1  F024         	goto	l8291
 32559   004A58  0A03               	xorlw	3	; case 2
 32560   004A5A  B4D8               	btfsc	status,2,c
 32561   004A5C  EFC4  F024         	goto	l8295
 32562   004A60  0A01               	xorlw	1	; case 3
 32563   004A62  B4D8               	btfsc	status,2,c
 32564   004A64  EFC7  F024         	goto	l8299
 32565   004A68  0A07               	xorlw	7	; case 4
 32566   004A6A  B4D8               	btfsc	status,2,c
 32567   004A6C  EFCA  F024         	goto	l8303
 32568   004A70  0A01               	xorlw	1	; case 5
 32569   004A72  B4D8               	btfsc	status,2,c
 32570   004A74  EFC7  F024         	goto	l8299
 32571   004A78  0A03               	xorlw	3	; case 6
 32572   004A7A  B4D8               	btfsc	status,2,c
 32573   004A7C  EFCD  F024         	goto	l8311
 32574   004A80  0A01               	xorlw	1	; case 7
 32575   004A82  B4D8               	btfsc	status,2,c
 32576   004A84  EFD0  F024         	goto	l8315
 32577   004A88  0A0F               	xorlw	15	; case 8
 32578   004A8A  B4D8               	btfsc	status,2,c
 32579   004A8C  EFD3  F024         	goto	l8319
 32580   004A90  0A01               	xorlw	1	; case 9
 32581   004A92  B4D8               	btfsc	status,2,c
 32582   004A94  EFD7  F024         	goto	l8323
 32583   004A98  0A03               	xorlw	3	; case 10
 32584   004A9A  B4D8               	btfsc	status,2,c
 32585   004A9C  EFDA  F024         	goto	l8327
 32586   004AA0  0A01               	xorlw	1	; case 11
 32587   004AA2  B4D8               	btfsc	status,2,c
 32588   004AA4  EFE7  F024         	goto	l8333
 32589   004AA8  0A07               	xorlw	7	; case 12
 32590   004AAA  B4D8               	btfsc	status,2,c
 32591   004AAC  EFEA  F024         	goto	l8341
 32592   004AB0  0A01               	xorlw	1	; case 13
 32593   004AB2  B4D8               	btfsc	status,2,c
 32594   004AB4  EFE7  F024         	goto	l8333
 32595   004AB8  0A03               	xorlw	3	; case 14
 32596   004ABA  B4D8               	btfsc	status,2,c
 32597   004ABC  EFE7  F024         	goto	l8333
 32598   004AC0  0A01               	xorlw	1	; case 15
 32599   004AC2  B4D8               	btfsc	status,2,c
 32600   004AC4  EFED  F024         	goto	l8353
 32601   004AC8  0A1F               	xorlw	31	; case 16
 32602   004ACA  B4D8               	btfsc	status,2,c
 32603   004ACC  EFF7  F024         	goto	l8357
 32604   004AD0  0A01               	xorlw	1	; case 17
 32605   004AD2  B4D8               	btfsc	status,2,c
 32606   004AD4  EF01  F025         	goto	l8361
 32607   004AD8  0A03               	xorlw	3	; case 18
 32608   004ADA  B4D8               	btfsc	status,2,c
 32609   004ADC  EF0B  F025         	goto	l8365
 32610   004AE0  0A01               	xorlw	1	; case 19
 32611   004AE2  B4D8               	btfsc	status,2,c
 32612   004AE4  EFD0  F024         	goto	l8315
 32613   004AE8  0A07               	xorlw	7	; case 20
 32614   004AEA  B4D8               	btfsc	status,2,c
 32615   004AEC  EFD0  F024         	goto	l8315
 32616   004AF0  EFE7  F024         	goto	l8333
 32617   004AF4                     l1447:
 32618   004AF4  0012               	return		;funcret
 32619   004AF6                     __end_of_getParameter:
 32620                           	callstack 0
 32621                           
 32622 ;; *************** function _getParameterFlags *****************
 32623 ;; Defined at:
 32624 ;;		line 609 in file "../../VLCBlib_PIC/mns.c"
 32625 ;; Parameters:    Size  Location     Type
 32626 ;;		None
 32627 ;; Auto vars:     Size  Location     Type
 32628 ;;  flags           1    4[COMRAM] unsigned char 
 32629 ;; Return value:  Size  Location     Type
 32630 ;;                  1    wreg      unsigned char 
 32631 ;; Registers used:
 32632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32633 ;; Tracked objects:
 32634 ;;		On entry : 0/0
 32635 ;;		On exit  : 0/0
 32636 ;;		Unchanged: 0/0
 32637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32642 ;;Total ram usage:        1 bytes
 32643 ;; Hardware stack levels used: 1
 32644 ;; Hardware stack levels required when called: 2
 32645 ;; This function calls:
 32646 ;;		_have
 32647 ;; This function is called by:
 32648 ;;		_mnsProcessMessage
 32649 ;;		_getParameter
 32650 ;; This function uses a non-reentrant model
 32651 ;;
 32652                           
 32653                           	psect	text66
 32654   006F34                     __ptext66:
 32655                           	callstack 0
 32656   006F34                     _getParameterFlags:
 32657                           	callstack 120
 32658   006F34                     
 32659                           ;../../VLCBlib_PIC/mns.c: 610:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 611:     flag
      +                          s = 0;
 32660   006F34  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 32661   006F36                     
 32662                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_CONSUMER)) {
 32663   006F36  0E06               	movlw	6
 32664   006F38  EC54  F037         	call	_have
 32665   006F3C  0900               	iorlw	0
 32666   006F3E  B4D8               	btfsc	status,2,c
 32667   006F40  EFA4  F037         	goto	u5221
 32668   006F44  EFA6  F037         	goto	u5220
 32669   006F48                     u5221:
 32670   006F48  EFA7  F037         	goto	l7921
 32671   006F4C                     u5220:
 32672   006F4C                     
 32673                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 1;
 32674   006F4C  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 32675   006F4E                     l7921:
 32676                           
 32677                           ;../../VLCBlib_PIC/mns.c: 615:     if (have(SERVICE_ID_PRODUCER)) {
 32678   006F4E  0E05               	movlw	5
 32679   006F50  EC54  F037         	call	_have
 32680   006F54  0900               	iorlw	0
 32681   006F56  B4D8               	btfsc	status,2,c
 32682   006F58  EFB0  F037         	goto	u5231
 32683   006F5C  EFB2  F037         	goto	u5230
 32684   006F60                     u5231:
 32685   006F60  EFB3  F037         	goto	l7925
 32686   006F64                     u5230:
 32687   006F64                     
 32688                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 2;
 32689   006F64  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 32690   006F66                     l7925:
 32691                           
 32692                           ;../../VLCBlib_PIC/mns.c: 618:     if (flags == (2 | 1)) flags |= 16;
 32693   006F66  0E03               	movlw	3
 32694   006F68  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 32695   006F6A  A4D8               	btfss	status,2,c
 32696   006F6C  EFBA  F037         	goto	u5241
 32697   006F70  EFBC  F037         	goto	u5240
 32698   006F74                     u5241:
 32699   006F74  EFBD  F037         	goto	l7929
 32700   006F78                     u5240:
 32701   006F78  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 32702   006F7A                     l7929:
 32703                           
 32704                           ;../../VLCBlib_PIC/mns.c: 619:     if (have(SERVICE_ID_BOOT)) {
 32705   006F7A  0E0A               	movlw	10
 32706   006F7C  EC54  F037         	call	_have
 32707   006F80  0900               	iorlw	0
 32708   006F82  B4D8               	btfsc	status,2,c
 32709   006F84  EFC6  F037         	goto	u5251
 32710   006F88  EFC8  F037         	goto	u5250
 32711   006F8C                     u5251:
 32712   006F8C  EFC9  F037         	goto	l7933
 32713   006F90                     u5250:
 32714   006F90                     
 32715                           ;../../VLCBlib_PIC/mns.c: 620:         flags |= 8;
 32716   006F90  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 32717   006F92                     l7933:
 32718                           
 32719                           ;../../VLCBlib_PIC/mns.c: 622:     if (mode_flags & 1) {
 32720   006F92  0105               	movlb	5	; () banked
 32721   006F94  A1A4               	btfss	_mode_flags& (0+255),0,b
 32722   006F96  EFCF  F037         	goto	u5261
 32723   006F9A  EFD1  F037         	goto	u5260
 32724   006F9E                     u5261:
 32725   006F9E  EFD2  F037         	goto	l7937
 32726   006FA2                     u5260:
 32727   006FA2                     
 32728                           ; BSR set to: 5
 32729                           ;../../VLCBlib_PIC/mns.c: 623:         flags |= 32;
 32730   006FA2  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 32731   006FA4                     l7937:
 32732                           
 32733                           ; BSR set to: 5
 32734                           ;../../VLCBlib_PIC/mns.c: 625:     if (mode_state == MODE_NORMAL) {
 32735   006FA4  05A1               	decf	_mode_state& (0+255),w,b
 32736   006FA6  A4D8               	btfss	status,2,c
 32737   006FA8  EFD8  F037         	goto	u5271
 32738   006FAC  EFDA  F037         	goto	u5270
 32739   006FB0                     u5271:
 32740   006FB0  EFDB  F037         	goto	l1391
 32741   006FB4                     u5270:
 32742   006FB4                     
 32743                           ; BSR set to: 5
 32744                           ;../../VLCBlib_PIC/mns.c: 626:         flags |= 4;
 32745   006FB4  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 32746   006FB6                     l1391:
 32747                           
 32748                           ; BSR set to: 5
 32749                           ;../../VLCBlib_PIC/mns.c: 629:     flags |= 64;
 32750   006FB6  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 32751   006FB8                     
 32752                           ; BSR set to: 5
 32753                           ;../../VLCBlib_PIC/mns.c: 631:     return flags;
 32754   006FB8  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 32755   006FBA                     
 32756                           ; BSR set to: 5
 32757   006FBA  0012               	return		;funcret
 32758   006FBC                     __end_of_getParameterFlags:
 32759                           	callstack 0
 32760                           
 32761 ;; *************** function _findServiceIndex *****************
 32762 ;; Defined at:
 32763 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 32764 ;; Parameters:    Size  Location     Type
 32765 ;;  serviceType     1    wreg     unsigned char 
 32766 ;; Auto vars:     Size  Location     Type
 32767 ;;  serviceType     1    2[COMRAM] unsigned char 
 32768 ;;  i               1    3[COMRAM] unsigned char 
 32769 ;; Return value:  Size  Location     Type
 32770 ;;                  1    wreg      unsigned char 
 32771 ;; Registers used:
 32772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32773 ;; Tracked objects:
 32774 ;;		On entry : 0/0
 32775 ;;		On exit  : 0/0
 32776 ;;		Unchanged: 0/0
 32777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32782 ;;Total ram usage:        4 bytes
 32783 ;; Hardware stack levels used: 1
 32784 ;; Hardware stack levels required when called: 1
 32785 ;; This function calls:
 32786 ;;		Nothing
 32787 ;; This function is called by:
 32788 ;;		_doNerd
 32789 ;;		_doReval
 32790 ;;		_doReqev
 32791 ;;		_mnsProcessMessage
 32792 ;;		_nvProcessMessage
 32793 ;; This function uses a non-reentrant model
 32794 ;;
 32795                           
 32796                           	psect	text67
 32797   006E1C                     __ptext67:
 32798                           	callstack 0
 32799   006E1C                     _findServiceIndex:
 32800                           	callstack 122
 32801                           
 32802                           ; BSR set to: 5
 32803                           ;incstack = 0
 32804                           ;findServiceIndex@serviceType stored from wreg
 32805   006E1C  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 32806   006E1E                     
 32807                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<6; i++) {
 32808   006E1E  6A04               	clrf	findServiceIndex@i^(0+1280),c
 32809   006E20                     l8209:
 32810                           
 32811                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32812   006E20  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32813   006E22  0D02               	mullw	2
 32814   006E24  0E89               	movlw	low _services
 32815   006E26  24F3               	addwf	243,w,c
 32816   006E28  6EF6               	movwf	tblptrl,c
 32817   006E2A  0EFF               	movlw	high _services
 32818   006E2C  20F4               	addwfc	244,w,c
 32819   006E2E  6EF7               	movwf	tblptrh,c
 32820   006E30                     	if	1	;There are 3 active tblptr bytes
 32821   006E30  6AF8               	clrf	tblptru,c
 32822   006E32  0E00               	movlw	low (__mediumconst shr (0+16))
 32823   006E34  22F8               	addwfc	tblptru,f,c
 32824   006E36                     	endif
 32825   006E36  0009               	tblrd		*+
 32826   006E38  50F5               	movf	tablat,w,c
 32827   006E3A  0009               	tblrd		*+
 32828   006E3C  10F5               	iorwf	tablat,w,c
 32829   006E3E  B4D8               	btfsc	status,2,c
 32830   006E40  EF24  F037         	goto	u5571
 32831   006E44  EF26  F037         	goto	u5570
 32832   006E48                     u5571:
 32833   006E48  EF49  F037         	goto	l8217
 32834   006E4C                     u5570:
 32835   006E4C  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32836   006E4E  0D02               	mullw	2
 32837   006E50  0E89               	movlw	low _services
 32838   006E52  24F3               	addwf	243,w,c
 32839   006E54  6EF6               	movwf	tblptrl,c
 32840   006E56  0EFF               	movlw	high _services
 32841   006E58  20F4               	addwfc	244,w,c
 32842   006E5A  6EF7               	movwf	tblptrh,c
 32843   006E5C                     	if	1	;There are 3 active tblptr bytes
 32844   006E5C  6AF8               	clrf	tblptru,c
 32845   006E5E  0E00               	movlw	low (__mediumconst shr (0+16))
 32846   006E60  22F8               	addwfc	tblptru,f,c
 32847   006E62                     	endif
 32848   006E62  0009               	tblrd		*+
 32849   006E64  C4F5 F501          	movff	tablat,??_findServiceIndex
 32850   006E68  0009               	tblrd		*+
 32851   006E6A  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 32852   006E6E  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 32853   006E72  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 32854   006E76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32855   006E76  6AF8               	clrf	tblptru,c
 32856   006E78                     	endif
 32857   006E78                     	if	0	;tblptru may be non-zero
 32858   006E78                     	endif
 32859   006E78  0008               	tblrd		*
 32860   006E7A  50F5               	movf	tablat,w,c
 32861   006E7C  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 32862   006E7E  A4D8               	btfss	status,2,c
 32863   006E80  EF44  F037         	goto	u5581
 32864   006E84  EF46  F037         	goto	u5580
 32865   006E88                     u5581:
 32866   006E88  EF49  F037         	goto	l8217
 32867   006E8C                     u5580:
 32868   006E8C                     
 32869                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 32870   006E8C  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32871   006E8E  EF53  F037         	goto	l1983
 32872   006E92                     l8217:
 32873                           
 32874                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 32875   006E92  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 32876   006E94  0E05               	movlw	5
 32877   006E96  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 32878   006E98  EF50  F037         	goto	u5591
 32879   006E9C  EF52  F037         	goto	u5590
 32880   006EA0                     u5591:
 32881   006EA0  EF10  F037         	goto	l8209
 32882   006EA4                     u5590:
 32883   006EA4                     
 32884                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 32885   006EA4  0EFF               	movlw	255
 32886   006EA6                     l1983:
 32887   006EA6  0012               	return		;funcret
 32888   006EA8                     __end_of_findServiceIndex:
 32889                           	callstack 0
 32890                           
 32891 ;; *************** function _canWaitForTxQueueToDrain *****************
 32892 ;; Defined at:
 32893 ;;		line 671 in file "../../VLCBlib_PIC/can18_can_2.c"
 32894 ;; Parameters:    Size  Location     Type
 32895 ;;		None
 32896 ;; Auto vars:     Size  Location     Type
 32897 ;;		None
 32898 ;; Return value:  Size  Location     Type
 32899 ;;                  1    wreg      void 
 32900 ;; Registers used:
 32901 ;;		None
 32902 ;; Tracked objects:
 32903 ;;		On entry : 0/0
 32904 ;;		On exit  : 0/0
 32905 ;;		Unchanged: 0/0
 32906 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32911 ;;Total ram usage:        0 bytes
 32912 ;; Hardware stack levels used: 1
 32913 ;; Hardware stack levels required when called: 1
 32914 ;; This function calls:
 32915 ;;		Nothing
 32916 ;; This function is called by:
 32917 ;;		_mnsProcessMessage
 32918 ;; This function uses a non-reentrant model
 32919 ;;
 32920                           
 32921                           	psect	text68
 32922   008336                     __ptext68:
 32923                           	callstack 0
 32924   008336                     _canWaitForTxQueueToDrain:
 32925                           	callstack 123
 32926   008336                     l682:
 32927                           
 32928                           ;../../VLCBlib_PIC/can18_can_2.c: 672:     while (C1FIFOCON2H & 0x2) {
 32929   008336  0101               	movlb	1	; () banked
 32930   008338  B369               	btfsc	105,1,b	;volatile
 32931   00833A  EFA1  F041         	goto	u5981
 32932   00833E  EFA3  F041         	goto	u5980
 32933   008342                     u5981:
 32934   008342  EF9B  F041         	goto	l682
 32935   008346                     u5980:
 32936   008346                     
 32937                           ; BSR set to: 1
 32938   008346  0012               	return		;funcret
 32939   008348                     __end_of_canWaitForTxQueueToDrain:
 32940                           	callstack 0
 32941                           
 32942 ;; *************** function _canPoll *****************
 32943 ;; Defined at:
 32944 ;;		line 443 in file "../../VLCBlib_PIC/can18_can_2.c"
 32945 ;; Parameters:    Size  Location     Type
 32946 ;;		None
 32947 ;; Auto vars:     Size  Location     Type
 32948 ;;  t8              1    0        unsigned char 
 32949 ;; Return value:  Size  Location     Type
 32950 ;;                  1    wreg      void 
 32951 ;; Registers used:
 32952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32953 ;; Tracked objects:
 32954 ;;		On entry : 0/0
 32955 ;;		On exit  : 0/0
 32956 ;;		Unchanged: 0/0
 32957 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32962 ;;Total ram usage:        0 bytes
 32963 ;; Hardware stack levels used: 1
 32964 ;; Hardware stack levels required when called: 8
 32965 ;; This function calls:
 32966 ;;		_processEnumeration
 32967 ;; This function is called by:
 32968 ;;		_poll
 32969 ;; This function uses a non-reentrant model
 32970 ;;
 32971                           
 32972                           	psect	text69
 32973   00837E                     __ptext69:
 32974                           	callstack 0
 32975   00837E                     _canPoll:
 32976                           	callstack 117
 32977   00837E                     
 32978                           ;../../VLCBlib_PIC/can18_can_2.c: 444:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          446:     processEnumeration();
 32979   00837E  EC0F  F023         	call	_processEnumeration	;wreg free
 32980   008382  0012               	return		;funcret
 32981   008384                     __end_of_canPoll:
 32982                           	callstack 0
 32983                           
 32984 ;; *************** function _mnsPoll *****************
 32985 ;; Defined at:
 32986 ;;		line 650 in file "../../VLCBlib_PIC/mns.c"
 32987 ;; Parameters:    Size  Location     Type
 32988 ;;		None
 32989 ;; Auto vars:     Size  Location     Type
 32990 ;;		None
 32991 ;; Return value:  Size  Location     Type
 32992 ;;                  1    wreg      void 
 32993 ;; Registers used:
 32994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32995 ;; Tracked objects:
 32996 ;;		On entry : 0/0
 32997 ;;		On exit  : 0/0
 32998 ;;		Unchanged: 0/0
 32999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33003 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33004 ;;Total ram usage:        4 bytes
 33005 ;; Hardware stack levels used: 1
 33006 ;; Hardware stack levels required when called: 6
 33007 ;; This function calls:
 33008 ;;		_sendMessage2
 33009 ;;		_sendMessage5
 33010 ;;		_setLEDsByMode
 33011 ;;		_tickGet
 33012 ;;		_writeNVM
 33013 ;; This function is called by:
 33014 ;;		_poll
 33015 ;; This function uses a non-reentrant model
 33016 ;;
 33017                           
 33018                           	psect	text70
 33019   002600                     __ptext70:
 33020                           	callstack 0
 33021   002600                     _mnsPoll:
 33022                           	callstack 119
 33023   002600                     
 33024                           ;../../VLCBlib_PIC/mns.c: 653:     if (mode_state == MODE_NORMAL) {
 33025   002600  0105               	movlb	5	; () banked
 33026   002602  05A1               	decf	_mode_state& (0+255),w,b
 33027   002604  A4D8               	btfss	status,2,c
 33028   002606  EF07  F013         	goto	u7811
 33029   00260A  EF09  F013         	goto	u7810
 33030   00260E                     u7811:
 33031   00260E  EF51  F013         	goto	l10587
 33032   002612                     u7810:
 33033   002612                     
 33034                           ; BSR set to: 5
 33035                           ;../../VLCBlib_PIC/mns.c: 654:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 33036   002612  EC14  F03A         	call	_tickGet	;wreg free
 33037   002616  0105               	movlb	5	; () banked
 33038   002618  516C               	movf	_heartbeatTimer& (0+255),w,b
 33039   00261A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33040   00261C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33041   00261E  516D               	movf	(_heartbeatTimer+1)& (0+255),w,b
 33042   002620  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33043   002622  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33044   002624  516E               	movf	(_heartbeatTimer+2)& (0+255),w,b
 33045   002626  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33046   002628  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33047   00262A  516F               	movf	(_heartbeatTimer+3)& (0+255),w,b
 33048   00262C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33049   00262E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33050   002630  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33051   002632  E10D               	bnz	u7820
 33052   002634  0EB5               	movlw	181
 33053   002636  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33054   002638  0EC4               	movlw	196
 33055   00263A  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33056   00263C  0E04               	movlw	4
 33057   00263E  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33058   002640  A0D8               	btfss	status,0,c
 33059   002642  EF25  F013         	goto	u7821
 33060   002646  EF27  F013         	goto	u7820
 33061   00264A                     u7821:
 33062   00264A  EF51  F013         	goto	l10587
 33063   00264E                     u7820:
 33064   00264E                     
 33065                           ; BSR set to: 5
 33066                           ;../../VLCBlib_PIC/mns.c: 655:             if (mode_flags & 4) {
 33067   00264E  A5A4               	btfss	_mode_flags& (0+255),2,b
 33068   002650  EF2C  F013         	goto	u7831
 33069   002654  EF2E  F013         	goto	u7830
 33070   002658                     u7831:
 33071   002658  EF3D  F013         	goto	l10581
 33072   00265C                     u7830:
 33073   00265C                     
 33074                           ; BSR set to: 5
 33075                           ;../../VLCBlib_PIC/mns.c: 656:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 33076   00265C  C590  F526         	movff	_nn+1,sendMessage5@data1
 33077   002660  C58F  F527         	movff	_nn,sendMessage5@data2
 33078   002664  C59C  F528         	movff	_heartbeatSequence,sendMessage5@data3
 33079   002668  C5AF  F529         	movff	_mnsDiagnostics+2,sendMessage5@data4
 33080   00266C  0E00               	movlw	0
 33081   00266E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 33082   002670  0EAB               	movlw	171
 33083   002672  ECB4  F040         	call	_sendMessage5
 33084   002676  0105               	movlb	5	; () banked
 33085   002678  2B9C               	incf	_heartbeatSequence& (0+255),f,b
 33086   00267A                     l10581:
 33087                           
 33088                           ; BSR set to: 5
 33089                           ;../../VLCBlib_PIC/mns.c: 658:             heartbeatTimer.val = tickGet();
 33090   00267A  EC14  F03A         	call	_tickGet	;wreg free
 33091   00267E  C501  F56C         	movff	?_tickGet,_heartbeatTimer
 33092   002682  C502  F56D         	movff	?_tickGet+1,_heartbeatTimer+1
 33093   002686  C503  F56E         	movff	?_tickGet+2,_heartbeatTimer+2
 33094   00268A  C504  F56F         	movff	?_tickGet+3,_heartbeatTimer+3
 33095   00268E                     
 33096                           ;../../VLCBlib_PIC/mns.c: 659:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 33097   00268E  0105               	movlb	5	; () banked
 33098   002690  51AF               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 33099   002692  B4D8               	btfsc	status,2,c
 33100   002694  EF4E  F013         	goto	u7841
 33101   002698  EF50  F013         	goto	u7840
 33102   00269C                     u7841:
 33103   00269C  EF51  F013         	goto	l10587
 33104   0026A0                     u7840:
 33105   0026A0                     
 33106                           ; BSR set to: 5
 33107                           ;../../VLCBlib_PIC/mns.c: 660:                 mnsDiagnostics[0x01].asBytes.lo--;
 33108   0026A0  07AF               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 33109   0026A2                     l10587:
 33110                           
 33111                           ; BSR set to: 5
 33112                           ;../../VLCBlib_PIC/mns.c: 667:     if (mode_flags != last_mode_flags) {
 33113   0026A2  519F               	movf	_last_mode_flags& (0+255),w,b
 33114   0026A4  19A4               	xorwf	_mode_flags& (0+255),w,b
 33115   0026A6  B4D8               	btfsc	status,2,c
 33116   0026A8  EF58  F013         	goto	u7851
 33117   0026AC  EF5A  F013         	goto	u7850
 33118   0026B0                     u7851:
 33119   0026B0  EF67  F013         	goto	l10593
 33120   0026B4                     u7850:
 33121   0026B4                     
 33122                           ; BSR set to: 5
 33123                           ;../../VLCBlib_PIC/mns.c: 668:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 33124   0026B4  0EF9               	movlw	249
 33125   0026B6  6E0E               	movwf	writeNVM@index^(0+1280),c
 33126   0026B8  0E03               	movlw	3
 33127   0026BA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33128   0026BC  0E00               	movlw	0
 33129   0026BE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33130   0026C0  C5A4  F511         	movff	_mode_flags,writeNVM@value
 33131   0026C4  0E00               	movlw	0
 33132   0026C6  EC64  F03C         	call	_writeNVM
 33133   0026CA                     
 33134                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_flags = mode_flags;
 33135   0026CA  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 33136   0026CE                     l10593:
 33137                           
 33138                           ;../../VLCBlib_PIC/mns.c: 671:     if (mode_state != last_mode_state) {
 33139   0026CE  0105               	movlb	5	; () banked
 33140   0026D0  51A0               	movf	_last_mode_state& (0+255),w,b
 33141   0026D2  19A1               	xorwf	_mode_state& (0+255),w,b
 33142   0026D4  B4D8               	btfsc	status,2,c
 33143   0026D6  EF6F  F013         	goto	u7861
 33144   0026DA  EF71  F013         	goto	u7860
 33145   0026DE                     u7861:
 33146   0026DE  EF8E  F013         	goto	l10603
 33147   0026E2                     u7860:
 33148   0026E2                     
 33149                           ; BSR set to: 5
 33150                           ;../../VLCBlib_PIC/mns.c: 673:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 33151   0026E2  29A1               	incf	_mode_state& (0+255),w,b
 33152   0026E4  B4D8               	btfsc	status,2,c
 33153   0026E6  EF77  F013         	goto	u7871
 33154   0026EA  EF79  F013         	goto	u7870
 33155   0026EE                     u7871:
 33156   0026EE  EF81  F013         	goto	l10599
 33157   0026F2                     u7870:
 33158   0026F2                     
 33159                           ; BSR set to: 5
 33160   0026F2  05A1               	decf	_mode_state& (0+255),w,b
 33161   0026F4  A4D8               	btfss	status,2,c
 33162   0026F6  EF7F  F013         	goto	u7881
 33163   0026FA  EF81  F013         	goto	u7880
 33164   0026FE                     u7881:
 33165   0026FE  EF8C  F013         	goto	l10601
 33166   002702                     u7880:
 33167   002702                     l10599:
 33168                           
 33169                           ; BSR set to: 5
 33170                           ;../../VLCBlib_PIC/mns.c: 674:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 33171   002702  0EFB               	movlw	251
 33172   002704  6E0E               	movwf	writeNVM@index^(0+1280),c
 33173   002706  0E03               	movlw	3
 33174   002708  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33175   00270A  0E00               	movlw	0
 33176   00270C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33177   00270E  C5A1  F511         	movff	_mode_state,writeNVM@value
 33178   002712  0E00               	movlw	0
 33179   002714  EC64  F03C         	call	_writeNVM
 33180   002718                     l10601:
 33181                           
 33182                           ;../../VLCBlib_PIC/mns.c: 676:         last_mode_state = mode_state;
 33183   002718  C5A1  F5A0         	movff	_mode_state,_last_mode_state
 33184   00271C                     l10603:
 33185                           
 33186                           ;../../VLCBlib_PIC/mns.c: 680:     if ((tickGet() - uptimeTimer.val) > 62500) {
 33187   00271C  EC14  F03A         	call	_tickGet	;wreg free
 33188   002720  0105               	movlb	5	; () banked
 33189   002722  5168               	movf	_uptimeTimer& (0+255),w,b
 33190   002724  5C01               	subwf	?_tickGet^(0+1280),w,c
 33191   002726  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33192   002728  5169               	movf	(_uptimeTimer+1)& (0+255),w,b
 33193   00272A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33194   00272C  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33195   00272E  516A               	movf	(_uptimeTimer+2)& (0+255),w,b
 33196   002730  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33197   002732  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33198   002734  516B               	movf	(_uptimeTimer+3)& (0+255),w,b
 33199   002736  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33200   002738  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33201   00273A  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33202   00273C  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33203   00273E  E10B               	bnz	u7890
 33204   002740  0E25               	movlw	37
 33205   002742  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33206   002744  0EF4               	movlw	244
 33207   002746  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33208   002748  A0D8               	btfss	status,0,c
 33209   00274A  EFA9  F013         	goto	u7891
 33210   00274E  EFAB  F013         	goto	u7890
 33211   002752                     u7891:
 33212   002752  EF3F  F015         	goto	l10691
 33213   002756                     u7890:
 33214   002756                     
 33215                           ; BSR set to: 5
 33216                           ;../../VLCBlib_PIC/mns.c: 681:         uptimeTimer.val = tickGet();
 33217   002756  EC14  F03A         	call	_tickGet	;wreg free
 33218   00275A  C501  F568         	movff	?_tickGet,_uptimeTimer
 33219   00275E  C502  F569         	movff	?_tickGet+1,_uptimeTimer+1
 33220   002762  C503  F56A         	movff	?_tickGet+2,_uptimeTimer+2
 33221   002766  C504  F56B         	movff	?_tickGet+3,_uptimeTimer+3
 33222   00276A                     
 33223                           ;../../VLCBlib_PIC/mns.c: 682:         mnsDiagnostics[0x03].asUint++;
 33224   00276A  0105               	movlb	5	; () banked
 33225   00276C  4BB3               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 33226   00276E  2BB4               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 33227   002770                     
 33228                           ; BSR set to: 5
 33229                           ;../../VLCBlib_PIC/mns.c: 683:         if (mnsDiagnostics[0x03].asUint == 0) {
 33230   002770  51B3               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 33231   002772  11B4               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 33232   002774  A4D8               	btfss	status,2,c
 33233   002776  EFBF  F013         	goto	u7901
 33234   00277A  EFC1  F013         	goto	u7900
 33235   00277E                     u7901:
 33236   00277E  EF3F  F015         	goto	l10691
 33237   002782                     u7900:
 33238   002782                     
 33239                           ; BSR set to: 5
 33240                           ;../../VLCBlib_PIC/mns.c: 684:             mnsDiagnostics[0x02].asUint++;
 33241   002782  4BB1               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 33242   002784  2BB2               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 33243   002786  EF3F  F015         	goto	l10691
 33244   00278A                     l1411:
 33245                           
 33246                           ; BSR set to: 5
 33247                           ;../../VLCBlib_PIC/mns.c: 693:             if ((!(PORTAbits.RA2)) == 0) {
 33248   00278A  A4CE               	btfss	206,2,c	;volatile
 33249   00278C  EFCA  F013         	goto	u7911
 33250   002790  EFCC  F013         	goto	u7910
 33251   002794                     u7911:
 33252   002794  EFD8  F013         	goto	l10615
 33253   002798                     u7910:
 33254   002798                     l10613:
 33255                           
 33256                           ;../../VLCBlib_PIC/mns.c: 695:                 pbTimer.val = tickGet();
 33257   002798  EC14  F03A         	call	_tickGet	;wreg free
 33258   00279C  C501  F570         	movff	?_tickGet,_pbTimer
 33259   0027A0  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33260   0027A4  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33261   0027A8  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33262                           
 33263                           ;../../VLCBlib_PIC/mns.c: 696:             } else {
 33264   0027AC  EF4E  F015         	goto	l1429
 33265   0027B0                     l10615:
 33266                           
 33267                           ; BSR set to: 5
 33268                           ;../../VLCBlib_PIC/mns.c: 698:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33269   0027B0  EC14  F03A         	call	_tickGet	;wreg free
 33270   0027B4  0105               	movlb	5	; () banked
 33271   0027B6  5170               	movf	_pbTimer& (0+255),w,b
 33272   0027B8  5C01               	subwf	?_tickGet^(0+1280),w,c
 33273   0027BA  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33274   0027BC  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33275   0027BE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33276   0027C0  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33277   0027C2  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33278   0027C4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33279   0027C6  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33280   0027C8  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33281   0027CA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33282   0027CC  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33283   0027CE  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33284   0027D0  E10D               	bnz	u7920
 33285   0027D2  0E91               	movlw	145
 33286   0027D4  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33287   0027D6  0ED0               	movlw	208
 33288   0027D8  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33289   0027DA  0E03               	movlw	3
 33290   0027DC  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33291   0027DE  A0D8               	btfss	status,0,c
 33292   0027E0  EFF4  F013         	goto	u7921
 33293   0027E4  EFF6  F013         	goto	u7920
 33294   0027E8                     u7921:
 33295   0027E8  EF4E  F015         	goto	l1429
 33296   0027EC                     u7920:
 33297   0027EC                     
 33298                           ; BSR set to: 5
 33299                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = 0xFD;
 33300   0027EC  0EFD               	movlw	253
 33301   0027EE  6FA1               	movwf	_mode_state& (0+255),b
 33302   0027F0                     
 33303                           ; BSR set to: 5
 33304                           ;../../VLCBlib_PIC/mns.c: 701:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 33305   0027F0  699E               	setf	_setupModePreviousMode& (0+255),b
 33306   0027F2                     
 33307                           ; BSR set to: 5
 33308                           ;../../VLCBlib_PIC/mns.c: 702:                     setLEDsByMode();
 33309   0027F2  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 33310   0027F6  EF4E  F015         	goto	l1429
 33311   0027FA                     l1416:
 33312                           
 33313                           ; BSR set to: 5
 33314                           ;../../VLCBlib_PIC/mns.c: 707:             if ((!(PORTAbits.RA2)) == 0) {
 33315   0027FA  A4CE               	btfss	206,2,c	;volatile
 33316   0027FC  EF02  F014         	goto	u7931
 33317   002800  EF04  F014         	goto	u7930
 33318   002804                     u7931:
 33319   002804  EFCC  F013         	goto	l10613
 33320   002808                     u7930:
 33321   002808                     
 33322                           ; BSR set to: 5
 33323                           ;../../VLCBlib_PIC/mns.c: 711:                 mode_state = MODE_SETUP;
 33324   002808  6BA1               	clrf	_mode_state& (0+255),b
 33325                           
 33326                           ;../../VLCBlib_PIC/mns.c: 712:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 33327   00280A  699E               	setf	_setupModePreviousMode& (0+255),b
 33328   00280C                     
 33329                           ; BSR set to: 5
 33330                           ;../../VLCBlib_PIC/mns.c: 713:                 pbTimer.val = tickGet();
 33331   00280C  EC14  F03A         	call	_tickGet	;wreg free
 33332   002810  C501  F570         	movff	?_tickGet,_pbTimer
 33333   002814  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33334   002818  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33335   00281C  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33336   002820                     
 33337                           ;../../VLCBlib_PIC/mns.c: 715:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 33338   002820  C590  F526         	movff	_nn+1,sendMessage2@data1
 33339   002824  C58F  F527         	movff	_nn,sendMessage2@data2
 33340   002828  0E50               	movlw	80
 33341   00282A  EC8A  F040         	call	_sendMessage2
 33342   00282E                     
 33343                           ;../../VLCBlib_PIC/mns.c: 716:                 setLEDsByMode();
 33344   00282E  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 33345   002832  EFCC  F013         	goto	l10613
 33346   002836                     l1418:
 33347                           
 33348                           ; BSR set to: 5
 33349                           ;../../VLCBlib_PIC/mns.c: 721:             if ((!(PORTAbits.RA2)) == 0) {
 33350   002836  A4CE               	btfss	206,2,c	;volatile
 33351   002838  EF20  F014         	goto	u7941
 33352   00283C  EF22  F014         	goto	u7940
 33353   002840                     u7941:
 33354   002840  EFA6  F014         	goto	l10657
 33355   002844                     u7940:
 33356   002844                     
 33357                           ; BSR set to: 5
 33358                           ;../../VLCBlib_PIC/mns.c: 724:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33359   002844  EC14  F03A         	call	_tickGet	;wreg free
 33360   002848  0105               	movlb	5	; () banked
 33361   00284A  5170               	movf	_pbTimer& (0+255),w,b
 33362   00284C  5C01               	subwf	?_tickGet^(0+1280),w,c
 33363   00284E  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33364   002850  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33365   002852  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33366   002854  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33367   002856  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33368   002858  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33369   00285A  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33370   00285C  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33371   00285E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33372   002860  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33373   002862  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33374   002864  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33375   002866  E10B               	bnz	u7950
 33376   002868  0E6B               	movlw	107
 33377   00286A  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33378   00286C  0E18               	movlw	24
 33379   00286E  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33380   002870  A0D8               	btfss	status,0,c
 33381   002872  EF3D  F014         	goto	u7951
 33382   002876  EF3F  F014         	goto	u7950
 33383   00287A                     u7951:
 33384   00287A  EF77  F014         	goto	l10649
 33385   00287E                     u7950:
 33386   00287E                     
 33387                           ; BSR set to: 5
 33388   00287E  EC14  F03A         	call	_tickGet	;wreg free
 33389   002882  0105               	movlb	5	; () banked
 33390   002884  5170               	movf	_pbTimer& (0+255),w,b
 33391   002886  5C01               	subwf	?_tickGet^(0+1280),w,c
 33392   002888  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33393   00288A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33394   00288C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33395   00288E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33396   002890  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33397   002892  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33398   002894  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33399   002896  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33400   002898  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33401   00289A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33402   00289C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33403   00289E  E10B               	bnz	u7961
 33404   0028A0  0E48               	movlw	72
 33405   0028A2  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33406   0028A4  0EE8               	movlw	232
 33407   0028A6  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33408   0028A8  0E01               	movlw	1
 33409   0028AA  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33410   0028AC  B0D8               	btfsc	status,0,c
 33411   0028AE  EF5B  F014         	goto	u7961
 33412   0028B2  EF5D  F014         	goto	u7960
 33413   0028B6                     u7961:
 33414   0028B6  EF77  F014         	goto	l10649
 33415   0028BA                     u7960:
 33416   0028BA                     
 33417                           ; BSR set to: 5
 33418                           ;../../VLCBlib_PIC/mns.c: 726:                     mode_state = setupModePreviousMode;
 33419   0028BA  C59E  F5A1         	movff	_setupModePreviousMode,_mode_state
 33420   0028BE                     
 33421                           ; BSR set to: 5
 33422                           ;../../VLCBlib_PIC/mns.c: 727:                     if (mode_state == MODE_NORMAL) {
 33423   0028BE  05A1               	decf	_mode_state& (0+255),w,b
 33424   0028C0  A4D8               	btfss	status,2,c
 33425   0028C2  EF65  F014         	goto	u7971
 33426   0028C6  EF67  F014         	goto	u7970
 33427   0028CA                     u7971:
 33428   0028CA  EF75  F014         	goto	l10647
 33429   0028CE                     u7970:
 33430   0028CE                     
 33431                           ; BSR set to: 5
 33432                           ;../../VLCBlib_PIC/mns.c: 729:                         nn.word = previousNN.word;
 33433   0028CE  C58D  F58F         	movff	_previousNN,_nn
 33434   0028D2  C58E  F590         	movff	_previousNN+1,_nn+1
 33435   0028D6                     
 33436                           ; BSR set to: 5
 33437                           ;../../VLCBlib_PIC/mns.c: 730:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 33438   0028D6  C590  F526         	movff	_nn+1,sendMessage2@data1
 33439   0028DA  C58F  F527         	movff	_nn,sendMessage2@data2
 33440   0028DE  0E52               	movlw	82
 33441   0028E0  EC8A  F040         	call	_sendMessage2
 33442   0028E4                     
 33443                           ;../../VLCBlib_PIC/mns.c: 732:                         mnsDiagnostics[0x05].asUint++;
 33444   0028E4  0105               	movlb	5	; () banked
 33445   0028E6  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 33446   0028E8  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 33447   0028EA                     l10647:
 33448                           
 33449                           ; BSR set to: 5
 33450                           ;../../VLCBlib_PIC/mns.c: 735:                     setLEDsByMode();
 33451   0028EA  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 33452   0028EE                     l10649:
 33453                           
 33454                           ;../../VLCBlib_PIC/mns.c: 737:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33455   0028EE  EC14  F03A         	call	_tickGet	;wreg free
 33456   0028F2  0105               	movlb	5	; () banked
 33457   0028F4  5170               	movf	_pbTimer& (0+255),w,b
 33458   0028F6  5C01               	subwf	?_tickGet^(0+1280),w,c
 33459   0028F8  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33460   0028FA  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33461   0028FC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33462   0028FE  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33463   002900  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33464   002902  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33465   002904  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33466   002906  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33467   002908  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33468   00290A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33469   00290C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33470   00290E  E10D               	bnz	u7980
 33471   002910  0E91               	movlw	145
 33472   002912  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33473   002914  0ED0               	movlw	208
 33474   002916  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33475   002918  0E03               	movlw	3
 33476   00291A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33477   00291C  A0D8               	btfss	status,0,c
 33478   00291E  EF93  F014         	goto	u7981
 33479   002922  EF95  F014         	goto	u7980
 33480   002926                     u7981:
 33481   002926  EF98  F014         	goto	l1422
 33482   00292A                     u7980:
 33483   00292A                     
 33484                           ; BSR set to: 5
 33485                           ;../../VLCBlib_PIC/mns.c: 738:                     mode_state = MODE_UNINITIALISED;
 33486   00292A  69A1               	setf	_mode_state& (0+255),b
 33487   00292C                     l10653:
 33488                           
 33489                           ;../../VLCBlib_PIC/mns.c: 739:                     setLEDsByMode();
 33490   00292C  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 33491   002930                     l1422:
 33492                           
 33493                           ;../../VLCBlib_PIC/mns.c: 741:                 pbTimer.val = tickGet();
 33494   002930  EC14  F03A         	call	_tickGet	;wreg free
 33495   002934  C501  F570         	movff	?_tickGet,_pbTimer
 33496   002938  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33497   00293C  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33498   002940  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33499   002944                     
 33500                           ;../../VLCBlib_PIC/mns.c: 742:                 pbWasPushed = FALSE;
 33501   002944  0105               	movlb	5	; () banked
 33502   002946  6B9D               	clrf	_pbWasPushed& (0+255),b
 33503                           
 33504                           ;../../VLCBlib_PIC/mns.c: 743:             } else {
 33505   002948  EF4E  F015         	goto	l1429
 33506   00294C                     l10657:
 33507                           
 33508                           ; BSR set to: 5
 33509                           ;../../VLCBlib_PIC/mns.c: 744:                 pbWasPushed = TRUE;
 33510   00294C  0E01               	movlw	1
 33511   00294E  6F9D               	movwf	_pbWasPushed& (0+255),b
 33512   002950  EF4E  F015         	goto	l1429
 33513   002954                     l1424:
 33514                           
 33515                           ; BSR set to: 5
 33516                           ;../../VLCBlib_PIC/mns.c: 749:             if ((!(PORTAbits.RA2)) == 0) {
 33517   002954  A4CE               	btfss	206,2,c	;volatile
 33518   002956  EFAF  F014         	goto	u7991
 33519   00295A  EFB1  F014         	goto	u7990
 33520   00295E                     u7991:
 33521   00295E  EFA6  F014         	goto	l10657
 33522   002962                     u7990:
 33523   002962                     
 33524                           ; BSR set to: 5
 33525                           ;../../VLCBlib_PIC/mns.c: 751:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33526   002962  519D               	movf	_pbWasPushed& (0+255),w,b
 33527   002964  B4D8               	btfsc	status,2,c
 33528   002966  EFB7  F014         	goto	u8001
 33529   00296A  EFB9  F014         	goto	u8000
 33530   00296E                     u8001:
 33531   00296E  EF06  F015         	goto	l10673
 33532   002972                     u8000:
 33533   002972                     
 33534                           ; BSR set to: 5
 33535   002972  EC14  F03A         	call	_tickGet	;wreg free
 33536   002976  0105               	movlb	5	; () banked
 33537   002978  5170               	movf	_pbTimer& (0+255),w,b
 33538   00297A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33539   00297C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33540   00297E  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33541   002980  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33542   002982  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33543   002984  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33544   002986  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33545   002988  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33546   00298A  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33547   00298C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33548   00298E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33549   002990  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33550   002992  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33551   002994  E10B               	bnz	u8010
 33552   002996  0E6B               	movlw	107
 33553   002998  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33554   00299A  0E18               	movlw	24
 33555   00299C  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33556   00299E  A0D8               	btfss	status,0,c
 33557   0029A0  EFD4  F014         	goto	u8011
 33558   0029A4  EFD6  F014         	goto	u8010
 33559   0029A8                     u8011:
 33560   0029A8  EF06  F015         	goto	l10673
 33561   0029AC                     u8010:
 33562   0029AC                     
 33563                           ; BSR set to: 5
 33564   0029AC  EC14  F03A         	call	_tickGet	;wreg free
 33565   0029B0  0105               	movlb	5	; () banked
 33566   0029B2  5170               	movf	_pbTimer& (0+255),w,b
 33567   0029B4  5C01               	subwf	?_tickGet^(0+1280),w,c
 33568   0029B6  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33569   0029B8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33570   0029BA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33571   0029BC  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33572   0029BE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33573   0029C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33574   0029C2  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33575   0029C4  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33576   0029C6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33577   0029C8  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33578   0029CA  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33579   0029CC  E10B               	bnz	u8021
 33580   0029CE  0E48               	movlw	72
 33581   0029D0  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33582   0029D2  0EE8               	movlw	232
 33583   0029D4  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33584   0029D6  0E01               	movlw	1
 33585   0029D8  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33586   0029DA  B0D8               	btfsc	status,0,c
 33587   0029DC  EFF2  F014         	goto	u8021
 33588   0029E0  EFF4  F014         	goto	u8020
 33589   0029E4                     u8021:
 33590   0029E4  EF06  F015         	goto	l10673
 33591   0029E8                     u8020:
 33592   0029E8                     
 33593                           ; BSR set to: 5
 33594                           ;../../VLCBlib_PIC/mns.c: 753:                     previousNN.word = nn.word;
 33595   0029E8  C58F  F58D         	movff	_nn,_previousNN
 33596   0029EC  C590  F58E         	movff	_nn+1,_previousNN+1
 33597                           
 33598                           ;../../VLCBlib_PIC/mns.c: 754:                     nn.bytes.lo = nn.bytes.hi = 0;
 33599   0029F0  6B90               	clrf	(_nn+1)& (0+255),b
 33600   0029F2  6B8F               	clrf	_nn& (0+255),b
 33601                           
 33602                           ;../../VLCBlib_PIC/mns.c: 756:                     mode_state = MODE_SETUP;
 33603   0029F4  6BA1               	clrf	_mode_state& (0+255),b
 33604   0029F6                     
 33605                           ; BSR set to: 5
 33606                           ;../../VLCBlib_PIC/mns.c: 757:                     setupModePreviousMode = MODE_NORMAL;
 33607   0029F6  0E01               	movlw	1
 33608   0029F8  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33609   0029FA                     
 33610                           ; BSR set to: 5
 33611                           ;../../VLCBlib_PIC/mns.c: 759:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 33612   0029FA  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33613   0029FE  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33614   002A02  0E50               	movlw	80
 33615   002A04  EC8A  F040         	call	_sendMessage2
 33616   002A08                     
 33617                           ;../../VLCBlib_PIC/mns.c: 760:                     setLEDsByMode();
 33618   002A08  EC5B  F03E         	call	_setLEDsByMode	;wreg free
 33619   002A0C                     l10673:
 33620                           
 33621                           ;../../VLCBlib_PIC/mns.c: 762:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 33622   002A0C  0105               	movlb	5	; () banked
 33623   002A0E  519D               	movf	_pbWasPushed& (0+255),w,b
 33624   002A10  B4D8               	btfsc	status,2,c
 33625   002A12  EF0D  F015         	goto	u8031
 33626   002A16  EF0F  F015         	goto	u8030
 33627   002A1A                     u8031:
 33628   002A1A  EF98  F014         	goto	l1422
 33629   002A1E                     u8030:
 33630   002A1E                     
 33631                           ; BSR set to: 5
 33632   002A1E  EC14  F03A         	call	_tickGet	;wreg free
 33633   002A22  0105               	movlb	5	; () banked
 33634   002A24  5170               	movf	_pbTimer& (0+255),w,b
 33635   002A26  5C01               	subwf	?_tickGet^(0+1280),w,c
 33636   002A28  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33637   002A2A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33638   002A2C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33639   002A2E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33640   002A30  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33641   002A32  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33642   002A34  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33643   002A36  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33644   002A38  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33645   002A3A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33646   002A3C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33647   002A3E  E10D               	bnz	u8040
 33648   002A40  0E90               	movlw	144
 33649   002A42  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33650   002A44  0ED0               	movlw	208
 33651   002A46  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33652   002A48  0E03               	movlw	3
 33653   002A4A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33654   002A4C  A0D8               	btfss	status,0,c
 33655   002A4E  EF2B  F015         	goto	u8041
 33656   002A52  EF2D  F015         	goto	u8040
 33657   002A56                     u8041:
 33658   002A56  EF98  F014         	goto	l1422
 33659   002A5A                     u8040:
 33660   002A5A                     
 33661                           ; BSR set to: 5
 33662                           ;../../VLCBlib_PIC/mns.c: 764:                     previousNN.word = nn.word;
 33663   002A5A  C58F  F58D         	movff	_nn,_previousNN
 33664   002A5E  C590  F58E         	movff	_nn+1,_previousNN+1
 33665                           
 33666                           ;../../VLCBlib_PIC/mns.c: 765:                     nn.bytes.lo = nn.bytes.hi = 0;
 33667   002A62  6B90               	clrf	(_nn+1)& (0+255),b
 33668   002A64  6B8F               	clrf	_nn& (0+255),b
 33669                           
 33670                           ;../../VLCBlib_PIC/mns.c: 767:                     mode_state = MODE_UNINITIALISED;
 33671   002A66  69A1               	setf	_mode_state& (0+255),b
 33672   002A68                     
 33673                           ; BSR set to: 5
 33674                           ;../../VLCBlib_PIC/mns.c: 768:                     setupModePreviousMode = MODE_NORMAL;
 33675   002A68  0E01               	movlw	1
 33676   002A6A  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33677   002A6C                     
 33678                           ; BSR set to: 5
 33679                           ;../../VLCBlib_PIC/mns.c: 770:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 33680   002A6C  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33681   002A70  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33682   002A74  0E51               	movlw	81
 33683   002A76  EC8A  F040         	call	_sendMessage2
 33684   002A7A  EF96  F014         	goto	l10653
 33685   002A7E                     l10691:
 33686                           
 33687                           ; BSR set to: 5
 33688   002A7E  51A1               	movf	_mode_state& (0+255),w,b
 33689                           
 33690                           ; Switch size 1, requested type "simple"
 33691                           ; Number of cases is 3, Range of values is 0 to 255
 33692                           ; switch strategies available:
 33693                           ; Name         Instructions Cycles
 33694                           ; simple_byte           10     6 (average)
 33695                           ;	Chosen strategy is simple_byte
 33696   002A80  0A00               	xorlw	0	; case 0
 33697   002A82  B4D8               	btfsc	status,2,c
 33698   002A84  EF1B  F014         	goto	l1418
 33699   002A88  0AFD               	xorlw	253	; case 253
 33700   002A8A  B4D8               	btfsc	status,2,c
 33701   002A8C  EFFD  F013         	goto	l1416
 33702   002A90  0A02               	xorlw	2	; case 255
 33703   002A92  B4D8               	btfsc	status,2,c
 33704   002A94  EFC5  F013         	goto	l1411
 33705   002A98  EFAA  F014         	goto	l1424
 33706   002A9C                     l1429:
 33707   002A9C  0012               	return		;funcret
 33708   002A9E                     __end_of_mnsPoll:
 33709                           	callstack 0
 33710                           
 33711 ;; *************** function _setLEDsByMode *****************
 33712 ;; Defined at:
 33713 ;;		line 818 in file "../../VLCBlib_PIC/mns.c"
 33714 ;; Parameters:    Size  Location     Type
 33715 ;;		None
 33716 ;; Auto vars:     Size  Location     Type
 33717 ;;		None
 33718 ;; Return value:  Size  Location     Type
 33719 ;;                  1    wreg      void 
 33720 ;; Registers used:
 33721 ;;		wreg, status,2, status,0, cstack
 33722 ;; Tracked objects:
 33723 ;;		On entry : 0/0
 33724 ;;		On exit  : 0/0
 33725 ;;		Unchanged: 0/0
 33726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33731 ;;Total ram usage:        0 bytes
 33732 ;; Hardware stack levels used: 1
 33733 ;; Hardware stack levels required when called: 2
 33734 ;; This function calls:
 33735 ;;		_showStatus
 33736 ;; This function is called by:
 33737 ;;		_mnsPowerUp
 33738 ;;		_mnsProcessMessage
 33739 ;;		_mnsPoll
 33740 ;; This function uses a non-reentrant model
 33741 ;;
 33742                           
 33743                           	psect	text71
 33744   007CB6                     __ptext71:
 33745                           	callstack 0
 33746   007CB6                     _setLEDsByMode:
 33747                           	callstack 122
 33748   007CB6                     
 33749                           ;../../VLCBlib_PIC/mns.c: 819:        switch (mode_state) {
 33750   007CB6  EF6C  F03E         	goto	l9021
 33751   007CBA                     l9013:
 33752                           
 33753                           ; BSR set to: 5
 33754                           ;../../VLCBlib_PIC/mns.c: 821:             showStatus(STATUS_UNINITIALISED);
 33755   007CBA  0E01               	movlw	1
 33756   007CBC  EC50  F028         	call	_showStatus
 33757                           
 33758                           ;../../VLCBlib_PIC/mns.c: 822:             break;
 33759   007CC0  EF7C  F03E         	goto	l1442
 33760   007CC4                     l9015:
 33761                           
 33762                           ; BSR set to: 5
 33763                           ;../../VLCBlib_PIC/mns.c: 825:             showStatus(STATUS_SETUP);
 33764   007CC4  0E02               	movlw	2
 33765   007CC6  EC50  F028         	call	_showStatus
 33766                           
 33767                           ;../../VLCBlib_PIC/mns.c: 826:             break;
 33768   007CCA  EF7C  F03E         	goto	l1442
 33769   007CCE                     l9017:
 33770                           
 33771                           ; BSR set to: 5
 33772                           ;../../VLCBlib_PIC/mns.c: 828:             showStatus(STATUS_NORMAL);
 33773   007CCE  0E03               	movlw	3
 33774   007CD0  EC50  F028         	call	_showStatus
 33775                           
 33776                           ;../../VLCBlib_PIC/mns.c: 829:             break;
 33777   007CD4  EF7C  F03E         	goto	l1442
 33778   007CD8                     l9021:
 33779   007CD8  0105               	movlb	5	; () banked
 33780   007CDA  51A1               	movf	_mode_state& (0+255),w,b
 33781                           
 33782                           ; Switch size 1, requested type "simple"
 33783                           ; Number of cases is 3, Range of values is 0 to 255
 33784                           ; switch strategies available:
 33785                           ; Name         Instructions Cycles
 33786                           ; simple_byte           10     6 (average)
 33787                           ;	Chosen strategy is simple_byte
 33788   007CDC  0A00               	xorlw	0	; case 0
 33789   007CDE  B4D8               	btfsc	status,2,c
 33790   007CE0  EF62  F03E         	goto	l9015
 33791   007CE4  0AFD               	xorlw	253	; case 253
 33792   007CE6  B4D8               	btfsc	status,2,c
 33793   007CE8  EF62  F03E         	goto	l9015
 33794   007CEC  0A02               	xorlw	2	; case 255
 33795   007CEE  B4D8               	btfsc	status,2,c
 33796   007CF0  EF5D  F03E         	goto	l9013
 33797   007CF4  EF67  F03E         	goto	l9017
 33798   007CF8                     l1442:
 33799   007CF8  0012               	return		;funcret
 33800   007CFA                     __end_of_setLEDsByMode:
 33801                           	callstack 0
 33802                           
 33803 ;; *************** function _sendMessage2 *****************
 33804 ;; Defined at:
 33805 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 33806 ;; Parameters:    Size  Location     Type
 33807 ;;  opc             1    wreg     enum E22928
 33808 ;;  data1           1   37[COMRAM] unsigned char 
 33809 ;;  data2           1   38[COMRAM] unsigned char 
 33810 ;; Auto vars:     Size  Location     Type
 33811 ;;  opc             1   39[COMRAM] enum E22928
 33812 ;; Return value:  Size  Location     Type
 33813 ;;                  1    wreg      void 
 33814 ;; Registers used:
 33815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33816 ;; Tracked objects:
 33817 ;;		On entry : 0/0
 33818 ;;		On exit  : 0/0
 33819 ;;		Unchanged: 0/0
 33820 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33825 ;;Total ram usage:        3 bytes
 33826 ;; Hardware stack levels used: 1
 33827 ;; Hardware stack levels required when called: 5
 33828 ;; This function calls:
 33829 ;;		_sendMessage
 33830 ;; This function is called by:
 33831 ;;		_doNnclr
 33832 ;;		_doEvlrn
 33833 ;;		_doEvuln
 33834 ;;		_mnsProcessMessage
 33835 ;;		_mnsPoll
 33836 ;;		_nvProcessMessage
 33837 ;; This function uses a non-reentrant model
 33838 ;;
 33839                           
 33840                           	psect	text72
 33841   008114                     __ptext72:
 33842                           	callstack 0
 33843   008114                     _sendMessage2:
 33844                           	callstack 118
 33845                           
 33846                           ;incstack = 0
 33847                           ;sendMessage2@opc stored from wreg
 33848   008114  6E28               	movwf	sendMessage2@opc^(0+1280),c
 33849   008116                     
 33850                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 33851   008116  0E03               	movlw	3
 33852   008118  6E1B               	movwf	sendMessage@len^(0+1280),c
 33853   00811A  C526  F51C         	movff	sendMessage2@data1,sendMessage@data1
 33854   00811E  C527  F51D         	movff	sendMessage2@data2,sendMessage@data2
 33855   008122  0E00               	movlw	0
 33856   008124  6E1E               	movwf	sendMessage@data3^(0+1280),c
 33857   008126  0E00               	movlw	0
 33858   008128  6E1F               	movwf	sendMessage@data4^(0+1280),c
 33859   00812A  0E00               	movlw	0
 33860   00812C  6E20               	movwf	sendMessage@data5^(0+1280),c
 33861   00812E  0E00               	movlw	0
 33862   008130  6E21               	movwf	sendMessage@data6^(0+1280),c
 33863   008132  0E00               	movlw	0
 33864   008134  6E22               	movwf	sendMessage@data7^(0+1280),c
 33865   008136  5028               	movf	sendMessage2@opc^(0+1280),w,c
 33866   008138  EC7E  F036         	call	_sendMessage
 33867   00813C  0012               	return		;funcret
 33868   00813E                     __end_of_sendMessage2:
 33869                           	callstack 0
 33870                           
 33871 ;; *************** function _sendMessage7 *****************
 33872 ;; Defined at:
 33873 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 33874 ;; Parameters:    Size  Location     Type
 33875 ;;  opc             1    wreg     enum E22928
 33876 ;;  data1           1   37[COMRAM] unsigned char 
 33877 ;;  data2           1   38[COMRAM] unsigned char 
 33878 ;;  data3           1   39[COMRAM] unsigned char 
 33879 ;;  data4           1   40[COMRAM] unsigned char 
 33880 ;;  data5           1   41[COMRAM] unsigned char 
 33881 ;;  data6           1   42[COMRAM] unsigned char 
 33882 ;;  data7           1   43[COMRAM] unsigned char 
 33883 ;; Auto vars:     Size  Location     Type
 33884 ;;  opc             1   44[COMRAM] enum E22928
 33885 ;; Return value:  Size  Location     Type
 33886 ;;                  1    wreg      void 
 33887 ;; Registers used:
 33888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33889 ;; Tracked objects:
 33890 ;;		On entry : 0/0
 33891 ;;		On exit  : 0/0
 33892 ;;		Unchanged: 0/0
 33893 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33894 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33897 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33898 ;;Total ram usage:        8 bytes
 33899 ;; Hardware stack levels used: 1
 33900 ;; Hardware stack levels required when called: 5
 33901 ;; This function calls:
 33902 ;;		_sendMessage
 33903 ;; This function is called by:
 33904 ;;		_consumerProcessMessage
 33905 ;;		_nerdCallback
 33906 ;;		_mnsProcessMessage
 33907 ;; This function uses a non-reentrant model
 33908 ;;
 33909                           
 33910                           	psect	text73
 33911   00813E                     __ptext73:
 33912                           	callstack 0
 33913   00813E                     _sendMessage7:
 33914                           	callstack 118
 33915                           
 33916                           ;incstack = 0
 33917                           ;sendMessage7@opc stored from wreg
 33918   00813E  6E2D               	movwf	sendMessage7@opc^(0+1280),c
 33919   008140                     
 33920                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 33921   008140  0E08               	movlw	8
 33922   008142  6E1B               	movwf	sendMessage@len^(0+1280),c
 33923   008144  C526  F51C         	movff	sendMessage7@data1,sendMessage@data1
 33924   008148  C527  F51D         	movff	sendMessage7@data2,sendMessage@data2
 33925   00814C  C528  F51E         	movff	sendMessage7@data3,sendMessage@data3
 33926   008150  C529  F51F         	movff	sendMessage7@data4,sendMessage@data4
 33927   008154  C52A  F520         	movff	sendMessage7@data5,sendMessage@data5
 33928   008158  C52B  F521         	movff	sendMessage7@data6,sendMessage@data6
 33929   00815C  C52C  F522         	movff	sendMessage7@data7,sendMessage@data7
 33930   008160  502D               	movf	sendMessage7@opc^(0+1280),w,c
 33931   008162  EC7E  F036         	call	_sendMessage
 33932   008166  0012               	return		;funcret
 33933   008168                     __end_of_sendMessage7:
 33934                           	callstack 0
 33935                           
 33936 ;; *************** function _isConsumedEvent *****************
 33937 ;; Defined at:
 33938 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 33939 ;; Parameters:    Size  Location     Type
 33940 ;;  eventIndex      1    wreg     unsigned char 
 33941 ;; Auto vars:     Size  Location     Type
 33942 ;;  eventIndex      1    0[COMRAM] unsigned char 
 33943 ;; Return value:  Size  Location     Type
 33944 ;;                  1    wreg      unsigned char 
 33945 ;; Registers used:
 33946 ;;		wreg, status,2, cstack
 33947 ;; Tracked objects:
 33948 ;;		On entry : 0/0
 33949 ;;		On exit  : 0/0
 33950 ;;		Unchanged: 0/0
 33951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33956 ;;Total ram usage:        1 bytes
 33957 ;; Hardware stack levels used: 1
 33958 ;; Hardware stack levels required when called: 2
 33959 ;; This function calls:
 33960 ;;		_APP_isConsumedEvent
 33961 ;; This function is called by:
 33962 ;;		_consumerProcessMessage
 33963 ;; This function uses a non-reentrant model
 33964 ;;
 33965                           
 33966                           	psect	text74
 33967   008352                     __ptext74:
 33968                           	callstack 0
 33969   008352                     _isConsumedEvent:
 33970                           	callstack 122
 33971                           
 33972                           ;incstack = 0
 33973                           ;isConsumedEvent@eventIndex stored from wreg
 33974   008352  6E01               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 33975   008354                     
 33976                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 33977   008354  5001               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 33978   008356  ECCF  F041         	call	_APP_isConsumedEvent
 33979   00835A  0012               	return		;funcret
 33980   00835C                     __end_of_isConsumedEvent:
 33981                           	callstack 0
 33982                           
 33983 ;; *************** function _APP_isConsumedEvent *****************
 33984 ;; Defined at:
 33985 ;;		line 64 in file "../canargb_events.c"
 33986 ;; Parameters:    Size  Location     Type
 33987 ;;  tableIndex      1    wreg     unsigned char 
 33988 ;; Auto vars:     Size  Location     Type
 33989 ;;  tableIndex      1    0[COMRAM] unsigned char 
 33990 ;; Return value:  Size  Location     Type
 33991 ;;                  1    wreg      unsigned char 
 33992 ;; Registers used:
 33993 ;;		wreg
 33994 ;; Tracked objects:
 33995 ;;		On entry : 0/0
 33996 ;;		On exit  : 0/0
 33997 ;;		Unchanged: 0/0
 33998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34003 ;;Total ram usage:        0 bytes
 34004 ;; Hardware stack levels used: 1
 34005 ;; Hardware stack levels required when called: 1
 34006 ;; This function calls:
 34007 ;;		Nothing
 34008 ;; This function is called by:
 34009 ;;		_isConsumedEvent
 34010 ;; This function uses a non-reentrant model
 34011 ;;
 34012                           
 34013                           	psect	text75
 34014   00839E                     __ptext75:
 34015                           	callstack 0
 34016   00839E                     _APP_isConsumedEvent:
 34017                           	callstack 122
 34018   00839E                     
 34019                           ;../canargb_events.c: 65:     return TRUE;
 34020   00839E  0E01               	movlw	1
 34021   0083A0  0012               	return		;funcret
 34022   0083A2                     __end_of_APP_isConsumedEvent:
 34023                           	callstack 0
 34024                           
 34025 ;; *************** function _findEvent *****************
 34026 ;; Defined at:
 34027 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 34028 ;; Parameters:    Size  Location     Type
 34029 ;;  nodeNumber      2   33[COMRAM] unsigned short 
 34030 ;;  eventNumber     2   35[COMRAM] unsigned short 
 34031 ;; Auto vars:     Size  Location     Type
 34032 ;;  en              2   41[COMRAM] unsigned short 
 34033 ;;  nn              2   39[COMRAM] unsigned short 
 34034 ;;  tableIndex      1   45[COMRAM] unsigned char 
 34035 ;;  chainIdx        1   44[COMRAM] unsigned char 
 34036 ;;  hash            1   43[COMRAM] unsigned char 
 34037 ;; Return value:  Size  Location     Type
 34038 ;;                  1    wreg      unsigned char 
 34039 ;; Registers used:
 34040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34041 ;; Tracked objects:
 34042 ;;		On entry : 0/0
 34043 ;;		On exit  : 0/0
 34044 ;;		Unchanged: 0/0
 34045 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34047 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34049 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34050 ;;Total ram usage:       13 bytes
 34051 ;; Hardware stack levels used: 1
 34052 ;; Hardware stack levels required when called: 4
 34053 ;; This function calls:
 34054 ;;		_getEN
 34055 ;;		_getHash
 34056 ;;		_getNN
 34057 ;; This function is called by:
 34058 ;;		_consumerProcessMessage
 34059 ;;		_doReqev
 34060 ;;		_removeEvent
 34061 ;;		_addEvent
 34062 ;; This function uses a non-reentrant model
 34063 ;;
 34064                           
 34065                           	psect	text76
 34066   00641E                     __ptext76:
 34067                           	callstack 0
 34068   00641E                     _findEvent:
 34069                           	callstack 119
 34070   00641E                     
 34071                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 34072   00641E  C522  F51C         	movff	findEvent@nodeNumber,getHash@nn
 34073   006422  C523  F51D         	movff	findEvent@nodeNumber+1,getHash@nn+1
 34074   006426  C524  F51E         	movff	findEvent@eventNumber,getHash@en
 34075   00642A  C525  F51F         	movff	findEvent@eventNumber+1,getHash@en+1
 34076   00642E  EC35  F041         	call	_getHash	;wreg free
 34077   006432  6E2C               	movwf	findEvent@hash^(0+1280),c
 34078   006434                     
 34079                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 34080   006434  6A2D               	clrf	findEvent@chainIdx^(0+1280),c
 34081   006436                     l7739:
 34082                           
 34083                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 34084   006436  502C               	movf	findEvent@hash^(0+1280),w,c
 34085   006438  0D14               	mullw	20
 34086   00643A  0EFC               	movlw	low _eventChains
 34087   00643C  24F3               	addwf	243,w,c
 34088   00643E  6E26               	movwf	??_findEvent^(0+1280),c
 34089   006440  0E08               	movlw	high _eventChains
 34090   006442  20F4               	addwfc	prodh,w,c
 34091   006444  6E27               	movwf	(??_findEvent+1)^(0+1280),c
 34092   006446  502D               	movf	findEvent@chainIdx^(0+1280),w,c
 34093   006448  2426               	addwf	??_findEvent^(0+1280),w,c
 34094   00644A  6ED9               	movwf	fsr2l,c
 34095   00644C  0E00               	movlw	0
 34096   00644E  2027               	addwfc	(??_findEvent+1)^(0+1280),w,c
 34097   006450  6EDA               	movwf	fsr2h,c
 34098   006452  50DF               	movf	indf2,w,c
 34099   006454  6E2E               	movwf	findEvent@tableIndex^(0+1280),c
 34100   006456                     
 34101                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 34102   006456  282E               	incf	findEvent@tableIndex^(0+1280),w,c
 34103   006458  A4D8               	btfss	status,2,c
 34104   00645A  EF31  F032         	goto	u5031
 34105   00645E  EF33  F032         	goto	u5030
 34106   006462                     u5031:
 34107   006462  EF36  F032         	goto	l7747
 34108   006466                     u5030:
 34109   006466                     l7743:
 34110   006466  0EFF               	movlw	255
 34111   006468  EF6A  F032         	goto	l1127
 34112   00646C                     l7747:
 34113                           
 34114                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 34115   00646C  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34116   00646E  EC8F  F029         	call	_getNN
 34117   006472  C50D  F528         	movff	?_getNN,findEvent@nn
 34118   006476  C50E  F529         	movff	?_getNN+1,findEvent@nn+1
 34119                           
 34120                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 34121   00647A  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34122   00647C  ECBD  F033         	call	_getEN
 34123   006480  C50D  F52A         	movff	?_getEN,findEvent@en
 34124   006484  C50E  F52B         	movff	?_getEN+1,findEvent@en+1
 34125   006488                     
 34126                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 34127   006488  5022               	movf	findEvent@nodeNumber^(0+1280),w,c
 34128   00648A  1828               	xorwf	findEvent@nn^(0+1280),w,c
 34129   00648C  E107               	bnz	u5041
 34130   00648E  5023               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 34131   006490  1829               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 34132   006492  A4D8               	btfss	status,2,c
 34133   006494  EF4E  F032         	goto	u5041
 34134   006498  EF50  F032         	goto	u5040
 34135   00649C                     u5041:
 34136   00649C  EF5F  F032         	goto	l7757
 34137   0064A0                     u5040:
 34138   0064A0  5024               	movf	findEvent@eventNumber^(0+1280),w,c
 34139   0064A2  182A               	xorwf	findEvent@en^(0+1280),w,c
 34140   0064A4  E107               	bnz	u5051
 34141   0064A6  5025               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 34142   0064A8  182B               	xorwf	(findEvent@en+1)^(0+1280),w,c
 34143   0064AA  A4D8               	btfss	status,2,c
 34144   0064AC  EF5A  F032         	goto	u5051
 34145   0064B0  EF5C  F032         	goto	u5050
 34146   0064B4                     u5051:
 34147   0064B4  EF5F  F032         	goto	l7757
 34148   0064B8                     u5050:
 34149   0064B8                     
 34150                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 34151   0064B8  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34152   0064BA  EF6A  F032         	goto	l1127
 34153   0064BE                     l7757:
 34154                           
 34155                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 34156   0064BE  2A2D               	incf	findEvent@chainIdx^(0+1280),f,c
 34157   0064C0  0E13               	movlw	19
 34158   0064C2  642D               	cpfsgt	findEvent@chainIdx^(0+1280),c
 34159   0064C4  EF66  F032         	goto	u5061
 34160   0064C8  EF68  F032         	goto	u5060
 34161   0064CC                     u5061:
 34162   0064CC  EF1B  F032         	goto	l7739
 34163   0064D0                     u5060:
 34164   0064D0  EF33  F032         	goto	l7743
 34165   0064D4                     l1127:
 34166   0064D4  0012               	return		;funcret
 34167   0064D6                     __end_of_findEvent:
 34168                           	callstack 0
 34169                           
 34170 ;; *************** function _consumerEventCheckLen *****************
 34171 ;; Defined at:
 34172 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 34173 ;; Parameters:    Size  Location     Type
 34174 ;;  m               2   48[COMRAM] PTR struct Message
 34175 ;;		 -> poll@m(9), 
 34176 ;;  needed          1   50[COMRAM] unsigned char 
 34177 ;; Auto vars:     Size  Location     Type
 34178 ;;		None
 34179 ;; Return value:  Size  Location     Type
 34180 ;;                  1    wreg      enum E23340
 34181 ;; Registers used:
 34182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34183 ;; Tracked objects:
 34184 ;;		On entry : 0/0
 34185 ;;		On exit  : 0/0
 34186 ;;		Unchanged: 0/0
 34187 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34188 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34192 ;;Total ram usage:        3 bytes
 34193 ;; Hardware stack levels used: 1
 34194 ;; Hardware stack levels required when called: 7
 34195 ;; This function calls:
 34196 ;;		_checkLen
 34197 ;; This function is called by:
 34198 ;;		_consumerProcessMessage
 34199 ;; This function uses a non-reentrant model
 34200 ;;
 34201                           
 34202                           	psect	text77
 34203   00830A                     __ptext77:
 34204                           	callstack 0
 34205   00830A                     _consumerEventCheckLen:
 34206                           	callstack 117
 34207   00830A                     
 34208                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 34209   00830A  C531  F52C         	movff	consumerEventCheckLen@m,checkLen@m
 34210   00830E  C532  F52D         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 34211   008312  C533  F52E         	movff	consumerEventCheckLen@needed,checkLen@needed
 34212   008316  0E06               	movlw	6
 34213   008318  6E2F               	movwf	checkLen@service^(0+1280),c
 34214   00831A  EC62  F034         	call	_checkLen	;wreg free
 34215   00831E  0012               	return		;funcret
 34216   008320                     __end_of_consumerEventCheckLen:
 34217                           	callstack 0
 34218                           
 34219 ;; *************** function _checkLen *****************
 34220 ;; Defined at:
 34221 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 34222 ;; Parameters:    Size  Location     Type
 34223 ;;  m               2   43[COMRAM] PTR struct Message
 34224 ;;		 -> poll@m(9), 
 34225 ;;  needed          1   45[COMRAM] unsigned char 
 34226 ;;  service         1   46[COMRAM] unsigned char 
 34227 ;; Auto vars:     Size  Location     Type
 34228 ;;		None
 34229 ;; Return value:  Size  Location     Type
 34230 ;;                  1    wreg      enum E23340
 34231 ;; Registers used:
 34232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34233 ;; Tracked objects:
 34234 ;;		On entry : 0/0
 34235 ;;		On exit  : 0/0
 34236 ;;		Unchanged: 0/0
 34237 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34241 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34242 ;;Total ram usage:        5 bytes
 34243 ;; Hardware stack levels used: 1
 34244 ;; Hardware stack levels required when called: 6
 34245 ;; This function calls:
 34246 ;;		_sendMessage5
 34247 ;; This function is called by:
 34248 ;;		_consumerEventCheckLen
 34249 ;;		_teachCheckLen
 34250 ;; This function uses a non-reentrant model
 34251 ;;
 34252                           
 34253                           	psect	text78
 34254   0068C4                     __ptext78:
 34255                           	callstack 0
 34256   0068C4                     _checkLen:
 34257                           	callstack 117
 34258   0068C4                     
 34259                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 34260   0068C4  C52C  F4D9         	movff	checkLen@m,fsr2l
 34261   0068C8  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34262   0068CC  502E               	movf	checkLen@needed^(0+1280),w,c
 34263   0068CE  5CDE               	subwf	postinc2,w,c
 34264   0068D0  B0D8               	btfsc	status,0,c
 34265   0068D2  EF6D  F034         	goto	u5521
 34266   0068D6  EF6F  F034         	goto	u5520
 34267   0068DA                     u5521:
 34268   0068DA  EFB0  F034         	goto	l8187
 34269   0068DE                     u5520:
 34270   0068DE                     
 34271                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 34272   0068DE  C52C  F4D9         	movff	checkLen@m,fsr2l
 34273   0068E2  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34274   0068E6  0E02               	movlw	2
 34275   0068E8  64DF               	cpfsgt	indf2,c
 34276   0068EA  EF79  F034         	goto	u5531
 34277   0068EE  EF7B  F034         	goto	u5530
 34278   0068F2                     u5531:
 34279   0068F2  EFAD  F034         	goto	l8183
 34280   0068F6                     u5530:
 34281   0068F6                     
 34282                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 34283   0068F6  EE20 F002          	lfsr	2,2
 34284   0068FA  502C               	movf	checkLen@m^(0+1280),w,c
 34285   0068FC  26D9               	addwf	fsr2l,f,c
 34286   0068FE  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34287   006900  22DA               	addwfc	fsr2h,f,c
 34288   006902  50DE               	movf	postinc2,w,c
 34289   006904  0105               	movlb	5	; () banked
 34290   006906  1990               	xorwf	(_nn+1)& (0+255),w,b
 34291   006908  A4D8               	btfss	status,2,c
 34292   00690A  EF89  F034         	goto	u5541
 34293   00690E  EF8B  F034         	goto	u5540
 34294   006912                     u5541:
 34295   006912  EFAD  F034         	goto	l8183
 34296   006916                     u5540:
 34297   006916                     
 34298                           ; BSR set to: 5
 34299   006916  EE20 F003          	lfsr	2,3
 34300   00691A  502C               	movf	checkLen@m^(0+1280),w,c
 34301   00691C  26D9               	addwf	fsr2l,f,c
 34302   00691E  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34303   006920  22DA               	addwfc	fsr2h,f,c
 34304   006922  518F               	movf	_nn& (0+255),w,b
 34305   006924  18DE               	xorwf	postinc2,w,c
 34306   006926  A4D8               	btfss	status,2,c
 34307   006928  EF98  F034         	goto	u5551
 34308   00692C  EF9A  F034         	goto	u5550
 34309   006930                     u5551:
 34310   006930  EFAD  F034         	goto	l8183
 34311   006934                     u5550:
 34312   006934                     
 34313                           ; BSR set to: 5
 34314                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 34315   006934  C590  F526         	movff	_nn+1,sendMessage5@data1
 34316   006938  C58F  F527         	movff	_nn,sendMessage5@data2
 34317   00693C  EE20 F001          	lfsr	2,1
 34318   006940  502C               	movf	checkLen@m^(0+1280),w,c
 34319   006942  26D9               	addwf	fsr2l,f,c
 34320   006944  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34321   006946  22DA               	addwfc	fsr2h,f,c
 34322   006948  50DF               	movf	indf2,w,c
 34323   00694A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 34324   00694C  C52F  F529         	movff	checkLen@service,sendMessage5@data4
 34325   006950  0E01               	movlw	1
 34326   006952  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 34327   006954  0EAF               	movlw	175
 34328   006956  ECB4  F040         	call	_sendMessage5
 34329   00695A                     l8183:
 34330                           
 34331                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 34332   00695A  0E01               	movlw	1
 34333   00695C  EFB1  F034         	goto	l2054
 34334   006960                     l8187:
 34335                           
 34336                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 34337   006960  0E00               	movlw	0
 34338   006962                     l2054:
 34339   006962  0012               	return		;funcret
 34340   006964                     __end_of_checkLen:
 34341                           	callstack 0
 34342                           
 34343 ;; *************** function _APP_processConsumedEvent *****************
 34344 ;; Defined at:
 34345 ;;		line 105 in file "../canargb_events.c"
 34346 ;; Parameters:    Size  Location     Type
 34347 ;;  tableIndex      1    wreg     unsigned char 
 34348 ;;  m               2   27[COMRAM] PTR struct Message
 34349 ;;		 -> poll@m(9), 
 34350 ;; Auto vars:     Size  Location     Type
 34351 ;;  tableIndex      1   29[COMRAM] unsigned char 
 34352 ;;  colourPixelI    1   34[COMRAM] struct PaletteIndex
 34353 ;;  end_ledno       1   33[COMRAM] unsigned char 
 34354 ;;  start_ledno     1   32[COMRAM] unsigned char 
 34355 ;;  action          1   31[COMRAM] unsigned char 
 34356 ;;  ev              1   35[COMRAM] unsigned char 
 34357 ;;  onOff           1   30[COMRAM] unsigned char 
 34358 ;; Return value:  Size  Location     Type
 34359 ;;                  1    wreg      enum E23290
 34360 ;; Registers used:
 34361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34362 ;; Tracked objects:
 34363 ;;		On entry : 0/0
 34364 ;;		On exit  : 0/0
 34365 ;;		Unchanged: 0/0
 34366 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34368 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34370 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34371 ;;Total ram usage:        9 bytes
 34372 ;; Hardware stack levels used: 1
 34373 ;; Hardware stack levels required when called: 4
 34374 ;; This function calls:
 34375 ;;		_getEVs
 34376 ;;		_updateLedRange
 34377 ;;		_updateRGB
 34378 ;; This function is called by:
 34379 ;;		_consumerProcessMessage
 34380 ;; This function uses a non-reentrant model
 34381 ;;
 34382                           
 34383                           	psect	text79
 34384   005A56                     __ptext79:
 34385                           	callstack 0
 34386   005A56                     _APP_processConsumedEvent:
 34387                           	callstack 120
 34388                           
 34389                           ;incstack = 0
 34390                           ;APP_processConsumedEvent@tableIndex stored from wreg
 34391   005A56  6E1E               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 34392   005A58                     
 34393                           ;../canargb_events.c: 106:     uint8_t ev;;../canargb_events.c: 107:     uint8_t onOff;;
      +                          ../canargb_events.c: 109:     onOff = !(m->opc & 1);
 34394   005A58  EE20 F001          	lfsr	2,1
 34395   005A5C  501C               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 34396   005A5E  26D9               	addwf	fsr2l,f,c
 34397   005A60  501D               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 34398   005A62  22DA               	addwfc	fsr2h,f,c
 34399   005A64  A0DF               	btfss	indf2,0,c
 34400   005A66  EF37  F02D         	goto	u5751
 34401   005A6A  EF3A  F02D         	goto	u5750
 34402   005A6E                     u5751:
 34403   005A6E  0E01               	movlw	1
 34404   005A70  EF3B  F02D         	goto	u5760
 34405   005A74                     u5750:
 34406   005A74  0E00               	movlw	0
 34407   005A76                     u5760:
 34408   005A76  6E1F               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 34409   005A78                     
 34410                           ;../canargb_events.c: 110:     if (getEVs(tableIndex)) {
 34411   005A78  501E               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 34412   005A7A  EC50  F035         	call	_getEVs
 34413   005A7E  0900               	iorlw	0
 34414   005A80  B4D8               	btfsc	status,2,c
 34415   005A82  EF45  F02D         	goto	u5771
 34416   005A86  EF47  F02D         	goto	u5770
 34417   005A8A                     u5771:
 34418   005A8A  EF4A  F02D         	goto	l115
 34419   005A8E                     u5770:
 34420   005A8E                     l8543:
 34421                           
 34422                           ;../canargb_events.c: 112:         return PROCESSED;
 34423   005A8E  0E01               	movlw	1
 34424   005A90  EFA5  F02D         	goto	l116
 34425   005A94                     l115:
 34426                           
 34427                           ;../canargb_events.c: 115:     for(ev=0; ev<248; ev+=4) {
 34428   005A94  6A24               	clrf	APP_processConsumedEvent@ev^(0+1280),c
 34429   005A96                     l8551:
 34430                           
 34431                           ;../canargb_events.c: 116:         uint8_t action;;../canargb_events.c: 117:         uin
      +                          t8_t start_ledno;;../canargb_events.c: 118:         uint8_t end_ledno;;../canargb_events
      +                          .c: 119:         PaletteIndex colourPixelIndexPair;;../canargb_events.c: 121:         ac
      +                          tion = evs[ev];
 34432   005A96  0E00               	movlw	low _evs
 34433   005A98  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34434   005A9A  6ED9               	movwf	fsr2l,c
 34435   005A9C  6ADA               	clrf	fsr2h,c
 34436   005A9E  0E08               	movlw	high _evs
 34437   005AA0  22DA               	addwfc	fsr2h,f,c
 34438   005AA2  50DF               	movf	indf2,w,c
 34439   005AA4  6E20               	movwf	APP_processConsumedEvent@action^(0+1280),c
 34440                           
 34441                           ;../canargb_events.c: 122:         start_ledno = evs[ev+1];
 34442   005AA6  0E01               	movlw	low (_evs+1)
 34443   005AA8  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34444   005AAA  6ED9               	movwf	fsr2l,c
 34445   005AAC  6ADA               	clrf	fsr2h,c
 34446   005AAE  0E08               	movlw	high (_evs+1)
 34447   005AB0  22DA               	addwfc	fsr2h,f,c
 34448   005AB2  50DF               	movf	indf2,w,c
 34449   005AB4  6E21               	movwf	APP_processConsumedEvent@start_ledno^(0+1280),c
 34450                           
 34451                           ;../canargb_events.c: 123:         end_ledno = evs[ev+2];
 34452   005AB6  0E02               	movlw	low (_evs+2)
 34453   005AB8  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34454   005ABA  6ED9               	movwf	fsr2l,c
 34455   005ABC  6ADA               	clrf	fsr2h,c
 34456   005ABE  0E08               	movlw	high (_evs+2)
 34457   005AC0  22DA               	addwfc	fsr2h,f,c
 34458   005AC2  50DF               	movf	indf2,w,c
 34459   005AC4  6E22               	movwf	APP_processConsumedEvent@end_ledno^(0+1280),c
 34460                           
 34461                           ;../canargb_events.c: 124:         colourPixelIndexPair.asByte = evs[ev+3];
 34462   005AC6  0E03               	movlw	low (_evs+3)
 34463   005AC8  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34464   005ACA  6ED9               	movwf	fsr2l,c
 34465   005ACC  6ADA               	clrf	fsr2h,c
 34466   005ACE  0E08               	movlw	high (_evs+3)
 34467   005AD0  22DA               	addwfc	fsr2h,f,c
 34468   005AD2  50DF               	movf	indf2,w,c
 34469   005AD4  6E23               	movwf	APP_processConsumedEvent@colourPixelIndexPair^(0+1280),c
 34470   005AD6                     
 34471                           ;../canargb_events.c: 126:         if (onOff && (action & 0x01)) {
 34472   005AD6  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34473   005AD8  B4D8               	btfsc	status,2,c
 34474   005ADA  EF71  F02D         	goto	u5781
 34475   005ADE  EF73  F02D         	goto	u5780
 34476   005AE2                     u5781:
 34477   005AE2  EF81  F02D         	goto	l8559
 34478   005AE6                     u5780:
 34479   005AE6  A020               	btfss	APP_processConsumedEvent@action^(0+1280),0,c
 34480   005AE8  EF78  F02D         	goto	u5791
 34481   005AEC  EF7A  F02D         	goto	u5790
 34482   005AF0                     u5791:
 34483   005AF0  EF81  F02D         	goto	l8559
 34484   005AF4                     u5790:
 34485   005AF4                     
 34486                           ;../canargb_events.c: 127:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34487   005AF4  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34488   005AF8  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34489   005AFC  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34490   005AFE  EC9F  F03E         	call	_updateLedRange
 34491   005B02                     l8559:
 34492                           
 34493                           ;../canargb_events.c: 129:         if (!onOff && (action & 0x02)) {
 34494   005B02  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34495   005B04  A4D8               	btfss	status,2,c
 34496   005B06  EF87  F02D         	goto	u5801
 34497   005B0A  EF89  F02D         	goto	u5800
 34498   005B0E                     u5801:
 34499   005B0E  EF97  F02D         	goto	l8565
 34500   005B12                     u5800:
 34501   005B12  A220               	btfss	APP_processConsumedEvent@action^(0+1280),1,c
 34502   005B14  EF8E  F02D         	goto	u5811
 34503   005B18  EF90  F02D         	goto	u5810
 34504   005B1C                     u5811:
 34505   005B1C  EF97  F02D         	goto	l8565
 34506   005B20                     u5810:
 34507   005B20                     
 34508                           ;../canargb_events.c: 130:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34509   005B20  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34510   005B24  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34511   005B28  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34512   005B2A  EC9F  F03E         	call	_updateLedRange
 34513   005B2E                     l8565:
 34514                           
 34515                           ;../canargb_events.c: 132:     }
 34516   005B2E  0E04               	movlw	4
 34517   005B30  2624               	addwf	APP_processConsumedEvent@ev^(0+1280),f,c
 34518   005B32  0EF7               	movlw	247
 34519   005B34  6424               	cpfsgt	APP_processConsumedEvent@ev^(0+1280),c
 34520   005B36  EF9F  F02D         	goto	u5821
 34521   005B3A  EFA1  F02D         	goto	u5820
 34522   005B3E                     u5821:
 34523   005B3E  EF4B  F02D         	goto	l8551
 34524   005B42                     u5820:
 34525   005B42                     
 34526                           ;../canargb_events.c: 133:     updateRGB();
 34527   005B42  ECB2  F041         	call	_updateRGB	;wreg free
 34528   005B46  EF47  F02D         	goto	l8543
 34529   005B4A                     l116:
 34530   005B4A  0012               	return		;funcret
 34531   005B4C                     __end_of_APP_processConsumedEvent:
 34532                           	callstack 0
 34533                           
 34534 ;; *************** function _updateRGB *****************
 34535 ;; Defined at:
 34536 ;;		line 286 in file "../canargb_leds.c"
 34537 ;; Parameters:    Size  Location     Type
 34538 ;;		None
 34539 ;; Auto vars:     Size  Location     Type
 34540 ;;		None
 34541 ;; Return value:  Size  Location     Type
 34542 ;;                  1    wreg      void 
 34543 ;; Registers used:
 34544 ;;		wreg, status,2
 34545 ;; Tracked objects:
 34546 ;;		On entry : 0/0
 34547 ;;		On exit  : 0/0
 34548 ;;		Unchanged: 0/0
 34549 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34554 ;;Total ram usage:        0 bytes
 34555 ;; Hardware stack levels used: 1
 34556 ;; Hardware stack levels required when called: 1
 34557 ;; This function calls:
 34558 ;;		Nothing
 34559 ;; This function is called by:
 34560 ;;		_APP_processConsumedEvent
 34561 ;; This function uses a non-reentrant model
 34562 ;;
 34563                           
 34564                           	psect	text80
 34565   008364                     __ptext80:
 34566                           	callstack 0
 34567   008364                     _updateRGB:
 34568                           	callstack 122
 34569   008364                     
 34570                           ;../canargb_leds.c: 287:     refreshRequired = 1;
 34571   008364  0E01               	movlw	1
 34572   008366  0105               	movlb	5	; () banked
 34573   008368  6FAB               	movwf	_refreshRequired& (0+255),b
 34574   00836A                     
 34575                           ; BSR set to: 5
 34576   00836A  0012               	return		;funcret
 34577   00836C                     __end_of_updateRGB:
 34578                           	callstack 0
 34579                           
 34580 ;; *************** function _getEVs *****************
 34581 ;; Defined at:
 34582 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 34583 ;; Parameters:    Size  Location     Type
 34584 ;;  tableIndex      1    wreg     unsigned char 
 34585 ;; Auto vars:     Size  Location     Type
 34586 ;;  tableIndex      1   25[COMRAM] unsigned char 
 34587 ;;  evIdx           1   26[COMRAM] unsigned char 
 34588 ;; Return value:  Size  Location     Type
 34589 ;;                  1    wreg      unsigned char 
 34590 ;; Registers used:
 34591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34592 ;; Tracked objects:
 34593 ;;		On entry : 0/0
 34594 ;;		On exit  : 0/0
 34595 ;;		Unchanged: 0/0
 34596 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34599 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34600 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34601 ;;Total ram usage:       15 bytes
 34602 ;; Hardware stack levels used: 1
 34603 ;; Hardware stack levels required when called: 3
 34604 ;; This function calls:
 34605 ;;		_readNVM
 34606 ;; This function is called by:
 34607 ;;		_APP_processConsumedEvent
 34608 ;; This function uses a non-reentrant model
 34609 ;;
 34610                           
 34611                           	psect	text81
 34612   006AA0                     __ptext81:
 34613                           	callstack 0
 34614   006AA0                     _getEVs:
 34615                           	callstack 120
 34616                           
 34617                           ; BSR set to: 5
 34618                           ;incstack = 0
 34619                           ;getEVs@tableIndex stored from wreg
 34620   006AA0  6E1A               	movwf	getEVs@tableIndex^(0+1280),c
 34621   006AA2                     
 34622                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 255) {
 34623   006AA2  281A               	incf	getEVs@tableIndex^(0+1280),w,c
 34624   006AA4  A4D8               	btfss	status,2,c
 34625   006AA6  EF57  F035         	goto	u5421
 34626   006AAA  EF59  F035         	goto	u5420
 34627   006AAE                     u5421:
 34628   006AAE  EF5C  F035         	goto	l1146
 34629   006AB2                     u5420:
 34630   006AB2                     
 34631                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 34632   006AB2  0E08               	movlw	8
 34633   006AB4  EF9D  F035         	goto	l1147
 34634   006AB8                     l1146:
 34635                           
 34636                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 252; evIdx++) {
 34637   006AB8  6A1B               	clrf	getEVs@evIdx^(0+1280),c
 34638   006ABA                     l8057:
 34639                           
 34640                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evIdx);
 34641   006ABA  501B               	movf	getEVs@evIdx^(0+1280),w,c
 34642   006ABC  6E0D               	movwf	??_getEVs^(0+1280),c
 34643   006ABE  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 34644   006AC0  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 34645   006AC2  501A               	movf	getEVs@tableIndex^(0+1280),w,c
 34646   006AC4  6E10               	movwf	(??_getEVs+3)^(0+1280),c
 34647   006AC6  6A11               	clrf	(??_getEVs+4)^(0+1280),c
 34648   006AC8  0E01               	movlw	1
 34649   006ACA  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34650   006ACC  C4F3 F512          	movff	prodl,??_getEVs+5
 34651   006AD0  C4F4 F513          	movff	prodh,??_getEVs+6
 34652   006AD4  0211               	mulwf	(??_getEVs+4)^(0+1280),c
 34653   006AD6  50F3               	movf	prodl,w,c
 34654   006AD8  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34655   006ADA  0E01               	movlw	1
 34656   006ADC  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34657   006ADE  50F3               	movf	prodl,w,c
 34658   006AE0  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34659   006AE2  C512  F514         	movff	??_getEVs+5,??_getEVs+7
 34660   006AE6  C513  F515         	movff	??_getEVs+6,??_getEVs+8
 34661   006AEA  6A16               	clrf	(??_getEVs+9)^(0+1280),c
 34662   006AEC  500D               	movf	??_getEVs^(0+1280),w,c
 34663   006AEE  2414               	addwf	(??_getEVs+7)^(0+1280),w,c
 34664   006AF0  6E17               	movwf	(??_getEVs+10)^(0+1280),c
 34665   006AF2  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 34666   006AF4  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 34667   006AF6  6E18               	movwf	(??_getEVs+11)^(0+1280),c
 34668   006AF8  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 34669   006AFA  2016               	addwfc	(??_getEVs+9)^(0+1280),w,c
 34670   006AFC  6E19               	movwf	(??_getEVs+12)^(0+1280),c
 34671   006AFE  0E05               	movlw	5
 34672   006B00  2417               	addwf	(??_getEVs+10)^(0+1280),w,c
 34673   006B02  6E07               	movwf	readNVM@index^(0+1280),c
 34674   006B04  0E00               	movlw	0
 34675   006B06  2018               	addwfc	(??_getEVs+11)^(0+1280),w,c
 34676   006B08  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 34677   006B0A  0E01               	movlw	1
 34678   006B0C  2019               	addwfc	(??_getEVs+12)^(0+1280),w,c
 34679   006B0E  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 34680   006B10  0E01               	movlw	1
 34681   006B12  EC89  F03A         	call	_readNVM
 34682   006B16  0E00               	movlw	low _evs
 34683   006B18  241B               	addwf	getEVs@evIdx^(0+1280),w,c
 34684   006B1A  6ED9               	movwf	fsr2l,c
 34685   006B1C  6ADA               	clrf	fsr2h,c
 34686   006B1E  0E08               	movlw	high _evs
 34687   006B20  22DA               	addwfc	fsr2h,f,c
 34688   006B22  C507  F4DF         	movff	?_readNVM,indf2
 34689   006B26                     
 34690                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 34691   006B26  2A1B               	incf	getEVs@evIdx^(0+1280),f,c
 34692   006B28  0EFB               	movlw	251
 34693   006B2A  641B               	cpfsgt	getEVs@evIdx^(0+1280),c
 34694   006B2C  EF9A  F035         	goto	u5431
 34695   006B30  EF9C  F035         	goto	u5430
 34696   006B34                     u5431:
 34697   006B34  EF5D  F035         	goto	l8057
 34698   006B38                     u5430:
 34699   006B38                     
 34700                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 34701   006B38  0E00               	movlw	0
 34702   006B3A                     l1147:
 34703   006B3A  0012               	return		;funcret
 34704   006B3C                     __end_of_getEVs:
 34705                           	callstack 0
 34706                           
 34707 ;; *************** function _canReceiveMessage *****************
 34708 ;; Defined at:
 34709 ;;		line 700 in file "../../VLCBlib_PIC/can18_can_2.c"
 34710 ;; Parameters:    Size  Location     Type
 34711 ;;  m               2   15[COMRAM] PTR struct Message
 34712 ;;		 -> poll@m(9), 
 34713 ;; Auto vars:     Size  Location     Type
 34714 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 34715 ;;		 -> RAM(16383), 
 34716 ;;  temp            2   21[COMRAM] unsigned short 
 34717 ;;  mp              2   19[COMRAM] PTR struct Message
 34718 ;;		 -> rxBuffers(72), NULL(0), 
 34719 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 34720 ;; Return value:  Size  Location     Type
 34721 ;;                  1    wreg      enum E23614
 34722 ;; Registers used:
 34723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34724 ;; Tracked objects:
 34725 ;;		On entry : 0/0
 34726 ;;		On exit  : 0/0
 34727 ;;		Unchanged: 0/0
 34728 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34730 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34732 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34733 ;;Total ram usage:       10 bytes
 34734 ;; Hardware stack levels used: 1
 34735 ;; Hardware stack levels required when called: 3
 34736 ;; This function calls:
 34737 ;;		_getNumRxBuffersInUse
 34738 ;;		_handleSelfEnumeration
 34739 ;;		_memcpy
 34740 ;;		_pop
 34741 ;; This function is called by:
 34742 ;;		_poll
 34743 ;; This function uses a non-reentrant model
 34744 ;;
 34745                           
 34746                           	psect	text82
 34747   00423E                     __ptext82:
 34748                           	callstack 0
 34749   00423E                     _canReceiveMessage:
 34750                           	callstack 122
 34751   00423E                     
 34752                           ;../../VLCBlib_PIC/can18_can_2.c: 701:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 702:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 703:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 705:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 709:     mp = pop(&rxQueue);
 34753   00423E  0EC7               	movlw	low _rxQueue
 34754   004240  6E01               	movwf	pop@q^(0+1280),c
 34755   004242  0E05               	movlw	high _rxQueue
 34756   004244  6E02               	movwf	(pop@q+1)^(0+1280),c
 34757   004246  EC52  F031         	call	_pop	;wreg free
 34758   00424A  C501  F514         	movff	?_pop,canReceiveMessage@mp
 34759   00424E  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 34760   004252                     
 34761                           ;../../VLCBlib_PIC/can18_can_2.c: 710:     if (mp != ((void*)0)) {
 34762   004252  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 34763   004254  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 34764   004256  B4D8               	btfsc	status,2,c
 34765   004258  EF30  F021         	goto	u6881
 34766   00425C  EF32  F021         	goto	u6880
 34767   004260                     u6881:
 34768   004260  EF43  F021         	goto	l691
 34769   004264                     u6880:
 34770   004264                     
 34771                           ;../../VLCBlib_PIC/can18_can_2.c: 711:         memcpy(m, mp, sizeof(Message));
 34772   004264  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 34773   004268  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 34774   00426C  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 34775   004270  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 34776   004274  0E00               	movlw	0
 34777   004276  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 34778   004278  0E09               	movlw	9
 34779   00427A  6E05               	movwf	memcpy@n^(0+1280),c
 34780   00427C  EC9C  F03D         	call	_memcpy	;wreg free
 34781   004280                     l9719:
 34782                           
 34783                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         return RECEIVED;
 34784   004280  0E01               	movlw	1
 34785   004282  EF19  F022         	goto	l692
 34786   004286                     l691:
 34787                           
 34788                           ;../../VLCBlib_PIC/can18_can_2.c: 714:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 34789   004286  0101               	movlb	1	; () banked
 34790   004288  B178               	btfsc	120,0,b	;volatile
 34791   00428A  EF49  F021         	goto	u6891
 34792   00428E  EF4B  F021         	goto	u6890
 34793   004292                     u6891:
 34794   004292  EF4E  F021         	goto	l9729
 34795   004296                     u6890:
 34796   004296                     l9725:
 34797                           
 34798                           ; BSR set to: 1
 34799                           ;../../VLCBlib_PIC/can18_can_2.c: 716:             return NOT_RECEIVED;
 34800   004296  0E00               	movlw	0
 34801   004298  EF19  F022         	goto	l692
 34802   00429C                     l9729:
 34803                           
 34804                           ; BSR set to: 1
 34805                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         temp = getNumRxBuffersInUse();
 34806   00429C  EC4F  F03A         	call	_getNumRxBuffersInUse	;wreg free
 34807   0042A0  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 34808   0042A2  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 34809   0042A4  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 34810   0042A6  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 34811   0042A8                     
 34812                           ;../../VLCBlib_PIC/can18_can_2.c: 721:         if (temp > canDiagnostics[0x12].asUint) {
 34813   0042A8  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 34814   0042AA  0106               	movlb	6	; () banked
 34815   0042AC  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 34816   0042AE  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 34817   0042B0  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 34818   0042B2  B0D8               	btfsc	status,0,c
 34819   0042B4  EF5E  F021         	goto	u6901
 34820   0042B8  EF60  F021         	goto	u6900
 34821   0042BC                     u6901:
 34822   0042BC  EF64  F021         	goto	l9735
 34823   0042C0                     u6900:
 34824   0042C0                     
 34825                           ; BSR set to: 6
 34826                           ;../../VLCBlib_PIC/can18_can_2.c: 722:             canDiagnostics[0x12].asUint = temp;
 34827   0042C0  C516  F6B2         	movff	canReceiveMessage@temp,_canDiagnostics+36
 34828   0042C4  C517  F6B3         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 34829   0042C8                     l9735:
 34830                           
 34831                           ; BSR set to: 6
 34832                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 34833   0042C8  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 34834   0042CC  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 34835   0042D0                     
 34836                           ; BSR set to: 6
 34837                           ;../../VLCBlib_PIC/can18_can_2.c: 727:         incomingCanId = rxFifoObj[0] & 0x7F;
 34838   0042D0  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 34839   0042D4  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 34840   0042D8  50DF               	movf	indf2,w,c
 34841   0042DA  0B7F               	andlw	127
 34842   0042DC  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 34843   0042DE                     
 34844                           ; BSR set to: 6
 34845                           ;../../VLCBlib_PIC/can18_can_2.c: 728:         handleSelfEnumeration(incomingCanId);
 34846   0042DE  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 34847   0042E0  ECC2  F032         	call	_handleSelfEnumeration
 34848   0042E4                     
 34849                           ;../../VLCBlib_PIC/can18_can_2.c: 731:         canDiagnostics[0x09].asUint++;
 34850   0042E4  0106               	movlb	6	; () banked
 34851   0042E6  4BA0               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 34852   0042E8  2BA1               	incf	(_canDiagnostics+19)& (0+255),f,b
 34853   0042EA                     
 34854                           ; BSR set to: 6
 34855                           ;../../VLCBlib_PIC/can18_can_2.c: 734:         if (rxFifoObj[4] & 0x20) {
 34856   0042EA  EE20 F004          	lfsr	2,4
 34857   0042EE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34858   0042F0  26D9               	addwf	fsr2l,f,c
 34859   0042F2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34860   0042F4  22DA               	addwfc	fsr2h,f,c
 34861   0042F6  AADF               	btfss	indf2,5,c
 34862   0042F8  EF80  F021         	goto	u6911
 34863   0042FC  EF82  F021         	goto	u6910
 34864   004300                     u6911:
 34865   004300  EF88  F021         	goto	l9753
 34866   004304                     u6910:
 34867   004304                     
 34868                           ; BSR set to: 6
 34869                           ;../../VLCBlib_PIC/can18_can_2.c: 736:             C1FIFOCON1H |= (0x2 | 0x1);
 34870   004304  0E03               	movlw	3
 34871   004306  0101               	movlb	1	; () banked
 34872   004308  135D               	iorwf	93,f,b	;volatile
 34873   00430A                     
 34874                           ; BSR set to: 1
 34875                           ;../../VLCBlib_PIC/can18_can_2.c: 737:             C1FIFOCON3Hbits.UINC = 1;
 34876   00430A  8175               	bsf	117,0,b	;volatile
 34877   00430C  EF4B  F021         	goto	l9725
 34878   004310                     l9753:
 34879                           
 34880                           ; BSR set to: 6
 34881                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->len = (rxFifoObj[4] & 0x0F);
 34882   004310  EE20 F004          	lfsr	2,4
 34883   004314  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34884   004316  26D9               	addwf	fsr2l,f,c
 34885   004318  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34886   00431A  22DA               	addwfc	fsr2h,f,c
 34887   00431C  50DF               	movf	indf2,w,c
 34888   00431E  0B0F               	andlw	15
 34889   004320  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34890   004324  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34891   004328  6EDF               	movwf	indf2,c
 34892   00432A                     
 34893                           ; BSR set to: 6
 34894                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         if (m->len == 0) {
 34895   00432A  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34896   00432E  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34897   004332  50DF               	movf	indf2,w,c
 34898   004334  A4D8               	btfss	status,2,c
 34899   004336  EF9F  F021         	goto	u6921
 34900   00433A  EFA1  F021         	goto	u6920
 34901   00433E                     u6921:
 34902   00433E  EFA5  F021         	goto	l9763
 34903   004342                     u6920:
 34904   004342                     
 34905                           ; BSR set to: 6
 34906                           ;../../VLCBlib_PIC/can18_can_2.c: 743:             C1FIFOCON3Hbits.UINC = 1;
 34907   004342  0101               	movlb	1	; () banked
 34908   004344  8175               	bsf	117,0,b	;volatile
 34909   004346  EF4B  F021         	goto	l9725
 34910   00434A                     l9763:
 34911                           
 34912                           ; BSR set to: 6
 34913                           ;../../VLCBlib_PIC/can18_can_2.c: 746:         m->opc = rxFifoObj[8];
 34914   00434A  EE20 F008          	lfsr	2,8
 34915   00434E  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34916   004350  26D9               	addwf	fsr2l,f,c
 34917   004352  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34918   004354  22DA               	addwfc	fsr2h,f,c
 34919   004356  EE10 F001          	lfsr	1,1
 34920   00435A  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34921   00435C  26E1               	addwf	fsr1l,f,c
 34922   00435E  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34923   004360  22E2               	addwfc	fsr1h,f,c
 34924   004362  C4DF F4E7          	movff	indf2,indf1
 34925                           
 34926                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         m->bytes[0] = rxFifoObj[9];
 34927   004366  EE20 F009          	lfsr	2,9
 34928   00436A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34929   00436C  26D9               	addwf	fsr2l,f,c
 34930   00436E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34931   004370  22DA               	addwfc	fsr2h,f,c
 34932   004372  EE10 F002          	lfsr	1,2
 34933   004376  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34934   004378  26E1               	addwf	fsr1l,f,c
 34935   00437A  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34936   00437C  22E2               	addwfc	fsr1h,f,c
 34937   00437E  C4DF F4E7          	movff	indf2,indf1
 34938                           
 34939                           ;../../VLCBlib_PIC/can18_can_2.c: 748:         m->bytes[1] = rxFifoObj[10];
 34940   004382  EE20 F00A          	lfsr	2,10
 34941   004386  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34942   004388  26D9               	addwf	fsr2l,f,c
 34943   00438A  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34944   00438C  22DA               	addwfc	fsr2h,f,c
 34945   00438E  EE10 F003          	lfsr	1,3
 34946   004392  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34947   004394  26E1               	addwf	fsr1l,f,c
 34948   004396  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34949   004398  22E2               	addwfc	fsr1h,f,c
 34950   00439A  C4DF F4E7          	movff	indf2,indf1
 34951                           
 34952                           ;../../VLCBlib_PIC/can18_can_2.c: 749:         m->bytes[2] = rxFifoObj[11];
 34953   00439E  EE20 F00B          	lfsr	2,11
 34954   0043A2  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34955   0043A4  26D9               	addwf	fsr2l,f,c
 34956   0043A6  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34957   0043A8  22DA               	addwfc	fsr2h,f,c
 34958   0043AA  EE10 F004          	lfsr	1,4
 34959   0043AE  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34960   0043B0  26E1               	addwf	fsr1l,f,c
 34961   0043B2  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34962   0043B4  22E2               	addwfc	fsr1h,f,c
 34963   0043B6  C4DF F4E7          	movff	indf2,indf1
 34964                           
 34965                           ;../../VLCBlib_PIC/can18_can_2.c: 750:         m->bytes[3] = rxFifoObj[12];
 34966   0043BA  EE20 F00C          	lfsr	2,12
 34967   0043BE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34968   0043C0  26D9               	addwf	fsr2l,f,c
 34969   0043C2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34970   0043C4  22DA               	addwfc	fsr2h,f,c
 34971   0043C6  EE10 F005          	lfsr	1,5
 34972   0043CA  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34973   0043CC  26E1               	addwf	fsr1l,f,c
 34974   0043CE  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34975   0043D0  22E2               	addwfc	fsr1h,f,c
 34976   0043D2  C4DF F4E7          	movff	indf2,indf1
 34977                           
 34978                           ;../../VLCBlib_PIC/can18_can_2.c: 751:         m->bytes[4] = rxFifoObj[13];
 34979   0043D6  EE20 F00D          	lfsr	2,13
 34980   0043DA  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34981   0043DC  26D9               	addwf	fsr2l,f,c
 34982   0043DE  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34983   0043E0  22DA               	addwfc	fsr2h,f,c
 34984   0043E2  EE10 F006          	lfsr	1,6
 34985   0043E6  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34986   0043E8  26E1               	addwf	fsr1l,f,c
 34987   0043EA  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34988   0043EC  22E2               	addwfc	fsr1h,f,c
 34989   0043EE  C4DF F4E7          	movff	indf2,indf1
 34990                           
 34991                           ;../../VLCBlib_PIC/can18_can_2.c: 752:         m->bytes[5] = rxFifoObj[14];
 34992   0043F2  EE20 F00E          	lfsr	2,14
 34993   0043F6  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34994   0043F8  26D9               	addwf	fsr2l,f,c
 34995   0043FA  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34996   0043FC  22DA               	addwfc	fsr2h,f,c
 34997   0043FE  EE10 F007          	lfsr	1,7
 34998   004402  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34999   004404  26E1               	addwf	fsr1l,f,c
 35000   004406  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 35001   004408  22E2               	addwfc	fsr1h,f,c
 35002   00440A  C4DF F4E7          	movff	indf2,indf1
 35003                           
 35004                           ;../../VLCBlib_PIC/can18_can_2.c: 753:         m->bytes[6] = rxFifoObj[15];
 35005   00440E  EE20 F00F          	lfsr	2,15
 35006   004412  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 35007   004414  26D9               	addwf	fsr2l,f,c
 35008   004416  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 35009   004418  22DA               	addwfc	fsr2h,f,c
 35010   00441A  EE10 F008          	lfsr	1,8
 35011   00441E  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 35012   004420  26E1               	addwf	fsr1l,f,c
 35013   004422  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 35014   004424  22E2               	addwfc	fsr1h,f,c
 35015   004426  C4DF F4E7          	movff	indf2,indf1
 35016   00442A                     
 35017                           ; BSR set to: 6
 35018                           ;../../VLCBlib_PIC/can18_can_2.c: 755:         C1FIFOCON3Hbits.UINC = 1;
 35019   00442A  0101               	movlb	1	; () banked
 35020   00442C  8175               	bsf	117,0,b	;volatile
 35021   00442E  EF40  F021         	goto	l9719
 35022   004432                     l692:
 35023   004432  0012               	return		;funcret
 35024   004434                     __end_of_canReceiveMessage:
 35025                           	callstack 0
 35026                           
 35027 ;; *************** function _pop *****************
 35028 ;; Defined at:
 35029 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 35030 ;; Parameters:    Size  Location     Type
 35031 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 35032 ;;		 -> rxQueue(5), 
 35033 ;; Auto vars:     Size  Location     Type
 35034 ;;  ret             2    7[COMRAM] PTR struct Message
 35035 ;;		 -> rxBuffers(72), 
 35036 ;; Return value:  Size  Location     Type
 35037 ;;                  2    0[COMRAM] PTR struct Message
 35038 ;; Registers used:
 35039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35040 ;; Tracked objects:
 35041 ;;		On entry : 0/0
 35042 ;;		On exit  : 0/0
 35043 ;;		Unchanged: 0/0
 35044 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35047 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35048 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35049 ;;Total ram usage:        9 bytes
 35050 ;; Hardware stack levels used: 1
 35051 ;; Hardware stack levels required when called: 1
 35052 ;; This function calls:
 35053 ;;		Nothing
 35054 ;; This function is called by:
 35055 ;;		_canReceiveMessage
 35056 ;; This function uses a non-reentrant model
 35057 ;;
 35058                           
 35059                           	psect	text83
 35060   0062A4                     __ptext83:
 35061                           	callstack 0
 35062   0062A4                     _pop:
 35063                           	callstack 123
 35064   0062A4                     
 35065                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 35066   0062A4  EE20 F002          	lfsr	2,2
 35067   0062A8  5001               	movf	pop@q^(0+1280),w,c
 35068   0062AA  26D9               	addwf	fsr2l,f,c
 35069   0062AC  5002               	movf	(pop@q+1)^(0+1280),w,c
 35070   0062AE  22DA               	addwfc	fsr2h,f,c
 35071   0062B0  EE10 F003          	lfsr	1,3
 35072   0062B4  5001               	movf	pop@q^(0+1280),w,c
 35073   0062B6  26E1               	addwf	fsr1l,f,c
 35074   0062B8  5002               	movf	(pop@q+1)^(0+1280),w,c
 35075   0062BA  22E2               	addwfc	fsr1h,f,c
 35076   0062BC  50DE               	movf	postinc2,w,c
 35077   0062BE  18E6               	xorwf	postinc1,w,c
 35078   0062C0  A4D8               	btfss	status,2,c
 35079   0062C2  EF65  F031         	goto	u5991
 35080   0062C6  EF67  F031         	goto	u5990
 35081   0062CA                     u5991:
 35082   0062CA  EF6D  F031         	goto	l8699
 35083   0062CE                     u5990:
 35084   0062CE                     
 35085                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 35086   0062CE  0E00               	movlw	0
 35087   0062D0  6E01               	movwf	?_pop^(0+1280),c
 35088   0062D2  0E00               	movlw	0
 35089   0062D4  6E02               	movwf	(?_pop+1)^(0+1280),c
 35090   0062D6  EFB0  F031         	goto	l1193
 35091   0062DA                     l8699:
 35092                           
 35093                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 35094   0062DA  EE20 F002          	lfsr	2,2
 35095   0062DE  5001               	movf	pop@q^(0+1280),w,c
 35096   0062E0  26D9               	addwf	fsr2l,f,c
 35097   0062E2  5002               	movf	(pop@q+1)^(0+1280),w,c
 35098   0062E4  22DA               	addwfc	fsr2h,f,c
 35099   0062E6  50DF               	movf	indf2,w,c
 35100   0062E8  6E03               	movwf	??_pop^(0+1280),c
 35101   0062EA  5003               	movf	??_pop^(0+1280),w,c
 35102   0062EC  0D09               	mullw	9
 35103   0062EE  C4F3 F504          	movff	prodl,??_pop+1
 35104   0062F2  C4F4 F505          	movff	prodh,??_pop+2
 35105   0062F6  C501  F4D9         	movff	pop@q,fsr2l
 35106   0062FA  C502  F4DA         	movff	pop@q+1,fsr2h
 35107   0062FE  C4DE F506          	movff	postinc2,??_pop+3
 35108   006302  C4DD F507          	movff	postdec2,??_pop+4
 35109   006306  5004               	movf	(??_pop+1)^(0+1280),w,c
 35110   006308  2406               	addwf	(??_pop+3)^(0+1280),w,c
 35111   00630A  6E08               	movwf	pop@ret^(0+1280),c
 35112   00630C  5005               	movf	(??_pop+2)^(0+1280),w,c
 35113   00630E  2007               	addwfc	(??_pop+4)^(0+1280),w,c
 35114   006310  6E09               	movwf	(pop@ret+1)^(0+1280),c
 35115   006312  EE20 F002          	lfsr	2,2
 35116   006316  5001               	movf	pop@q^(0+1280),w,c
 35117   006318  26D9               	addwf	fsr2l,f,c
 35118   00631A  5002               	movf	(pop@q+1)^(0+1280),w,c
 35119   00631C  22DA               	addwfc	fsr2h,f,c
 35120   00631E  2ADF               	incf	indf2,f,c
 35121   006320                     
 35122                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 35123   006320  EE20 F004          	lfsr	2,4
 35124   006324  5001               	movf	pop@q^(0+1280),w,c
 35125   006326  26D9               	addwf	fsr2l,f,c
 35126   006328  5002               	movf	(pop@q+1)^(0+1280),w,c
 35127   00632A  22DA               	addwfc	fsr2h,f,c
 35128   00632C  EE10 F002          	lfsr	1,2
 35129   006330  5001               	movf	pop@q^(0+1280),w,c
 35130   006332  26E1               	addwf	fsr1l,f,c
 35131   006334  5002               	movf	(pop@q+1)^(0+1280),w,c
 35132   006336  22E2               	addwfc	fsr1h,f,c
 35133   006338  50DE               	movf	postinc2,w,c
 35134   00633A  5CE6               	subwf	postinc1,w,c
 35135   00633C  A0D8               	btfss	status,0,c
 35136   00633E  EFA3  F031         	goto	u6001
 35137   006342  EFA5  F031         	goto	u6000
 35138   006346                     u6001:
 35139   006346  EFAC  F031         	goto	l8707
 35140   00634A                     u6000:
 35141   00634A  EE20 F002          	lfsr	2,2
 35142   00634E  5001               	movf	pop@q^(0+1280),w,c
 35143   006350  26D9               	addwf	fsr2l,f,c
 35144   006352  5002               	movf	(pop@q+1)^(0+1280),w,c
 35145   006354  22DA               	addwfc	fsr2h,f,c
 35146   006356  6ADF               	clrf	indf2,c
 35147   006358                     l8707:
 35148                           
 35149                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 35150   006358  C508  F501         	movff	pop@ret,?_pop
 35151   00635C  C509  F502         	movff	pop@ret+1,?_pop+1
 35152   006360                     l1193:
 35153   006360  0012               	return		;funcret
 35154   006362                     __end_of_pop:
 35155                           	callstack 0
 35156                           
 35157 ;; *************** function _memcpy *****************
 35158 ;; Defined at:
 35159 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 35160 ;; Parameters:    Size  Location     Type
 35161 ;;  d1              2    0[COMRAM] PTR void 
 35162 ;;		 -> poll@m(9), 
 35163 ;;  s1              2    2[COMRAM] PTR const void 
 35164 ;;		 -> rxBuffers(72), NULL(0), 
 35165 ;;  n               2    4[COMRAM] unsigned int 
 35166 ;; Auto vars:     Size  Location     Type
 35167 ;;  s               2    8[COMRAM] PTR const unsigned char 
 35168 ;;		 -> rxBuffers(72), NULL(0), 
 35169 ;;  d               2    6[COMRAM] PTR unsigned char 
 35170 ;;		 -> poll@m(9), 
 35171 ;;  tmp             1   10[COMRAM] unsigned char 
 35172 ;; Return value:  Size  Location     Type
 35173 ;;                  2    0[COMRAM] PTR void 
 35174 ;; Registers used:
 35175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35176 ;; Tracked objects:
 35177 ;;		On entry : 0/0
 35178 ;;		On exit  : 0/0
 35179 ;;		Unchanged: 0/0
 35180 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35181 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35182 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35184 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35185 ;;Total ram usage:       11 bytes
 35186 ;; Hardware stack levels used: 1
 35187 ;; Hardware stack levels required when called: 1
 35188 ;; This function calls:
 35189 ;;		Nothing
 35190 ;; This function is called by:
 35191 ;;		_canReceiveMessage
 35192 ;; This function uses a non-reentrant model
 35193 ;;
 35194                           
 35195                           	psect	text84
 35196   007B38                     __ptext84:
 35197                           	callstack 0
 35198   007B38                     _memcpy:
 35199                           	callstack 123
 35200   007B38  C503  F509         	movff	memcpy@s1,memcpy@s
 35201   007B3C  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 35202   007B40  C501  F507         	movff	memcpy@d1,memcpy@d
 35203   007B44  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 35204   007B48  EFB6  F03D         	goto	l8721
 35205   007B4C                     l8713:
 35206   007B4C  C509  F4D9         	movff	memcpy@s,fsr2l
 35207   007B50  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 35208   007B54  50DF               	movf	indf2,w,c
 35209   007B56  6E0B               	movwf	memcpy@tmp^(0+1280),c
 35210   007B58  4A09               	infsnz	memcpy@s^(0+1280),f,c
 35211   007B5A  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 35212   007B5C  C507  F4D9         	movff	memcpy@d,fsr2l
 35213   007B60  C508  F4DA         	movff	memcpy@d+1,fsr2h
 35214   007B64  C50B  F4DF         	movff	memcpy@tmp,indf2
 35215   007B68  4A07               	infsnz	memcpy@d^(0+1280),f,c
 35216   007B6A  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 35217   007B6C                     l8721:
 35218   007B6C  0605               	decf	memcpy@n^(0+1280),f,c
 35219   007B6E  A0D8               	btfss	status,0,c
 35220   007B70  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 35221   007B72  2805               	incf	memcpy@n^(0+1280),w,c
 35222   007B74  E106               	bnz	u6011
 35223   007B76  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 35224   007B78  A4D8               	btfss	status,2,c
 35225   007B7A  EFC1  F03D         	goto	u6011
 35226   007B7E  EFC3  F03D         	goto	u6010
 35227   007B82                     u6011:
 35228   007B82  EFA6  F03D         	goto	l8713
 35229   007B86                     u6010:
 35230   007B86  0012               	return		;funcret
 35231   007B88                     __end_of_memcpy:
 35232                           	callstack 0
 35233                           
 35234 ;; *************** function _handleSelfEnumeration *****************
 35235 ;; Defined at:
 35236 ;;		line 800 in file "../../VLCBlib_PIC/can18_can_2.c"
 35237 ;; Parameters:    Size  Location     Type
 35238 ;;  receivedCanI    1    wreg     unsigned char 
 35239 ;; Auto vars:     Size  Location     Type
 35240 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 35241 ;; Return value:  Size  Location     Type
 35242 ;;                  1    wreg      void 
 35243 ;; Registers used:
 35244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35245 ;; Tracked objects:
 35246 ;;		On entry : 0/0
 35247 ;;		On exit  : 0/0
 35248 ;;		Unchanged: 0/0
 35249 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35254 ;;Total ram usage:        5 bytes
 35255 ;; Hardware stack levels used: 1
 35256 ;; Hardware stack levels required when called: 2
 35257 ;; This function calls:
 35258 ;;		_tickGet
 35259 ;; This function is called by:
 35260 ;;		_canReceiveMessage
 35261 ;; This function uses a non-reentrant model
 35262 ;;
 35263                           
 35264                           	psect	text85
 35265   006584                     __ptext85:
 35266                           	callstack 0
 35267   006584                     _handleSelfEnumeration:
 35268                           	callstack 122
 35269                           
 35270                           ;incstack = 0
 35271                           ;handleSelfEnumeration@receivedCanId stored from wreg
 35272   006584  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 35273   006586                     
 35274                           ;../../VLCBlib_PIC/can18_can_2.c: 802:     switch (enumerationState) {
 35275   006586  EFFC  F032         	goto	l8737
 35276   00658A                     l8725:
 35277                           
 35278                           ; BSR set to: 5
 35279                           ;../../VLCBlib_PIC/can18_can_2.c: 805:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 35280   00658A  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 35281   00658E  0E07               	movlw	7
 35282   006590  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 35283   006592  0E01               	movlw	1
 35284   006594  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 35285   006596  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 35286   006598  EFD0  F032         	goto	u6024
 35287   00659C                     u6025:
 35288   00659C  90D8               	bcf	status,0,c
 35289   00659E  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 35290   0065A0                     u6024:
 35291   0065A0  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 35292   0065A2  EFCE  F032         	goto	u6025
 35293   0065A6  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35294   0065A8  46E8               	rlncf	wreg,f,c
 35295   0065AA  0B1F               	andlw	31
 35296   0065AC  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 35297   0065AE  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 35298   0065B0  0E32               	movlw	low _enumerationResults
 35299   0065B2  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 35300   0065B4  6ED9               	movwf	fsr2l,c
 35301   0065B6  0E06               	movlw	high _enumerationResults
 35302   0065B8  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 35303   0065BA  6EDA               	movwf	fsr2h,c
 35304   0065BC  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35305   0065BE  12DF               	iorwf	indf2,f,c
 35306                           
 35307                           ;../../VLCBlib_PIC/can18_can_2.c: 806:             break;
 35308   0065C0  EF16  F033         	goto	l716
 35309   0065C4                     l8727:
 35310                           
 35311                           ; BSR set to: 5
 35312                           ;../../VLCBlib_PIC/can18_can_2.c: 808:             if (receivedCanId == canId) {
 35313   0065C4  51A8               	movf	_canId& (0+255),w,b
 35314   0065C6  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35315   0065C8  A4D8               	btfss	status,2,c
 35316   0065CA  EFE9  F032         	goto	u6031
 35317   0065CE  EFEB  F032         	goto	u6030
 35318   0065D2                     u6031:
 35319   0065D2  EF16  F033         	goto	l716
 35320   0065D6                     u6030:
 35321   0065D6                     
 35322                           ; BSR set to: 5
 35323                           ;../../VLCBlib_PIC/can18_can_2.c: 811:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 35324   0065D6  0E01               	movlw	1
 35325   0065D8  6FA5               	movwf	_enumerationState& (0+255),b
 35326   0065DA                     
 35327                           ; BSR set to: 5
 35328                           ;../../VLCBlib_PIC/can18_can_2.c: 813:                 canDiagnostics[0x0E].asUint++;
 35329   0065DA  0106               	movlb	6	; () banked
 35330   0065DC  4BAA               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 35331   0065DE  2BAB               	incf	(_canDiagnostics+29)& (0+255),f,b
 35332   0065E0                     
 35333                           ; BSR set to: 6
 35334                           ;../../VLCBlib_PIC/can18_can_2.c: 815:                 enumerationStartTime.val = tickGe
      +                          t();
 35335   0065E0  EC14  F03A         	call	_tickGet	;wreg free
 35336   0065E4  C501  F574         	movff	?_tickGet,_enumerationStartTime
 35337   0065E8  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 35338   0065EC  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 35339   0065F0  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 35340   0065F4  EF16  F033         	goto	l716
 35341   0065F8                     l8737:
 35342   0065F8  0105               	movlb	5	; () banked
 35343   0065FA  51A5               	movf	_enumerationState& (0+255),w,b
 35344   0065FC  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 35345   0065FE  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 35346                           
 35347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35348                           ; Switch size 1, requested type "simple"
 35349                           ; Number of cases is 1, Range of values is 0 to 0
 35350                           ; switch strategies available:
 35351                           ; Name         Instructions Cycles
 35352                           ; simple_byte            4     3 (average)
 35353                           ;	Chosen strategy is simple_byte
 35354   006600  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35355   006602  0A00               	xorlw	0	; case 0
 35356   006604  B4D8               	btfsc	status,2,c
 35357   006606  EF07  F033         	goto	l11795
 35358   00660A  EF16  F033         	goto	l716
 35359   00660E                     l11795:
 35360                           
 35361                           ; BSR set to: 5
 35362                           ; Switch size 1, requested type "simple"
 35363                           ; Number of cases is 3, Range of values is 0 to 3
 35364                           ; switch strategies available:
 35365                           ; Name         Instructions Cycles
 35366                           ; simple_byte           10     6 (average)
 35367                           ;	Chosen strategy is simple_byte
 35368   00660E  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 35369   006610  0A00               	xorlw	0	; case 0
 35370   006612  B4D8               	btfsc	status,2,c
 35371   006614  EFE2  F032         	goto	l8727
 35372   006618  0A02               	xorlw	2	; case 2
 35373   00661A  B4D8               	btfsc	status,2,c
 35374   00661C  EFC5  F032         	goto	l8725
 35375   006620  0A01               	xorlw	1	; case 3
 35376   006622  B4D8               	btfsc	status,2,c
 35377   006624  EFC5  F032         	goto	l8725
 35378   006628  EF16  F033         	goto	l716
 35379   00662C                     l716:
 35380   00662C  0012               	return		;funcret
 35381   00662E                     __end_of_handleSelfEnumeration:
 35382                           	callstack 0
 35383                           
 35384 ;; *************** function _sendMessage5 *****************
 35385 ;; Defined at:
 35386 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 35387 ;; Parameters:    Size  Location     Type
 35388 ;;  opc             1    wreg     enum E22928
 35389 ;;  data1           1   37[COMRAM] unsigned char 
 35390 ;;  data2           1   38[COMRAM] unsigned char 
 35391 ;;  data3           1   39[COMRAM] unsigned char 
 35392 ;;  data4           1   40[COMRAM] unsigned char 
 35393 ;;  data5           1   41[COMRAM] unsigned char 
 35394 ;; Auto vars:     Size  Location     Type
 35395 ;;  opc             1   42[COMRAM] enum E22928
 35396 ;; Return value:  Size  Location     Type
 35397 ;;                  1    wreg      void 
 35398 ;; Registers used:
 35399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35400 ;; Tracked objects:
 35401 ;;		On entry : 0/0
 35402 ;;		On exit  : 0/0
 35403 ;;		Unchanged: 0/0
 35404 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35405 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35409 ;;Total ram usage:        6 bytes
 35410 ;; Hardware stack levels used: 1
 35411 ;; Hardware stack levels required when called: 5
 35412 ;; This function calls:
 35413 ;;		_sendMessage
 35414 ;; This function is called by:
 35415 ;;		_canProcessMessage
 35416 ;;		_teachProcessMessage
 35417 ;;		_teachCheckLen
 35418 ;;		_doNenrd
 35419 ;;		_doNnclr
 35420 ;;		_doEvlrn
 35421 ;;		_doReval
 35422 ;;		_doEvuln
 35423 ;;		_doReqev
 35424 ;;		_reqevCallback
 35425 ;;		_mnsProcessMessage
 35426 ;;		_mnsPoll
 35427 ;;		_mnsTRserviceDiscoveryCallback
 35428 ;;		_nvProcessMessage
 35429 ;;		_checkLen
 35430 ;; This function uses a non-reentrant model
 35431 ;;
 35432                           
 35433                           	psect	text86
 35434   008168                     __ptext86:
 35435                           	callstack 0
 35436   008168                     _sendMessage5:
 35437                           	callstack 118
 35438                           
 35439                           ;incstack = 0
 35440                           ;sendMessage5@opc stored from wreg
 35441   008168  6E2B               	movwf	sendMessage5@opc^(0+1280),c
 35442   00816A                     
 35443                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 35444   00816A  0E06               	movlw	6
 35445   00816C  6E1B               	movwf	sendMessage@len^(0+1280),c
 35446   00816E  C526  F51C         	movff	sendMessage5@data1,sendMessage@data1
 35447   008172  C527  F51D         	movff	sendMessage5@data2,sendMessage@data2
 35448   008176  C528  F51E         	movff	sendMessage5@data3,sendMessage@data3
 35449   00817A  C529  F51F         	movff	sendMessage5@data4,sendMessage@data4
 35450   00817E  C52A  F520         	movff	sendMessage5@data5,sendMessage@data5
 35451   008182  0E00               	movlw	0
 35452   008184  6E21               	movwf	sendMessage@data6^(0+1280),c
 35453   008186  0E00               	movlw	0
 35454   008188  6E22               	movwf	sendMessage@data7^(0+1280),c
 35455   00818A  502B               	movf	sendMessage5@opc^(0+1280),w,c
 35456   00818C  EC7E  F036         	call	_sendMessage
 35457   008190  0012               	return		;funcret
 35458   008192                     __end_of_sendMessage5:
 35459                           	callstack 0
 35460                           
 35461 ;; *************** function _sendMessage *****************
 35462 ;; Defined at:
 35463 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 35464 ;; Parameters:    Size  Location     Type
 35465 ;;  opc             1    wreg     enum E22928
 35466 ;;  len             1   26[COMRAM] unsigned char 
 35467 ;;  data1           1   27[COMRAM] unsigned char 
 35468 ;;  data2           1   28[COMRAM] unsigned char 
 35469 ;;  data3           1   29[COMRAM] unsigned char 
 35470 ;;  data4           1   30[COMRAM] unsigned char 
 35471 ;;  data5           1   31[COMRAM] unsigned char 
 35472 ;;  data6           1   32[COMRAM] unsigned char 
 35473 ;;  data7           1   33[COMRAM] unsigned char 
 35474 ;; Auto vars:     Size  Location     Type
 35475 ;;  opc             1   36[COMRAM] enum E22928
 35476 ;; Return value:  Size  Location     Type
 35477 ;;                  1    wreg      void 
 35478 ;; Registers used:
 35479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35480 ;; Tracked objects:
 35481 ;;		On entry : 0/0
 35482 ;;		On exit  : 0/0
 35483 ;;		Unchanged: 0/0
 35484 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35485 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35488 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35489 ;;Total ram usage:       11 bytes
 35490 ;; Hardware stack levels used: 1
 35491 ;; Hardware stack levels required when called: 4
 35492 ;; This function calls:
 35493 ;;		_canSendMessage
 35494 ;; This function is called by:
 35495 ;;		_sendMessage2
 35496 ;;		_sendMessage3
 35497 ;;		_sendMessage4
 35498 ;;		_sendMessage5
 35499 ;;		_sendMessage6
 35500 ;;		_sendMessage7
 35501 ;;		_sendMessage0
 35502 ;;		_sendMessage1
 35503 ;; This function uses a non-reentrant model
 35504 ;;
 35505                           
 35506                           	psect	text87
 35507   006CFC                     __ptext87:
 35508                           	callstack 0
 35509   006CFC                     _sendMessage:
 35510                           	callstack 118
 35511                           
 35512                           ;incstack = 0
 35513                           ;sendMessage@opc stored from wreg
 35514   006CFC  6E25               	movwf	sendMessage@opc^(0+1280),c
 35515   006CFE                     
 35516                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 35517   006CFE  C525  F6B5         	movff	sendMessage@opc,_tmpMessage+1
 35518   006D02                     
 35519                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 35520   006D02  C51B  F6B4         	movff	sendMessage@len,_tmpMessage
 35521   006D06                     
 35522                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 35523   006D06  C51C  F6B6         	movff	sendMessage@data1,_tmpMessage+2
 35524   006D0A                     
 35525                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 35526   006D0A  C51D  F6B7         	movff	sendMessage@data2,_tmpMessage+3
 35527   006D0E                     
 35528                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 35529   006D0E  C51E  F6B8         	movff	sendMessage@data3,_tmpMessage+4
 35530   006D12                     
 35531                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 35532   006D12  C51F  F6B9         	movff	sendMessage@data4,_tmpMessage+5
 35533   006D16                     
 35534                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 35535   006D16  C520  F6BA         	movff	sendMessage@data5,_tmpMessage+6
 35536   006D1A                     
 35537                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 35538   006D1A  C521  F6BB         	movff	sendMessage@data6,_tmpMessage+7
 35539   006D1E                     
 35540                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 35541   006D1E  C522  F6BC         	movff	sendMessage@data7,_tmpMessage+8
 35542   006D22                     
 35543                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 35544   006D22  0105               	movlb	5	; () banked
 35545   006D24  5191               	movf	_transport& (0+255),w,b
 35546   006D26  1192               	iorwf	(_transport+1)& (0+255),w,b
 35547   006D28  B4D8               	btfsc	status,2,c
 35548   006D2A  EF99  F036         	goto	u5101
 35549   006D2E  EF9B  F036         	goto	u5100
 35550   006D32                     u5101:
 35551   006D32  EFC6  F036         	goto	l2088
 35552   006D36                     u5100:
 35553   006D36                     
 35554                           ; BSR set to: 5
 35555                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 35556   006D36  C591  F4F6         	movff	_transport,tblptrl
 35557   006D3A  C592  F4F7         	movff	_transport+1,tblptrh
 35558   006D3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35559   006D3E  6AF8               	clrf	tblptru,c
 35560   006D40                     	endif
 35561   006D40                     	if	0	;tblptru may be non-zero
 35562   006D40                     	endif
 35563   006D40  0009               	tblrd		*+
 35564   006D42  50F5               	movf	tablat,w,c
 35565   006D44  0009               	tblrd		*+
 35566   006D46  10F5               	iorwf	tablat,w,c
 35567   006D48  B4D8               	btfsc	status,2,c
 35568   006D4A  EFA9  F036         	goto	u5111
 35569   006D4E  EFAB  F036         	goto	u5110
 35570   006D52                     u5111:
 35571   006D52  EFC6  F036         	goto	l2088
 35572   006D56                     u5110:
 35573   006D56                     
 35574                           ; BSR set to: 5
 35575                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 35576   006D56  0EB4               	movlw	low _tmpMessage
 35577   006D58  6E0D               	movwf	canSendMessage@mp^(0+1280),c
 35578   006D5A  0E06               	movlw	high _tmpMessage
 35579   006D5C  6E0E               	movwf	(canSendMessage@mp+1)^(0+1280),c
 35580   006D5E  C591  F4F6         	movff	_transport,tblptrl
 35581   006D62  C592  F4F7         	movff	_transport+1,tblptrh
 35582   006D66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35583   006D66  6AF8               	clrf	tblptru,c
 35584   006D68                     	endif
 35585   006D68                     	if	0	;tblptru may be non-zero
 35586   006D68                     	endif
 35587   006D68  0009               	tblrd		*+
 35588   006D6A  C4F5 F523          	movff	tablat,??_sendMessage
 35589   006D6E  0009               	tblrd		*+
 35590   006D70  C4F5 F524          	movff	tablat,??_sendMessage+1
 35591   006D74  D802               	call	u5128
 35592   006D76  EFC6  F036         	goto	u5129
 35593   006D7A                     u5128:
 35594   006D7A  0005               	push	
 35595   006D7C  6EFA               	movwf	pclath,c
 35596   006D7E  5023               	movf	??_sendMessage^(0+1280),w,c
 35597   006D80  6EFD               	movwf	tosl,c
 35598   006D82  5024               	movf	(??_sendMessage+1)^(0+1280),w,c
 35599   006D84  6EFE               	movwf	tosh,c
 35600   006D86  6AFF               	clrf	tosu,c
 35601   006D88  50FA               	movf	pclath,w,c
 35602   006D8A  0012               	return		;indir
 35603   006D8C                     u5129:
 35604   006D8C                     l2088:
 35605   006D8C  0012               	return		;funcret
 35606   006D8E                     __end_of_sendMessage:
 35607                           	callstack 0
 35608                           
 35609 ;; *************** function _canSendMessage *****************
 35610 ;; Defined at:
 35611 ;;		line 570 in file "../../VLCBlib_PIC/can18_can_2.c"
 35612 ;; Parameters:    Size  Location     Type
 35613 ;;  mp              2   12[COMRAM] PTR struct Message
 35614 ;;		 -> tmpMessage(9), 
 35615 ;; Auto vars:     Size  Location     Type
 35616 ;;  txFifoObj       2   24[COMRAM] PTR unsigned char 
 35617 ;;		 -> RAM(16383), 
 35618 ;;  m               2   22[COMRAM] PTR struct Message
 35619 ;;		 -> rxBuffers(72), NULL(0), 
 35620 ;;  temp            2   20[COMRAM] unsigned short 
 35621 ;;  i               1    0        unsigned char 
 35622 ;; Return value:  Size  Location     Type
 35623 ;;                  1    wreg      enum E23618
 35624 ;; Registers used:
 35625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35626 ;; Tracked objects:
 35627 ;;		On entry : 0/0
 35628 ;;		On exit  : 0/0
 35629 ;;		Unchanged: 0/0
 35630 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35632 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35633 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35634 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35635 ;;Total ram usage:       14 bytes
 35636 ;; Hardware stack levels used: 1
 35637 ;; Hardware stack levels required when called: 3
 35638 ;; This function calls:
 35639 ;;		_getNextWriteMessage
 35640 ;;		_getNumRxBuffersInUse
 35641 ;;		_getNumTxBuffersInUse
 35642 ;;		_have
 35643 ;;		_isEvent
 35644 ;;		_startEnumeration
 35645 ;;		_updateModuleErrorStatus
 35646 ;; This function is called by:
 35647 ;;		_sendMessage
 35648 ;; This function uses a non-reentrant model
 35649 ;;
 35650                           
 35651                           	psect	text88
 35652   002A9E                     __ptext88:
 35653                           	callstack 0
 35654   002A9E                     _canSendMessage:
 35655                           	callstack 118
 35656   002A9E                     
 35657                           ;../../VLCBlib_PIC/can18_can_2.c: 571:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          72:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 574:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 577:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 581
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 35658   002A9E  EE20 F001          	lfsr	2,1
 35659   002AA2  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35660   002AA4  26D9               	addwf	fsr2l,f,c
 35661   002AA6  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35662   002AA8  22DA               	addwfc	fsr2h,f,c
 35663   002AAA  50DF               	movf	indf2,w,c
 35664   002AAC  EC38  F03F         	call	_isEvent
 35665   002AB0  0900               	iorlw	0
 35666   002AB2  B4D8               	btfsc	status,2,c
 35667   002AB4  EF5E  F015         	goto	u4871
 35668   002AB8  EF60  F015         	goto	u4870
 35669   002ABC                     u4871:
 35670   002ABC  EF15  F016         	goto	l668
 35671   002AC0                     u4870:
 35672   002AC0                     
 35673                           ;../../VLCBlib_PIC/can18_can_2.c: 582:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 35674   002AC0  0E08               	movlw	8
 35675   002AC2  EC54  F037         	call	_have
 35676   002AC6  0900               	iorlw	0
 35677   002AC8  B4D8               	btfsc	status,2,c
 35678   002ACA  EF69  F015         	goto	u4881
 35679   002ACE  EF6B  F015         	goto	u4880
 35680   002AD2                     u4881:
 35681   002AD2  EF15  F016         	goto	l668
 35682   002AD6                     u4880:
 35683   002AD6                     
 35684                           ;../../VLCBlib_PIC/can18_can_2.c: 584:             m = getNextWriteMessage(&rxQueue);
 35685   002AD6  0EC7               	movlw	low _rxQueue
 35686   002AD8  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 35687   002ADA  0E05               	movlw	high _rxQueue
 35688   002ADC  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 35689   002ADE  ECAF  F02C         	call	_getNextWriteMessage	;wreg free
 35690   002AE2  C501  F517         	movff	?_getNextWriteMessage,canSendMessage@m
 35691   002AE6  C502  F518         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 35692   002AEA                     
 35693                           ;../../VLCBlib_PIC/can18_can_2.c: 585:             if (m == ((void*)0)) {
 35694   002AEA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35695   002AEC  1018               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 35696   002AEE  A4D8               	btfss	status,2,c
 35697   002AF0  EF7C  F015         	goto	u4891
 35698   002AF4  EF7E  F015         	goto	u4890
 35699   002AF8                     u4891:
 35700   002AF8  EF85  F015         	goto	l7599
 35701   002AFC                     u4890:
 35702   002AFC                     
 35703                           ;../../VLCBlib_PIC/can18_can_2.c: 587:                 canDiagnostics[0x08].asUint++;
 35704   002AFC  0106               	movlb	6	; () banked
 35705   002AFE  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 35706   002B00  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 35707   002B02                     
 35708                           ; BSR set to: 6
 35709                           ;../../VLCBlib_PIC/can18_can_2.c: 588:                 updateModuleErrorStatus();
 35710   002B02  EC90  F041         	call	_updateModuleErrorStatus	;wreg free
 35711                           
 35712                           ;../../VLCBlib_PIC/can18_can_2.c: 590:             } else {
 35713   002B06  EFFF  F015         	goto	l7617
 35714   002B0A                     l7599:
 35715                           
 35716                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->opc = mp->opc;
 35717   002B0A  EE20 F001          	lfsr	2,1
 35718   002B0E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35719   002B10  26D9               	addwf	fsr2l,f,c
 35720   002B12  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35721   002B14  22DA               	addwfc	fsr2h,f,c
 35722   002B16  EE10 F001          	lfsr	1,1
 35723   002B1A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35724   002B1C  26E1               	addwf	fsr1l,f,c
 35725   002B1E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35726   002B20  22E2               	addwfc	fsr1h,f,c
 35727   002B22  C4DF F4E7          	movff	indf2,indf1
 35728   002B26                     
 35729                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->len = mp->len;
 35730   002B26  C50D  F4D9         	movff	canSendMessage@mp,fsr2l
 35731   002B2A  C50E  F4DA         	movff	canSendMessage@mp+1,fsr2h
 35732   002B2E  C517  F4E1         	movff	canSendMessage@m,fsr1l
 35733   002B32  C518  F4E2         	movff	canSendMessage@m+1,fsr1h
 35734   002B36  C4DF F4E7          	movff	indf2,indf1
 35735   002B3A                     
 35736                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[0] = mp->bytes[0];
 35737   002B3A  EE20 F002          	lfsr	2,2
 35738   002B3E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35739   002B40  26D9               	addwf	fsr2l,f,c
 35740   002B42  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35741   002B44  22DA               	addwfc	fsr2h,f,c
 35742   002B46  EE10 F002          	lfsr	1,2
 35743   002B4A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35744   002B4C  26E1               	addwf	fsr1l,f,c
 35745   002B4E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35746   002B50  22E2               	addwfc	fsr1h,f,c
 35747   002B52  C4DF F4E7          	movff	indf2,indf1
 35748   002B56                     
 35749                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[1] = mp->bytes[1];
 35750   002B56  EE20 F003          	lfsr	2,3
 35751   002B5A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35752   002B5C  26D9               	addwf	fsr2l,f,c
 35753   002B5E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35754   002B60  22DA               	addwfc	fsr2h,f,c
 35755   002B62  EE10 F003          	lfsr	1,3
 35756   002B66  5017               	movf	canSendMessage@m^(0+1280),w,c
 35757   002B68  26E1               	addwf	fsr1l,f,c
 35758   002B6A  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35759   002B6C  22E2               	addwfc	fsr1h,f,c
 35760   002B6E  C4DF F4E7          	movff	indf2,indf1
 35761   002B72                     
 35762                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[2] = mp->bytes[2];
 35763   002B72  EE20 F004          	lfsr	2,4
 35764   002B76  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35765   002B78  26D9               	addwf	fsr2l,f,c
 35766   002B7A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35767   002B7C  22DA               	addwfc	fsr2h,f,c
 35768   002B7E  EE10 F004          	lfsr	1,4
 35769   002B82  5017               	movf	canSendMessage@m^(0+1280),w,c
 35770   002B84  26E1               	addwf	fsr1l,f,c
 35771   002B86  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35772   002B88  22E2               	addwfc	fsr1h,f,c
 35773   002B8A  C4DF F4E7          	movff	indf2,indf1
 35774   002B8E                     
 35775                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[3] = mp->bytes[3];
 35776   002B8E  EE20 F005          	lfsr	2,5
 35777   002B92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35778   002B94  26D9               	addwf	fsr2l,f,c
 35779   002B96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35780   002B98  22DA               	addwfc	fsr2h,f,c
 35781   002B9A  EE10 F005          	lfsr	1,5
 35782   002B9E  5017               	movf	canSendMessage@m^(0+1280),w,c
 35783   002BA0  26E1               	addwf	fsr1l,f,c
 35784   002BA2  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35785   002BA4  22E2               	addwfc	fsr1h,f,c
 35786   002BA6  C4DF F4E7          	movff	indf2,indf1
 35787   002BAA                     
 35788                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[4] = mp->bytes[4];
 35789   002BAA  EE20 F006          	lfsr	2,6
 35790   002BAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35791   002BB0  26D9               	addwf	fsr2l,f,c
 35792   002BB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35793   002BB4  22DA               	addwfc	fsr2h,f,c
 35794   002BB6  EE10 F006          	lfsr	1,6
 35795   002BBA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35796   002BBC  26E1               	addwf	fsr1l,f,c
 35797   002BBE  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35798   002BC0  22E2               	addwfc	fsr1h,f,c
 35799   002BC2  C4DF F4E7          	movff	indf2,indf1
 35800   002BC6                     
 35801                           ;../../VLCBlib_PIC/can18_can_2.c: 599:                 m->bytes[5] = mp->bytes[5];
 35802   002BC6  EE20 F007          	lfsr	2,7
 35803   002BCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35804   002BCC  26D9               	addwf	fsr2l,f,c
 35805   002BCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35806   002BD0  22DA               	addwfc	fsr2h,f,c
 35807   002BD2  EE10 F007          	lfsr	1,7
 35808   002BD6  5017               	movf	canSendMessage@m^(0+1280),w,c
 35809   002BD8  26E1               	addwf	fsr1l,f,c
 35810   002BDA  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35811   002BDC  22E2               	addwfc	fsr1h,f,c
 35812   002BDE  C4DF F4E7          	movff	indf2,indf1
 35813   002BE2                     
 35814                           ;../../VLCBlib_PIC/can18_can_2.c: 600:                 m->bytes[6] = mp->bytes[6];
 35815   002BE2  EE20 F008          	lfsr	2,8
 35816   002BE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35817   002BE8  26D9               	addwf	fsr2l,f,c
 35818   002BEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35819   002BEC  22DA               	addwfc	fsr2h,f,c
 35820   002BEE  EE10 F008          	lfsr	1,8
 35821   002BF2  5017               	movf	canSendMessage@m^(0+1280),w,c
 35822   002BF4  26E1               	addwf	fsr1l,f,c
 35823   002BF6  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35824   002BF8  22E2               	addwfc	fsr1h,f,c
 35825   002BFA  C4DF F4E7          	movff	indf2,indf1
 35826   002BFE                     l7617:
 35827                           
 35828                           ;../../VLCBlib_PIC/can18_can_2.c: 603:             temp = getNumRxBuffersInUse();
 35829   002BFE  EC4F  F03A         	call	_getNumRxBuffersInUse	;wreg free
 35830   002C02  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35831   002C04  500F               	movf	??_canSendMessage^(0+1280),w,c
 35832   002C06  6E15               	movwf	canSendMessage@temp^(0+1280),c
 35833   002C08  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 35834   002C0A                     
 35835                           ;../../VLCBlib_PIC/can18_can_2.c: 604:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 35836   002C0A  5015               	movf	canSendMessage@temp^(0+1280),w,c
 35837   002C0C  0106               	movlb	6	; () banked
 35838   002C0E  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 35839   002C10  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 35840   002C12  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 35841   002C14  B0D8               	btfsc	status,0,c
 35842   002C16  EF0F  F016         	goto	u4901
 35843   002C1A  EF11  F016         	goto	u4900
 35844   002C1E                     u4901:
 35845   002C1E  EF15  F016         	goto	l668
 35846   002C22                     u4900:
 35847   002C22                     
 35848                           ; BSR set to: 6
 35849                           ;../../VLCBlib_PIC/can18_can_2.c: 605:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 35850   002C22  C515  F6B2         	movff	canSendMessage@temp,_canDiagnostics+36
 35851   002C26  C516  F6B3         	movff	canSendMessage@temp+1,_canDiagnostics+37
 35852   002C2A                     l668:
 35853                           
 35854                           ;../../VLCBlib_PIC/can18_can_2.c: 612:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 35855   002C2A  0101               	movlb	1	; () banked
 35856   002C2C  B16C               	btfsc	108,0,b	;volatile
 35857   002C2E  EF1B  F016         	goto	u4911
 35858   002C32  EF1D  F016         	goto	u4910
 35859   002C36                     u4911:
 35860   002C36  EF24  F016         	goto	l673
 35861   002C3A                     u4910:
 35862   002C3A                     
 35863                           ; BSR set to: 1
 35864                           ;../../VLCBlib_PIC/can18_can_2.c: 614:         canDiagnostics[0x05].asUint++;
 35865   002C3A  0106               	movlb	6	; () banked
 35866   002C3C  4B98               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 35867   002C3E  2B99               	incf	(_canDiagnostics+11)& (0+255),f,b
 35868   002C40                     
 35869                           ; BSR set to: 6
 35870                           ;../../VLCBlib_PIC/can18_can_2.c: 615:         updateModuleErrorStatus();
 35871   002C40  EC90  F041         	call	_updateModuleErrorStatus	;wreg free
 35872   002C44  EF62  F017         	goto	l674
 35873   002C48                     l673:
 35874                           
 35875                           ; BSR set to: 1
 35876                           ;../../VLCBlib_PIC/can18_can_2.c: 623:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 35877   002C48  AD6C               	btfss	108,6,b	;volatile
 35878   002C4A  EF29  F016         	goto	u4921
 35879   002C4E  EF2B  F016         	goto	u4920
 35880   002C52                     u4921:
 35881   002C52  EF2E  F016         	goto	l7631
 35882   002C56                     u4920:
 35883   002C56                     
 35884                           ; BSR set to: 1
 35885                           ;../../VLCBlib_PIC/can18_can_2.c: 624:         canDiagnostics[0x0C].asUint++;
 35886   002C56  0106               	movlb	6	; () banked
 35887   002C58  4BA6               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 35888   002C5A  2BA7               	incf	(_canDiagnostics+25)& (0+255),f,b
 35889   002C5C                     l7631:
 35890                           
 35891                           ;../../VLCBlib_PIC/can18_can_2.c: 629:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 35892   002C5C  0105               	movlb	5	; () banked
 35893   002C5E  51A8               	movf	_canId& (0+255),w,b
 35894   002C60  A4D8               	btfss	status,2,c
 35895   002C62  EF35  F016         	goto	u4931
 35896   002C66  EF37  F016         	goto	u4930
 35897   002C6A                     u4931:
 35898   002C6A  EF43  F016         	goto	l7637
 35899   002C6E                     u4930:
 35900   002C6E                     
 35901                           ; BSR set to: 5
 35902   002C6E  51A5               	movf	_enumerationState& (0+255),w,b
 35903   002C70  A4D8               	btfss	status,2,c
 35904   002C72  EF3D  F016         	goto	u4941
 35905   002C76  EF3F  F016         	goto	u4940
 35906   002C7A                     u4941:
 35907   002C7A  EF43  F016         	goto	l7637
 35908   002C7E                     u4940:
 35909   002C7E                     
 35910                           ; BSR set to: 5
 35911                           ;../../VLCBlib_PIC/can18_can_2.c: 630:         enumerationState = ENUMERATION_REQUIRED;
 35912   002C7E  0E01               	movlw	1
 35913   002C80  6FA5               	movwf	_enumerationState& (0+255),b
 35914                           
 35915                           ;../../VLCBlib_PIC/can18_can_2.c: 631:         canId = 1;
 35916   002C82  0E01               	movlw	1
 35917   002C84  6FA8               	movwf	_canId& (0+255),b
 35918   002C86                     l7637:
 35919                           
 35920                           ; BSR set to: 5
 35921                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj = (uint8_t*) C1FIFOUA2;
 35922   002C86  C170 F519          	movff	368,canSendMessage@txFifoObj	;volatile
 35923   002C8A  C171 F51A          	movff	369,canSendMessage@txFifoObj+1	;volatile
 35924   002C8E                     
 35925                           ; BSR set to: 5
 35926                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 35927   002C8E  C5A8  F50F         	movff	_canId,??_canSendMessage
 35928   002C92  0E7F               	movlw	127
 35929   002C94  160F               	andwf	??_canSendMessage^(0+1280),f,c
 35930   002C96  EE20 F001          	lfsr	2,1
 35931   002C9A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35932   002C9C  26D9               	addwf	fsr2l,f,c
 35933   002C9E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35934   002CA0  22DA               	addwfc	fsr2h,f,c
 35935   002CA2  50DF               	movf	indf2,w,c
 35936   002CA4  6E10               	movwf	(??_canSendMessage+1)^(0+1280),c
 35937   002CA6  6A11               	clrf	(??_canSendMessage+2)^(0+1280),c
 35938   002CA8  0E59               	movlw	low _priorities
 35939   002CAA  2410               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 35940   002CAC  6EF6               	movwf	tblptrl,c
 35941   002CAE  0EFE               	movlw	high _priorities
 35942   002CB0  2011               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 35943   002CB2  6EF7               	movwf	tblptrh,c
 35944   002CB4                     	if	1	;There are 3 active tblptr bytes
 35945   002CB4  6AF8               	clrf	tblptru,c
 35946   002CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 35947   002CB8  22F8               	addwfc	tblptru,f,c
 35948   002CBA                     	endif
 35949   002CBA  0008               	tblrd		*
 35950   002CBC  50F5               	movf	tablat,w,c
 35951   002CBE  6E12               	movwf	(??_canSendMessage+3)^(0+1280),c
 35952   002CC0  6A13               	clrf	(??_canSendMessage+4)^(0+1280),c
 35953   002CC2  0EA0               	movlw	low _canPri
 35954   002CC4  2412               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 35955   002CC6  6EF6               	movwf	tblptrl,c
 35956   002CC8  0EFF               	movlw	high _canPri
 35957   002CCA  2013               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 35958   002CCC  6EF7               	movwf	tblptrh,c
 35959   002CCE                     	if	1	;There are 3 active tblptr bytes
 35960   002CCE  6AF8               	clrf	tblptru,c
 35961   002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 35962   002CD2  22F8               	addwfc	tblptru,f,c
 35963   002CD4                     	endif
 35964   002CD4  0008               	tblrd		*
 35965   002CD6  C4F5 F514          	movff	tablat,??_canSendMessage+5
 35966   002CDA  0E01               	movlw	1
 35967   002CDC  1614               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 35968   002CDE  0E00               	movlw	0
 35969   002CE0  B014               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 35970   002CE2  0E80               	movlw	128
 35971   002CE4  6E14               	movwf	(??_canSendMessage+5)^(0+1280),c
 35972   002CE6  5014               	movf	(??_canSendMessage+5)^(0+1280),w,c
 35973   002CE8  100F               	iorwf	??_canSendMessage^(0+1280),w,c
 35974   002CEA  C519  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 35975   002CEE  C51A  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 35976   002CF2  6EDF               	movwf	indf2,c
 35977   002CF4                     
 35978                           ; BSR set to: 5
 35979                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 35980   002CF4  EE20 F001          	lfsr	2,1
 35981   002CF8  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35982   002CFA  26D9               	addwf	fsr2l,f,c
 35983   002CFC  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35984   002CFE  22DA               	addwfc	fsr2h,f,c
 35985   002D00  EE10 F001          	lfsr	1,1
 35986   002D04  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35987   002D06  26E1               	addwf	fsr1l,f,c
 35988   002D08  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35989   002D0A  22E2               	addwfc	fsr1h,f,c
 35990   002D0C  50E7               	movf	indf1,w,c
 35991   002D0E  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35992   002D10  6A10               	clrf	(??_canSendMessage+1)^(0+1280),c
 35993   002D12  0E59               	movlw	low _priorities
 35994   002D14  240F               	addwf	??_canSendMessage^(0+1280),w,c
 35995   002D16  6EF6               	movwf	tblptrl,c
 35996   002D18  0EFE               	movlw	high _priorities
 35997   002D1A  2010               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 35998   002D1C  6EF7               	movwf	tblptrh,c
 35999   002D1E                     	if	1	;There are 3 active tblptr bytes
 36000   002D1E  6AF8               	clrf	tblptru,c
 36001   002D20  0E00               	movlw	low (__mediumconst shr (0+16))
 36002   002D22  22F8               	addwfc	tblptru,f,c
 36003   002D24                     	endif
 36004   002D24  0008               	tblrd		*
 36005   002D26  50F5               	movf	tablat,w,c
 36006   002D28  6E11               	movwf	(??_canSendMessage+2)^(0+1280),c
 36007   002D2A  6A12               	clrf	(??_canSendMessage+3)^(0+1280),c
 36008   002D2C  0EA0               	movlw	low _canPri
 36009   002D2E  2411               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 36010   002D30  6EF6               	movwf	tblptrl,c
 36011   002D32  0EFF               	movlw	high _canPri
 36012   002D34  2012               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 36013   002D36  6EF7               	movwf	tblptrh,c
 36014   002D38                     	if	1	;There are 3 active tblptr bytes
 36015   002D38  6AF8               	clrf	tblptru,c
 36016   002D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 36017   002D3C  22F8               	addwfc	tblptru,f,c
 36018   002D3E                     	endif
 36019   002D3E  0008               	tblrd		*
 36020   002D40  C4F5 F513          	movff	tablat,??_canSendMessage+4
 36021   002D44  90D8               	bcf	status,0,c
 36022   002D46  3013               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 36023   002D48  6EDF               	movwf	indf2,c
 36024   002D4A                     
 36025                           ; BSR set to: 5
 36026                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[4] = (mp->len&0xF);
 36027   002D4A  EE20 F004          	lfsr	2,4
 36028   002D4E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36029   002D50  26D9               	addwf	fsr2l,f,c
 36030   002D52  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36031   002D54  22DA               	addwfc	fsr2h,f,c
 36032   002D56  C50D  F4E1         	movff	canSendMessage@mp,fsr1l
 36033   002D5A  C50E  F4E2         	movff	canSendMessage@mp+1,fsr1h
 36034   002D5E  50E7               	movf	indf1,w,c
 36035   002D60  0B0F               	andlw	15
 36036   002D62  6EDF               	movwf	indf2,c
 36037   002D64                     
 36038                           ; BSR set to: 5
 36039                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[5] = 0;
 36040   002D64  EE20 F005          	lfsr	2,5
 36041   002D68  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36042   002D6A  26D9               	addwf	fsr2l,f,c
 36043   002D6C  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36044   002D6E  22DA               	addwfc	fsr2h,f,c
 36045   002D70  6ADF               	clrf	indf2,c
 36046   002D72                     
 36047                           ; BSR set to: 5
 36048                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[6] = 0;
 36049   002D72  EE20 F006          	lfsr	2,6
 36050   002D76  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36051   002D78  26D9               	addwf	fsr2l,f,c
 36052   002D7A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36053   002D7C  22DA               	addwfc	fsr2h,f,c
 36054   002D7E  6ADF               	clrf	indf2,c
 36055   002D80                     
 36056                           ; BSR set to: 5
 36057                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[7] = 0;
 36058   002D80  EE20 F007          	lfsr	2,7
 36059   002D84  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36060   002D86  26D9               	addwf	fsr2l,f,c
 36061   002D88  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36062   002D8A  22DA               	addwfc	fsr2h,f,c
 36063   002D8C  6ADF               	clrf	indf2,c
 36064   002D8E                     
 36065                           ; BSR set to: 5
 36066                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[8] = (uint8_t)(mp->opc);
 36067   002D8E  EE20 F001          	lfsr	2,1
 36068   002D92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36069   002D94  26D9               	addwf	fsr2l,f,c
 36070   002D96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36071   002D98  22DA               	addwfc	fsr2h,f,c
 36072   002D9A  EE10 F008          	lfsr	1,8
 36073   002D9E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36074   002DA0  26E1               	addwf	fsr1l,f,c
 36075   002DA2  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36076   002DA4  22E2               	addwfc	fsr1h,f,c
 36077   002DA6  C4DF F4E7          	movff	indf2,indf1
 36078   002DAA                     
 36079                           ; BSR set to: 5
 36080                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[9] = mp->bytes[0];
 36081   002DAA  EE20 F002          	lfsr	2,2
 36082   002DAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36083   002DB0  26D9               	addwf	fsr2l,f,c
 36084   002DB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36085   002DB4  22DA               	addwfc	fsr2h,f,c
 36086   002DB6  EE10 F009          	lfsr	1,9
 36087   002DBA  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36088   002DBC  26E1               	addwf	fsr1l,f,c
 36089   002DBE  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36090   002DC0  22E2               	addwfc	fsr1h,f,c
 36091   002DC2  C4DF F4E7          	movff	indf2,indf1
 36092   002DC6                     
 36093                           ; BSR set to: 5
 36094                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[10] = mp->bytes[1];
 36095   002DC6  EE20 F003          	lfsr	2,3
 36096   002DCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36097   002DCC  26D9               	addwf	fsr2l,f,c
 36098   002DCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36099   002DD0  22DA               	addwfc	fsr2h,f,c
 36100   002DD2  EE10 F00A          	lfsr	1,10
 36101   002DD6  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36102   002DD8  26E1               	addwf	fsr1l,f,c
 36103   002DDA  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36104   002DDC  22E2               	addwfc	fsr1h,f,c
 36105   002DDE  C4DF F4E7          	movff	indf2,indf1
 36106   002DE2                     
 36107                           ; BSR set to: 5
 36108                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[11] = mp->bytes[2];
 36109   002DE2  EE20 F004          	lfsr	2,4
 36110   002DE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36111   002DE8  26D9               	addwf	fsr2l,f,c
 36112   002DEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36113   002DEC  22DA               	addwfc	fsr2h,f,c
 36114   002DEE  EE10 F00B          	lfsr	1,11
 36115   002DF2  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36116   002DF4  26E1               	addwf	fsr1l,f,c
 36117   002DF6  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36118   002DF8  22E2               	addwfc	fsr1h,f,c
 36119   002DFA  C4DF F4E7          	movff	indf2,indf1
 36120   002DFE                     
 36121                           ; BSR set to: 5
 36122                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[12] = mp->bytes[3];
 36123   002DFE  EE20 F005          	lfsr	2,5
 36124   002E02  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36125   002E04  26D9               	addwf	fsr2l,f,c
 36126   002E06  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36127   002E08  22DA               	addwfc	fsr2h,f,c
 36128   002E0A  EE10 F00C          	lfsr	1,12
 36129   002E0E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36130   002E10  26E1               	addwf	fsr1l,f,c
 36131   002E12  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36132   002E14  22E2               	addwfc	fsr1h,f,c
 36133   002E16  C4DF F4E7          	movff	indf2,indf1
 36134   002E1A                     
 36135                           ; BSR set to: 5
 36136                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[13] = mp->bytes[4];
 36137   002E1A  EE20 F006          	lfsr	2,6
 36138   002E1E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36139   002E20  26D9               	addwf	fsr2l,f,c
 36140   002E22  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36141   002E24  22DA               	addwfc	fsr2h,f,c
 36142   002E26  EE10 F00D          	lfsr	1,13
 36143   002E2A  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36144   002E2C  26E1               	addwf	fsr1l,f,c
 36145   002E2E  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36146   002E30  22E2               	addwfc	fsr1h,f,c
 36147   002E32  C4DF F4E7          	movff	indf2,indf1
 36148   002E36                     
 36149                           ; BSR set to: 5
 36150                           ;../../VLCBlib_PIC/can18_can_2.c: 648:     txFifoObj[14] = mp->bytes[5];
 36151   002E36  EE20 F007          	lfsr	2,7
 36152   002E3A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36153   002E3C  26D9               	addwf	fsr2l,f,c
 36154   002E3E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36155   002E40  22DA               	addwfc	fsr2h,f,c
 36156   002E42  EE10 F00E          	lfsr	1,14
 36157   002E46  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36158   002E48  26E1               	addwf	fsr1l,f,c
 36159   002E4A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36160   002E4C  22E2               	addwfc	fsr1h,f,c
 36161   002E4E  C4DF F4E7          	movff	indf2,indf1
 36162   002E52                     
 36163                           ; BSR set to: 5
 36164                           ;../../VLCBlib_PIC/can18_can_2.c: 649:     txFifoObj[15] = mp->bytes[6];
 36165   002E52  EE20 F008          	lfsr	2,8
 36166   002E56  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36167   002E58  26D9               	addwf	fsr2l,f,c
 36168   002E5A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36169   002E5C  22DA               	addwfc	fsr2h,f,c
 36170   002E5E  EE10 F00F          	lfsr	1,15
 36171   002E62  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36172   002E64  26E1               	addwf	fsr1l,f,c
 36173   002E66  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36174   002E68  22E2               	addwfc	fsr1h,f,c
 36175   002E6A  C4DF F4E7          	movff	indf2,indf1
 36176   002E6E                     
 36177                           ; BSR set to: 5
 36178                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     canDiagnostics[0x06].asUint++;
 36179   002E6E  0106               	movlb	6	; () banked
 36180   002E70  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 36181   002E72  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 36182   002E74                     
 36183                           ; BSR set to: 6
 36184                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     C1FIFOCON2H |= 0x1;
 36185   002E74  0101               	movlb	1	; () banked
 36186   002E76  8169               	bsf	105,0,b	;volatile
 36187   002E78                     
 36188                           ; BSR set to: 1
 36189                           ;../../VLCBlib_PIC/can18_can_2.c: 656:     temp = getNumTxBuffersInUse();
 36190   002E78  EC23  F039         	call	_getNumTxBuffersInUse	;wreg free
 36191   002E7C  6E0F               	movwf	??_canSendMessage^(0+1280),c
 36192   002E7E  500F               	movf	??_canSendMessage^(0+1280),w,c
 36193   002E80  6E15               	movwf	canSendMessage@temp^(0+1280),c
 36194   002E82  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 36195   002E84                     
 36196                           ;../../VLCBlib_PIC/can18_can_2.c: 657:     if (temp > canDiagnostics[0x11].asUint) {
 36197   002E84  5015               	movf	canSendMessage@temp^(0+1280),w,c
 36198   002E86  0106               	movlb	6	; () banked
 36199   002E88  5DB0               	subwf	(_canDiagnostics+34)& (0+255),w,b
 36200   002E8A  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 36201   002E8C  59B1               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 36202   002E8E  B0D8               	btfsc	status,0,c
 36203   002E90  EF4C  F017         	goto	u4951
 36204   002E94  EF4E  F017         	goto	u4950
 36205   002E98                     u4951:
 36206   002E98  EF52  F017         	goto	l7677
 36207   002E9C                     u4950:
 36208   002E9C                     
 36209                           ; BSR set to: 6
 36210                           ;../../VLCBlib_PIC/can18_can_2.c: 658:         canDiagnostics[0x11].asUint = temp;
 36211   002E9C  C515  F6B0         	movff	canSendMessage@temp,_canDiagnostics+34
 36212   002EA0  C516  F6B1         	movff	canSendMessage@temp+1,_canDiagnostics+35
 36213   002EA4                     l7677:
 36214                           
 36215                           ; BSR set to: 6
 36216                           ;../../VLCBlib_PIC/can18_can_2.c: 661:     if (canId == 0) {
 36217   002EA4  0105               	movlb	5	; () banked
 36218   002EA6  51A8               	movf	_canId& (0+255),w,b
 36219   002EA8  A4D8               	btfss	status,2,c
 36220   002EAA  EF59  F017         	goto	u4961
 36221   002EAE  EF5B  F017         	goto	u4960
 36222   002EB2                     u4961:
 36223   002EB2  EF60  F017         	goto	l7681
 36224   002EB6                     u4960:
 36225   002EB6                     
 36226                           ; BSR set to: 5
 36227                           ;../../VLCBlib_PIC/can18_can_2.c: 663:         startEnumeration(1);
 36228   002EB6  0E01               	movlw	1
 36229   002EB8  ECFA  F03A         	call	_startEnumeration
 36230                           
 36231                           ;../../VLCBlib_PIC/can18_can_2.c: 664:     } else {
 36232   002EBC  EF62  F017         	goto	l674
 36233   002EC0                     l7681:
 36234                           
 36235                           ; BSR set to: 5
 36236                           ;../../VLCBlib_PIC/can18_can_2.c: 666:         C1FIFOCON2H |= 0x2;
 36237   002EC0  0101               	movlb	1	; () banked
 36238   002EC2  8369               	bsf	105,1,b	;volatile
 36239   002EC4                     l674:
 36240   002EC4  0012               	return		;funcret
 36241   002EC6                     __end_of_canSendMessage:
 36242                           	callstack 0
 36243                           
 36244 ;; *************** function _isEvent *****************
 36245 ;; Defined at:
 36246 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 36247 ;; Parameters:    Size  Location     Type
 36248 ;;  opc             1    wreg     unsigned char 
 36249 ;; Auto vars:     Size  Location     Type
 36250 ;;  opc             1    1[COMRAM] unsigned char 
 36251 ;; Return value:  Size  Location     Type
 36252 ;;                  1    wreg      enum E23474
 36253 ;; Registers used:
 36254 ;;		wreg, status,2, status,0
 36255 ;; Tracked objects:
 36256 ;;		On entry : 0/0
 36257 ;;		On exit  : 0/0
 36258 ;;		Unchanged: 0/0
 36259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36264 ;;Total ram usage:        2 bytes
 36265 ;; Hardware stack levels used: 1
 36266 ;; Hardware stack levels required when called: 1
 36267 ;; This function calls:
 36268 ;;		Nothing
 36269 ;; This function is called by:
 36270 ;;		_canSendMessage
 36271 ;; This function uses a non-reentrant model
 36272 ;;
 36273                           
 36274                           	psect	text89
 36275   007E70                     __ptext89:
 36276                           	callstack 0
 36277   007E70                     _isEvent:
 36278                           	callstack 119
 36279                           
 36280                           ;incstack = 0
 36281                           ;isEvent@opc stored from wreg
 36282   007E70  6E02               	movwf	isEvent@opc^(0+1280),c
 36283   007E72                     
 36284                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 36285   007E72  6A01               	clrf	_isEvent$5824^(0+1280),c
 36286   007E74  5002               	movf	isEvent@opc^(0+1280),w,c
 36287   007E76  0B90               	andlw	144
 36288   007E78  0A90               	xorlw	144
 36289   007E7A  A4D8               	btfss	status,2,c
 36290   007E7C  EF42  F03F         	goto	u4691
 36291   007E80  EF44  F03F         	goto	u4690
 36292   007E84                     u4691:
 36293   007E84  EF51  F03F         	goto	l2058
 36294   007E88                     u4690:
 36295   007E88  5002               	movf	isEvent@opc^(0+1280),w,c
 36296   007E8A  0AFF               	xorlw	255
 36297   007E8C  0B06               	andlw	6
 36298   007E8E  0A06               	xorlw	6
 36299   007E90  A4D8               	btfss	status,2,c
 36300   007E92  EF4D  F03F         	goto	u4701
 36301   007E96  EF4F  F03F         	goto	u4700
 36302   007E9A                     u4701:
 36303   007E9A  EF51  F03F         	goto	l2058
 36304   007E9E                     u4700:
 36305   007E9E  0E01               	movlw	1
 36306   007EA0  6E01               	movwf	_isEvent$5824^(0+1280),c
 36307   007EA2                     l2058:
 36308   007EA2  5001               	movf	_isEvent$5824^(0+1280),w,c
 36309   007EA4  0012               	return		;funcret
 36310   007EA6                     __end_of_isEvent:
 36311                           	callstack 0
 36312                           
 36313 ;; *************** function _have *****************
 36314 ;; Defined at:
 36315 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 36316 ;; Parameters:    Size  Location     Type
 36317 ;;  id              1    wreg     unsigned char 
 36318 ;; Auto vars:     Size  Location     Type
 36319 ;;  id              1    2[COMRAM] unsigned char 
 36320 ;;  i               1    3[COMRAM] unsigned char 
 36321 ;; Return value:  Size  Location     Type
 36322 ;;                  1    wreg      enum E23601
 36323 ;; Registers used:
 36324 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36325 ;; Tracked objects:
 36326 ;;		On entry : 0/0
 36327 ;;		On exit  : 0/0
 36328 ;;		Unchanged: 0/0
 36329 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36334 ;;Total ram usage:        4 bytes
 36335 ;; Hardware stack levels used: 1
 36336 ;; Hardware stack levels required when called: 1
 36337 ;; This function calls:
 36338 ;;		Nothing
 36339 ;; This function is called by:
 36340 ;;		_canSendMessage
 36341 ;;		_getParameterFlags
 36342 ;;		_getParameter
 36343 ;; This function uses a non-reentrant model
 36344 ;;
 36345                           
 36346                           	psect	text90
 36347   006EA8                     __ptext90:
 36348                           	callstack 0
 36349   006EA8                     _have:
 36350                           	callstack 119
 36351                           
 36352                           ;incstack = 0
 36353                           ;have@id stored from wreg
 36354   006EA8  6E03               	movwf	have@id^(0+1280),c
 36355   006EAA                     
 36356                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<6; i++) {
 36357   006EAA  6A04               	clrf	have@i^(0+1280),c
 36358   006EAC                     l7435:
 36359                           
 36360                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 36361   006EAC  5004               	movf	have@i^(0+1280),w,c
 36362   006EAE  0D02               	mullw	2
 36363   006EB0  0E89               	movlw	low _services
 36364   006EB2  24F3               	addwf	243,w,c
 36365   006EB4  6EF6               	movwf	tblptrl,c
 36366   006EB6  0EFF               	movlw	high _services
 36367   006EB8  20F4               	addwfc	244,w,c
 36368   006EBA  6EF7               	movwf	tblptrh,c
 36369   006EBC                     	if	1	;There are 3 active tblptr bytes
 36370   006EBC  6AF8               	clrf	tblptru,c
 36371   006EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 36372   006EC0  22F8               	addwfc	tblptru,f,c
 36373   006EC2                     	endif
 36374   006EC2  0009               	tblrd		*+
 36375   006EC4  50F5               	movf	tablat,w,c
 36376   006EC6  0009               	tblrd		*+
 36377   006EC8  10F5               	iorwf	tablat,w,c
 36378   006ECA  B4D8               	btfsc	status,2,c
 36379   006ECC  EF6A  F037         	goto	u4711
 36380   006ED0  EF6C  F037         	goto	u4710
 36381   006ED4                     u4711:
 36382   006ED4  EF8F  F037         	goto	l7443
 36383   006ED8                     u4710:
 36384   006ED8  5004               	movf	have@i^(0+1280),w,c
 36385   006EDA  0D02               	mullw	2
 36386   006EDC  0E89               	movlw	low _services
 36387   006EDE  24F3               	addwf	243,w,c
 36388   006EE0  6EF6               	movwf	tblptrl,c
 36389   006EE2  0EFF               	movlw	high _services
 36390   006EE4  20F4               	addwfc	244,w,c
 36391   006EE6  6EF7               	movwf	tblptrh,c
 36392   006EE8                     	if	1	;There are 3 active tblptr bytes
 36393   006EE8  6AF8               	clrf	tblptru,c
 36394   006EEA  0E00               	movlw	low (__mediumconst shr (0+16))
 36395   006EEC  22F8               	addwfc	tblptru,f,c
 36396   006EEE                     	endif
 36397   006EEE  0009               	tblrd		*+
 36398   006EF0  C4F5 F501          	movff	tablat,??_have
 36399   006EF4  0009               	tblrd		*+
 36400   006EF6  C4F5 F502          	movff	tablat,??_have+1
 36401   006EFA  C501  F4F6         	movff	??_have,tblptrl
 36402   006EFE  C502  F4F7         	movff	??_have+1,tblptrh
 36403   006F02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36404   006F02  6AF8               	clrf	tblptru,c
 36405   006F04                     	endif
 36406   006F04                     	if	0	;tblptru may be non-zero
 36407   006F04                     	endif
 36408   006F04  0008               	tblrd		*
 36409   006F06  50F5               	movf	tablat,w,c
 36410   006F08  1803               	xorwf	have@id^(0+1280),w,c
 36411   006F0A  A4D8               	btfss	status,2,c
 36412   006F0C  EF8A  F037         	goto	u4721
 36413   006F10  EF8C  F037         	goto	u4720
 36414   006F14                     u4721:
 36415   006F14  EF8F  F037         	goto	l7443
 36416   006F18                     u4720:
 36417   006F18                     
 36418                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 36419   006F18  0E01               	movlw	1
 36420   006F1A  EF99  F037         	goto	l1989
 36421   006F1E                     l7443:
 36422                           
 36423                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 36424   006F1E  2A04               	incf	have@i^(0+1280),f,c
 36425   006F20  0E05               	movlw	5
 36426   006F22  6404               	cpfsgt	have@i^(0+1280),c
 36427   006F24  EF96  F037         	goto	u4731
 36428   006F28  EF98  F037         	goto	u4730
 36429   006F2C                     u4731:
 36430   006F2C  EF56  F037         	goto	l7435
 36431   006F30                     u4730:
 36432   006F30                     
 36433                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 36434   006F30  0E00               	movlw	0
 36435   006F32                     l1989:
 36436   006F32  0012               	return		;funcret
 36437   006F34                     __end_of_have:
 36438                           	callstack 0
 36439                           
 36440 ;; *************** function _getNumTxBuffersInUse *****************
 36441 ;; Defined at:
 36442 ;;		line 532 in file "../../VLCBlib_PIC/can18_can_2.c"
 36443 ;; Parameters:    Size  Location     Type
 36444 ;;		None
 36445 ;; Auto vars:     Size  Location     Type
 36446 ;;  i16             2    4[COMRAM] short 
 36447 ;; Return value:  Size  Location     Type
 36448 ;;                  1    wreg      unsigned char 
 36449 ;; Registers used:
 36450 ;;		wreg, status,2, status,0
 36451 ;; Tracked objects:
 36452 ;;		On entry : 0/0
 36453 ;;		On exit  : 0/0
 36454 ;;		Unchanged: 0/0
 36455 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36458 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36459 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36460 ;;Total ram usage:        6 bytes
 36461 ;; Hardware stack levels used: 1
 36462 ;; Hardware stack levels required when called: 1
 36463 ;; This function calls:
 36464 ;;		Nothing
 36465 ;; This function is called by:
 36466 ;;		_canGetDiagnostic
 36467 ;;		_canSendMessage
 36468 ;; This function uses a non-reentrant model
 36469 ;;
 36470                           
 36471                           	psect	text91
 36472   007246                     __ptext91:
 36473                           	callstack 0
 36474   007246                     _getNumTxBuffersInUse:
 36475                           	callstack 119
 36476   007246                     
 36477                           ;../../VLCBlib_PIC/can18_can_2.c: 533:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 36478   007246  0101               	movlb	1	; () banked
 36479   007248  B16C               	btfsc	108,0,b	;volatile
 36480   00724A  EF29  F039         	goto	u4631
 36481   00724E  EF2B  F039         	goto	u4630
 36482   007252                     u4631:
 36483   007252  EF2E  F039         	goto	l7395
 36484   007256                     u4630:
 36485   007256                     
 36486                           ; BSR set to: 1
 36487                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         return 32;
 36488   007256  0E20               	movlw	32
 36489   007258  EF5F  F039         	goto	l657
 36490   00725C                     l7395:
 36491                           
 36492                           ; BSR set to: 1
 36493                           ;../../VLCBlib_PIC/can18_can_2.c: 536:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 538:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 36494   00725C  0E00               	movlw	0
 36495   00725E  2570               	addwf	112,w,b	;volatile
 36496   007260  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36497   007262  0EC4               	movlw	196
 36498   007264  2171               	addwfc	113,w,b	;volatile
 36499   007266  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 36500   007268  0EFF               	movlw	255
 36501   00726A  2172               	addwfc	114,w,b	;volatile
 36502   00726C  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 36503   00726E  0EFF               	movlw	255
 36504   007270  2173               	addwfc	115,w,b	;volatile
 36505   007272  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 36506   007274  0E05               	movlw	5
 36507   007276  EF42  F039         	goto	u4640
 36508   00727A                     u4645:
 36509   00727A  90D8               	bcf	status,0,c
 36510   00727C  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 36511   00727E  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 36512   007280  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 36513   007282  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 36514   007284                     u4640:
 36515   007284  2EE8               	decfsz	wreg,f,c
 36516   007286  EF3D  F039         	goto	u4645
 36517   00728A  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 36518   00728E  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 36519                           
 36520                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 36521   007292  516D               	movf	109,w,b	;volatile
 36522   007294  0B1F               	andlw	31
 36523   007296  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36524   007298  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 36525   00729A  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36526   00729C  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 36527   00729E  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36528   0072A0  A0D8               	btfss	status,0,c
 36529   0072A2  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36530   0072A4  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 36531                           
 36532                           ;../../VLCBlib_PIC/can18_can_2.c: 540:         if (i16 < 0) i16 += 32;
 36533   0072A6  BE06               	btfsc	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 36534   0072A8  EF5A  F039         	goto	u4650
 36535   0072AC  EF58  F039         	goto	u4651
 36536   0072B0                     u4651:
 36537   0072B0  EF5E  F039         	goto	l7399
 36538   0072B4                     u4650:
 36539   0072B4                     
 36540                           ; BSR set to: 1
 36541   0072B4  0E20               	movlw	32
 36542   0072B6  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 36543   0072B8  0E00               	movlw	0
 36544   0072BA  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 36545   0072BC                     l7399:
 36546                           
 36547                           ; BSR set to: 1
 36548                           ;../../VLCBlib_PIC/can18_can_2.c: 541:         return (uint8_t)i16;
 36549   0072BC  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36550   0072BE                     l657:
 36551                           
 36552                           ; BSR set to: 1
 36553   0072BE  0012               	return		;funcret
 36554   0072C0                     __end_of_getNumTxBuffersInUse:
 36555                           	callstack 0
 36556                           
 36557 ;; *************** function _getNumRxBuffersInUse *****************
 36558 ;; Defined at:
 36559 ;;		line 550 in file "../../VLCBlib_PIC/can18_can_2.c"
 36560 ;; Parameters:    Size  Location     Type
 36561 ;;		None
 36562 ;; Auto vars:     Size  Location     Type
 36563 ;;  i16             2    4[COMRAM] short 
 36564 ;; Return value:  Size  Location     Type
 36565 ;;                  1    wreg      unsigned char 
 36566 ;; Registers used:
 36567 ;;		wreg, status,2, status,0
 36568 ;; Tracked objects:
 36569 ;;		On entry : 0/0
 36570 ;;		On exit  : 0/0
 36571 ;;		Unchanged: 0/0
 36572 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36576 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36577 ;;Total ram usage:        6 bytes
 36578 ;; Hardware stack levels used: 1
 36579 ;; Hardware stack levels required when called: 1
 36580 ;; This function calls:
 36581 ;;		Nothing
 36582 ;; This function is called by:
 36583 ;;		_canGetDiagnostic
 36584 ;;		_canSendMessage
 36585 ;;		_canReceiveMessage
 36586 ;; This function uses a non-reentrant model
 36587 ;;
 36588                           
 36589                           	psect	text92
 36590   00749E                     __ptext92:
 36591                           	callstack 0
 36592   00749E                     _getNumRxBuffersInUse:
 36593                           	callstack 119
 36594   00749E                     
 36595                           ;../../VLCBlib_PIC/can18_can_2.c: 551:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 36596   00749E  0101               	movlb	1	; () banked
 36597   0074A0  A578               	btfss	120,2,b	;volatile
 36598   0074A2  EF55  F03A         	goto	u4661
 36599   0074A6  EF57  F03A         	goto	u4660
 36600   0074AA                     u4661:
 36601   0074AA  EF5A  F03A         	goto	l7411
 36602   0074AE                     u4660:
 36603   0074AE                     
 36604                           ; BSR set to: 1
 36605                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         return 32;
 36606   0074AE  0E20               	movlw	32
 36607   0074B0  EF88  F03A         	goto	l663
 36608   0074B4                     l7411:
 36609                           
 36610                           ; BSR set to: 1
 36611                           ;../../VLCBlib_PIC/can18_can_2.c: 554:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 556:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 36612   0074B4  517C               	movf	124,w,b	;volatile
 36613   0074B6  0800               	sublw	0
 36614   0074B8  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36615   0074BA  0E3E               	movlw	62
 36616   0074BC  557D               	subfwb	125,w,b	;volatile
 36617   0074BE  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 36618   0074C0  0E00               	movlw	0
 36619   0074C2  557E               	subfwb	126,w,b	;volatile
 36620   0074C4  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 36621   0074C6  0E00               	movlw	0
 36622   0074C8  557F               	subfwb	127,w,b	;volatile
 36623   0074CA  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 36624   0074CC  0E05               	movlw	5
 36625   0074CE  EF6E  F03A         	goto	u4670
 36626   0074D2                     u4675:
 36627   0074D2  90D8               	bcf	status,0,c
 36628   0074D4  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 36629   0074D6  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 36630   0074D8  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 36631   0074DA  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 36632   0074DC                     u4670:
 36633   0074DC  2EE8               	decfsz	wreg,f,c
 36634   0074DE  EF69  F03A         	goto	u4675
 36635   0074E2  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 36636   0074E6  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 36637                           
 36638                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 36639   0074EA  5179               	movf	121,w,b	;volatile
 36640   0074EC  0B1F               	andlw	31
 36641   0074EE  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36642   0074F0  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 36643   0074F2  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36644   0074F4  0E00               	movlw	0
 36645   0074F6  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36646                           
 36647                           ;../../VLCBlib_PIC/can18_can_2.c: 558:         if (i16 < 0) i16 += 32;
 36648   0074F8  BE06               	btfsc	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 36649   0074FA  EF83  F03A         	goto	u4680
 36650   0074FE  EF81  F03A         	goto	u4681
 36651   007502                     u4681:
 36652   007502  EF87  F03A         	goto	l7415
 36653   007506                     u4680:
 36654   007506                     
 36655                           ; BSR set to: 1
 36656   007506  0E20               	movlw	32
 36657   007508  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36658   00750A  0E00               	movlw	0
 36659   00750C  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36660   00750E                     l7415:
 36661                           
 36662                           ; BSR set to: 1
 36663                           ;../../VLCBlib_PIC/can18_can_2.c: 559:         return (uint8_t) i16;
 36664   00750E  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 36665   007510                     l663:
 36666                           
 36667                           ; BSR set to: 1
 36668   007510  0012               	return		;funcret
 36669   007512                     __end_of_getNumRxBuffersInUse:
 36670                           	callstack 0
 36671                           
 36672 ;; *************** function _getNextWriteMessage *****************
 36673 ;; Defined at:
 36674 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 36675 ;; Parameters:    Size  Location     Type
 36676 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 36677 ;;		 -> rxQueue(5), 
 36678 ;; Auto vars:     Size  Location     Type
 36679 ;;  wr              1   11[COMRAM] unsigned char 
 36680 ;; Return value:  Size  Location     Type
 36681 ;;                  2    0[COMRAM] PTR struct Message
 36682 ;; Registers used:
 36683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36684 ;; Tracked objects:
 36685 ;;		On entry : 0/0
 36686 ;;		On exit  : 0/0
 36687 ;;		Unchanged: 0/0
 36688 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36691 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36692 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36693 ;;Total ram usage:       12 bytes
 36694 ;; Hardware stack levels used: 1
 36695 ;; Hardware stack levels required when called: 1
 36696 ;; This function calls:
 36697 ;;		Nothing
 36698 ;; This function is called by:
 36699 ;;		_canSendMessage
 36700 ;; This function uses a non-reentrant model
 36701 ;;
 36702                           
 36703                           	psect	text93
 36704   00595E                     __ptext93:
 36705                           	callstack 0
 36706   00595E                     _getNextWriteMessage:
 36707                           	callstack 119
 36708   00595E  EE20 F002          	lfsr	2,2
 36709   005962  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36710   005964  26D9               	addwf	fsr2l,f,c
 36711   005966  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36712   005968  22DA               	addwfc	fsr2h,f,c
 36713   00596A  50DF               	movf	indf2,w,c
 36714   00596C  6E03               	movwf	??_getNextWriteMessage^(0+1280),c
 36715   00596E  6A04               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 36716   005970  EE20 F004          	lfsr	2,4
 36717   005974  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36718   005976  26D9               	addwf	fsr2l,f,c
 36719   005978  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36720   00597A  22DA               	addwfc	fsr2h,f,c
 36721   00597C  50DF               	movf	indf2,w,c
 36722   00597E  6E05               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 36723   005980  0EFF               	movlw	255
 36724   005982  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36725   005984  6E06               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 36726   005986  6A07               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 36727   005988  0EFF               	movlw	255
 36728   00598A  2207               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 36729   00598C  EE20 F003          	lfsr	2,3
 36730   005990  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36731   005992  26D9               	addwf	fsr2l,f,c
 36732   005994  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36733   005996  22DA               	addwfc	fsr2h,f,c
 36734   005998  50DF               	movf	indf2,w,c
 36735   00599A  6E08               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 36736   00599C  6A09               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 36737   00599E  0E01               	movlw	1
 36738   0059A0  2608               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 36739   0059A2  0E00               	movlw	0
 36740   0059A4  2209               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 36741   0059A6  5006               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 36742   0059A8  1408               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 36743   0059AA  6E0A               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 36744   0059AC  5007               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 36745   0059AE  1409               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 36746   0059B0  6E0B               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 36747   0059B2  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36748   0059B4  180A               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 36749   0059B6  E107               	bnz	u4741
 36750   0059B8  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36751   0059BA  180B               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 36752   0059BC  A4D8               	btfss	status,2,c
 36753   0059BE  EFE3  F02C         	goto	u4741
 36754   0059C2  EFE5  F02C         	goto	u4740
 36755   0059C6                     u4741:
 36756   0059C6  EFEB  F02C         	goto	l7457
 36757   0059CA                     u4740:
 36758   0059CA  0E00               	movlw	0
 36759   0059CC  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36760   0059CE  0E00               	movlw	0
 36761   0059D0  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36762   0059D2  EF2A  F02D         	goto	l1188
 36763   0059D6                     l7457:
 36764   0059D6  EE20 F003          	lfsr	2,3
 36765   0059DA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36766   0059DC  26D9               	addwf	fsr2l,f,c
 36767   0059DE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36768   0059E0  22DA               	addwfc	fsr2h,f,c
 36769   0059E2  50DF               	movf	indf2,w,c
 36770   0059E4  6E0C               	movwf	getNextWriteMessage@wr^(0+1280),c
 36771   0059E6  EE20 F003          	lfsr	2,3
 36772   0059EA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36773   0059EC  26D9               	addwf	fsr2l,f,c
 36774   0059EE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36775   0059F0  22DA               	addwfc	fsr2h,f,c
 36776   0059F2  2ADF               	incf	indf2,f,c
 36777   0059F4  EE20 F004          	lfsr	2,4
 36778   0059F8  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36779   0059FA  26D9               	addwf	fsr2l,f,c
 36780   0059FC  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36781   0059FE  22DA               	addwfc	fsr2h,f,c
 36782   005A00  EE10 F003          	lfsr	1,3
 36783   005A04  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36784   005A06  26E1               	addwf	fsr1l,f,c
 36785   005A08  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36786   005A0A  22E2               	addwfc	fsr1h,f,c
 36787   005A0C  50DE               	movf	postinc2,w,c
 36788   005A0E  5CE6               	subwf	postinc1,w,c
 36789   005A10  A0D8               	btfss	status,0,c
 36790   005A12  EF0D  F02D         	goto	u4751
 36791   005A16  EF0F  F02D         	goto	u4750
 36792   005A1A                     u4751:
 36793   005A1A  EF16  F02D         	goto	l7463
 36794   005A1E                     u4750:
 36795   005A1E  EE20 F003          	lfsr	2,3
 36796   005A22  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36797   005A24  26D9               	addwf	fsr2l,f,c
 36798   005A26  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36799   005A28  22DA               	addwfc	fsr2h,f,c
 36800   005A2A  6ADF               	clrf	indf2,c
 36801   005A2C                     l7463:
 36802   005A2C  500C               	movf	getNextWriteMessage@wr^(0+1280),w,c
 36803   005A2E  0D09               	mullw	9
 36804   005A30  C4F3 F503          	movff	prodl,??_getNextWriteMessage
 36805   005A34  C4F4 F504          	movff	prodh,??_getNextWriteMessage+1
 36806   005A38  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 36807   005A3C  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 36808   005A40  C4DE F505          	movff	postinc2,??_getNextWriteMessage+2
 36809   005A44  C4DD F506          	movff	postdec2,??_getNextWriteMessage+3
 36810   005A48  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36811   005A4A  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36812   005A4C  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36813   005A4E  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36814   005A50  2006               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 36815   005A52  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36816   005A54                     l1188:
 36817   005A54  0012               	return		;funcret
 36818   005A56                     __end_of_getNextWriteMessage:
 36819                           	callstack 0
 36820                           
 36821 ;; *************** function _processEnumeration *****************
 36822 ;; Defined at:
 36823 ;;		line 828 in file "../../VLCBlib_PIC/can18_can_2.c"
 36824 ;; Parameters:    Size  Location     Type
 36825 ;;		None
 36826 ;; Auto vars:     Size  Location     Type
 36827 ;;  i               1   27[COMRAM] unsigned char 
 36828 ;;  newCanId        1   26[COMRAM] unsigned char 
 36829 ;;  enumResult      1   25[COMRAM] unsigned char 
 36830 ;; Return value:  Size  Location     Type
 36831 ;;                  1    wreg      void 
 36832 ;; Registers used:
 36833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36834 ;; Tracked objects:
 36835 ;;		On entry : 0/0
 36836 ;;		On exit  : 0/0
 36837 ;;		Unchanged: 0/0
 36838 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36840 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36841 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36842 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36843 ;;Total ram usage:        7 bytes
 36844 ;; Hardware stack levels used: 1
 36845 ;; Hardware stack levels required when called: 7
 36846 ;; This function calls:
 36847 ;;		_setNewCanId
 36848 ;;		_startEnumeration
 36849 ;;		_tickGet
 36850 ;;		_updateModuleErrorStatus
 36851 ;; This function is called by:
 36852 ;;		_canPoll
 36853 ;; This function uses a non-reentrant model
 36854 ;;
 36855                           
 36856                           	psect	text94
 36857   00461E                     __ptext94:
 36858                           	callstack 0
 36859   00461E                     _processEnumeration:
 36860                           	callstack 117
 36861   00461E                     
 36862                           ;../../VLCBlib_PIC/can18_can_2.c: 829:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 831:     switch (enumerationState) {
 36863   00461E  EFD6  F023         	goto	l8669
 36864   004622                     l8609:
 36865                           
 36866                           ; BSR set to: 5
 36867                           ;../../VLCBlib_PIC/can18_can_2.c: 834:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 36868   004622  EC14  F03A         	call	_tickGet	;wreg free
 36869   004626  0105               	movlb	5	; () banked
 36870   004628  5174               	movf	_enumerationStartTime& (0+255),w,b
 36871   00462A  5C01               	subwf	?_tickGet^(0+1280),w,c
 36872   00462C  6E16               	movwf	??_processEnumeration^(0+1280),c
 36873   00462E  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36874   004630  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36875   004632  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36876   004634  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36877   004636  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36878   004638  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36879   00463A  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36880   00463C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36881   00463E  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36882   004640  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36883   004642  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36884   004644  E10B               	bnz	u5880
 36885   004646  0ED5               	movlw	213
 36886   004648  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36887   00464A  0E30               	movlw	48
 36888   00464C  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36889   00464E  A0D8               	btfss	status,0,c
 36890   004650  EF2C  F023         	goto	u5881
 36891   004654  EF2E  F023         	goto	u5880
 36892   004658                     u5881:
 36893   004658  EFF0  F023         	goto	l742
 36894   00465C                     u5880:
 36895   00465C                     
 36896                           ; BSR set to: 5
 36897                           ;../../VLCBlib_PIC/can18_can_2.c: 838:                 startEnumeration(0);
 36898   00465C  0E00               	movlw	0
 36899   00465E  ECFA  F03A         	call	_startEnumeration
 36900   004662  EFF0  F023         	goto	l742
 36901   004666                     l8613:
 36902                           
 36903                           ; BSR set to: 5
 36904                           ;../../VLCBlib_PIC/can18_can_2.c: 846:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 36905   004666  EC14  F03A         	call	_tickGet	;wreg free
 36906   00466A  0105               	movlb	5	; () banked
 36907   00466C  5174               	movf	_enumerationStartTime& (0+255),w,b
 36908   00466E  5C01               	subwf	?_tickGet^(0+1280),w,c
 36909   004670  6E16               	movwf	??_processEnumeration^(0+1280),c
 36910   004672  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36911   004674  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36912   004676  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36913   004678  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36914   00467A  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36915   00467C  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36916   00467E  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36917   004680  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36918   004682  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36919   004684  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36920   004686  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36921   004688  E10B               	bnz	u5890
 36922   00468A  0E6B               	movlw	107
 36923   00468C  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36924   00468E  0E18               	movlw	24
 36925   004690  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36926   004692  A0D8               	btfss	status,0,c
 36927   004694  EF4E  F023         	goto	u5891
 36928   004698  EF50  F023         	goto	u5890
 36929   00469C                     u5891:
 36930   00469C  EFF0  F023         	goto	l742
 36931   0046A0                     u5890:
 36932   0046A0                     
 36933                           ; BSR set to: 5
 36934                           ;../../VLCBlib_PIC/can18_can_2.c: 851:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 36935   0046A0  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36936   0046A2  EF54  F023         	goto	l8619
 36937   0046A6                     l8617:
 36938                           
 36939                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                 }
 36940   0046A6  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36941   0046A8                     l8619:
 36942   0046A8  0E32               	movlw	low _enumerationResults
 36943   0046AA  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36944   0046AC  6ED9               	movwf	fsr2l,c
 36945   0046AE  6ADA               	clrf	fsr2h,c
 36946   0046B0  0E06               	movlw	high _enumerationResults
 36947   0046B2  22DA               	addwfc	fsr2h,f,c
 36948   0046B4  28DE               	incf	postinc2,w,c
 36949   0046B6  A4D8               	btfss	status,2,c
 36950   0046B8  EF60  F023         	goto	u5901
 36951   0046BC  EF62  F023         	goto	u5900
 36952   0046C0                     u5901:
 36953   0046C0  EF6A  F023         	goto	l8623
 36954   0046C4                     u5900:
 36955   0046C4  0E0F               	movlw	15
 36956   0046C6  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36957   0046C8  EF68  F023         	goto	u5911
 36958   0046CC  EF6A  F023         	goto	u5910
 36959   0046D0                     u5911:
 36960   0046D0  EF53  F023         	goto	l8617
 36961   0046D4                     u5910:
 36962   0046D4                     l8623:
 36963                           
 36964                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 36965   0046D4  0E32               	movlw	low _enumerationResults
 36966   0046D6  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36967   0046D8  6ED9               	movwf	fsr2l,c
 36968   0046DA  6ADA               	clrf	fsr2h,c
 36969   0046DC  0E06               	movlw	high _enumerationResults
 36970   0046DE  22DA               	addwfc	fsr2h,f,c
 36971   0046E0  50DF               	movf	indf2,w,c
 36972   0046E2  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 36973   0046E4  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 36974   0046E6  B4D8               	btfsc	status,2,c
 36975   0046E8  EF78  F023         	goto	u5921
 36976   0046EC  EF7A  F023         	goto	u5920
 36977   0046F0                     u5921:
 36978   0046F0  EFA2  F023         	goto	l8641
 36979   0046F4                     u5920:
 36980   0046F4                     
 36981                           ;../../VLCBlib_PIC/can18_can_2.c: 855:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 36982   0046F4  501C               	movf	processEnumeration@i^(0+1280),w,c
 36983   0046F6  0D08               	mullw	8
 36984   0046F8  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 36985   0046FC  EF83  F023         	goto	l8631
 36986   004700                     l8627:
 36987                           
 36988                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         enumResult >>= 1;
 36989   004700  90D8               	bcf	status,0,c
 36990   004702  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 36991   004704                     
 36992                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                     }
 36993   004704  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 36994   004706                     l8631:
 36995   004706  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 36996   004708  EF88  F023         	goto	u5931
 36997   00470C  EF8A  F023         	goto	u5930
 36998   004710                     u5931:
 36999   004710  EF80  F023         	goto	l8627
 37000   004714                     u5930:
 37001   004714                     
 37002                           ;../../VLCBlib_PIC/can18_can_2.c: 858:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 37003   004714  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 37004   004716  B4D8               	btfsc	status,2,c
 37005   004718  EF90  F023         	goto	u5941
 37006   00471C  EF92  F023         	goto	u5940
 37007   004720                     u5941:
 37008   004720  EFA2  F023         	goto	l8641
 37009   004724                     u5940:
 37010   004724  0E64               	movlw	100
 37011   004726  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 37012   004728  EF98  F023         	goto	u5951
 37013   00472C  EF9A  F023         	goto	u5950
 37014   004730                     u5951:
 37015   004730  EFA2  F023         	goto	l8641
 37016   004734                     u5950:
 37017   004734                     
 37018                           ;../../VLCBlib_PIC/can18_can_2.c: 860:                         canId = newCanId;
 37019   004734  C51B  F5A8         	movff	processEnumeration@newCanId,_canId
 37020   004738                     
 37021                           ;../../VLCBlib_PIC/can18_can_2.c: 861:                         setNewCanId(canId);
 37022   004738  0105               	movlb	5	; () banked
 37023   00473A  51A8               	movf	_canId& (0+255),w,b
 37024   00473C  EC37  F03E         	call	_setNewCanId
 37025                           
 37026                           ;../../VLCBlib_PIC/can18_can_2.c: 862:                     } else {
 37027   004740  EFA7  F023         	goto	l8649
 37028   004744                     l8641:
 37029                           
 37030                           ;../../VLCBlib_PIC/can18_can_2.c: 864:                         canDiagnostics[0x10].asUi
      +                          nt++;
 37031   004744  0106               	movlb	6	; () banked
 37032   004746  4BAE               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 37033   004748  2BAF               	incf	(_canDiagnostics+33)& (0+255),f,b
 37034   00474A                     
 37035                           ; BSR set to: 6
 37036                           ;../../VLCBlib_PIC/can18_can_2.c: 865:                         updateModuleErrorStatus()
      +                          ;
 37037   00474A  EC90  F041         	call	_updateModuleErrorStatus	;wreg free
 37038   00474E                     l8649:
 37039                           
 37040                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 37041   00474E  0E03               	movlw	3
 37042   004750  0105               	movlb	5	; () banked
 37043   004752  19A5               	xorwf	_enumerationState& (0+255),w,b
 37044   004754  A4D8               	btfss	status,2,c
 37045   004756  EFAF  F023         	goto	u5961
 37046   00475A  EFB1  F023         	goto	u5960
 37047   00475E                     u5961:
 37048   00475E  EFD2  F023         	goto	l8665
 37049   004762                     u5960:
 37050   004762                     
 37051                           ; BSR set to: 5
 37052                           ;../../VLCBlib_PIC/can18_can_2.c: 877:                     for (i=0; i< 32; i++) {
 37053   004762  6A1C               	clrf	processEnumeration@i^(0+1280),c
 37054   004764                     l8657:
 37055                           
 37056                           ; BSR set to: 5
 37057                           ;../../VLCBlib_PIC/can18_can_2.c: 878:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 37058   004764  501C               	movf	processEnumeration@i^(0+1280),w,c
 37059   004766  6E16               	movwf	??_processEnumeration^(0+1280),c
 37060   004768  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 37061   00476A  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 37062   00476C  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 37063   00476E  0EF0               	movlw	240
 37064   004770  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 37065   004772  5016               	movf	??_processEnumeration^(0+1280),w,c
 37066   004774  0B0F               	andlw	15
 37067   004776  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 37068   004778  0EF0               	movlw	240
 37069   00477A  1616               	andwf	??_processEnumeration^(0+1280),f,c
 37070   00477C  0E00               	movlw	0
 37071   00477E  2416               	addwf	??_processEnumeration^(0+1280),w,c
 37072   004780  6ED9               	movwf	fsr2l,c
 37073   004782  0E3C               	movlw	60
 37074   004784  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 37075   004786  6EDA               	movwf	fsr2h,c
 37076   004788  51A8               	movf	_canId& (0+255),w,b
 37077   00478A  0B7F               	andlw	127
 37078   00478C  6EDF               	movwf	indf2,c
 37079   00478E                     
 37080                           ; BSR set to: 5
 37081                           ;../../VLCBlib_PIC/can18_can_2.c: 879:                     }
 37082   00478E  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 37083   004790                     
 37084                           ; BSR set to: 5
 37085   004790  0E1F               	movlw	31
 37086   004792  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 37087   004794  EFCE  F023         	goto	u5971
 37088   004798  EFD0  F023         	goto	u5970
 37089   00479C                     u5971:
 37090   00479C  EFB2  F023         	goto	l8657
 37091   0047A0                     u5970:
 37092   0047A0                     
 37093                           ; BSR set to: 5
 37094                           ;../../VLCBlib_PIC/can18_can_2.c: 881:                     C1FIFOCON2H |= 0x2;
 37095   0047A0  0101               	movlb	1	; () banked
 37096   0047A2  8369               	bsf	105,1,b	;volatile
 37097   0047A4                     l8665:
 37098                           
 37099                           ;../../VLCBlib_PIC/can18_can_2.c: 883:                 enumerationState = NO_ENUMERATION
      +                          ;
 37100   0047A4  0105               	movlb	5	; () banked
 37101   0047A6  6BA5               	clrf	_enumerationState& (0+255),b
 37102   0047A8  EFF0  F023         	goto	l742
 37103   0047AC                     l8669:
 37104   0047AC  0105               	movlb	5	; () banked
 37105   0047AE  51A5               	movf	_enumerationState& (0+255),w,b
 37106   0047B0  6E16               	movwf	??_processEnumeration^(0+1280),c
 37107   0047B2  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 37108                           
 37109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37110                           ; Switch size 1, requested type "simple"
 37111                           ; Number of cases is 1, Range of values is 0 to 0
 37112                           ; switch strategies available:
 37113                           ; Name         Instructions Cycles
 37114                           ; simple_byte            4     3 (average)
 37115                           ;	Chosen strategy is simple_byte
 37116   0047B4  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 37117   0047B6  0A00               	xorlw	0	; case 0
 37118   0047B8  B4D8               	btfsc	status,2,c
 37119   0047BA  EFE1  F023         	goto	l11797
 37120   0047BE  EFF0  F023         	goto	l742
 37121   0047C2                     l11797:
 37122                           
 37123                           ; BSR set to: 5
 37124                           ; Switch size 1, requested type "simple"
 37125                           ; Number of cases is 3, Range of values is 1 to 3
 37126                           ; switch strategies available:
 37127                           ; Name         Instructions Cycles
 37128                           ; simple_byte           10     6 (average)
 37129                           ;	Chosen strategy is simple_byte
 37130   0047C2  5016               	movf	??_processEnumeration^(0+1280),w,c
 37131   0047C4  0A01               	xorlw	1	; case 1
 37132   0047C6  B4D8               	btfsc	status,2,c
 37133   0047C8  EF11  F023         	goto	l8609
 37134   0047CC  0A03               	xorlw	3	; case 2
 37135   0047CE  B4D8               	btfsc	status,2,c
 37136   0047D0  EF33  F023         	goto	l8613
 37137   0047D4  0A01               	xorlw	1	; case 3
 37138   0047D6  B4D8               	btfsc	status,2,c
 37139   0047D8  EF33  F023         	goto	l8613
 37140   0047DC  EFF0  F023         	goto	l742
 37141   0047E0                     l742:
 37142   0047E0  0012               	return		;funcret
 37143   0047E2                     __end_of_processEnumeration:
 37144                           	callstack 0
 37145                           
 37146 ;; *************** function _startEnumeration *****************
 37147 ;; Defined at:
 37148 ;;		line 777 in file "../../VLCBlib_PIC/can18_can_2.c"
 37149 ;; Parameters:    Size  Location     Type
 37150 ;;  txWaiting       1    wreg     enum E23474
 37151 ;; Auto vars:     Size  Location     Type
 37152 ;;  txWaiting       1   10[COMRAM] enum E23474
 37153 ;;  i               1   11[COMRAM] unsigned char 
 37154 ;; Return value:  Size  Location     Type
 37155 ;;                  1    wreg      void 
 37156 ;; Registers used:
 37157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37158 ;; Tracked objects:
 37159 ;;		On entry : 0/0
 37160 ;;		On exit  : 0/0
 37161 ;;		Unchanged: 0/0
 37162 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37167 ;;Total ram usage:        2 bytes
 37168 ;; Hardware stack levels used: 1
 37169 ;; Hardware stack levels required when called: 2
 37170 ;; This function calls:
 37171 ;;		_sendRTR
 37172 ;;		_tickGet
 37173 ;; This function is called by:
 37174 ;;		_canSendMessage
 37175 ;;		_processEnumeration
 37176 ;; This function uses a non-reentrant model
 37177 ;;
 37178                           
 37179                           	psect	text95
 37180   0075F4                     __ptext95:
 37181                           	callstack 0
 37182   0075F4                     _startEnumeration:
 37183                           	callstack 118
 37184                           
 37185                           ;incstack = 0
 37186                           ;startEnumeration@txWaiting stored from wreg
 37187   0075F4  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 37188   0075F6                     
 37189                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          80:     for (i=1; i< (0x7F/8)+1; i++) {
 37190   0075F6  0E01               	movlw	1
 37191   0075F8  6E0C               	movwf	startEnumeration@i^(0+1280),c
 37192   0075FA                     l7473:
 37193                           
 37194                           ;../../VLCBlib_PIC/can18_can_2.c: 781:         enumerationResults[i] = 0;
 37195   0075FA  0E32               	movlw	low _enumerationResults
 37196   0075FC  240C               	addwf	startEnumeration@i^(0+1280),w,c
 37197   0075FE  6ED9               	movwf	fsr2l,c
 37198   007600  6ADA               	clrf	fsr2h,c
 37199   007602  0E06               	movlw	high _enumerationResults
 37200   007604  22DA               	addwfc	fsr2h,f,c
 37201   007606  6ADF               	clrf	indf2,c
 37202   007608                     
 37203                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     }
 37204   007608  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 37205   00760A  0E0F               	movlw	15
 37206   00760C  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 37207   00760E  EF0B  F03B         	goto	u4761
 37208   007612  EF0D  F03B         	goto	u4760
 37209   007616                     u4761:
 37210   007616  EFFD  F03A         	goto	l7473
 37211   00761A                     u4760:
 37212   00761A                     
 37213                           ;../../VLCBlib_PIC/can18_can_2.c: 783:     enumerationResults[0] = 1;
 37214   00761A  0E01               	movlw	1
 37215   00761C  0106               	movlb	6	; () banked
 37216   00761E  6F32               	movwf	_enumerationResults& (0+255),b
 37217                           
 37218                           ;../../VLCBlib_PIC/can18_can_2.c: 785:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 37219   007620  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 37220   007622  A4D8               	btfss	status,2,c
 37221   007624  EF16  F03B         	goto	u4771
 37222   007628  EF18  F03B         	goto	u4770
 37223   00762C                     u4771:
 37224   00762C  EF1D  F03B         	goto	l7483
 37225   007630                     u4770:
 37226   007630                     
 37227                           ; BSR set to: 6
 37228   007630  0E02               	movlw	2
 37229   007632  0105               	movlb	5	; () banked
 37230   007634  6FA5               	movwf	_enumerationState& (0+255),b
 37231   007636  EF20  F03B         	goto	l7485
 37232   00763A                     l7483:
 37233                           
 37234                           ; BSR set to: 6
 37235   00763A  0E03               	movlw	3
 37236   00763C  0105               	movlb	5	; () banked
 37237   00763E  6FA5               	movwf	_enumerationState& (0+255),b
 37238   007640                     l7485:
 37239                           
 37240                           ; BSR set to: 5
 37241                           ;../../VLCBlib_PIC/can18_can_2.c: 786:     enumerationStartTime.val = tickGet();
 37242   007640  EC14  F03A         	call	_tickGet	;wreg free
 37243   007644  C501  F574         	movff	?_tickGet,_enumerationStartTime
 37244   007648  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 37245   00764C  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 37246   007650  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 37247   007654                     
 37248                           ;../../VLCBlib_PIC/can18_can_2.c: 788:     canDiagnostics[0x0D].asUint++;
 37249   007654  0106               	movlb	6	; () banked
 37250   007656  4BA8               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 37251   007658  2BA9               	incf	(_canDiagnostics+27)& (0+255),f,b
 37252   00765A                     
 37253                           ; BSR set to: 6
 37254                           ;../../VLCBlib_PIC/can18_can_2.c: 790:     sendRTR();
 37255   00765A  EC7D  F03E         	call	_sendRTR	;wreg free
 37256   00765E  0012               	return		;funcret
 37257   007660                     __end_of_startEnumeration:
 37258                           	callstack 0
 37259                           
 37260 ;; *************** function _sendRTR *****************
 37261 ;; Defined at:
 37262 ;;		line 680 in file "../../VLCBlib_PIC/can18_can_2.c"
 37263 ;; Parameters:    Size  Location     Type
 37264 ;;		None
 37265 ;; Auto vars:     Size  Location     Type
 37266 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37267 ;;		 -> RAM(16383), 
 37268 ;; Return value:  Size  Location     Type
 37269 ;;                  1    wreg      void 
 37270 ;; Registers used:
 37271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37272 ;; Tracked objects:
 37273 ;;		On entry : 0/0
 37274 ;;		On exit  : 0/0
 37275 ;;		Unchanged: 0/0
 37276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37281 ;;Total ram usage:        2 bytes
 37282 ;; Hardware stack levels used: 1
 37283 ;; Hardware stack levels required when called: 1
 37284 ;; This function calls:
 37285 ;;		Nothing
 37286 ;; This function is called by:
 37287 ;;		_startEnumeration
 37288 ;; This function uses a non-reentrant model
 37289 ;;
 37290                           
 37291                           	psect	text96
 37292   007CFA                     __ptext96:
 37293                           	callstack 0
 37294   007CFA                     _sendRTR:
 37295                           	callstack 118
 37296   007CFA                     
 37297                           ;../../VLCBlib_PIC/can18_can_2.c: 681:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 37298   007CFA  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 37299   007CFE  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 37300   007D02                     
 37301                           ;../../VLCBlib_PIC/can18_can_2.c: 682:     txFifoObj[0] = (canId & 0x7F);
 37302   007D02  0105               	movlb	5	; () banked
 37303   007D04  51A8               	movf	_canId& (0+255),w,b
 37304   007D06  0B7F               	andlw	127
 37305   007D08  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 37306   007D0C  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 37307   007D10  6EDF               	movwf	indf2,c
 37308   007D12                     
 37309                           ; BSR set to: 5
 37310                           ;../../VLCBlib_PIC/can18_can_2.c: 683:     txFifoObj[1] = 0;
 37311   007D12  EE20 F001          	lfsr	2,1
 37312   007D16  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37313   007D18  26D9               	addwf	fsr2l,f,c
 37314   007D1A  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37315   007D1C  22DA               	addwfc	fsr2h,f,c
 37316   007D1E  6ADF               	clrf	indf2,c
 37317   007D20                     
 37318                           ; BSR set to: 5
 37319                           ;../../VLCBlib_PIC/can18_can_2.c: 684:     txFifoObj[4] = 0x20;
 37320   007D20  EE20 F004          	lfsr	2,4
 37321   007D24  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37322   007D26  26D9               	addwf	fsr2l,f,c
 37323   007D28  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37324   007D2A  22DA               	addwfc	fsr2h,f,c
 37325   007D2C  0E20               	movlw	32
 37326   007D2E  6EDF               	movwf	indf2,c
 37327   007D30                     
 37328                           ; BSR set to: 5
 37329                           ;../../VLCBlib_PIC/can18_can_2.c: 685:     C1TXQCONH |= (0x2 | 0x1);
 37330   007D30  0E03               	movlw	3
 37331   007D32  0101               	movlb	1	; () banked
 37332   007D34  1351               	iorwf	81,f,b	;volatile
 37333   007D36                     
 37334                           ; BSR set to: 1
 37335                           ;../../VLCBlib_PIC/can18_can_2.c: 687:     canDiagnostics[0x06].asUint++;
 37336   007D36  0106               	movlb	6	; () banked
 37337   007D38  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 37338   007D3A  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 37339   007D3C                     
 37340                           ; BSR set to: 6
 37341   007D3C  0012               	return		;funcret
 37342   007D3E                     __end_of_sendRTR:
 37343                           	callstack 0
 37344                           
 37345 ;; *************** function _setNewCanId *****************
 37346 ;; Defined at:
 37347 ;;		line 896 in file "../../VLCBlib_PIC/can18_can_2.c"
 37348 ;; Parameters:    Size  Location     Type
 37349 ;;  newCanId        1    wreg     unsigned char 
 37350 ;; Auto vars:     Size  Location     Type
 37351 ;;  newCanId        1   20[COMRAM] unsigned char 
 37352 ;; Return value:  Size  Location     Type
 37353 ;;                  1    wreg      enum E23636
 37354 ;; Registers used:
 37355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37356 ;; Tracked objects:
 37357 ;;		On entry : 0/0
 37358 ;;		On exit  : 0/0
 37359 ;;		Unchanged: 0/0
 37360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37365 ;;Total ram usage:        1 bytes
 37366 ;; Hardware stack levels used: 1
 37367 ;; Hardware stack levels required when called: 6
 37368 ;; This function calls:
 37369 ;;		_prepareSelfEnumResponse
 37370 ;;		_writeNVM
 37371 ;; This function is called by:
 37372 ;;		_processEnumeration
 37373 ;; This function uses a non-reentrant model
 37374 ;;
 37375                           
 37376                           	psect	text97
 37377   007C6E                     __ptext97:
 37378                           	callstack 0
 37379   007C6E                     _setNewCanId:
 37380                           	callstack 117
 37381                           
 37382                           ; BSR set to: 6
 37383                           ;incstack = 0
 37384                           ;setNewCanId@newCanId stored from wreg
 37385   007C6E  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 37386   007C70                     
 37387                           ;../../VLCBlib_PIC/can18_can_2.c: 897:     if ((newCanId >= 1) && (newCanId <= 99)) {
 37388   007C70  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 37389   007C72  B4D8               	btfsc	status,2,c
 37390   007C74  EF3E  F03E         	goto	u5491
 37391   007C78  EF40  F03E         	goto	u5490
 37392   007C7C                     u5491:
 37393   007C7C  EF5A  F03E         	goto	l746
 37394   007C80                     u5490:
 37395   007C80  0E64               	movlw	100
 37396   007C82  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 37397   007C84  EF46  F03E         	goto	u5501
 37398   007C88  EF48  F03E         	goto	u5500
 37399   007C8C                     u5501:
 37400   007C8C  EF5A  F03E         	goto	l746
 37401   007C90                     u5500:
 37402   007C90                     
 37403                           ;../../VLCBlib_PIC/can18_can_2.c: 898:         canId = newCanId;
 37404   007C90  C515  F5A8         	movff	setNewCanId@newCanId,_canId
 37405   007C94                     
 37406                           ;../../VLCBlib_PIC/can18_can_2.c: 900:         prepareSelfEnumResponse();
 37407   007C94  EC9C  F039         	call	_prepareSelfEnumResponse	;wreg free
 37408                           
 37409                           ;../../VLCBlib_PIC/can18_can_2.c: 901:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 37410   007C98  0EFE               	movlw	254
 37411   007C9A  6E0E               	movwf	writeNVM@index^(0+1280),c
 37412   007C9C  0E03               	movlw	3
 37413   007C9E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37414   007CA0  0E00               	movlw	0
 37415   007CA2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37416   007CA4  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 37417   007CA8  0E00               	movlw	0
 37418   007CAA  EC64  F03C         	call	_writeNVM
 37419   007CAE                     
 37420                           ;../../VLCBlib_PIC/can18_can_2.c: 903:         canDiagnostics[0x0F].asUint++;
 37421   007CAE  0106               	movlb	6	; () banked
 37422   007CB0  4BAC               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 37423   007CB2  2BAD               	incf	(_canDiagnostics+31)& (0+255),f,b
 37424   007CB4                     l746:
 37425   007CB4  0012               	return		;funcret
 37426   007CB6                     __end_of_setNewCanId:
 37427                           	callstack 0
 37428                           
 37429 ;; *************** function _prepareSelfEnumResponse *****************
 37430 ;; Defined at:
 37431 ;;		line 389 in file "../../VLCBlib_PIC/can18_can_2.c"
 37432 ;; Parameters:    Size  Location     Type
 37433 ;;		None
 37434 ;; Auto vars:     Size  Location     Type
 37435 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37436 ;;		 -> RAM(16383), 
 37437 ;; Return value:  Size  Location     Type
 37438 ;;                  1    wreg      void 
 37439 ;; Registers used:
 37440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37441 ;; Tracked objects:
 37442 ;;		On entry : 0/0
 37443 ;;		On exit  : 0/0
 37444 ;;		Unchanged: 0/0
 37445 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37450 ;;Total ram usage:        2 bytes
 37451 ;; Hardware stack levels used: 1
 37452 ;; Hardware stack levels required when called: 1
 37453 ;; This function calls:
 37454 ;;		Nothing
 37455 ;; This function is called by:
 37456 ;;		_canPowerUp
 37457 ;;		_setNewCanId
 37458 ;; This function uses a non-reentrant model
 37459 ;;
 37460                           
 37461                           	psect	text98
 37462   007338                     __ptext98:
 37463                           	callstack 0
 37464   007338                     _prepareSelfEnumResponse:
 37465                           	callstack 123
 37466   007338                     
 37467                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 37468   007338  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 37469   00733C  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 37470                           
 37471                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37472   007340  EFCF  F039         	goto	l7911
 37473   007344                     l7907:
 37474                           
 37475                           ; BSR set to: 1
 37476                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[0] = (canId & 0x7F);
 37477   007344  0105               	movlb	5	; () banked
 37478   007346  51A8               	movf	_canId& (0+255),w,b
 37479   007348  0B7F               	andlw	127
 37480   00734A  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 37481   00734E  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 37482   007352  6EDF               	movwf	indf2,c
 37483                           
 37484                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[1] = 0;
 37485   007354  EE20 F001          	lfsr	2,1
 37486   007358  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37487   00735A  26D9               	addwf	fsr2l,f,c
 37488   00735C  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37489   00735E  22DA               	addwfc	fsr2h,f,c
 37490   007360  6ADF               	clrf	indf2,c
 37491                           
 37492                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[4] = 0;
 37493   007362  EE20 F004          	lfsr	2,4
 37494   007366  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37495   007368  26D9               	addwf	fsr2l,f,c
 37496   00736A  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37497   00736C  22DA               	addwfc	fsr2h,f,c
 37498   00736E  6ADF               	clrf	indf2,c
 37499                           
 37500                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[5] = 0;
 37501   007370  EE20 F005          	lfsr	2,5
 37502   007374  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37503   007376  26D9               	addwf	fsr2l,f,c
 37504   007378  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37505   00737A  22DA               	addwfc	fsr2h,f,c
 37506   00737C  6ADF               	clrf	indf2,c
 37507                           
 37508                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         txFifoObj[6] = 0;
 37509   00737E  EE20 F006          	lfsr	2,6
 37510   007382  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37511   007384  26D9               	addwf	fsr2l,f,c
 37512   007386  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37513   007388  22DA               	addwfc	fsr2h,f,c
 37514   00738A  6ADF               	clrf	indf2,c
 37515                           
 37516                           ;../../VLCBlib_PIC/can18_can_2.c: 399:         txFifoObj[7] = 0;
 37517   00738C  EE20 F007          	lfsr	2,7
 37518   007390  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37519   007392  26D9               	addwf	fsr2l,f,c
 37520   007394  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37521   007396  22DA               	addwfc	fsr2h,f,c
 37522   007398  6ADF               	clrf	indf2,c
 37523   00739A                     
 37524                           ; BSR set to: 5
 37525                           ;../../VLCBlib_PIC/can18_can_2.c: 400:         C1FIFOCON1Hbits.UINC = 1;
 37526   00739A  0101               	movlb	1	; () banked
 37527   00739C  815D               	bsf	93,0,b	;volatile
 37528   00739E                     l7911:
 37529                           
 37530                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37531   00739E  0101               	movlb	1	; () banked
 37532   0073A0  B160               	btfsc	96,0,b	;volatile
 37533   0073A2  EFD5  F039         	goto	u5211
 37534   0073A6  EFD7  F039         	goto	u5210
 37535   0073AA                     u5211:
 37536   0073AA  EFA2  F039         	goto	l7907
 37537   0073AE                     u5210:
 37538   0073AE                     
 37539                           ; BSR set to: 1
 37540   0073AE  0012               	return		;funcret
 37541   0073B0                     __end_of_prepareSelfEnumResponse:
 37542                           	callstack 0
 37543                           
 37544 ;; *************** function _APP_preProcessMessage *****************
 37545 ;; Defined at:
 37546 ;;		line 73 in file "../canargb_events.c"
 37547 ;; Parameters:    Size  Location     Type
 37548 ;;  m               2    0[COMRAM] PTR struct Message
 37549 ;;		 -> poll@m(9), 
 37550 ;; Auto vars:     Size  Location     Type
 37551 ;;		None
 37552 ;; Return value:  Size  Location     Type
 37553 ;;                  1    wreg      enum E23290
 37554 ;; Registers used:
 37555 ;;		wreg
 37556 ;; Tracked objects:
 37557 ;;		On entry : 0/0
 37558 ;;		On exit  : 0/0
 37559 ;;		Unchanged: 0/0
 37560 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37565 ;;Total ram usage:        2 bytes
 37566 ;; Hardware stack levels used: 1
 37567 ;; Hardware stack levels required when called: 1
 37568 ;; This function calls:
 37569 ;;		Nothing
 37570 ;; This function is called by:
 37571 ;;		_poll
 37572 ;; This function uses a non-reentrant model
 37573 ;;
 37574                           
 37575                           	psect	text99
 37576   0083A2                     __ptext99:
 37577                           	callstack 0
 37578   0083A2                     _APP_preProcessMessage:
 37579                           	callstack 124
 37580   0083A2                     
 37581                           ;../canargb_events.c: 74:     return NOT_PROCESSED;
 37582   0083A2  0E00               	movlw	0
 37583   0083A4  0012               	return		;funcret
 37584   0083A6                     __end_of_APP_preProcessMessage:
 37585                           	callstack 0
 37586                           
 37587 ;; *************** function _APP_postProcessMessage *****************
 37588 ;; Defined at:
 37589 ;;		line 79 in file "../canargb_events.c"
 37590 ;; Parameters:    Size  Location     Type
 37591 ;;  m               2    0[COMRAM] PTR struct Message
 37592 ;;		 -> poll@m(9), 
 37593 ;; Auto vars:     Size  Location     Type
 37594 ;;		None
 37595 ;; Return value:  Size  Location     Type
 37596 ;;                  1    wreg      enum E23290
 37597 ;; Registers used:
 37598 ;;		wreg
 37599 ;; Tracked objects:
 37600 ;;		On entry : 0/0
 37601 ;;		On exit  : 0/0
 37602 ;;		Unchanged: 0/0
 37603 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37608 ;;Total ram usage:        2 bytes
 37609 ;; Hardware stack levels used: 1
 37610 ;; Hardware stack levels required when called: 1
 37611 ;; This function calls:
 37612 ;;		Nothing
 37613 ;; This function is called by:
 37614 ;;		_poll
 37615 ;; This function uses a non-reentrant model
 37616 ;;
 37617                           
 37618                           	psect	text100
 37619   0083A6                     __ptext100:
 37620                           	callstack 0
 37621   0083A6                     _APP_postProcessMessage:
 37622                           	callstack 124
 37623   0083A6                     
 37624                           ;../canargb_events.c: 80:     return NOT_PROCESSED;
 37625   0083A6  0E00               	movlw	0
 37626   0083A8  0012               	return		;funcret
 37627   0083AA                     __end_of_APP_postProcessMessage:
 37628                           	callstack 0
 37629                           
 37630 ;; *************** function _loop *****************
 37631 ;; Defined at:
 37632 ;;		line 265 in file "../main.c"
 37633 ;; Parameters:    Size  Location     Type
 37634 ;;		None
 37635 ;; Auto vars:     Size  Location     Type
 37636 ;;		None
 37637 ;; Return value:  Size  Location     Type
 37638 ;;                  1    wreg      void 
 37639 ;; Registers used:
 37640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37641 ;; Tracked objects:
 37642 ;;		On entry : 0/0
 37643 ;;		On exit  : 0/0
 37644 ;;		Unchanged: 0/0
 37645 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37650 ;;Total ram usage:        4 bytes
 37651 ;; Hardware stack levels used: 1
 37652 ;; Hardware stack levels required when called: 3
 37653 ;; This function calls:
 37654 ;;		_doFlash
 37655 ;;		_refreshString
 37656 ;;		_tickGet
 37657 ;; This function is called by:
 37658 ;;		_main
 37659 ;; This function uses a non-reentrant model
 37660 ;;
 37661                           
 37662                           	psect	text101
 37663   0079E4                     __ptext101:
 37664                           	callstack 0
 37665   0079E4                     _loop:
 37666                           	callstack 123
 37667   0079E4                     
 37668                           ;../main.c: 267:     if ((tickGet() - flashTime.val) > (62500/2)) {
 37669   0079E4  EC14  F03A         	call	_tickGet	;wreg free
 37670   0079E8  0105               	movlb	5	; () banked
 37671   0079EA  5180               	movf	_flashTime& (0+255),w,b
 37672   0079EC  5C01               	subwf	?_tickGet^(0+1280),w,c
 37673   0079EE  6E0B               	movwf	??_loop^(0+1280),c
 37674   0079F0  5181               	movf	(_flashTime+1)& (0+255),w,b
 37675   0079F2  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 37676   0079F4  6E0C               	movwf	(??_loop+1)^(0+1280),c
 37677   0079F6  5182               	movf	(_flashTime+2)& (0+255),w,b
 37678   0079F8  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 37679   0079FA  6E0D               	movwf	(??_loop+2)^(0+1280),c
 37680   0079FC  5183               	movf	(_flashTime+3)& (0+255),w,b
 37681   0079FE  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 37682   007A00  6E0E               	movwf	(??_loop+3)^(0+1280),c
 37683   007A02  500E               	movf	(??_loop+3)^(0+1280),w,c
 37684   007A04  100D               	iorwf	(??_loop+2)^(0+1280),w,c
 37685   007A06  E10B               	bnz	u8340
 37686   007A08  0E13               	movlw	19
 37687   007A0A  5C0B               	subwf	??_loop^(0+1280),w,c
 37688   007A0C  0E7A               	movlw	122
 37689   007A0E  580C               	subwfb	(??_loop+1)^(0+1280),w,c
 37690   007A10  A0D8               	btfss	status,0,c
 37691   007A12  EF0D  F03D         	goto	u8341
 37692   007A16  EF0F  F03D         	goto	u8340
 37693   007A1A                     u8341:
 37694   007A1A  EF1B  F03D         	goto	l11079
 37695   007A1E                     u8340:
 37696   007A1E                     
 37697                           ; BSR set to: 5
 37698                           ;../main.c: 268:         doFlash();
 37699   007A1E  EC68  F00F         	call	_doFlash	;wreg free
 37700   007A22                     
 37701                           ;../main.c: 269:         flashTime.val = tickGet();
 37702   007A22  EC14  F03A         	call	_tickGet	;wreg free
 37703   007A26  C501  F580         	movff	?_tickGet,_flashTime
 37704   007A2A  C502  F581         	movff	?_tickGet+1,_flashTime+1
 37705   007A2E  C503  F582         	movff	?_tickGet+2,_flashTime+2
 37706   007A32  C504  F583         	movff	?_tickGet+3,_flashTime+3
 37707   007A36                     l11079:
 37708                           
 37709                           ;../main.c: 272:     refreshString();
 37710   007A36  EC9B  F03B         	call	_refreshString	;wreg free
 37711   007A3A  0012               	return		;funcret
 37712   007A3C                     __end_of_loop:
 37713                           	callstack 0
 37714                           
 37715 ;; *************** function _refreshString *****************
 37716 ;; Defined at:
 37717 ;;		line 383 in file "../canargb_leds.c"
 37718 ;; Parameters:    Size  Location     Type
 37719 ;;		None
 37720 ;; Auto vars:     Size  Location     Type
 37721 ;;  offset          2    0[COMRAM] unsigned short 
 37722 ;; Return value:  Size  Location     Type
 37723 ;;                  1    wreg      void 
 37724 ;; Registers used:
 37725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37726 ;; Tracked objects:
 37727 ;;		On entry : 0/0
 37728 ;;		On exit  : 0/0
 37729 ;;		Unchanged: 0/0
 37730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37735 ;;Total ram usage:        2 bytes
 37736 ;; Hardware stack levels used: 1
 37737 ;; Hardware stack levels required when called: 1
 37738 ;; This function calls:
 37739 ;;		Nothing
 37740 ;; This function is called by:
 37741 ;;		_setup
 37742 ;;		_loop
 37743 ;; This function uses a non-reentrant model
 37744 ;;
 37745                           
 37746                           	psect	text102
 37747   007736                     __ptext102:
 37748                           	callstack 0
 37749   007736                     _refreshString:
 37750                           	callstack 124
 37751   007736                     
 37752                           ;../canargb_leds.c: 384:     uint16_t offset;;../canargb_leds.c: 389:     if (refreshReq
      +                          uired) {
 37753   007736  0105               	movlb	5	; () banked
 37754   007738  51AB               	movf	_refreshRequired& (0+255),w,b
 37755   00773A  B4D8               	btfsc	status,2,c
 37756   00773C  EFA2  F03B         	goto	u6711
 37757   007740  EFA4  F03B         	goto	u6710
 37758   007744                     u6711:
 37759   007744  EFCE  F03B         	goto	l291
 37760   007748                     u6710:
 37761   007748                     
 37762                           ; BSR set to: 5
 37763                           ;../canargb_leds.c: 390:         refreshRequired = 0;
 37764   007748  6BAB               	clrf	_refreshRequired& (0+255),b
 37765   00774A                     
 37766                           ; BSR set to: 5
 37767                           ;../canargb_leds.c: 393:         offset = 0;
 37768   00774A  0E00               	movlw	0
 37769   00774C  6E02               	movwf	(refreshString@offset+1)^(0+1280),c
 37770   00774E  0E00               	movlw	0
 37771   007750  6E01               	movwf	refreshString@offset^(0+1280),c
 37772                           
 37773                           ;../canargb_leds.c: 394:         while (offset < 3*255) {
 37774   007752  EFBD  F03B         	goto	l9441
 37775   007756                     l288:
 37776                           
 37777                           ;../canargb_leds.c: 395:             if (PIR3bits.SPI1TXIF) {
 37778   007756  A2B1               	btfss	177,1,c	;volatile
 37779   007758  EFB0  F03B         	goto	u6721
 37780   00775C  EFB2  F03B         	goto	u6720
 37781   007760                     u6721:
 37782   007760  EFBD  F03B         	goto	l9441
 37783   007764                     u6720:
 37784   007764                     
 37785                           ;../canargb_leds.c: 396:                 SPI1TXB = *(offset+(uint8_t *)leds);
 37786   007764  0E7C               	movlw	low _leds
 37787   007766  2401               	addwf	refreshString@offset^(0+1280),w,c
 37788   007768  6ED9               	movwf	fsr2l,c
 37789   00776A  0E0B               	movlw	high _leds
 37790   00776C  2002               	addwfc	(refreshString@offset+1)^(0+1280),w,c
 37791   00776E  6EDA               	movwf	fsr2h,c
 37792   007770  50DF               	movf	indf2,w,c
 37793   007772  0100               	movlb	0	; () banked
 37794   007774  6F81               	movwf	129,b	;volatile
 37795   007776                     
 37796                           ; BSR set to: 0
 37797                           ;../canargb_leds.c: 397:                 offset++;
 37798   007776  4A01               	infsnz	refreshString@offset^(0+1280),f,c
 37799   007778  2A02               	incf	(refreshString@offset+1)^(0+1280),f,c
 37800   00777A                     l9441:
 37801                           
 37802                           ;../canargb_leds.c: 394:         while (offset < 3*255) {
 37803   00777A  0EFD               	movlw	253
 37804   00777C  5C01               	subwf	refreshString@offset^(0+1280),w,c
 37805   00777E  0E02               	movlw	2
 37806   007780  5802               	subwfb	(refreshString@offset+1)^(0+1280),w,c
 37807   007782  A0D8               	btfss	status,0,c
 37808   007784  EFC6  F03B         	goto	u6731
 37809   007788  EFC8  F03B         	goto	u6730
 37810   00778C                     u6731:
 37811   00778C  EFAB  F03B         	goto	l288
 37812   007790                     u6730:
 37813   007790                     
 37814                           ;../canargb_leds.c: 409: LATCbits.LATC6 = flashState;
 37815   007790  0105               	movlb	5	; () banked
 37816   007792  B1AC               	btfsc	_flashState& (0+255),0,b
 37817   007794  D002               	bra	u6745
 37818   007796  9CC0               	bcf	192,6,c	;volatile
 37819   007798  D001               	bra	u6746
 37820   00779A                     u6745:
 37821   00779A  8CC0               	bsf	192,6,c	;volatile
 37822   00779C                     u6746:
 37823   00779C                     l291:
 37824   00779C  0012               	return		;funcret
 37825   00779E                     __end_of_refreshString:
 37826                           	callstack 0
 37827                           
 37828 ;; *************** function _doFlash *****************
 37829 ;; Defined at:
 37830 ;;		line 294 in file "../canargb_leds.c"
 37831 ;; Parameters:    Size  Location     Type
 37832 ;;		None
 37833 ;; Auto vars:     Size  Location     Type
 37834 ;;  ledno           1    5[COMRAM] unsigned char 
 37835 ;;  order           1    4[COMRAM] unsigned char 
 37836 ;; Return value:  Size  Location     Type
 37837 ;;                  1    wreg      void 
 37838 ;; Registers used:
 37839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37840 ;; Tracked objects:
 37841 ;;		On entry : 0/0
 37842 ;;		On exit  : 0/0
 37843 ;;		Unchanged: 0/0
 37844 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37849 ;;Total ram usage:        2 bytes
 37850 ;; Hardware stack levels used: 1
 37851 ;; Hardware stack levels required when called: 2
 37852 ;; This function calls:
 37853 ;;		_getNV
 37854 ;; This function is called by:
 37855 ;;		_setup
 37856 ;;		_loop
 37857 ;; This function uses a non-reentrant model
 37858 ;;
 37859                           
 37860                           	psect	text103
 37861   001ED0                     __ptext103:
 37862                           	callstack 0
 37863   001ED0                     _doFlash:
 37864                           	callstack 123
 37865   001ED0                     
 37866                           ;../canargb_leds.c: 295:     uint8_t ledno;;../canargb_leds.c: 296:     uint8_t order;;.
      +                          ./canargb_leds.c: 298:     flashState = 1-flashState;
 37867   001ED0  0105               	movlb	5	; () banked
 37868   001ED2  51AC               	movf	_flashState& (0+255),w,b
 37869   001ED4  0801               	sublw	1
 37870   001ED6  6FAC               	movwf	_flashState& (0+255),b
 37871   001ED8                     
 37872                           ; BSR set to: 5
 37873                           ;../canargb_leds.c: 299:     order = (uint8_t)getNV(49);
 37874   001ED8  0E31               	movlw	49
 37875   001EDA  EC73  F03D         	call	_getNV
 37876   001EDE  5001               	movf	?_getNV^(0+1280),w,c
 37877   001EE0  6E05               	movwf	doFlash@order^(0+1280),c
 37878   001EE2                     
 37879                           ;../canargb_leds.c: 301:     for (ledno=0; ledno < 255; ledno++) {
 37880   001EE2  6A06               	clrf	doFlash@ledno^(0+1280),c
 37881   001EE4                     l9389:
 37882                           
 37883                           ;../canargb_leds.c: 302:         if (flashState) {
 37884   001EE4  0105               	movlb	5	; () banked
 37885   001EE6  51AC               	movf	_flashState& (0+255),w,b
 37886   001EE8  B4D8               	btfsc	status,2,c
 37887   001EEA  EF79  F00F         	goto	u6691
 37888   001EEE  EF7B  F00F         	goto	u6690
 37889   001EF2                     u6691:
 37890   001EF2  EFDC  F012         	goto	l9423
 37891   001EF6                     u6690:
 37892   001EF6  EF21  F011         	goto	l9407
 37893   001EFA                     l9393:
 37894                           
 37895                           ; BSR set to: 5
 37896                           ;../canargb_leds.c: 305:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37897   001EFA  0E00               	movlw	low _ledPaletteIndexes
 37898   001EFC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37899   001EFE  6ED9               	movwf	fsr2l,c
 37900   001F00  6ADA               	clrf	fsr2h,c
 37901   001F02  0E07               	movlw	high _ledPaletteIndexes
 37902   001F04  22DA               	addwfc	fsr2h,f,c
 37903   001F06  50DF               	movf	223,w,c
 37904   001F08  0B0F               	andlw	15
 37905   001F0A  0D03               	mullw	3
 37906   001F0C  28F3               	incf	243,w,c
 37907   001F0E  EC73  F03D         	call	_getNV
 37908   001F12  5006               	movf	doFlash@ledno^(0+1280),w,c
 37909   001F14  0D03               	mullw	3
 37910   001F16  0E7C               	movlw	low _leds
 37911   001F18  24F3               	addwf	243,w,c
 37912   001F1A  6ED9               	movwf	fsr2l,c
 37913   001F1C  0E0B               	movlw	high _leds
 37914   001F1E  20F4               	addwfc	prodh,w,c
 37915   001F20  6EDA               	movwf	fsr2h,c
 37916   001F22  C501  F4DF         	movff	?_getNV,indf2
 37917                           
 37918                           ;../canargb_leds.c: 306:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37919   001F26  0E00               	movlw	low _ledPaletteIndexes
 37920   001F28  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37921   001F2A  6ED9               	movwf	fsr2l,c
 37922   001F2C  6ADA               	clrf	fsr2h,c
 37923   001F2E  0E07               	movlw	high _ledPaletteIndexes
 37924   001F30  22DA               	addwfc	fsr2h,f,c
 37925   001F32  50DF               	movf	223,w,c
 37926   001F34  0B0F               	andlw	15
 37927   001F36  0D03               	mullw	3
 37928   001F38  50F3               	movf	243,w,c
 37929   001F3A  0F02               	addlw	2
 37930   001F3C  EC73  F03D         	call	_getNV
 37931   001F40  5006               	movf	doFlash@ledno^(0+1280),w,c
 37932   001F42  0D03               	mullw	3
 37933   001F44  0E7D               	movlw	low (_leds+1)
 37934   001F46  24F3               	addwf	243,w,c
 37935   001F48  6ED9               	movwf	fsr2l,c
 37936   001F4A  0E0B               	movlw	high (_leds+1)
 37937   001F4C  20F4               	addwfc	prodh,w,c
 37938   001F4E  6EDA               	movwf	fsr2h,c
 37939   001F50  C501  F4DF         	movff	?_getNV,indf2
 37940                           
 37941                           ;../canargb_leds.c: 307:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37942   001F54  0E00               	movlw	low _ledPaletteIndexes
 37943   001F56  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37944   001F58  6ED9               	movwf	fsr2l,c
 37945   001F5A  6ADA               	clrf	fsr2h,c
 37946   001F5C  0E07               	movlw	high _ledPaletteIndexes
 37947   001F5E  22DA               	addwfc	fsr2h,f,c
 37948   001F60  50DF               	movf	223,w,c
 37949   001F62  0B0F               	andlw	15
 37950   001F64  0D03               	mullw	3
 37951   001F66  50F3               	movf	243,w,c
 37952   001F68  0F03               	addlw	3
 37953   001F6A  EC73  F03D         	call	_getNV
 37954   001F6E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37955   001F70  0D03               	mullw	3
 37956   001F72  0E7E               	movlw	low (_leds+2)
 37957   001F74  24F3               	addwf	243,w,c
 37958   001F76  6ED9               	movwf	fsr2l,c
 37959   001F78  0E0B               	movlw	high (_leds+2)
 37960   001F7A  20F4               	addwfc	prodh,w,c
 37961   001F7C  6EDA               	movwf	fsr2h,c
 37962   001F7E  C501  F4DF         	movff	?_getNV,indf2
 37963                           
 37964                           ;../canargb_leds.c: 308:                     break;
 37965   001F82  EFF3  F012         	goto	l9425
 37966   001F86                     l9395:
 37967                           
 37968                           ; BSR set to: 5
 37969                           ;../canargb_leds.c: 310:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37970   001F86  0E00               	movlw	low _ledPaletteIndexes
 37971   001F88  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37972   001F8A  6ED9               	movwf	fsr2l,c
 37973   001F8C  6ADA               	clrf	fsr2h,c
 37974   001F8E  0E07               	movlw	high _ledPaletteIndexes
 37975   001F90  22DA               	addwfc	fsr2h,f,c
 37976   001F92  50DF               	movf	223,w,c
 37977   001F94  0B0F               	andlw	15
 37978   001F96  0D03               	mullw	3
 37979   001F98  28F3               	incf	243,w,c
 37980   001F9A  EC73  F03D         	call	_getNV
 37981   001F9E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37982   001FA0  0D03               	mullw	3
 37983   001FA2  0E7C               	movlw	low _leds
 37984   001FA4  24F3               	addwf	243,w,c
 37985   001FA6  6ED9               	movwf	fsr2l,c
 37986   001FA8  0E0B               	movlw	high _leds
 37987   001FAA  20F4               	addwfc	prodh,w,c
 37988   001FAC  6EDA               	movwf	fsr2h,c
 37989   001FAE  C501  F4DF         	movff	?_getNV,indf2
 37990                           
 37991                           ;../canargb_leds.c: 311:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37992   001FB2  0E00               	movlw	low _ledPaletteIndexes
 37993   001FB4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37994   001FB6  6ED9               	movwf	fsr2l,c
 37995   001FB8  6ADA               	clrf	fsr2h,c
 37996   001FBA  0E07               	movlw	high _ledPaletteIndexes
 37997   001FBC  22DA               	addwfc	fsr2h,f,c
 37998   001FBE  50DF               	movf	223,w,c
 37999   001FC0  0B0F               	andlw	15
 38000   001FC2  0D03               	mullw	3
 38001   001FC4  50F3               	movf	243,w,c
 38002   001FC6  0F02               	addlw	2
 38003   001FC8  EC73  F03D         	call	_getNV
 38004   001FCC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38005   001FCE  0D03               	mullw	3
 38006   001FD0  0E7E               	movlw	low (_leds+2)
 38007   001FD2  24F3               	addwf	243,w,c
 38008   001FD4  6ED9               	movwf	fsr2l,c
 38009   001FD6  0E0B               	movlw	high (_leds+2)
 38010   001FD8  20F4               	addwfc	prodh,w,c
 38011   001FDA  6EDA               	movwf	fsr2h,c
 38012   001FDC  C501  F4DF         	movff	?_getNV,indf2
 38013                           
 38014                           ;../canargb_leds.c: 312:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38015   001FE0  0E00               	movlw	low _ledPaletteIndexes
 38016   001FE2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38017   001FE4  6ED9               	movwf	fsr2l,c
 38018   001FE6  6ADA               	clrf	fsr2h,c
 38019   001FE8  0E07               	movlw	high _ledPaletteIndexes
 38020   001FEA  22DA               	addwfc	fsr2h,f,c
 38021   001FEC  50DF               	movf	223,w,c
 38022   001FEE  0B0F               	andlw	15
 38023   001FF0  0D03               	mullw	3
 38024   001FF2  50F3               	movf	243,w,c
 38025   001FF4  0F03               	addlw	3
 38026   001FF6  EC73  F03D         	call	_getNV
 38027   001FFA  5006               	movf	doFlash@ledno^(0+1280),w,c
 38028   001FFC  0D03               	mullw	3
 38029   001FFE  0E7D               	movlw	low (_leds+1)
 38030   002000  24F3               	addwf	243,w,c
 38031   002002  6ED9               	movwf	fsr2l,c
 38032   002004  0E0B               	movlw	high (_leds+1)
 38033   002006  20F4               	addwfc	prodh,w,c
 38034   002008  6EDA               	movwf	fsr2h,c
 38035   00200A  C501  F4DF         	movff	?_getNV,indf2
 38036                           
 38037                           ;../canargb_leds.c: 313:                     break;
 38038   00200E  EFF3  F012         	goto	l9425
 38039   002012                     l9397:
 38040                           
 38041                           ; BSR set to: 5
 38042                           ;../canargb_leds.c: 315:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38043   002012  0E00               	movlw	low _ledPaletteIndexes
 38044   002014  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38045   002016  6ED9               	movwf	fsr2l,c
 38046   002018  6ADA               	clrf	fsr2h,c
 38047   00201A  0E07               	movlw	high _ledPaletteIndexes
 38048   00201C  22DA               	addwfc	fsr2h,f,c
 38049   00201E  50DF               	movf	223,w,c
 38050   002020  0B0F               	andlw	15
 38051   002022  0D03               	mullw	3
 38052   002024  28F3               	incf	243,w,c
 38053   002026  EC73  F03D         	call	_getNV
 38054   00202A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38055   00202C  0D03               	mullw	3
 38056   00202E  0E7E               	movlw	low (_leds+2)
 38057   002030  24F3               	addwf	243,w,c
 38058   002032  6ED9               	movwf	fsr2l,c
 38059   002034  0E0B               	movlw	high (_leds+2)
 38060   002036  20F4               	addwfc	prodh,w,c
 38061   002038  6EDA               	movwf	fsr2h,c
 38062   00203A  C501  F4DF         	movff	?_getNV,indf2
 38063                           
 38064                           ;../canargb_leds.c: 316:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38065   00203E  0E00               	movlw	low _ledPaletteIndexes
 38066   002040  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38067   002042  6ED9               	movwf	fsr2l,c
 38068   002044  6ADA               	clrf	fsr2h,c
 38069   002046  0E07               	movlw	high _ledPaletteIndexes
 38070   002048  22DA               	addwfc	fsr2h,f,c
 38071   00204A  50DF               	movf	223,w,c
 38072   00204C  0B0F               	andlw	15
 38073   00204E  0D03               	mullw	3
 38074   002050  50F3               	movf	243,w,c
 38075   002052  0F02               	addlw	2
 38076   002054  EC73  F03D         	call	_getNV
 38077   002058  5006               	movf	doFlash@ledno^(0+1280),w,c
 38078   00205A  0D03               	mullw	3
 38079   00205C  0E7C               	movlw	low _leds
 38080   00205E  24F3               	addwf	243,w,c
 38081   002060  6ED9               	movwf	fsr2l,c
 38082   002062  0E0B               	movlw	high _leds
 38083   002064  20F4               	addwfc	prodh,w,c
 38084   002066  6EDA               	movwf	fsr2h,c
 38085   002068  C501  F4DF         	movff	?_getNV,indf2
 38086                           
 38087                           ;../canargb_leds.c: 317:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38088   00206C  0E00               	movlw	low _ledPaletteIndexes
 38089   00206E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38090   002070  6ED9               	movwf	fsr2l,c
 38091   002072  6ADA               	clrf	fsr2h,c
 38092   002074  0E07               	movlw	high _ledPaletteIndexes
 38093   002076  22DA               	addwfc	fsr2h,f,c
 38094   002078  50DF               	movf	223,w,c
 38095   00207A  0B0F               	andlw	15
 38096   00207C  0D03               	mullw	3
 38097   00207E  50F3               	movf	243,w,c
 38098   002080  0F03               	addlw	3
 38099   002082  EC73  F03D         	call	_getNV
 38100   002086  5006               	movf	doFlash@ledno^(0+1280),w,c
 38101   002088  0D03               	mullw	3
 38102   00208A  0E7D               	movlw	low (_leds+1)
 38103   00208C  24F3               	addwf	243,w,c
 38104   00208E  6ED9               	movwf	fsr2l,c
 38105   002090  0E0B               	movlw	high (_leds+1)
 38106   002092  20F4               	addwfc	prodh,w,c
 38107   002094  6EDA               	movwf	fsr2h,c
 38108   002096  C501  F4DF         	movff	?_getNV,indf2
 38109                           
 38110                           ;../canargb_leds.c: 318:                     break;
 38111   00209A  EFF3  F012         	goto	l9425
 38112   00209E                     l9399:
 38113                           
 38114                           ; BSR set to: 5
 38115                           ;../canargb_leds.c: 320:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38116   00209E  0E00               	movlw	low _ledPaletteIndexes
 38117   0020A0  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38118   0020A2  6ED9               	movwf	fsr2l,c
 38119   0020A4  6ADA               	clrf	fsr2h,c
 38120   0020A6  0E07               	movlw	high _ledPaletteIndexes
 38121   0020A8  22DA               	addwfc	fsr2h,f,c
 38122   0020AA  50DF               	movf	223,w,c
 38123   0020AC  0B0F               	andlw	15
 38124   0020AE  0D03               	mullw	3
 38125   0020B0  28F3               	incf	243,w,c
 38126   0020B2  EC73  F03D         	call	_getNV
 38127   0020B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38128   0020B8  0D03               	mullw	3
 38129   0020BA  0E7D               	movlw	low (_leds+1)
 38130   0020BC  24F3               	addwf	243,w,c
 38131   0020BE  6ED9               	movwf	fsr2l,c
 38132   0020C0  0E0B               	movlw	high (_leds+1)
 38133   0020C2  20F4               	addwfc	prodh,w,c
 38134   0020C4  6EDA               	movwf	fsr2h,c
 38135   0020C6  C501  F4DF         	movff	?_getNV,indf2
 38136                           
 38137                           ;../canargb_leds.c: 321:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38138   0020CA  0E00               	movlw	low _ledPaletteIndexes
 38139   0020CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38140   0020CE  6ED9               	movwf	fsr2l,c
 38141   0020D0  6ADA               	clrf	fsr2h,c
 38142   0020D2  0E07               	movlw	high _ledPaletteIndexes
 38143   0020D4  22DA               	addwfc	fsr2h,f,c
 38144   0020D6  50DF               	movf	223,w,c
 38145   0020D8  0B0F               	andlw	15
 38146   0020DA  0D03               	mullw	3
 38147   0020DC  50F3               	movf	243,w,c
 38148   0020DE  0F02               	addlw	2
 38149   0020E0  EC73  F03D         	call	_getNV
 38150   0020E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38151   0020E6  0D03               	mullw	3
 38152   0020E8  0E7E               	movlw	low (_leds+2)
 38153   0020EA  24F3               	addwf	243,w,c
 38154   0020EC  6ED9               	movwf	fsr2l,c
 38155   0020EE  0E0B               	movlw	high (_leds+2)
 38156   0020F0  20F4               	addwfc	prodh,w,c
 38157   0020F2  6EDA               	movwf	fsr2h,c
 38158   0020F4  C501  F4DF         	movff	?_getNV,indf2
 38159                           
 38160                           ;../canargb_leds.c: 322:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38161   0020F8  0E00               	movlw	low _ledPaletteIndexes
 38162   0020FA  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38163   0020FC  6ED9               	movwf	fsr2l,c
 38164   0020FE  6ADA               	clrf	fsr2h,c
 38165   002100  0E07               	movlw	high _ledPaletteIndexes
 38166   002102  22DA               	addwfc	fsr2h,f,c
 38167   002104  50DF               	movf	223,w,c
 38168   002106  0B0F               	andlw	15
 38169   002108  0D03               	mullw	3
 38170   00210A  50F3               	movf	243,w,c
 38171   00210C  0F03               	addlw	3
 38172   00210E  EC73  F03D         	call	_getNV
 38173   002112  5006               	movf	doFlash@ledno^(0+1280),w,c
 38174   002114  0D03               	mullw	3
 38175   002116  0E7C               	movlw	low _leds
 38176   002118  24F3               	addwf	243,w,c
 38177   00211A  6ED9               	movwf	fsr2l,c
 38178   00211C  0E0B               	movlw	high _leds
 38179   00211E  20F4               	addwfc	prodh,w,c
 38180   002120  6EDA               	movwf	fsr2h,c
 38181   002122  C501  F4DF         	movff	?_getNV,indf2
 38182                           
 38183                           ;../canargb_leds.c: 323:                     break;
 38184   002126  EFF3  F012         	goto	l9425
 38185   00212A                     l9401:
 38186                           
 38187                           ; BSR set to: 5
 38188                           ;../canargb_leds.c: 325:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38189   00212A  0E00               	movlw	low _ledPaletteIndexes
 38190   00212C  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38191   00212E  6ED9               	movwf	fsr2l,c
 38192   002130  6ADA               	clrf	fsr2h,c
 38193   002132  0E07               	movlw	high _ledPaletteIndexes
 38194   002134  22DA               	addwfc	fsr2h,f,c
 38195   002136  50DF               	movf	223,w,c
 38196   002138  0B0F               	andlw	15
 38197   00213A  0D03               	mullw	3
 38198   00213C  28F3               	incf	243,w,c
 38199   00213E  EC73  F03D         	call	_getNV
 38200   002142  5006               	movf	doFlash@ledno^(0+1280),w,c
 38201   002144  0D03               	mullw	3
 38202   002146  0E7E               	movlw	low (_leds+2)
 38203   002148  24F3               	addwf	243,w,c
 38204   00214A  6ED9               	movwf	fsr2l,c
 38205   00214C  0E0B               	movlw	high (_leds+2)
 38206   00214E  20F4               	addwfc	prodh,w,c
 38207   002150  6EDA               	movwf	fsr2h,c
 38208   002152  C501  F4DF         	movff	?_getNV,indf2
 38209                           
 38210                           ;../canargb_leds.c: 326:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38211   002156  0E00               	movlw	low _ledPaletteIndexes
 38212   002158  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38213   00215A  6ED9               	movwf	fsr2l,c
 38214   00215C  6ADA               	clrf	fsr2h,c
 38215   00215E  0E07               	movlw	high _ledPaletteIndexes
 38216   002160  22DA               	addwfc	fsr2h,f,c
 38217   002162  50DF               	movf	223,w,c
 38218   002164  0B0F               	andlw	15
 38219   002166  0D03               	mullw	3
 38220   002168  50F3               	movf	243,w,c
 38221   00216A  0F02               	addlw	2
 38222   00216C  EC73  F03D         	call	_getNV
 38223   002170  5006               	movf	doFlash@ledno^(0+1280),w,c
 38224   002172  0D03               	mullw	3
 38225   002174  0E7D               	movlw	low (_leds+1)
 38226   002176  24F3               	addwf	243,w,c
 38227   002178  6ED9               	movwf	fsr2l,c
 38228   00217A  0E0B               	movlw	high (_leds+1)
 38229   00217C  20F4               	addwfc	prodh,w,c
 38230   00217E  6EDA               	movwf	fsr2h,c
 38231   002180  C501  F4DF         	movff	?_getNV,indf2
 38232                           
 38233                           ;../canargb_leds.c: 327:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38234   002184  0E00               	movlw	low _ledPaletteIndexes
 38235   002186  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38236   002188  6ED9               	movwf	fsr2l,c
 38237   00218A  6ADA               	clrf	fsr2h,c
 38238   00218C  0E07               	movlw	high _ledPaletteIndexes
 38239   00218E  22DA               	addwfc	fsr2h,f,c
 38240   002190  50DF               	movf	223,w,c
 38241   002192  0B0F               	andlw	15
 38242   002194  0D03               	mullw	3
 38243   002196  50F3               	movf	243,w,c
 38244   002198  0F03               	addlw	3
 38245   00219A  EC73  F03D         	call	_getNV
 38246   00219E  5006               	movf	doFlash@ledno^(0+1280),w,c
 38247   0021A0  0D03               	mullw	3
 38248   0021A2  0E7C               	movlw	low _leds
 38249   0021A4  24F3               	addwf	243,w,c
 38250   0021A6  6ED9               	movwf	fsr2l,c
 38251   0021A8  0E0B               	movlw	high _leds
 38252   0021AA  20F4               	addwfc	prodh,w,c
 38253   0021AC  6EDA               	movwf	fsr2h,c
 38254   0021AE  C501  F4DF         	movff	?_getNV,indf2
 38255                           
 38256                           ;../canargb_leds.c: 328:                     break;
 38257   0021B2  EFF3  F012         	goto	l9425
 38258   0021B6                     l9403:
 38259                           
 38260                           ; BSR set to: 5
 38261                           ;../canargb_leds.c: 330:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38262   0021B6  0E00               	movlw	low _ledPaletteIndexes
 38263   0021B8  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38264   0021BA  6ED9               	movwf	fsr2l,c
 38265   0021BC  6ADA               	clrf	fsr2h,c
 38266   0021BE  0E07               	movlw	high _ledPaletteIndexes
 38267   0021C0  22DA               	addwfc	fsr2h,f,c
 38268   0021C2  50DF               	movf	223,w,c
 38269   0021C4  0B0F               	andlw	15
 38270   0021C6  0D03               	mullw	3
 38271   0021C8  28F3               	incf	243,w,c
 38272   0021CA  EC73  F03D         	call	_getNV
 38273   0021CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38274   0021D0  0D03               	mullw	3
 38275   0021D2  0E7D               	movlw	low (_leds+1)
 38276   0021D4  24F3               	addwf	243,w,c
 38277   0021D6  6ED9               	movwf	fsr2l,c
 38278   0021D8  0E0B               	movlw	high (_leds+1)
 38279   0021DA  20F4               	addwfc	prodh,w,c
 38280   0021DC  6EDA               	movwf	fsr2h,c
 38281   0021DE  C501  F4DF         	movff	?_getNV,indf2
 38282                           
 38283                           ;../canargb_leds.c: 331:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38284   0021E2  0E00               	movlw	low _ledPaletteIndexes
 38285   0021E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38286   0021E6  6ED9               	movwf	fsr2l,c
 38287   0021E8  6ADA               	clrf	fsr2h,c
 38288   0021EA  0E07               	movlw	high _ledPaletteIndexes
 38289   0021EC  22DA               	addwfc	fsr2h,f,c
 38290   0021EE  50DF               	movf	223,w,c
 38291   0021F0  0B0F               	andlw	15
 38292   0021F2  0D03               	mullw	3
 38293   0021F4  50F3               	movf	243,w,c
 38294   0021F6  0F02               	addlw	2
 38295   0021F8  EC73  F03D         	call	_getNV
 38296   0021FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38297   0021FE  0D03               	mullw	3
 38298   002200  0E7C               	movlw	low _leds
 38299   002202  24F3               	addwf	243,w,c
 38300   002204  6ED9               	movwf	fsr2l,c
 38301   002206  0E0B               	movlw	high _leds
 38302   002208  20F4               	addwfc	prodh,w,c
 38303   00220A  6EDA               	movwf	fsr2h,c
 38304   00220C  C501  F4DF         	movff	?_getNV,indf2
 38305                           
 38306                           ;../canargb_leds.c: 332:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38307   002210  0E00               	movlw	low _ledPaletteIndexes
 38308   002212  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38309   002214  6ED9               	movwf	fsr2l,c
 38310   002216  6ADA               	clrf	fsr2h,c
 38311   002218  0E07               	movlw	high _ledPaletteIndexes
 38312   00221A  22DA               	addwfc	fsr2h,f,c
 38313   00221C  50DF               	movf	223,w,c
 38314   00221E  0B0F               	andlw	15
 38315   002220  0D03               	mullw	3
 38316   002222  50F3               	movf	243,w,c
 38317   002224  0F03               	addlw	3
 38318   002226  EC73  F03D         	call	_getNV
 38319   00222A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38320   00222C  0D03               	mullw	3
 38321   00222E  0E7E               	movlw	low (_leds+2)
 38322   002230  24F3               	addwf	243,w,c
 38323   002232  6ED9               	movwf	fsr2l,c
 38324   002234  0E0B               	movlw	high (_leds+2)
 38325   002236  20F4               	addwfc	prodh,w,c
 38326   002238  6EDA               	movwf	fsr2h,c
 38327   00223A  C501  F4DF         	movff	?_getNV,indf2
 38328                           
 38329                           ;../canargb_leds.c: 333:                     break;
 38330   00223E  EFF3  F012         	goto	l9425
 38331   002242                     l9407:
 38332                           
 38333                           ; BSR set to: 5
 38334   002242  5005               	movf	doFlash@order^(0+1280),w,c
 38335                           
 38336                           ; Switch size 1, requested type "simple"
 38337                           ; Number of cases is 5, Range of values is 1 to 6
 38338                           ; switch strategies available:
 38339                           ; Name         Instructions Cycles
 38340                           ; simple_byte           16     9 (average)
 38341                           ;	Chosen strategy is simple_byte
 38342   002244  0A01               	xorlw	1	; case 1
 38343   002246  B4D8               	btfsc	status,2,c
 38344   002248  EF7D  F00F         	goto	l9393
 38345   00224C  0A03               	xorlw	3	; case 2
 38346   00224E  B4D8               	btfsc	status,2,c
 38347   002250  EFC3  F00F         	goto	l9395
 38348   002254  0A06               	xorlw	6	; case 4
 38349   002256  B4D8               	btfsc	status,2,c
 38350   002258  EF09  F010         	goto	l9397
 38351   00225C  0A01               	xorlw	1	; case 5
 38352   00225E  B4D8               	btfsc	status,2,c
 38353   002260  EF95  F010         	goto	l9401
 38354   002264  0A03               	xorlw	3	; case 6
 38355   002266  B4D8               	btfsc	status,2,c
 38356   002268  EF4F  F010         	goto	l9399
 38357   00226C  EFDB  F010         	goto	l9403
 38358   002270                     l9409:
 38359                           
 38360                           ; BSR set to: 5
 38361                           ;../canargb_leds.c: 339:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38362   002270  0E00               	movlw	low _ledPaletteIndexes
 38363   002272  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38364   002274  6ED9               	movwf	fsr2l,c
 38365   002276  6ADA               	clrf	fsr2h,c
 38366   002278  0E07               	movlw	high _ledPaletteIndexes
 38367   00227A  22DA               	addwfc	fsr2h,f,c
 38368   00227C  38DF               	swapf	223,w,c
 38369   00227E  0B0F               	andlw	15
 38370   002280  0D03               	mullw	3
 38371   002282  28F3               	incf	243,w,c
 38372   002284  EC73  F03D         	call	_getNV
 38373   002288  5006               	movf	doFlash@ledno^(0+1280),w,c
 38374   00228A  0D03               	mullw	3
 38375   00228C  0E7C               	movlw	low _leds
 38376   00228E  24F3               	addwf	243,w,c
 38377   002290  6ED9               	movwf	fsr2l,c
 38378   002292  0E0B               	movlw	high _leds
 38379   002294  20F4               	addwfc	prodh,w,c
 38380   002296  6EDA               	movwf	fsr2h,c
 38381   002298  C501  F4DF         	movff	?_getNV,indf2
 38382                           
 38383                           ;../canargb_leds.c: 340:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38384   00229C  0E00               	movlw	low _ledPaletteIndexes
 38385   00229E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38386   0022A0  6ED9               	movwf	fsr2l,c
 38387   0022A2  6ADA               	clrf	fsr2h,c
 38388   0022A4  0E07               	movlw	high _ledPaletteIndexes
 38389   0022A6  22DA               	addwfc	fsr2h,f,c
 38390   0022A8  38DF               	swapf	223,w,c
 38391   0022AA  0B0F               	andlw	15
 38392   0022AC  0D03               	mullw	3
 38393   0022AE  50F3               	movf	243,w,c
 38394   0022B0  0F02               	addlw	2
 38395   0022B2  EC73  F03D         	call	_getNV
 38396   0022B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38397   0022B8  0D03               	mullw	3
 38398   0022BA  0E7D               	movlw	low (_leds+1)
 38399   0022BC  24F3               	addwf	243,w,c
 38400   0022BE  6ED9               	movwf	fsr2l,c
 38401   0022C0  0E0B               	movlw	high (_leds+1)
 38402   0022C2  20F4               	addwfc	prodh,w,c
 38403   0022C4  6EDA               	movwf	fsr2h,c
 38404   0022C6  C501  F4DF         	movff	?_getNV,indf2
 38405                           
 38406                           ;../canargb_leds.c: 341:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38407   0022CA  0E00               	movlw	low _ledPaletteIndexes
 38408   0022CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38409   0022CE  6ED9               	movwf	fsr2l,c
 38410   0022D0  6ADA               	clrf	fsr2h,c
 38411   0022D2  0E07               	movlw	high _ledPaletteIndexes
 38412   0022D4  22DA               	addwfc	fsr2h,f,c
 38413   0022D6  38DF               	swapf	223,w,c
 38414   0022D8  0B0F               	andlw	15
 38415   0022DA  0D03               	mullw	3
 38416   0022DC  50F3               	movf	243,w,c
 38417   0022DE  0F03               	addlw	3
 38418   0022E0  EC73  F03D         	call	_getNV
 38419   0022E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38420   0022E6  0D03               	mullw	3
 38421   0022E8  0E7E               	movlw	low (_leds+2)
 38422   0022EA  24F3               	addwf	243,w,c
 38423   0022EC  6ED9               	movwf	fsr2l,c
 38424   0022EE  0E0B               	movlw	high (_leds+2)
 38425   0022F0  20F4               	addwfc	prodh,w,c
 38426   0022F2  6EDA               	movwf	fsr2h,c
 38427   0022F4  C501  F4DF         	movff	?_getNV,indf2
 38428                           
 38429                           ;../canargb_leds.c: 342:                     break;
 38430   0022F8  EFF3  F012         	goto	l9425
 38431   0022FC                     l9411:
 38432                           
 38433                           ; BSR set to: 5
 38434                           ;../canargb_leds.c: 344:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38435   0022FC  0E00               	movlw	low _ledPaletteIndexes
 38436   0022FE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38437   002300  6ED9               	movwf	fsr2l,c
 38438   002302  6ADA               	clrf	fsr2h,c
 38439   002304  0E07               	movlw	high _ledPaletteIndexes
 38440   002306  22DA               	addwfc	fsr2h,f,c
 38441   002308  38DF               	swapf	223,w,c
 38442   00230A  0B0F               	andlw	15
 38443   00230C  0D03               	mullw	3
 38444   00230E  28F3               	incf	243,w,c
 38445   002310  EC73  F03D         	call	_getNV
 38446   002314  5006               	movf	doFlash@ledno^(0+1280),w,c
 38447   002316  0D03               	mullw	3
 38448   002318  0E7C               	movlw	low _leds
 38449   00231A  24F3               	addwf	243,w,c
 38450   00231C  6ED9               	movwf	fsr2l,c
 38451   00231E  0E0B               	movlw	high _leds
 38452   002320  20F4               	addwfc	prodh,w,c
 38453   002322  6EDA               	movwf	fsr2h,c
 38454   002324  C501  F4DF         	movff	?_getNV,indf2
 38455                           
 38456                           ;../canargb_leds.c: 345:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38457   002328  0E00               	movlw	low _ledPaletteIndexes
 38458   00232A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38459   00232C  6ED9               	movwf	fsr2l,c
 38460   00232E  6ADA               	clrf	fsr2h,c
 38461   002330  0E07               	movlw	high _ledPaletteIndexes
 38462   002332  22DA               	addwfc	fsr2h,f,c
 38463   002334  38DF               	swapf	223,w,c
 38464   002336  0B0F               	andlw	15
 38465   002338  0D03               	mullw	3
 38466   00233A  50F3               	movf	243,w,c
 38467   00233C  0F02               	addlw	2
 38468   00233E  EC73  F03D         	call	_getNV
 38469   002342  5006               	movf	doFlash@ledno^(0+1280),w,c
 38470   002344  0D03               	mullw	3
 38471   002346  0E7E               	movlw	low (_leds+2)
 38472   002348  24F3               	addwf	243,w,c
 38473   00234A  6ED9               	movwf	fsr2l,c
 38474   00234C  0E0B               	movlw	high (_leds+2)
 38475   00234E  20F4               	addwfc	prodh,w,c
 38476   002350  6EDA               	movwf	fsr2h,c
 38477   002352  C501  F4DF         	movff	?_getNV,indf2
 38478                           
 38479                           ;../canargb_leds.c: 346:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38480   002356  0E00               	movlw	low _ledPaletteIndexes
 38481   002358  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38482   00235A  6ED9               	movwf	fsr2l,c
 38483   00235C  6ADA               	clrf	fsr2h,c
 38484   00235E  0E07               	movlw	high _ledPaletteIndexes
 38485   002360  22DA               	addwfc	fsr2h,f,c
 38486   002362  38DF               	swapf	223,w,c
 38487   002364  0B0F               	andlw	15
 38488   002366  0D03               	mullw	3
 38489   002368  50F3               	movf	243,w,c
 38490   00236A  0F03               	addlw	3
 38491   00236C  EC73  F03D         	call	_getNV
 38492   002370  5006               	movf	doFlash@ledno^(0+1280),w,c
 38493   002372  0D03               	mullw	3
 38494   002374  0E7D               	movlw	low (_leds+1)
 38495   002376  24F3               	addwf	243,w,c
 38496   002378  6ED9               	movwf	fsr2l,c
 38497   00237A  0E0B               	movlw	high (_leds+1)
 38498   00237C  20F4               	addwfc	prodh,w,c
 38499   00237E  6EDA               	movwf	fsr2h,c
 38500   002380  C501  F4DF         	movff	?_getNV,indf2
 38501                           
 38502                           ;../canargb_leds.c: 347:                     break;
 38503   002384  EFF3  F012         	goto	l9425
 38504   002388                     l9413:
 38505                           
 38506                           ; BSR set to: 5
 38507                           ;../canargb_leds.c: 349:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38508   002388  0E00               	movlw	low _ledPaletteIndexes
 38509   00238A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38510   00238C  6ED9               	movwf	fsr2l,c
 38511   00238E  6ADA               	clrf	fsr2h,c
 38512   002390  0E07               	movlw	high _ledPaletteIndexes
 38513   002392  22DA               	addwfc	fsr2h,f,c
 38514   002394  38DF               	swapf	223,w,c
 38515   002396  0B0F               	andlw	15
 38516   002398  0D03               	mullw	3
 38517   00239A  28F3               	incf	243,w,c
 38518   00239C  EC73  F03D         	call	_getNV
 38519   0023A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38520   0023A2  0D03               	mullw	3
 38521   0023A4  0E7E               	movlw	low (_leds+2)
 38522   0023A6  24F3               	addwf	243,w,c
 38523   0023A8  6ED9               	movwf	fsr2l,c
 38524   0023AA  0E0B               	movlw	high (_leds+2)
 38525   0023AC  20F4               	addwfc	prodh,w,c
 38526   0023AE  6EDA               	movwf	fsr2h,c
 38527   0023B0  C501  F4DF         	movff	?_getNV,indf2
 38528                           
 38529                           ;../canargb_leds.c: 350:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38530   0023B4  0E00               	movlw	low _ledPaletteIndexes
 38531   0023B6  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38532   0023B8  6ED9               	movwf	fsr2l,c
 38533   0023BA  6ADA               	clrf	fsr2h,c
 38534   0023BC  0E07               	movlw	high _ledPaletteIndexes
 38535   0023BE  22DA               	addwfc	fsr2h,f,c
 38536   0023C0  38DF               	swapf	223,w,c
 38537   0023C2  0B0F               	andlw	15
 38538   0023C4  0D03               	mullw	3
 38539   0023C6  50F3               	movf	243,w,c
 38540   0023C8  0F02               	addlw	2
 38541   0023CA  EC73  F03D         	call	_getNV
 38542   0023CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38543   0023D0  0D03               	mullw	3
 38544   0023D2  0E7C               	movlw	low _leds
 38545   0023D4  24F3               	addwf	243,w,c
 38546   0023D6  6ED9               	movwf	fsr2l,c
 38547   0023D8  0E0B               	movlw	high _leds
 38548   0023DA  20F4               	addwfc	prodh,w,c
 38549   0023DC  6EDA               	movwf	fsr2h,c
 38550   0023DE  C501  F4DF         	movff	?_getNV,indf2
 38551                           
 38552                           ;../canargb_leds.c: 351:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38553   0023E2  0E00               	movlw	low _ledPaletteIndexes
 38554   0023E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38555   0023E6  6ED9               	movwf	fsr2l,c
 38556   0023E8  6ADA               	clrf	fsr2h,c
 38557   0023EA  0E07               	movlw	high _ledPaletteIndexes
 38558   0023EC  22DA               	addwfc	fsr2h,f,c
 38559   0023EE  38DF               	swapf	223,w,c
 38560   0023F0  0B0F               	andlw	15
 38561   0023F2  0D03               	mullw	3
 38562   0023F4  50F3               	movf	243,w,c
 38563   0023F6  0F03               	addlw	3
 38564   0023F8  EC73  F03D         	call	_getNV
 38565   0023FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38566   0023FE  0D03               	mullw	3
 38567   002400  0E7D               	movlw	low (_leds+1)
 38568   002402  24F3               	addwf	243,w,c
 38569   002404  6ED9               	movwf	fsr2l,c
 38570   002406  0E0B               	movlw	high (_leds+1)
 38571   002408  20F4               	addwfc	prodh,w,c
 38572   00240A  6EDA               	movwf	fsr2h,c
 38573   00240C  C501  F4DF         	movff	?_getNV,indf2
 38574                           
 38575                           ;../canargb_leds.c: 352:                     break;
 38576   002410  EFF3  F012         	goto	l9425
 38577   002414                     l9415:
 38578                           
 38579                           ; BSR set to: 5
 38580                           ;../canargb_leds.c: 354:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38581   002414  0E00               	movlw	low _ledPaletteIndexes
 38582   002416  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38583   002418  6ED9               	movwf	fsr2l,c
 38584   00241A  6ADA               	clrf	fsr2h,c
 38585   00241C  0E07               	movlw	high _ledPaletteIndexes
 38586   00241E  22DA               	addwfc	fsr2h,f,c
 38587   002420  38DF               	swapf	223,w,c
 38588   002422  0B0F               	andlw	15
 38589   002424  0D03               	mullw	3
 38590   002426  28F3               	incf	243,w,c
 38591   002428  EC73  F03D         	call	_getNV
 38592   00242C  5006               	movf	doFlash@ledno^(0+1280),w,c
 38593   00242E  0D03               	mullw	3
 38594   002430  0E7D               	movlw	low (_leds+1)
 38595   002432  24F3               	addwf	243,w,c
 38596   002434  6ED9               	movwf	fsr2l,c
 38597   002436  0E0B               	movlw	high (_leds+1)
 38598   002438  20F4               	addwfc	prodh,w,c
 38599   00243A  6EDA               	movwf	fsr2h,c
 38600   00243C  C501  F4DF         	movff	?_getNV,indf2
 38601                           
 38602                           ;../canargb_leds.c: 355:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38603   002440  0E00               	movlw	low _ledPaletteIndexes
 38604   002442  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38605   002444  6ED9               	movwf	fsr2l,c
 38606   002446  6ADA               	clrf	fsr2h,c
 38607   002448  0E07               	movlw	high _ledPaletteIndexes
 38608   00244A  22DA               	addwfc	fsr2h,f,c
 38609   00244C  38DF               	swapf	223,w,c
 38610   00244E  0B0F               	andlw	15
 38611   002450  0D03               	mullw	3
 38612   002452  50F3               	movf	243,w,c
 38613   002454  0F02               	addlw	2
 38614   002456  EC73  F03D         	call	_getNV
 38615   00245A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38616   00245C  0D03               	mullw	3
 38617   00245E  0E7E               	movlw	low (_leds+2)
 38618   002460  24F3               	addwf	243,w,c
 38619   002462  6ED9               	movwf	fsr2l,c
 38620   002464  0E0B               	movlw	high (_leds+2)
 38621   002466  20F4               	addwfc	prodh,w,c
 38622   002468  6EDA               	movwf	fsr2h,c
 38623   00246A  C501  F4DF         	movff	?_getNV,indf2
 38624                           
 38625                           ;../canargb_leds.c: 356:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38626   00246E  0E00               	movlw	low _ledPaletteIndexes
 38627   002470  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38628   002472  6ED9               	movwf	fsr2l,c
 38629   002474  6ADA               	clrf	fsr2h,c
 38630   002476  0E07               	movlw	high _ledPaletteIndexes
 38631   002478  22DA               	addwfc	fsr2h,f,c
 38632   00247A  38DF               	swapf	223,w,c
 38633   00247C  0B0F               	andlw	15
 38634   00247E  0D03               	mullw	3
 38635   002480  50F3               	movf	243,w,c
 38636   002482  0F03               	addlw	3
 38637   002484  EC73  F03D         	call	_getNV
 38638   002488  5006               	movf	doFlash@ledno^(0+1280),w,c
 38639   00248A  0D03               	mullw	3
 38640   00248C  0E7C               	movlw	low _leds
 38641   00248E  24F3               	addwf	243,w,c
 38642   002490  6ED9               	movwf	fsr2l,c
 38643   002492  0E0B               	movlw	high _leds
 38644   002494  20F4               	addwfc	prodh,w,c
 38645   002496  6EDA               	movwf	fsr2h,c
 38646   002498  C501  F4DF         	movff	?_getNV,indf2
 38647                           
 38648                           ;../canargb_leds.c: 357:                     break;
 38649   00249C  EFF3  F012         	goto	l9425
 38650   0024A0                     l9417:
 38651                           
 38652                           ; BSR set to: 5
 38653                           ;../canargb_leds.c: 359:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38654   0024A0  0E00               	movlw	low _ledPaletteIndexes
 38655   0024A2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38656   0024A4  6ED9               	movwf	fsr2l,c
 38657   0024A6  6ADA               	clrf	fsr2h,c
 38658   0024A8  0E07               	movlw	high _ledPaletteIndexes
 38659   0024AA  22DA               	addwfc	fsr2h,f,c
 38660   0024AC  38DF               	swapf	223,w,c
 38661   0024AE  0B0F               	andlw	15
 38662   0024B0  0D03               	mullw	3
 38663   0024B2  28F3               	incf	243,w,c
 38664   0024B4  EC73  F03D         	call	_getNV
 38665   0024B8  5006               	movf	doFlash@ledno^(0+1280),w,c
 38666   0024BA  0D03               	mullw	3
 38667   0024BC  0E7E               	movlw	low (_leds+2)
 38668   0024BE  24F3               	addwf	243,w,c
 38669   0024C0  6ED9               	movwf	fsr2l,c
 38670   0024C2  0E0B               	movlw	high (_leds+2)
 38671   0024C4  20F4               	addwfc	prodh,w,c
 38672   0024C6  6EDA               	movwf	fsr2h,c
 38673   0024C8  C501  F4DF         	movff	?_getNV,indf2
 38674                           
 38675                           ;../canargb_leds.c: 360:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38676   0024CC  0E00               	movlw	low _ledPaletteIndexes
 38677   0024CE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38678   0024D0  6ED9               	movwf	fsr2l,c
 38679   0024D2  6ADA               	clrf	fsr2h,c
 38680   0024D4  0E07               	movlw	high _ledPaletteIndexes
 38681   0024D6  22DA               	addwfc	fsr2h,f,c
 38682   0024D8  38DF               	swapf	223,w,c
 38683   0024DA  0B0F               	andlw	15
 38684   0024DC  0D03               	mullw	3
 38685   0024DE  50F3               	movf	243,w,c
 38686   0024E0  0F02               	addlw	2
 38687   0024E2  EC73  F03D         	call	_getNV
 38688   0024E6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38689   0024E8  0D03               	mullw	3
 38690   0024EA  0E7D               	movlw	low (_leds+1)
 38691   0024EC  24F3               	addwf	243,w,c
 38692   0024EE  6ED9               	movwf	fsr2l,c
 38693   0024F0  0E0B               	movlw	high (_leds+1)
 38694   0024F2  20F4               	addwfc	prodh,w,c
 38695   0024F4  6EDA               	movwf	fsr2h,c
 38696   0024F6  C501  F4DF         	movff	?_getNV,indf2
 38697                           
 38698                           ;../canargb_leds.c: 361:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38699   0024FA  0E00               	movlw	low _ledPaletteIndexes
 38700   0024FC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38701   0024FE  6ED9               	movwf	fsr2l,c
 38702   002500  6ADA               	clrf	fsr2h,c
 38703   002502  0E07               	movlw	high _ledPaletteIndexes
 38704   002504  22DA               	addwfc	fsr2h,f,c
 38705   002506  38DF               	swapf	223,w,c
 38706   002508  0B0F               	andlw	15
 38707   00250A  0D03               	mullw	3
 38708   00250C  50F3               	movf	243,w,c
 38709   00250E  0F03               	addlw	3
 38710   002510  EC73  F03D         	call	_getNV
 38711   002514  5006               	movf	doFlash@ledno^(0+1280),w,c
 38712   002516  0D03               	mullw	3
 38713   002518  0E7C               	movlw	low _leds
 38714   00251A  24F3               	addwf	243,w,c
 38715   00251C  6ED9               	movwf	fsr2l,c
 38716   00251E  0E0B               	movlw	high _leds
 38717   002520  20F4               	addwfc	prodh,w,c
 38718   002522  6EDA               	movwf	fsr2h,c
 38719   002524  C501  F4DF         	movff	?_getNV,indf2
 38720                           
 38721                           ;../canargb_leds.c: 362:                     break;
 38722   002528  EFF3  F012         	goto	l9425
 38723   00252C                     l9419:
 38724                           
 38725                           ; BSR set to: 5
 38726                           ;../canargb_leds.c: 364:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38727   00252C  0E00               	movlw	low _ledPaletteIndexes
 38728   00252E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38729   002530  6ED9               	movwf	fsr2l,c
 38730   002532  6ADA               	clrf	fsr2h,c
 38731   002534  0E07               	movlw	high _ledPaletteIndexes
 38732   002536  22DA               	addwfc	fsr2h,f,c
 38733   002538  38DF               	swapf	223,w,c
 38734   00253A  0B0F               	andlw	15
 38735   00253C  0D03               	mullw	3
 38736   00253E  28F3               	incf	243,w,c
 38737   002540  EC73  F03D         	call	_getNV
 38738   002544  5006               	movf	doFlash@ledno^(0+1280),w,c
 38739   002546  0D03               	mullw	3
 38740   002548  0E7D               	movlw	low (_leds+1)
 38741   00254A  24F3               	addwf	243,w,c
 38742   00254C  6ED9               	movwf	fsr2l,c
 38743   00254E  0E0B               	movlw	high (_leds+1)
 38744   002550  20F4               	addwfc	prodh,w,c
 38745   002552  6EDA               	movwf	fsr2h,c
 38746   002554  C501  F4DF         	movff	?_getNV,indf2
 38747                           
 38748                           ;../canargb_leds.c: 365:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38749   002558  0E00               	movlw	low _ledPaletteIndexes
 38750   00255A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38751   00255C  6ED9               	movwf	fsr2l,c
 38752   00255E  6ADA               	clrf	fsr2h,c
 38753   002560  0E07               	movlw	high _ledPaletteIndexes
 38754   002562  22DA               	addwfc	fsr2h,f,c
 38755   002564  38DF               	swapf	223,w,c
 38756   002566  0B0F               	andlw	15
 38757   002568  0D03               	mullw	3
 38758   00256A  50F3               	movf	243,w,c
 38759   00256C  0F02               	addlw	2
 38760   00256E  EC73  F03D         	call	_getNV
 38761   002572  5006               	movf	doFlash@ledno^(0+1280),w,c
 38762   002574  0D03               	mullw	3
 38763   002576  0E7C               	movlw	low _leds
 38764   002578  24F3               	addwf	243,w,c
 38765   00257A  6ED9               	movwf	fsr2l,c
 38766   00257C  0E0B               	movlw	high _leds
 38767   00257E  20F4               	addwfc	prodh,w,c
 38768   002580  6EDA               	movwf	fsr2h,c
 38769   002582  C501  F4DF         	movff	?_getNV,indf2
 38770                           
 38771                           ;../canargb_leds.c: 366:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38772   002586  0E00               	movlw	low _ledPaletteIndexes
 38773   002588  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38774   00258A  6ED9               	movwf	fsr2l,c
 38775   00258C  6ADA               	clrf	fsr2h,c
 38776   00258E  0E07               	movlw	high _ledPaletteIndexes
 38777   002590  22DA               	addwfc	fsr2h,f,c
 38778   002592  38DF               	swapf	223,w,c
 38779   002594  0B0F               	andlw	15
 38780   002596  0D03               	mullw	3
 38781   002598  50F3               	movf	243,w,c
 38782   00259A  0F03               	addlw	3
 38783   00259C  EC73  F03D         	call	_getNV
 38784   0025A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38785   0025A2  0D03               	mullw	3
 38786   0025A4  0E7E               	movlw	low (_leds+2)
 38787   0025A6  24F3               	addwf	243,w,c
 38788   0025A8  6ED9               	movwf	fsr2l,c
 38789   0025AA  0E0B               	movlw	high (_leds+2)
 38790   0025AC  20F4               	addwfc	prodh,w,c
 38791   0025AE  6EDA               	movwf	fsr2h,c
 38792   0025B0  C501  F4DF         	movff	?_getNV,indf2
 38793                           
 38794                           ;../canargb_leds.c: 367:                     break;
 38795   0025B4  EFF3  F012         	goto	l9425
 38796   0025B8                     l9423:
 38797                           
 38798                           ; BSR set to: 5
 38799   0025B8  5005               	movf	doFlash@order^(0+1280),w,c
 38800                           
 38801                           ; Switch size 1, requested type "simple"
 38802                           ; Number of cases is 5, Range of values is 1 to 6
 38803                           ; switch strategies available:
 38804                           ; Name         Instructions Cycles
 38805                           ; simple_byte           16     9 (average)
 38806                           ;	Chosen strategy is simple_byte
 38807   0025BA  0A01               	xorlw	1	; case 1
 38808   0025BC  B4D8               	btfsc	status,2,c
 38809   0025BE  EF38  F011         	goto	l9409
 38810   0025C2  0A03               	xorlw	3	; case 2
 38811   0025C4  B4D8               	btfsc	status,2,c
 38812   0025C6  EF7E  F011         	goto	l9411
 38813   0025CA  0A06               	xorlw	6	; case 4
 38814   0025CC  B4D8               	btfsc	status,2,c
 38815   0025CE  EFC4  F011         	goto	l9413
 38816   0025D2  0A01               	xorlw	1	; case 5
 38817   0025D4  B4D8               	btfsc	status,2,c
 38818   0025D6  EF50  F012         	goto	l9417
 38819   0025DA  0A03               	xorlw	3	; case 6
 38820   0025DC  B4D8               	btfsc	status,2,c
 38821   0025DE  EF0A  F012         	goto	l9415
 38822   0025E2  EF96  F012         	goto	l9419
 38823   0025E6                     l9425:
 38824                           
 38825                           ;../canargb_leds.c: 371:     }
 38826   0025E6  2A06               	incf	doFlash@ledno^(0+1280),f,c
 38827   0025E8  2806               	incf	doFlash@ledno^(0+1280),w,c
 38828   0025EA  A4D8               	btfss	status,2,c
 38829   0025EC  EFFA  F012         	goto	u6701
 38830   0025F0  EFFC  F012         	goto	u6700
 38831   0025F4                     u6701:
 38832   0025F4  EF72  F00F         	goto	l9389
 38833   0025F8                     u6700:
 38834   0025F8                     
 38835                           ;../canargb_leds.c: 372:     refreshRequired = 1;
 38836   0025F8  0E01               	movlw	1
 38837   0025FA  0105               	movlb	5	; () banked
 38838   0025FC  6FAB               	movwf	_refreshRequired& (0+255),b
 38839   0025FE                     
 38840                           ; BSR set to: 5
 38841   0025FE  0012               	return		;funcret
 38842   002600                     __end_of_doFlash:
 38843                           	callstack 0
 38844                           
 38845 ;; *************** function _getNV *****************
 38846 ;; Defined at:
 38847 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 38848 ;; Parameters:    Size  Location     Type
 38849 ;;  index           1    wreg     unsigned char 
 38850 ;; Auto vars:     Size  Location     Type
 38851 ;;  index           1    3[COMRAM] unsigned char 
 38852 ;; Return value:  Size  Location     Type
 38853 ;;                  2    0[COMRAM] short 
 38854 ;; Registers used:
 38855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38856 ;; Tracked objects:
 38857 ;;		On entry : 0/0
 38858 ;;		On exit  : 0/0
 38859 ;;		Unchanged: 0/0
 38860 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38865 ;;Total ram usage:        4 bytes
 38866 ;; Hardware stack levels used: 1
 38867 ;; Hardware stack levels required when called: 1
 38868 ;; This function calls:
 38869 ;;		Nothing
 38870 ;; This function is called by:
 38871 ;;		_doFlash
 38872 ;;		_nvProcessMessage
 38873 ;;		_nvTRnvrdCallback
 38874 ;; This function uses a non-reentrant model
 38875 ;;
 38876                           
 38877                           	psect	text104
 38878   007AE6                     __ptext104:
 38879                           	callstack 0
 38880   007AE6                     _getNV:
 38881                           	callstack 123
 38882                           
 38883                           ; BSR set to: 5
 38884                           ;incstack = 0
 38885                           ;getNV@index stored from wreg
 38886   007AE6  6E04               	movwf	getNV@index^(0+1280),c
 38887   007AE8                     
 38888                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 49;
 38889   007AE8  5004               	movf	getNV@index^(0+1280),w,c
 38890   007AEA  A4D8               	btfss	status,2,c
 38891   007AEC  EF7A  F03D         	goto	u5441
 38892   007AF0  EF7C  F03D         	goto	u5440
 38893   007AF4                     u5441:
 38894   007AF4  EF82  F03D         	goto	l8075
 38895   007AF8                     u5440:
 38896   007AF8  0E00               	movlw	0
 38897   007AFA  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38898   007AFC  0E31               	movlw	49
 38899   007AFE  6E01               	movwf	?_getNV^(0+1280),c
 38900   007B00  EF9B  F03D         	goto	l1554
 38901   007B04                     l8075:
 38902                           
 38903                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 49) return -CMDERR_INV_NV_IDX;
 38904   007B04  0E31               	movlw	49
 38905   007B06  6404               	cpfsgt	getNV@index^(0+1280),c
 38906   007B08  EF88  F03D         	goto	u5451
 38907   007B0C  EF8A  F03D         	goto	u5450
 38908   007B10                     u5451:
 38909   007B10  EF90  F03D         	goto	l8081
 38910   007B14                     u5450:
 38911   007B14  0EFF               	movlw	255
 38912   007B16  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38913   007B18  0EF6               	movlw	246
 38914   007B1A  6E01               	movwf	?_getNV^(0+1280),c
 38915   007B1C  EF9B  F03D         	goto	l1554
 38916   007B20                     l8081:
 38917                           
 38918                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 38919   007B20  0E00               	movlw	low _nvCache
 38920   007B22  2404               	addwf	getNV@index^(0+1280),w,c
 38921   007B24  6ED9               	movwf	fsr2l,c
 38922   007B26  6ADA               	clrf	fsr2h,c
 38923   007B28  0E06               	movlw	high _nvCache
 38924   007B2A  22DA               	addwfc	fsr2h,f,c
 38925   007B2C  50DF               	movf	indf2,w,c
 38926   007B2E  6E03               	movwf	??_getNV^(0+1280),c
 38927   007B30  5003               	movf	??_getNV^(0+1280),w,c
 38928   007B32  6E01               	movwf	?_getNV^(0+1280),c
 38929   007B34  6A02               	clrf	(?_getNV+1)^(0+1280),c
 38930   007B36                     l1554:
 38931   007B36  0012               	return		;funcret
 38932   007B38                     __end_of_getNV:
 38933                           	callstack 0
 38934                           
 38935 ;; *************** function _initRomOps *****************
 38936 ;; Defined at:
 38937 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 38938 ;; Parameters:    Size  Location     Type
 38939 ;;		None
 38940 ;; Auto vars:     Size  Location     Type
 38941 ;;		None
 38942 ;; Return value:  Size  Location     Type
 38943 ;;                  1    wreg      void 
 38944 ;; Registers used:
 38945 ;;		wreg, status,2
 38946 ;; Tracked objects:
 38947 ;;		On entry : 0/0
 38948 ;;		On exit  : 0/0
 38949 ;;		Unchanged: 0/0
 38950 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38955 ;;Total ram usage:        0 bytes
 38956 ;; Hardware stack levels used: 1
 38957 ;; Hardware stack levels required when called: 1
 38958 ;; This function calls:
 38959 ;;		Nothing
 38960 ;; This function is called by:
 38961 ;;		_main
 38962 ;; This function uses a non-reentrant model
 38963 ;;
 38964                           
 38965                           	psect	text105
 38966   0082F2                     __ptext105:
 38967                           	callstack 0
 38968   0082F2                     _initRomOps:
 38969                           	callstack 125
 38970   0082F2                     
 38971                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 38972   0082F2  0105               	movlb	5	; () banked
 38973   0082F4  6B9B               	clrf	_flashFlags& (0+255),b
 38974   0082F6                     
 38975                           ; BSR set to: 5
 38976                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 38977   0082F6  0E00               	movlw	0
 38978   0082F8  6F84               	movwf	_flashBlock& (0+255),b
 38979   0082FA  0E08               	movlw	8
 38980   0082FC  6F85               	movwf	(_flashBlock+1)& (0+255),b
 38981   0082FE  0E00               	movlw	0
 38982   008300  6F86               	movwf	(_flashBlock+2)& (0+255),b
 38983   008302                     
 38984                           ; BSR set to: 5
 38985                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 38986   008302  6AF8               	clrf	248,c	;volatile
 38987   008304                     
 38988                           ; BSR set to: 5
 38989                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 38990   008304  0100               	movlb	0	; () banked
 38991   008306  9F41               	bcf	65,7,b	;volsfr
 38992   008308                     
 38993                           ; BSR set to: 0
 38994   008308  0012               	return		;funcret
 38995   00830A                     __end_of_initRomOps:
 38996                           	callstack 0
 38997                           
 38998 ;; *************** function _checkPowerOnPb *****************
 38999 ;; Defined at:
 39000 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 39001 ;; Parameters:    Size  Location     Type
 39002 ;;		None
 39003 ;; Auto vars:     Size  Location     Type
 39004 ;;  i               1   59[COMRAM] unsigned char 
 39005 ;; Return value:  Size  Location     Type
 39006 ;;                  1    wreg      void 
 39007 ;; Registers used:
 39008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39009 ;; Tracked objects:
 39010 ;;		On entry : 0/0
 39011 ;;		On exit  : 0/0
 39012 ;;		Unchanged: 0/0
 39013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39018 ;;Total ram usage:        1 bytes
 39019 ;; Hardware stack levels used: 1
 39020 ;; Hardware stack levels required when called: 11
 39021 ;; This function calls:
 39022 ;;		_APP_testMode
 39023 ;;		_factoryReset
 39024 ;;		_pbDownTimer
 39025 ;;		_pbUpTimer
 39026 ;;		_showStatus
 39027 ;; This function is called by:
 39028 ;;		_main
 39029 ;; This function uses a non-reentrant model
 39030 ;;
 39031                           
 39032                           	psect	text106
 39033   0066D4                     __ptext106:
 39034                           	callstack 0
 39035   0066D4                     _checkPowerOnPb:
 39036                           	callstack 115
 39037   0066D4                     
 39038                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA2))) {
 39039   0066D4  B4CE               	btfsc	206,2,c	;volatile
 39040   0066D6  EF6F  F033         	goto	u8391
 39041   0066DA  EF71  F033         	goto	u8390
 39042   0066DE                     u8391:
 39043   0066DE  EFBC  F033         	goto	l2023
 39044   0066E2                     u8390:
 39045   0066E2                     
 39046                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 39047   0066E2  0E1C               	movlw	28
 39048   0066E4  EC30  F030         	call	_pbDownTimer
 39049   0066E8  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39050   0066EA                     
 39051                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 39052   0066EA  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 39053   0066EC  A4D8               	btfss	status,2,c
 39054   0066EE  EF7B  F033         	goto	u8401
 39055   0066F2  EF7D  F033         	goto	u8400
 39056   0066F6                     u8401:
 39057   0066F6  EF81  F033         	goto	l11123
 39058   0066FA                     u8400:
 39059   0066FA  EFBC  F033         	goto	l2023
 39060   0066FE                     l11119:
 39061                           
 39062                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 39063   0066FE  EFBC  F033         	goto	l2023
 39064   006702                     l11123:
 39065   006702  0E04               	movlw	4
 39066   006704  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 39067   006706  EF87  F033         	goto	u8411
 39068   00670A  EF89  F033         	goto	u8410
 39069   00670E                     u8411:
 39070   00670E  EF8D  F033         	goto	l11127
 39071   006712                     u8410:
 39072   006712                     
 39073                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 39074   006712  ECCF  F01F         	call	_APP_testMode	;wreg free
 39075                           
 39076                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 39077   006716  EFBC  F033         	goto	l2023
 39078   00671A                     l11127:
 39079   00671A  0E07               	movlw	7
 39080   00671C  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 39081   00671E  EF93  F033         	goto	u8421
 39082   006722  EF95  F033         	goto	u8420
 39083   006726                     u8421:
 39084   006726  EFBC  F033         	goto	l2023
 39085   00672A                     u8420:
 39086   00672A                     
 39087                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 39088   00672A  0E04               	movlw	4
 39089   00672C  EC50  F028         	call	_showStatus
 39090                           
 39091                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 39092   006730  0E05               	movlw	5
 39093   006732  ECCF  F02F         	call	_pbUpTimer
 39094   006736  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39095   006738                     
 39096                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 39097   006738  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 39098   00673A  A4D8               	btfss	status,2,c
 39099   00673C  EFA2  F033         	goto	u8431
 39100   006740  EFA4  F033         	goto	u8430
 39101   006744                     u8431:
 39102   006744  EFA6  F033         	goto	l11135
 39103   006748                     u8430:
 39104   006748  EFBC  F033         	goto	l2023
 39105   00674C                     l11135:
 39106                           
 39107                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 39108   00674C  0E05               	movlw	5
 39109   00674E  EC30  F030         	call	_pbDownTimer
 39110   006752  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39111   006754                     
 39112                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 39113   006754  0E01               	movlw	1
 39114   006756  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 39115   006758  EFB0  F033         	goto	u8441
 39116   00675C  EFB2  F033         	goto	u8440
 39117   006760                     u8441:
 39118   006760  EF7F  F033         	goto	l11119
 39119   006764                     u8440:
 39120   006764  0E04               	movlw	4
 39121   006766  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 39122   006768  EFB8  F033         	goto	u8451
 39123   00676C  EFBA  F033         	goto	u8450
 39124   006770                     u8451:
 39125   006770  EF7F  F033         	goto	l11119
 39126   006774                     u8450:
 39127   006774                     
 39128                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 39129   006774  EC36  F02B         	call	_factoryReset	;wreg free
 39130   006778                     l2023:
 39131   006778  0012               	return		;funcret
 39132   00677A                     __end_of_checkPowerOnPb:
 39133                           	callstack 0
 39134                           
 39135 ;; *************** function _showStatus *****************
 39136 ;; Defined at:
 39137 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 39138 ;; Parameters:    Size  Location     Type
 39139 ;;  s               1    wreg     enum E23436
 39140 ;; Auto vars:     Size  Location     Type
 39141 ;;  s               1    2[COMRAM] enum E23436
 39142 ;; Return value:  Size  Location     Type
 39143 ;;                  1    wreg      void 
 39144 ;; Registers used:
 39145 ;;		wreg, status,2, status,0
 39146 ;; Tracked objects:
 39147 ;;		On entry : 0/0
 39148 ;;		On exit  : 0/0
 39149 ;;		Unchanged: 0/0
 39150 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39154 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39155 ;;Total ram usage:        3 bytes
 39156 ;; Hardware stack levels used: 1
 39157 ;; Hardware stack levels required when called: 1
 39158 ;; This function calls:
 39159 ;;		Nothing
 39160 ;; This function is called by:
 39161 ;;		_setLEDsByMode
 39162 ;;		_checkPowerOnPb
 39163 ;;		_poll
 39164 ;; This function uses a non-reentrant model
 39165 ;;
 39166                           
 39167                           	psect	text107
 39168   0050A0                     __ptext107:
 39169                           	callstack 0
 39170   0050A0                     _showStatus:
 39171                           	callstack 122
 39172                           
 39173                           ;incstack = 0
 39174                           ;showStatus@s stored from wreg
 39175   0050A0  6E03               	movwf	showStatus@s^(0+1280),c
 39176   0050A2                     
 39177                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 39178   0050A2  EFAF  F028         	goto	l8429
 39179   0050A6                     l1796:
 39180                           
 39181                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 39182   0050A6  0105               	movlb	5	; () banked
 39183   0050A8  6B8B               	clrf	_ledState& (0+255),b
 39184                           
 39185                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 39186   0050AA  6B8C               	clrf	(_ledState+1)& (0+255),b
 39187                           
 39188                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 39189   0050AC  EFF0  F028         	goto	l1816
 39190   0050B0                     l8399:
 39191                           
 39192                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 39193   0050B0  0E01               	movlw	1
 39194   0050B2  0105               	movlb	5	; () banked
 39195   0050B4  6F8B               	movwf	_ledState& (0+255),b
 39196   0050B6                     
 39197                           ; BSR set to: 5
 39198                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 39199   0050B6  6B8C               	clrf	(_ledState+1)& (0+255),b
 39200                           
 39201                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 39202   0050B8  EFF0  F028         	goto	l1816
 39203   0050BC                     l1799:
 39204                           
 39205                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 39206   0050BC  0105               	movlb	5	; () banked
 39207   0050BE  6B8B               	clrf	_ledState& (0+255),b
 39208   0050C0                     
 39209                           ; BSR set to: 5
 39210                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 39211   0050C0  0E03               	movlw	3
 39212   0050C2  6F8C               	movwf	(_ledState+1)& (0+255),b
 39213                           
 39214                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 39215   0050C4  EFF0  F028         	goto	l1816
 39216   0050C8                     l1802:
 39217   0050C8                     l1804:
 39218                           
 39219                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 39220   0050C8  0105               	movlb	5	; () banked
 39221   0050CA  6B8B               	clrf	_ledState& (0+255),b
 39222   0050CC                     
 39223                           ; BSR set to: 5
 39224                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 39225   0050CC  0E01               	movlw	1
 39226   0050CE  6F8C               	movwf	(_ledState+1)& (0+255),b
 39227                           
 39228                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 39229   0050D0  EFF0  F028         	goto	l1816
 39230   0050D4                     l1805:
 39231                           
 39232                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 39233   0050D4  0105               	movlb	5	; () banked
 39234   0050D6  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39235   0050D8                     
 39236                           ; BSR set to: 5
 39237                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 39238   0050D8  0E19               	movlw	25
 39239   0050DA  6F89               	movwf	_flashCounter& (0+255),b
 39240                           
 39241                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 39242   0050DC  0E02               	movlw	2
 39243   0050DE  6F8B               	movwf	_ledState& (0+255),b
 39244                           
 39245                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 39246   0050E0  0E02               	movlw	2
 39247   0050E2  6F8C               	movwf	(_ledState+1)& (0+255),b
 39248                           
 39249                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 39250   0050E4  EFF0  F028         	goto	l1816
 39251   0050E8                     l8409:
 39252                           
 39253                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39254   0050E8  0105               	movlb	5	; () banked
 39255   0050EA  29A1               	incf	_mode_state& (0+255),w,b
 39256   0050EC  A4D8               	btfss	status,2,c
 39257   0050EE  EF7B  F028         	goto	u5691
 39258   0050F2  EF7D  F028         	goto	u5690
 39259   0050F6                     u5691:
 39260   0050F6  EF81  F028         	goto	l8413
 39261   0050FA                     u5690:
 39262   0050FA                     
 39263                           ; BSR set to: 5
 39264                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 39265   0050FA  0E06               	movlw	6
 39266   0050FC  6F8C               	movwf	(_ledState+1)& (0+255),b
 39267                           
 39268                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39269   0050FE  EFF0  F028         	goto	l1816
 39270   005102                     l8413:
 39271                           
 39272                           ; BSR set to: 5
 39273   005102  05A1               	decf	_mode_state& (0+255),w,b
 39274   005104  A4D8               	btfss	status,2,c
 39275   005106  EF87  F028         	goto	u5701
 39276   00510A  EF89  F028         	goto	u5700
 39277   00510E                     u5701:
 39278   00510E  EFF0  F028         	goto	l1816
 39279   005112                     u5700:
 39280   005112                     
 39281                           ; BSR set to: 5
 39282                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 39283   005112  0E06               	movlw	6
 39284   005114  6F8B               	movwf	_ledState& (0+255),b
 39285   005116  EFF0  F028         	goto	l1816
 39286   00511A                     l8417:
 39287                           
 39288                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39289   00511A  0105               	movlb	5	; () banked
 39290   00511C  29A1               	incf	_mode_state& (0+255),w,b
 39291   00511E  A4D8               	btfss	status,2,c
 39292   005120  EF94  F028         	goto	u5711
 39293   005124  EF96  F028         	goto	u5710
 39294   005128                     u5711:
 39295   005128  EF9A  F028         	goto	l8421
 39296   00512C                     u5710:
 39297   00512C                     
 39298                           ; BSR set to: 5
 39299                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 39300   00512C  0E08               	movlw	8
 39301   00512E  6F8C               	movwf	(_ledState+1)& (0+255),b
 39302                           
 39303                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39304   005130  EFF0  F028         	goto	l1816
 39305   005134                     l8421:
 39306                           
 39307                           ; BSR set to: 5
 39308   005134  05A1               	decf	_mode_state& (0+255),w,b
 39309   005136  A4D8               	btfss	status,2,c
 39310   005138  EFA0  F028         	goto	u5721
 39311   00513C  EFA2  F028         	goto	u5720
 39312   005140                     u5721:
 39313   005140  EFF0  F028         	goto	l1816
 39314   005144                     u5720:
 39315   005144                     
 39316                           ; BSR set to: 5
 39317                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 39318   005144  0E08               	movlw	8
 39319   005146  6F8B               	movwf	_ledState& (0+255),b
 39320   005148  EFF0  F028         	goto	l1816
 39321   00514C                     l1815:
 39322                           
 39323                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 39324   00514C  0105               	movlb	5	; () banked
 39325   00514E  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39326                           
 39327                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 39328   005150  6B89               	clrf	_flashCounter& (0+255),b
 39329   005152                     
 39330                           ; BSR set to: 5
 39331                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 39332   005152  0E02               	movlw	2
 39333   005154  6F8B               	movwf	_ledState& (0+255),b
 39334                           
 39335                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 39336   005156  0E02               	movlw	2
 39337   005158  6F8C               	movwf	(_ledState+1)& (0+255),b
 39338                           
 39339                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 39340   00515A  EFF0  F028         	goto	l1816
 39341   00515E                     l8429:
 39342   00515E  5003               	movf	showStatus@s^(0+1280),w,c
 39343   005160  6E01               	movwf	??_showStatus^(0+1280),c
 39344   005162  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 39345                           
 39346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39347                           ; Switch size 1, requested type "simple"
 39348                           ; Number of cases is 1, Range of values is 0 to 0
 39349                           ; switch strategies available:
 39350                           ; Name         Instructions Cycles
 39351                           ; simple_byte            4     3 (average)
 39352                           ;	Chosen strategy is simple_byte
 39353   005164  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 39354   005166  0A00               	xorlw	0	; case 0
 39355   005168  B4D8               	btfsc	status,2,c
 39356   00516A  EFB9  F028         	goto	l11799
 39357   00516E  EFF0  F028         	goto	l1816
 39358   005172                     l11799:
 39359                           
 39360                           ; Switch size 1, requested type "simple"
 39361                           ; Number of cases is 13, Range of values is 0 to 12
 39362                           ; switch strategies available:
 39363                           ; Name         Instructions Cycles
 39364                           ; simple_byte           40    21 (average)
 39365                           ;	Chosen strategy is simple_byte
 39366   005172  5001               	movf	??_showStatus^(0+1280),w,c
 39367   005174  0A00               	xorlw	0	; case 0
 39368   005176  B4D8               	btfsc	status,2,c
 39369   005178  EF53  F028         	goto	l1796
 39370   00517C  0A01               	xorlw	1	; case 1
 39371   00517E  B4D8               	btfsc	status,2,c
 39372   005180  EF58  F028         	goto	l8399
 39373   005184  0A03               	xorlw	3	; case 2
 39374   005186  B4D8               	btfsc	status,2,c
 39375   005188  EF5E  F028         	goto	l1799
 39376   00518C  0A01               	xorlw	1	; case 3
 39377   00518E  B4D8               	btfsc	status,2,c
 39378   005190  EF64  F028         	goto	l1802
 39379   005194  0A07               	xorlw	7	; case 4
 39380   005196  B4D8               	btfsc	status,2,c
 39381   005198  EF6A  F028         	goto	l1805
 39382   00519C  0A01               	xorlw	1	; case 5
 39383   00519E  B4D8               	btfsc	status,2,c
 39384   0051A0  EF64  F028         	goto	l1804
 39385   0051A4  0A03               	xorlw	3	; case 6
 39386   0051A6  B4D8               	btfsc	status,2,c
 39387   0051A8  EF64  F028         	goto	l1804
 39388   0051AC  0A01               	xorlw	1	; case 7
 39389   0051AE  B4D8               	btfsc	status,2,c
 39390   0051B0  EF74  F028         	goto	l8409
 39391   0051B4  0A0F               	xorlw	15	; case 8
 39392   0051B6  B4D8               	btfsc	status,2,c
 39393   0051B8  EF8D  F028         	goto	l8417
 39394   0051BC  0A01               	xorlw	1	; case 9
 39395   0051BE  B4D8               	btfsc	status,2,c
 39396   0051C0  EF64  F028         	goto	l1804
 39397   0051C4  0A03               	xorlw	3	; case 10
 39398   0051C6  B4D8               	btfsc	status,2,c
 39399   0051C8  EF64  F028         	goto	l1804
 39400   0051CC  0A01               	xorlw	1	; case 11
 39401   0051CE  B4D8               	btfsc	status,2,c
 39402   0051D0  EFA6  F028         	goto	l1815
 39403   0051D4  0A07               	xorlw	7	; case 12
 39404   0051D6  B4D8               	btfsc	status,2,c
 39405   0051D8  EFA6  F028         	goto	l1815
 39406   0051DC  EFF0  F028         	goto	l1816
 39407   0051E0                     l1816:
 39408   0051E0  0012               	return		;funcret
 39409   0051E2                     __end_of_showStatus:
 39410                           	callstack 0
 39411                           
 39412 ;; *************** function _pbUpTimer *****************
 39413 ;; Defined at:
 39414 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 39415 ;; Parameters:    Size  Location     Type
 39416 ;;  timeout         1    wreg     unsigned char 
 39417 ;; Auto vars:     Size  Location     Type
 39418 ;;  timeout         1   27[COMRAM] unsigned char 
 39419 ;; Return value:  Size  Location     Type
 39420 ;;                  1    wreg      unsigned char 
 39421 ;; Registers used:
 39422 ;;		wreg, status,2, status,0, cstack
 39423 ;; Tracked objects:
 39424 ;;		On entry : 0/0
 39425 ;;		On exit  : 0/0
 39426 ;;		Unchanged: 0/0
 39427 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39432 ;;Total ram usage:        5 bytes
 39433 ;; Hardware stack levels used: 1
 39434 ;; Hardware stack levels required when called: 3
 39435 ;; This function calls:
 39436 ;;		___lldiv
 39437 ;;		___lmul
 39438 ;;		_leds_poll
 39439 ;;		_tickGet
 39440 ;; This function is called by:
 39441 ;;		_checkPowerOnPb
 39442 ;; This function uses a non-reentrant model
 39443 ;;
 39444                           
 39445                           	psect	text108
 39446   005F9E                     __ptext108:
 39447                           	callstack 0
 39448   005F9E                     _pbUpTimer:
 39449                           	callstack 122
 39450                           
 39451                           ;incstack = 0
 39452                           ;pbUpTimer@timeout stored from wreg
 39453   005F9E  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 39454   005FA0                     
 39455                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 39456   005FA0  EC14  F03A         	call	_tickGet	;wreg free
 39457   005FA4  C501  F570         	movff	?_tickGet,_pbTimer
 39458   005FA8  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39459   005FAC  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39460   005FB0  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39461                           
 39462                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39463   005FB4  EF0E  F030         	goto	l2014
 39464   005FB8                     l10951:
 39465                           
 39466                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 39467   005FB8  EC22  F01B         	call	_leds_poll	;wreg free
 39468                           
 39469                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39470   005FBC  EC14  F03A         	call	_tickGet	;wreg free
 39471   005FC0  0105               	movlb	5	; () banked
 39472   005FC2  5170               	movf	_pbTimer& (0+255),w,b
 39473   005FC4  5C01               	subwf	?_tickGet^(0+1280),w,c
 39474   005FC6  6E18               	movwf	??_pbUpTimer^(0+1280),c
 39475   005FC8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39476   005FCA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39477   005FCC  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 39478   005FCE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39479   005FD0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39480   005FD2  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 39481   005FD4  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39482   005FD6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39483   005FD8  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 39484   005FDA  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 39485   005FDC  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39486   005FDE  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39487   005FE0  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39488   005FE2  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39489   005FE4  0E24               	movlw	36
 39490   005FE6  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39491   005FE8  0EF4               	movlw	244
 39492   005FEA  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39493   005FEC  0E00               	movlw	0
 39494   005FEE  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39495   005FF0  0E00               	movlw	0
 39496   005FF2  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39497   005FF4  EC66  F03B         	call	___lmul	;wreg free
 39498   005FF8  5018               	movf	??_pbUpTimer^(0+1280),w,c
 39499   005FFA  5C01               	subwf	?___lmul^(0+1280),w,c
 39500   005FFC  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 39501   005FFE  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39502   006000  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 39503   006002  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39504   006004  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 39505   006006  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39506   006008  B0D8               	btfsc	status,0,c
 39507   00600A  EF09  F030         	goto	u8321
 39508   00600E  EF0B  F030         	goto	u8320
 39509   006012                     u8321:
 39510   006012  EF0E  F030         	goto	l2014
 39511   006016                     u8320:
 39512   006016                     
 39513                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 39514   006016  0E00               	movlw	0
 39515   006018  EF2F  F030         	goto	l2017
 39516   00601C                     l2014:
 39517                           
 39518                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39519   00601C  B4CE               	btfsc	206,2,c	;volatile
 39520   00601E  EF13  F030         	goto	u8331
 39521   006022  EF15  F030         	goto	u8330
 39522   006026                     u8331:
 39523   006026  EFDC  F02F         	goto	l10951
 39524   00602A                     u8330:
 39525   00602A                     
 39526                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39527   00602A  EC14  F03A         	call	_tickGet	;wreg free
 39528   00602E  0105               	movlb	5	; () banked
 39529   006030  5170               	movf	_pbTimer& (0+255),w,b
 39530   006032  5C01               	subwf	?_tickGet^(0+1280),w,c
 39531   006034  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39532   006036  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39533   006038  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39534   00603A  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39535   00603C  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39536   00603E  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39537   006040  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39538   006042  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39539   006044  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39540   006046  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39541   006048  0E24               	movlw	36
 39542   00604A  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39543   00604C  0EF4               	movlw	244
 39544   00604E  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39545   006050  0E00               	movlw	0
 39546   006052  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39547   006054  0E00               	movlw	0
 39548   006056  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39549   006058  EC10  F034         	call	___lldiv	;wreg free
 39550   00605C  500B               	movf	?___lldiv^(0+1280),w,c
 39551   00605E                     l2017:
 39552   00605E  0012               	return		;funcret
 39553   006060                     __end_of_pbUpTimer:
 39554                           	callstack 0
 39555                           
 39556 ;; *************** function _pbDownTimer *****************
 39557 ;; Defined at:
 39558 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 39559 ;; Parameters:    Size  Location     Type
 39560 ;;  timeout         1    wreg     unsigned char 
 39561 ;; Auto vars:     Size  Location     Type
 39562 ;;  timeout         1   27[COMRAM] unsigned char 
 39563 ;; Return value:  Size  Location     Type
 39564 ;;                  1    wreg      unsigned char 
 39565 ;; Registers used:
 39566 ;;		wreg, status,2, status,0, cstack
 39567 ;; Tracked objects:
 39568 ;;		On entry : 0/0
 39569 ;;		On exit  : 0/0
 39570 ;;		Unchanged: 0/0
 39571 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39575 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39576 ;;Total ram usage:        5 bytes
 39577 ;; Hardware stack levels used: 1
 39578 ;; Hardware stack levels required when called: 3
 39579 ;; This function calls:
 39580 ;;		___lldiv
 39581 ;;		___lmul
 39582 ;;		_leds_poll
 39583 ;;		_tickGet
 39584 ;; This function is called by:
 39585 ;;		_checkPowerOnPb
 39586 ;; This function uses a non-reentrant model
 39587 ;;
 39588                           
 39589                           	psect	text109
 39590   006060                     __ptext109:
 39591                           	callstack 0
 39592   006060                     _pbDownTimer:
 39593                           	callstack 122
 39594                           
 39595                           ;incstack = 0
 39596                           ;pbDownTimer@timeout stored from wreg
 39597   006060  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 39598   006062                     
 39599                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 39600   006062  EC14  F03A         	call	_tickGet	;wreg free
 39601   006066  C501  F570         	movff	?_tickGet,_pbTimer
 39602   00606A  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39603   00606E  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39604   006072  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39605                           
 39606                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39607   006076  EF6F  F030         	goto	l2007
 39608   00607A                     l10939:
 39609                           
 39610                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 39611   00607A  EC22  F01B         	call	_leds_poll	;wreg free
 39612                           
 39613                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39614   00607E  EC14  F03A         	call	_tickGet	;wreg free
 39615   006082  0105               	movlb	5	; () banked
 39616   006084  5170               	movf	_pbTimer& (0+255),w,b
 39617   006086  5C01               	subwf	?_tickGet^(0+1280),w,c
 39618   006088  6E18               	movwf	??_pbDownTimer^(0+1280),c
 39619   00608A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39620   00608C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39621   00608E  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 39622   006090  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39623   006092  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39624   006094  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 39625   006096  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39626   006098  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39627   00609A  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 39628   00609C  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 39629   00609E  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39630   0060A0  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39631   0060A2  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39632   0060A4  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39633   0060A6  0E24               	movlw	36
 39634   0060A8  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39635   0060AA  0EF4               	movlw	244
 39636   0060AC  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39637   0060AE  0E00               	movlw	0
 39638   0060B0  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39639   0060B2  0E00               	movlw	0
 39640   0060B4  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39641   0060B6  EC66  F03B         	call	___lmul	;wreg free
 39642   0060BA  5018               	movf	??_pbDownTimer^(0+1280),w,c
 39643   0060BC  5C01               	subwf	?___lmul^(0+1280),w,c
 39644   0060BE  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 39645   0060C0  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39646   0060C2  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 39647   0060C4  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39648   0060C6  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 39649   0060C8  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39650   0060CA  B0D8               	btfsc	status,0,c
 39651   0060CC  EF6A  F030         	goto	u8301
 39652   0060D0  EF6C  F030         	goto	u8300
 39653   0060D4                     u8301:
 39654   0060D4  EF6F  F030         	goto	l2007
 39655   0060D8                     u8300:
 39656   0060D8                     
 39657                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 39658   0060D8  0E00               	movlw	0
 39659   0060DA  EF90  F030         	goto	l2010
 39660   0060DE                     l2007:
 39661                           
 39662                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39663   0060DE  A4CE               	btfss	206,2,c	;volatile
 39664   0060E0  EF74  F030         	goto	u8311
 39665   0060E4  EF76  F030         	goto	u8310
 39666   0060E8                     u8311:
 39667   0060E8  EF3D  F030         	goto	l10939
 39668   0060EC                     u8310:
 39669   0060EC                     
 39670                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39671   0060EC  EC14  F03A         	call	_tickGet	;wreg free
 39672   0060F0  0105               	movlb	5	; () banked
 39673   0060F2  5170               	movf	_pbTimer& (0+255),w,b
 39674   0060F4  5C01               	subwf	?_tickGet^(0+1280),w,c
 39675   0060F6  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39676   0060F8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39677   0060FA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39678   0060FC  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39679   0060FE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39680   006100  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39681   006102  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39682   006104  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39683   006106  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39684   006108  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39685   00610A  0E24               	movlw	36
 39686   00610C  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39687   00610E  0EF4               	movlw	244
 39688   006110  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39689   006112  0E00               	movlw	0
 39690   006114  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39691   006116  0E00               	movlw	0
 39692   006118  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39693   00611A  EC10  F034         	call	___lldiv	;wreg free
 39694   00611E  500B               	movf	?___lldiv^(0+1280),w,c
 39695   006120                     l2010:
 39696   006120  0012               	return		;funcret
 39697   006122                     __end_of_pbDownTimer:
 39698                           	callstack 0
 39699                           
 39700 ;; *************** function _leds_poll *****************
 39701 ;; Defined at:
 39702 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 39703 ;; Parameters:    Size  Location     Type
 39704 ;;		None
 39705 ;; Auto vars:     Size  Location     Type
 39706 ;;		None
 39707 ;; Return value:  Size  Location     Type
 39708 ;;                  1    wreg      void 
 39709 ;; Registers used:
 39710 ;;		wreg, status,2, status,0, cstack
 39711 ;; Tracked objects:
 39712 ;;		On entry : 0/0
 39713 ;;		On exit  : 0/0
 39714 ;;		Unchanged: 0/0
 39715 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39720 ;;Total ram usage:        4 bytes
 39721 ;; Hardware stack levels used: 1
 39722 ;; Hardware stack levels required when called: 2
 39723 ;; This function calls:
 39724 ;;		___awdiv
 39725 ;;		_tickGet
 39726 ;; This function is called by:
 39727 ;;		_pbDownTimer
 39728 ;;		_pbUpTimer
 39729 ;;		_poll
 39730 ;; This function uses a non-reentrant model
 39731 ;;
 39732                           
 39733                           	psect	text110
 39734   003644                     __ptext110:
 39735                           	callstack 0
 39736   003644                     _leds_poll:
 39737                           	callstack 123
 39738   003644                     
 39739                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 39740   003644  EC14  F03A         	call	_tickGet	;wreg free
 39741   003648  0105               	movlb	5	; () banked
 39742   00364A  5164               	movf	_ledTimer& (0+255),w,b
 39743   00364C  5C01               	subwf	?_tickGet^(0+1280),w,c
 39744   00364E  6E0B               	movwf	??_leds_poll^(0+1280),c
 39745   003650  5165               	movf	(_ledTimer+1)& (0+255),w,b
 39746   003652  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39747   003654  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 39748   003656  5166               	movf	(_ledTimer+2)& (0+255),w,b
 39749   003658  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39750   00365A  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 39751   00365C  5167               	movf	(_ledTimer+3)& (0+255),w,b
 39752   00365E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39753   003660  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 39754   003662  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 39755   003664  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 39756   003666  E10B               	bnz	u6410
 39757   003668  0E72               	movlw	114
 39758   00366A  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 39759   00366C  0E02               	movlw	2
 39760   00366E  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 39761   003670  A0D8               	btfss	status,0,c
 39762   003672  EF3D  F01B         	goto	u6411
 39763   003676  EF3F  F01B         	goto	u6410
 39764   00367A                     u6411:
 39765   00367A  EFE6  F01B         	goto	l9209
 39766   00367E                     u6410:
 39767   00367E                     
 39768                           ; BSR set to: 5
 39769                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 39770   00367E  2B89               	incf	_flashCounter& (0+255),f,b
 39771                           
 39772                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 39773   003680  2B8A               	incf	(_flashCounter+1)& (0+255),f,b
 39774   003682                     
 39775                           ; BSR set to: 5
 39776                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 39777   003682  EC14  F03A         	call	_tickGet	;wreg free
 39778   003686  C501  F564         	movff	?_tickGet,_ledTimer
 39779   00368A  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 39780   00368E  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 39781   003692  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 39782   003696  EFE6  F01B         	goto	l9209
 39783   00369A                     l1753:
 39784                           
 39785                           ; BSR set to: 5
 39786                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 39787   00369A  8CBF               	bsf	191,6,c	;volatile
 39788                           
 39789                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 39790   00369C  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39791                           
 39792                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 39793   00369E  EFB2  F01C         	goto	l9257
 39794   0036A2                     l1755:
 39795                           
 39796                           ; BSR set to: 5
 39797                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 39798   0036A2  9CBF               	bcf	191,6,c	;volatile
 39799                           
 39800                           ;../../VLCBlib_PIC/statusLeds2.c: 103:             flashCounter[1] = 0;
 39801   0036A4  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39802                           
 39803                           ;../../VLCBlib_PIC/statusLeds2.c: 104:             break;
 39804   0036A6  EFB2  F01C         	goto	l9257
 39805   0036AA                     l9163:
 39806                           
 39807                           ; BSR set to: 5
 39808                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 39809   0036AA  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39810   0036AE  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39811   0036B0  0E00               	movlw	0
 39812   0036B2  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39813   0036B4  0E19               	movlw	25
 39814   0036B6  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39815   0036B8  EC91  F030         	call	___awdiv	;wreg free
 39816   0036BC  3A01               	swapf	?___awdiv^(0+1280),f,c
 39817   0036BE  4601               	rlncf	?___awdiv^(0+1280),f,c
 39818   0036C0  4601               	rlncf	?___awdiv^(0+1280),f,c
 39819   0036C2  50BF               	movf	191,w,c	;volatile
 39820   0036C4  1801               	xorwf	?___awdiv^(0+1280),w,c
 39821   0036C6  0BBF               	andlw	-65
 39822   0036C8  1801               	xorwf	?___awdiv^(0+1280),w,c
 39823   0036CA  6EBF               	movwf	191,c	;volatile
 39824   0036CC                     
 39825                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 39826   0036CC  0E31               	movlw	49
 39827   0036CE  0105               	movlb	5	; () banked
 39828   0036D0  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39829   0036D2  EF6D  F01B         	goto	u6421
 39830   0036D6  EF6F  F01B         	goto	u6420
 39831   0036DA                     u6421:
 39832   0036DA  EFB2  F01C         	goto	l9257
 39833   0036DE                     u6420:
 39834   0036DE                     l9167:
 39835                           
 39836                           ; BSR set to: 5
 39837                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 39838   0036DE  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39839   0036E0  EFB2  F01C         	goto	l9257
 39840   0036E4                     l9169:
 39841                           
 39842                           ; BSR set to: 5
 39843                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 39844   0036E4  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39845   0036E8  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39846   0036EA  0E00               	movlw	0
 39847   0036EC  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39848   0036EE  0E32               	movlw	50
 39849   0036F0  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39850   0036F2  EC91  F030         	call	___awdiv	;wreg free
 39851   0036F6  3A01               	swapf	?___awdiv^(0+1280),f,c
 39852   0036F8  4601               	rlncf	?___awdiv^(0+1280),f,c
 39853   0036FA  4601               	rlncf	?___awdiv^(0+1280),f,c
 39854   0036FC  50BF               	movf	191,w,c	;volatile
 39855   0036FE  1801               	xorwf	?___awdiv^(0+1280),w,c
 39856   003700  0BBF               	andlw	-65
 39857   003702  1801               	xorwf	?___awdiv^(0+1280),w,c
 39858   003704  6EBF               	movwf	191,c	;volatile
 39859   003706                     
 39860                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 39861   003706  0E63               	movlw	99
 39862   003708  0105               	movlb	5	; () banked
 39863   00370A  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39864   00370C  EF8A  F01B         	goto	u6431
 39865   003710  EF8C  F01B         	goto	u6430
 39866   003714                     u6431:
 39867   003714  EFB2  F01C         	goto	l9257
 39868   003718                     u6430:
 39869   003718  EF6F  F01B         	goto	l9167
 39870   00371C                     l9175:
 39871                           
 39872                           ; BSR set to: 5
 39873                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 39874   00371C  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39875   003720  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39876   003722  0E00               	movlw	0
 39877   003724  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39878   003726  0E64               	movlw	100
 39879   003728  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39880   00372A  EC91  F030         	call	___awdiv	;wreg free
 39881   00372E  3A01               	swapf	?___awdiv^(0+1280),f,c
 39882   003730  4601               	rlncf	?___awdiv^(0+1280),f,c
 39883   003732  4601               	rlncf	?___awdiv^(0+1280),f,c
 39884   003734  50BF               	movf	191,w,c	;volatile
 39885   003736  1801               	xorwf	?___awdiv^(0+1280),w,c
 39886   003738  0BBF               	andlw	-65
 39887   00373A  1801               	xorwf	?___awdiv^(0+1280),w,c
 39888   00373C  6EBF               	movwf	191,c	;volatile
 39889   00373E                     
 39890                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 39891   00373E  0EC7               	movlw	199
 39892   003740  0105               	movlb	5	; () banked
 39893   003742  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39894   003744  EFA6  F01B         	goto	u6441
 39895   003748  EFA8  F01B         	goto	u6440
 39896   00374C                     u6441:
 39897   00374C  EFB2  F01C         	goto	l9257
 39898   003750                     u6440:
 39899   003750  EF6F  F01B         	goto	l9167
 39900   003754                     l1762:
 39901                           
 39902                           ; BSR set to: 5
 39903                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 39904   003754  8CBF               	bsf	191,6,c	;volatile
 39905   003756                     
 39906                           ; BSR set to: 5
 39907                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 39908   003756  0E18               	movlw	24
 39909   003758  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39910   00375A  EFB1  F01B         	goto	u6451
 39911   00375E  EFB3  F01B         	goto	u6450
 39912   003762                     u6451:
 39913   003762  EFB2  F01C         	goto	l9257
 39914   003766                     u6450:
 39915   003766                     l9183:
 39916                           
 39917                           ; BSR set to: 5
 39918                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 39919   003766  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39920                           
 39921                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 39922   003768  6B8C               	clrf	(_ledState+1)& (0+255),b
 39923   00376A  EFB2  F01C         	goto	l9257
 39924   00376E                     l1764:
 39925                           
 39926                           ; BSR set to: 5
 39927                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 39928   00376E  9CBF               	bcf	191,6,c	;volatile
 39929   003770                     
 39930                           ; BSR set to: 5
 39931                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 39932   003770  0E18               	movlw	24
 39933   003772  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39934   003774  EFBE  F01B         	goto	u6461
 39935   003778  EFC0  F01B         	goto	u6460
 39936   00377C                     u6461:
 39937   00377C  EFB2  F01C         	goto	l9257
 39938   003780                     u6460:
 39939   003780                     l9187:
 39940                           
 39941                           ; BSR set to: 5
 39942                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 39943   003780  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39944   003782                     
 39945                           ; BSR set to: 5
 39946                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 39947   003782  0E01               	movlw	1
 39948   003784  6F8C               	movwf	(_ledState+1)& (0+255),b
 39949   003786  EFB2  F01C         	goto	l9257
 39950   00378A                     l1766:
 39951                           
 39952                           ; BSR set to: 5
 39953                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 39954   00378A  8CBF               	bsf	191,6,c	;volatile
 39955   00378C                     
 39956                           ; BSR set to: 5
 39957                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 39958   00378C  0E31               	movlw	49
 39959   00378E  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39960   003790  EFCC  F01B         	goto	u6471
 39961   003794  EFCE  F01B         	goto	u6470
 39962   003798                     u6471:
 39963   003798  EFB2  F01C         	goto	l9257
 39964   00379C                     u6470:
 39965   00379C  EFB3  F01B         	goto	l9183
 39966   0037A0                     l1768:
 39967                           
 39968                           ; BSR set to: 5
 39969                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 39970   0037A0  9CBF               	bcf	191,6,c	;volatile
 39971   0037A2                     
 39972                           ; BSR set to: 5
 39973                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 39974   0037A2  0E31               	movlw	49
 39975   0037A4  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39976   0037A6  EFD7  F01B         	goto	u6481
 39977   0037AA  EFD9  F01B         	goto	u6480
 39978   0037AE                     u6481:
 39979   0037AE  EFB2  F01C         	goto	l9257
 39980   0037B2                     u6480:
 39981   0037B2  EFC0  F01B         	goto	l9187
 39982   0037B6                     l1770:
 39983                           
 39984                           ; BSR set to: 5
 39985                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 39986   0037B6  9CBF               	bcf	191,6,c	;volatile
 39987   0037B8                     
 39988                           ; BSR set to: 5
 39989                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 39990   0037B8  0E63               	movlw	99
 39991   0037BA  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39992   0037BC  EFE2  F01B         	goto	u6491
 39993   0037C0  EFE4  F01B         	goto	u6490
 39994   0037C4                     u6491:
 39995   0037C4  EFB2  F01C         	goto	l9257
 39996   0037C8                     u6490:
 39997   0037C8  EFC0  F01B         	goto	l9187
 39998   0037CC                     l9209:
 39999   0037CC  0105               	movlb	5	; () banked
 40000   0037CE  518C               	movf	(_ledState+1)& (0+255),w,b
 40001   0037D0  6E0B               	movwf	??_leds_poll^(0+1280),c
 40002   0037D2  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 40003                           
 40004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40005                           ; Switch size 1, requested type "simple"
 40006                           ; Number of cases is 1, Range of values is 0 to 0
 40007                           ; switch strategies available:
 40008                           ; Name         Instructions Cycles
 40009                           ; simple_byte            4     3 (average)
 40010                           ;	Chosen strategy is simple_byte
 40011   0037D4  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 40012   0037D6  0A00               	xorlw	0	; case 0
 40013   0037D8  B4D8               	btfsc	status,2,c
 40014   0037DA  EFF1  F01B         	goto	l11801
 40015   0037DE  EFB2  F01C         	goto	l9257
 40016   0037E2                     l11801:
 40017                           
 40018                           ; BSR set to: 5
 40019                           ; Switch size 1, requested type "simple"
 40020                           ; Number of cases is 10, Range of values is 0 to 9
 40021                           ; switch strategies available:
 40022                           ; Name         Instructions Cycles
 40023                           ; simple_byte           31    16 (average)
 40024                           ;	Chosen strategy is simple_byte
 40025   0037E2  500B               	movf	??_leds_poll^(0+1280),w,c
 40026   0037E4  0A00               	xorlw	0	; case 0
 40027   0037E6  B4D8               	btfsc	status,2,c
 40028   0037E8  EF51  F01B         	goto	l1755
 40029   0037EC  0A01               	xorlw	1	; case 1
 40030   0037EE  B4D8               	btfsc	status,2,c
 40031   0037F0  EF4D  F01B         	goto	l1753
 40032   0037F4  0A03               	xorlw	3	; case 2
 40033   0037F6  B4D8               	btfsc	status,2,c
 40034   0037F8  EF55  F01B         	goto	l9163
 40035   0037FC  0A01               	xorlw	1	; case 3
 40036   0037FE  B4D8               	btfsc	status,2,c
 40037   003800  EF72  F01B         	goto	l9169
 40038   003804  0A07               	xorlw	7	; case 4
 40039   003806  B4D8               	btfsc	status,2,c
 40040   003808  EF8E  F01B         	goto	l9175
 40041   00380C  0A01               	xorlw	1	; case 5
 40042   00380E  B4D8               	btfsc	status,2,c
 40043   003810  EFB7  F01B         	goto	l1764
 40044   003814  0A03               	xorlw	3	; case 6
 40045   003816  B4D8               	btfsc	status,2,c
 40046   003818  EFAA  F01B         	goto	l1762
 40047   00381C  0A01               	xorlw	1	; case 7
 40048   00381E  B4D8               	btfsc	status,2,c
 40049   003820  EFD0  F01B         	goto	l1768
 40050   003824  0A0F               	xorlw	15	; case 8
 40051   003826  B4D8               	btfsc	status,2,c
 40052   003828  EFC5  F01B         	goto	l1766
 40053   00382C  0A01               	xorlw	1	; case 9
 40054   00382E  B4D8               	btfsc	status,2,c
 40055   003830  EFDB  F01B         	goto	l1770
 40056   003834  EFB2  F01C         	goto	l9257
 40057   003838                     l1773:
 40058                           
 40059                           ; BSR set to: 5
 40060                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 40061   003838  8EBF               	bsf	191,7,c	;volatile
 40062                           
 40063                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 40064   00383A  6B89               	clrf	_flashCounter& (0+255),b
 40065                           
 40066                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 40067   00383C  EFE7  F01C         	goto	l1792
 40068   003840                     l1775:
 40069                           
 40070                           ; BSR set to: 5
 40071                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 40072   003840  9EBF               	bcf	191,7,c	;volatile
 40073                           
 40074                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 40075   003842  6B89               	clrf	_flashCounter& (0+255),b
 40076                           
 40077                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 40078   003844  EFE7  F01C         	goto	l1792
 40079   003848                     l9211:
 40080                           
 40081                           ; BSR set to: 5
 40082                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 40083   003848  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40084   00384C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40085   00384E  0E00               	movlw	0
 40086   003850  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40087   003852  0E19               	movlw	25
 40088   003854  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40089   003856  EC91  F030         	call	___awdiv	;wreg free
 40090   00385A  3201               	rrcf	?___awdiv^(0+1280),f,c
 40091   00385C  3201               	rrcf	?___awdiv^(0+1280),f,c
 40092   00385E  50BF               	movf	191,w,c	;volatile
 40093   003860  1801               	xorwf	?___awdiv^(0+1280),w,c
 40094   003862  0B7F               	andlw	-129
 40095   003864  1801               	xorwf	?___awdiv^(0+1280),w,c
 40096   003866  6EBF               	movwf	191,c	;volatile
 40097   003868                     
 40098                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 40099   003868  0E31               	movlw	49
 40100   00386A  0105               	movlb	5	; () banked
 40101   00386C  6589               	cpfsgt	_flashCounter& (0+255),b
 40102   00386E  EF3B  F01C         	goto	u6501
 40103   003872  EF3D  F01C         	goto	u6500
 40104   003876                     u6501:
 40105   003876  EFE7  F01C         	goto	l1792
 40106   00387A                     u6500:
 40107   00387A                     l9215:
 40108                           
 40109                           ; BSR set to: 5
 40110                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 40111   00387A  6B89               	clrf	_flashCounter& (0+255),b
 40112   00387C  EFE7  F01C         	goto	l1792
 40113   003880                     l9217:
 40114                           
 40115                           ; BSR set to: 5
 40116                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 40117   003880  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40118   003884  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40119   003886  0E00               	movlw	0
 40120   003888  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40121   00388A  0E32               	movlw	50
 40122   00388C  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40123   00388E  EC91  F030         	call	___awdiv	;wreg free
 40124   003892  3201               	rrcf	?___awdiv^(0+1280),f,c
 40125   003894  3201               	rrcf	?___awdiv^(0+1280),f,c
 40126   003896  50BF               	movf	191,w,c	;volatile
 40127   003898  1801               	xorwf	?___awdiv^(0+1280),w,c
 40128   00389A  0B7F               	andlw	-129
 40129   00389C  1801               	xorwf	?___awdiv^(0+1280),w,c
 40130   00389E  6EBF               	movwf	191,c	;volatile
 40131   0038A0                     
 40132                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 40133   0038A0  0E63               	movlw	99
 40134   0038A2  0105               	movlb	5	; () banked
 40135   0038A4  6589               	cpfsgt	_flashCounter& (0+255),b
 40136   0038A6  EF57  F01C         	goto	u6511
 40137   0038AA  EF59  F01C         	goto	u6510
 40138   0038AE                     u6511:
 40139   0038AE  EFE7  F01C         	goto	l1792
 40140   0038B2                     u6510:
 40141   0038B2  EF3D  F01C         	goto	l9215
 40142   0038B6                     l9223:
 40143                           
 40144                           ; BSR set to: 5
 40145                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 40146   0038B6  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40147   0038BA  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40148   0038BC  0E00               	movlw	0
 40149   0038BE  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40150   0038C0  0E64               	movlw	100
 40151   0038C2  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40152   0038C4  EC91  F030         	call	___awdiv	;wreg free
 40153   0038C8  3201               	rrcf	?___awdiv^(0+1280),f,c
 40154   0038CA  3201               	rrcf	?___awdiv^(0+1280),f,c
 40155   0038CC  50BF               	movf	191,w,c	;volatile
 40156   0038CE  1801               	xorwf	?___awdiv^(0+1280),w,c
 40157   0038D0  0B7F               	andlw	-129
 40158   0038D2  1801               	xorwf	?___awdiv^(0+1280),w,c
 40159   0038D4  6EBF               	movwf	191,c	;volatile
 40160   0038D6                     
 40161                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 40162   0038D6  0EC7               	movlw	199
 40163   0038D8  0105               	movlb	5	; () banked
 40164   0038DA  6589               	cpfsgt	_flashCounter& (0+255),b
 40165   0038DC  EF72  F01C         	goto	u6521
 40166   0038E0  EF74  F01C         	goto	u6520
 40167   0038E4                     u6521:
 40168   0038E4  EFE7  F01C         	goto	l1792
 40169   0038E8                     u6520:
 40170   0038E8  EF3D  F01C         	goto	l9215
 40171   0038EC                     l1782:
 40172                           
 40173                           ; BSR set to: 5
 40174                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 40175   0038EC  8EBF               	bsf	191,7,c	;volatile
 40176   0038EE                     
 40177                           ; BSR set to: 5
 40178                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 40179   0038EE  0E18               	movlw	24
 40180   0038F0  6589               	cpfsgt	_flashCounter& (0+255),b
 40181   0038F2  EF7D  F01C         	goto	u6531
 40182   0038F6  EF7F  F01C         	goto	u6530
 40183   0038FA                     u6531:
 40184   0038FA  EFE7  F01C         	goto	l1792
 40185   0038FE                     u6530:
 40186   0038FE                     l9231:
 40187                           
 40188                           ; BSR set to: 5
 40189                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 40190   0038FE  6B89               	clrf	_flashCounter& (0+255),b
 40191                           
 40192                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 40193   003900  6B8B               	clrf	_ledState& (0+255),b
 40194   003902  EFE7  F01C         	goto	l1792
 40195   003906                     l1784:
 40196                           
 40197                           ; BSR set to: 5
 40198                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 40199   003906  9EBF               	bcf	191,7,c	;volatile
 40200   003908                     
 40201                           ; BSR set to: 5
 40202                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 40203   003908  0E18               	movlw	24
 40204   00390A  6589               	cpfsgt	_flashCounter& (0+255),b
 40205   00390C  EF8A  F01C         	goto	u6541
 40206   003910  EF8C  F01C         	goto	u6540
 40207   003914                     u6541:
 40208   003914  EFE7  F01C         	goto	l1792
 40209   003918                     u6540:
 40210   003918                     l9235:
 40211                           
 40212                           ; BSR set to: 5
 40213                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 40214   003918  6B89               	clrf	_flashCounter& (0+255),b
 40215   00391A                     
 40216                           ; BSR set to: 5
 40217                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 40218   00391A  0E01               	movlw	1
 40219   00391C  6F8B               	movwf	_ledState& (0+255),b
 40220   00391E  EFE7  F01C         	goto	l1792
 40221   003922                     l1786:
 40222                           
 40223                           ; BSR set to: 5
 40224                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 40225   003922  8EBF               	bsf	191,7,c	;volatile
 40226   003924                     
 40227                           ; BSR set to: 5
 40228                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 40229   003924  0E31               	movlw	49
 40230   003926  6589               	cpfsgt	_flashCounter& (0+255),b
 40231   003928  EF98  F01C         	goto	u6551
 40232   00392C  EF9A  F01C         	goto	u6550
 40233   003930                     u6551:
 40234   003930  EFE7  F01C         	goto	l1792
 40235   003934                     u6550:
 40236   003934  EF7F  F01C         	goto	l9231
 40237   003938                     l1788:
 40238                           
 40239                           ; BSR set to: 5
 40240                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 40241   003938  9EBF               	bcf	191,7,c	;volatile
 40242   00393A                     
 40243                           ; BSR set to: 5
 40244                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 40245   00393A  0E31               	movlw	49
 40246   00393C  6589               	cpfsgt	_flashCounter& (0+255),b
 40247   00393E  EFA3  F01C         	goto	u6561
 40248   003942  EFA5  F01C         	goto	u6560
 40249   003946                     u6561:
 40250   003946  EFE7  F01C         	goto	l1792
 40251   00394A                     u6560:
 40252   00394A  EF8C  F01C         	goto	l9235
 40253   00394E                     l1790:
 40254                           
 40255                           ; BSR set to: 5
 40256                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 40257   00394E  9EBF               	bcf	191,7,c	;volatile
 40258   003950                     
 40259                           ; BSR set to: 5
 40260                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 40261   003950  0E63               	movlw	99
 40262   003952  6589               	cpfsgt	_flashCounter& (0+255),b
 40263   003954  EFAE  F01C         	goto	u6571
 40264   003958  EFB0  F01C         	goto	u6570
 40265   00395C                     u6571:
 40266   00395C  EFE7  F01C         	goto	l1792
 40267   003960                     u6570:
 40268   003960  EF8C  F01C         	goto	l9235
 40269   003964                     l9257:
 40270                           
 40271                           ; BSR set to: 5
 40272   003964  518B               	movf	_ledState& (0+255),w,b
 40273   003966  6E0B               	movwf	??_leds_poll^(0+1280),c
 40274   003968  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 40275                           
 40276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40277                           ; Switch size 1, requested type "simple"
 40278                           ; Number of cases is 1, Range of values is 0 to 0
 40279                           ; switch strategies available:
 40280                           ; Name         Instructions Cycles
 40281                           ; simple_byte            4     3 (average)
 40282                           ;	Chosen strategy is simple_byte
 40283   00396A  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 40284   00396C  0A00               	xorlw	0	; case 0
 40285   00396E  B4D8               	btfsc	status,2,c
 40286   003970  EFBC  F01C         	goto	l11803
 40287   003974  EFE7  F01C         	goto	l1792
 40288   003978                     l11803:
 40289                           
 40290                           ; BSR set to: 5
 40291                           ; Switch size 1, requested type "simple"
 40292                           ; Number of cases is 10, Range of values is 0 to 9
 40293                           ; switch strategies available:
 40294                           ; Name         Instructions Cycles
 40295                           ; simple_byte           31    16 (average)
 40296                           ;	Chosen strategy is simple_byte
 40297   003978  500B               	movf	??_leds_poll^(0+1280),w,c
 40298   00397A  0A00               	xorlw	0	; case 0
 40299   00397C  B4D8               	btfsc	status,2,c
 40300   00397E  EF20  F01C         	goto	l1775
 40301   003982  0A01               	xorlw	1	; case 1
 40302   003984  B4D8               	btfsc	status,2,c
 40303   003986  EF1C  F01C         	goto	l1773
 40304   00398A  0A03               	xorlw	3	; case 2
 40305   00398C  B4D8               	btfsc	status,2,c
 40306   00398E  EF24  F01C         	goto	l9211
 40307   003992  0A01               	xorlw	1	; case 3
 40308   003994  B4D8               	btfsc	status,2,c
 40309   003996  EF40  F01C         	goto	l9217
 40310   00399A  0A07               	xorlw	7	; case 4
 40311   00399C  B4D8               	btfsc	status,2,c
 40312   00399E  EF5B  F01C         	goto	l9223
 40313   0039A2  0A01               	xorlw	1	; case 5
 40314   0039A4  B4D8               	btfsc	status,2,c
 40315   0039A6  EF83  F01C         	goto	l1784
 40316   0039AA  0A03               	xorlw	3	; case 6
 40317   0039AC  B4D8               	btfsc	status,2,c
 40318   0039AE  EF76  F01C         	goto	l1782
 40319   0039B2  0A01               	xorlw	1	; case 7
 40320   0039B4  B4D8               	btfsc	status,2,c
 40321   0039B6  EF9C  F01C         	goto	l1788
 40322   0039BA  0A0F               	xorlw	15	; case 8
 40323   0039BC  B4D8               	btfsc	status,2,c
 40324   0039BE  EF91  F01C         	goto	l1786
 40325   0039C2  0A01               	xorlw	1	; case 9
 40326   0039C4  B4D8               	btfsc	status,2,c
 40327   0039C6  EFA7  F01C         	goto	l1790
 40328   0039CA  EFE7  F01C         	goto	l1792
 40329   0039CE                     l1792:
 40330                           
 40331                           ; BSR set to: 5
 40332   0039CE  0012               	return		;funcret
 40333   0039D0                     __end_of_leds_poll:
 40334                           	callstack 0
 40335                           
 40336 ;; *************** function ___lmul *****************
 40337 ;; Defined at:
 40338 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 40339 ;; Parameters:    Size  Location     Type
 40340 ;;  multiplier      4    0[COMRAM] unsigned long 
 40341 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40342 ;; Auto vars:     Size  Location     Type
 40343 ;;  product         4    8[COMRAM] unsigned long 
 40344 ;; Return value:  Size  Location     Type
 40345 ;;                  4    0[COMRAM] unsigned long 
 40346 ;; Registers used:
 40347 ;;		wreg, status,2, status,0
 40348 ;; Tracked objects:
 40349 ;;		On entry : 0/0
 40350 ;;		On exit  : 0/0
 40351 ;;		Unchanged: 0/0
 40352 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40356 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40357 ;;Total ram usage:       12 bytes
 40358 ;; Hardware stack levels used: 1
 40359 ;; Hardware stack levels required when called: 1
 40360 ;; This function calls:
 40361 ;;		Nothing
 40362 ;; This function is called by:
 40363 ;;		_pbDownTimer
 40364 ;;		_pbUpTimer
 40365 ;;		_poll
 40366 ;; This function uses a non-reentrant model
 40367 ;;
 40368                           
 40369                           	psect	text111
 40370   0076CC                     __ptext111:
 40371                           	callstack 0
 40372   0076CC                     ___lmul:
 40373                           	callstack 124
 40374   0076CC  0E00               	movlw	0
 40375   0076CE  6E09               	movwf	___lmul@product^(0+1280),c
 40376   0076D0  0E00               	movlw	0
 40377   0076D2  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 40378   0076D4  0E00               	movlw	0
 40379   0076D6  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 40380   0076D8  0E00               	movlw	0
 40381   0076DA  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 40382   0076DC                     l9273:
 40383   0076DC  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 40384   0076DE  EF73  F03B         	goto	u6581
 40385   0076E2  EF75  F03B         	goto	u6580
 40386   0076E6                     u6581:
 40387   0076E6  EF7D  F03B         	goto	l9277
 40388   0076EA                     u6580:
 40389   0076EA  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 40390   0076EC  2609               	addwf	___lmul@product^(0+1280),f,c
 40391   0076EE  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 40392   0076F0  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 40393   0076F2  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 40394   0076F4  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 40395   0076F6  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 40396   0076F8  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 40397   0076FA                     l9277:
 40398   0076FA  90D8               	bcf	status,0,c
 40399   0076FC  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 40400   0076FE  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 40401   007700  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 40402   007702  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 40403   007704  90D8               	bcf	status,0,c
 40404   007706  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 40405   007708  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 40406   00770A  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 40407   00770C  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 40408   00770E  5001               	movf	___lmul@multiplier^(0+1280),w,c
 40409   007710  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 40410   007712  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 40411   007714  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 40412   007716  A4D8               	btfss	status,2,c
 40413   007718  EF90  F03B         	goto	u6591
 40414   00771C  EF92  F03B         	goto	u6590
 40415   007720                     u6591:
 40416   007720  EF6E  F03B         	goto	l9273
 40417   007724                     u6590:
 40418   007724  C509  F501         	movff	___lmul@product,?___lmul
 40419   007728  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 40420   00772C  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 40421   007730  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 40422   007734  0012               	return		;funcret
 40423   007736                     __end_of___lmul:
 40424                           	callstack 0
 40425                           
 40426 ;; *************** function ___lldiv *****************
 40427 ;; Defined at:
 40428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 40429 ;; Parameters:    Size  Location     Type
 40430 ;;  dividend        4   10[COMRAM] unsigned long 
 40431 ;;  divisor         4   14[COMRAM] unsigned long 
 40432 ;; Auto vars:     Size  Location     Type
 40433 ;;  quotient        4   18[COMRAM] unsigned long 
 40434 ;;  counter         1   22[COMRAM] unsigned char 
 40435 ;; Return value:  Size  Location     Type
 40436 ;;                  4   10[COMRAM] unsigned long 
 40437 ;; Registers used:
 40438 ;;		wreg, status,2, status,0
 40439 ;; Tracked objects:
 40440 ;;		On entry : 0/0
 40441 ;;		On exit  : 0/0
 40442 ;;		Unchanged: 0/0
 40443 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40445 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40447 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40448 ;;Total ram usage:       13 bytes
 40449 ;; Hardware stack levels used: 1
 40450 ;; Hardware stack levels required when called: 1
 40451 ;; This function calls:
 40452 ;;		Nothing
 40453 ;; This function is called by:
 40454 ;;		_pbDownTimer
 40455 ;;		_pbUpTimer
 40456 ;; This function uses a non-reentrant model
 40457 ;;
 40458                           
 40459                           	psect	text112
 40460   006820                     __ptext112:
 40461                           	callstack 0
 40462   006820                     ___lldiv:
 40463                           	callstack 123
 40464   006820  0E00               	movlw	0
 40465   006822  6E13               	movwf	___lldiv@quotient^(0+1280),c
 40466   006824  0E00               	movlw	0
 40467   006826  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 40468   006828  0E00               	movlw	0
 40469   00682A  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 40470   00682C  0E00               	movlw	0
 40471   00682E  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 40472   006830  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40473   006832  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 40474   006834  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 40475   006836  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 40476   006838  B4D8               	btfsc	status,2,c
 40477   00683A  EF21  F034         	goto	u6601
 40478   00683E  EF23  F034         	goto	u6600
 40479   006842                     u6601:
 40480   006842  EF59  F034         	goto	l2141
 40481   006846                     u6600:
 40482   006846  0E01               	movlw	1
 40483   006848  6E17               	movwf	___lldiv@counter^(0+1280),c
 40484   00684A  EF2D  F034         	goto	l9289
 40485   00684E                     l9287:
 40486   00684E  90D8               	bcf	status,0,c
 40487   006850  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 40488   006852  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 40489   006854  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 40490   006856  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 40491   006858  2A17               	incf	___lldiv@counter^(0+1280),f,c
 40492   00685A                     l9289:
 40493   00685A  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 40494   00685C  EF32  F034         	goto	u6611
 40495   006860  EF34  F034         	goto	u6610
 40496   006864                     u6611:
 40497   006864  EF27  F034         	goto	l9287
 40498   006868                     u6610:
 40499   006868                     l9291:
 40500   006868  90D8               	bcf	status,0,c
 40501   00686A  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 40502   00686C  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 40503   00686E  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 40504   006870  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 40505   006872  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40506   006874  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 40507   006876  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40508   006878  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 40509   00687A  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40510   00687C  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 40511   00687E  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40512   006880  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 40513   006882  A0D8               	btfss	status,0,c
 40514   006884  EF46  F034         	goto	u6621
 40515   006888  EF48  F034         	goto	u6620
 40516   00688C                     u6621:
 40517   00688C  EF51  F034         	goto	l9299
 40518   006890                     u6620:
 40519   006890  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40520   006892  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 40521   006894  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40522   006896  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 40523   006898  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40524   00689A  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 40525   00689C  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40526   00689E  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 40527   0068A0  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 40528   0068A2                     l9299:
 40529   0068A2  90D8               	bcf	status,0,c
 40530   0068A4  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 40531   0068A6  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 40532   0068A8  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 40533   0068AA  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 40534   0068AC  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 40535   0068AE  EF34  F034         	goto	l9291
 40536   0068B2                     l2141:
 40537   0068B2  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 40538   0068B6  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 40539   0068BA  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 40540   0068BE  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 40541   0068C2  0012               	return		;funcret
 40542   0068C4                     __end_of___lldiv:
 40543                           	callstack 0
 40544                           
 40545 ;; *************** function _factoryReset *****************
 40546 ;; Defined at:
 40547 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 40548 ;; Parameters:    Size  Location     Type
 40549 ;;		None
 40550 ;; Auto vars:     Size  Location     Type
 40551 ;;  i               1   58[COMRAM] unsigned char 
 40552 ;; Return value:  Size  Location     Type
 40553 ;;                  1    wreg      void 
 40554 ;; Registers used:
 40555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40556 ;; Tracked objects:
 40557 ;;		On entry : 0/0
 40558 ;;		On exit  : 0/0
 40559 ;;		Unchanged: 0/0
 40560 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40564 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40565 ;;Total ram usage:        5 bytes
 40566 ;; Hardware stack levels used: 1
 40567 ;; Hardware stack levels required when called: 10
 40568 ;; This function calls:
 40569 ;;		NULL
 40570 ;;		_APP_factoryReset
 40571 ;;		_canFactoryReset
 40572 ;;		_mnsFactoryReset
 40573 ;;		_nvFactoryReset
 40574 ;;		_teachFactoryReset
 40575 ;;		_writeNVM
 40576 ;; This function is called by:
 40577 ;;		_checkPowerOnPb
 40578 ;;		_main
 40579 ;; This function uses a non-reentrant model
 40580 ;;
 40581                           
 40582                           	psect	text113
 40583   00566C                     __ptext113:
 40584                           	callstack 0
 40585   00566C                     _factoryReset:
 40586                           	callstack 116
 40587   00566C                     
 40588                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<6; i++) {
 40589   00566C  6A3B               	clrf	factoryReset@i^(0+1280),c
 40590   00566E                     l10923:
 40591                           
 40592                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 40593   00566E  503B               	movf	factoryReset@i^(0+1280),w,c
 40594   005670  0D02               	mullw	2
 40595   005672  0E89               	movlw	low _services
 40596   005674  24F3               	addwf	243,w,c
 40597   005676  6EF6               	movwf	tblptrl,c
 40598   005678  0EFF               	movlw	high _services
 40599   00567A  20F4               	addwfc	244,w,c
 40600   00567C  6EF7               	movwf	tblptrh,c
 40601   00567E                     	if	1	;There are 3 active tblptr bytes
 40602   00567E  6AF8               	clrf	tblptru,c
 40603   005680  0E00               	movlw	low (__mediumconst shr (0+16))
 40604   005682  22F8               	addwfc	tblptru,f,c
 40605   005684                     	endif
 40606   005684  0009               	tblrd		*+
 40607   005686  50F5               	movf	tablat,w,c
 40608   005688  0009               	tblrd		*+
 40609   00568A  10F5               	iorwf	tablat,w,c
 40610   00568C  B4D8               	btfsc	status,2,c
 40611   00568E  EF4B  F02B         	goto	u8261
 40612   005692  EF4D  F02B         	goto	u8260
 40613   005696                     u8261:
 40614   005696  EF9E  F02B         	goto	l10929
 40615   00569A                     u8260:
 40616   00569A  503B               	movf	factoryReset@i^(0+1280),w,c
 40617   00569C  0D02               	mullw	2
 40618   00569E  0E89               	movlw	low _services
 40619   0056A0  24F3               	addwf	243,w,c
 40620   0056A2  6EF6               	movwf	tblptrl,c
 40621   0056A4  0EFF               	movlw	high _services
 40622   0056A6  20F4               	addwfc	244,w,c
 40623   0056A8  6EF7               	movwf	tblptrh,c
 40624   0056AA                     	if	1	;There are 3 active tblptr bytes
 40625   0056AA  6AF8               	clrf	tblptru,c
 40626   0056AC  0E00               	movlw	low (__mediumconst shr (0+16))
 40627   0056AE  22F8               	addwfc	tblptru,f,c
 40628   0056B0                     	endif
 40629   0056B0  0009               	tblrd		*+
 40630   0056B2  C4F5 F537          	movff	tablat,??_factoryReset
 40631   0056B6  0009               	tblrd		*+
 40632   0056B8  C4F5 F538          	movff	tablat,??_factoryReset+1
 40633   0056BC  0E02               	movlw	2
 40634   0056BE  2637               	addwf	??_factoryReset^(0+1280),f,c
 40635   0056C0  0E00               	movlw	0
 40636   0056C2  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40637   0056C4  C537  F4F6         	movff	??_factoryReset,tblptrl
 40638   0056C8  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40639   0056CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40640   0056CC  6AF8               	clrf	tblptru,c
 40641   0056CE                     	endif
 40642   0056CE                     	if	0	;tblptru may be non-zero
 40643   0056CE                     	endif
 40644   0056CE  0009               	tblrd		*+
 40645   0056D0  50F5               	movf	tablat,w,c
 40646   0056D2  0009               	tblrd		*+
 40647   0056D4  10F5               	iorwf	tablat,w,c
 40648   0056D6  B4D8               	btfsc	status,2,c
 40649   0056D8  EF70  F02B         	goto	u8271
 40650   0056DC  EF72  F02B         	goto	u8270
 40651   0056E0                     u8271:
 40652   0056E0  EF9E  F02B         	goto	l10929
 40653   0056E4                     u8270:
 40654   0056E4                     
 40655                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 40656   0056E4  503B               	movf	factoryReset@i^(0+1280),w,c
 40657   0056E6  0D02               	mullw	2
 40658   0056E8  0E89               	movlw	low _services
 40659   0056EA  24F3               	addwf	243,w,c
 40660   0056EC  6EF6               	movwf	tblptrl,c
 40661   0056EE  0EFF               	movlw	high _services
 40662   0056F0  20F4               	addwfc	244,w,c
 40663   0056F2  6EF7               	movwf	tblptrh,c
 40664   0056F4                     	if	1	;There are 3 active tblptr bytes
 40665   0056F4  6AF8               	clrf	tblptru,c
 40666   0056F6  0E00               	movlw	low (__mediumconst shr (0+16))
 40667   0056F8  22F8               	addwfc	tblptru,f,c
 40668   0056FA                     	endif
 40669   0056FA  0009               	tblrd		*+
 40670   0056FC  C4F5 F537          	movff	tablat,??_factoryReset
 40671   005700  0009               	tblrd		*+
 40672   005702  C4F5 F538          	movff	tablat,??_factoryReset+1
 40673   005706  0E02               	movlw	2
 40674   005708  2637               	addwf	??_factoryReset^(0+1280),f,c
 40675   00570A  0E00               	movlw	0
 40676   00570C  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40677   00570E  C537  F4F6         	movff	??_factoryReset,tblptrl
 40678   005712  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40679   005716                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40680   005716  6AF8               	clrf	tblptru,c
 40681   005718                     	endif
 40682   005718                     	if	0	;tblptru may be non-zero
 40683   005718                     	endif
 40684   005718  0009               	tblrd		*+
 40685   00571A  C4F5 F539          	movff	tablat,??_factoryReset+2
 40686   00571E  0009               	tblrd		*+
 40687   005720  C4F5 F53A          	movff	tablat,??_factoryReset+3
 40688   005724  D802               	call	u8288
 40689   005726  EF9E  F02B         	goto	u8289
 40690   00572A                     u8288:
 40691   00572A  0005               	push	
 40692   00572C  6EFA               	movwf	pclath,c
 40693   00572E  5039               	movf	(??_factoryReset+2)^(0+1280),w,c
 40694   005730  6EFD               	movwf	tosl,c
 40695   005732  503A               	movf	(??_factoryReset+3)^(0+1280),w,c
 40696   005734  6EFE               	movwf	tosh,c
 40697   005736  6AFF               	clrf	tosu,c
 40698   005738  50FA               	movf	pclath,w,c
 40699   00573A  0012               	return		;indir
 40700   00573C                     u8289:
 40701   00573C                     l10929:
 40702                           
 40703                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 40704   00573C  2A3B               	incf	factoryReset@i^(0+1280),f,c
 40705   00573E  0E05               	movlw	5
 40706   005740  643B               	cpfsgt	factoryReset@i^(0+1280),c
 40707   005742  EFA5  F02B         	goto	u8291
 40708   005746  EFA7  F02B         	goto	u8290
 40709   00574A                     u8291:
 40710   00574A  EF37  F02B         	goto	l10923
 40711   00574E                     u8290:
 40712   00574E                     
 40713                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 40714   00574E  0EFA               	movlw	250
 40715   005750  6E0E               	movwf	writeNVM@index^(0+1280),c
 40716   005752  0E03               	movlw	3
 40717   005754  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40718   005756  0E00               	movlw	0
 40719   005758  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40720   00575A  0E01               	movlw	1
 40721   00575C  6E11               	movwf	writeNVM@value^(0+1280),c
 40722   00575E  0E00               	movlw	0
 40723   005760  EC64  F03C         	call	_writeNVM
 40724   005764                     
 40725                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 40726   005764  ECC5  F041         	call	_APP_factoryReset	;wreg free
 40727   005768  0012               	return		;funcret
 40728   00576A                     __end_of_factoryReset:
 40729                           	callstack 0
 40730                           
 40731 ;; *************** function _nvFactoryReset *****************
 40732 ;; Defined at:
 40733 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 40734 ;; Parameters:    Size  Location     Type
 40735 ;;		None
 40736 ;; Auto vars:     Size  Location     Type
 40737 ;;  i               1   22[COMRAM] unsigned char 
 40738 ;; Return value:  Size  Location     Type
 40739 ;;                  1    wreg      void 
 40740 ;; Registers used:
 40741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40742 ;; Tracked objects:
 40743 ;;		On entry : 0/0
 40744 ;;		On exit  : 0/0
 40745 ;;		Unchanged: 0/0
 40746 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40751 ;;Total ram usage:        3 bytes
 40752 ;; Hardware stack levels used: 1
 40753 ;; Hardware stack levels required when called: 6
 40754 ;; This function calls:
 40755 ;;		_APP_nvDefault
 40756 ;;		_writeNVM
 40757 ;; This function is called by:
 40758 ;;		_factoryReset
 40759 ;; This function uses a non-reentrant model
 40760 ;;
 40761                           
 40762                           	psect	text114
 40763   007D82                     __ptext114:
 40764                           	callstack 0
 40765   007D82                     _nvFactoryReset:
 40766                           	callstack 119
 40767   007D82                     
 40768                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 49; i++) {
 40769   007D82  0E01               	movlw	1
 40770   007D84  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 40771   007D86                     l9075:
 40772                           
 40773                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 40774   007D86  0E00               	movlw	0
 40775   007D88  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 40776   007D8A  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 40777   007D8C  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 40778   007D8E  0E02               	movlw	2
 40779   007D90  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 40780   007D92  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 40781   007D96  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 40782   007D9A  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 40783   007D9C  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 40784   007D9E  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 40785   007DA0  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 40786   007DA2  ECF1  F028         	call	_APP_nvDefault
 40787   007DA6  6E11               	movwf	writeNVM@value^(0+1280),c
 40788   007DA8  0E00               	movlw	0
 40789   007DAA  EC64  F03C         	call	_writeNVM
 40790   007DAE                     
 40791                           ;../../VLCBlib_PIC/nv.c: 130:     }
 40792   007DAE  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 40793   007DB0  0E31               	movlw	49
 40794   007DB2  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 40795   007DB4  EFDE  F03E         	goto	u6341
 40796   007DB8  EFE0  F03E         	goto	u6340
 40797   007DBC                     u6341:
 40798   007DBC  EFC3  F03E         	goto	l9075
 40799   007DC0                     u6340:
 40800   007DC0  0012               	return		;funcret
 40801   007DC2                     __end_of_nvFactoryReset:
 40802                           	callstack 0
 40803                           
 40804 ;; *************** function _mnsFactoryReset *****************
 40805 ;; Defined at:
 40806 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 40807 ;; Parameters:    Size  Location     Type
 40808 ;;		None
 40809 ;; Auto vars:     Size  Location     Type
 40810 ;;		None
 40811 ;; Return value:  Size  Location     Type
 40812 ;;                  1    wreg      void 
 40813 ;; Registers used:
 40814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40815 ;; Tracked objects:
 40816 ;;		On entry : 0/0
 40817 ;;		On exit  : 0/0
 40818 ;;		Unchanged: 0/0
 40819 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40824 ;;Total ram usage:        0 bytes
 40825 ;; Hardware stack levels used: 1
 40826 ;; Hardware stack levels required when called: 6
 40827 ;; This function calls:
 40828 ;;		_writeNVM
 40829 ;; This function is called by:
 40830 ;;		_factoryReset
 40831 ;; This function uses a non-reentrant model
 40832 ;;
 40833                           
 40834                           	psect	text115
 40835   007660                     __ptext115:
 40836                           	callstack 0
 40837   007660                     _mnsFactoryReset:
 40838                           	callstack 119
 40839   007660                     
 40840                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 40841   007660  0105               	movlb	5	; () banked
 40842   007662  6B90               	clrf	(_nn+1)& (0+255),b
 40843                           
 40844                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 40845   007664  6B8F               	clrf	_nn& (0+255),b
 40846   007666                     
 40847                           ; BSR set to: 5
 40848                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 40849   007666  0EFD               	movlw	253
 40850   007668  6E0E               	movwf	writeNVM@index^(0+1280),c
 40851   00766A  0E03               	movlw	3
 40852   00766C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40853   00766E  0E00               	movlw	0
 40854   007670  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40855   007672  C590  F511         	movff	_nn+1,writeNVM@value
 40856   007676  0E00               	movlw	0
 40857   007678  EC64  F03C         	call	_writeNVM
 40858                           
 40859                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 40860   00767C  0EFC               	movlw	252
 40861   00767E  6E0E               	movwf	writeNVM@index^(0+1280),c
 40862   007680  0E03               	movlw	3
 40863   007682  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40864   007684  0E00               	movlw	0
 40865   007686  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40866   007688  C58F  F511         	movff	_nn,writeNVM@value
 40867   00768C  0E00               	movlw	0
 40868   00768E  EC64  F03C         	call	_writeNVM
 40869   007692                     
 40870                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 40871   007692  0105               	movlb	5	; () banked
 40872   007694  69A1               	setf	_mode_state& (0+255),b
 40873   007696  69A0               	setf	_last_mode_state& (0+255),b
 40874                           
 40875                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 40876   007698  0EFB               	movlw	251
 40877   00769A  6E0E               	movwf	writeNVM@index^(0+1280),c
 40878   00769C  0E03               	movlw	3
 40879   00769E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40880   0076A0  0E00               	movlw	0
 40881   0076A2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40882   0076A4  C5A1  F511         	movff	_mode_state,writeNVM@value
 40883   0076A8  0E00               	movlw	0
 40884   0076AA  EC64  F03C         	call	_writeNVM
 40885   0076AE                     
 40886                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 40887   0076AE  0105               	movlb	5	; () banked
 40888   0076B0  6BA4               	clrf	_mode_flags& (0+255),b
 40889   0076B2  6B9F               	clrf	_last_mode_flags& (0+255),b
 40890                           
 40891                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 40892   0076B4  0EF9               	movlw	249
 40893   0076B6  6E0E               	movwf	writeNVM@index^(0+1280),c
 40894   0076B8  0E03               	movlw	3
 40895   0076BA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40896   0076BC  0E00               	movlw	0
 40897   0076BE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40898   0076C0  C5A4  F511         	movff	_mode_flags,writeNVM@value
 40899   0076C4  0E00               	movlw	0
 40900   0076C6  EC64  F03C         	call	_writeNVM
 40901   0076CA  0012               	return		;funcret
 40902   0076CC                     __end_of_mnsFactoryReset:
 40903                           	callstack 0
 40904                           
 40905 ;; *************** function _canFactoryReset *****************
 40906 ;; Defined at:
 40907 ;;		line 210 in file "../../VLCBlib_PIC/can18_can_2.c"
 40908 ;; Parameters:    Size  Location     Type
 40909 ;;		None
 40910 ;; Auto vars:     Size  Location     Type
 40911 ;;		None
 40912 ;; Return value:  Size  Location     Type
 40913 ;;                  1    wreg      void 
 40914 ;; Registers used:
 40915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40916 ;; Tracked objects:
 40917 ;;		On entry : 0/0
 40918 ;;		On exit  : 0/0
 40919 ;;		Unchanged: 0/0
 40920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40925 ;;Total ram usage:        0 bytes
 40926 ;; Hardware stack levels used: 1
 40927 ;; Hardware stack levels required when called: 6
 40928 ;; This function calls:
 40929 ;;		_writeNVM
 40930 ;; This function is called by:
 40931 ;;		_factoryReset
 40932 ;; This function uses a non-reentrant model
 40933 ;;
 40934                           
 40935                           	psect	text116
 40936   0082A4                     __ptext116:
 40937                           	callstack 0
 40938   0082A4                     _canFactoryReset:
 40939                           	callstack 119
 40940   0082A4                     
 40941                           ;../../VLCBlib_PIC/can18_can_2.c: 211:     canId = 0;
 40942   0082A4  0105               	movlb	5	; () banked
 40943   0082A6  6BA8               	clrf	_canId& (0+255),b
 40944   0082A8                     
 40945                           ; BSR set to: 5
 40946                           ;../../VLCBlib_PIC/can18_can_2.c: 212:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 40947   0082A8  0EFE               	movlw	254
 40948   0082AA  6E0E               	movwf	writeNVM@index^(0+1280),c
 40949   0082AC  0E03               	movlw	3
 40950   0082AE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40951   0082B0  0E00               	movlw	0
 40952   0082B2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40953   0082B4  C5A8  F511         	movff	_canId,writeNVM@value
 40954   0082B8  0E00               	movlw	0
 40955   0082BA  EC64  F03C         	call	_writeNVM
 40956   0082BE  0012               	return		;funcret
 40957   0082C0                     __end_of_canFactoryReset:
 40958                           	callstack 0
 40959                           
 40960 ;; *************** function _teachFactoryReset *****************
 40961 ;; Defined at:
 40962 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40963 ;; Parameters:    Size  Location     Type
 40964 ;;		None
 40965 ;; Auto vars:     Size  Location     Type
 40966 ;;		None
 40967 ;; Return value:  Size  Location     Type
 40968 ;;                  1    wreg      void 
 40969 ;; Registers used:
 40970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40971 ;; Tracked objects:
 40972 ;;		On entry : 0/0
 40973 ;;		On exit  : 0/0
 40974 ;;		Unchanged: 0/0
 40975 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40980 ;;Total ram usage:        0 bytes
 40981 ;; Hardware stack levels used: 1
 40982 ;; Hardware stack levels required when called: 8
 40983 ;; This function calls:
 40984 ;;		_clearAllEvents
 40985 ;; This function is called by:
 40986 ;;		_factoryReset
 40987 ;; This function uses a non-reentrant model
 40988 ;;
 40989                           
 40990                           	psect	text117
 40991   008384                     __ptext117:
 40992                           	callstack 0
 40993   008384                     _teachFactoryReset:
 40994                           	callstack 117
 40995   008384                     
 40996                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 40997   008384  EC25  F041         	call	_clearAllEvents	;wreg free
 40998   008388  0012               	return		;funcret
 40999   00838A                     __end_of_teachFactoryReset:
 41000                           	callstack 0
 41001                           
 41002 ;; *************** function _APP_nvDefault *****************
 41003 ;; Defined at:
 41004 ;;		line 70 in file "../canargb_nvs.c"
 41005 ;; Parameters:    Size  Location     Type
 41006 ;;  index           1    wreg     unsigned char 
 41007 ;; Auto vars:     Size  Location     Type
 41008 ;;  index           1   10[COMRAM] unsigned char 
 41009 ;; Return value:  Size  Location     Type
 41010 ;;                  1    wreg      unsigned char 
 41011 ;; Registers used:
 41012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41013 ;; Tracked objects:
 41014 ;;		On entry : 0/0
 41015 ;;		On exit  : 0/0
 41016 ;;		Unchanged: 0/0
 41017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41022 ;;Total ram usage:        3 bytes
 41023 ;; Hardware stack levels used: 1
 41024 ;; Hardware stack levels required when called: 2
 41025 ;; This function calls:
 41026 ;;		___awdiv
 41027 ;;		___awmod
 41028 ;; This function is called by:
 41029 ;;		_nvFactoryReset
 41030 ;; This function uses a non-reentrant model
 41031 ;;
 41032                           
 41033                           	psect	text118
 41034   0051E2                     __ptext118:
 41035                           	callstack 0
 41036   0051E2                     _APP_nvDefault:
 41037                           	callstack 122
 41038                           
 41039                           ;incstack = 0
 41040                           ;APP_nvDefault@index stored from wreg
 41041   0051E2  6E0B               	movwf	APP_nvDefault@index^(0+1280),c
 41042   0051E4                     
 41043                           ;../canargb_nvs.c: 71:     if (index == 49) {
 41044   0051E4  0E31               	movlw	49
 41045   0051E6  180B               	xorwf	APP_nvDefault@index^(0+1280),w,c
 41046   0051E8  A4D8               	btfss	status,2,c
 41047   0051EA  EFF9  F028         	goto	u5461
 41048   0051EE  EFFB  F028         	goto	u5460
 41049   0051F2                     u5461:
 41050   0051F2  EFFE  F028         	goto	l8091
 41051   0051F6                     u5460:
 41052   0051F6                     
 41053                           ;../canargb_nvs.c: 72:         return 3;
 41054   0051F6  0E03               	movlw	3
 41055   0051F8  EF8E  F029         	goto	l297
 41056   0051FC                     l8091:
 41057                           
 41058                           ;../canargb_nvs.c: 74:     index--;
 41059   0051FC  060B               	decf	APP_nvDefault@index^(0+1280),f,c
 41060   0051FE                     
 41061                           ;../canargb_nvs.c: 75:     if (index < 49) {
 41062   0051FE  0E31               	movlw	49
 41063   005200  600B               	cpfslt	APP_nvDefault@index^(0+1280),c
 41064   005202  EF05  F029         	goto	u5471
 41065   005206  EF07  F029         	goto	u5470
 41066   00520A                     u5471:
 41067   00520A  EF8D  F029         	goto	l8113
 41068   00520E                     u5470:
 41069   00520E  EF6E  F029         	goto	l8111
 41070   005212                     l8097:
 41071                           
 41072                           ;../canargb_nvs.c: 78:                 return defaultColours[index/3].red;
 41073   005212  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41074   005216  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41075   005218  0E00               	movlw	0
 41076   00521A  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41077   00521C  0E03               	movlw	3
 41078   00521E  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41079   005220  EC91  F030         	call	___awdiv	;wreg free
 41080   005224  0E03               	movlw	3
 41081   005226  0201               	mulwf	?___awdiv^(0+1280),c
 41082   005228  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41083   00522C  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41084   005230  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41085   005232  50F3               	movf	prodl,w,c
 41086   005234  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41087   005236  0E59               	movlw	low _defaultColours
 41088   005238  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41089   00523A  6EF6               	movwf	tblptrl,c
 41090   00523C  0EFF               	movlw	high _defaultColours
 41091   00523E  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41092   005240  6EF7               	movwf	tblptrh,c
 41093   005242                     	if	1	;There are 3 active tblptr bytes
 41094   005242  6AF8               	clrf	tblptru,c
 41095   005244  0E00               	movlw	low (__mediumconst shr (0+16))
 41096   005246  22F8               	addwfc	tblptru,f,c
 41097   005248                     	endif
 41098   005248  0008               	tblrd		*
 41099   00524A  50F5               	movf	tablat,w,c
 41100   00524C  EF8E  F029         	goto	l297
 41101   005250                     l8101:
 41102                           
 41103                           ;../canargb_nvs.c: 80:                 return defaultColours[index/3].green;
 41104   005250  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41105   005254  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41106   005256  0E00               	movlw	0
 41107   005258  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41108   00525A  0E03               	movlw	3
 41109   00525C  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41110   00525E  EC91  F030         	call	___awdiv	;wreg free
 41111   005262  0E03               	movlw	3
 41112   005264  0201               	mulwf	?___awdiv^(0+1280),c
 41113   005266  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41114   00526A  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41115   00526E  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41116   005270  50F3               	movf	prodl,w,c
 41117   005272  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41118   005274  0E01               	movlw	1
 41119   005276  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 41120   005278  0E00               	movlw	0
 41121   00527A  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 41122   00527C  0E59               	movlw	low _defaultColours
 41123   00527E  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41124   005280  6EF6               	movwf	tblptrl,c
 41125   005282  0EFF               	movlw	high _defaultColours
 41126   005284  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41127   005286  6EF7               	movwf	tblptrh,c
 41128   005288                     	if	1	;There are 3 active tblptr bytes
 41129   005288  6AF8               	clrf	tblptru,c
 41130   00528A  0E00               	movlw	low (__mediumconst shr (0+16))
 41131   00528C  22F8               	addwfc	tblptru,f,c
 41132   00528E                     	endif
 41133   00528E  0008               	tblrd		*
 41134   005290  50F5               	movf	tablat,w,c
 41135   005292  EF8E  F029         	goto	l297
 41136   005296                     l8105:
 41137                           
 41138                           ;../canargb_nvs.c: 82:                 return defaultColours[index/3].blue;
 41139   005296  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41140   00529A  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41141   00529C  0E00               	movlw	0
 41142   00529E  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41143   0052A0  0E03               	movlw	3
 41144   0052A2  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41145   0052A4  EC91  F030         	call	___awdiv	;wreg free
 41146   0052A8  0E03               	movlw	3
 41147   0052AA  0201               	mulwf	?___awdiv^(0+1280),c
 41148   0052AC  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41149   0052B0  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41150   0052B4  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41151   0052B6  50F3               	movf	prodl,w,c
 41152   0052B8  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41153   0052BA  0E02               	movlw	2
 41154   0052BC  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 41155   0052BE  0E00               	movlw	0
 41156   0052C0  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 41157   0052C2  0E59               	movlw	low _defaultColours
 41158   0052C4  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41159   0052C6  6EF6               	movwf	tblptrl,c
 41160   0052C8  0EFF               	movlw	high _defaultColours
 41161   0052CA  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41162   0052CC  6EF7               	movwf	tblptrh,c
 41163   0052CE                     	if	1	;There are 3 active tblptr bytes
 41164   0052CE  6AF8               	clrf	tblptru,c
 41165   0052D0  0E00               	movlw	low (__mediumconst shr (0+16))
 41166   0052D2  22F8               	addwfc	tblptru,f,c
 41167   0052D4                     	endif
 41168   0052D4  0008               	tblrd		*
 41169   0052D6  50F5               	movf	tablat,w,c
 41170   0052D8  EF8E  F029         	goto	l297
 41171   0052DC                     l8111:
 41172   0052DC  C50B  F501         	movff	APP_nvDefault@index,___awmod@dividend
 41173   0052E0  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
 41174   0052E2  0E00               	movlw	0
 41175   0052E4  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
 41176   0052E6  0E03               	movlw	3
 41177   0052E8  6E03               	movwf	___awmod@divisor^(0+1280),c
 41178   0052EA  EC6B  F032         	call	___awmod	;wreg free
 41179                           
 41180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41181                           ; Switch size 1, requested type "simple"
 41182                           ; Number of cases is 1, Range of values is 0 to 0
 41183                           ; switch strategies available:
 41184                           ; Name         Instructions Cycles
 41185                           ; simple_byte            4     3 (average)
 41186                           ;	Chosen strategy is simple_byte
 41187   0052EE  5002               	movf	(?___awmod+1)^(0+1280),w,c
 41188   0052F0  0A00               	xorlw	0	; case 0
 41189   0052F2  B4D8               	btfsc	status,2,c
 41190   0052F4  EF7E  F029         	goto	l11805
 41191   0052F8  EF8D  F029         	goto	l8113
 41192   0052FC                     l11805:
 41193                           
 41194                           ; Switch size 1, requested type "simple"
 41195                           ; Number of cases is 3, Range of values is 0 to 2
 41196                           ; switch strategies available:
 41197                           ; Name         Instructions Cycles
 41198                           ; simple_byte           10     6 (average)
 41199                           ;	Chosen strategy is simple_byte
 41200   0052FC  5001               	movf	?___awmod^(0+1280),w,c
 41201   0052FE  0A00               	xorlw	0	; case 0
 41202   005300  B4D8               	btfsc	status,2,c
 41203   005302  EF09  F029         	goto	l8097
 41204   005306  0A01               	xorlw	1	; case 1
 41205   005308  B4D8               	btfsc	status,2,c
 41206   00530A  EF28  F029         	goto	l8101
 41207   00530E  0A03               	xorlw	3	; case 2
 41208   005310  B4D8               	btfsc	status,2,c
 41209   005312  EF4B  F029         	goto	l8105
 41210   005316  EF8D  F029         	goto	l8113
 41211   00531A                     l8113:
 41212                           
 41213                           ;../canargb_nvs.c: 85:     return 0;
 41214   00531A  0E00               	movlw	0
 41215   00531C                     l297:
 41216   00531C  0012               	return		;funcret
 41217   00531E                     __end_of_APP_nvDefault:
 41218                           	callstack 0
 41219                           
 41220 ;; *************** function ___awmod *****************
 41221 ;; Defined at:
 41222 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 41223 ;; Parameters:    Size  Location     Type
 41224 ;;  dividend        2    0[COMRAM] int 
 41225 ;;  divisor         2    2[COMRAM] int 
 41226 ;; Auto vars:     Size  Location     Type
 41227 ;;  sign            1    5[COMRAM] unsigned char 
 41228 ;;  counter         1    4[COMRAM] unsigned char 
 41229 ;; Return value:  Size  Location     Type
 41230 ;;                  2    0[COMRAM] int 
 41231 ;; Registers used:
 41232 ;;		wreg, status,2, status,0
 41233 ;; Tracked objects:
 41234 ;;		On entry : 0/0
 41235 ;;		On exit  : 0/0
 41236 ;;		Unchanged: 0/0
 41237 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41242 ;;Total ram usage:        6 bytes
 41243 ;; Hardware stack levels used: 1
 41244 ;; Hardware stack levels required when called: 1
 41245 ;; This function calls:
 41246 ;;		Nothing
 41247 ;; This function is called by:
 41248 ;;		_APP_nvDefault
 41249 ;; This function uses a non-reentrant model
 41250 ;;
 41251                           
 41252                           	psect	text119
 41253   0064D6                     __ptext119:
 41254                           	callstack 0
 41255   0064D6                     ___awmod:
 41256                           	callstack 122
 41257   0064D6  6A06               	clrf	___awmod@sign^(0+1280),c
 41258   0064D8  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 41259   0064DA  EF73  F032         	goto	u5340
 41260   0064DE  EF71  F032         	goto	u5341
 41261   0064E2                     u5341:
 41262   0064E2  EF79  F032         	goto	l7997
 41263   0064E6                     u5340:
 41264   0064E6  6C01               	negf	___awmod@dividend^(0+1280),c
 41265   0064E8  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41266   0064EA  B0D8               	btfsc	status,0,c
 41267   0064EC  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41268   0064EE  0E01               	movlw	1
 41269   0064F0  6E06               	movwf	___awmod@sign^(0+1280),c
 41270   0064F2                     l7997:
 41271   0064F2  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 41272   0064F4  EF80  F032         	goto	u5350
 41273   0064F8  EF7E  F032         	goto	u5351
 41274   0064FC                     u5351:
 41275   0064FC  EF84  F032         	goto	l8001
 41276   006500                     u5350:
 41277   006500  6C03               	negf	___awmod@divisor^(0+1280),c
 41278   006502  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
 41279   006504  B0D8               	btfsc	status,0,c
 41280   006506  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
 41281   006508                     l8001:
 41282   006508  5003               	movf	___awmod@divisor^(0+1280),w,c
 41283   00650A  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 41284   00650C  B4D8               	btfsc	status,2,c
 41285   00650E  EF8B  F032         	goto	u5361
 41286   006512  EF8D  F032         	goto	u5360
 41287   006516                     u5361:
 41288   006516  EFB1  F032         	goto	l8017
 41289   00651A                     u5360:
 41290   00651A  0E01               	movlw	1
 41291   00651C  6E05               	movwf	___awmod@counter^(0+1280),c
 41292   00651E  EF95  F032         	goto	l8007
 41293   006522                     l8005:
 41294   006522  90D8               	bcf	status,0,c
 41295   006524  3603               	rlcf	___awmod@divisor^(0+1280),f,c
 41296   006526  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 41297   006528  2A05               	incf	___awmod@counter^(0+1280),f,c
 41298   00652A                     l8007:
 41299   00652A  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 41300   00652C  EF9A  F032         	goto	u5371
 41301   006530  EF9C  F032         	goto	u5370
 41302   006534                     u5371:
 41303   006534  EF91  F032         	goto	l8005
 41304   006538                     u5370:
 41305   006538                     l8009:
 41306   006538  5003               	movf	___awmod@divisor^(0+1280),w,c
 41307   00653A  5C01               	subwf	___awmod@dividend^(0+1280),w,c
 41308   00653C  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41309   00653E  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 41310   006540  A0D8               	btfss	status,0,c
 41311   006542  EFA5  F032         	goto	u5381
 41312   006546  EFA7  F032         	goto	u5380
 41313   00654A                     u5381:
 41314   00654A  EFAB  F032         	goto	l8013
 41315   00654E                     u5380:
 41316   00654E  5003               	movf	___awmod@divisor^(0+1280),w,c
 41317   006550  5E01               	subwf	___awmod@dividend^(0+1280),f,c
 41318   006552  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41319   006554  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 41320   006556                     l8013:
 41321   006556  90D8               	bcf	status,0,c
 41322   006558  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 41323   00655A  3203               	rrcf	___awmod@divisor^(0+1280),f,c
 41324   00655C  2E05               	decfsz	___awmod@counter^(0+1280),f,c
 41325   00655E  EF9C  F032         	goto	l8009
 41326   006562                     l8017:
 41327   006562  5006               	movf	___awmod@sign^(0+1280),w,c
 41328   006564  B4D8               	btfsc	status,2,c
 41329   006566  EFB7  F032         	goto	u5391
 41330   00656A  EFB9  F032         	goto	u5390
 41331   00656E                     u5391:
 41332   00656E  EFBD  F032         	goto	l8021
 41333   006572                     u5390:
 41334   006572  6C01               	negf	___awmod@dividend^(0+1280),c
 41335   006574  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41336   006576  B0D8               	btfsc	status,0,c
 41337   006578  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41338   00657A                     l8021:
 41339   00657A  C501  F501         	movff	___awmod@dividend,?___awmod
 41340   00657E  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
 41341   006582  0012               	return		;funcret
 41342   006584                     __end_of___awmod:
 41343                           	callstack 0
 41344                           
 41345 ;; *************** function ___awdiv *****************
 41346 ;; Defined at:
 41347 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 41348 ;; Parameters:    Size  Location     Type
 41349 ;;  dividend        2    0[COMRAM] int 
 41350 ;;  divisor         2    2[COMRAM] int 
 41351 ;; Auto vars:     Size  Location     Type
 41352 ;;  quotient        2    6[COMRAM] int 
 41353 ;;  sign            1    5[COMRAM] unsigned char 
 41354 ;;  counter         1    4[COMRAM] unsigned char 
 41355 ;; Return value:  Size  Location     Type
 41356 ;;                  2    0[COMRAM] int 
 41357 ;; Registers used:
 41358 ;;		wreg, status,2, status,0
 41359 ;; Tracked objects:
 41360 ;;		On entry : 0/0
 41361 ;;		On exit  : 0/0
 41362 ;;		Unchanged: 0/0
 41363 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41365 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41367 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41368 ;;Total ram usage:        8 bytes
 41369 ;; Hardware stack levels used: 1
 41370 ;; Hardware stack levels required when called: 1
 41371 ;; This function calls:
 41372 ;;		Nothing
 41373 ;; This function is called by:
 41374 ;;		_APP_nvDefault
 41375 ;;		_leds_poll
 41376 ;; This function uses a non-reentrant model
 41377 ;;
 41378                           
 41379                           	psect	text120
 41380   006122                     __ptext120:
 41381                           	callstack 0
 41382   006122                     ___awdiv:
 41383                           	callstack 123
 41384   006122  6A06               	clrf	___awdiv@sign^(0+1280),c
 41385   006124  BE04               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 41386   006126  EF99  F030         	goto	u5280
 41387   00612A  EF97  F030         	goto	u5281
 41388   00612E                     u5281:
 41389   00612E  EF9F  F030         	goto	l7953
 41390   006132                     u5280:
 41391   006132  6C03               	negf	___awdiv@divisor^(0+1280),c
 41392   006134  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 41393   006136  B0D8               	btfsc	status,0,c
 41394   006138  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 41395   00613A  0E01               	movlw	1
 41396   00613C  6E06               	movwf	___awdiv@sign^(0+1280),c
 41397   00613E                     l7953:
 41398   00613E  BE02               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 41399   006140  EFA6  F030         	goto	u5290
 41400   006144  EFA4  F030         	goto	u5291
 41401   006148                     u5291:
 41402   006148  EFAC  F030         	goto	l7959
 41403   00614C                     u5290:
 41404   00614C  6C01               	negf	___awdiv@dividend^(0+1280),c
 41405   00614E  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 41406   006150  B0D8               	btfsc	status,0,c
 41407   006152  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 41408   006154  0E01               	movlw	1
 41409   006156  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 41410   006158                     l7959:
 41411   006158  0E00               	movlw	0
 41412   00615A  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 41413   00615C  0E00               	movlw	0
 41414   00615E  6E07               	movwf	___awdiv@quotient^(0+1280),c
 41415   006160  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41416   006162  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 41417   006164  B4D8               	btfsc	status,2,c
 41418   006166  EFB7  F030         	goto	u5301
 41419   00616A  EFB9  F030         	goto	u5300
 41420   00616E                     u5301:
 41421   00616E  EFE1  F030         	goto	l7981
 41422   006172                     u5300:
 41423   006172  0E01               	movlw	1
 41424   006174  6E05               	movwf	___awdiv@counter^(0+1280),c
 41425   006176  EFC1  F030         	goto	l7967
 41426   00617A                     l7965:
 41427   00617A  90D8               	bcf	status,0,c
 41428   00617C  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 41429   00617E  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 41430   006180  2A05               	incf	___awdiv@counter^(0+1280),f,c
 41431   006182                     l7967:
 41432   006182  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 41433   006184  EFC6  F030         	goto	u5311
 41434   006188  EFC8  F030         	goto	u5310
 41435   00618C                     u5311:
 41436   00618C  EFBD  F030         	goto	l7965
 41437   006190                     u5310:
 41438   006190                     l7969:
 41439   006190  90D8               	bcf	status,0,c
 41440   006192  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 41441   006194  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 41442   006196  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41443   006198  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 41444   00619A  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41445   00619C  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 41446   00619E  A0D8               	btfss	status,0,c
 41447   0061A0  EFD4  F030         	goto	u5321
 41448   0061A4  EFD6  F030         	goto	u5320
 41449   0061A8                     u5321:
 41450   0061A8  EFDB  F030         	goto	l7977
 41451   0061AC                     u5320:
 41452   0061AC  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41453   0061AE  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 41454   0061B0  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41455   0061B2  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 41456   0061B4  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 41457   0061B6                     l7977:
 41458   0061B6  90D8               	bcf	status,0,c
 41459   0061B8  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 41460   0061BA  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 41461   0061BC  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 41462   0061BE  EFC8  F030         	goto	l7969
 41463   0061C2                     l7981:
 41464   0061C2  5006               	movf	___awdiv@sign^(0+1280),w,c
 41465   0061C4  B4D8               	btfsc	status,2,c
 41466   0061C6  EFE7  F030         	goto	u5331
 41467   0061CA  EFE9  F030         	goto	u5330
 41468   0061CE                     u5331:
 41469   0061CE  EFED  F030         	goto	l7985
 41470   0061D2                     u5330:
 41471   0061D2  6C07               	negf	___awdiv@quotient^(0+1280),c
 41472   0061D4  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 41473   0061D6  B0D8               	btfsc	status,0,c
 41474   0061D8  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 41475   0061DA                     l7985:
 41476   0061DA  C507  F501         	movff	___awdiv@quotient,?___awdiv
 41477   0061DE  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 41478   0061E2  0012               	return		;funcret
 41479   0061E4                     __end_of___awdiv:
 41480                           	callstack 0
 41481                           
 41482 ;; *************** function _APP_factoryReset *****************
 41483 ;; Defined at:
 41484 ;;		line 125 in file "../main.c"
 41485 ;; Parameters:    Size  Location     Type
 41486 ;;		None
 41487 ;; Auto vars:     Size  Location     Type
 41488 ;;  io              1    0        unsigned char 
 41489 ;; Return value:  Size  Location     Type
 41490 ;;                  1    wreg      void 
 41491 ;; Registers used:
 41492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41493 ;; Tracked objects:
 41494 ;;		On entry : 0/0
 41495 ;;		On exit  : 0/0
 41496 ;;		Unchanged: 0/0
 41497 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41502 ;;Total ram usage:        0 bytes
 41503 ;; Hardware stack levels used: 1
 41504 ;; Hardware stack levels required when called: 9
 41505 ;; This function calls:
 41506 ;;		_factoryResetGlobalEvents
 41507 ;; This function is called by:
 41508 ;;		_factoryReset
 41509 ;; This function uses a non-reentrant model
 41510 ;;
 41511                           
 41512                           	psect	text121
 41513   00838A                     __ptext121:
 41514                           	callstack 0
 41515   00838A                     _APP_factoryReset:
 41516                           	callstack 116
 41517   00838A                     
 41518                           ;../main.c: 126:     uint8_t io;;../main.c: 128:     factoryResetGlobalEvents();
 41519   00838A  ECC8  F041         	call	_factoryResetGlobalEvents	;wreg free
 41520   00838E  0012               	return		;funcret
 41521   008390                     __end_of_APP_factoryReset:
 41522                           	callstack 0
 41523                           
 41524 ;; *************** function _factoryResetGlobalEvents *****************
 41525 ;; Defined at:
 41526 ;;		line 53 in file "../canargb_events.c"
 41527 ;; Parameters:    Size  Location     Type
 41528 ;;		None
 41529 ;; Auto vars:     Size  Location     Type
 41530 ;;		None
 41531 ;; Return value:  Size  Location     Type
 41532 ;;                  1    wreg      void 
 41533 ;; Registers used:
 41534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41535 ;; Tracked objects:
 41536 ;;		On entry : 0/0
 41537 ;;		On exit  : 0/0
 41538 ;;		Unchanged: 0/0
 41539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41544 ;;Total ram usage:        0 bytes
 41545 ;; Hardware stack levels used: 1
 41546 ;; Hardware stack levels required when called: 8
 41547 ;; This function calls:
 41548 ;;		_clearAllEvents
 41549 ;; This function is called by:
 41550 ;;		_APP_factoryReset
 41551 ;; This function uses a non-reentrant model
 41552 ;;
 41553                           
 41554                           	psect	text122
 41555   008390                     __ptext122:
 41556                           	callstack 0
 41557   008390                     _factoryResetGlobalEvents:
 41558                           	callstack 116
 41559   008390                     
 41560                           ;../canargb_events.c: 55:     clearAllEvents();
 41561   008390  EC25  F041         	call	_clearAllEvents	;wreg free
 41562   008394  0012               	return		;funcret
 41563   008396                     __end_of_factoryResetGlobalEvents:
 41564                           	callstack 0
 41565                           
 41566 ;; *************** function _clearAllEvents *****************
 41567 ;; Defined at:
 41568 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41569 ;; Parameters:    Size  Location     Type
 41570 ;;		None
 41571 ;; Auto vars:     Size  Location     Type
 41572 ;;  tableIndex      1   53[COMRAM] unsigned char 
 41573 ;; Return value:  Size  Location     Type
 41574 ;;                  1    wreg      void 
 41575 ;; Registers used:
 41576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41577 ;; Tracked objects:
 41578 ;;		On entry : 0/0
 41579 ;;		On exit  : 0/0
 41580 ;;		Unchanged: 0/0
 41581 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41586 ;;Total ram usage:        1 bytes
 41587 ;; Hardware stack levels used: 1
 41588 ;; Hardware stack levels required when called: 7
 41589 ;; This function calls:
 41590 ;;		_rebuildHashtable
 41591 ;;		_removeTableEntry
 41592 ;; This function is called by:
 41593 ;;		_factoryResetGlobalEvents
 41594 ;;		_teachFactoryReset
 41595 ;;		_doNnclr
 41596 ;; This function uses a non-reentrant model
 41597 ;;
 41598                           
 41599                           	psect	text123
 41600   00824A                     __ptext123:
 41601                           	callstack 0
 41602   00824A                     _clearAllEvents:
 41603                           	callstack 116
 41604   00824A                     
 41605                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 41606   00824A  6A36               	clrf	clearAllEvents@tableIndex^(0+1280),c
 41607   00824C                     l7835:
 41608                           
 41609                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 41610   00824C  5036               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 41611   00824E  EC1A  F022         	call	_removeTableEntry
 41612   008252                     
 41613                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 41614   008252  2A36               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 41615   008254  2836               	incf	clearAllEvents@tableIndex^(0+1280),w,c
 41616   008256  A4D8               	btfss	status,2,c
 41617   008258  EF30  F041         	goto	u5131
 41618   00825C  EF32  F041         	goto	u5130
 41619   008260                     u5131:
 41620   008260  EF26  F041         	goto	l7835
 41621   008264                     u5130:
 41622   008264                     
 41623                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 41624   008264  ECB5  F02B         	call	_rebuildHashtable	;wreg free
 41625   008268  0012               	return		;funcret
 41626   00826A                     __end_of_clearAllEvents:
 41627                           	callstack 0
 41628                           
 41629 ;; *************** function _removeTableEntry *****************
 41630 ;; Defined at:
 41631 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41632 ;; Parameters:    Size  Location     Type
 41633 ;;  tableIndex      1    wreg     unsigned char 
 41634 ;; Auto vars:     Size  Location     Type
 41635 ;;  tableIndex      1   52[COMRAM] unsigned char 
 41636 ;;  i               1   51[COMRAM] unsigned char 
 41637 ;; Return value:  Size  Location     Type
 41638 ;;                  1    wreg      unsigned char 
 41639 ;; Registers used:
 41640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41641 ;; Tracked objects:
 41642 ;;		On entry : 0/0
 41643 ;;		On exit  : 0/0
 41644 ;;		Unchanged: 0/0
 41645 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41648 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41649 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41650 ;;Total ram usage:       14 bytes
 41651 ;; Hardware stack levels used: 1
 41652 ;; Hardware stack levels required when called: 6
 41653 ;; This function calls:
 41654 ;;		_flushFlashBlock
 41655 ;;		_rebuildHashtable
 41656 ;;		_writeNVM
 41657 ;; This function is called by:
 41658 ;;		_clearAllEvents
 41659 ;;		_removeEvent
 41660 ;; This function uses a non-reentrant model
 41661 ;;
 41662                           
 41663                           	psect	text124
 41664   004434                     __ptext124:
 41665                           	callstack 0
 41666   004434                     _removeTableEntry:
 41667                           	callstack 116
 41668                           
 41669                           ;incstack = 0
 41670                           ;removeTableEntry@tableIndex stored from wreg
 41671   004434  6E35               	movwf	removeTableEntry@tableIndex^(0+1280),c
 41672   004436                     
 41673                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*table
      +                          Index + 0, 0x00);
 41674   004436  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41675   004438  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41676   00443A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41677   00443C  0E01               	movlw	1
 41678   00443E  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41679   004440  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41680   004444  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41681   004448  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41682   00444A  50F3               	movf	prodl,w,c
 41683   00444C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41684   00444E  0E01               	movlw	1
 41685   004450  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41686   004452  50F3               	movf	prodl,w,c
 41687   004454  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41688   004456  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41689   00445A  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41690   00445E  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41691   004460  0E00               	movlw	0
 41692   004462  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41693   004464  6E0E               	movwf	writeNVM@index^(0+1280),c
 41694   004466  0E00               	movlw	0
 41695   004468  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41696   00446A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41697   00446C  0E01               	movlw	1
 41698   00446E  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41699   004470  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41700   004472  0E00               	movlw	0
 41701   004474  6E11               	movwf	writeNVM@value^(0+1280),c
 41702   004476  0E01               	movlw	1
 41703   004478  EC64  F03C         	call	_writeNVM
 41704                           
 41705                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 1, 0x00);
 41706   00447C  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41707   00447E  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41708   004480  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41709   004482  0E01               	movlw	1
 41710   004484  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41711   004486  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41712   00448A  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41713   00448E  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41714   004490  50F3               	movf	prodl,w,c
 41715   004492  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41716   004494  0E01               	movlw	1
 41717   004496  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41718   004498  50F3               	movf	prodl,w,c
 41719   00449A  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41720   00449C  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41721   0044A0  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41722   0044A4  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41723   0044A6  0E01               	movlw	1
 41724   0044A8  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41725   0044AA  6E0E               	movwf	writeNVM@index^(0+1280),c
 41726   0044AC  0E00               	movlw	0
 41727   0044AE  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41728   0044B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41729   0044B2  0E01               	movlw	1
 41730   0044B4  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41731   0044B6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41732   0044B8  0E00               	movlw	0
 41733   0044BA  6E11               	movwf	writeNVM@value^(0+1280),c
 41734   0044BC  0E01               	movlw	1
 41735   0044BE  EC64  F03C         	call	_writeNVM
 41736                           
 41737                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 2, 0x00);
 41738   0044C2  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41739   0044C4  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41740   0044C6  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41741   0044C8  0E01               	movlw	1
 41742   0044CA  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41743   0044CC  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41744   0044D0  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41745   0044D4  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41746   0044D6  50F3               	movf	prodl,w,c
 41747   0044D8  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41748   0044DA  0E01               	movlw	1
 41749   0044DC  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41750   0044DE  50F3               	movf	prodl,w,c
 41751   0044E0  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41752   0044E2  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41753   0044E6  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41754   0044EA  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41755   0044EC  0E02               	movlw	2
 41756   0044EE  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41757   0044F0  6E0E               	movwf	writeNVM@index^(0+1280),c
 41758   0044F2  0E00               	movlw	0
 41759   0044F4  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41760   0044F6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41761   0044F8  0E01               	movlw	1
 41762   0044FA  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41763   0044FC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41764   0044FE  0E00               	movlw	0
 41765   004500  6E11               	movwf	writeNVM@value^(0+1280),c
 41766   004502  0E01               	movlw	1
 41767   004504  EC64  F03C         	call	_writeNVM
 41768                           
 41769                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 3, 0x00);
 41770   004508  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41771   00450A  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41772   00450C  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41773   00450E  0E01               	movlw	1
 41774   004510  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41775   004512  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41776   004516  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41777   00451A  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41778   00451C  50F3               	movf	prodl,w,c
 41779   00451E  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41780   004520  0E01               	movlw	1
 41781   004522  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41782   004524  50F3               	movf	prodl,w,c
 41783   004526  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41784   004528  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41785   00452C  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41786   004530  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41787   004532  0E03               	movlw	3
 41788   004534  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41789   004536  6E0E               	movwf	writeNVM@index^(0+1280),c
 41790   004538  0E00               	movlw	0
 41791   00453A  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41792   00453C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41793   00453E  0E01               	movlw	1
 41794   004540  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41795   004542  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41796   004544  0E00               	movlw	0
 41797   004546  6E11               	movwf	writeNVM@value^(0+1280),c
 41798   004548  0E01               	movlw	1
 41799   00454A  EC64  F03C         	call	_writeNVM
 41800                           
 41801                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 4, 0x00);
 41802   00454E  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41803   004550  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41804   004552  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41805   004554  0E01               	movlw	1
 41806   004556  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41807   004558  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41808   00455C  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41809   004560  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41810   004562  50F3               	movf	prodl,w,c
 41811   004564  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41812   004566  0E01               	movlw	1
 41813   004568  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41814   00456A  50F3               	movf	prodl,w,c
 41815   00456C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41816   00456E  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41817   004572  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41818   004576  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41819   004578  0E04               	movlw	4
 41820   00457A  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41821   00457C  6E0E               	movwf	writeNVM@index^(0+1280),c
 41822   00457E  0E00               	movlw	0
 41823   004580  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41824   004582  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41825   004584  0E01               	movlw	1
 41826   004586  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41827   004588  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41828   00458A  0E00               	movlw	0
 41829   00458C  6E11               	movwf	writeNVM@value^(0+1280),c
 41830   00458E  0E01               	movlw	1
 41831   004590  EC64  F03C         	call	_writeNVM
 41832   004594                     
 41833                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<252; i++) {
 41834   004594  6A34               	clrf	removeTableEntry@i^(0+1280),c
 41835   004596                     l7773:
 41836                           
 41837                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x10000 +
      +                           (sizeof(Event) + 1 + 252)*tableIndex + (5 + i), 0x00);
 41838   004596  5034               	movf	removeTableEntry@i^(0+1280),w,c
 41839   004598  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41840   00459A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41841   00459C  0E05               	movlw	5
 41842   00459E  2628               	addwf	??_removeTableEntry^(0+1280),f,c
 41843   0045A0  0E00               	movlw	0
 41844   0045A2  2229               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 41845   0045A4  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41846   0045A6  6E2A               	movwf	(??_removeTableEntry+2)^(0+1280),c
 41847   0045A8  6A2B               	clrf	(??_removeTableEntry+3)^(0+1280),c
 41848   0045AA  0E01               	movlw	1
 41849   0045AC  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41850   0045AE  C4F3 F52C          	movff	prodl,??_removeTableEntry+4
 41851   0045B2  C4F4 F52D          	movff	prodh,??_removeTableEntry+5
 41852   0045B6  022B               	mulwf	(??_removeTableEntry+3)^(0+1280),c
 41853   0045B8  50F3               	movf	prodl,w,c
 41854   0045BA  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41855   0045BC  0E01               	movlw	1
 41856   0045BE  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41857   0045C0  50F3               	movf	prodl,w,c
 41858   0045C2  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41859   0045C4  C52C  F52E         	movff	??_removeTableEntry+4,??_removeTableEntry+6
 41860   0045C8  C52D  F52F         	movff	??_removeTableEntry+5,??_removeTableEntry+7
 41861   0045CC  6A30               	clrf	(??_removeTableEntry+8)^(0+1280),c
 41862   0045CE  5028               	movf	??_removeTableEntry^(0+1280),w,c
 41863   0045D0  242E               	addwf	(??_removeTableEntry+6)^(0+1280),w,c
 41864   0045D2  6E31               	movwf	(??_removeTableEntry+9)^(0+1280),c
 41865   0045D4  5029               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 41866   0045D6  202F               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 41867   0045D8  6E32               	movwf	(??_removeTableEntry+10)^(0+1280),c
 41868   0045DA  0E00               	movlw	0
 41869   0045DC  BE29               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 41870   0045DE  0EFF               	movlw	255
 41871   0045E0  2030               	addwfc	(??_removeTableEntry+8)^(0+1280),w,c
 41872   0045E2  6E33               	movwf	(??_removeTableEntry+11)^(0+1280),c
 41873   0045E4  0E00               	movlw	0
 41874   0045E6  2431               	addwf	(??_removeTableEntry+9)^(0+1280),w,c
 41875   0045E8  6E0E               	movwf	writeNVM@index^(0+1280),c
 41876   0045EA  0E00               	movlw	0
 41877   0045EC  2032               	addwfc	(??_removeTableEntry+10)^(0+1280),w,c
 41878   0045EE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41879   0045F0  0E01               	movlw	1
 41880   0045F2  2033               	addwfc	(??_removeTableEntry+11)^(0+1280),w,c
 41881   0045F4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41882   0045F6  0E00               	movlw	0
 41883   0045F8  6E11               	movwf	writeNVM@value^(0+1280),c
 41884   0045FA  0E01               	movlw	1
 41885   0045FC  EC64  F03C         	call	_writeNVM
 41886   004600                     
 41887                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 41888   004600  2A34               	incf	removeTableEntry@i^(0+1280),f,c
 41889   004602  0EFB               	movlw	251
 41890   004604  6434               	cpfsgt	removeTableEntry@i^(0+1280),c
 41891   004606  EF07  F023         	goto	u5071
 41892   00460A  EF09  F023         	goto	u5070
 41893   00460E                     u5071:
 41894   00460E  EFCB  F022         	goto	l7773
 41895   004612                     u5070:
 41896   004612                     
 41897                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 41898   004612  EC01  F035         	call	_flushFlashBlock	;wreg free
 41899   004616                     
 41900                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 41901   004616  ECB5  F02B         	call	_rebuildHashtable	;wreg free
 41902   00461A                     
 41903                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 41904   00461A  0E00               	movlw	0
 41905   00461C  0012               	return		;funcret
 41906   00461E                     __end_of_removeTableEntry:
 41907                           	callstack 0
 41908                           
 41909 ;; *************** function _writeNVM *****************
 41910 ;; Defined at:
 41911 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 41912 ;; Parameters:    Size  Location     Type
 41913 ;;  type            1    wreg     enum E23276
 41914 ;;  index           3   13[COMRAM] unsigned um
 41915 ;;  value           1   16[COMRAM] unsigned char 
 41916 ;; Auto vars:     Size  Location     Type
 41917 ;;  type            1   19[COMRAM] enum E23276
 41918 ;; Return value:  Size  Location     Type
 41919 ;;                  1    wreg      unsigned char 
 41920 ;; Registers used:
 41921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41922 ;; Tracked objects:
 41923 ;;		On entry : 0/0
 41924 ;;		On exit  : 0/0
 41925 ;;		Unchanged: 0/0
 41926 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41930 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41931 ;;Total ram usage:        7 bytes
 41932 ;; Hardware stack levels used: 1
 41933 ;; Hardware stack levels required when called: 5
 41934 ;; This function calls:
 41935 ;;		_EEPROM_Write
 41936 ;;		_FLASH_Write
 41937 ;; This function is called by:
 41938 ;;		_bootProcessMessage
 41939 ;;		_canFactoryReset
 41940 ;;		_setNewCanId
 41941 ;;		_removeTableEntry
 41942 ;;		_addEvent
 41943 ;;		_writeEv
 41944 ;;		_mnsFactoryReset
 41945 ;;		_mnsProcessMessage
 41946 ;;		_mnsPoll
 41947 ;;		_nvFactoryReset
 41948 ;;		_setNV
 41949 ;;		_factoryReset
 41950 ;;		_saveNV
 41951 ;; This function uses a non-reentrant model
 41952 ;;
 41953                           
 41954                           	psect	text125
 41955   0078C8                     __ptext125:
 41956                           	callstack 0
 41957   0078C8                     _writeNVM:
 41958                           	callstack 116
 41959                           
 41960                           ;incstack = 0
 41961                           ;writeNVM@type stored from wreg
 41962   0078C8  6E14               	movwf	writeNVM@type^(0+1280),c
 41963   0078CA                     
 41964                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 41965   0078CA  EF7F  F03C         	goto	l7581
 41966   0078CE                     l7571:
 41967                           
 41968                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41969   0078CE  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 41970   0078D2  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41971   0078D6  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 41972   0078DA  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 41973   0078DE  EC95  F03C         	call	_EEPROM_Write	;wreg free
 41974   0078E2  EF94  F03C         	goto	l1714
 41975   0078E6                     l7575:
 41976                           
 41977                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41978   0078E6  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 41979   0078EA  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 41980   0078EE  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 41981   0078F2  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 41982   0078F6  ECAE  F02A         	call	_FLASH_Write	;wreg free
 41983   0078FA  EF94  F03C         	goto	l1714
 41984   0078FE                     l7581:
 41985   0078FE  5014               	movf	writeNVM@type^(0+1280),w,c
 41986   007900  6E12               	movwf	??_writeNVM^(0+1280),c
 41987   007902  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 41988                           
 41989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41990                           ; Switch size 1, requested type "simple"
 41991                           ; Number of cases is 1, Range of values is 0 to 0
 41992                           ; switch strategies available:
 41993                           ; Name         Instructions Cycles
 41994                           ; simple_byte            4     3 (average)
 41995                           ;	Chosen strategy is simple_byte
 41996   007904  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 41997   007906  0A00               	xorlw	0	; case 0
 41998   007908  B4D8               	btfsc	status,2,c
 41999   00790A  EF89  F03C         	goto	l11807
 42000   00790E  EF94  F03C         	goto	l1714
 42001   007912                     l11807:
 42002                           
 42003                           ; Switch size 1, requested type "simple"
 42004                           ; Number of cases is 2, Range of values is 0 to 1
 42005                           ; switch strategies available:
 42006                           ; Name         Instructions Cycles
 42007                           ; simple_byte            7     4 (average)
 42008                           ;	Chosen strategy is simple_byte
 42009   007912  5012               	movf	??_writeNVM^(0+1280),w,c
 42010   007914  0A00               	xorlw	0	; case 0
 42011   007916  B4D8               	btfsc	status,2,c
 42012   007918  EF67  F03C         	goto	l7571
 42013   00791C  0A01               	xorlw	1	; case 1
 42014   00791E  B4D8               	btfsc	status,2,c
 42015   007920  EF73  F03C         	goto	l7575
 42016   007924  EF94  F03C         	goto	l1714
 42017   007928                     l1714:
 42018   007928  0012               	return		;funcret
 42019   00792A                     __end_of_writeNVM:
 42020                           	callstack 0
 42021                           
 42022 ;; *************** function _FLASH_Write *****************
 42023 ;; Defined at:
 42024 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 42025 ;; Parameters:    Size  Location     Type
 42026 ;;  index           3    5[COMRAM] unsigned um
 42027 ;;  value           1    8[COMRAM] unsigned char 
 42028 ;; Auto vars:     Size  Location     Type
 42029 ;;  oldValue        1    0        unsigned char 
 42030 ;; Return value:  Size  Location     Type
 42031 ;;                  1    wreg      unsigned char 
 42032 ;; Registers used:
 42033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42034 ;; Tracked objects:
 42035 ;;		On entry : 0/0
 42036 ;;		On exit  : 0/0
 42037 ;;		Unchanged: 0/0
 42038 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42043 ;;Total ram usage:        8 bytes
 42044 ;; Hardware stack levels used: 1
 42045 ;; Hardware stack levels required when called: 4
 42046 ;; This function calls:
 42047 ;;		_eraseFlashBlock
 42048 ;;		_flushFlashBlock
 42049 ;;		_loadFlashBlock
 42050 ;; This function is called by:
 42051 ;;		_writeNVM
 42052 ;; This function uses a non-reentrant model
 42053 ;;
 42054                           
 42055                           	psect	text126
 42056   00555C                     __ptext126:
 42057                           	callstack 0
 42058   00555C                     _FLASH_Write:
 42059                           	callstack 116
 42060   00555C                     
 42061                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 42062   00555C  0E00               	movlw	0
 42063   00555E  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42064   005560  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42065   005562  0EFF               	movlw	255
 42066   005564  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42067   005566  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42068   005568  0EFF               	movlw	255
 42069   00556A  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 42070   00556C  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 42071   00556E  0105               	movlb	5	; () banked
 42072   005570  5184               	movf	_flashBlock& (0+255),w,b
 42073   005572  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 42074   005574  E10C               	bnz	u4810
 42075   005576  5185               	movf	(_flashBlock+1)& (0+255),w,b
 42076   005578  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 42077   00557A  E109               	bnz	u4810
 42078   00557C  5186               	movf	(_flashBlock+2)& (0+255),w,b
 42079   00557E  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 42080   005580  B4D8               	btfsc	status,2,c
 42081   005582  EFC5  F02A         	goto	u4811
 42082   005586  EFC7  F02A         	goto	u4810
 42083   00558A                     u4811:
 42084   00558A  EFEA  F02A         	goto	l7557
 42085   00558E                     u4810:
 42086   00558E                     
 42087                           ; BSR set to: 5
 42088                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 42089   00558E  5184               	movf	_flashBlock& (0+255),w,b
 42090   005590  1185               	iorwf	(_flashBlock+1)& (0+255),w,b
 42091   005592  1186               	iorwf	(_flashBlock+2)& (0+255),w,b
 42092   005594  B4D8               	btfsc	status,2,c
 42093   005596  EFCF  F02A         	goto	u4821
 42094   00559A  EFD1  F02A         	goto	u4820
 42095   00559E                     u4821:
 42096   00559E  EFDE  F02A         	goto	l7553
 42097   0055A2                     u4820:
 42098   0055A2                     
 42099                           ; BSR set to: 5
 42100                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 42101   0055A2  A39B               	btfss	_flashFlags& (0+255),1,b
 42102   0055A4  EFD6  F02A         	goto	u4831
 42103   0055A8  EFD8  F02A         	goto	u4830
 42104   0055AC                     u4831:
 42105   0055AC  EFDC  F02A         	goto	l1707
 42106   0055B0                     u4830:
 42107   0055B0                     
 42108                           ; BSR set to: 5
 42109                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 42110   0055B0  ECDE  F037         	call	_eraseFlashBlock	;wreg free
 42111   0055B4                     
 42112                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 42113   0055B4  0105               	movlb	5	; () banked
 42114   0055B6  939B               	bcf	_flashFlags& (0+255),1,b
 42115   0055B8                     l1707:
 42116                           
 42117                           ; BSR set to: 5
 42118                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 42119   0055B8  EC01  F035         	call	_flushFlashBlock	;wreg free
 42120   0055BC                     l7553:
 42121                           
 42122                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 42123   0055BC  0E00               	movlw	0
 42124   0055BE  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42125   0055C0  0105               	movlb	5	; () banked
 42126   0055C2  6F84               	movwf	_flashBlock& (0+255),b
 42127   0055C4  0EFF               	movlw	255
 42128   0055C6  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42129   0055C8  6F85               	movwf	(_flashBlock+1)& (0+255),b
 42130   0055CA  0EFF               	movlw	255
 42131   0055CC  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 42132   0055CE  6F86               	movwf	(_flashBlock+2)& (0+255),b
 42133   0055D0                     
 42134                           ; BSR set to: 5
 42135                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 42136   0055D0  EC49  F03D         	call	_loadFlashBlock	;wreg free
 42137   0055D4                     l7557:
 42138                           
 42139                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 42140   0055D4  0EFF               	movlw	255
 42141   0055D6  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42142   0055D8  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42143   0055DA  0E00               	movlw	0
 42144   0055DC  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42145   0055DE  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42146   0055E0  0E00               	movlw	0
 42147   0055E2  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42148   0055E4  6ED9               	movwf	fsr2l,c
 42149   0055E6  0E37               	movlw	55
 42150   0055E8  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42151   0055EA  6EDA               	movwf	fsr2h,c
 42152   0055EC  50DF               	movf	indf2,w,c
 42153   0055EE  0AFF               	xorlw	255
 42154   0055F0  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 42155   0055F2  0900               	iorlw	0
 42156   0055F4  A4D8               	btfss	status,2,c
 42157   0055F6  EFFF  F02A         	goto	u4841
 42158   0055FA  EF03  F02B         	goto	u4840
 42159   0055FE                     u4841:
 42160   0055FE  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 42161   005600  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 42162   005602  EF04  F02B         	goto	u4858
 42163   005606                     u4840:
 42164   005606  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 42165   005608                     u4858:
 42166   005608  0105               	movlb	5	; () banked
 42167   00560A  319B               	rrcf	_flashFlags& (0+255),w,b
 42168   00560C  0B01               	andlw	1
 42169   00560E  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 42170   005610  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 42171   005612  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 42172   005614  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 42173   005616  519B               	movf	_flashFlags& (0+255),w,b
 42174   005618  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 42175   00561A  0BFD               	andlw	-3
 42176   00561C  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 42177   00561E  6F9B               	movwf	_flashFlags& (0+255),b
 42178   005620                     
 42179                           ; BSR set to: 5
 42180                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 42181   005620  0EFF               	movlw	255
 42182   005622  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42183   005624  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42184   005626  0E00               	movlw	0
 42185   005628  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42186   00562A  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42187   00562C  0E00               	movlw	0
 42188   00562E  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42189   005630  6ED9               	movwf	fsr2l,c
 42190   005632  0E37               	movlw	55
 42191   005634  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42192   005636  6EDA               	movwf	fsr2h,c
 42193   005638  5009               	movf	FLASH_Write@value^(0+1280),w,c
 42194   00563A  18DE               	xorwf	postinc2,w,c
 42195   00563C  B4D8               	btfsc	status,2,c
 42196   00563E  EF23  F02B         	goto	u4861
 42197   005642  EF25  F02B         	goto	u4860
 42198   005646                     u4861:
 42199   005646  EF34  F02B         	goto	l7565
 42200   00564A                     u4860:
 42201   00564A                     
 42202                           ; BSR set to: 5
 42203                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 42204   00564A  819B               	bsf	_flashFlags& (0+255),0,b
 42205   00564C                     
 42206                           ; BSR set to: 5
 42207                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 42208   00564C  0EFF               	movlw	255
 42209   00564E  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42210   005650  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42211   005652  0E00               	movlw	0
 42212   005654  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42213   005656  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42214   005658  0E00               	movlw	0
 42215   00565A  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42216   00565C  6ED9               	movwf	fsr2l,c
 42217   00565E  0E37               	movlw	55
 42218   005660  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42219   005662  6EDA               	movwf	fsr2h,c
 42220   005664  C509  F4DF         	movff	FLASH_Write@value,indf2
 42221   005668                     l7565:
 42222                           
 42223                           ; BSR set to: 5
 42224                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 42225   005668  0E00               	movlw	0
 42226   00566A                     
 42227                           ; BSR set to: 5
 42228   00566A  0012               	return		;funcret
 42229   00566C                     __end_of_FLASH_Write:
 42230                           	callstack 0
 42231                           
 42232 ;; *************** function _loadFlashBlock *****************
 42233 ;; Defined at:
 42234 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 42235 ;; Parameters:    Size  Location     Type
 42236 ;;		None
 42237 ;; Auto vars:     Size  Location     Type
 42238 ;;		None
 42239 ;; Return value:  Size  Location     Type
 42240 ;;                  1    wreg      void 
 42241 ;; Registers used:
 42242 ;;		wreg, status,2
 42243 ;; Tracked objects:
 42244 ;;		On entry : 0/0
 42245 ;;		On exit  : 0/0
 42246 ;;		Unchanged: 0/0
 42247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42250 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42252 ;;Total ram usage:        3 bytes
 42253 ;; Hardware stack levels used: 1
 42254 ;; Hardware stack levels required when called: 1
 42255 ;; This function calls:
 42256 ;;		Nothing
 42257 ;; This function is called by:
 42258 ;;		_FLASH_Write
 42259 ;; This function uses a non-reentrant model
 42260 ;;
 42261                           
 42262                           	psect	text127
 42263   007A92                     __ptext127:
 42264                           	callstack 0
 42265   007A92                     _loadFlashBlock:
 42266                           	callstack 118
 42267   007A92                     l1696:
 42268                           
 42269                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 42270   007A92  0100               	movlb	0	; () banked
 42271   007A94  B140               	btfsc	64,0,b	;volatile
 42272   007A96  EF4F  F03D         	goto	u4611
 42273   007A9A  EF51  F03D         	goto	u4610
 42274   007A9E                     u4611:
 42275   007A9E  EF49  F03D         	goto	l1696
 42276   007AA2                     u4610:
 42277   007AA2                     
 42278                           ; BSR set to: 0
 42279                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42280   007AA2  C586  F045         	movff	_flashBlock+2,69	;volatile
 42281   007AA6                     
 42282                           ; BSR set to: 0
 42283                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42284   007AA6  C584  F501         	movff	_flashBlock,??_loadFlashBlock
 42285   007AAA  C585  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 42286   007AAE  C586  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 42287   007AB2  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 42288   007AB6  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 42289   007ABA  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 42290   007ABC  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 42291   007ABE  6F44               	movwf	68,b	;volatile
 42292   007AC0                     
 42293                           ; BSR set to: 0
 42294                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 42295   007AC0  C584  F043         	movff	_flashBlock,67	;volatile
 42296                           
 42297                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 42298   007AC4  5141               	movf	65,w,b	;volsfr
 42299   007AC6  0BF8               	andlw	-8
 42300   007AC8  0902               	iorlw	2
 42301   007ACA  6F41               	movwf	65,b	;volsfr
 42302   007ACC                     
 42303                           ; BSR set to: 0
 42304                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 42305   007ACC  8140               	bsf	64,0,b	;volatile
 42306   007ACE                     l1699:
 42307                           
 42308                           ; BSR set to: 0
 42309                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 42310   007ACE  B140               	btfsc	64,0,b	;volatile
 42311   007AD0  EF6C  F03D         	goto	u4621
 42312   007AD4  EF6E  F03D         	goto	u4620
 42313   007AD8                     u4621:
 42314   007AD8  EF67  F03D         	goto	l1699
 42315   007ADC                     u4620:
 42316   007ADC                     
 42317                           ; BSR set to: 0
 42318                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 42319   007ADC  0E07               	movlw	7
 42320   007ADE  1341               	iorwf	65,f,b	;volsfr
 42321   007AE0                     
 42322                           ; BSR set to: 0
 42323                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 42324   007AE0  0105               	movlb	5	; () banked
 42325   007AE2  6B9B               	clrf	_flashFlags& (0+255),b
 42326   007AE4                     
 42327                           ; BSR set to: 5
 42328   007AE4  0012               	return		;funcret
 42329   007AE6                     __end_of_loadFlashBlock:
 42330                           	callstack 0
 42331                           
 42332 ;; *************** function _flushFlashBlock *****************
 42333 ;; Defined at:
 42334 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 42335 ;; Parameters:    Size  Location     Type
 42336 ;;		None
 42337 ;; Auto vars:     Size  Location     Type
 42338 ;;  interruptEna    1    4[COMRAM] unsigned char 
 42339 ;; Return value:  Size  Location     Type
 42340 ;;                  1    wreg      void 
 42341 ;; Registers used:
 42342 ;;		wreg, status,2, cstack
 42343 ;; Tracked objects:
 42344 ;;		On entry : 0/0
 42345 ;;		On exit  : 0/0
 42346 ;;		Unchanged: 0/0
 42347 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42352 ;;Total ram usage:        1 bytes
 42353 ;; Hardware stack levels used: 1
 42354 ;; Hardware stack levels required when called: 3
 42355 ;; This function calls:
 42356 ;;		_APP_isSuitableTimeToWriteFlash
 42357 ;;		_eraseFlashBlock
 42358 ;; This function is called by:
 42359 ;;		_removeTableEntry
 42360 ;;		_addEvent
 42361 ;;		_FLASH_Write
 42362 ;;		_poll
 42363 ;; This function uses a non-reentrant model
 42364 ;;
 42365                           
 42366                           	psect	text128
 42367   006A02                     __ptext128:
 42368                           	callstack 0
 42369   006A02                     _flushFlashBlock:
 42370                           	callstack 116
 42371   006A02                     
 42372                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 42373   006A02  0105               	movlb	5	; () banked
 42374   006A04  B19B               	btfsc	_flashFlags& (0+255),0,b
 42375   006A06  EF07  F035         	goto	u4531
 42376   006A0A  EF09  F035         	goto	u4530
 42377   006A0E                     u4531:
 42378   006A0E  EF0B  F035         	goto	l7345
 42379   006A12                     u4530:
 42380   006A12  EF4F  F035         	goto	l1682
 42381   006A16                     l7345:
 42382                           
 42383                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42384   006A16  EC60  F041         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42385   006A1A  0900               	iorlw	0
 42386   006A1C  B4D8               	btfsc	status,2,c
 42387   006A1E  EF13  F035         	goto	u4541
 42388   006A22  EF15  F035         	goto	u4540
 42389   006A26                     u4541:
 42390   006A26  EF0B  F035         	goto	l7345
 42391   006A2A                     u4540:
 42392   006A2A                     
 42393                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 42394   006A2A  0105               	movlb	5	; () banked
 42395   006A2C  A39B               	btfss	_flashFlags& (0+255),1,b
 42396   006A2E  EF1B  F035         	goto	u4551
 42397   006A32  EF1D  F035         	goto	u4550
 42398   006A36                     u4551:
 42399   006A36  EF1F  F035         	goto	l7349
 42400   006A3A                     u4550:
 42401   006A3A                     
 42402                           ; BSR set to: 5
 42403                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 42404   006A3A  ECDE  F037         	call	_eraseFlashBlock	;wreg free
 42405   006A3E                     l7349:
 42406                           
 42407                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 42408   006A3E  0E00               	movlw	0
 42409   006A40  BED6               	btfsc	214,7,c	;volatile
 42410   006A42  0E01               	movlw	1
 42411   006A44  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 42412   006A46                     
 42413                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 42414   006A46  9ED6               	bcf	214,7,c	;volatile
 42415   006A48                     l1687:
 42416                           
 42417                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 42418   006A48  0100               	movlb	0	; () banked
 42419   006A4A  B140               	btfsc	64,0,b	;volatile
 42420   006A4C  EF2A  F035         	goto	u4561
 42421   006A50  EF2C  F035         	goto	u4560
 42422   006A54                     u4561:
 42423   006A54  EF24  F035         	goto	l1687
 42424   006A58                     u4560:
 42425   006A58                     
 42426                           ; BSR set to: 0
 42427                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 42428   006A58  C584  F043         	movff	_flashBlock,67	;volatile
 42429   006A5C  C585  F044         	movff	_flashBlock+1,68	;volatile
 42430   006A60  C586  F045         	movff	_flashBlock+2,69	;volatile
 42431   006A64                     
 42432                           ; BSR set to: 0
 42433                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 42434   006A64  5141               	movf	65,w,b	;volsfr
 42435   006A66  0BF8               	andlw	-8
 42436   006A68  0905               	iorlw	5
 42437   006A6A  6F41               	movwf	65,b	;volsfr
 42438                           
 42439                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 42440   006A6C  0E55               	movlw	85
 42441   006A6E  6F42               	movwf	66,b	;volatile
 42442                           
 42443                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 42444   006A70  0EAA               	movlw	170
 42445   006A72  6F42               	movwf	66,b	;volatile
 42446   006A74                     
 42447                           ; BSR set to: 0
 42448                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 42449   006A74  8140               	bsf	64,0,b	;volatile
 42450   006A76                     l1690:
 42451                           
 42452                           ; BSR set to: 0
 42453                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 42454   006A76  B140               	btfsc	64,0,b	;volatile
 42455   006A78  EF40  F035         	goto	u4571
 42456   006A7C  EF42  F035         	goto	u4570
 42457   006A80                     u4571:
 42458   006A80  EF3B  F035         	goto	l1690
 42459   006A84                     u4570:
 42460   006A84                     
 42461                           ; BSR set to: 0
 42462                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 42463   006A84  0E07               	movlw	7
 42464   006A86  1341               	iorwf	65,f,b	;volsfr
 42465                           
 42466                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 42467   006A88  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 42468   006A8A  B4D8               	btfsc	status,2,c
 42469   006A8C  EF4A  F035         	goto	u4581
 42470   006A90  EF4C  F035         	goto	u4580
 42471   006A94                     u4581:
 42472   006A94  EF4D  F035         	goto	l1693
 42473   006A98                     u4580:
 42474   006A98                     
 42475                           ; BSR set to: 0
 42476                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 42477   006A98  8ED6               	bsf	214,7,c	;volatile
 42478   006A9A                     l1693:
 42479                           
 42480                           ; BSR set to: 0
 42481                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 42482   006A9A  0105               	movlb	5	; () banked
 42483   006A9C  6B9B               	clrf	_flashFlags& (0+255),b
 42484   006A9E                     l1682:
 42485                           
 42486                           ; BSR set to: 5
 42487   006A9E  0012               	return		;funcret
 42488   006AA0                     __end_of_flushFlashBlock:
 42489                           	callstack 0
 42490                           
 42491 ;; *************** function _eraseFlashBlock *****************
 42492 ;; Defined at:
 42493 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 42494 ;; Parameters:    Size  Location     Type
 42495 ;;		None
 42496 ;; Auto vars:     Size  Location     Type
 42497 ;;  interruptEna    1    3[COMRAM] unsigned char 
 42498 ;; Return value:  Size  Location     Type
 42499 ;;                  1    wreg      void 
 42500 ;; Registers used:
 42501 ;;		wreg, status,2, cstack
 42502 ;; Tracked objects:
 42503 ;;		On entry : 0/0
 42504 ;;		On exit  : 0/0
 42505 ;;		Unchanged: 0/0
 42506 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42511 ;;Total ram usage:        4 bytes
 42512 ;; Hardware stack levels used: 1
 42513 ;; Hardware stack levels required when called: 2
 42514 ;; This function calls:
 42515 ;;		_APP_isSuitableTimeToWriteFlash
 42516 ;; This function is called by:
 42517 ;;		_flushFlashBlock
 42518 ;;		_FLASH_Write
 42519 ;; This function uses a non-reentrant model
 42520 ;;
 42521                           
 42522                           	psect	text129
 42523   006FBC                     __ptext129:
 42524                           	callstack 0
 42525   006FBC                     _eraseFlashBlock:
 42526                           	callstack 116
 42527   006FBC                     l7259:
 42528                           
 42529                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 42530   006FBC  EC60  F041         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42531   006FC0  0900               	iorlw	0
 42532   006FC2  B4D8               	btfsc	status,2,c
 42533   006FC4  EFE6  F037         	goto	u4451
 42534   006FC8  EFE8  F037         	goto	u4450
 42535   006FCC                     u4451:
 42536   006FCC  EFDE  F037         	goto	l7259
 42537   006FD0                     u4450:
 42538   006FD0                     
 42539                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 42540   006FD0  0E00               	movlw	0
 42541   006FD2  BED6               	btfsc	214,7,c	;volatile
 42542   006FD4  0E01               	movlw	1
 42543   006FD6  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 42544   006FD8                     l1671:
 42545                           
 42546                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 42547   006FD8  0100               	movlb	0	; () banked
 42548   006FDA  B140               	btfsc	64,0,b	;volatile
 42549   006FDC  EFF2  F037         	goto	u4461
 42550   006FE0  EFF4  F037         	goto	u4460
 42551   006FE4                     u4461:
 42552   006FE4  EFEC  F037         	goto	l1671
 42553   006FE8                     u4460:
 42554   006FE8                     
 42555                           ; BSR set to: 0
 42556                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42557   006FE8  C586  F045         	movff	_flashBlock+2,69	;volatile
 42558   006FEC                     
 42559                           ; BSR set to: 0
 42560                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42561   006FEC  C584  F501         	movff	_flashBlock,??_eraseFlashBlock
 42562   006FF0  C585  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 42563   006FF4  C586  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 42564   006FF8  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 42565   006FFC  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 42566   007000  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 42567   007002  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 42568   007004  6F44               	movwf	68,b	;volatile
 42569                           
 42570                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 42571   007006  5141               	movf	65,w,b	;volsfr
 42572   007008  0BF8               	andlw	-8
 42573   00700A  0906               	iorlw	6
 42574   00700C  6F41               	movwf	65,b	;volsfr
 42575   00700E                     
 42576                           ; BSR set to: 0
 42577                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 42578   00700E  9ED6               	bcf	214,7,c	;volatile
 42579                           
 42580                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 42581   007010  0E55               	movlw	85
 42582   007012  6F42               	movwf	66,b	;volatile
 42583                           
 42584                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 42585   007014  0EAA               	movlw	170
 42586   007016  6F42               	movwf	66,b	;volatile
 42587   007018                     
 42588                           ; BSR set to: 0
 42589                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 42590   007018  8140               	bsf	64,0,b	;volatile
 42591   00701A                     l1674:
 42592                           
 42593                           ; BSR set to: 0
 42594                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 42595   00701A  B140               	btfsc	64,0,b	;volatile
 42596   00701C  EF12  F038         	goto	u4471
 42597   007020  EF14  F038         	goto	u4470
 42598   007024                     u4471:
 42599   007024  EF0D  F038         	goto	l1674
 42600   007028                     u4470:
 42601   007028                     
 42602                           ; BSR set to: 0
 42603                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 42604   007028  0E07               	movlw	7
 42605   00702A  1341               	iorwf	65,f,b	;volsfr
 42606                           
 42607                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 42608   00702C  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 42609   00702E  B4D8               	btfsc	status,2,c
 42610   007030  EF1C  F038         	goto	u4481
 42611   007034  EF1E  F038         	goto	u4480
 42612   007038                     u4481:
 42613   007038  EF1F  F038         	goto	l1678
 42614   00703C                     u4480:
 42615   00703C                     
 42616                           ; BSR set to: 0
 42617                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 42618   00703C  8ED6               	bsf	214,7,c	;volatile
 42619   00703E                     l1678:
 42620                           
 42621                           ; BSR set to: 0
 42622   00703E  0012               	return		;funcret
 42623   007040                     __end_of_eraseFlashBlock:
 42624                           	callstack 0
 42625                           
 42626 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42627 ;; Defined at:
 42628 ;;		line 286 in file "../main.c"
 42629 ;; Parameters:    Size  Location     Type
 42630 ;;		None
 42631 ;; Auto vars:     Size  Location     Type
 42632 ;;		None
 42633 ;; Return value:  Size  Location     Type
 42634 ;;                  1    wreg      enum E23231
 42635 ;; Registers used:
 42636 ;;		wreg
 42637 ;; Tracked objects:
 42638 ;;		On entry : 0/0
 42639 ;;		On exit  : 0/0
 42640 ;;		Unchanged: 0/0
 42641 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42646 ;;Total ram usage:        0 bytes
 42647 ;; Hardware stack levels used: 1
 42648 ;; Hardware stack levels required when called: 1
 42649 ;; This function calls:
 42650 ;;		Nothing
 42651 ;; This function is called by:
 42652 ;;		_eraseFlashBlock
 42653 ;;		_flushFlashBlock
 42654 ;; This function uses a non-reentrant model
 42655 ;;
 42656                           
 42657                           	psect	text130
 42658   0082C0                     __ptext130:
 42659                           	callstack 0
 42660   0082C0                     _APP_isSuitableTimeToWriteFlash:
 42661                           	callstack 116
 42662   0082C0                     
 42663                           ;../main.c: 287:     if (DMAnCON0bits.DGO) return BAD_TIME;
 42664   0082C0  0100               	movlb	0	; () banked
 42665   0082C2  ABFC               	btfss	252,5,b	;volatile
 42666   0082C4  EF66  F041         	goto	u4411
 42667   0082C8  EF68  F041         	goto	u4410
 42668   0082CC                     u4411:
 42669   0082CC  EF6B  F041         	goto	l7227
 42670   0082D0                     u4410:
 42671   0082D0                     
 42672                           ; BSR set to: 0
 42673   0082D0  0E00               	movlw	0
 42674   0082D2  EF6C  F041         	goto	l85
 42675   0082D6                     l7227:
 42676                           
 42677                           ; BSR set to: 0
 42678                           ;../main.c: 288:     return GOOD_TIME;
 42679   0082D6  0E01               	movlw	1
 42680   0082D8                     l85:
 42681                           
 42682                           ; BSR set to: 0
 42683   0082D8  0012               	return		;funcret
 42684   0082DA                     __end_of_APP_isSuitableTimeToWriteFlash:
 42685                           	callstack 0
 42686                           
 42687 ;; *************** function _EEPROM_Write *****************
 42688 ;; Defined at:
 42689 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 42690 ;; Parameters:    Size  Location     Type
 42691 ;;  index           3    8[COMRAM] unsigned um
 42692 ;;  value           1   11[COMRAM] unsigned char 
 42693 ;; Auto vars:     Size  Location     Type
 42694 ;;  interruptEna    1    0        unsigned char 
 42695 ;; Return value:  Size  Location     Type
 42696 ;;                  1    wreg      unsigned char 
 42697 ;; Registers used:
 42698 ;;		wreg, status,2, status,0, cstack
 42699 ;; Tracked objects:
 42700 ;;		On entry : 0/0
 42701 ;;		On exit  : 0/0
 42702 ;;		Unchanged: 0/0
 42703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42708 ;;Total ram usage:        4 bytes
 42709 ;; Hardware stack levels used: 1
 42710 ;; Hardware stack levels required when called: 2
 42711 ;; This function calls:
 42712 ;;		_EEPROM_Read
 42713 ;;		_EEPROM_WriteNoVerify
 42714 ;;		_updateModuleErrorStatus
 42715 ;; This function is called by:
 42716 ;;		_writeNVM
 42717 ;; This function uses a non-reentrant model
 42718 ;;
 42719                           
 42720                           	psect	text131
 42721   00792A                     __ptext131:
 42722                           	callstack 0
 42723   00792A                     _EEPROM_Write:
 42724                           	callstack 118
 42725   00792A  50D6               	movf	214,w,c	;volatile
 42726   00792C                     l7527:
 42727                           
 42728                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 42729   00792C  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 42730   007930  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 42731   007934  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 42732   007938  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 42733   00793C  ECCF  F03B         	call	_EEPROM_WriteNoVerify	;wreg free
 42734   007940                     
 42735                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 42736   007940  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 42737   007944  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42738   007948  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 42739   00794C  ECC4  F03D         	call	_EEPROM_Read	;wreg free
 42740   007950  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 42741   007952  A4D8               	btfss	status,2,c
 42742   007954  EFAE  F03C         	goto	u4801
 42743   007958  EFB0  F03C         	goto	u4800
 42744   00795C                     u4801:
 42745   00795C  EFB2  F03C         	goto	l7533
 42746   007960                     u4800:
 42747   007960  EFB9  F03C         	goto	l7537
 42748   007964                     l7533:
 42749                           
 42750                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 42751   007964  0105               	movlb	5	; () banked
 42752   007966  4BB5               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42753   007968  2BB6               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42754   00796A                     
 42755                           ; BSR set to: 5
 42756                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 42757   00796A  EC90  F041         	call	_updateModuleErrorStatus	;wreg free
 42758                           
 42759                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 42760   00796E  EF96  F03C         	goto	l7527
 42761   007972                     l7537:
 42762                           
 42763                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 42764   007972  0E07               	movlw	7
 42765   007974  0100               	movlb	0	; () banked
 42766   007976  1341               	iorwf	65,f,b	;volsfr
 42767                           
 42768                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 42769   007978  0E00               	movlw	0
 42770   00797A  6F43               	movwf	67,b	;volatile
 42771   00797C  0E00               	movlw	0
 42772   00797E  6F44               	movwf	68,b	;volatile
 42773   007980  0E00               	movlw	0
 42774   007982  6F45               	movwf	69,b	;volatile
 42775   007984                     
 42776                           ; BSR set to: 0
 42777                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 42778   007984  0E00               	movlw	0
 42779   007986                     
 42780                           ; BSR set to: 0
 42781   007986  0012               	return		;funcret
 42782   007988                     __end_of_EEPROM_Write:
 42783                           	callstack 0
 42784                           
 42785 ;; *************** function _updateModuleErrorStatus *****************
 42786 ;; Defined at:
 42787 ;;		line 639 in file "../../VLCBlib_PIC/mns.c"
 42788 ;; Parameters:    Size  Location     Type
 42789 ;;		None
 42790 ;; Auto vars:     Size  Location     Type
 42791 ;;		None
 42792 ;; Return value:  Size  Location     Type
 42793 ;;                  1    wreg      void 
 42794 ;; Registers used:
 42795 ;;		wreg, status,2, status,0
 42796 ;; Tracked objects:
 42797 ;;		On entry : 0/0
 42798 ;;		On exit  : 0/0
 42799 ;;		Unchanged: 0/0
 42800 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42805 ;;Total ram usage:        0 bytes
 42806 ;; Hardware stack levels used: 1
 42807 ;; Hardware stack levels required when called: 1
 42808 ;; This function calls:
 42809 ;;		Nothing
 42810 ;; This function is called by:
 42811 ;;		_canSendMessage
 42812 ;;		_processEnumeration
 42813 ;;		_EEPROM_Write
 42814 ;; This function uses a non-reentrant model
 42815 ;;
 42816                           
 42817                           	psect	text132
 42818   008320                     __ptext132:
 42819                           	callstack 0
 42820   008320                     _updateModuleErrorStatus:
 42821                           	callstack 119
 42822   008320                     
 42823                           ;../../VLCBlib_PIC/mns.c: 640:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42824   008320  0105               	movlb	5	; () banked
 42825   008322  29AF               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42826   008324  B4D8               	btfsc	status,2,c
 42827   008326  EF97  F041         	goto	u4521
 42828   00832A  EF99  F041         	goto	u4520
 42829   00832E                     u4521:
 42830   00832E  EF9A  F041         	goto	l1396
 42831   008332                     u4520:
 42832   008332                     
 42833                           ; BSR set to: 5
 42834                           ;../../VLCBlib_PIC/mns.c: 641:         mnsDiagnostics[0x01].asBytes.lo++;
 42835   008332  2BAF               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42836   008334                     l1396:
 42837                           
 42838                           ; BSR set to: 5
 42839   008334  0012               	return		;funcret
 42840   008336                     __end_of_updateModuleErrorStatus:
 42841                           	callstack 0
 42842                           
 42843 ;; *************** function _EEPROM_WriteNoVerify *****************
 42844 ;; Defined at:
 42845 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 42846 ;; Parameters:    Size  Location     Type
 42847 ;;  index           3    0[COMRAM] unsigned um
 42848 ;;  value           1    3[COMRAM] unsigned char 
 42849 ;; Auto vars:     Size  Location     Type
 42850 ;;  interruptEna    1    7[COMRAM] unsigned char 
 42851 ;; Return value:  Size  Location     Type
 42852 ;;                  1    wreg      unsigned char 
 42853 ;; Registers used:
 42854 ;;		wreg, status,2
 42855 ;; Tracked objects:
 42856 ;;		On entry : 0/0
 42857 ;;		On exit  : 0/0
 42858 ;;		Unchanged: 0/0
 42859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42862 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42863 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42864 ;;Total ram usage:        8 bytes
 42865 ;; Hardware stack levels used: 1
 42866 ;; Hardware stack levels required when called: 1
 42867 ;; This function calls:
 42868 ;;		Nothing
 42869 ;; This function is called by:
 42870 ;;		_EEPROM_Write
 42871 ;; This function uses a non-reentrant model
 42872 ;;
 42873                           
 42874                           	psect	text133
 42875   00779E                     __ptext133:
 42876                           	callstack 0
 42877   00779E                     _EEPROM_WriteNoVerify:
 42878                           	callstack 118
 42879   00779E                     
 42880                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 42881   00779E  0E00               	movlw	0
 42882   0077A0  BED6               	btfsc	214,7,c	;volatile
 42883   0077A2  0E01               	movlw	1
 42884   0077A4  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 42885   0077A6                     l1656:
 42886                           
 42887                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 42888   0077A6  0100               	movlb	0	; () banked
 42889   0077A8  B140               	btfsc	64,0,b	;volatile
 42890   0077AA  EFD9  F03B         	goto	u4591
 42891   0077AE  EFDB  F03B         	goto	u4590
 42892   0077B2                     u4591:
 42893   0077B2  EFD3  F03B         	goto	l1656
 42894   0077B6                     u4590:
 42895   0077B6                     
 42896                           ; BSR set to: 0
 42897                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 42898   0077B6  0E38               	movlw	56
 42899   0077B8  6F45               	movwf	69,b	;volatile
 42900                           
 42901                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 42902   0077BA  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 42903   0077BE  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 42904   0077C2  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 42905   0077C6  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 42906   0077CA  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 42907   0077CE  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 42908   0077D0  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 42909   0077D2  6F44               	movwf	68,b	;volatile
 42910   0077D4                     
 42911                           ; BSR set to: 0
 42912                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 42913   0077D4  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 42914   0077D8                     
 42915                           ; BSR set to: 0
 42916                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 42917   0077D8  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 42918                           
 42919                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 42920   0077DC  5141               	movf	65,w,b	;volsfr
 42921   0077DE  0BF8               	andlw	-8
 42922   0077E0  0903               	iorlw	3
 42923   0077E2  6F41               	movwf	65,b	;volsfr
 42924   0077E4                     
 42925                           ; BSR set to: 0
 42926                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 42927   0077E4  9ED6               	bcf	214,7,c	;volatile
 42928                           
 42929                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 42930   0077E6  0E55               	movlw	85
 42931   0077E8  6F42               	movwf	66,b	;volatile
 42932                           
 42933                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 42934   0077EA  0EAA               	movlw	170
 42935   0077EC  6F42               	movwf	66,b	;volatile
 42936   0077EE                     
 42937                           ; BSR set to: 0
 42938                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 42939   0077EE  8140               	bsf	64,0,b	;volatile
 42940                           
 42941                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 42942   0077F0  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 42943   0077F2  B4D8               	btfsc	status,2,c
 42944   0077F4  EFFE  F03B         	goto	u4601
 42945   0077F8  EF00  F03C         	goto	u4600
 42946   0077FC                     u4601:
 42947   0077FC  EF01  F03C         	goto	l1660
 42948   007800                     u4600:
 42949   007800                     
 42950                           ; BSR set to: 0
 42951                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 42952   007800  8ED6               	bsf	214,7,c	;volatile
 42953   007802                     l1660:
 42954                           
 42955                           ; BSR set to: 0
 42956   007802  0012               	return		;funcret
 42957   007804                     __end_of_EEPROM_WriteNoVerify:
 42958                           	callstack 0
 42959                           
 42960 ;; *************** function _rebuildHashtable *****************
 42961 ;; Defined at:
 42962 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42963 ;; Parameters:    Size  Location     Type
 42964 ;;		None
 42965 ;; Auto vars:     Size  Location     Type
 42966 ;;  ev              2    0        short 
 42967 ;;  a               2    0        int 
 42968 ;;  chainIdx        1   38[COMRAM] unsigned char 
 42969 ;;  tableIndex      1   37[COMRAM] unsigned char 
 42970 ;;  hash            1   36[COMRAM] unsigned char 
 42971 ;; Return value:  Size  Location     Type
 42972 ;;                  1    wreg      void 
 42973 ;; Registers used:
 42974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42975 ;; Tracked objects:
 42976 ;;		On entry : 0/0
 42977 ;;		On exit  : 0/0
 42978 ;;		Unchanged: 0/0
 42979 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42981 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42983 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42984 ;;Total ram usage:        6 bytes
 42985 ;; Hardware stack levels used: 1
 42986 ;; Hardware stack levels required when called: 4
 42987 ;; This function calls:
 42988 ;;		_getEN
 42989 ;;		_getHash
 42990 ;;		_getNN
 42991 ;; This function is called by:
 42992 ;;		_teachPowerUp
 42993 ;;		_clearAllEvents
 42994 ;;		_removeTableEntry
 42995 ;;		_addEvent
 42996 ;;		_mnsProcessMessage
 42997 ;; This function uses a non-reentrant model
 42998 ;;
 42999                           
 43000                           	psect	text134
 43001   00576A                     __ptext134:
 43002                           	callstack 0
 43003   00576A                     _rebuildHashtable:
 43004                           	callstack 120
 43005   00576A                     
 43006                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 43007   00576A  6A25               	clrf	rebuildHashtable@hash^(0+1280),c
 43008   00576C                     l1169:
 43009                           
 43010                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 43011   00576C  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 43012   00576E                     l7695:
 43013                           
 43014                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 43015   00576E  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43016   005770  0D14               	mullw	20
 43017   005772  0EFC               	movlw	low _eventChains
 43018   005774  24F3               	addwf	243,w,c
 43019   005776  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43020   005778  0E08               	movlw	high _eventChains
 43021   00577A  20F4               	addwfc	prodh,w,c
 43022   00577C  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43023   00577E  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43024   005780  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43025   005782  6ED9               	movwf	fsr2l,c
 43026   005784  0E00               	movlw	0
 43027   005786  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43028   005788  6EDA               	movwf	fsr2h,c
 43029   00578A  0EFF               	movlw	255
 43030   00578C  6EDF               	movwf	indf2,c
 43031   00578E                     
 43032                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 43033   00578E  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 43034   005790  0E13               	movlw	19
 43035   005792  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 43036   005794  EFCE  F02B         	goto	u4971
 43037   005798  EFD0  F02B         	goto	u4970
 43038   00579C                     u4971:
 43039   00579C  EFB7  F02B         	goto	l7695
 43040   0057A0                     u4970:
 43041   0057A0                     
 43042                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 43043   0057A0  2A25               	incf	rebuildHashtable@hash^(0+1280),f,c
 43044   0057A2  0E1F               	movlw	31
 43045   0057A4  6425               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 43046   0057A6  EFD7  F02B         	goto	u4981
 43047   0057AA  EFD9  F02B         	goto	u4980
 43048   0057AE                     u4981:
 43049   0057AE  EFB6  F02B         	goto	l1169
 43050   0057B2                     u4980:
 43051   0057B2                     
 43052                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<255; ta
      +                          bleIndex++) {
 43053   0057B2  6A26               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 43054   0057B4                     l7709:
 43055                           
 43056                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 43057   0057B4  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43058   0057B6  ECBD  F033         	call	_getEN
 43059   0057BA  500D               	movf	?_getEN^(0+1280),w,c
 43060   0057BC  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 43061   0057BE  B4D8               	btfsc	status,2,c
 43062   0057C0  EFE4  F02B         	goto	u4991
 43063   0057C4  EFE6  F02B         	goto	u4990
 43064   0057C8                     u4991:
 43065   0057C8  EF29  F02C         	goto	l7727
 43066   0057CC                     u4990:
 43067   0057CC                     
 43068                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 43069   0057CC  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43070   0057CE  EC8F  F029         	call	_getNN
 43071   0057D2  C50D  F51C         	movff	?_getNN,getHash@nn
 43072   0057D6  C50E  F51D         	movff	?_getNN+1,getHash@nn+1
 43073   0057DA  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43074   0057DC  ECBD  F033         	call	_getEN
 43075   0057E0  C50D  F51E         	movff	?_getEN,getHash@en
 43076   0057E4  C50E  F51F         	movff	?_getEN+1,getHash@en+1
 43077   0057E8  EC35  F041         	call	_getHash	;wreg free
 43078   0057EC  6E25               	movwf	rebuildHashtable@hash^(0+1280),c
 43079   0057EE                     
 43080                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 43081   0057EE  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 43082   0057F0                     l7719:
 43083                           
 43084                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 43085   0057F0  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43086   0057F2  0D14               	mullw	20
 43087   0057F4  0EFC               	movlw	low _eventChains
 43088   0057F6  24F3               	addwf	243,w,c
 43089   0057F8  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43090   0057FA  0E08               	movlw	high _eventChains
 43091   0057FC  20F4               	addwfc	prodh,w,c
 43092   0057FE  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43093   005800  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43094   005802  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43095   005804  6ED9               	movwf	fsr2l,c
 43096   005806  0E00               	movlw	0
 43097   005808  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43098   00580A  6EDA               	movwf	fsr2h,c
 43099   00580C  28DE               	incf	postinc2,w,c
 43100   00580E  A4D8               	btfss	status,2,c
 43101   005810  EF0C  F02C         	goto	u5001
 43102   005814  EF0E  F02C         	goto	u5000
 43103   005818                     u5001:
 43104   005818  EF20  F02C         	goto	l7723
 43105   00581C                     u5000:
 43106   00581C                     
 43107                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 43108   00581C  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43109   00581E  0D14               	mullw	20
 43110   005820  0EFC               	movlw	low _eventChains
 43111   005822  24F3               	addwf	243,w,c
 43112   005824  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43113   005826  0E08               	movlw	high _eventChains
 43114   005828  20F4               	addwfc	prodh,w,c
 43115   00582A  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43116   00582C  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43117   00582E  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43118   005830  6ED9               	movwf	fsr2l,c
 43119   005832  0E00               	movlw	0
 43120   005834  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43121   005836  6EDA               	movwf	fsr2h,c
 43122   005838  C526  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 43123                           
 43124                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 43125   00583C  EF29  F02C         	goto	l7727
 43126   005840                     l7723:
 43127                           
 43128                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 43129   005840  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 43130   005842  0E13               	movlw	19
 43131   005844  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 43132   005846  EF27  F02C         	goto	u5011
 43133   00584A  EF29  F02C         	goto	u5010
 43134   00584E                     u5011:
 43135   00584E  EFF8  F02B         	goto	l7719
 43136   005852                     u5010:
 43137   005852                     l7727:
 43138                           
 43139                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 43140   005852  2A26               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 43141   005854  2826               	incf	rebuildHashtable@tableIndex^(0+1280),w,c
 43142   005856  A4D8               	btfss	status,2,c
 43143   005858  EF30  F02C         	goto	u5021
 43144   00585C  EF32  F02C         	goto	u5020
 43145   005860                     u5021:
 43146   005860  EFDA  F02B         	goto	l7709
 43147   005864                     u5020:
 43148   005864  0012               	return		;funcret
 43149   005866                     __end_of_rebuildHashtable:
 43150                           	callstack 0
 43151                           
 43152 ;; *************** function _getNN *****************
 43153 ;; Defined at:
 43154 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43155 ;; Parameters:    Size  Location     Type
 43156 ;;  tableIndex      1    wreg     unsigned char 
 43157 ;; Auto vars:     Size  Location     Type
 43158 ;;  tableIndex      1   26[COMRAM] unsigned char 
 43159 ;;  lo              2   23[COMRAM] unsigned short 
 43160 ;;  hi              2   21[COMRAM] unsigned short 
 43161 ;;  flags           1   25[COMRAM] unsigned char 
 43162 ;; Return value:  Size  Location     Type
 43163 ;;                  2   12[COMRAM] unsigned short 
 43164 ;; Registers used:
 43165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43166 ;; Tracked objects:
 43167 ;;		On entry : 0/0
 43168 ;;		On exit  : 0/0
 43169 ;;		Unchanged: 0/0
 43170 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43172 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43173 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43174 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43175 ;;Total ram usage:       15 bytes
 43176 ;; Hardware stack levels used: 1
 43177 ;; Hardware stack levels required when called: 3
 43178 ;; This function calls:
 43179 ;;		_readNVM
 43180 ;; This function is called by:
 43181 ;;		_nerdCallback
 43182 ;;		_doNenrd
 43183 ;;		_reqevCallback
 43184 ;;		_findEvent
 43185 ;;		_rebuildHashtable
 43186 ;; This function uses a non-reentrant model
 43187 ;;
 43188                           
 43189                           	psect	text135
 43190   00531E                     __ptext135:
 43191                           	callstack 0
 43192   00531E                     _getNN:
 43193                           	callstack 120
 43194                           
 43195                           ;incstack = 0
 43196                           ;getNN@tableIndex stored from wreg
 43197   00531E  6E1B               	movwf	getNN@tableIndex^(0+1280),c
 43198   005320                     
 43199                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 255) {
 43200   005320  281B               	incf	getNN@tableIndex^(0+1280),w,c
 43201   005322  A4D8               	btfss	status,2,c
 43202   005324  EF96  F029         	goto	u4781
 43203   005328  EF98  F029         	goto	u4780
 43204   00532C                     u4781:
 43205   00532C  EF9E  F029         	goto	l7503
 43206   005330                     u4780:
 43207   005330                     
 43208                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 43209   005330  0E00               	movlw	0
 43210   005332  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43211   005334  0E08               	movlw	8
 43212   005336  6E0D               	movwf	?_getNN^(0+1280),c
 43213   005338  EF1F  F02A         	goto	l1153
 43214   00533C                     l7503:
 43215                           
 43216                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4);
 43217   00533C  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43218   00533E  6E0F               	movwf	??_getNN^(0+1280),c
 43219   005340  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43220   005342  0E01               	movlw	1
 43221   005344  020F               	mulwf	??_getNN^(0+1280),c
 43222   005346  C4F3 F511          	movff	prodl,??_getNN+2
 43223   00534A  C4F4 F512          	movff	prodh,??_getNN+3
 43224   00534E  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43225   005350  50F3               	movf	prodl,w,c
 43226   005352  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43227   005354  0E01               	movlw	1
 43228   005356  020F               	mulwf	??_getNN^(0+1280),c
 43229   005358  50F3               	movf	prodl,w,c
 43230   00535A  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43231   00535C  C511  F513         	movff	??_getNN+2,??_getNN+4
 43232   005360  C512  F514         	movff	??_getNN+3,??_getNN+5
 43233   005364  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43234   005366  0E04               	movlw	4
 43235   005368  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43236   00536A  6E07               	movwf	readNVM@index^(0+1280),c
 43237   00536C  0E00               	movlw	0
 43238   00536E  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43239   005370  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43240   005372  0E01               	movlw	1
 43241   005374  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43242   005376  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43243   005378  0E01               	movlw	1
 43244   00537A  EC89  F03A         	call	_readNVM
 43245   00537E  5007               	movf	?_readNVM^(0+1280),w,c
 43246   005380  6E1A               	movwf	getNN@flags^(0+1280),c
 43247   005382                     
 43248                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 43249   005382  A01A               	btfss	getNN@flags^(0+1280),0,c
 43250   005384  EFC6  F029         	goto	u4791
 43251   005388  EFC8  F029         	goto	u4790
 43252   00538C                     u4791:
 43253   00538C  EFCE  F029         	goto	l7509
 43254   005390                     u4790:
 43255   005390                     
 43256                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 43257   005390  C58F  F50D         	movff	_nn,?_getNN
 43258   005394  C590  F50E         	movff	_nn+1,?_getNN+1
 43259   005398  EF1F  F02A         	goto	l1153
 43260   00539C                     l7509:
 43261                           
 43262                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+1);
 43263   00539C  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43264   00539E  6E0F               	movwf	??_getNN^(0+1280),c
 43265   0053A0  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43266   0053A2  0E01               	movlw	1
 43267   0053A4  020F               	mulwf	??_getNN^(0+1280),c
 43268   0053A6  C4F3 F511          	movff	prodl,??_getNN+2
 43269   0053AA  C4F4 F512          	movff	prodh,??_getNN+3
 43270   0053AE  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43271   0053B0  50F3               	movf	prodl,w,c
 43272   0053B2  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43273   0053B4  0E01               	movlw	1
 43274   0053B6  020F               	mulwf	??_getNN^(0+1280),c
 43275   0053B8  50F3               	movf	prodl,w,c
 43276   0053BA  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43277   0053BC  C511  F513         	movff	??_getNN+2,??_getNN+4
 43278   0053C0  C512  F514         	movff	??_getNN+3,??_getNN+5
 43279   0053C4  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43280   0053C6  0E01               	movlw	1
 43281   0053C8  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43282   0053CA  6E07               	movwf	readNVM@index^(0+1280),c
 43283   0053CC  0E00               	movlw	0
 43284   0053CE  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43285   0053D0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43286   0053D2  0E01               	movlw	1
 43287   0053D4  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43288   0053D6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43289   0053D8  0E01               	movlw	1
 43290   0053DA  EC89  F03A         	call	_readNVM
 43291   0053DE  5007               	movf	?_readNVM^(0+1280),w,c
 43292   0053E0  6E18               	movwf	getNN@lo^(0+1280),c
 43293   0053E2  6A19               	clrf	(getNN@lo+1)^(0+1280),c
 43294                           
 43295                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0);
 43296   0053E4  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43297   0053E6  6E0F               	movwf	??_getNN^(0+1280),c
 43298   0053E8  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43299   0053EA  0E01               	movlw	1
 43300   0053EC  020F               	mulwf	??_getNN^(0+1280),c
 43301   0053EE  C4F3 F511          	movff	prodl,??_getNN+2
 43302   0053F2  C4F4 F512          	movff	prodh,??_getNN+3
 43303   0053F6  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43304   0053F8  50F3               	movf	prodl,w,c
 43305   0053FA  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43306   0053FC  0E01               	movlw	1
 43307   0053FE  020F               	mulwf	??_getNN^(0+1280),c
 43308   005400  50F3               	movf	prodl,w,c
 43309   005402  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43310   005404  C511  F513         	movff	??_getNN+2,??_getNN+4
 43311   005408  C512  F514         	movff	??_getNN+3,??_getNN+5
 43312   00540C  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43313   00540E  0E00               	movlw	0
 43314   005410  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43315   005412  6E07               	movwf	readNVM@index^(0+1280),c
 43316   005414  0E00               	movlw	0
 43317   005416  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43318   005418  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43319   00541A  0E01               	movlw	1
 43320   00541C  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43321   00541E  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43322   005420  0E01               	movlw	1
 43323   005422  EC89  F03A         	call	_readNVM
 43324   005426  5007               	movf	?_readNVM^(0+1280),w,c
 43325   005428  6E16               	movwf	getNN@hi^(0+1280),c
 43326   00542A  6A17               	clrf	(getNN@hi+1)^(0+1280),c
 43327   00542C                     
 43328                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 43329   00542C  5016               	movf	getNN@hi^(0+1280),w,c
 43330   00542E  6E10               	movwf	(??_getNN+1)^(0+1280),c
 43331   005430  6A0F               	clrf	??_getNN^(0+1280),c
 43332   005432  5018               	movf	getNN@lo^(0+1280),w,c
 43333   005434  100F               	iorwf	??_getNN^(0+1280),w,c
 43334   005436  6E0D               	movwf	?_getNN^(0+1280),c
 43335   005438  5019               	movf	(getNN@lo+1)^(0+1280),w,c
 43336   00543A  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 43337   00543C  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43338   00543E                     l1153:
 43339   00543E  0012               	return		;funcret
 43340   005440                     __end_of_getNN:
 43341                           	callstack 0
 43342                           
 43343 ;; *************** function _getHash *****************
 43344 ;; Defined at:
 43345 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43346 ;; Parameters:    Size  Location     Type
 43347 ;;  nn              2   27[COMRAM] unsigned short 
 43348 ;;  en              2   29[COMRAM] unsigned short 
 43349 ;; Auto vars:     Size  Location     Type
 43350 ;;  hash            1   32[COMRAM] unsigned char 
 43351 ;; Return value:  Size  Location     Type
 43352 ;;                  1    wreg      unsigned char 
 43353 ;; Registers used:
 43354 ;;		wreg, status,2, status,0, prodl, prodh
 43355 ;; Tracked objects:
 43356 ;;		On entry : 0/0
 43357 ;;		On exit  : 0/0
 43358 ;;		Unchanged: 0/0
 43359 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43364 ;;Total ram usage:        6 bytes
 43365 ;; Hardware stack levels used: 1
 43366 ;; Hardware stack levels required when called: 1
 43367 ;; This function calls:
 43368 ;;		Nothing
 43369 ;; This function is called by:
 43370 ;;		_findEvent
 43371 ;;		_rebuildHashtable
 43372 ;; This function uses a non-reentrant model
 43373 ;;
 43374                           
 43375                           	psect	text136
 43376   00826A                     __ptext136:
 43377                           	callstack 0
 43378   00826A                     _getHash:
 43379                           	callstack 122
 43380   00826A                     
 43381                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 43382   00826A  501D               	movf	(getHash@nn+1)^(0+1280),w,c
 43383   00826C  181C               	xorwf	getHash@nn^(0+1280),w,c
 43384   00826E  6E21               	movwf	getHash@hash^(0+1280),c
 43385   008270                     
 43386                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 43387   008270  501F               	movf	(getHash@en+1)^(0+1280),w,c
 43388   008272  181E               	xorwf	getHash@en^(0+1280),w,c
 43389   008274  6E20               	movwf	??_getHash^(0+1280),c
 43390   008276  5021               	movf	getHash@hash^(0+1280),w,c
 43391   008278  0D07               	mullw	7
 43392   00827A  50F3               	movf	243,w,c
 43393   00827C  2420               	addwf	??_getHash^(0+1280),w,c
 43394   00827E  6E21               	movwf	getHash@hash^(0+1280),c
 43395   008280                     
 43396                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 43397   008280  0E1F               	movlw	31
 43398   008282  1621               	andwf	getHash@hash^(0+1280),f,c
 43399   008284                     
 43400                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 43401   008284  5021               	movf	getHash@hash^(0+1280),w,c
 43402   008286  0012               	return		;funcret
 43403   008288                     __end_of_getHash:
 43404                           	callstack 0
 43405                           
 43406 ;; *************** function _getEN *****************
 43407 ;; Defined at:
 43408 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43409 ;; Parameters:    Size  Location     Type
 43410 ;;  tableIndex      1    wreg     unsigned char 
 43411 ;; Auto vars:     Size  Location     Type
 43412 ;;  tableIndex      1   25[COMRAM] unsigned char 
 43413 ;;  lo              2   23[COMRAM] unsigned short 
 43414 ;;  hi              2   21[COMRAM] unsigned short 
 43415 ;; Return value:  Size  Location     Type
 43416 ;;                  2   12[COMRAM] unsigned short 
 43417 ;; Registers used:
 43418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43419 ;; Tracked objects:
 43420 ;;		On entry : 0/0
 43421 ;;		On exit  : 0/0
 43422 ;;		Unchanged: 0/0
 43423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43425 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43426 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43427 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43428 ;;Total ram usage:       14 bytes
 43429 ;; Hardware stack levels used: 1
 43430 ;; Hardware stack levels required when called: 3
 43431 ;; This function calls:
 43432 ;;		_readNVM
 43433 ;; This function is called by:
 43434 ;;		_doNnevn
 43435 ;;		_nerdCallback
 43436 ;;		_doNenrd
 43437 ;;		_doRqevn
 43438 ;;		_reqevCallback
 43439 ;;		_addEvent
 43440 ;;		_findEvent
 43441 ;;		_rebuildHashtable
 43442 ;; This function uses a non-reentrant model
 43443 ;;
 43444                           
 43445                           	psect	text137
 43446   00677A                     __ptext137:
 43447                           	callstack 0
 43448   00677A                     _getEN:
 43449                           	callstack 120
 43450                           
 43451                           ;incstack = 0
 43452                           ;getEN@tableIndex stored from wreg
 43453   00677A  6E1A               	movwf	getEN@tableIndex^(0+1280),c
 43454   00677C                     
 43455                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3);
 43456   00677C  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43457   00677E  6E0F               	movwf	??_getEN^(0+1280),c
 43458   006780  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43459   006782  0E01               	movlw	1
 43460   006784  020F               	mulwf	??_getEN^(0+1280),c
 43461   006786  C4F3 F511          	movff	prodl,??_getEN+2
 43462   00678A  C4F4 F512          	movff	prodh,??_getEN+3
 43463   00678E  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43464   006790  50F3               	movf	prodl,w,c
 43465   006792  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43466   006794  0E01               	movlw	1
 43467   006796  020F               	mulwf	??_getEN^(0+1280),c
 43468   006798  50F3               	movf	prodl,w,c
 43469   00679A  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43470   00679C  C511  F513         	movff	??_getEN+2,??_getEN+4
 43471   0067A0  C512  F514         	movff	??_getEN+3,??_getEN+5
 43472   0067A4  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43473   0067A6  0E03               	movlw	3
 43474   0067A8  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43475   0067AA  6E07               	movwf	readNVM@index^(0+1280),c
 43476   0067AC  0E00               	movlw	0
 43477   0067AE  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43478   0067B0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43479   0067B2  0E01               	movlw	1
 43480   0067B4  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43481   0067B6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43482   0067B8  0E01               	movlw	1
 43483   0067BA  EC89  F03A         	call	_readNVM
 43484   0067BE  5007               	movf	?_readNVM^(0+1280),w,c
 43485   0067C0  6E18               	movwf	getEN@lo^(0+1280),c
 43486   0067C2  6A19               	clrf	(getEN@lo+1)^(0+1280),c
 43487                           
 43488                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2);
 43489   0067C4  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43490   0067C6  6E0F               	movwf	??_getEN^(0+1280),c
 43491   0067C8  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43492   0067CA  0E01               	movlw	1
 43493   0067CC  020F               	mulwf	??_getEN^(0+1280),c
 43494   0067CE  C4F3 F511          	movff	prodl,??_getEN+2
 43495   0067D2  C4F4 F512          	movff	prodh,??_getEN+3
 43496   0067D6  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43497   0067D8  50F3               	movf	prodl,w,c
 43498   0067DA  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43499   0067DC  0E01               	movlw	1
 43500   0067DE  020F               	mulwf	??_getEN^(0+1280),c
 43501   0067E0  50F3               	movf	prodl,w,c
 43502   0067E2  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43503   0067E4  C511  F513         	movff	??_getEN+2,??_getEN+4
 43504   0067E8  C512  F514         	movff	??_getEN+3,??_getEN+5
 43505   0067EC  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43506   0067EE  0E02               	movlw	2
 43507   0067F0  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43508   0067F2  6E07               	movwf	readNVM@index^(0+1280),c
 43509   0067F4  0E00               	movlw	0
 43510   0067F6  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43511   0067F8  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43512   0067FA  0E01               	movlw	1
 43513   0067FC  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43514   0067FE  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43515   006800  0E01               	movlw	1
 43516   006802  EC89  F03A         	call	_readNVM
 43517   006806  5007               	movf	?_readNVM^(0+1280),w,c
 43518   006808  6E16               	movwf	getEN@hi^(0+1280),c
 43519   00680A  6A17               	clrf	(getEN@hi+1)^(0+1280),c
 43520   00680C                     
 43521                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 43522   00680C  5016               	movf	getEN@hi^(0+1280),w,c
 43523   00680E  6E10               	movwf	(??_getEN+1)^(0+1280),c
 43524   006810  6A0F               	clrf	??_getEN^(0+1280),c
 43525   006812  5018               	movf	getEN@lo^(0+1280),w,c
 43526   006814  100F               	iorwf	??_getEN^(0+1280),w,c
 43527   006816  6E0D               	movwf	?_getEN^(0+1280),c
 43528   006818  5019               	movf	(getEN@lo+1)^(0+1280),w,c
 43529   00681A  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 43530   00681C  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 43531   00681E  0012               	return		;funcret
 43532   006820                     __end_of_getEN:
 43533                           	callstack 0
 43534                           
 43535 ;; *************** function _readNVM *****************
 43536 ;; Defined at:
 43537 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 43538 ;; Parameters:    Size  Location     Type
 43539 ;;  type            1    wreg     enum E23276
 43540 ;;  index           3    6[COMRAM] unsigned um
 43541 ;; Auto vars:     Size  Location     Type
 43542 ;;  type            1   11[COMRAM] enum E23276
 43543 ;; Return value:  Size  Location     Type
 43544 ;;                  2    6[COMRAM] short 
 43545 ;; Registers used:
 43546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43547 ;; Tracked objects:
 43548 ;;		On entry : 0/0
 43549 ;;		On exit  : 0/0
 43550 ;;		Unchanged: 0/0
 43551 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43552 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43556 ;;Total ram usage:        6 bytes
 43557 ;; Hardware stack levels used: 1
 43558 ;; Hardware stack levels required when called: 2
 43559 ;; This function calls:
 43560 ;;		_EEPROM_Read
 43561 ;;		_FLASH_Read
 43562 ;; This function is called by:
 43563 ;;		_bootPowerUp
 43564 ;;		_canPowerUp
 43565 ;;		_getEv
 43566 ;;		_getEVs
 43567 ;;		_getNN
 43568 ;;		_getEN
 43569 ;;		_mnsPowerUp
 43570 ;;		_loadNvCache
 43571 ;;		_main
 43572 ;; This function uses a non-reentrant model
 43573 ;;
 43574                           
 43575                           	psect	text138
 43576   007512                     __ptext138:
 43577                           	callstack 0
 43578   007512                     _readNVM:
 43579                           	callstack 124
 43580                           
 43581                           ;incstack = 0
 43582                           ;readNVM@type stored from wreg
 43583   007512  6E0C               	movwf	readNVM@type^(0+1280),c
 43584   007514                     
 43585                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 43586   007514  EFAD  F03A         	goto	l7319
 43587   007518                     l7305:
 43588                           
 43589                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 43590   007518  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 43591   00751C  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 43592   007520  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 43593   007522  ECC4  F03D         	call	_EEPROM_Read	;wreg free
 43594   007526  6E0A               	movwf	??_readNVM^(0+1280),c
 43595   007528  500A               	movf	??_readNVM^(0+1280),w,c
 43596   00752A  6E07               	movwf	?_readNVM^(0+1280),c
 43597   00752C  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43598   00752E  EFC2  F03A         	goto	l1722
 43599   007532                     l7309:
 43600                           
 43601                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 43602   007532  C507  F501         	movff	readNVM@index,FLASH_Read@address
 43603   007536  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 43604   00753A  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 43605   00753E  ECD8  F039         	call	_FLASH_Read	;wreg free
 43606   007542  6E0A               	movwf	??_readNVM^(0+1280),c
 43607   007544  500A               	movf	??_readNVM^(0+1280),w,c
 43608   007546  6E07               	movwf	?_readNVM^(0+1280),c
 43609   007548  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43610   00754A  EFC2  F03A         	goto	l1722
 43611   00754E                     l7313:
 43612                           
 43613                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 43614   00754E  0EFF               	movlw	255
 43615   007550  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 43616   007552  0E02               	movlw	2
 43617   007554  6E07               	movwf	?_readNVM^(0+1280),c
 43618   007556  EFC2  F03A         	goto	l1722
 43619   00755A                     l7319:
 43620   00755A  500C               	movf	readNVM@type^(0+1280),w,c
 43621   00755C  6E0A               	movwf	??_readNVM^(0+1280),c
 43622   00755E  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 43623                           
 43624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43625                           ; Switch size 1, requested type "simple"
 43626                           ; Number of cases is 1, Range of values is 0 to 0
 43627                           ; switch strategies available:
 43628                           ; Name         Instructions Cycles
 43629                           ; simple_byte            4     3 (average)
 43630                           ;	Chosen strategy is simple_byte
 43631   007560  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 43632   007562  0A00               	xorlw	0	; case 0
 43633   007564  B4D8               	btfsc	status,2,c
 43634   007566  EFB7  F03A         	goto	l11809
 43635   00756A  EFA7  F03A         	goto	l7313
 43636   00756E                     l11809:
 43637                           
 43638                           ; Switch size 1, requested type "simple"
 43639                           ; Number of cases is 2, Range of values is 0 to 1
 43640                           ; switch strategies available:
 43641                           ; Name         Instructions Cycles
 43642                           ; simple_byte            7     4 (average)
 43643                           ;	Chosen strategy is simple_byte
 43644   00756E  500A               	movf	??_readNVM^(0+1280),w,c
 43645   007570  0A00               	xorlw	0	; case 0
 43646   007572  B4D8               	btfsc	status,2,c
 43647   007574  EF8C  F03A         	goto	l7305
 43648   007578  0A01               	xorlw	1	; case 1
 43649   00757A  B4D8               	btfsc	status,2,c
 43650   00757C  EF99  F03A         	goto	l7309
 43651   007580  EFA7  F03A         	goto	l7313
 43652   007584                     l1722:
 43653   007584  0012               	return		;funcret
 43654   007586                     __end_of_readNVM:
 43655                           	callstack 0
 43656                           
 43657 ;; *************** function _FLASH_Read *****************
 43658 ;; Defined at:
 43659 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 43660 ;; Parameters:    Size  Location     Type
 43661 ;;  address         3    0[COMRAM] unsigned um
 43662 ;; Auto vars:     Size  Location     Type
 43663 ;;		None
 43664 ;; Return value:  Size  Location     Type
 43665 ;;                  1    wreg      unsigned char 
 43666 ;; Registers used:
 43667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43668 ;; Tracked objects:
 43669 ;;		On entry : 0/0
 43670 ;;		On exit  : 0/0
 43671 ;;		Unchanged: 0/0
 43672 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43675 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43677 ;;Total ram usage:        6 bytes
 43678 ;; Hardware stack levels used: 1
 43679 ;; Hardware stack levels required when called: 1
 43680 ;; This function calls:
 43681 ;;		Nothing
 43682 ;; This function is called by:
 43683 ;;		_readNVM
 43684 ;; This function uses a non-reentrant model
 43685 ;;
 43686                           
 43687                           	psect	text139
 43688   0073B0                     __ptext139:
 43689                           	callstack 0
 43690   0073B0                     _FLASH_Read:
 43691                           	callstack 124
 43692   0073B0                     
 43693                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 43694   0073B0  0E00               	movlw	0
 43695   0073B2  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43696   0073B4  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43697   0073B6  0EFF               	movlw	255
 43698   0073B8  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43699   0073BA  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43700   0073BC  0EFF               	movlw	255
 43701   0073BE  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 43702   0073C0  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 43703   0073C2  0105               	movlb	5	; () banked
 43704   0073C4  5184               	movf	_flashBlock& (0+255),w,b
 43705   0073C6  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 43706   0073C8  E10A               	bnz	u4441
 43707   0073CA  5185               	movf	(_flashBlock+1)& (0+255),w,b
 43708   0073CC  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 43709   0073CE  E107               	bnz	u4441
 43710   0073D0  5186               	movf	(_flashBlock+2)& (0+255),w,b
 43711   0073D2  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 43712   0073D4  A4D8               	btfss	status,2,c
 43713   0073D6  EFEF  F039         	goto	u4441
 43714   0073DA  EFF1  F039         	goto	u4440
 43715   0073DE                     u4441:
 43716   0073DE  EF00  F03A         	goto	l1663
 43717   0073E2                     u4440:
 43718   0073E2                     
 43719                           ; BSR set to: 5
 43720                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 43721   0073E2  0EFF               	movlw	255
 43722   0073E4  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43723   0073E6  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43724   0073E8  0E00               	movlw	0
 43725   0073EA  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43726   0073EC  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43727   0073EE  0E00               	movlw	0
 43728   0073F0  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 43729   0073F2  6ED9               	movwf	fsr2l,c
 43730   0073F4  0E37               	movlw	55
 43731   0073F6  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 43732   0073F8  6EDA               	movwf	fsr2h,c
 43733   0073FA  50DF               	movf	indf2,w,c
 43734   0073FC  EF13  F03A         	goto	l1664
 43735   007400                     l1663:
 43736                           
 43737                           ; BSR set to: 5
 43738                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 43739   007400  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 43740   007404                     
 43741                           ; BSR set to: 5
 43742                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 43743   007404  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 43744   007408  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 43745   00740C  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 43746   007410  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 43747   007414  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 43748   007418  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 43749   00741A  5004               	movf	??_FLASH_Read^(0+1280),w,c
 43750   00741C  6EF7               	movwf	247,c	;volatile
 43751   00741E                     
 43752                           ; BSR set to: 5
 43753                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 43754   00741E  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 43755   007422  0008               	tblrd		*	;# 
 43756                           
 43757                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 43758   007424  50F5               	movf	245,w,c	;volatile
 43759   007426                     l1664:
 43760   007426  0012               	return		;funcret
 43761   007428                     __end_of_FLASH_Read:
 43762                           	callstack 0
 43763                           
 43764 ;; *************** function _EEPROM_Read *****************
 43765 ;; Defined at:
 43766 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 43767 ;; Parameters:    Size  Location     Type
 43768 ;;  index           3    0[COMRAM] unsigned um
 43769 ;; Auto vars:     Size  Location     Type
 43770 ;;		None
 43771 ;; Return value:  Size  Location     Type
 43772 ;;                  1    wreg      unsigned char 
 43773 ;; Registers used:
 43774 ;;		wreg, status,2
 43775 ;; Tracked objects:
 43776 ;;		On entry : 0/0
 43777 ;;		On exit  : 0/0
 43778 ;;		Unchanged: 0/0
 43779 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43782 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43784 ;;Total ram usage:        6 bytes
 43785 ;; Hardware stack levels used: 1
 43786 ;; Hardware stack levels required when called: 1
 43787 ;; This function calls:
 43788 ;;		Nothing
 43789 ;; This function is called by:
 43790 ;;		_EEPROM_Write
 43791 ;;		_readNVM
 43792 ;; This function uses a non-reentrant model
 43793 ;;
 43794                           
 43795                           	psect	text140
 43796   007B88                     __ptext140:
 43797                           	callstack 0
 43798   007B88                     _EEPROM_Read:
 43799                           	callstack 124
 43800   007B88                     l1641:
 43801                           
 43802                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 43803   007B88  0100               	movlb	0	; () banked
 43804   007B8A  B140               	btfsc	64,0,b	;volatile
 43805   007B8C  EFCA  F03D         	goto	u4421
 43806   007B90  EFCC  F03D         	goto	u4420
 43807   007B94                     u4421:
 43808   007B94  EFC4  F03D         	goto	l1641
 43809   007B98                     u4420:
 43810   007B98                     
 43811                           ; BSR set to: 0
 43812                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 43813   007B98  0E38               	movlw	56
 43814   007B9A  6F45               	movwf	69,b	;volatile
 43815                           
 43816                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 43817   007B9C  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 43818   007BA0  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 43819   007BA4  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 43820   007BA8  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 43821   007BAC  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 43822   007BB0  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 43823   007BB2  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 43824   007BB4  6F44               	movwf	68,b	;volatile
 43825   007BB6                     
 43826                           ; BSR set to: 0
 43827                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 43828   007BB6  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 43829                           
 43830                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 43831   007BBA  0EF8               	movlw	-8
 43832   007BBC  1741               	andwf	65,f,b	;volsfr
 43833   007BBE                     
 43834                           ; BSR set to: 0
 43835                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 43836   007BBE  8140               	bsf	64,0,b	;volatile
 43837   007BC0                     l1644:
 43838                           
 43839                           ; BSR set to: 0
 43840                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 43841   007BC0  B140               	btfsc	64,0,b	;volatile
 43842   007BC2  EFE5  F03D         	goto	u4431
 43843   007BC6  EFE7  F03D         	goto	u4430
 43844   007BCA                     u4431:
 43845   007BCA  EFE0  F03D         	goto	l1644
 43846   007BCE                     u4430:
 43847   007BCE                     
 43848                           ; BSR set to: 0
 43849                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 43850   007BCE  0E07               	movlw	7
 43851   007BD0  1341               	iorwf	65,f,b	;volsfr
 43852                           
 43853                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 43854   007BD2  5146               	movf	70,w,b	;volatile
 43855   007BD4                     
 43856                           ; BSR set to: 0
 43857   007BD4  0012               	return		;funcret
 43858   007BD6                     __end_of_EEPROM_Read:
 43859                           	callstack 0
 43860                           
 43861 ;; *************** function _APP_testMode *****************
 43862 ;; Defined at:
 43863 ;;		line 138 in file "../main.c"
 43864 ;; Parameters:    Size  Location     Type
 43865 ;;		None
 43866 ;; Auto vars:     Size  Location     Type
 43867 ;;  i               1   16[COMRAM] unsigned char 
 43868 ;;  step            1   15[COMRAM] unsigned char 
 43869 ;;  c               1   14[COMRAM] unsigned char 
 43870 ;; Return value:  Size  Location     Type
 43871 ;;                  1    wreg      void 
 43872 ;; Registers used:
 43873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43874 ;; Tracked objects:
 43875 ;;		On entry : 0/0
 43876 ;;		On exit  : 0/0
 43877 ;;		Unchanged: 0/0
 43878 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43880 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43881 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43883 ;;Total ram usage:        7 bytes
 43884 ;; Hardware stack levels used: 1
 43885 ;; Hardware stack levels required when called: 2
 43886 ;; This function calls:
 43887 ;;		_initARGB
 43888 ;;		_tickGet
 43889 ;;		_updateLedRange
 43890 ;; This function is called by:
 43891 ;;		_checkPowerOnPb
 43892 ;; This function uses a non-reentrant model
 43893 ;;
 43894                           
 43895                           	psect	text141
 43896   003F9E                     __ptext141:
 43897                           	callstack 0
 43898   003F9E                     _APP_testMode:
 43899                           	callstack 123
 43900   003F9E                     
 43901                           ;../main.c: 139:     uint8_t step;;../main.c: 140:     uint8_t i,c;;../main.c: 142:     
      +                          initARGB();
 43902   003F9E  EC35  F026         	call	_initARGB	;wreg free
 43903   003FA2                     
 43904                           ;../main.c: 143:     ANSELA = 0x00;
 43905   003FA2  0104               	movlb	4	; () banked
 43906   003FA4  6B00               	clrf	0,b	;volatile
 43907   003FA6                     
 43908                           ; BSR set to: 4
 43909                           ;../main.c: 144:     ANSELB = 0x00;
 43910   003FA6  6B08               	clrf	8,b	;volatile
 43911   003FA8                     
 43912                           ; BSR set to: 4
 43913                           ;../main.c: 145:     ANSELC = 0x00;
 43914   003FA8  6B10               	clrf	16,b	;volatile
 43915   003FAA                     
 43916                           ; BSR set to: 4
 43917                           ;../main.c: 148:     (INTCON0bits.GIE = 1);
 43918   003FAA  8ED6               	bsf	214,7,c	;volatile
 43919   003FAC                     
 43920                           ; BSR set to: 4
 43921                           ;../main.c: 150:     testTime.val = tickGet();
 43922   003FAC  EC14  F03A         	call	_tickGet	;wreg free
 43923   003FB0  C501  F57C         	movff	?_tickGet,_testTime
 43924   003FB4  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43925   003FB8  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43926   003FBC  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43927   003FC0                     
 43928                           ;../main.c: 152:     step = 0;
 43929   003FC0  6A10               	clrf	APP_testMode@step^(0+1280),c
 43930   003FC2                     l9317:
 43931                           
 43932                           ;../main.c: 154:         if ((tickGet() - testTime.val) > (4 * 62500)) {
 43933   003FC2  EC14  F03A         	call	_tickGet	;wreg free
 43934   003FC6  0105               	movlb	5	; () banked
 43935   003FC8  517C               	movf	_testTime& (0+255),w,b
 43936   003FCA  5C01               	subwf	?_tickGet^(0+1280),w,c
 43937   003FCC  6E0B               	movwf	??_APP_testMode^(0+1280),c
 43938   003FCE  517D               	movf	(_testTime+1)& (0+255),w,b
 43939   003FD0  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 43940   003FD2  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 43941   003FD4  517E               	movf	(_testTime+2)& (0+255),w,b
 43942   003FD6  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 43943   003FD8  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 43944   003FDA  517F               	movf	(_testTime+3)& (0+255),w,b
 43945   003FDC  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 43946   003FDE  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 43947   003FE0  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 43948   003FE2  E10D               	bnz	u6630
 43949   003FE4  0E91               	movlw	145
 43950   003FE6  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 43951   003FE8  0ED0               	movlw	208
 43952   003FEA  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 43953   003FEC  0E03               	movlw	3
 43954   003FEE  580D               	subwfb	(??_APP_testMode+2)^(0+1280),w,c
 43955   003FF0  A0D8               	btfss	status,0,c
 43956   003FF2  EFFD  F01F         	goto	u6631
 43957   003FF6  EFFF  F01F         	goto	u6630
 43958   003FFA                     u6631:
 43959   003FFA  EFE4  F020         	goto	l9367
 43960   003FFE                     u6630:
 43961   003FFE                     
 43962                           ; BSR set to: 5
 43963                           ;../main.c: 155:             testTime.val = tickGet();
 43964   003FFE  EC14  F03A         	call	_tickGet	;wreg free
 43965   004002  C501  F57C         	movff	?_tickGet,_testTime
 43966   004006  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43967   00400A  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43968   00400E  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43969   004012                     
 43970                           ;../main.c: 156:             step++;
 43971   004012  2A10               	incf	APP_testMode@step^(0+1280),f,c
 43972   004014                     
 43973                           ;../main.c: 157:             if (step >= 6) step = 0;
 43974   004014  0E05               	movlw	5
 43975   004016  6410               	cpfsgt	APP_testMode@step^(0+1280),c
 43976   004018  EF10  F020         	goto	u6641
 43977   00401C  EF12  F020         	goto	u6640
 43978   004020                     u6641:
 43979   004020  EFC9  F020         	goto	l9365
 43980   004024                     u6640:
 43981   004024  6A10               	clrf	APP_testMode@step^(0+1280),c
 43982   004026  EFC9  F020         	goto	l9365
 43983   00402A                     l9327:
 43984                           
 43985                           ;../main.c: 161:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x99));
 43986   00402A  0EFE               	movlw	254
 43987   00402C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43988   00402E  0E99               	movlw	153
 43989   004030  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43990   004032  0E00               	movlw	0
 43991   004034  EC9F  F03E         	call	_updateLedRange
 43992                           
 43993                           ;../main.c: 162:                     break;
 43994   004038  EFE4  F020         	goto	l9367
 43995   00403C                     l9329:
 43996                           
 43997                           ;../main.c: 164:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xAA));
 43998   00403C  0EFE               	movlw	254
 43999   00403E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44000   004040  0EAA               	movlw	170
 44001   004042  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44002   004044  0E00               	movlw	0
 44003   004046  EC9F  F03E         	call	_updateLedRange
 44004                           
 44005                           ;../main.c: 165:                     break;
 44006   00404A  EFE4  F020         	goto	l9367
 44007   00404E                     l9331:
 44008                           
 44009                           ;../main.c: 167:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xBB));
 44010   00404E  0EFE               	movlw	254
 44011   004050  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44012   004052  0EBB               	movlw	187
 44013   004054  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44014   004056  0E00               	movlw	0
 44015   004058  EC9F  F03E         	call	_updateLedRange
 44016                           
 44017                           ;../main.c: 168:                     break;
 44018   00405C  EFE4  F020         	goto	l9367
 44019   004060                     l9333:
 44020                           
 44021                           ;../main.c: 170:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 44022   004060  0EFE               	movlw	254
 44023   004062  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44024   004064  0E00               	movlw	0
 44025   004066  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44026   004068  0E00               	movlw	0
 44027   00406A  EC9F  F03E         	call	_updateLedRange
 44028   00406E                     
 44029                           ;../main.c: 171:                     for (i=0,c=1; i<255; i++) {
 44030   00406E  6A11               	clrf	APP_testMode@i^(0+1280),c
 44031   004070  0E01               	movlw	1
 44032   004072  6E0F               	movwf	APP_testMode@c^(0+1280),c
 44033   004074                     l9343:
 44034                           
 44035                           ;../main.c: 172:                         ledPaletteIndexes[i].asByte = c;
 44036   004074  0E00               	movlw	low _ledPaletteIndexes
 44037   004076  2411               	addwf	APP_testMode@i^(0+1280),w,c
 44038   004078  6ED9               	movwf	fsr2l,c
 44039   00407A  6ADA               	clrf	fsr2h,c
 44040   00407C  0E07               	movlw	high _ledPaletteIndexes
 44041   00407E  22DA               	addwfc	fsr2h,f,c
 44042   004080  C50F  F4DF         	movff	APP_testMode@c,indf2
 44043   004084                     
 44044                           ;../main.c: 173:                         c++;
 44045   004084  2A0F               	incf	APP_testMode@c^(0+1280),f,c
 44046   004086                     
 44047                           ;../main.c: 174:                         if (c >= 0x10) c=1;
 44048   004086  0E0F               	movlw	15
 44049   004088  640F               	cpfsgt	APP_testMode@c^(0+1280),c
 44050   00408A  EF49  F020         	goto	u6651
 44051   00408E  EF4B  F020         	goto	u6650
 44052   004092                     u6651:
 44053   004092  EF4D  F020         	goto	l9351
 44054   004096                     u6650:
 44055   004096  0E01               	movlw	1
 44056   004098  6E0F               	movwf	APP_testMode@c^(0+1280),c
 44057   00409A                     l9351:
 44058                           
 44059                           ;../main.c: 175:                     }
 44060   00409A  2A11               	incf	APP_testMode@i^(0+1280),f,c
 44061   00409C  2811               	incf	APP_testMode@i^(0+1280),w,c
 44062   00409E  A4D8               	btfss	status,2,c
 44063   0040A0  EF54  F020         	goto	u6661
 44064   0040A4  EF56  F020         	goto	u6660
 44065   0040A8                     u6661:
 44066   0040A8  EF3A  F020         	goto	l9343
 44067   0040AC                     u6660:
 44068   0040AC  EFE4  F020         	goto	l9367
 44069   0040B0                     l9355:
 44070                           
 44071                           ;../main.c: 178:                     updateLedRange(0, 19, (PaletteIndex)((uint8_t)0x0F)
      +                          );
 44072   0040B0  0E13               	movlw	19
 44073   0040B2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44074   0040B4  0E0F               	movlw	15
 44075   0040B6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44076   0040B8  0E00               	movlw	0
 44077   0040BA  EC9F  F03E         	call	_updateLedRange
 44078                           
 44079                           ;../main.c: 179:                     updateLedRange(20, 39, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 44080   0040BE  0E27               	movlw	39
 44081   0040C0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44082   0040C2  0EF0               	movlw	240
 44083   0040C4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44084   0040C6  0E14               	movlw	20
 44085   0040C8  EC9F  F03E         	call	_updateLedRange
 44086                           
 44087                           ;../main.c: 180:                     updateLedRange(40, 59, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 44088   0040CC  0E3B               	movlw	59
 44089   0040CE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44090   0040D0  0E0F               	movlw	15
 44091   0040D2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44092   0040D4  0E28               	movlw	40
 44093   0040D6  EC9F  F03E         	call	_updateLedRange
 44094                           
 44095                           ;../main.c: 181:                     updateLedRange(60, 79, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 44096   0040DA  0E4F               	movlw	79
 44097   0040DC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44098   0040DE  0EF0               	movlw	240
 44099   0040E0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44100   0040E2  0E3C               	movlw	60
 44101   0040E4  EC9F  F03E         	call	_updateLedRange
 44102                           
 44103                           ;../main.c: 182:                     updateLedRange(80, 99, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 44104   0040E8  0E63               	movlw	99
 44105   0040EA  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44106   0040EC  0E0F               	movlw	15
 44107   0040EE  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44108   0040F0  0E50               	movlw	80
 44109   0040F2  EC9F  F03E         	call	_updateLedRange
 44110                           
 44111                           ;../main.c: 183:                     updateLedRange(100, 119, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44112   0040F6  0E77               	movlw	119
 44113   0040F8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44114   0040FA  0EF0               	movlw	240
 44115   0040FC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44116   0040FE  0E64               	movlw	100
 44117   004100  EC9F  F03E         	call	_updateLedRange
 44118                           
 44119                           ;../main.c: 184:                     updateLedRange(120, 139, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44120   004104  0E8B               	movlw	139
 44121   004106  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44122   004108  0E0F               	movlw	15
 44123   00410A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44124   00410C  0E78               	movlw	120
 44125   00410E  EC9F  F03E         	call	_updateLedRange
 44126                           
 44127                           ;../main.c: 185:                     updateLedRange(140, 159, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44128   004112  0E9F               	movlw	159
 44129   004114  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44130   004116  0EF0               	movlw	240
 44131   004118  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44132   00411A  0E8C               	movlw	140
 44133   00411C  EC9F  F03E         	call	_updateLedRange
 44134                           
 44135                           ;../main.c: 186:                     updateLedRange(160, 179, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44136   004120  0EB3               	movlw	179
 44137   004122  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44138   004124  0E0F               	movlw	15
 44139   004126  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44140   004128  0EA0               	movlw	160
 44141   00412A  EC9F  F03E         	call	_updateLedRange
 44142                           
 44143                           ;../main.c: 187:                     updateLedRange(180, 199, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44144   00412E  0EC7               	movlw	199
 44145   004130  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44146   004132  0EF0               	movlw	240
 44147   004134  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44148   004136  0EB4               	movlw	180
 44149   004138  EC9F  F03E         	call	_updateLedRange
 44150                           
 44151                           ;../main.c: 188:                     updateLedRange(200, 219, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44152   00413C  0EDB               	movlw	219
 44153   00413E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44154   004140  0E0F               	movlw	15
 44155   004142  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44156   004144  0EC8               	movlw	200
 44157   004146  EC9F  F03E         	call	_updateLedRange
 44158                           
 44159                           ;../main.c: 189:                     updateLedRange(220, 239, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44160   00414A  0EEF               	movlw	239
 44161   00414C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44162   00414E  0EF0               	movlw	240
 44163   004150  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44164   004152  0EDC               	movlw	220
 44165   004154  EC9F  F03E         	call	_updateLedRange
 44166                           
 44167                           ;../main.c: 190:                     updateLedRange(240, 255 -1, (PaletteIndex)((uint8_t
      +                          )0x0F));
 44168   004158  0EFE               	movlw	254
 44169   00415A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44170   00415C  0E0F               	movlw	15
 44171   00415E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44172   004160  0EF0               	movlw	240
 44173   004162  EC9F  F03E         	call	_updateLedRange
 44174                           
 44175                           ;../main.c: 191:                     break;
 44176   004166  EFE4  F020         	goto	l9367
 44177   00416A                     l9357:
 44178                           
 44179                           ;../main.c: 193:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 44180   00416A  0EFE               	movlw	254
 44181   00416C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44182   00416E  0E00               	movlw	0
 44183   004170  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44184   004172  0E00               	movlw	0
 44185   004174  EC9F  F03E         	call	_updateLedRange
 44186   004178                     
 44187                           ;../main.c: 194:                     i=0;
 44188   004178  6A11               	clrf	APP_testMode@i^(0+1280),c
 44189   00417A                     
 44190                           ;../main.c: 195:                     subtestTime.val = tickGet();
 44191   00417A  EC14  F03A         	call	_tickGet	;wreg free
 44192   00417E  C501  F578         	movff	?_tickGet,_subtestTime
 44193   004182  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44194   004186  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44195   00418A  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44196                           
 44197                           ;../main.c: 196:                     break;
 44198   00418E  EFE4  F020         	goto	l9367
 44199   004192                     l9365:
 44200   004192  5010               	movf	APP_testMode@step^(0+1280),w,c
 44201                           
 44202                           ; Switch size 1, requested type "simple"
 44203                           ; Number of cases is 6, Range of values is 0 to 5
 44204                           ; switch strategies available:
 44205                           ; Name         Instructions Cycles
 44206                           ; simple_byte           19    10 (average)
 44207                           ;	Chosen strategy is simple_byte
 44208   004194  0A00               	xorlw	0	; case 0
 44209   004196  B4D8               	btfsc	status,2,c
 44210   004198  EF15  F020         	goto	l9327
 44211   00419C  0A01               	xorlw	1	; case 1
 44212   00419E  B4D8               	btfsc	status,2,c
 44213   0041A0  EF1E  F020         	goto	l9329
 44214   0041A4  0A03               	xorlw	3	; case 2
 44215   0041A6  B4D8               	btfsc	status,2,c
 44216   0041A8  EF27  F020         	goto	l9331
 44217   0041AC  0A01               	xorlw	1	; case 3
 44218   0041AE  B4D8               	btfsc	status,2,c
 44219   0041B0  EF30  F020         	goto	l9333
 44220   0041B4  0A07               	xorlw	7	; case 4
 44221   0041B6  B4D8               	btfsc	status,2,c
 44222   0041B8  EF58  F020         	goto	l9355
 44223   0041BC  0A01               	xorlw	1	; case 5
 44224   0041BE  B4D8               	btfsc	status,2,c
 44225   0041C0  EFB5  F020         	goto	l9357
 44226   0041C4  EFE4  F020         	goto	l9367
 44227   0041C8                     l9367:
 44228                           
 44229                           ;../main.c: 199:         if (step == 5) {
 44230   0041C8  0E05               	movlw	5
 44231   0041CA  1810               	xorwf	APP_testMode@step^(0+1280),w,c
 44232   0041CC  A4D8               	btfss	status,2,c
 44233   0041CE  EFEB  F020         	goto	u6671
 44234   0041D2  EFED  F020         	goto	u6670
 44235   0041D6                     u6671:
 44236   0041D6  EFE1  F01F         	goto	l9317
 44237   0041DA                     u6670:
 44238   0041DA                     
 44239                           ;../main.c: 200:             if ((tickGet() - subtestTime.val) > (62500/10)) {
 44240   0041DA  EC14  F03A         	call	_tickGet	;wreg free
 44241   0041DE  0105               	movlb	5	; () banked
 44242   0041E0  5178               	movf	_subtestTime& (0+255),w,b
 44243   0041E2  5C01               	subwf	?_tickGet^(0+1280),w,c
 44244   0041E4  6E0B               	movwf	??_APP_testMode^(0+1280),c
 44245   0041E6  5179               	movf	(_subtestTime+1)& (0+255),w,b
 44246   0041E8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 44247   0041EA  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 44248   0041EC  517A               	movf	(_subtestTime+2)& (0+255),w,b
 44249   0041EE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 44250   0041F0  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 44251   0041F2  517B               	movf	(_subtestTime+3)& (0+255),w,b
 44252   0041F4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 44253   0041F6  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 44254   0041F8  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 44255   0041FA  100D               	iorwf	(??_APP_testMode+2)^(0+1280),w,c
 44256   0041FC  E10B               	bnz	u6680
 44257   0041FE  0E6B               	movlw	107
 44258   004200  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 44259   004202  0E18               	movlw	24
 44260   004204  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 44261   004206  A0D8               	btfss	status,0,c
 44262   004208  EF08  F021         	goto	u6681
 44263   00420C  EF0A  F021         	goto	u6680
 44264   004210                     u6681:
 44265   004210  EFE1  F01F         	goto	l9317
 44266   004214                     u6680:
 44267   004214                     
 44268                           ; BSR set to: 5
 44269                           ;../main.c: 201:                 subtestTime.val = tickGet();
 44270   004214  EC14  F03A         	call	_tickGet	;wreg free
 44271   004218  C501  F578         	movff	?_tickGet,_subtestTime
 44272   00421C  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44273   004220  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44274   004224  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44275   004228                     
 44276                           ;../main.c: 202:                 updateLedRange(i,i, (PaletteIndex)((uint8_t)0xFF));
 44277   004228  C511  F501         	movff	APP_testMode@i,updateLedRange@end_ledno
 44278   00422C  0EFF               	movlw	255
 44279   00422E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44280   004230  5011               	movf	APP_testMode@i^(0+1280),w,c
 44281   004232  EC9F  F03E         	call	_updateLedRange
 44282   004236                     
 44283                           ;../main.c: 203:                 i++;
 44284   004236  2A11               	incf	APP_testMode@i^(0+1280),f,c
 44285   004238  EFE1  F01F         	goto	l9317
 44286   00423C  0012               	return		;funcret
 44287   00423E                     __end_of_APP_testMode:
 44288                           	callstack 0
 44289                           
 44290 ;; *************** function _updateLedRange *****************
 44291 ;; Defined at:
 44292 ;;		line 274 in file "../canargb_leds.c"
 44293 ;; Parameters:    Size  Location     Type
 44294 ;;  start_ledno     1    wreg     unsigned char 
 44295 ;;  end_ledno       1    0[COMRAM] unsigned char 
 44296 ;;  colourIndexP    1    1[COMRAM] struct PaletteIndex
 44297 ;; Auto vars:     Size  Location     Type
 44298 ;;  start_ledno     1    2[COMRAM] unsigned char 
 44299 ;;  ledno           1    3[COMRAM] unsigned char 
 44300 ;; Return value:  Size  Location     Type
 44301 ;;                  1    wreg      void 
 44302 ;; Registers used:
 44303 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44304 ;; Tracked objects:
 44305 ;;		On entry : 0/0
 44306 ;;		On exit  : 0/0
 44307 ;;		Unchanged: 0/0
 44308 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44312 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44313 ;;Total ram usage:        4 bytes
 44314 ;; Hardware stack levels used: 1
 44315 ;; Hardware stack levels required when called: 1
 44316 ;; This function calls:
 44317 ;;		Nothing
 44318 ;; This function is called by:
 44319 ;;		_APP_testMode
 44320 ;;		_setup
 44321 ;;		_APP_processConsumedEvent
 44322 ;; This function uses a non-reentrant model
 44323 ;;
 44324                           
 44325                           	psect	text142
 44326   007D3E                     __ptext142:
 44327                           	callstack 0
 44328   007D3E                     _updateLedRange:
 44329                           	callstack 124
 44330                           
 44331                           ;incstack = 0
 44332                           ;updateLedRange@start_ledno stored from wreg
 44333   007D3E  6E03               	movwf	updateLedRange@start_ledno^(0+1280),c
 44334   007D40                     
 44335                           ;../canargb_leds.c: 275:     uint8_t ledno;;../canargb_leds.c: 276:     if (end_ledno >=
      +                           255) end_ledno = 255 -1;
 44336   007D40  2801               	incf	updateLedRange@end_ledno^(0+1280),w,c
 44337   007D42  A4D8               	btfss	status,2,c
 44338   007D44  EFA6  F03E         	goto	u5401
 44339   007D48  EFA8  F03E         	goto	u5400
 44340   007D4C                     u5401:
 44341   007D4C  EFAA  F03E         	goto	l8031
 44342   007D50                     u5400:
 44343   007D50  0EFE               	movlw	254
 44344   007D52  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44345   007D54                     l8031:
 44346                           
 44347                           ;../canargb_leds.c: 278:     for(ledno=start_ledno; ledno<=end_ledno; ledno++) {
 44348   007D54  C503  F504         	movff	updateLedRange@start_ledno,updateLedRange@ledno
 44349   007D58  EFB7  F03E         	goto	l8037
 44350   007D5C                     l8033:
 44351                           
 44352                           ;../canargb_leds.c: 279:         ledPaletteIndexes[ledno] = colourIndexPair;
 44353   007D5C  0E00               	movlw	low _ledPaletteIndexes
 44354   007D5E  2404               	addwf	updateLedRange@ledno^(0+1280),w,c
 44355   007D60  6ED9               	movwf	fsr2l,c
 44356   007D62  6ADA               	clrf	fsr2h,c
 44357   007D64  0E07               	movlw	high _ledPaletteIndexes
 44358   007D66  22DA               	addwfc	fsr2h,f,c
 44359   007D68  C502  F4DF         	movff	updateLedRange@colourIndexPair,indf2
 44360   007D6C                     
 44361                           ;../canargb_leds.c: 280:     }
 44362   007D6C  2A04               	incf	updateLedRange@ledno^(0+1280),f,c
 44363   007D6E                     l8037:
 44364   007D6E  5004               	movf	updateLedRange@ledno^(0+1280),w,c
 44365   007D70  5C01               	subwf	updateLedRange@end_ledno^(0+1280),w,c
 44366   007D72  B0D8               	btfsc	status,0,c
 44367   007D74  EFBE  F03E         	goto	u5411
 44368   007D78  EFC0  F03E         	goto	u5410
 44369   007D7C                     u5411:
 44370   007D7C  EFAE  F03E         	goto	l8033
 44371   007D80                     u5410:
 44372   007D80  0012               	return		;funcret
 44373   007D82                     __end_of_updateLedRange:
 44374                           	callstack 0
 44375                           
 44376 ;; *************** function _tickGet *****************
 44377 ;; Defined at:
 44378 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44379 ;; Parameters:    Size  Location     Type
 44380 ;;		None
 44381 ;; Auto vars:     Size  Location     Type
 44382 ;;  currentTime     4    6[COMRAM] struct _TickValue
 44383 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 44384 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 44385 ;; Return value:  Size  Location     Type
 44386 ;;                  4    0[COMRAM] unsigned long 
 44387 ;; Registers used:
 44388 ;;		wreg, status,2, status,0
 44389 ;; Tracked objects:
 44390 ;;		On entry : 0/0
 44391 ;;		On exit  : 0/0
 44392 ;;		Unchanged: 0/0
 44393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44395 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44397 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44398 ;;Total ram usage:       10 bytes
 44399 ;; Hardware stack levels used: 1
 44400 ;; Hardware stack levels required when called: 1
 44401 ;; This function calls:
 44402 ;;		Nothing
 44403 ;; This function is called by:
 44404 ;;		_APP_testMode
 44405 ;;		_setup
 44406 ;;		_loop
 44407 ;;		_canPowerUp
 44408 ;;		_startEnumeration
 44409 ;;		_handleSelfEnumeration
 44410 ;;		_processEnumeration
 44411 ;;		_mnsPowerUp
 44412 ;;		_mnsPoll
 44413 ;;		_leds_powerUp
 44414 ;;		_leds_poll
 44415 ;;		_pbDownTimer
 44416 ;;		_pbUpTimer
 44417 ;;		_poll
 44418 ;; This function uses a non-reentrant model
 44419 ;;
 44420                           
 44421                           	psect	text143
 44422   007428                     __ptext143:
 44423                           	callstack 0
 44424   007428                     _tickGet:
 44425                           	callstack 124
 44426   007428                     
 44427                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44428   007428  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 44429                           
 44430                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44431   00742A  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 44432                           
 44433                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 44434   00742C  9EA1               	bcf	1185,7,c	;volatile
 44435   00742E                     l7275:
 44436                           
 44437                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 44438   00742E  0E00               	movlw	0
 44439   007430  BEB1               	btfsc	1201,7,c	;volatile
 44440   007432  0E01               	movlw	1
 44441   007434  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 44442   007436                     
 44443                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44444   007436  C318 F507          	movff	792,tickGet@currentTime	;volatile
 44445   00743A                     
 44446                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44447   00743A  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 44448                           
 44449                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 44450   00743E  0E00               	movlw	0
 44451   007440  BEB1               	btfsc	1201,7,c	;volatile
 44452   007442  0E01               	movlw	1
 44453   007444  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 44454   007446                     
 44455                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44456   007446  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 44457   007448  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 44458   00744A  A4D8               	btfss	status,2,c
 44459   00744C  EF2A  F03A         	goto	u4491
 44460   007450  EF2C  F03A         	goto	u4490
 44461   007454                     u4491:
 44462   007454  EF17  F03A         	goto	l7275
 44463   007458                     u4490:
 44464   007458                     
 44465                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44466   007458  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 44467   00745A  B4D8               	btfsc	status,2,c
 44468   00745C  EF32  F03A         	goto	u4501
 44469   007460  EF34  F03A         	goto	u4500
 44470   007464                     u4501:
 44471   007464  EF40  F03A         	goto	l7293
 44472   007468                     u4500:
 44473   007468                     
 44474                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 44475   007468  9EB1               	bcf	1201,7,c	;volatile
 44476   00746A                     
 44477                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44478   00746A  0105               	movlb	5	; () banked
 44479   00746C  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 44480   00746E                     
 44481                           ; BSR set to: 5
 44482                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44483   00746E  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44484   007470  A4D8               	btfss	status,2,c
 44485   007472  EF3D  F03A         	goto	u4511
 44486   007476  EF3F  F03A         	goto	u4510
 44487   00747A                     u4511:
 44488   00747A  EF40  F03A         	goto	l7293
 44489   00747E                     u4510:
 44490   00747E                     
 44491                           ; BSR set to: 5
 44492                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44493   00747E  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 44494   007480                     l7293:
 44495                           
 44496                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44497   007480  0105               	movlb	5	; () banked
 44498   007482  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44499   007484  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 44500   007486                     
 44501                           ; BSR set to: 5
 44502                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44503   007486  5199               	movf	_timerExtension2& (0+255),w,b	;volatile
 44504   007488  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 44505   00748A                     
 44506                           ; BSR set to: 5
 44507                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 44508   00748A  8EA1               	bsf	1185,7,c	;volatile
 44509   00748C                     
 44510                           ; BSR set to: 5
 44511                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44512   00748C  C507  F501         	movff	tickGet@currentTime,?_tickGet
 44513   007490  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 44514   007494  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 44515   007498  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 44516   00749C                     
 44517                           ; BSR set to: 5
 44518   00749C  0012               	return		;funcret
 44519   00749E                     __end_of_tickGet:
 44520                           	callstack 0
 44521                           
 44522 ;; *************** function _initARGB *****************
 44523 ;; Defined at:
 44524 ;;		line 60 in file "../canargb_leds.c"
 44525 ;; Parameters:    Size  Location     Type
 44526 ;;		None
 44527 ;; Auto vars:     Size  Location     Type
 44528 ;;  ledno           1    0[COMRAM] unsigned char 
 44529 ;; Return value:  Size  Location     Type
 44530 ;;                  1    wreg      void 
 44531 ;; Registers used:
 44532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44533 ;; Tracked objects:
 44534 ;;		On entry : 0/0
 44535 ;;		On exit  : 0/0
 44536 ;;		Unchanged: 0/0
 44537 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44542 ;;Total ram usage:        1 bytes
 44543 ;; Hardware stack levels used: 1
 44544 ;; Hardware stack levels required when called: 1
 44545 ;; This function calls:
 44546 ;;		Nothing
 44547 ;; This function is called by:
 44548 ;;		_APP_testMode
 44549 ;;		_setup
 44550 ;; This function uses a non-reentrant model
 44551 ;;
 44552                           
 44553                           	psect	text144
 44554   004C6A                     __ptext144:
 44555                           	callstack 0
 44556   004C6A                     _initARGB:
 44557                           	callstack 124
 44558   004C6A                     
 44559                           ;../canargb_leds.c: 61:     uint8_t ledno;;../canargb_leds.c: 63:     flashState = 0;
 44560   004C6A  0105               	movlb	5	; () banked
 44561   004C6C  6BAC               	clrf	_flashState& (0+255),b
 44562                           
 44563                           ;../canargb_leds.c: 65:     for (ledno=0; ledno <255; ledno++) {
 44564   004C6E  6A01               	clrf	initARGB@ledno^(0+1280),c
 44565   004C70                     l8453:
 44566                           
 44567                           ;../canargb_leds.c: 66:         leds[ledno].r = 0;
 44568   004C70  5001               	movf	initARGB@ledno^(0+1280),w,c
 44569   004C72  0D03               	mullw	3
 44570   004C74  0E7C               	movlw	low _leds
 44571   004C76  24F3               	addwf	243,w,c
 44572   004C78  6ED9               	movwf	fsr2l,c
 44573   004C7A  0E0B               	movlw	high _leds
 44574   004C7C  20F4               	addwfc	prodh,w,c
 44575   004C7E  6EDA               	movwf	fsr2h,c
 44576   004C80  6ADF               	clrf	indf2,c
 44577                           
 44578                           ;../canargb_leds.c: 67:         leds[ledno].g = 0;
 44579   004C82  5001               	movf	initARGB@ledno^(0+1280),w,c
 44580   004C84  0D03               	mullw	3
 44581   004C86  0E7D               	movlw	low (_leds+1)
 44582   004C88  24F3               	addwf	243,w,c
 44583   004C8A  6ED9               	movwf	fsr2l,c
 44584   004C8C  0E0B               	movlw	high (_leds+1)
 44585   004C8E  20F4               	addwfc	prodh,w,c
 44586   004C90  6EDA               	movwf	fsr2h,c
 44587   004C92  6ADF               	clrf	indf2,c
 44588                           
 44589                           ;../canargb_leds.c: 68:         leds[ledno].b = 0;
 44590   004C94  5001               	movf	initARGB@ledno^(0+1280),w,c
 44591   004C96  0D03               	mullw	3
 44592   004C98  0E7E               	movlw	low (_leds+2)
 44593   004C9A  24F3               	addwf	243,w,c
 44594   004C9C  6ED9               	movwf	fsr2l,c
 44595   004C9E  0E0B               	movlw	high (_leds+2)
 44596   004CA0  20F4               	addwfc	prodh,w,c
 44597   004CA2  6EDA               	movwf	fsr2h,c
 44598   004CA4  6ADF               	clrf	indf2,c
 44599   004CA6                     
 44600                           ;../canargb_leds.c: 69:         ledPaletteIndexes[ledno].asNibbles.flashOnPaletteIndex =
      +                           0;
 44601   004CA6  0E00               	movlw	low _ledPaletteIndexes
 44602   004CA8  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44603   004CAA  6ED9               	movwf	fsr2l,c
 44604   004CAC  6ADA               	clrf	fsr2h,c
 44605   004CAE  0E07               	movlw	high _ledPaletteIndexes
 44606   004CB0  22DA               	addwfc	fsr2h,f,c
 44607   004CB2  0EF0               	movlw	-16
 44608   004CB4  16DF               	andwf	223,f,c
 44609   004CB6                     
 44610                           ;../canargb_leds.c: 70:         ledPaletteIndexes[ledno].asNibbles.flashOffPaletteIndex 
      +                          = 0;
 44611   004CB6  0E00               	movlw	low _ledPaletteIndexes
 44612   004CB8  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44613   004CBA  6ED9               	movwf	fsr2l,c
 44614   004CBC  6ADA               	clrf	fsr2h,c
 44615   004CBE  0E07               	movlw	high _ledPaletteIndexes
 44616   004CC0  22DA               	addwfc	fsr2h,f,c
 44617   004CC2  0E0F               	movlw	-241
 44618   004CC4  16DF               	andwf	223,f,c
 44619   004CC6                     
 44620                           ;../canargb_leds.c: 71:     }
 44621   004CC6  2A01               	incf	initARGB@ledno^(0+1280),f,c
 44622   004CC8  2801               	incf	initARGB@ledno^(0+1280),w,c
 44623   004CCA  A4D8               	btfss	status,2,c
 44624   004CCC  EF6A  F026         	goto	u5741
 44625   004CD0  EF6C  F026         	goto	u5740
 44626   004CD4                     u5741:
 44627   004CD4  EF38  F026         	goto	l8453
 44628   004CD8                     u5740:
 44629   004CD8                     
 44630                           ;../canargb_leds.c: 106:     TRISC = 0;
 44631   004CD8  6AC8               	clrf	200,c	;volatile
 44632   004CDA                     
 44633                           ;../canargb_leds.c: 107:     RC0PPS = 0x43;
 44634   004CDA  0E43               	movlw	67
 44635   004CDC  0102               	movlb	2	; () banked
 44636   004CDE  6F11               	movwf	17,b	;volatile
 44637                           
 44638                           ;../canargb_leds.c: 108:     RC1PPS = 0x32;
 44639   004CE0  0E32               	movlw	50
 44640   004CE2  6F12               	movwf	18,b	;volatile
 44641                           
 44642                           ;../canargb_leds.c: 109:     RC2PPS = 0x31;
 44643   004CE4  0E31               	movlw	49
 44644   004CE6  6F13               	movwf	19,b	;volatile
 44645                           
 44646                           ;../canargb_leds.c: 110:     RC3PPS = 0x01;
 44647   004CE8  0E01               	movlw	1
 44648   004CEA  6F14               	movwf	20,b	;volatile
 44649                           
 44650                           ;../canargb_leds.c: 111:     RC4PPS = 0x02;
 44651   004CEC  0E02               	movlw	2
 44652   004CEE  6F15               	movwf	21,b	;volatile
 44653                           
 44654                           ;../canargb_leds.c: 112:     RC5PPS = 0x04;
 44655   004CF0  0E04               	movlw	4
 44656   004CF2  6F16               	movwf	22,b	;volatile
 44657   004CF4                     
 44658                           ; BSR set to: 2
 44659                           ;../canargb_leds.c: 113:     RC6PPS = 0x00;
 44660   004CF4  6B17               	clrf	23,b	;volatile
 44661   004CF6                     
 44662                           ; BSR set to: 2
 44663                           ;../canargb_leds.c: 116:     {;../canargb_leds.c: 117:         SPI1CON0bits.LSBF=0;
 44664   004CF6  0100               	movlb	0	; () banked
 44665   004CF8  9584               	bcf	132,2,b	;volatile
 44666   004CFA                     
 44667                           ; BSR set to: 0
 44668                           ;../canargb_leds.c: 118:         SPI1CON0bits.BMODE=1;
 44669   004CFA  8184               	bsf	132,0,b	;volatile
 44670   004CFC                     
 44671                           ; BSR set to: 0
 44672                           ;../canargb_leds.c: 119:         SPI1CON0bits.MST=1;
 44673   004CFC  8384               	bsf	132,1,b	;volatile
 44674                           
 44675                           ;../canargb_leds.c: 121:         SPI1TWIDTHbits.TWIDTH=0;
 44676   004CFE  0EF8               	movlw	-8
 44677   004D00  1788               	andwf	136,f,b	;volatile
 44678                           
 44679                           ;../canargb_leds.c: 122:         SPI1TCNT=0;
 44680   004D02  0E00               	movlw	0
 44681   004D04  6F83               	movwf	131,b	;volatile
 44682   004D06  0E00               	movlw	0
 44683   004D08  6F82               	movwf	130,b	;volatile
 44684   004D0A                     
 44685                           ; BSR set to: 0
 44686                           ;../canargb_leds.c: 124:         SPI1CON1bits.SMP=0;
 44687   004D0A  9F85               	bcf	133,7,b	;volatile
 44688   004D0C                     
 44689                           ; BSR set to: 0
 44690                           ;../canargb_leds.c: 125:         SPI1CON1bits.CKE=1;
 44691   004D0C  8D85               	bsf	133,6,b	;volatile
 44692   004D0E                     
 44693                           ; BSR set to: 0
 44694                           ;../canargb_leds.c: 126:         SPI1CON1bits.CKP=0;
 44695   004D0E  9B85               	bcf	133,5,b	;volatile
 44696   004D10                     
 44697                           ; BSR set to: 0
 44698                           ;../canargb_leds.c: 127:         SPI1CON1bits.SDIP=1;
 44699   004D10  8385               	bsf	133,1,b	;volatile
 44700   004D12                     
 44701                           ; BSR set to: 0
 44702                           ;../canargb_leds.c: 129:         SPI1CON2bits.SSET=0;
 44703   004D12  9586               	bcf	134,2,b	;volatile
 44704   004D14                     
 44705                           ; BSR set to: 0
 44706                           ;../canargb_leds.c: 130:         SPI1CON1bits.SSP=1;
 44707   004D14  8585               	bsf	133,2,b	;volatile
 44708   004D16                     
 44709                           ; BSR set to: 0
 44710                           ;../canargb_leds.c: 131:         SPI1CON2bits.TXR=1;
 44711   004D16  8386               	bsf	134,1,b	;volatile
 44712   004D18                     
 44713                           ; BSR set to: 0
 44714                           ;../canargb_leds.c: 132:         SPI1CON2bits.RXR=0;
 44715   004D18  9186               	bcf	134,0,b	;volatile
 44716   004D1A                     
 44717                           ; BSR set to: 0
 44718                           ;../canargb_leds.c: 134:         SPI1CLKbits.CLKSEL=0b00000;
 44719   004D1A  6B8C               	clrf	140,b	;volatile
 44720                           
 44721                           ;../canargb_leds.c: 138:         SPI1BAUDbits.BAUD = 39;
 44722   004D1C  0E27               	movlw	39
 44723   004D1E  6F89               	movwf	137,b	;volatile
 44724   004D20                     
 44725                           ; BSR set to: 0
 44726                           ;../canargb_leds.c: 140:         SPI1INTF=0;
 44727   004D20  6B8A               	clrf	138,b	;volatile
 44728   004D22                     
 44729                           ; BSR set to: 0
 44730                           ;../canargb_leds.c: 141:         SPI1CON0bits.EN=1;
 44731   004D22  8F84               	bsf	132,7,b	;volatile
 44732   004D24                     
 44733                           ; BSR set to: 0
 44734                           ;../canargb_leds.c: 142:     };../canargb_leds.c: 145:     {;../canargb_leds.c: 146:    
      +                               CLCSELECT = 0;
 44735   004D24  6BD5               	clrf	213,b	;volatile
 44736                           
 44737                           ;../canargb_leds.c: 147:         CLCnCON = 0x82;
 44738   004D26  0E82               	movlw	130
 44739   004D28  6FD6               	movwf	214,b	;volatile
 44740                           
 44741                           ;../canargb_leds.c: 148:         CLCnPOL = 0x0E;
 44742   004D2A  0E0E               	movlw	14
 44743   004D2C  6FD7               	movwf	215,b	;volatile
 44744                           
 44745                           ;../canargb_leds.c: 149:         CLCnSEL0 = 0x41;
 44746   004D2E  0E41               	movlw	65
 44747   004D30  6FD8               	movwf	216,b	;volatile
 44748                           
 44749                           ;../canargb_leds.c: 150:         CLCnSEL1 = 0x41;
 44750   004D32  0E41               	movlw	65
 44751   004D34  6FD9               	movwf	217,b	;volatile
 44752                           
 44753                           ;../canargb_leds.c: 151:         CLCnSEL2 = 0x41;
 44754   004D36  0E41               	movlw	65
 44755   004D38  6FDA               	movwf	218,b	;volatile
 44756                           
 44757                           ;../canargb_leds.c: 152:         CLCnSEL3 = 0x41;
 44758   004D3A  0E41               	movlw	65
 44759   004D3C  6FDB               	movwf	219,b	;volatile
 44760                           
 44761                           ;../canargb_leds.c: 153:         CLCnGLS0 = 1;
 44762   004D3E  0E01               	movlw	1
 44763   004D40  6FDC               	movwf	220,b	;volatile
 44764   004D42                     
 44765                           ; BSR set to: 0
 44766                           ;../canargb_leds.c: 154:         CLCnGLS1 = 0;
 44767   004D42  6BDD               	clrf	221,b	;volatile
 44768   004D44                     
 44769                           ; BSR set to: 0
 44770                           ;../canargb_leds.c: 155:         CLCnGLS2 = 0;
 44771   004D44  6BDE               	clrf	222,b	;volatile
 44772   004D46                     
 44773                           ; BSR set to: 0
 44774                           ;../canargb_leds.c: 156:         CLCnGLS3 = 0;
 44775   004D46  6BDF               	clrf	223,b	;volatile
 44776   004D48                     
 44777                           ; BSR set to: 0
 44778                           ;../canargb_leds.c: 157:     };../canargb_leds.c: 160:     {;../canargb_leds.c: 161:    
      +                               T2CON = 0x0;
 44779   004D48  0103               	movlb	3	; () banked
 44780   004D4A  6B24               	clrf	36,b	;volatile
 44781                           
 44782                           ;../canargb_leds.c: 162:         T2CLKCON = 0x02;
 44783   004D4C  0E02               	movlw	2
 44784   004D4E  6F26               	movwf	38,b	;volatile
 44785                           
 44786                           ;../canargb_leds.c: 163:         T2HLT = 0x11;
 44787   004D50  0E11               	movlw	17
 44788   004D52  6F25               	movwf	37,b	;volatile
 44789                           
 44790                           ;../canargb_leds.c: 164:         T2RST = 0x12;
 44791   004D54  0E12               	movlw	18
 44792   004D56  6F27               	movwf	39,b	;volatile
 44793                           
 44794                           ;../canargb_leds.c: 168:         T2PR = 51;
 44795   004D58  0E33               	movlw	51
 44796   004D5A  6F23               	movwf	35,b	;volatile
 44797   004D5C                     
 44798                           ; BSR set to: 3
 44799                           ;../canargb_leds.c: 170:     };../canargb_leds.c: 173:     {;../canargb_leds.c: 174:    
      +                               T4CON = 0x0;
 44800   004D5C  6B30               	clrf	48,b	;volatile
 44801                           
 44802                           ;../canargb_leds.c: 175:         T4CLKCON = 0x02;
 44803   004D5E  0E02               	movlw	2
 44804   004D60  6F32               	movwf	50,b	;volatile
 44805                           
 44806                           ;../canargb_leds.c: 176:         T4HLT = 0x11;
 44807   004D62  0E11               	movlw	17
 44808   004D64  6F31               	movwf	49,b	;volatile
 44809                           
 44810                           ;../canargb_leds.c: 177:         T4RST = 0x12;
 44811   004D66  0E12               	movlw	18
 44812   004D68  6F33               	movwf	51,b	;volatile
 44813                           
 44814                           ;../canargb_leds.c: 181:         T4PR = 29;
 44815   004D6A  0E1D               	movlw	29
 44816   004D6C  6F2F               	movwf	47,b	;volatile
 44817                           
 44818                           ;../canargb_leds.c: 183:     };../canargb_leds.c: 187:     {;../canargb_leds.c: 188:    
      +                               CLCSELECT = 1;
 44819   004D6E  0E01               	movlw	1
 44820   004D70  0100               	movlb	0	; () banked
 44821   004D72  6FD5               	movwf	213,b	;volatile
 44822                           
 44823                           ;../canargb_leds.c: 189:         CLCnCON = 0x82;
 44824   004D74  0E82               	movlw	130
 44825   004D76  6FD6               	movwf	214,b	;volatile
 44826                           
 44827                           ;../canargb_leds.c: 190:         CLCnPOL = 0x8E;
 44828   004D78  0E8E               	movlw	142
 44829   004D7A  6FD7               	movwf	215,b	;volatile
 44830                           
 44831                           ;../canargb_leds.c: 191:         CLCnSEL0 = 0x14;
 44832   004D7C  0E14               	movlw	20
 44833   004D7E  6FD8               	movwf	216,b	;volatile
 44834                           
 44835                           ;../canargb_leds.c: 192:         CLCnSEL1 = 0x14;
 44836   004D80  0E14               	movlw	20
 44837   004D82  6FD9               	movwf	217,b	;volatile
 44838                           
 44839                           ;../canargb_leds.c: 193:         CLCnSEL2 = 0x14;
 44840   004D84  0E14               	movlw	20
 44841   004D86  6FDA               	movwf	218,b	;volatile
 44842                           
 44843                           ;../canargb_leds.c: 194:         CLCnSEL3 = 0x14;
 44844   004D88  0E14               	movlw	20
 44845   004D8A  6FDB               	movwf	219,b	;volatile
 44846                           
 44847                           ;../canargb_leds.c: 195:         CLCnGLS0 = 0x01;
 44848   004D8C  0E01               	movlw	1
 44849   004D8E  6FDC               	movwf	220,b	;volatile
 44850   004D90                     
 44851                           ; BSR set to: 0
 44852                           ;../canargb_leds.c: 196:         CLCnGLS1 = 0x00;
 44853   004D90  6BDD               	clrf	221,b	;volatile
 44854   004D92                     
 44855                           ; BSR set to: 0
 44856                           ;../canargb_leds.c: 197:         CLCnGLS2 = 0x00;
 44857   004D92  6BDE               	clrf	222,b	;volatile
 44858   004D94                     
 44859                           ; BSR set to: 0
 44860                           ;../canargb_leds.c: 198:         CLCnGLS3 = 0x00;
 44861   004D94  6BDF               	clrf	223,b	;volatile
 44862                           
 44863                           ;../canargb_leds.c: 199:     };../canargb_leds.c: 203:     {;../canargb_leds.c: 204:    
      +                               CLCSELECT = 3;
 44864   004D96  0E03               	movlw	3
 44865   004D98  6FD5               	movwf	213,b	;volatile
 44866                           
 44867                           ;../canargb_leds.c: 205:         CLCnCON = 0x82;
 44868   004D9A  0E82               	movlw	130
 44869   004D9C  6FD6               	movwf	214,b	;volatile
 44870                           
 44871                           ;../canargb_leds.c: 206:         CLCnPOL = 0x8E;
 44872   004D9E  0E8E               	movlw	142
 44873   004DA0  6FD7               	movwf	215,b	;volatile
 44874                           
 44875                           ;../canargb_leds.c: 207:         CLCnSEL0 = 0x16;
 44876   004DA2  0E16               	movlw	22
 44877   004DA4  6FD8               	movwf	216,b	;volatile
 44878                           
 44879                           ;../canargb_leds.c: 208:         CLCnSEL1 = 0x16;
 44880   004DA6  0E16               	movlw	22
 44881   004DA8  6FD9               	movwf	217,b	;volatile
 44882                           
 44883                           ;../canargb_leds.c: 209:         CLCnSEL2 = 0x16;
 44884   004DAA  0E16               	movlw	22
 44885   004DAC  6FDA               	movwf	218,b	;volatile
 44886                           
 44887                           ;../canargb_leds.c: 210:         CLCnSEL3 = 0x16;
 44888   004DAE  0E16               	movlw	22
 44889   004DB0  6FDB               	movwf	219,b	;volatile
 44890                           
 44891                           ;../canargb_leds.c: 211:         CLCnGLS0 = 0x01;
 44892   004DB2  0E01               	movlw	1
 44893   004DB4  6FDC               	movwf	220,b	;volatile
 44894   004DB6                     
 44895                           ; BSR set to: 0
 44896                           ;../canargb_leds.c: 212:         CLCnGLS1 = 0x00;
 44897   004DB6  6BDD               	clrf	221,b	;volatile
 44898   004DB8                     
 44899                           ; BSR set to: 0
 44900                           ;../canargb_leds.c: 213:         CLCnGLS2 = 0x00;
 44901   004DB8  6BDE               	clrf	222,b	;volatile
 44902   004DBA                     
 44903                           ; BSR set to: 0
 44904                           ;../canargb_leds.c: 214:         CLCnGLS3 = 0x00;
 44905   004DBA  6BDF               	clrf	223,b	;volatile
 44906   004DBC                     
 44907                           ; BSR set to: 0
 44908                           ;../canargb_leds.c: 215:     };../canargb_leds.c: 218:     {;../canargb_leds.c: 219:    
      +                               MD1CON0 = 0;
 44909   004DBC  6B6A               	clrf	106,b	;volatile
 44910   004DBE                     
 44911                           ; BSR set to: 0
 44912                           ;../canargb_leds.c: 220:         MD1CON1 = 0x00;
 44913   004DBE  6B6B               	clrf	107,b	;volatile
 44914                           
 44915                           ;../canargb_leds.c: 221:         MD1CARH = 0x12;
 44916   004DC0  0E12               	movlw	18
 44917   004DC2  6F6E               	movwf	110,b	;volatile
 44918                           
 44919                           ;../canargb_leds.c: 222:         MD1CARL = 0x10;
 44920   004DC4  0E10               	movlw	16
 44921   004DC6  6F6D               	movwf	109,b	;volatile
 44922                           
 44923                           ;../canargb_leds.c: 223:         MD1SRC = 0x1F;
 44924   004DC8  0E1F               	movlw	31
 44925   004DCA  6F6C               	movwf	108,b	;volatile
 44926   004DCC                     
 44927                           ; BSR set to: 0
 44928                           ;../canargb_leds.c: 248:     T2CONbits.ON = 1;
 44929   004DCC  0103               	movlb	3	; () banked
 44930   004DCE  8F24               	bsf	36,7,b	;volatile
 44931   004DD0                     
 44932                           ; BSR set to: 3
 44933                           ;../canargb_leds.c: 249:     T4CONbits.ON = 1;
 44934   004DD0  8F30               	bsf	48,7,b	;volatile
 44935   004DD2                     
 44936                           ; BSR set to: 3
 44937                           ;../canargb_leds.c: 250:     MD1CON0bits.EN = 1;
 44938   004DD2  0100               	movlb	0	; () banked
 44939   004DD4  8F6A               	bsf	106,7,b	;volatile
 44940                           
 44941                           ;../canargb_leds.c: 252:     refreshRequired = 1;
 44942   004DD6  0E01               	movlw	1
 44943   004DD8  0105               	movlb	5	; () banked
 44944   004DDA  6FAB               	movwf	_refreshRequired& (0+255),b
 44945   004DDC                     
 44946                           ; BSR set to: 5
 44947   004DDC  0012               	return		;funcret
 44948   004DDE                     __end_of_initARGB:
 44949                           	callstack 0
 44950                           
 44951 ;; *************** function _receiveOverrun *****************
 44952 ;; Defined at:
 44953 ;;		line 370 in file "../../VLCBlib_PIC/can18_can_2.c"
 44954 ;; Parameters:    Size  Location     Type
 44955 ;;		None
 44956 ;; Auto vars:     Size  Location     Type
 44957 ;;		None
 44958 ;; Return value:  Size  Location     Type
 44959 ;;                  1    wreg      void 
 44960 ;; Registers used:
 44961 ;;		status,2, status,0
 44962 ;; Tracked objects:
 44963 ;;		On entry : 0/0
 44964 ;;		On exit  : 0/0
 44965 ;;		Unchanged: 0/0
 44966 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44971 ;;Total ram usage:        0 bytes
 44972 ;; Hardware stack levels used: 1
 44973 ;; This function calls:
 44974 ;;		Nothing
 44975 ;; This function is called by:
 44976 ;;		Interrupt level 2
 44977 ;; This function uses a non-reentrant model
 44978 ;;
 44979                           
 44980                           	psect	text145
 44981   007F44                     __ptext145:
 44982                           	callstack 0
 44983   007F44                     _receiveOverrun:
 44984                           	callstack 115
 44985   007F44                     
 44986                           ;../../VLCBlib_PIC/can18_can_2.c: 371:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 44987   007F44  0101               	movlb	1	; () banked
 44988   007F46  A778               	btfss	120,3,b	;volatile
 44989   007F48  EFA8  F03F         	goto	i2u865_41
 44990   007F4C  EFAA  F03F         	goto	i2u865_40
 44991   007F50                     i2u865_41:
 44992   007F50  EFAF  F03F         	goto	i2l11221
 44993   007F54                     i2u865_40:
 44994   007F54                     
 44995                           ; BSR set to: 1
 44996                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         canDiagnostics[0x08].asUint++;
 44997   007F54  0106               	movlb	6	; () banked
 44998   007F56  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44999   007F58  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 45000   007F5A                     
 45001                           ; BSR set to: 6
 45002                           ;../../VLCBlib_PIC/can18_can_2.c: 375:         C1FIFOSTA3Lbits.RXOVIF = 0;
 45003   007F5A  0101               	movlb	1	; () banked
 45004   007F5C  9778               	bcf	120,3,b	;volatile
 45005   007F5E                     i2l11221:
 45006                           
 45007                           ; BSR set to: 1
 45008                           ;../../VLCBlib_PIC/can18_can_2.c: 377:     if (C1INTHbits.IVMIF == 1) {
 45009   007F5E  AF1D               	btfss	29,7,b	;volatile
 45010   007F60  EFB4  F03F         	goto	i2u866_41
 45011   007F64  EFB6  F03F         	goto	i2u866_40
 45012   007F68                     i2u866_41:
 45013   007F68  EFBB  F03F         	goto	i2l614
 45014   007F6C                     i2u866_40:
 45015   007F6C                     
 45016                           ; BSR set to: 1
 45017                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         canDiagnostics[0x01].asUint++;
 45018   007F6C  0106               	movlb	6	; () banked
 45019   007F6E  4B90               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45020   007F70  2B91               	incf	(_canDiagnostics+3)& (0+255),f,b
 45021   007F72                     
 45022                           ; BSR set to: 6
 45023                           ;../../VLCBlib_PIC/can18_can_2.c: 381:         C1INTHbits.IVMIF = 0;
 45024   007F72  0101               	movlb	1	; () banked
 45025   007F74  9F1D               	bcf	29,7,b	;volatile
 45026   007F76                     i2l614:
 45027                           
 45028                           ; BSR set to: 1
 45029   007F76  0011               	retfie		f
 45030   007F78                     __end_of_receiveOverrun:
 45031                           	callstack 0
 45032                           
 45033 ;; *************** function _TMR0_ISR *****************
 45034 ;; Defined at:
 45035 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 45036 ;; Parameters:    Size  Location     Type
 45037 ;;		None
 45038 ;; Auto vars:     Size  Location     Type
 45039 ;;		None
 45040 ;; Return value:  Size  Location     Type
 45041 ;;                  1    wreg      void 
 45042 ;; Registers used:
 45043 ;;		wreg, status,2, status,0
 45044 ;; Tracked objects:
 45045 ;;		On entry : 0/0
 45046 ;;		On exit  : 0/0
 45047 ;;		Unchanged: 0/0
 45048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45053 ;;Total ram usage:        0 bytes
 45054 ;; Hardware stack levels used: 1
 45055 ;; This function calls:
 45056 ;;		Nothing
 45057 ;; This function is called by:
 45058 ;;		Interrupt level 2
 45059 ;; This function uses a non-reentrant model
 45060 ;;
 45061                           
 45062                           	psect	text146
 45063   0081BC                     __ptext146:
 45064                           	callstack 0
 45065   0081BC                     _TMR0_ISR:
 45066                           	callstack 115
 45067   0081BC                     
 45068                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 45069   0081BC  AEB1               	btfss	1201,7,c	;volatile
 45070   0081BE  EFE3  F040         	goto	i2u867_41
 45071   0081C2  EFE5  F040         	goto	i2u867_40
 45072   0081C6                     i2u867_41:
 45073   0081C6  EFF1  F040         	goto	i2l1853
 45074   0081CA                     i2u867_40:
 45075   0081CA                     
 45076                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 45077   0081CA  9EB1               	bcf	1201,7,c	;volatile
 45078   0081CC                     
 45079                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 45080   0081CC  0105               	movlb	5	; () banked
 45081   0081CE  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 45082   0081D0                     
 45083                           ; BSR set to: 5
 45084                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 45085   0081D0  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 45086   0081D2  A4D8               	btfss	status,2,c
 45087   0081D4  EFEE  F040         	goto	i2u868_41
 45088   0081D8  EFF0  F040         	goto	i2u868_40
 45089   0081DC                     i2u868_41:
 45090   0081DC  EFF1  F040         	goto	i2l1853
 45091   0081E0                     i2u868_40:
 45092   0081E0                     
 45093                           ; BSR set to: 5
 45094                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 45095   0081E0  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 45096   0081E2                     i2l1853:
 45097   0081E2  0011               	retfie		f
 45098   0081E4                     __end_of_TMR0_ISR:
 45099                           	callstack 0
 45100                           
 45101 ;; *************** function _DEFAULT_ISR *****************
 45102 ;; Defined at:
 45103 ;;		line 1369 in file "../../VLCBlib_PIC/vlcb.c"
 45104 ;; Parameters:    Size  Location     Type
 45105 ;;		None
 45106 ;; Auto vars:     Size  Location     Type
 45107 ;;		None
 45108 ;; Return value:  Size  Location     Type
 45109 ;;                  1    wreg      void 
 45110 ;; Registers used:
 45111 ;;		None
 45112 ;; Tracked objects:
 45113 ;;		On entry : 0/0
 45114 ;;		On exit  : 0/0
 45115 ;;		Unchanged: 0/0
 45116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45121 ;;Total ram usage:        0 bytes
 45122 ;; Hardware stack levels used: 1
 45123 ;; This function calls:
 45124 ;;		Nothing
 45125 ;; This function is called by:
 45126 ;;		Interrupt level 2
 45127 ;; This function uses a non-reentrant model
 45128 ;;
 45129                           
 45130                           	psect	text147
 45131   0083B0                     __ptext147:
 45132                           	callstack 0
 45133   0083B0                     _DEFAULT_ISR:
 45134                           	callstack 115
 45135   0083B0  0011               	retfie		f
 45136   0083B2                     __end_of_DEFAULT_ISR:
 45137                           	callstack 0
 45138                           
 45139                           ;
 45140                           ; H/W Interrupt Vector Table @ 0x900
 45141                           ;
 45142                           
 45143                           	psect	ivt0x900
 45144   000900                     __pivt0x900:
 45145                           	callstack 0
 45146   000900                     ivt0x900_base:
 45147                           	callstack 0
 45148                           
 45149                           ; Vector 0 : SWINT
 45150   000900  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45151                           
 45152                           ; Vector 1 : HLVD
 45153   000902  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45154                           
 45155                           ; Vector 2 : OSF
 45156   000904  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45157                           
 45158                           ; Vector 3 : CSW
 45159   000906  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45160                           
 45161                           ; Vector 4 : TU16A
 45162   000908  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45163                           
 45164                           ; Vector 5 : CLC1
 45165   00090A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45166                           
 45167                           ; Vector 6 : CAN
 45168   00090C  1FD1               	dw	_receiveOverrun shr (0+2)
 45169                           
 45170                           ; Vector 7 : IOC
 45171   00090E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45172                           
 45173                           ; Vector 8 : INT0
 45174   000910  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45175                           
 45176                           ; Vector 9 : ZCD
 45177   000912  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45178                           
 45179                           ; Vector 10 : AD
 45180   000914  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45181                           
 45182                           ; Vector 11 : ACT
 45183   000916  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45184                           
 45185                           ; Vector 12 : CM1
 45186   000918  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45187                           
 45188                           ; Vector 13 : SMT1
 45189   00091A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45190                           
 45191                           ; Vector 14 : SMT1PRA
 45192   00091C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45193                           
 45194                           ; Vector 15 : SMT1PWA
 45195   00091E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45196                           
 45197                           ; Vector 16 : ADCH1
 45198   000920  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45199                           
 45200                           ; Vector 17 : ADCH2
 45201   000922  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45202                           
 45203                           ; Vector 18 : ADCH3
 45204   000924  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45205                           
 45206                           ; Vector 19 : ADCH4
 45207   000926  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45208                           
 45209                           ; Vector 20 : DMA1SCNT
 45210   000928  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45211                           
 45212                           ; Vector 21 : DMA1DCNT
 45213   00092A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45214                           
 45215                           ; Vector 22 : DMA1OR
 45216   00092C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45217                           
 45218                           ; Vector 23 : DMA1A
 45219   00092E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45220                           
 45221                           ; Vector 24 : SPI1RX
 45222   000930  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45223                           
 45224                           ; Vector 25 : SPI1TX
 45225   000932  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45226                           
 45227                           ; Vector 26 : SPI1
 45228   000934  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45229                           
 45230                           ; Vector 27 : TMR2
 45231   000936  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45232                           
 45233                           ; Vector 28 : TMR1
 45234   000938  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45235                           
 45236                           ; Vector 29 : TMR1G
 45237   00093A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45238                           
 45239                           ; Vector 30 : CCP1
 45240   00093C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45241                           
 45242                           ; Vector 31 : TMR0
 45243   00093E  206F               	dw	_TMR0_ISR shr (0+2)
 45244                           
 45245                           ; Vector 32 : U1RX
 45246   000940  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45247                           
 45248                           ; Vector 33 : U1TX
 45249   000942  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45250                           
 45251                           ; Vector 34 : U1E
 45252   000944  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45253                           
 45254                           ; Vector 35 : U1
 45255   000946  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45256                           
 45257                           ; Vector 36 : CANRX
 45258   000948  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45259                           
 45260                           ; Vector 37 : CANTX
 45261   00094A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45262                           
 45263                           ; Vector 38 : PWM1PR
 45264   00094C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45265                           
 45266                           ; Vector 39 : PWM1
 45267   00094E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45268                           
 45269                           ; Vector 40 : SPI2RX
 45270   000950  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45271                           
 45272                           ; Vector 41 : SPI2TX
 45273   000952  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45274                           
 45275                           ; Vector 42 : SPI2
 45276   000954  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45277                           
 45278                           ; Vector 43 : TU16B
 45279   000956  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45280                           
 45281                           ; Vector 44 : TMR3
 45282   000958  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45283                           
 45284                           ; Vector 45 : TMR3G
 45285   00095A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45286                           
 45287                           ; Vector 46 : PWM2PR
 45288   00095C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45289                           
 45290                           ; Vector 47 : PWM2
 45291   00095E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45292                           
 45293                           ; Vector 48 : INT1
 45294   000960  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45295                           
 45296                           ; Vector 49 : CLC2
 45297   000962  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45298                           
 45299                           ; Vector 50 : CWG1
 45300   000964  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45301                           
 45302                           ; Vector 51 : NCO1
 45303   000966  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45304                           
 45305                           ; Vector 52 : DMA2SCNT
 45306   000968  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45307                           
 45308                           ; Vector 53 : DMA2DCNT
 45309   00096A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45310                           
 45311                           ; Vector 54 : DMA2OR
 45312   00096C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45313                           
 45314                           ; Vector 55 : DMA2A
 45315   00096E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45316                           
 45317                           ; Vector 56 : I2C1RX
 45318   000970  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45319                           
 45320                           ; Vector 57 : I2C1TX
 45321   000972  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45322                           
 45323                           ; Vector 58 : I2C1
 45324   000974  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45325                           
 45326                           ; Vector 59 : I2C1E
 45327   000976  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45328                           
 45329                           ; Vector 60 : Undefined
 45330   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 45331                           
 45332                           ; Vector 61 : CLC3
 45333   00097A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45334                           
 45335                           ; Vector 62 : PWM3PR
 45336   00097C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45337                           
 45338                           ; Vector 63 : PWM3
 45339   00097E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45340                           
 45341                           ; Vector 64 : U2RX
 45342   000980  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45343                           
 45344                           ; Vector 65 : U2TX
 45345   000982  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45346                           
 45347                           ; Vector 66 : U2E
 45348   000984  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45349                           
 45350                           ; Vector 67 : U2
 45351   000986  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45352                           
 45353                           ; Vector 68 : TMR5
 45354   000988  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45355                           
 45356                           ; Vector 69 : TMR5G
 45357   00098A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45358                           
 45359                           ; Vector 70 : CCP2
 45360   00098C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45361                           
 45362                           ; Vector 71 : SCAN
 45363   00098E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45364                           
 45365                           ; Vector 72 : U3RX
 45366   000990  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45367                           
 45368                           ; Vector 73 : U3TX
 45369   000992  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45370                           
 45371                           ; Vector 74 : U3E
 45372   000994  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45373                           
 45374                           ; Vector 75 : U3
 45375   000996  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45376                           
 45377                           ; Vector 76 : Undefined
 45378   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 45379                           
 45380                           ; Vector 77 : CLC4
 45381   00099A  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45382                           
 45383                           ; Vector 78 : PWM4PR
 45384   00099C  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45385                           
 45386                           ; Vector 79 : PWM4
 45387   00099E  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45388                           
 45389                           ; Vector 80 : INT2
 45390   0009A0  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45391                           
 45392                           ; Vector 81 : CLC5
 45393   0009A2  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45394                           
 45395                           ; Vector 82 : CWG2
 45396   0009A4  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45397                           
 45398                           ; Vector 83 : NCO2
 45399   0009A6  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45400                           
 45401                           ; Vector 84 : DMA3SCNT
 45402   0009A8  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45403                           
 45404                           ; Vector 85 : DMA3DCNT
 45405   0009AA  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45406                           
 45407                           ; Vector 86 : DMA3OR
 45408   0009AC  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45409                           
 45410                           ; Vector 87 : DMA3A
 45411   0009AE  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45412                           
 45413                           ; Vector 88 : CCP3
 45414   0009B0  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45415                           
 45416                           ; Vector 89 : CLC6
 45417   0009B2  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45418                           
 45419                           ; Vector 90 : CWG3
 45420   0009B4  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45421                           
 45422                           ; Vector 91 : TMR4
 45423   0009B6  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45424                           
 45425                           ; Vector 92 : DMA4SCNT
 45426   0009B8  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45427                           
 45428                           ; Vector 93 : DMA4DCNT
 45429   0009BA  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45430                           
 45431                           ; Vector 94 : DMA4OR
 45432   0009BC  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45433                           
 45434                           ; Vector 95 : DMA4A
 45435   0009BE  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45436                           
 45437                           ; Vector 96 : U4RX
 45438   0009C0  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45439                           
 45440                           ; Vector 97 : U4TX
 45441   0009C2  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45442                           
 45443                           ; Vector 98 : U4E
 45444   0009C4  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45445                           
 45446                           ; Vector 99 : U4
 45447   0009C6  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45448                           
 45449                           ; Vector 100 : DMA5SCNT
 45450   0009C8  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45451                           
 45452                           ; Vector 101 : DMA5DCNT
 45453   0009CA  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45454                           
 45455                           ; Vector 102 : DMA5OR
 45456   0009CC  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45457                           
 45458                           ; Vector 103 : DMA5A
 45459   0009CE  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45460                           
 45461                           ; Vector 104 : U5RX
 45462   0009D0  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45463                           
 45464                           ; Vector 105 : U5TX
 45465   0009D2  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45466                           
 45467                           ; Vector 106 : U5E
 45468   0009D4  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45469                           
 45470                           ; Vector 107 : U5
 45471   0009D6  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45472                           
 45473                           ; Vector 108 : DMA6SCNT
 45474   0009D8  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45475                           
 45476                           ; Vector 109 : DMA6DCNT
 45477   0009DA  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45478                           
 45479                           ; Vector 110 : DMA6OR
 45480   0009DC  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45481                           
 45482                           ; Vector 111 : DMA6A
 45483   0009DE  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45484                           
 45485                           ; Vector 112 : Undefined
 45486   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 45487                           
 45488                           ; Vector 113 : CLC7
 45489   0009E2  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45490                           
 45491                           ; Vector 114 : CM2
 45492   0009E4  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45493                           
 45494                           ; Vector 115 : NCO3
 45495   0009E6  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45496                           
 45497                           ; Vector 116 : DMA7SCNT
 45498   0009E8  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45499                           
 45500                           ; Vector 117 : DMA7DCNT
 45501   0009EA  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45502                           
 45503                           ; Vector 118 : DMA7OR
 45504   0009EC  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45505                           
 45506                           ; Vector 119 : DMA7A
 45507   0009EE  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45508                           
 45509                           ; Vector 120 : NVM
 45510   0009F0  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45511                           
 45512                           ; Vector 121 : CLC8
 45513   0009F2  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45514                           
 45515                           ; Vector 122 : CRC
 45516   0009F4  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45517                           
 45518                           ; Vector 123 : TMR6
 45519   0009F6  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45520                           
 45521                           ; Vector 124 : DMA8SCNT
 45522   0009F8  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45523                           
 45524                           ; Vector 125 : DMA8DCNT
 45525   0009FA  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45526                           
 45527                           ; Vector 126 : DMA8OR
 45528   0009FC  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45529                           
 45530                           ; Vector 127 : DMA8A
 45531   0009FE  20EC               	dw	_DEFAULT_ISR shr (0+2)
 45532   000A00                     ivt0x900_undefint:
 45533                           	callstack 0
 45534   000A00  00FF               	reset	
 45535                           
 45536                           	psect	rparam
 45537   000001                     ___rparam_used  equ	1
 45538   000000                     ___param_bank   equ	0
 45539   000000                     __Lparam        equ	__Lrparam
 45540   000000                     __Hparam        equ	__Hrparam
 45541                           
 45542                           	psect	config
 45543                           
 45544                           ;Config register CONFIG1 @ 0x300000
 45545                           ;	External Oscillator Selection
 45546                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 45547                           ;	Reset Oscillator Selection
 45548                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 45549   300000                     	org	3145728
 45550   300000  FA                 	db	250
 45551                           
 45552                           ;Config register CONFIG2 @ 0x300001
 45553                           ;	Clock out Enable bit
 45554                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 45555                           ;	PRLOCKED One-Way Set Enable bit
 45556                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 45557                           ;	Clock Switch Enable bit
 45558                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 45559                           ;	JTAG Enable bit
 45560                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 45561                           ;	Fail-Safe Clock Monitor Enable bit
 45562                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 45563                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 45564                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 45565                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 45566                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 45567   300001                     	org	3145729
 45568   300001  EF                 	db	239
 45569                           
 45570                           ;Config register CONFIG3 @ 0x300002
 45571                           ;	MCLR Enable bit
 45572                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 45573                           ;	Power-up timer selection bits
 45574                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 45575                           ;	Multi-vector enable bit
 45576                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 45577                           ;	IVTLOCK bit One-way set enable bit
 45578                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 45579                           ;	Low Power BOR Enable bit
 45580                           ;	LPBOREN = OFF, Low-Power BOR disabled
 45581                           ;	Brown-out Reset Enable bits
 45582                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 45583   300002                     	org	3145730
 45584   300002  FD                 	db	253
 45585                           
 45586                           ;Config register CONFIG4 @ 0x300003
 45587                           ;	Brown-out Reset Voltage Selection bits
 45588                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 45589                           ;	ZCD Disable bit
 45590                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 45591                           ;	PPSLOCK bit One-Way Set Enable bit
 45592                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 45593                           ;	Stack Full/Underflow Reset Enable bit
 45594                           ;	STVREN = ON, Stack full/underflow will cause Reset
 45595                           ;	Low Voltage Programming Enable bit
 45596                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 45597                           ;	Extended Instruction Set Enable bit
 45598                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 45599   300003                     	org	3145731
 45600   300003  FD                 	db	253
 45601                           
 45602                           ;Config register CONFIG5 @ 0x300004
 45603                           ;	WDT Period selection bits
 45604                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 45605                           ;	WDT operating mode
 45606                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 45607   300004                     	org	3145732
 45608   300004  9F                 	db	159
 45609                           
 45610                           ;Config register CONFIG6 @ 0x300005
 45611                           ;	WDT Window Select bits
 45612                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 45613                           ;	WDT input clock selector
 45614                           ;	WDTCCS = SC, Software Control
 45615   300005                     	org	3145733
 45616   300005  FF                 	db	255
 45617                           
 45618                           ;Config register CONFIG7 @ 0x300006
 45619                           ;	Boot Block Size selection bits
 45620                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 45621                           ;	Boot Block enable bit
 45622                           ;	BBEN = ON, Boot block enabled
 45623                           ;	Storage Area Flash enable bit
 45624                           ;	SAFEN = OFF, SAF disabled
 45625                           ;	Background Debugger
 45626                           ;	DEBUG = 0x1, unprogrammed default
 45627   300006                     	org	3145734
 45628   300006  F7                 	db	247
 45629                           
 45630                           ;Config register CONFIG8 @ 0x300007
 45631                           ;	Boot Block Write Protection bit
 45632                           ;	WRTB = ON, Boot Block Write protected
 45633                           ;	Configuration Register Write Protection bit
 45634                           ;	WRTC = ON, Configuration registers Write protected
 45635                           ;	Data EEPROM Write Protection bit
 45636                           ;	WRTD = OFF, Data EEPROM not Write protected
 45637                           ;	SAF Write protection bit
 45638                           ;	WRTSAF = OFF, SAF not Write Protected
 45639                           ;	Application Block write protection bit
 45640                           ;	WRTAPP = OFF, Application Block not write protected
 45641   300007                     	org	3145735
 45642   300007  FC                 	db	252
 45643                           
 45644                           ;Config register CONFIG9 @ 0x300008
 45645                           ;	CRC on boot output pin selection
 45646                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 45647                           ;	CRC on boot output pin enable bit
 45648                           ;	BPEN = OFF, CRC on boot output pin disabled
 45649                           ;	CRC on boot output pin open drain bit
 45650                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 45651   300008                     	org	3145736
 45652   300008  FF                 	db	255
 45653                           
 45654                           ;Config register CONFIG10 @ 0x300009
 45655                           ;	PFM and Data EEPROM Code Protection bit
 45656                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 45657   300009                     	org	3145737
 45658   300009  FF                 	db	255
 45659                           
 45660                           ;Config register CONFIG11 @ 0x30000A
 45661                           ;	CRC on boot scan enable for boot area
 45662                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 45663                           ;	CRC on boot Continue on Error for boot areas bit
 45664                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 45665                           ;	CRC on boot application code scan enable
 45666                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 45667                           ;	CRC on boot SAF area scan enable
 45668                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 45669                           ;	CRC on boot Data EEPROM scan enable
 45670                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 45671                           ;	CRC on boot Config fuses scan enable
 45672                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 45673                           ;	CRC on boot Continue on Error for non-boot areas bit
 45674                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 45675                           ;	Boot on CRC Enable bit
 45676                           ;	BOOTPOR = OFF, CRC on boot will not run
 45677   30000A                     	org	3145738
 45678   30000A  FF                 	db	255
 45679                           
 45680                           ;Config register CONFIG12 @ 0x30000B
 45681                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 45682                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 45683   30000B                     	org	3145739
 45684   30000B  FF                 	db	255
 45685                           
 45686                           ;Config register CONFIG13 @ 0x30000C
 45687                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 45688                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 45689   30000C                     	org	3145740
 45690   30000C  FF                 	db	255
 45691                           
 45692                           ;Config register CONFIG14 @ 0x30000D
 45693                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 45694                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 45695   30000D                     	org	3145741
 45696   30000D  FF                 	db	255
 45697                           
 45698                           ;Config register CONFIG15 @ 0x30000E
 45699                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 45700                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 45701   30000E                     	org	3145742
 45702   30000E  FF                 	db	255
 45703                           
 45704                           ;Config register CONFIG16 @ 0x30000F
 45705                           ;	Boot Sector Seed for CRC on boot bits 31-24
 45706                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 45707   30000F                     	org	3145743
 45708   30000F  FF                 	db	255
 45709                           
 45710                           ;Config register CONFIG17 @ 0x300010
 45711                           ;	Boot Sector Seed for CRC on boot bits 23-16
 45712                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 45713   300010                     	org	3145744
 45714   300010  FF                 	db	255
 45715                           
 45716                           ;Config register CONFIG18 @ 0x300011
 45717                           ;	Boot Sector Seed for CRC on boot bits 15-8
 45718                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 45719   300011                     	org	3145745
 45720   300011  FF                 	db	255
 45721                           
 45722                           ;Config register CONFIG19 @ 0x300012
 45723                           ;	Boot Sector Seed for CRC on boot bits 7-0
 45724                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 45725   300012                     	org	3145746
 45726   300012  FF                 	db	255
 45727                           
 45728                           ;Config register CONFIG20 @ 0x300013
 45729                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 45730                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 45731   300013                     	org	3145747
 45732   300013  FF                 	db	255
 45733                           
 45734                           ;Config register CONFIG21 @ 0x300014
 45735                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 45736                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 45737   300014                     	org	3145748
 45738   300014  FF                 	db	255
 45739                           
 45740                           ;Config register CONFIG22 @ 0x300015
 45741                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 45742                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 45743   300015                     	org	3145749
 45744   300015  FF                 	db	255
 45745                           
 45746                           ;Config register CONFIG23 @ 0x300016
 45747                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 45748                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 45749   300016                     	org	3145750
 45750   300016  FF                 	db	255
 45751                           
 45752                           ;Config register CONFIG24 @ 0x300017
 45753                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 45754                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 45755   300017                     	org	3145751
 45756   300017  FF                 	db	255
 45757                           
 45758                           ;Config register CONFIG25 @ 0x300018
 45759                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 45760                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 45761   300018                     	org	3145752
 45762   300018  FF                 	db	255
 45763                           
 45764                           ;Config register CONFIG26 @ 0x300019
 45765                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 45766                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 45767   300019                     	org	3145753
 45768   300019  FF                 	db	255
 45769                           
 45770                           ;Config register CONFIG27 @ 0x30001A
 45771                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 45772                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 45773   30001A                     	org	3145754
 45774   30001A  FF                 	db	255
 45775                           
 45776                           ;Config register CONFIG28 @ 0x30001B
 45777                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 45778                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 45779   30001B                     	org	3145755
 45780   30001B  FF                 	db	255
 45781                           
 45782                           ;Config register CONFIG29 @ 0x30001C
 45783                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 45784                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 45785   30001C                     	org	3145756
 45786   30001C  FF                 	db	255
 45787                           
 45788                           ;Config register CONFIG30 @ 0x30001D
 45789                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 45790                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 45791   30001D                     	org	3145757
 45792   30001D  FF                 	db	255
 45793                           
 45794                           ;Config register CONFIG31 @ 0x30001E
 45795                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 45796                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 45797   30001E                     	org	3145758
 45798   30001E  FF                 	db	255
 45799                           
 45800                           ;Config register CONFIG32 @ 0x30001F
 45801                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 45802                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 45803   30001F                     	org	3145759
 45804   30001F  FF                 	db	255
 45805                           
 45806                           ;Config register CONFIG33 @ 0x300020
 45807                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 45808                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 45809   300020                     	org	3145760
 45810   300020  FF                 	db	255
 45811                           
 45812                           ;Config register CONFIG34 @ 0x300021
 45813                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 45814                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 45815   300021                     	org	3145761
 45816   300021  FF                 	db	255
 45817                           
 45818                           ;Config register CONFIG35 @ 0x300022
 45819                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 45820                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 45821   300022                     	org	3145762
 45822   300022  FF                 	db	255
 45823                           tosu	equ	0x4FF
 45824                           tosh	equ	0x4FE
 45825                           tosl	equ	0x4FD
 45826                           stkptr	equ	0x4FC
 45827                           pclatu	equ	0x4FB
 45828                           pclath	equ	0x4FA
 45829                           pcl	equ	0x4F9
 45830                           tblptru	equ	0x4F8
 45831                           tblptrh	equ	0x4F7
 45832                           tblptrl	equ	0x4F6
 45833                           tablat	equ	0x4F5
 45834                           prodh	equ	0x4F4
 45835                           prodl	equ	0x4F3
 45836                           indf0	equ	0x4EF
 45837                           postinc0	equ	0x4EE
 45838                           postdec0	equ	0x4ED
 45839                           preinc0	equ	0x4EC
 45840                           plusw0	equ	0x4EB
 45841                           fsr0h	equ	0x4EA
 45842                           fsr0l	equ	0x4E9
 45843                           wreg	equ	0x4E8
 45844                           indf1	equ	0x4E7
 45845                           postinc1	equ	0x4E6
 45846                           postdec1	equ	0x4E5
 45847                           preinc1	equ	0x4E4
 45848                           plusw1	equ	0x4E3
 45849                           fsr1h	equ	0x4E2
 45850                           fsr1l	equ	0x4E1
 45851                           bsr	equ	0x4E0
 45852                           indf2	equ	0x4DF
 45853                           postinc2	equ	0x4DE
 45854                           postdec2	equ	0x4DD
 45855                           preinc2	equ	0x4DC
 45856                           plusw2	equ	0x4DB
 45857                           fsr2h	equ	0x4DA
 45858                           fsr2l	equ	0x4D9
 45859                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    422
    Data        2
    BSS         2213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160     45     159
    BANK6           256      0     189
    BANK7           256      0     255
    BANK8           256      0     252
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    canTransport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventConsumerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S1897MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    S343$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S343$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S343Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S343Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    S343Transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[6] size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 6
		 -> canTransport(CODE[6]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 


Critical Paths under _main in COMRAM

    _setup->_tickGet
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_consumerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_findEvent
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _pollTimedResponse->_reqevCallback
    _getEv->_readNVM
    _nerdCallback->_sendMessage7
    _setNV->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage4->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _mnsPoll->_sendMessage5
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _sendMessage7->_sendMessage
    _findEvent->_getHash
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _getEVs->_readNVM
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _sendMessage5->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_startEnumeration
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _startEnumeration->_tickGet
    _setNewCanId->_writeNVM
    _loop->_tickGet
    _doFlash->_getNV
    _checkPowerOnPb->_factoryReset
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lldiv->_tickGet
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read
    _APP_testMode->_tickGet

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  181384
                                             92 COMRAM     3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2420
                            _doFlash
                           _initARGB
                      _refreshString
              _setTimedResponseDelay
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0    4604
                                             40 COMRAM     5     5      0
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1395
                                             39 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     450
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     382
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     735
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          20    20      0    1037
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     497
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  147013
                                             30 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   72439
                                             83 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5601
                                             48 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6035
                                             43 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9898
                                             46 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8662
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     296
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6080
                                             43 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11133
                                             58 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3606
                                             53 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   12637
                                             77 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7    5104
                                             70 COMRAM     7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            24    17      7    4989
                                             46 COMRAM    24    17      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             16    14      2     782
                                             20 COMRAM    16    14      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   21461
                                             60 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6722
                                             45 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _getEv                                               16    14      2     352
                                             12 COMRAM    16    14      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2603
                                             45 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3505
                                             45 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2723
                                             45 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2788
                                             45 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2    3097
                                             45 COMRAM     8     6      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11789
                                             83 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1     946
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1       1
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2   19277
                                             83 COMRAM     7     5      2
                                              0 BANK5     30    30      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
           _canWaitForTxQueueToDrain *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3     155
                                              4 COMRAM     4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             37 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage4                                         5     1      4    2403
                                             37 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2418
                                             37 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         5     5      0     319
                                              5 COMRAM     4     4      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _canWaitForTxQueueToDrain                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     6     4      2     203
                                              6 COMRAM     4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5892
                                             43 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             37 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2    8182
                                             83 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             37 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0      29
                                              0 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1244
                                             33 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2841
                                             48 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2795
                                             43 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                             9     7      2    1022
                                             27 COMRAM     9     7      2
                             _getEVs
                     _updateLedRange
                          _updateRGB
 ---------------------------------------------------------------------------------
 (4) _updateRGB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getEVs                                              15    15      0     395
                                             12 COMRAM    15    15      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     200
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2745
                                             83 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2635
                                             37 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    2266
                                             26 COMRAM    11     3      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             12 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     222
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1741
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1741
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     905
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     722
                                             83 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0    2019
                                             10 COMRAM     4     4      0
                            _doFlash
                      _refreshString
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _refreshString                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              2     2      0    1762
                                              4 COMRAM     2     2      0
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   13993
                                             59 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     529
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     166
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _factoryReset                                         5     5      0   10950
                                             54 COMRAM     5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _teachFactoryReset                                    0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) _nvFactoryReset                                       3     3      0    1538
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _APP_nvDefault                                        3     3      0     792
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     318
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mnsFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_factoryReset                                     1     1      0    3666
           _factoryResetGlobalEvents
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalEvents                             0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3666
                                             53 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    14    14      0    2271
                                             39 COMRAM    14    14      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     656
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     228
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      91
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1327
                                             33 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               15    13      2     432
                                             12 COMRAM    15    13      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             27 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               14    12      2     351
                                             12 COMRAM    14    12      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _readNVM                                              6     3      3     247
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (2) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (4) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         7     7      0     813
                                             10 COMRAM     7     7      0
                           _initARGB
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _updateLedRange                                       4     2      2     216
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _initARGB                                             1     1      0     156
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _initARGB
       _tickGet
       _updateLedRange
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
             _rebuildHashtable
               _getEN
                 _readNVM
                   _EEPROM_Read
                   _FLASH_Read
               _getHash
                 _getEN (ARG)
                 _getNN (ARG)
                   _readNVM
               _getNN
             _removeTableEntry
               _flushFlashBlock
                 _APP_isSuitableTimeToWriteFlash
                 _eraseFlashBlock
                   _APP_isSuitableTimeToWriteFlash
               _rebuildHashtable
               _writeNVM
                 _APP_nvDefault (ARG)
                   ___awdiv
                   ___awmod
                 _EEPROM_Write (ARG)
                   _EEPROM_Read
                   _EEPROM_WriteNoVerify
                   _updateModuleErrorStatus
                 _FLASH_Write (ARG)
                   _eraseFlashBlock
                   _flushFlashBlock
                   _loadFlashBlock
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     _doFlash
       _getNV
     _refreshString
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _bootProcessMessage *
       _writeNVM
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
           _sendRTR
           _tickGet
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
       _sendMessage5
         _getParameterFlags (ARG)
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
             _updateModuleErrorStatus
         _tableIndexToEvtIdx (ARG)
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
       _APP_processConsumedEvent
         _getEVs
           _readNVM
         _updateLedRange
         _updateRGB
       _consumerEventCheckLen
         _checkLen
           _sendMessage5
       _findEvent
         _getEN
         _getHash
         _getNN
       _isConsumedEvent
         _APP_isConsumedEvent
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumerEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _canWaitForTxQueueToDrain *
       _consumerEsdData *
       _consumerGetDiagnostic *
       _findServiceIndex *
       _getParameter *
         _getParameterFlags
         _have
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
         _getParameter (ARG)
         _sendMessage (ARG)
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
         _APP_nvValueChanged
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
           _readNVM
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
             _findEvent
             _flushFlashBlock
             _getEN
             _rebuildHashtable
             _writeEv
               _writeNVM
             _writeNVM
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _getEN
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
       _doRqevn
         _getEN
         _sendMessage3
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _doFlash
     _initARGB
     _refreshString
     _setTimedResponseDelay
     _tickGet
     _updateLedRange

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0    1405     11.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRlhl       577      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0     252     98.4%
BITBANK7           256      0       0      0.0%
BANK7              256      0     255     99.6%
BITBANK6           256      0       0      0.0%
BANK6              256      0     189     73.8%
BITBIGSFRhllh      243      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     45     159     99.4%
BITBIGSFRhlh       156      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     95      95    100.0%
BITBIGSFRllllll     64      0       0      0.0%
BITBIGSFRhlll       61      0       0      0.0%
BITBIGSFRllhl       43      0       0      0.0%
BITBIGSFRllhh       40      0       0      0.0%
BITBIGSFRlllllh     37      0       0      0.0%
BITBIGSFRlllh       20      0       0      0.0%
BITBIGSFRlhh        11      0       0      0.0%
BITBIGSFRhh          8      0       0      0.0%
BITBIGSFRllllh       1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    2355      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 22 15:57:00 2025

                      nerdCallback@nodeNumber 0530                           findEvent@tableIndex 052E  
                   __end_of_pollTimedResponse 62A4                        ?_handleSelfEnumeration 0501  
                            sendMessage@data1 051C                              sendMessage@data2 051D  
                            sendMessage@data3 051E                              sendMessage@data4 051F  
                            sendMessage@data5 0520                              sendMessage@data6 0521  
                            sendMessage@data7 0522                           findEvent@nodeNumber 0522  
               __end_of_setTimedResponseDelay 8364                                 ?_APP_addEvent 0547  
                        _getNumRxBuffersInUse 749E                                            l53 838E  
                                          l81 7A3A                                            l85 82D8  
                                          l77 4974                         _timedResponseCallback 0587  
                         _timedResponseOpcode 05A2                                  ___awdiv@sign 0506  
                                          _nn 058F                              ?_flushFlashBlock 0501  
                     __end_of_eraseFlashBlock 7040                                           l100 8394  
                                         l103 83A0                                           l112 8204  
                                         l106 83A4                                           l115 5A94  
                                         l116 5B4A                                           l109 83A8  
                                         l250 4DDC                                           l306 839C  
                                         l260 836A                                           l340 5CF8  
                                         l309 83AC                                           l341 5D1C  
                                         l248 4CD8                                           l257 7D80  
                                         l345 6C68                                           l290 7790  
                                         l354 7F14                                           l283 25FE  
                                         l291 779C                                           l355 7F40  
                                         l620 73AE                                           l356 7F1C  
                                         l607 4F4E                        __end_of_updateLedRange 7D82  
                                         l288 7756                                           l640 8248  
                                         l624 5DF4                                           l297 531C  
                                         l801 3F9C                                           l706 765E  
                                         l810 3DD0                                           l570 4E20  
                                         l635 8382                                           l716 662C  
                                         l652 667C                                           l653 6688  
                                         l742 47E0                                           l646 66D2  
                                         l567 82BE                                           l663 7510  
                                         l815 3DDC                                           l832 835A  
                                         l648 664C                                           l657 72BE  
                                         l673 2C48                                           l841 82A2  
                                         l761 8350                                           l746 7CB4  
                                         l674 2EC4                                           l682 8336  
                                         l754 708A                                           l691 4286  
                                         l827 3EEA                                           l668 2C2A  
                                         l692 4432                                           l836 8036  
                                         l685 8346                                           l757 70BE  
                                         l846 831E                                           l758 70C0  
                                         l688 7D3C                                           l952 7DFE  
                                         l947 8388                                           l972 1910  
                                         l796 7E6E                                           l958 1ECE  
                                         l975 19A4                                           l984 1AF4  
                             checkPowerOnPb@i 053C                                           l969 185C  
                          _enumerationResults 0632              ??_APP_isSuitableTimeToWriteFlash 0501  
             ?_APP_isSuitableTimeToWriteFlash 0501                                           _evs 0800  
                                         _pop 62A4                                 _APP_nvDefault 51E2  
                                ___awmod@sign 0506                                           prod 04F3  
                                         tosl 04FD                                           wreg 04E8  
                tableIndexToEvtIdx@tableIndex 0501                       APP_nvValueChanged@index 0501  
                     APP_nvValueChanged@value 0501                                   _subtestTime 0578  
         __end_of_mnsTRallDiagnosticsCallback 555C                   _mnsTRallDiagnosticsCallback 5440  
                                        l1022 7142                                          l1103 7ED8  
                                        l1120 3CB6                                          l2001 595C  
                                        l2010 6120                                          l1034 8066  
                                        l1027 7FA6                                          l1108 461C  
                                        l1052 75F2                                          l1132 6CFA  
                                        l1044 7C48                                          l1300 4FEA  
                                        l2004 8362                                          l2100 6384  
                                        l1141 8398                                          l1045 7C6C  
                                        l1301 501E                                          l2014 601C  
                                        l1118 3C5E                                          l1070 5F9C  
                                        l1062 7BFC                                          l2102 63FC  
                                        l1039 8268                                          l2007 60DE  
                                        l2023 6778                                          l1127 64D4  
                                        l1063 7C20                                          l1160 8376  
                                        l1048 82F0                                          l1153 543E  
                                        l2017 605E                                          l1137 6A00  
                                        l1057 71C4                                          l1313 16F6  
                                        l1305 509E                                          l1170 57B2  
                                        l1146 6AB8                                          l1066 8094  
                                        l1147 6B3A                                          l1411 278A  
                                        l1163 837C                                          l1083 7244  
                                        l1075 5C34                                          l1323 0CC0  
                                        l1157 681E                                          l2141 68B2  
                                        l2125 7724                                          l1341 0E58  
                                        l1166 8286                                          l2126 7734  
                                        l2054 6962                                          l1422 2930  
                                        l1342 0ED4                                          l2071 8112  
                                        l1087 4C68                                          l2039 327A  
                                        l1424 2954                                          l1416 27FA  
                                        l2080 80BE                                          l1096 5ECA  
                                        l2048 3296                                          l1169 576C  
                                        l1193 6360                                          l1433 8006  
                                        l2058 7EA2                                          l1442 7CF8  
                                        l1418 2836                                          l2074 80E8  
                                        l1179 5864                                          l2059 7EA4  
                                        l2083 8166                                          l1292 76CA  
                                        l2148 68C2                                          l1188 5A54  
                                        l2068 813C                                          l1372 15D8  
                                        l2077 8190                                          l1429 2A9C  
                                        l1381 169A                                          l2093 6370  
                                        l1702 7AE4                                          l1534 7DC0  
                                        l1550 7864                                          l1391 6FB6  
                                        l1447 4AF4                                          l1543 7FD6  
                                        l1295 4F82                                          l2095 637E  
                                        l2088 6D8C                                          l1392 6FBA  
                                        l2096 6380                                          l1641 7B88  
                                        l2345 61E2                                          l1297 4FB2  
                                        l2097 63BC                                          l1722 7584  
                                        l1714 7928                                          l1802 50C8  
                                        l1554 7B36                                          l1562 6E1A  
                                        l1474 6BD2                                          l2098 6382  
                                        l1707 55B8                                          l1483 7F0C  
                                        l1299 4FE6                                          l1539 7E38  
                                        l1644 7BC0                                          l1660 7802  
                                        l1396 8334                                          l1804 50C8  
                                        l1653 7986                                          l1709 566A  
                                        l1805 50D4                                          l2358 6582  
                                        l1638 8308                                          l1478 555A  
                                        l1647 7BD4                                          l1663 7400  
                                        l1671 6FD8                                          l1815 514C  
                                        l1567 3642                                          l1664 7426  
                                        l1656 77A6                                          l1816 51E0  
                                        l1673 6FE8                                          l1753 369A  
                                        l1674 701A                                          l1690 6A76  
                                        l1682 6A9E                                          l1770 37B6  
                                        l1762 3754                                          l1594 7A90  
                                        l1755 36A2                                          l1764 376E  
                                        l1588 8226                                          l1748 81B8  
                                        l1693 6A9A                                          l1685 6A2A  
                                        l1773 3838                                          l1846 749C  
                                        l1678 703E                                          l1790 394E  
                                        l1782 38EC                                          l1766 378A  
                                        l1687 6A48                                          l1775 3840  
                                        l1839 78C6                                          l1696 7A92  
                                        l1784 3906                                          l1792 39CE  
                                        l1768 37A0                                          l1872 79AA  
                                        l1689 6A58                                          l1881 62A2  
                                        l1698 7AA2                                          l1786 3922  
                                        l1866 8370                                          l1699 7ACE  
                              _bootloaderType 05AA                                          l1788 3938  
                                        l1796 50A6                                          l1876 79CE  
                                        l1877 79E2                                          l1886 6262  
                                        l1799 50BC                                          l2791 7B86  
                                        l1983 6EA6                                          l8001 6508  
                                        l8011 654E                                          l8003 651A  
                                        l1995 5768                                          l7221 82C0  
                                        l8021 657A                                          l8013 6556  
                                        l8005 6522                                          l8101 5250  
                                        l1989 6F32                                          l8031 7D54  
                                        l7231 7B88                                          l7303 7514  
                                        l7223 82D0                                          l8015 655C  
                                        l8007 652A                                          l8111 52DC  
                                        l8033 7D5C                                          l7233 7B98  
                                        l7313 754E                                          l7305 7518  
                                        l8025 8390                                          l8009 6538  
                                        l8017 6562                                          l8105 5296  
                                        l8113 531A                                          l8121 839A  
                                        l8035 7D6C                                          l8027 7D40  
                                        l7235 7BB6                                          l7251 7404  
                                        l7243 73B0                                          l7227 82D6  
                                        l8019 6572                                          l9003 7660  
                                        l7331 7D02                                          l7411 74B4  
                                        l7403 749E                                          l9011 7CB6  
                                        l8211 6E4C                                          l8203 6E1E  
                                        l8131 6658                                          l8043 81E4  
                                        l8037 7D6E                                          l8029 7D50  
                                        l7237 7BBE                                          l7253 741E  
                                        l7245 73E2                                          l7309 7532  
                                        l7325 8320                                          l7261 6FD0  
                                        l7341 6A02                                          l9005 7666  
                                        l7333 7D12                                          l7413 7506  
                                        l7405 74AE                                          l7421 7E74  
                                        l8061 6B28                                          l9013 7CBA  
                                        l9021 7CD8                                          l8221 6EA4  
                                        l8213 6E8C                                          l8133 666A  
                                        l8125 6630                                          l9101 6DA0  
                                        l7239 7BCE                                          l7319 755A  
                                        l7511 542C                                          l7503 533C  
                                        l7327 8332                                          l7271 703C  
                                        l7263 6FEC                                          l7351 6A46  
                                        l9007 7692                                          l8071 7AF8  
                                        l8151 7CAE                                          l8143 7C70  
                                        l7335 7D20                                          l7415 750E  
                                        l7423 7E88                                          l8063 6B38  
                                        l8047 6AA2                                          l8039 839E  
                                        l9015 7CC4                                          l8311 499A  
                                        l8303 4994                                          l8231 79A4  
                                        l8127 6640                                          l9111 6DC6  
                                        l9031 6BD0                                          l9023 6B3C  
                                        l7281 7446                                          l7273 7428  
                                        l7521 8284                                          l7505 5382  
                                        l7361 779E                                          l7265 700E  
                                        l7257 6FBC                                          l7353 6A64  
                                        l7345 6A16                                          l9009 76AE  
                                        l9201 37B8                                          l8401 50B6  
                                        l8081 7B20                                          l8145 7C80  
                                        l7337 7D30                                          l7329 7CFA  
                                        l7425 7E9E                                          l7601 2B26  
                                        l8057 6ABA                                          l8049 6AB2  
                                        l8161 8140                                          l9017 7CCE  
                                        l8217 6E92                                          l8209 6E20  
                                        l8233 79AE                                          l8225 798A  
                                        l8137 6694                                          l9121 8208  
                                        l9113 6DE6                                          l9105 6DA6  
                                        l8241 837A                                          l9025 6B4C  
                                        l7291 747E                                          l7283 7458  
                                        l7275 742E                                          l7515 826A  
                                        l7507 5390                                          l7371 77EE  
                                        l7363 77B6                                          l7267 7018  
                                        l7259 6FBC                                          l7355 6A74  
                                        l7347 6A3A                                          l8091 51FC  
                                        l9211 3848                                          l8411 50FA  
                                        l8403 50C0                                          l8075 7B04  
                                        l8147 7C90                                          l7339 7D36  
                                        l7451 595E                                          l7443 6F1E  
                                        l7435 6EAC                                          l7419 7E72  
                                        l7611 2BAA                                          l7603 2B3A  
                                        l8059 6B26                                          l8067 8364  
                                        l8219 6E94                                          l8323 49AE  
                                        l8315 49A0                                          l8235 79BE  
                                        l8227 798E                                          l8139 66C2  
                                        l8163 800A                                          l9123 820C  
                                        l9115 6E0A                                          l9107 6DC0  
                                        l8251 6966                                          l9051 5526  
                                        l9043 54AE                                          l9035 5440  
                                        l8501 4D46                                          l7285 7468  
                                        l7293 7480                                          l7277 7436  
                                        l7517 8270                                          l7509 539C  
                                        l7701 57A0                                          l7373 7800  
                                        l7365 77D4                                          l7533 7964  
                                        l7525 792A                                          l7269 7028  
                                        l7357 6A84                                          l7349 6A3E  
                                        l7381 7ACC                                          l8093 51FE  
                                        l8085 51E4                                          l9301 68AC  
                                        l9213 3868                                          l8421 5134  
                                        l8413 5102                                          l8405 50CC  
                                        l8077 7B14                                          l8069 7AE8  
                                        l8149 7C94                                          l7461 5A1E  
                                        l7453 59CA                                          l7445 6F20  
                                        l7437 6ED8                                          l7429 6EAA  
                                        l7621 2C22                                          l7613 2BC6  
                                        l7605 2B56                                          l8181 6934  
                                        l8173 68C4                                          l8341 49D4  
                                        l8333 49CE                                          l8237 79D4  
                                        l8229 799E                                          l8165 801A  
                                        l9133 8218                                          l9117 6E18  
                                        l8253 6976                                          l9053 5558  
                                        l9045 5510                                          l9037 548A  
                                        l9029 6B52                                          l9141 7A52  
                                        l8245 8374                                          l8157 8348  
                                        l8511 4D94                                          l8503 4D48  
                                        l7295 7486                                          l7287 746A  
                                        l7279 743A                                          l9311 3FAA  
                                        l9303 3F9E                                          l7519 8280  
                                        l7711 57CC                                          l7703 57A2  
                                        l7367 77D8                                          l7535 796A  
                                        l7527 792C                                          l7359 6A98  
                                        l7383 7ADC                                          l7375 7A92  
                                        l7551 55B4                                          l7543 555C  
                                        l8087 51F6                                          l9231 38FE  
                                        l9223 38B6                                          l9215 387A  
                                        l8423 5144                                          l8415 5112  
                                        l8407 50D8                                          l7463 5A2C  
                                        l7447 6F30                                          l7439 6F18  
                                        l7631 2C5C                                          l7623 2C3A  
                                        l7615 2BE2                                          l7607 2B72  
                                        l8183 695A                                          l8175 68DE  
                                        l8327 49B4                                          l8319 49A6  
                                        l8191 80EC                                          l8239 79D8  
                                        l9127 8212                                          l8263 699E  
                                        l9063 7EF0                                          l9039 54A8  
                                        l9151 7A88                                          l9143 7A60  
                                        l9135 7A3C                                          l8271 7ECC  
                                        l8521 4DBE                                          l8513 4DB6  
                                        l8505 4D5C                                          l7297 748A  
                                        l7289 746E                                          l9321 4012  
                                        l9313 3FAC                                          l9305 3FA2  
                                        l7721 581C                                          l7713 57EE  
                                        l7369 77E4                                          l7537 7972  
                                        l7529 7940                                          l7385 7AE0  
                                        l7377 7AA6                                          l7561 564A  
                                        l7553 55BC                                          l7545 558E  
                                        l8097 5212                                          l9233 3908  
                                        l9225 38D6                                          l9217 3880  
                                        l9161 3682                                          l9209 37CC  
                                        l8425 5152                                          l8417 511A  
                                        l8409 50E8                                          l9401 212A  
                                        l7481 7630                                          l7473 75FA  
                                        l7457 59D6                                          l7641 2CF4  
                                        l7633 2C6E                                          l7625 2C40  
                                        l7609 2B8E                                          l7617 2BFE  
                                        l8177 68F6                                          l8249 8116  
                                        l8361 4A02                                          l8353 49DA  
                                        l8193 803A                                          l8169 8026  
                                        l8441 7FC6                                          l8257 6982  
                                        l9065 7F0A                                          l9057 7EDA  
                                        l9153 7A8E                                          l9137 7A4C  
                                        l7801 6CF8                                          l8601 70A0  
                                        l9081 7804                                          l8515 4DB8  
                                        l8507 4D90                                          l7299 748C  
                                        l9331 404E                                          l9323 4014  
                                        l9315 3FC0                                          l9307 3FA6  
                                        l7491 677C                                          l7723 5840  
                                        l7539 7984                                          l7379 7AC0  
                                        l7563 564C                                          l7555 55D0  
                                        l7547 55A2                                          l7571 78CE  
                                        l9075 7D86                                          l9243 393A  
                                        l9235 3918                                          l9219 38A0  
                                        l9171 3706                                          l9163 36AA  
                                        l8419 512C                                          l9411 22FC  
                                        l9403 21B6                                          l7483 763A  
                                        l7475 7608                                          l7467 75F6  
                                        l8611 465C                                          l7459 59F4  
                                        l7395 725C                                          l7387 7246  
                                        l7651 2D8E                                          l7643 2D4A  
                                        l7635 2C7E                                          l7619 2C0A  
                                        l7811 6D0A                                          l8179 6916  
                                        l8187 6960                                          l7731 641E  
                                        l8291 4982                                          l8283 8098  
                                        l8195 804A                                          l8435 7FAA  
                                        l8259 6992                                          l9059 7EEA  
                                        l8275 7ED2                                          l8267 7EA6  
                                        l8603 70BA                                          l8533 4DCC  
                                        l8517 4DBA                                          l8509 4D92  
                                        l8461 4CC8                                          l8453 4C70  
                                        l9333 4060                                          l9325 4024  
                                        l9317 3FC2                                          l9309 3FA8  
                                        l7493 680C                                          l7725 5842  
                                        l7709 57B4                                          l7565 5668  
                                        l7549 55B0                                          l7557 55D4  
                                        l7581 78FE                                          l8445 838A  
                                        l9077 7DAE                                          l9069 7D82  
                                        l9237 391A                                          l9229 38EE  
                                        l9181 3756                                          l9165 36CC  
                                        l9157 3644                                          l8429 515E  
                                        l9413 2388                                          l7485 7640  
                                        l7477 760A                                          l8621 46C4  
                                        l8613 4666                                          l7397 72B4  
                                        l7389 7256                                          l7661 2E1A  
                                        l7653 2DAA                                          l7645 2D64  
                                        l7637 2C86                                          l7629 2C56  
                                        l7821 6D1E                                          l7813 6D0E  
                                        l7805 6CFE                                          l8701 6312  
                                        l8541 5A78                                          l7741 6456  
                                        l7733 6434                                          l8365 4A16  
                                        l8357 49EE                                          l8285 4978  
                                        l8437 7FBA                                          l9149 7A72  
                                        l7901 3CB4                                          l8269 7EBC  
                                        l9501 6C1C                                          l9093 7842  
                                        l8535 4DD0                                          l8519 4DBC  
                                        l8471 4CFC                                          l8463 4CDA  
                                        l8455 4CA6                                          l8447 4C6A  
                                        l9351 409A                                          l9343 4074  
                                        l9335 406E                                          l9327 402A  
                                        l9319 3FFE                                          l7719 57F0  
                                        l7727 5852                                          l7559 5620  
                                        l7575 78E6                                          l9079 7DB0  
                                        l9271 76CC                                          l9239 3924  
                                        l9191 378C                                          l9183 3766  
                                        l9175 371C                                          l9167 36DE  
                                        l9159 367E                                          l9415 2414  
                                        l9407 2242                                          l9423 25B8  
                                        l9431 7736                                          l7911 739E  
                                        l7487 7654                                          l7479 761A  
                                        l8631 4706                                          l8623 46D4  
                                        l8615 46A0                                          l8607 461E  
                                        l7399 72BC                                          l7671 2E78  
                                        l7663 2E36                                          l7655 2DC6  
                                        l7647 2D72                                          l7639 2C8E  
                                        l7591 2AD6                                          l7823 6D22  
                                        l7815 6D12                                          l7807 6D02  
                                        l8711 7B38                                          l8703 6320  
                                        l8551 5A96                                          l8543 5A8E  
                                        l7751 64A0                                          l7743 6466  
                                        l8295 4988                                          l8287 497C  
                                        l8383 4A46                                          l8199 8056  
                                        l8279 8396                                          l9503 6C34  
                                        l9095 7852                                          l9087 7808  
                                        l8537 4DD2                                          l8481 4D12  
                                        l8473 4D0A                                          l8465 4CF4  
                                        l8457 4CB6                                          l9361 417A  
                                        l9353 409C                                          l9345 4084  
                                        l9337 4070                                          l9329 403C  
                                        l7497 5320                                          l7729 5854  
                                        l7569 78CA                                          l7841 8264  
                                        l9281 6820                                          l9273 76DC  
                                        l9249 3950                                          l9185 3770  
                                        l9177 373E                                          l9169 36E4  
                                        l9257 3964                                          l9417 24A0  
                                        l9409 2270                                          l9425 25E6  
                                        l9441 777A                                          l9433 7748  
                                        l7905 7338                                          l7489 765A  
                                        l8633 4714                                          l8625 46F4  
                                        l8641 4744                                          l8617 46A6  
                                        l8609 4622                                          l7681 2EC0  
                                        l7673 2E84                                          l7665 2E52  
                                        l7657 2DE2                                          l7649 2D80  
                                        l7593 2AEA                                          l7825 6D36  
                                        l7817 6D16                                          l7809 6D06  
                                        l7913 816A                                          l8713 7B4C  
                                        l8721 7B6C                                          l8705 634A  
                                        l8561 5B12                                          l8553 5AD6  
                                        l7753 64B8                                          l7921 6F4E  
                                        l8385 80C2                                          l8393 7FF6  
                                        l8801 5F40                                          l9513 6C3A  
                                        l9097 7854                                          l9089 7830  
                                        l9521 4DDE                                          l8491 4D20  
                                        l8483 4D14                                          l8475 4D0C  
                                        l8467 4CF6                                          l8459 4CC6  
                                        l9371 4214                                          l9355 40B0  
                                        l9347 4086                                          l7499 5330  
                                        l7835 824C                                          l9291 6868  
                                        l9283 6830                                          l9275 76EA  
                                        l9195 37A2                                          l9187 3780  
                                        l9427 25E8                                          l9419 252C  
                                        l9435 774A                                          l9443 83A2  
                                        l7907 7344                                          l8651 4762  
                                        l8643 474A                                          l8635 4724  
                                        l8627 4700                                          l8619 46A8  
                                        l7675 2E9C                                          l7667 2E6E  
                                        l7659 2DFE                                          l7595 2AFC  
                                        l7587 2A9E                                          l7827 6D56  
                                        l7819 6D1A                                          l8731 65DA  
                                        l8723 6586                                          l8715 7B58  
                                        l8707 6358                                          l8563 5B20  
                                        l8555 5AE6                                          l8539 5A58  
                                        l7747 646C                                          l7739 6436  
                                        l7931 6F90                                          l7923 6F64  
                                        l7915 6F34                                          l8299 498E  
                                        l8387 7FDA                                          l9099 6D90  
                                        l7851 39FE                                          l7843 39D0  
                                        l9451 5C36                                          l9611 4F00  
                                        l9603 4EF4                                          l9531 4E18  
                                        l9523 4DE4                            doEvuln@eventNumber 053D  
                                        l8493 4D22                                          l8485 4D16  
                                        l8477 4D0E                                          l8469 4CFA  
                                        l9373 4228                                          l9357 416A  
                                        l9349 4096                                          l9365 4192  
                                        l7685 576A                                          l7781 4616  
                                        l7773 4596                                          l7765 4436  
                                        l7837 8252                                          l7829 824A  
                                        l9293 6872                                          l9285 6846  
                                        l9277 76FA                                          l9189 3782  
                                        l8397 50A2                                          l9429 25F8  
                                        l9381 1ED8                                          l9437 7764  
                                        l7909 739A                                          l8661 4790  
                                        l8637 4734                                          l8629 4704  
                                        l7677 2EA4                                          l7669 2E74  
                                        l7597 2B02                                          l7589 2AC0  
                                        l8733 65E0                                          l8725 658A  
                                        l8717 7B5C                                          l8565 5B2E  
                                        l8557 5AF4                                          l7757 64BE  
                                        l7749 6488                                          l7941 6FB8  
                                        l7933 6F92                                          l7925 6F66  
                                        l7917 6F36                                          l8389 7FEA  
                                        l7861 3B4A                                          l7845 39E6  
                                        l8805 5F70                                          l8821 721C  
                                        l8813 71C6                                          l8901 7C0E  
                                        l9461 5C48                                          l9453 5C3C  
                                        l9621 4F02                                          l9605 4EF4  
                                        l9541 4E42                                          l9533 4E24  
                                        l9525 4DEC                                          ?_pop 0501  
                                        l8495 4D24                                          l8487 4D18  
                                        l8479 4D10                                          l9375 4236  
                                        l9359 4178                                          l9367 41C8  
                                        l7695 576E                                          l7783 461A  
                                        l7775 4600                                          l7767 4594  
                                        l7839 8254                                          l7951 613A  
                                        l9295 6890                                          l9287 684E  
                                        l9279 7704                                          l8399 50B0  
                                        l9383 1EE2                                          l9439 7776  
                                        l9447 83A6                                          l8663 47A0  
                                        l8639 4738                                          l7679 2EB6  
                                        l7599 2B0A                                          l8727 65C4  
                                        l8719 7B68                                          l8567 5B32  
                                        l8559 5B02                                          l7759 64C0  
                                        l9711 837E                                          l7935 6FA2  
                                        l7927 6F78                                          l7919 6F4C  
                                        l8583 7F2A                                          l8575 7F10  
                                        l7863 3B5A                                          l7855 3A12  
                                        l7847 39F6                                          l8807 5F74  
                                        l8815 71DC                                          l8911 718E  
                                        l8903 7146                                          l8831 4B4C  
                                        l8823 4AF6                                          l8591 7044  
                                        l9471 5C8C                                          l9631 4F0E  
                                        l9623 4F06                                          l9607 4EF8  
                                        l9551 4E7C                                          l9543 4E46  
                                        l9527 4DF0                                          l8497 4D42  
                                        l8489 4D1A                                          l9369 41DA  
                                        l7697 578E                                          l7777 4602  
                                        l7961 6160                                          l7953 613E  
                                        l7945 6122                                          l8585 82A4  
                                        l9297 68A0                                          l9289 685A  
                                        l9393 1EFA                                          l8657 4764  
                                        l8665 47A4                                          l8649 474E  
                                        l8729 65D6                                          l8737 65F8  
                                        l9713 423E                                          l8569 5B42  
                                        l8745 830A                                          l7937 6FA4  
                                        l7929 6F7A                                          l8577 7F24  
                                        l8753 828A                                          l7793 6C82  
                                        l7873 3BEC                                          l7865 3BA4  
                                        l7857 3A20                                          l7849 39FC  
                                        l8809 5F82                                          l8817 71EC  
                                        l8913 71AA                                          l8905 714E  
                                        l8841 4BA4                                          l8833 4B5C  
                                        l8825 4B0C                                          l8593 7058  
                                        l9481 5CA8                                          l9641 4F1C  
                                        l9633 4F10                                          l9625 4F08  
                                        l9609 4EFC                                          l9561 4EAE  
                                        l9553 4E7E                                          l9545 4E62  
                                        l9529 4E0A                                          l9377 835E  
                                        l8499 4D44                                          l7699 5790  
                                        l7779 4612                                          l7971 6196  
                                        l7963 6172                                          l7955 614C  
                                        l7947 6124                                          l8587 82A8  
                                        l9299 68A2                                          l9395 1F86  
                                        l9379 1ED0                                          l8659 478E  
                                        l9731 42A8                                          l9715 4252  
                                        l8691 8336                                          l7939 6FB4  
                                        l8683 8234                                          l8755 828E  
                                        l7795 6C92                                          l7787 6C6C  
                                        l7891 3CA2                                          l7875 3C4C  
                                        l7867 3BEA                                          l7859 3A32  
                                        l7883 3C6C                                          l8907 715E  
                                        l8843 4BB4                                          l8851 4BF6  
                                        l8827 4B1C                                          l8931 5BA8  
                                        l8923 5B7C                                          l8915 5B4E  
                                        l8771 70D2                                          l9491 6BF4  
                                        l8595 7068                                          l9483 5CB8  
                                        l9475 5C92                                          l9467 5C4A  
                                        l9459 5C48                                          l9651 4F42  
                                        l9635 4F12                                          l9627 4F0A  
                                        l9619 4F02                                          l9571 4ED6  
                                        l9563 4EBC                                          l9643 4F22  
                                        l9555 4E82                                          l9547 4E6C  
                                        l9539 4E2C                                          l7973 61AC  
                                        l7965 617A                                          l7981 61C2  
                                        l7957 6154                                          l7949 6132  
                                        l9397 2012                                          l9389 1EE4  
                                        l8669 47AC                                          l8693 62A4  
                                        l9741 42E4                                          l9733 42C0  
                                        l9725 4296                                          l9717 4264  
                                        l8749 8354                                          l8677 822A  
                                        l8765 8294                                          l7789 6C7C  
                                        l7885 3C7E                                          l7877 3C4E  
                                        l8845 4BD6                                          l8853 4C08  
                                        l8837 4B8C                                          l8933 5BAC  
                                        l8925 5B80                                          l8917 5B56  
                                        l8773 70EC                                          l8781 7128  
                                        l9901 1726                                          l9661 5D1E  
                                        l8597 707A                                          l8589 7042  
                                        l9477 5C96                                          l9469 5C66  
                                        l9653 4F44                                          l9645 4F26  
                                        l9637 4F14                                          l9629 4F0C  
                                        l9573 4ED6                                          l9557 4E86  
                                        l9549 4E7A                                          l7983 61D2  
                                        l7975 61B4                                          l7967 6182  
                                        l7959 6158                                          l7991 64D8  
                                        l8767 8384                                          l9399 209E  
                                        l8695 62CE                                          l9743 42EA  
                                        l9735 42C8                                          l9719 4280  
                                        l8951 7F84                                          l8679 822E  
                                        l7799 6C98                                          l7879 3C66  
                                        l8791 5ECE                                          l8863 8068  
                                        l8871 7C22                                          l8855 4C16  
                                        l8847 4BDC                                          l8839 4B9C  
                                        l8943 5C1A                                          l8927 5B90  
                                        l8935 5BC6                                          l8919 5B66  
                                        l8775 70FC                                          l9903 1746  
                                        l9495 6BFA                                          l9663 5D36  
                                        l9807 3D5E                                          l9815 3D82  
                                        l8599 7098                                          l9487 5D04  
                                        l9479 5C98                                          l9655 4F48  
                                        l9647 4F2A                                          l9639 4F18  
                                        l9591 4EE8                                          l9575 4EDA  
                                        l9559 4E9C                                          l7985 61DA  
                                        l7977 61B6                                          l7969 6190  
                                        l7993 64E6                                          l9745 4304  
                                        l9753 4310                                          l9737 42D0  
                                        l9729 429C                                          l8961 7F90  
                                        l8945 7F7A                                          l8689 823A  
                                        l7897 3CAC                                          l7889 3C84  
                                        l8793 5EDE                                          l8865 806C  
                                        l8881 7C46                                          l8937 5BD8  
                                        l8929 5B98                                          l8777 7122  
                                        l8785 712E                                          l8769 70C2  
                                        l9921 17B8                                          l9913 1770  
                                        l9905 1764                                          l9489 6BD4  
                                        l9673 5D60                                          l9841 3EBC  
                                        l9825 3DA4                                          l9809 3D7C  
                                        l9657 4F4A                                          l9649 4F3E  
                                        l9593 4EEC                                          l9577 4EDE  
                                        l7979 61BC                                          l7995 64EE  
                                        l8699 62DA                                          l9763 434A  
                                        l9755 432A                                          l9747 430A  
                                        l9739 42DE                                          l8955 7F8A  
                                        l8947 7F7E                                          l8971 75AA  
                                        l8963 7586                                          l7899 3CB0  
                                        l8867 807A                                          l8883 7C4A  
                                        l8859 4C4A                                          l8939 5BE6  
                                        l9923 17D6                                          l9907 176A  
                                        l9683 5D88                                          l9667 5D3C  
                                        l9827 3DD0                                          l9819 3D88  
                                        l9659 4F4C                                          l9595 4EF0  
                                        l9587 4EE6                                          l9579 4EE2  
                                        l9771 7E3A                                          l7997 64F2  
                                        l7989 64D6                                          l9765 442A  
                                        l9757 4342                                          l8981 5DF8  
                                        l8973 75BC                                          l8965 7596  
                                        l8797 5F0E                                          l8789 5ECC  
                                        l8869 82DA                                          l8885 7C5A  
                                        l8877 7C26                                          l8893 7BDA  
                                        l9933 17F8                                          l9941 181A  
                                        l9685 5DA0                                          l9861 3F84  
                                        l9853 3EFA                                          l9837 3DE0  
                                        l9589 4EE6                                          l9781 7E54  
                                        l7999 6500                                          l8991 5E66  
                                        l8983 5E00                                          l8975 75CA  
                                        l8799 5F2E                                          l8879 7C34  
                                        l8895 7BE8                                          l8887 7BD6  
                                        l9943 181C                                          l9919 1798  
                                        l9679 5D82                                          l9863 3F94  
                                        l9855 3F10                                          l9847 3ED0  
                                        l9839 3E86                                          l9783 7E64  
                                        l8993 5E74                                          l8985 5E32  
                                        l8977 75F0                                          l8969 759C  
                                        l8897 7BFA                                          l9697 5DBE  
                                        l9865 3F9A                                          l9857 3F6E  
                                        l9793 3CFC                                          l9785 3CB8  
                                        l9881 7DCA                                          l9873 7DC2  
                                        l9777 7E3E                                          l8995 5E88  
                                        l8899 7BFE                                          l9947 1822  
                                        l9859 3F74                                          l9795 3D1C  
                                        l9787 3CD6                                          l9891 7DFC  
                                        l9883 7DDE                                          l9875 7DC6  
                                        l9779 7E52                                          l8997 5EAA  
                                        l8989 5E38                                          l9981 197C  
                                        l9965 18E8                                          l9949 1846  
                                        l9893 16F8                                          l9797 3D3A  
                                        l9789 3CF6                                          l9885 7DE0  
                                        l8999 5EC8                                          l9991 19B8  
                                        l9975 1924                                          l9959 1870  
                                        l9895 16FC                                          l9799 3D58  
                                        l9887 7DF0                                          l9897 1720  
                                        l9889 7DFA                                          l9997 1A20  
                      __end_of_checkPowerOnPb 677A                                          u5000 581C  
                                        u5001 5818                                          u5010 5852  
                                        _T2PR 0323                                          u5011 584E  
                                        u5020 5864                                          u5100 6D36  
                                        u5021 5860                                          u5101 6D32  
                                        u5110 6D56                                          u5030 6466  
                                        u5111 6D52                                          u5031 6462  
                                        u6000 634A                                          u5040 64A0  
                                        u5200 3CA2                                          u6001 6346  
                                        u5041 649C                                          u5201 3C9E  
                                        _IPR5 0367                                          u4410 82D0  
                                        u5130 8264                                          u5210 73AE  
                                        u6010 7B86                                          u5050 64B8  
                                        _T4PR 032F                                          u4411 82CC  
                                        u5131 8260                                          u5211 73AA  
                                        u6011 7B82                                          u5051 64B4  
                                        u4500 7468                                          u4420 7B98  
                                        u5300 6172                                          u5060 64D0  
                                        u5220 6F4C                                          u5140 39F6  
                                        u6100 4B1C                                          u4501 7464  
                                        u4421 7B94                                          u5301 616E  
                                        u5061 64CC                                          u5221 6F48  
                                        u5141 39F2                                          u6101 4B18  
                                        u4510 747E                                          u4430 7BCE  
                                        u5070 4612                                          u5310 6190  
                                        u6030 65D6                                          u5230 6F64  
                                        u5150 3A0E                                          u6110 4B5C  
                                        u4511 747A                                          u4431 7BCA  
                                        u5071 460E                                          u5311 618C  
                                        u6031 65D2                                          u5231 6F60  
                                        u5151 3A0A                                          u6111 4B58  
                                        u5400 7D50                                          u4440 73E2  
                                        u4600 7800                                          u4520 8332  
                                        u5320 61AC                                          u5128 6D7A  
                                        u6024 65A0                                          u5240 6F78  
                                        u5080 6C7C                                          u5160 3A32  
                                        u6120 4B9C                                          u6200 5B66  
                                        u6040 70D2                                          u7000 3DA0  
                           doEvuln@nodeNumber 053B                                          u5401 7D4C  
                                        u4441 73DE                                          u4601 77FC  
                                        u4521 832E                                          u5321 61A8  
                                        u5129 6D8C                                          u6025 659C  
                                        u5241 6F74                                          u5081 6C78  
                                        u5161 3A2E                                          u6121 4B98  
                                        u6201 5B62                                          u6041 70CE  
                                        u7001 3D9C                                          u5410 7D80  
                                        u4450 6FD0                                          u4530 6A12  
                                        u4610 7AA2                                          u5330 61D2  
                                        u5250 6F90                                          u5090 6C92  
                                        u5170 3B5A                                          u6130 4BB4  
                                        u6210 5B90                                          u6050 70EC  
                                        u7010 3ECC                                          u5411 7D7C  
                                        u4451 6FCC                                          u4531 6A0E  
                                        u4611 7A9E                                          u5331 61CE  
                                        u5251 6F8C                                          u5091 6C8E  
                                        u5171 3B56                                          u6131 4BB0  
                                        u6211 5B8C                                          u6051 70E8  
                                        u7011 3EC8                                          u4460 6FE8  
                                        u4540 6A2A                                          u4620 7ADC  
                                        u5340 64E6                                          u5500 7C90  
                                        u4700 7E9E                                          u5420 6AB2  
                                        u5260 6FA2                                          u6300 548A  
                                        u5180 3C5E                                          u6140 4C16  
                                        u6220 5BA8                                          u6060 70FC  
                                        u7100 1794                                          u7020 3EE6  
                                        u4461 6FE4                                          u4541 6A26  
                                        u4621 7AD8                                          u5341 64E2  
                                        u5501 7C8C                                          u4701 7E9A  
                                        u5421 6AAE                                          u5261 6F9E  
                                        u6301 5486                                          u5181 3C5A  
                                        u6141 4C12                                          u6221 5BA4  
                                        u6061 70F8                                          u7101 1790  
                                        u7021 3EE2                                          u4470 7028  
                                        u4550 6A3A                                          u5350 6500  
                                        u4630 7256                                          u4710 6ED8  
                                        u5430 6B38                                          u5270 6FB4  
                                        u5510 801A                                          u5190 3C7E  
                                        u6070 5EDE                                          u6150 7C46  
                                        u6230 5BE6                                          u7110 17B8  
                                        u7030 3EFA                                          u4471 7024  
                                        u4551 6A36                                          u5351 64FC  
                                        u4631 7252                                          u4711 6ED4  
                                        u5431 6B34                                          u5271 6FB0  
                                        u5511 8016                                          u5191 3C7A  
                                        u6071 5EDA                                          u6151 7C42  
                                        u6231 5BE2                                          u7111 17B4  
                                        u7031 3EF6                                          u4800 7960  
                                        u4480 703C                                          u4560 6A58  
                                        u5280 6132                                          u5360 651A  
                                        u5440 7AF8                                          u4640 7284  
                                        u4720 6F18                                          u5520 68DE  
                                        u8000 2972                                          u5600 799E  
                                        u6240 7596                                          u6320 5522  
                                        u6400 7A6E                                          u6080 5F40  
                                        u6160 7C5A                                          u7200 19B4  
                                        u7120 17D6                                          u7040 3F10  
                                        u4801 795C                                          u4481 7038  
                                        u4561 6A54                                          u5281 612E  
                                        u5361 6516                                          u5441 7AF4  
                                        u4721 6F14                                          u5521 68DA  
                                        u8001 296E                                          u5601 799A  
                                        u6241 7592                                          u6321 551E  
                                        u6401 7A6A                                          u6081 5F3C  
                                        u6161 7C56                                          u7201 19B0  
                                        u7121 17D2                                          u7041 3F0C  
                                        u4490 7458                                          u4570 6A84  
                                        u4810 558E                                          u5290 614C  
                                        u5370 6538                                          u6410 367E  
                                        u5450 7B14                                          u4650 72B4  
                                        u4730 6F30                                          u5530 68F6  
                                        u8010 29AC                                          u5610 79BE  
                                        u6250 75BC                                          u6330 7EEA  
                                        u6090 71EC                                          u6170 7BFA  
                                        u7210 1A44                                          u7130 17F4  
                                        u7050 3F94                                          u4491 7454  
                                        u4571 6A80                                          u4811 558A  
                                        u5291 6148                                          u5371 6534  
                                        u6411 367A                                          u5451 7B10  
                                        u4651 72B0                                          u4731 6F2C  
                                        u5531 68F2                                          u8011 29A8  
                                        u5611 79BA                                          u6251 75B8  
                                        u6331 7EE6                                          u6091 71E8  
                                        u6171 7BF6                                          u7211 1A40  
                                        u7131 17F0                                          u7051 3F90  
                                        u4580 6A98                                          u4820 55A2  
                                        u5380 654E                                          u5460 51F6  
                                        u6340 7DC0                                          u6500 387A  
                                        u6420 36DE                                          u5700 5112  
                                        u4740 59CA                                          u4660 74AE  
                                        u4900 2C22                                          u5540 6916  
                                        u8020 29E8                                          u5620 79CE  
                                        u6260 5E32                                          u6180 7C0E  
                                        u7300 1BA0                                          u7220 1A68  
                                        u7140 1816                                          u8100 3374  
                                        u7060 7DF0                                          u4581 6A94  
                                        u4821 559E                                          u5381 654A  
                                        u5461 51F2                                          u6341 7DBC  
                                        u6501 3876                                          u6421 36DA  
                                        u5701 510E                                          u4741 59C6  
                                        u4661 74AA                                          u4645 727A  
                                        u4901 2C1E                                          u5541 6912  
                                        u8021 29E4                                          u5621 79CA  
                                        u6261 5E2E                                          u6181 7C0A  
                                        u7301 1B9C                                          u7221 1A64  
                                        u7141 1812                                          u8101 3370  
                                        u7061 7DEC                                          u4590 77B6  
                                        u4830 55B0                                          u5390 6572  
                                        u5470 520E                                          u6510 38B2  
                                        u6430 3718                                          u5710 512C  
                                        u4750 5A1E                                          u4670 74DC  
                                        u4910 2C3A                                          u5550 6934  
                                        u8030 2A1E                                          u5630 6976  
                                        u6270 5E74                                          u6318 54F4  
                                        u6190 715E                                          u7310 1BD0  
                                        u7230 1A86                                          u7150 1846  
                                        u7070 1720                                          u8110 33E0  
                                        u6350 783E                                          u4591 77B2  
                                        u4831 55AC                                          u5391 656E  
                                        u5471 520A                                          u6511 38AE  
                                        u6431 3714                                          u5711 5128  
                                        u4751 5A1A                                          u4911 2C36  
                                        u5551 6930                                          u8031 2A1A  
                                        u5631 6972                                          u6271 5E70  
                                        u6319 5508                                          u6191 715A  
                                        u7311 1BCC                                          u7231 1A82  
                                        u7151 1842                                          u7071 171C  
                                        u8111 33DC                                          u6351 783A  
                                        u4840 5606                                          u6600 6846  
                                        u6520 38E8                                          u6440 3750  
                                        u5720 5144                                          u4760 761A  
                                        u4680 7506                                          u4920 2C56  
                                        u5800 5B12                                          u8040 2A5A  
                                        u5560 804A                                          u5480 6640  
                                        u5640 6992                                          u6280 5E88  
                                        u7400 1D34                                          u7320 1BF4  
                                        u7240 1AAE                                          u7160 186C  
                                        u7080 1746                                          u8120 33FC  
                                        u6360 7864                                          u4841 55FE  
                                        u6601 6842                                          u6521 38E4  
                                        u6441 374C                                          u5721 5140  
                                        u4761 7616                                          u4681 7502  
                                        u4921 2C52                                          u5801 5B0E  
                                        u8041 2A56                                          u5561 8046  
                                        u5481 663C                                          u5641 698E  
                                        u6281 5E84                                          u7401 1D30  
                                        u7321 1BF0                                          u7241 1AAA  
                                        u7161 1868                                          u7081 1742  
                                        u8121 33F8                                          u6361 7860  
                                        u6610 6868                                          u6530 38FE  
                                        u6450 3766                                          u5490 7C80  
                                        u4770 7630                                          u4690 7E88  
                                        u4930 2C6E                                          u5810 5B20  
                                        u5570 6E4C                                          u5730 7FBA  
                                        u6370 6DA0                                          u6290 6B4C  
                                        u8210 61F6                                          u5650 7ECC  
                                        u7410 1D58                                          u7330 1C12  
                                        u7250 1AD2                                          u7170 190C  
                                        u7090 1764                                          u8130 342E  
                                        u8050 7E2A                                          u6611 6864  
                                        u6531 38FA                                          u6451 3762  
                                        u5491 7C7C                                          u4771 762C  
                                        u4675 74D2                                          u4691 7E84  
                                        u4931 2C6A                                          u5811 5B1C  
                                        u5571 6E48                                          u5731 7FB6  
                                        u6371 6D9C                                          u6291 6B48  
                                        u8211 61F2                                          u5651 7EC8  
                                        u7411 1D54                                          u7331 1C0E  
                                        u7251 1ACE                                          u7171 1908  
                                        u7091 1760                                          u8131 342A  
                                        u8051 7E26                                          u5740 4CD8  
                                        u4780 5330                                          u4860 564A  
                                        u6620 6890                                          u6540 3918  
                                        u6460 3780                                          u8300 60D8  
                                        u6700 25F8                                          u5900 46C4  
                                        u4940 2C7E                                          u5820 5B42  
                                        u5580 6E8C                                          u5660 49CA  
                                        u6380 6DC0                                          u8220 620C  
                                        u7420 1D76                                          u7340 1C42  
                                        u7260 1AF0                                          u7180 1920  
                                        u7500 0A34                                          u8140 3490  
                                        u8060 32B0                                          u5741 4CD4  
                                        u4781 532C                                          u4861 5646  
                                        u6621 688C                                          u6541 3914  
                                        u6461 377C                                          u8301 60D4  
                                        u6701 25F4                                          u5901 46C0  
                                        u4941 2C7A                                          u5821 5B3E  
                                        u5581 6E88                                          u5661 49C6  
                                        u6381 6DBC                                          u8221 6208  
                                        u7421 1D72                                          u7341 1C3E  
                                        u7261 1AEC                                          u7181 191C  
                                        u7501 0A30                                          u8141 348C  
                                        u8061 32AC                                          u8205 78BA  
                                        u6630 3FFE                                          u4790 5390  
                                        u6550 3934                                          u6470 379C  
                                        u8310 60EC                                          u6710 7748  
                                        u5910 46D4                                          u4950 2E9C  
                                        u4870 2AC0                                          u5750 5A74  
                                        u5590 6EA4                                          u5670 4A42  
                                        u6390 7A4C                                          u7430 1DC4  
                                        u7350 1C66                                          u7270 1B02  
                                        u7190 19A0                                          u7510 0C18  
                                        u8150 34EA                                          u8070 32D6  
                                        u5830 7058                                          u6631 3FFA  
                                        u4791 538C                                          u6551 3930  
                                        u6471 3798                                          u8311 60E8  
                                        u6711 7744                                          u5911 46D0  
                                        u4951 2E98                                          u4871 2ABC  
                                        u5751 5A6E                                          u5591 6EA0  
                                        u6391 7A48                                          u7431 1DC0  
                                        u7351 1C62                                          u7271 1AFE  
                                        u7191 199C                                          u7511 0C14  
                                        u8151 34E6                                          u8071 32D2  
                                        u5831 7054                                          u6640 4024  
                                        u6560 394A                                          u6480 37B2  
                                        u8320 6016                                          u8400 66FA  
                                        u6720 7764                                          u5920 46F4  
                                        u4960 2EB6                                          u4880 2AD6  
                                        u5760 5A76                                          u5680 7FEA  
                                        u8240 624C                                          u7360 1C84  
                                        u7280 1B5E                                          u6800 6C18  
                                        u7600 0E3E                                          u7520 0C52  
                                        u8160 354C                                          u8080 32F8  
                                        u5840 7068                                          u7440 4F78  
                                        u6641 4020                                          u6561 3946  
                                        u6481 37AE                                          u8321 6012  
                                        u8401 66F6                                          u6721 7760  
                                        u5921 46F0                                          u4961 2EB2  
                                        u4881 2AD2                                          u5681 7FE6  
                                        u8241 6248                                          u7361 1C80  
                                        u7281 1B5A                                          u6801 6C14  
                                        u7601 0E3A                                          u7521 0C4E  
                                        u8161 3548                                          u8081 32F4  
                                        u5841 7064                                          u7441 4F74  
                                        u6650 4096                                          u4970 57A0  
                                        u4858 5608                                          u6570 3960  
                                        u6490 37C8                                          u8330 602A  
                                        u5690 50FA                                          u8410 6712  
                                        u6730 7790                                          u5930 4714  
                                        u4890 2AFC                                          u5770 5A8E  
                                        u8250 625E                                          u7370 1CB4  
                                        u7290 1B82                                          u7610 0E8A  
                                        u7530 0C6E                                          u8170 35A4  
                                        u8090 3314                                          u5850 707A  
                                        u6810 4E18                                          u7450 4FAE  
                                        u6651 4092                                          u4971 579C  
                                        u6571 395C                                          u6491 37C4  
                                        u8331 6026                                          u5691 50F6  
                                        u8411 670E                                          u6731 778C  
                                        u5931 4710                                          u4891 2AF8  
                                        u5771 5A8A                                          u8251 625A  
                                        u7371 1CB0                                          u7291 1B7E  
                                        u7611 0E86                                          u7531 0C6A  
                                        u8171 35A0                                          u8091 3310  
                                        u5851 7076                                          u6811 4E14  
                                        u7451 4FAA                                          u6660 40AC  
                                        u4980 57B2                                          u8260 569A  
                                        u6580 76EA                                          u8420 672A  
                                        u8340 7A1E                                          u5940 4724  
                                        u6900 42C0                                          u5780 5AE6  
                                        u7380 1CD8                                          u7700 116E  
                                        u7540 0D12                                          u5860 7098  
                                        u8180 7884                                          u6820 4E62  
                                        u7460 4FDE                                          u6661 40A8  
                                        u4981 57AE                                          u8261 5696  
                                        u6581 76E6                                          u8421 6726  
                                        u8341 7A1A                                          u5941 4720  
                                        u6901 42BC                                          u5781 5AE2  
                                        u5677 4A38                                          u7381 1CD4  
                                        u7701 116A                                          u7541 0D0E  
                                        u5861 7094                                          u8181 7880  
                                        u6821 4E5E                                          u7461 4FDA  
                                        u6670 41DA                                          u4990 57CC  
                                        u8270 56E4                                          u6590 7724  
                                        u8430 6748                                          u5950 4734  
                                        u6910 4304                                          u5790 5AF4  
                                        u8238 6218                                          u7390 1CF6  
                                        u7710 11A8                                          u7630 0EEE  
                                        u7550 0D34                                          u8510 3080  
                                        u5870 70B6                                          u8190 78B6  
                                        u6750 5C8C                                          u6830 4E9C  
                                        u7470 5016                                          u8350 58A8  
                                        u6671 41D6                                          u4991 57C8  
                                        u8271 56E0                                          u6591 7720  
                                        u8431 6744                                          u5951 4730  
                                        u6911 4300                                          u5791 5AF0  
                                        u8239 6234                                          u7391 1CF2  
                                        u7711 11A4                                          u7631 0EEA  
                                        u7551 0D30                                          u8511 307C  
                                        u5871 70B2                                          u8191 78B0  
                                        u6751 5C88                                          u6831 4E98  
                                        u7471 5012                                          u8351 58A4  
                                        u6680 4214                                          u8440 6764  
                                        u5960 4762                                          u5880 465C  
                                        u6920 4342                                          u6840 5D36  
                                        u7800 15D0                                          u7720 11F4  
                                        u7640 0F28                                          u7560 0D56  
                                        u8520 309A                                          u6760 5CA8  
                                        u7480 5072                                          u8360 58F2  
                                        u6681 4210                                          u8441 6760  
                                        u6745 779A                                          u5961 475E  
                                        u5881 4658                                          u6921 433E  
                                        u6841 5D32                                          u7801 15CC  
                                        u7721 11F0                                          u7641 0F24  
                                        u7561 0D52                                          u8521 3096  
                                        u6761 5CA4                                          u7481 506E  
                                        u8361 58EE                                          u8290 574E  
                                        u8450 6774                                          u6690 1EF6  
                                        u6746 779C                                          u5970 47A0  
                                        u5890 46A0                                          u7810 2612  
                                        u6850 5D5C                                          u7730 127C  
                                        u7650 0F5A                                          u7570 0D72  
                                        u7490 0A18                                          u8610 3238  
                                        u8530 30C6                                          u6770 5CB8  
                                        u6930 7E64                                          u8291 574A  
                                        u8451 6770                                          u6691 1EF2  
                                        u5971 479C                                          u5891 469C  
                                        u7811 260E                                          u6851 5D58  
                                        u7731 1278                                          u7651 0F56  
                                        u7571 0D6E                                          u7491 0A14  
                                        u8611 3234                                          u8531 30C2  
                                        u6771 5CB4                                          u6931 7E60  
                                        u7900 2782                                          u7820 264E  
                                        u5980 8346                                          u6860 5D7E  
                                        u6940 3CD6                                          u7660 0FE4  
                                        u7628 0EC2                                          u7580 0DAC  
                                        u8620 3256                                          u8508 305A  
                                        u8460 2F22                                          u6780 5D1C  
                                        u8380 595C                                          u8700 6398  
                                        u7901 277E                                          u7821 264A  
                                        u5981 8342                                          u6861 5D7A  
                                        u6941 3CD2                                          u7661 0FE0  
                                        u7629 0ED4                                          u7581 0DA8  
                                        u8621 3252                                          u8509 306C  
                                        u8461 2F1E                                          u6781 5D18  
                                        u8381 5958                                          u8701 6394  
                                        u8390 66E2                                          u5990 62CE  
                                        u7910 2798                                          u7830 265C  
                                        u6790 6BF4                                          u6870 5DA0  
                                        u6950 3CF6                                          u7670 1026  
                                        u7590 0E22                                          u8630 3266  
                                        u8550 3118                                          u8470 2F82  
                                        u8710 63AA                                          u8391 66DE  
                                        u5991 62CA                                          u7911 2794  
                                        u7831 2658                                          u6791 6BF0  
                                        u6871 5D9C                                          u6951 3CF2  
                                        u7671 1022                                          u7591 0E1E  
                                        u8631 3262                                          u8551 3114  
                                        u8471 2F7E                                          u8711 63A6  
                                        u8288 572A                                          u6880 4264  
                                        u7920 27EC                                          u7840 26A0  
                                        u6960 3D1C                                          u8640 328C  
                                        u8608 3216                                          u8560 312A  
                                        u8480 2FCA                                          u8720 63BC  
                                        u8289 573C                                          u6881 4260  
                                        u7921 27E8                                          u7841 269C  
                                        u6961 3D18                                          u8641 3288  
                                        u8609 3228                                          u8561 3126  
                                        u8481 2FC6                                          u8721 63B8  
                                        u6890 4296                                          u7930 2808  
                                        u7850 26B4                                          u6970 3D3A  
                                        u7770 1500                                          u7690 10EA  
                                        u8570 3150                                          u8490 3014  
                                        u8378 5938                                          u8730 63F8  
                                        u6891 4292                                          u7931 2804  
                                        u7851 26B0                                          u6971 3D36  
                                        u7771 14FC                                          u7691 10E6  
                                        u8571 314C                                          u8491 3010  
                                        u8379 594A                                          u8731 63F4  
                                        u7940 2844                                          u7860 26E2  
                                        u6980 3D58                                          u7780 154A  
                                        u7748 13CC                                          u8580 317E  
                                        u8548 30F6                                          u7941 2840  
                                        u7861 26DE                                          u6981 3D54  
                                        u7781 1546                                          u7749 13E0  
                                        u8581 317A                                          u8549 3108  
                                        u7950 287E                                          u7870 26F2  
                                        u6990 3D7C                                          u7790 155A  
                                        u7758 144A                                          u8590 31C8  
                                        u7951 287A                                          u7871 26EE  
                                        u6991 3D78                                          u7791 1556  
                                        u7759 145E                                          u8591 31C4  
                                        u7960 28BA                                          u7880 2702  
                                        u7768 14C8                                          u7688 10B0  
                                        u7961 28B6                                          u7881 26FE  
                                        u7769 14DC                                          u7689 10D0  
                                        u7970 28CE                                          u7890 2756  
                                        u8690 637E                                          u7971 28CA  
                                        u7891 2752                                          u8691 637A  
                                        u7980 292A                                          u7981 2926  
                                        u7990 2962                                          u7991 295E  
                     getNumTxBuffersInUse@i16 0505                                          _have 6EA8  
                                        _main 6362                                          _leds 0B7C  
                                        _name 0848                                          _loop 79E4  
                                        _poll 2EC6                    __end_of_mnsTRrqnpnCallback 7F0E  
                                        fsr1h 04E2                                          fsr2h 04DA  
                                        indf1 04E7                                          indf2 04DF  
                                        fsr1l 04E1                                          fsr2l 04D9  
                           ?_removeTableEntry 0501                                          pop@q 0501  
                                        prodh 04F4                                          prodl 04F3  
                                        start 0A02                                  ?_loadNvCache 0501  
                                bootPowerUp@a 0510                                  bootPowerUp@b 050D  
                                bootPowerUp@i 050F                            ??_removeTableEntry 0528  
                               ?_APP_testMode 0501                               getEN@tableIndex 051A  
                                ___param_bank 0000                                ??_APP_addEvent 054E  
                       ?_getNumRxBuffersInUse 0501                             findServiceIndex@i 0504  
                        __end_of_EEPROM_Write 7988                                   _uptimeTimer 0568  
                                       ??_pop 0503                                         l10003 1A48  
                                       l10005 1A68                                         l10031 1B02  
                                       l10023 1AB2                                         l10113 1CFA  
                                       l10105 1CB8                                         l10025 1AD2  
                                       l10017 1A8A                                         l11001 486C  
                                       l10107 1CD8                                         l10211 507C  
                                       l10203 504C                                         l11011 4894  
                                       l11003 487A                                _SPI1TWIDTHbits 0088  
                                       l10133 1D7A                                         l10125 1D38  
                                       l10053 1BA4                                         l10045 1B62  
                                       l10037 1B32                                         l10221 0A52  
                                       l10213 0A06                                         l10205 5060  
                                       l11021 48BC                                         l11013 4898  
                                       l11005 487E                                         l10127 1D58  
                                       l10119 1D10                                         l10047 1B82  
                                       l10039 1B3A                                         l10231 0AA8  
                                       l10223 0A72                                         l10207 5062  
                                       l11111 594C                                         l11103 587C  
                                       l11031 48DA                                         l11023 48C0  
                                       l11015 48A6                                         l11007 4882  
                                       l11113 66D4                                         l10145 1DC8  
                                       l10073 1C16                                         l10065 1BD4  
                                       l10153 1E40                                         l10401 1026  
                                       l10305 0C94                                         l10313 0C9A  
                                       l10241 0AC6                                         l10233 0AB6  
                                       l10225 0A88                                         l10217 0A1C  
                                       l11201 3242                                         l10209 5072  
                                       l11105 58A8                                         l11041 4902  
                                       l11033 48E8                                         l11025 48C4  
                                       l11017 48AA                                         l11009 4890  
                                       l11131 6738                                         l11123 6702  
                                       l11115 66E2                                         l10139 1DA0  
                                       l10067 1BF4                                         l10059 1BAC  
                                       l10411 10D8                                         l10331 0D38  
                                       l10235 0ABC                                         l10227 0A9E  
                                       l10219 0A34                                         l11211 328C  
                                       l11203 3246                                         l10171 4FA0  
                                       l10163 4F50                                         l11107 58F2  
                                       l11051 492A                                         l11043 4906  
                                       l11035 48EC                                         l11027 48D2  
                                       l11019 48AE                                         l11141 6774  
                                       l11125 6712                                         l11117 66EA  
                                       l10093 1C88                                         l10085 1C46  
                                       l10421 1156                                         l10413 10EA  
                                       l10325 0D16                                         l10253 0B74  
                                       l10229 0AA4                                         l10237 0AC0  
                                       l10261 0B94                                         l10317 0CC4  
                                       l11213 3290                                         l11205 3256  
                                       l10181 4FEE                                         l10165 4F6A  
                                       l11109 594A                                         l11061 4948  
                                       l11053 492E                                         l11045 4914  
                                       l11037 48F0                                         l11029 48D6  
                                       l11135 674C                                         l11127 671A  
                                       l11119 66FE                                         l10087 1C66  
                                       l10079 1C1E                                         l10511 1624  
                                       l10503 1604                                         l10431 11A8  
                                       l10423 116E                                         l10415 1108  
                                       l10319 0CFA                                         l10263 0BDA  
                                       l10247 0AEC                                         l11207 3266  
                                       l11151 2F82                                         l11143 2EC6  
                                       l10191 502C                                         l10183 5008  
                                       l10175 4FB6                                         l10167 4F78  
                                       l11071 4970                                         l11063 4956  
                                       l11055 4932                                         l11047 4918  
                                       l11039 48FE                                         l11137 6754  
                                       l11129 672A                                         l11081 82F2  
                                       l11073 79E4                                         l10601 2718  
                                       l10521 1646                                         l10513 1626  
                                       l10505 1606                                         l10433 11C2  
                                       l10409 1048                                         l10361 0E3E  
                                       l10353 0DDC                                         l10345 0D90  
                                       l10337 0D5A                                         l10281 0C36  
                                       l10273 0C00                                         l11209 327A  
                                       l11161 2F9E                                         l11153 2F86  
                                       l11145 2F22                                         l10193 5030  
                                       l10185 5016                                         l10177 4FD0  
                                       l10169 4F86                                         l11065 495A  
                                       l11057 4940                                         l11049 491C  
                                       l11139 6764                                         l11083 82F6  
                                       l11075 7A1E                                         l10611 2782  
                                       l10603 271C                                         l10099 1C90  
                                       l10435 11D8                                         l10371 0E8A  
                                       l10355 0DF0                                         l10347 0DAC  
                                       l10339 0D72                                         l10283 0C52  
                                       l10275 0C18                                         l10267 0BE0  
                                       l11171 3080                                         l11163 2FCA  
                                       l11155 2F9A                                         l11147 2F26  
                                       l10195 5044                                         l10187 5022  
                                       l10179 4FDE                                         l11091 586C  
                                       l11067 495E                                         l11059 4944  
                                       l11085 8302                                         l11077 7A22  
                                       l10621 27F2                                         l10613 2798  
                                       l10605 2756                                         l10437 11F4  
                                       l10445 1212                                         l10429 118C  
                                       l10373 0E98                                         l10357 0E12  
                                       l10541 16A0                                         l10293 0C88  
                                       l10285 0C6E                                         l11181 3118  
                                       l11173 3084                                         l11165 3014  
                                       l11149 2F3A                                         l10197 5048  
                                       l10189 5028                                         l10701 7E18  
                                       l11093 5870                                         l11069 496C  
                                       l11261 6386                                         l11087 8304  
                                       l11079 7A36                                         l10623 2808  
                                       l10615 27B0                                         l10607 276A  
                                       l10519 1644                                         l10471 155A  
                                       l10463 151E                                         l10455 14E8  
                                       l10447 127C                                         l10383 0F0C  
                                       l10375 0ED6                                         l10367 0E60  
                                       l10359 0E22                                         l10287 0C82  
                                       l10711 32B0                                         l11183 312A  
                                       l11175 3088                                         l11167 306C  
                                       l10703 7E1A                                         l11095 5874  
                                       l11271 63AC                                         l11263 6388  
                                       l11247 6362                                         l10641 28CE  
                                       l10633 2844                                         l10625 280C  
                                       l10617 27EC                                         l10609 2770  
                                       l10481 1594                                         l10473 1562  
                                       l10529 1664                                         l10465 152E  
                                       l10457 1500                                         l10449 12FC  
                                       l10385 0F28                                         l10377 0EEE  
                                       l10369 0E76                                         l10801 3508  
                                       l10721 32DA                                         l11193 3152  
                                       l11185 3140                                         l11177 309A  
                                       l11169 3070                                         l10705 7E2A  
                                       l11097 587A                                         l11089 5866  
                                       l11281 63D4                                         l11273 63C0  
                                       l11265 6398                                         l10651 292A  
                                       l10643 28D6                                         l10635 287E  
                                       l10627 2820                                         l10619 27F0  
                                       l10571 2600                                         l10483 15AA  
                                       l10475 1566                                         l10467 153A  
                                       l10395 0F78                                         l10387 0F3E  
                                       l10299 0C8E                                         l10803 3532  
                                       l10731 3340                                         l10715 32B6  
                                       l11195 317E                                         l11187 3150  
                                       l11179 30C6                                         l10707 7E34  
                                       l11291 640C                                         l11283 63F8  
                                       l11275 63C4                                         l11267 639A  
                                       l10661 2972                                         l10653 292C  
                                       l10645 28E4                                         l10637 28BA  
                                       l10629 282E                                         l10581 267A  
                                       l10573 2612                                         l10901 624C  
                                       l10485 15D0                                         l10477 1574  
                                       l10469 154A                                         l10397 0FE4  
                                       l10389 0F5A                                         l10805 354C  
                                       l10813 357C                                         l10741 3374  
                                       l10733 3346                                         l10709 3298  
                                       l11197 31C8                                         l11293 640E  
                                       l11285 6400                                         l11277 63CE  
                                       l11269 63AA                                         l10671 2A08  
                                       l10663 29AC                                         l10655 2944  
                                       l10647 28EA                                         l10639 28BE  
                                       l10591 26CA                                         l10583 268E  
                                       l10575 264E                                         l10903 624E  
                                       l10911 6270                                         l10495 15E4  
                                       l10487 15DC                                         l10479 158E  
                                       l10399 100A                                         l10815 3596  
                                       l10751 33AE                                         l10727 32FC  
                                       l11199 3238                                         l11295 6412  
                                       l11287 6406                                         l11279 63D0  
                                       l11801 37E2                                         l10681 2A6C  
                                       l10665 29E8                                         l10673 2A0C  
                                       l10649 28EE                                         l10657 294C  
                                       l10593 26CE                                         l10585 26A0  
                                       l10577 265C                                         l10497 15E6  
                                       l10817 35A4                                         l10825 35D8  
                                       l10753 33D0                                         l10729 3314  
                                       l10737 334C                                         l11289 6408  
                                       l10931 573E                                         l10923 566E  
                                       l11803 3978                                         l10675 2A1E  
                                       l10667 29F6                                         l10659 2962  
                                       l10691 2A7E                                         l10595 26E2  
                                       l10579 2676                                         l10587 26A2  
                                       l10907 6268                                         l10827 35FA  
                                       l10763 3416                                         l10755 33E0  
                                       l10739 3366                                         l10851 7868  
                                       l11805 52FC                                         l10933 574E  
                                       l10925 569A                                         l10917 566C  
                                       l10941 60D8                                         l10677 2A5A  
                                       l10669 29FA                                         l10597 26F2  
                                       l10589 26B4                                         l10765 342E  
                                       l10773 344C                                         l10757 33FC  
                                       l10749 33A8                                         l10861 7870  
                                       l10853 786A                                         l10693 7E00  
                                       l11807 7912                                         l10935 5764  
                                       l10927 56E4                                         l10951 5FB8  
                                       l10679 2A68                                         l10599 2702  
                                       l10791 34D2                                         l10775 3476  
                                       l10839 3604                                         l10871 78A2  
                                       l10863 7874                                         l10847 8192  
                                       l11809 756E                                         l10929 573C  
                                       l10945 60EC                                         l10937 6062  
                                       l10953 6016                                         l10793 34EA  
                                       l10777 3490                                         l10785 34A6  
                                       l10881 78BE                                         l10873 78A4  
                                       l10865 7884                                         l10849 81A4  
                                       l10961 47E2                                         l10939 607A  
                                       l10883 78C0                                         l10875 78A6  
                                       l10867 7898                                         l10859 786E  
                                       l10699 7E04                                         l10971 47FC  
                                       l10963 47EC                                         l10957 602A  
                                       l10949 5FA0                                         l10893 61FA  
                                       l11781 0CE4                                         l10885 78C4  
                                       l10877 78BA                                         l10869 789A  
                                       l10981 4826                                         l10973 47FE  
                                       l10965 47F2                                         l10895 620C  
                                       l11791 1E60                                         l11783 16C0  
                                       l10879 78BC                                         l10887 836C  
                                       l10991 484E                                         l10983 482A  
                                       l10975 4800                                         l10967 47F6  
                                       l11793 6284                                         l10897 6212  
                                       l10889 61E4                                         l11785 3E00  
                                       l11777 3624                                         l10993 4852  
                                       l10985 4838                                         l10977 4814  
                                       l10969 47FA                                         l11795 660E  
                                       l10899 623A                                         l11787 5DDE  
                                       l11779 0BB4                                         l10995 4856  
                                       l10987 483C                                         l10979 4822  
                                       l11797 47C2                                         l11789 6C5A  
                                       l10997 4864                                         l10989 4840  
                                       l11799 5172                                         l10999 4868  
                                       ?_have 0501                                         ?_main 0501  
                              _defaultColours FF59                           processEnumeration@i 051C  
                             __end_of___awdiv 61E4                                         ?_loop 0501  
                             __end_of___awmod 6584                                         ?_poll 0501  
                             __end_of___lldiv 68C4                               ___awdiv@divisor 0503  
                                       _T2CON 0324                                         _T4CON 0330  
                                       _T2HLT 0325                               ?_updateLedRange 0501  
                                       _T4HLT 0331                               reqevCallback@ev 0538  
                        __end_of_factoryReset 576A                                         _T2RST 0327  
                           _initTimedResponse 836C                                         _T4RST 0333  
                                       i2l614 7F76                                ?_APP_nvDefault 0501  
                             ___awdiv@counter 0505                               __end_of_canPoll 8384  
                    __end_of_nvTRnvrdCallback 7A92                               __end_of_doFlash 2600  
            __end_of_factoryResetGlobalEvents 8396                                _APP_nvValidate 839A  
                                       _TMR0H 0319                                         _TMR0L 0318  
                                       _TRISC 04C8                               __end_of_doEvlrn 5F9E  
                             __end_of_doNenrd 71C6                  nvProcessMessage@valueOrError 0558  
                             __end_of_doEvuln 7246                               __end_of_doNnclr 8096  
                             __end_of_doNnevn 7C6E                               __end_of_doReqev 4C6A  
                             __end_of_doReval 5C36                               __end_of_doRqevn 7C22  
                             __end_of_getHash 8288                           ___lmul@multiplicand 0505  
                          ?_initTimedResponse 0501                            __p_paramBlock_text 0820  
                               ?_leds_powerUp 0501                              __end_of_TMR0_ISR 81E4  
                             __end_of_isEvent 7EA6                APP_processConsumedEvent@action 0520  
                                       _canId 05A8                                         _getEN 677A  
                                       _getNN 531E                                         _getNV 7AE6  
                                       _getEv 6964                          _enumerationStartTime 0574  
                             __end_of_readNVM 7586                                         _errno 05A3  
                                       _setNV 6D8E                                         _numEv 8396  
                       __end_of_refreshString 779E                                         have@i 0504  
                       _consumerEventCheckLen 830A                                         _setup 47E2  
                         canReceiveMessage@mp 0514                               __end_of_sendRTR 7D3E  
                __end_of_getNumTxBuffersInUse 72C0                                         main@i 055D  
                             __end_of_mnsPoll 2A9E                                 setNV@oldValue 0518  
                      APP_preProcessMessage@m 0501                               __end_of_tickGet 749E  
                             ?_checkPowerOnPb 0501                                         pclath 04FA  
                                       tablat 04F5                           ??_initTimedResponse 0501  
             mnsTRallDiagnosticsCallback@step 052F               mnsTRallDiagnosticsCallback@type 0501  
                                       poll@i 05F3                                         poll@m 05F4  
                             __end_of_powerUp 595E                       reqevCallback@tableIndex 053C  
                                       status 04D8                                 ?_nvGetESDdata 0501  
                     reqevCallback@nodeNumber 053A                               __end_of_writeEv 6CFC  
                    ?_updateModuleErrorStatus 0501                    __end_of_startTimedResponse 79E4  
                            ?_nvGetDiagnostic 0507                                ??_APP_testMode 050B  
                processEnumeration@enumResult 051A                               __initialization 72C0  
                                __end_of_have 6F34                                  __end_of_main 641E  
                                __end_of_name 0850                                  __end_of_loop 7A3C  
                                __end_of_poll 3298                                 ?_nerdCallback 052E  
                      __end_of_defaultColours FF89                          __end_of_getParameter 4AF6  
                   __end_of_initTimedResponse 8372                        __end_of_APP_nvValidate 839E  
                                      ??_have 0501                                  ?_setNewCanId 0501  
                                      ??_main 055D                              ?_eraseFlashBlock 0501  
                                      ??_loop 050B                                  ?_sendMessage 051B  
                                      ??_poll 05EE                         __end_of_reqevCallback 5ECC  
                               __activetblptr 0003                             ??_consumerEsdData 0501  
                                 readNVM@type 050C                             startEnumeration@i 050C  
                              ??_leds_powerUp 050B              __end_of_canWaitForTxQueueToDrain 8348  
                     APP_postProcessMessage@m 0501                      ??_APP_postProcessMessage 0503  
                                      _C1CONH 0101                                        _C1CONL 0100  
                                      _C1CONT 0103                                        _C1CONU 0102  
                                      ?_getEN 050D                                        ?_getNN 050D  
                                      ?_getNV 0501                                        ?_getEv 050D  
                            __end_of_addEvent 3CB8                                        ?_setNV 0515  
                                _canTransport FFF9                                        ?_numEv 0501  
                            ___awdiv@dividend 0501                                        ?_setup 0501  
                         APP_nvValidate@index 0501                             ??_consumerPowerUp 0501  
                                      _ANSELA 0400                                        _ANSELB 0408  
                                      _ANSELC 0410                                        _MD1SRC 006C  
                         APP_nvValidate@value 0501                                        _RC0PPS 0211  
                                      _RB2PPS 020B                                        _RC1PPS 0212  
                                      _RC2PPS 0213                                        _RC3PPS 0214  
                                      _RC4PPS 0215                                        _RC5PPS 0216  
                            reqevCallback@nEv 0535                                        _RC6PPS 0217  
                                      i2l2111 83B0                                        i2l1853 81E2  
                                      _TABLAT 04F5                       ??_CAN1_OperationModeGet 0501  
                              ??_nvGetESDdata 0501                       ??_CAN1_OperationModeSet 0501  
                                      _NVMADR 0043                                        _TMR0IE 250F  
                                      _TMR0IF 258F                                        _TMR0IP 1B2F  
                            __end_of_checkLen 6964                                  ?_removeEvent 0536  
                              _clearAllEvents 824A                      __end_of_APP_factoryReset 8390  
                                 initTicker@i 0504                             ?_findServiceIndex 0501  
                            _rebuildHashtable 576A                             _canProcessMessage 5D1E  
APP_processConsumedEvent@colourPixelIndexPair 0523                                 teachPowerUp@i 0528  
                    reqevCallback@eventNumber 0536                    __end_of_APP_nvValueChanged 83AE  
                          ??_findServiceIndex 0501                            _processEnumeration 461E  
                          ?_canProcessMessage 0554                    ??_APP_processConsumedEvent 051E  
                      ??_getNumRxBuffersInUse 0501                                teachCheckLen@m 0531  
                                      ___lmul 76CC                      __end_of_mnsGetDiagnostic 8008  
                        consumerEsdData@index 0501                                ??_nerdCallback 0530  
                                      _canPri FFA0                              __end_of_initARGB 4DDE  
                                   ??___awdiv 0505                                        _doNerd 82DA  
                                   ??___awmod 0505                         _APP_preProcessMessage 83A2  
                                      _getEVs 6AA0                                     ??___lldiv 0513  
                               _nvDiagnostics 05BB                                     ??_canPoll 051D  
                                   ??_doFlash 0505                               getParameter@idx 0509  
                                      _memcpy 7B38                                     ??_doEvlrn 0554  
                                   ??_doNenrd 052C                                     ??_doEvuln 053F  
                                   ??_doNnclr 0537                                        clear_0 72E0  
                                      clear_1 72F2                                        clear_2 7300  
                                   ??_doNnevn 052A                                        clear_3 7312  
                                      clear_4 731E                                     ??_doReqev 0534  
                                   ??_doReval 052D                              ___awdiv@quotient 0507  
                             ___awmod@divisor 0503                                     ??_doRqevn 052A  
                         ?_processEnumeration 0501                                        have@id 0503  
                                   ??_getHash 0520                               ??_APP_nvDefault 0509  
                         ??_canProcessMessage 0556                                        isa$std 0001  
                             ___awmod@counter 0505                               ?_APP_nvValidate 0501  
                                      main@t1 055E                                        main@t2 055F  
                                   ??_isEvent 0501                                     ??_readNVM 050A  
                    nerdCallback@serviceIndex 052E                             _canReceiveMessage 423E  
                  __end_of_teachGetDiagnostic 8068                              _nvProcessMessage 3298  
                                   ??_sendRTR 0501                                     ??_mnsPoll 052C  
                                      pop@ret 0508                             ??_mnsFactoryReset 0515  
                                ivt0x900_base 0900                                  __mediumconst FE58  
          APP_processConsumedEvent@tableIndex 051E                                     ??_tickGet 0505  
                            __end_of_services FF95                            _tableIndexToEvtIdx 8378  
                 findServiceIndex@serviceType 0503                                        tblptrh 04F7  
                                      tblptrl 04F6                             doEvlrn@nodeNumber 054E  
                                      tblptru 04F8                                  ??_FLASH_Read 0504  
                           nvProcessMessage@m 0554                        ?_consumerEventCheckLen 0531  
                          ?_canReceiveMessage 0510                                     ??_powerUp 0529  
                      getParameterFlags@flags 0505             mnsTRserviceDiscoveryCallback@step 052F  
           mnsTRserviceDiscoveryCallback@type 0501                       consumerProcessMessage@m 0554  
                        __end_of_APP_addEvent 8206                                     ??_writeEv 0517  
                                __p_name_text 0848                           addEvent@eventNumber 0531  
                nvTRnvrdCallback@valueOrError 0530                              __end_of_writeNVM 792A  
                         ?_tableIndexToEvtIdx 0501                        __end_of_clearAllEvents 826A  
                       mnsGetDiagnostic@index 0509                          ??_processEnumeration 0516  
                            ??_receiveOverrun 0501                                    __accesstop 0560  
                     __end_of__initialization 7332                     __end_of_canProcessMessage 5DF6  
               __end_of_consumerGetDiagnostic 8038                           ??_canReceiveMessage 0512  
                           EEPROM_Write@index 0509                                nvGetESDdata@id 0501  
                            APP_testMode@step 0510                             EEPROM_Write@value 050C  
                               doEvuln@result 053F                                 ___rparam_used 0001  
                          teachCheckLen@learn 0534                                    _eeBootFlag 0594  
                     ??_handleSelfEnumeration 050B                     ?_factoryResetGlobalEvents 0501  
                               ?_teachPowerUp 0501                              FLASH_Write@index 0506  
                           _getParameterFlags 6F34                              FLASH_Write@value 0509  
                              __pcstackCOMRAM 0501     mnsTRserviceDiscoveryCallback@serviceIndex 052E  
                                __pidataBANK5 83AA                                    _canEsdData 8228  
                          ?_getParameterFlags 0501                                     ?_TMR0_ISR 0501  
                               __end_of_getEN 6820                                 __end_of_getNN 5440  
                               __end_of_getNV 7B38                                 __end_of_getEv 6A02  
                          __end_of_FLASH_Read 7428                                 __end_of_setNV 6E1C  
                               __end_of_numEv 839A                                 __end_of_setup 4976  
                        ??_tableIndexToEvtIdx 0501                             _ledPaletteIndexes 0700  
                        _getNumTxBuffersInUse 7246                     __end_of_canReceiveMessage 4434  
                nvTRnvrdCallback@serviceIndex 052E                    __end_of_bootProcessMessage 6C6A  
                  consumerGetDiagnostic@index 0509                           ??_getParameterFlags 0505  
                                  _canService FFEB                             ??_isConsumedEvent 0501  
                                  addEvent@en 0543                                    _canPowerUp 4DDE  
                   reqevCallback@serviceIndex 052E                          __end_of_APP_testMode 423E  
                  rebuildHashtable@tableIndex 0526                               _refreshRequired 05AB  
                                     ??_getEN 050F                                       ??_getNN 050F  
                                     ??_getNV 0503                                       ??_getEv 050F  
                                     ??_setNV 0516                                 ?_sendMessage2 0526  
                               ?_sendMessage3 0526                                 ?_sendMessage4 0526  
                               ?_sendMessage5 0526                                 ?_sendMessage6 0526  
                               ?_sendMessage7 0526                                       ??_numEv 0501  
                       _setupModePreviousMode 059E                                       ??_setup 050B  
                                canEsdData@id 0501                                  readNVM@index 0507  
                    mnsProcessMessage@newMode 055A                             initTicker@divider 0503  
                                _EEPROM_Write 792A                                    __pbssBANK5 0560  
                                  __pbssBANK6 0600                                    __pbssBANK7 0700  
                                  __pbssBANK8 0800                                  loadNvCache@i 0511  
                             ?_clearAllEvents 0501                    startTimedResponse@callback 0506  
                             canSendMessage@m 0517                    APP_processConsumedEvent@ev 0524  
                         setNewCanId@newCanId 0515                     __end_of_getParameterFlags 6FBC  
                              _loadFlashBlock 7A92                                  _factoryReset 566C  
                              ??_teachPowerUp 0528                                 _setLEDsByMode 7CB6  
                                     IVTBASEH 045E                                       IVTBASEL 045D  
                                     IVTBASEU 045F                                 addEvent@evVal 0534  
                               addEvent@evNum 0533                                    __pivt0x900 0900  
                              _canDiagnostics 068E                                   mnsPowerUp@i 050D  
                          mnsProcessMessage@d 0558                            mnsProcessMessage@i 0556  
                          mnsProcessMessage@m 0554                          __end_of_leds_powerUp 81BA  
                                  _bl_version FF95                     ?_canWaitForTxQueueToDrain 0501  
                      ?_APP_preProcessMessage 0501                                       ?___lmul 0501  
                           _bootloaderVersion 05A9                                    ??_TMR0_ISR 0501  
                                     ?_doNerd 0501                                       _C1TRECU 0136  
                                     ?_getEVs 0501                              ??_updateLedRange 0503  
                                     _C1TXQUA 0158                                     _C1FIFOUA1 0164  
                                   _C1FIFOUA2 0170                                     _C1FIFOUA3 017C  
                       ?_getNumTxBuffersInUse 0501                                       ?_memcpy 0501  
                               _C1BDIAG0Hbits 0139                                     ?_addEvent 052F  
                          _mnsTRrqnpnCallback 7EDA                                ___lmul@product 0509  
                               _C1BDIAG0Lbits 0138                                     _C1NBTCFGH 0105  
                                   _C1NBTCFGL 0104                                     _C1NBTCFGT 0107  
                                   _C1NBTCFGU 0106                         _setTimedResponseDelay 835C  
                                     _MD1CARH 006E                                       _MD1CARL 006D  
                                     _MD1CON0 006A                                       _MD1CON1 006B  
                        __end_of_nvGetESDdata 8228                                       _CLCnCON 00D6  
                                     _CLCnPOL 00D7                                       _DMAnDSA 00F0  
                                     _DMAnDSZ 00EE                              _canGetDiagnostic 662E  
                                  _flashBlock 0584                                       _DMAnSSA 00F9  
                                  _flashFlags 059B                                       _DMAnSSZ 00F7  
                               ??_DEFAULT_ISR 0501                                       i2l11221 7F5E  
                                     i2l11231 81BC                                       i2l11223 7F6C  
                                     i2l11215 7F44                                       i2l11233 81CA  
                                     i2l11225 7F72                                       i2l11217 7F54  
                                     i2l11235 81CC                                       i2l11219 7F5A  
                                     i2l11237 81D0                                       i2l11239 81E0  
                                _DMAnCON0bits 00FC                                     ?_checkLen 052C  
                                _DMAnCON1bits 00FD                                    _flashState 05AC  
                           ?_nvTRnvrdCallback 052E                             reqevCallback@step 052F  
                         ?_mnsTRrqnpnCallback 052E                              ??_checkPowerOnPb 053C  
                                     _IVTLOCK 0459                                       _TBLPTRH 04F7  
                                     _TBLPTRL 04F6                                       _TBLPTRU 04F8  
                                   _C1TXQCONH 0151                                     _C1TXQCONL 0150  
             flushFlashBlock@interruptEnabled 0505                                     _C1TXQCONT 0153  
                                   _C1TXQCONU 0152                                       _NVMADRH 0044  
                                     _NVMADRL 0043                                       _SPI1TXB 0081  
                                     _NVMADRU 0045                                       _NVMDATL 0046  
                          ??_nvTRnvrdCallback 0530                                   _C1FIFOCON1H 015D  
                                 _C1FIFOCON2H 0169                                   _C1FIFOCON1L 015C  
                                 _C1FIFOCON3H 0175                                   _C1FIFOCON2L 0168  
                                 _C1FIFOCON3L 0174                                   _C1FIFOCON1T 015F  
                                 _C1FIFOCON1U 015E                                   _C1FIFOCON2T 016B  
                                 _C1FIFOCON2U 016A                                   _C1FIFOCON3T 0177  
                                 _C1FIFOCON3U 0176                                       _NVMLOCK 0042  
                              ??_sendMessage2 0528                                ??_sendMessage3 0529  
                              ??_sendMessage4 052A                                ??_sendMessage5 052B  
                              ??_sendMessage6 052C                                ??_sendMessage7 052D  
                            _teachDiagnostics 05CC                          __end_of_nerdCallback 75F4  
                   isConsumedEvent@eventIndex 0501                                     ?_initARGB 0501  
                              checkLen@needed 052E                                  _getParameter 4976  
                      __end_of_loadFlashBlock 7AE6                               _timerExtension1 059A  
                             _timerExtension2 0599                  __end_of_eventConsumerService FFB3  
                         refreshString@offset 0501                                ?_setLEDsByMode 0501  
                      mnsTRrqnpnCallback@step 052F                        mnsTRrqnpnCallback@type 0501  
              canReceiveMessage@incomingCanId 0513                           _consumerDiagnostics 05C1  
                               initARGB@ledno 0501                                   poll@handled 05F2  
                        ??_mnsTRrqnpnCallback 0530                             __end_of_findEvent 64D6  
                                     __Hparam 0000                   consumerEventCheckLen@needed 0533  
                                     __Lparam 0000                               _consumerEsdData 8288  
                                   _CLCSELECT 00D5                        _APP_postProcessMessage 83A6  
                          pbDownTimer@timeout 051C                                   ?_canEsdData 0501  
                           __end_of_pbUpTimer 6060                                     _DMASELECT 00E8  
                            pbUpTimer@timeout 051C                                 APP_testMode@c 050F  
                               APP_testMode@i 0511                                    _initTicker 7866  
                                     ___awdiv 6122                                    _initRomOps 82F2  
                                     ___awmod 64D6                                       ___lldiv 6820  
                                     _canPoll 837E                                       _doFlash 1ED0  
                                  ??_addEvent 0536                                       _doEvlrn 5ECC  
                                  _paramBlock 0820                                       _doNenrd 7144  
                          canProcessMessage@m 0554                                       _doEvuln 71C6  
                                     _doNnclr 8068                                       _doNnevn 7C22  
                                     _doReqev 4AF6                                       _doReval 5B4C  
                                     __pcinit 72C0                                 _teachCheckLen 70C2  
                                     _doRqevn 7BD6                             __end_of_leds_poll 39D0  
                          _startTimedResponse 7988                                       __ramtop 4000  
                                     _getHash 826A                                     ?_writeNVM 050E  
                          doEvlrn@eventNumber 0550                                       __ptext0 6362  
                                     __ptext1 47E2                                       __ptext2 835C  
                                     __ptext3 5866                                       __ptext4 7E00  
                                     __ptext5 4F50                                       __ptext6 7E3A  
                                     __ptext7 4DDE                                       __ptext8 5C36  
                                     __ptext9 7DC2                               _consumerPowerUp 7E3A  
                                     _isEvent 7E70                                       _pbTimer 0570  
                          APP_nvDefault@index 050B                               getEv@tableIndex 051C  
                            _EnumerationState 05A6                             ??_canFactoryReset 0515  
                           _mnsProcessMessage 0A06                                       _nvCache 0600  
                                  _mode_flags 05A4                                   ?_canPowerUp 0501  
                                     _readNVM 7512                     startEnumeration@txWaiting 050B  
                                  getNN@flags 051A                                _nvFactoryReset 7D82  
                                     getEN@hi 0516                                     _T2CONbits 0324  
                                     getEN@lo 0518                             ??_teachGetESDdata 0501  
                    __end_of_rebuildHashtable 5866                                    ??_checkLen 0530  
                                     getNN@hi 0516                                       getNN@lo 0518  
                                  _mode_state 05A1                              ___awmod@dividend 0501  
                          doReqev@eventNumber 0531                                       _sendRTR 7CFA  
                                     _mnsPoll 2600                                     _T4CONbits 0330  
                          ?_mnsProcessMessage 0554                                       _tickGet 7428  
                                _flashCounter 0589                             doNenrd@tableIndex 0531  
                         ?_startTimedResponse 0505                                  _isEvent$5824 0501  
                                  getNV@index 0504                                       _rxQueue 05C7  
                           doNenrd@nodeNumber 052C                      ??_consumerProcessMessage 0556  
                                     _powerUp 5866                         canReceiveMessage@temp 0516  
                          doRqevn@eventNumber 052A                                    _mnsService FFDD  
                           __end_of_nvService FFDD                                    _mnsPowerUp 4F50  
                           __end_of_nvPowerUp 7E3A                           __end_of_DEFAULT_ISR 83B2  
                                     _writeEv 6C6A                          end_of_initialization 7332  
                                  ??_initARGB 0501                           ??_mnsProcessMessage 05D0  
                                writeNVM@type 0514                                    getEv@evNum 050D  
            prepareSelfEnumResponse@txFifoObj 0501                                       memcpy@d 0507  
                                     memcpy@n 0505                                       memcpy@s 0509  
                  APP_nvValueChanged@oldValue 0502                                 ??_EEPROM_Read 0504  
                             ?_loadFlashBlock 0501                 __end_of_CAN1_OperationModeGet 8352  
               __end_of_CAN1_OperationModeSet 70C2                             ?_APP_factoryReset 0501  
                            _startEnumeration 75F4                               ___lldiv@divisor 050F  
                                writeEv@evVal 0516                      __end_of_nvProcessMessage 3644  
                                writeEv@evNum 0515                               ___lldiv@counter 0517  
                        ??_startTimedResponse 0508                       pollTimedResponse@result 053F  
                          ??_APP_factoryReset 0537               eraseFlashBlock@interruptEnabled 0504  
                           __end_of_updateRGB 836C                              ??_APP_nvValidate 0502  
                               ??_FLASH_Write 050A                          nvGetDiagnostic@index 0509  
                                     postdec1 04E5                                       postdec2 04DD  
                      ??_getNumTxBuffersInUse 0501                                       postinc0 04EE  
                                     postinc1 04E6                                       postinc2 04DE  
                   updateLedRange@start_ledno 0503                               _mnsFactoryReset 7660  
                           ?_mnsGetDiagnostic 0507          EEPROM_WriteNoVerify@interruptEnabled 0508  
                     _prepareSelfEnumResponse 7338                        ?_setTimedResponseDelay 0501  
                                _APP_addEvent 81E4                                ?_teachCheckLen 0531  
                   __end_of_mnsProcessMessage 16F8                            doNnevn@eventNumber 052A  
                                doFlash@ledno 0506                                    _tmpMessage 06B4  
                          ??_mnsGetDiagnostic 0509                                  doFlash@order 0505  
              startTimedResponse@serviceIndex 0505                        __end_of_nvFactoryReset 7DC2  
                                  ??_writeNVM 0512                                    _showStatus 50A0  
                                   _PORTAbits 04CE                                    _previousNN 058D  
                     ??_consumerEventCheckLen 0534                            _APP_nvValueChanged 83AC  
                   _timedResponseServiceIndex 0598                                    _priorities FE59  
                               ??_pbDownTimer 0518                               sendMessage2@opc 0528  
                        __end_of_teachPowerUp 7E00                               sendMessage3@opc 0529  
                             sendMessage4@opc 052A                               sendMessage5@opc 052B  
                             sendMessage6@opc 052C                               sendMessage7@opc 052D  
                           _eventTeachService FFB3                                     _TRISAbits 04C6  
                                   _TRISBbits 04C7                        _mnsProcessMessage$4494 0557  
                          _timedResponseDelay 0593                                   showStatus@s 0503  
                             loadNvCache@temp 050F                           ?_APP_nvValueChanged 0501  
                               ??_bootEsdData 0501                                    isEvent@opc 0502  
                             ??_setLEDsByMode 0504                           teachCheckLen@needed 0533  
                     __end_of_consumerEsdData 82A4               ??_mnsTRserviceDiscoveryCallback 0530  
                           ??_flushFlashBlock 0505                            _teachGetDiagnostic 8038  
                           _heartbeatSequence 059C                           _teachProcessMessage 16F8  
                          canSendMessage@temp 0515                             removeTableEntry@i 0534  
                               ??_bootPowerUp 050D                                  _APP_testMode 3F9E  
                             _isConsumedEvent 8352                 __end_of_handleSelfEnumeration 662E  
                         __end_of_EEPROM_Read 7BD6                       __end_of_consumerPowerUp 7E70  
                         ?_teachGetDiagnostic 0507                             _canTransmitFailed 05A7  
                                 ?_initTicker 0501                                   ?_initRomOps 0501  
                        ??_APP_nvValueChanged 0503                          __end_of_sendMessage2 813E  
                        __end_of_sendMessage3 8114                          __end_of_sendMessage4 80EA  
                        __end_of_sendMessage5 8192                          __end_of_sendMessage6 80C0  
                        __end_of_sendMessage7 8168                                __end_of___lmul 7736  
                              __end_of_canPri FFA5                                __end_of_doNerd 82F2  
                  removeTableEntry@tableIndex 0535                                __end_of_getEVs 6B3C  
                             ?_nvFactoryReset 0501                              _removeTableEntry 4434  
                              __end_of_memcpy 7B88                            canReceiveMessage@m 0510  
                        ?_teachProcessMessage 0554                     __end_of_eventTeachService FFC1  
                         __end_of_FLASH_Write 566C                     consumerProcessMessage@enn 0559  
                       __end_of_APP_nvDefault 531E                     consumerProcessMessage@ret 055B  
                        _eventConsumerService FFA5                                _canSendMessage 2A9E  
                                 _DEFAULT_ISR 83B0                                  _name_absaddr 0848  
                         start_initialization 72C0                              ??_clearAllEvents 0536  
                   ?_APP_processConsumedEvent 051C                                  _leds_powerUp 8192  
                        ??_teachGetDiagnostic 0509                                   __end_of_pop 6362  
                               factoryReset@i 053B                                   ?_mnsPowerUp 0501  
                         _APP_isConsumedEvent 839E                  ?_mnsTRallDiagnosticsCallback 052E  
                __end_of_EEPROM_WriteNoVerify 7804                                 _refreshString 7736  
                         __end_of_pbDownTimer 6122                            _bootProcessMessage 6BD4  
                         _getNextWriteMessage 595E                                  _nvGetESDdata 8206  
                    __end_of_canGetDiagnostic 66D4                       ??_APP_preProcessMessage 0503  
                     __end_of_mnsFactoryReset 76CC                                 ??_loadNvCache 050D  
                       _consumerGetDiagnostic 8008                           __end_of_bootEsdData 7F42  
                         ?_bootProcessMessage 0554                                  doEvlrn@evVal 0553  
                                doEvlrn@evNum 0552                               numEv@tableIndex 0501  
                   ??_prepareSelfEnumResponse 0501                        startTimedResponse@type 0508  
                  __end_of_evtIdxToTableIndex 8378                      rebuildHashtable@chainIdx 0527  
                                    ??___lmul 0509                               ??_teachCheckLen 0535  
                                doNenrd@index 0530                          ?_APP_isConsumedEvent 0501  
                                    ??_doNerd 0509                                      ??_getEVs 050D  
                         bootProcessMessage@m 0554                            addEvent@forceOwnNN 0535  
                                 _MD1CON0bits 006A                                  _nerdCallback 7586  
                                 __pdataBANK5 05FD                       _updateModuleErrorStatus 8320  
                         __end_of_bootService FFCF                                      ??_memcpy 0507  
                         __end_of_bootPowerUp 5D1E                        __end_of_canSendMessage 2EC6  
                                 ?_showStatus 0501                          ?_getNextWriteMessage 0501  
                       ??_teachProcessMessage 0556                                   __pbssBIGRAM 08FC  
                               _reqevCallback 5DF6                          ??_bootProcessMessage 0556  
                           ??_nvGetDiagnostic 0509                              canSendMessage@mp 050D  
                               __pcstackBANK5 05D0                                    setNV@index 0519  
                                  setNV@value 0515           APP_processConsumedEvent@start_ledno 0521  
                          addEvent@tableIndex 0546                                ?_refreshString 0501  
                  setTimedResponseDelay@delay 0501                                     addEvent@e 0545  
                          addEvent@nodeNumber 052F                 ??_mnsTRallDiagnosticsCallback 0530  
                    _factoryResetGlobalEvents 8390                       __end_of_isConsumedEvent 835C  
                            ?_consumerEsdData 0501                                   _EEPROM_Read 7B88  
                          initTicker@priority 0502                       ?_APP_postProcessMessage 0501  
                           ??_eraseFlashBlock 0501                     APP_processConsumedEvent@m 051C  
                              mnsPowerUp@temp 050E                                  doNnevn@count 052C  
                        teachProcessMessage@m 0554                               _canFactoryReset 82A4  
       __end_of_mnsTRserviceDiscoveryCallback 6BD4                 _mnsTRserviceDiscoveryCallback 6B3C  
                mnsTRallDiagnosticsCallback@d 0534                                    nvPowerUp@i 0512  
                             tickGet@IntFlag1 0506                               tickGet@IntFlag2 0505  
                      _consumerProcessMessage 3CB8                               _teachGetESDdata 7F78  
                       ??_APP_isConsumedEvent 0501                                  ??_canEsdData 0501  
                                    _C1FIFOBA 014C                                 __pmediumconst FE58  
                            ?_consumerPowerUp 0501                              getEVs@tableIndex 051A  
                                    ?___awdiv 0501                                     __ptext100 83A6  
                                   __ptext101 79E4                                     __ptext110 3644  
                                   __ptext102 7736                                     __ptext111 76CC  
                                   __ptext103 1ED0                                     __ptext120 6122  
                                   __ptext112 6820                                     __ptext104 7AE6  
                                   __ptext121 838A                                     __ptext113 566C  
                                   __ptext105 82F2                                     __ptext130 82C0  
                                   __ptext122 8390                                     __ptext114 7D82  
                                   __ptext106 66D4                                     __ptext131 792A  
                                   __ptext123 824A                                     __ptext115 7660  
                                   __ptext107 50A0                                     __ptext140 7B88  
                                   __ptext132 8320                                     __ptext124 4434  
                                   __ptext116 82A4                                     __ptext108 5F9E  
                                   __ptext141 3F9E                                     __ptext133 779E  
                                   __ptext125 78C8                                     __ptext117 8384  
                                   __ptext109 6060                                   _FLASH_Write 555C  
                                   __ptext142 7D3E                                     __ptext134 576A  
                                   __ptext126 555C                                     __ptext118 51E2  
                                   __ptext143 7428                                     __ptext135 531E  
                                   __ptext127 7A92                                     __ptext119 64D6  
                                   __ptext144 4C6A                                     __ptext136 826A  
                                   __ptext128 6A02                                     __ptext145 7F44  
                                   __ptext137 677A                                     __ptext129 6FBC  
                                   __ptext146 81BC                                     __ptext138 7512  
                                   __ptext147 83B0                                     __ptext139 73B0  
                                    _C1MASK0H 0191                                      ?___awmod 0501  
                                    _C1MASK0L 0190                                      _C1MASK0T 0193  
                                    _C1MASK0U 0192                                     _findEvent 641E  
                                    ?___lldiv 050B                           __end_of_loadNvCache 7866  
                                doReqev@evVal 0534                                  doReqev@evNum 0533  
                             getNN@tableIndex 051B                                      ?_canPoll 0501  
                                doReval@enNum 052E                                      ?_doFlash 0501  
                                doReval@evVal 0530                                  doReval@evNum 052C  
                                   _flashTime 0580                                      ?_doEvlrn 054E  
                                    ?_doNenrd 0501                                      ?_doEvuln 053B  
                                    ?_doNnclr 0501                                      ?_doNnevn 0501  
                                    ?_doReqev 052F                                      ?_doReval 052C  
                           teachGetESDdata@id 0501                                      ?_doRqevn 0501  
                       ??_getNextWriteMessage 0503                                      ?_getHash 051C  
                               ??_setNewCanId 0515                                     _pbUpTimer 5F9E  
                             ?_canSendMessage 050D                                 ??_sendMessage 0523  
                                    ?_isEvent 0501                              _findServiceIndex 6E1C  
                            nerdCallback@step 052F                              nerdCallback@type 0501  
                              ?_reqevCallback 052E                                  ??_canPowerUp 050D  
                              _heartbeatTimer 056C                                   __smallconst FE58  
                                    ?_readNVM 0507                                    _C1FLTCON0L 0180  
                    __end_of_startEnumeration 7660                                    _C1FLTOBJ0H 018D  
                                  _C1FLTOBJ0L 018C                                    _C1FLTOBJ0T 018F  
                                  _C1FLTOBJ0U 018E                                    _C1CONHbits 0101  
                                   _leds_poll 3644                                      ?_sendRTR 0501  
                                    ?_mnsPoll 0501                             ?_rebuildHashtable 0501  
             __end_of_prepareSelfEnumResponse 73B0              CAN1_OperationModeSet@requestMode 0502  
                                    ?_tickGet 0501       mnsTRallDiagnosticsCallback@serviceIndex 052E  
                                    _CANRXPPS 023D                                   _pbDownTimer 6060  
                                  _C1CONTbits 0103                                    _C1CONUbits 0102  
                                   checkLen@m 052C                              ??_loadFlashBlock 0501  
                                    ?_powerUp 0501                            ??_rebuildHashtable 0522  
                                    _T2CLKCON 0326                                      _CLCnGLS0 00DC  
                                    _CLCnGLS1 00DD                                      _CLCnGLS2 00DE  
                                    _CLCnGLS3 00DF                                      _CLCnSEL0 00D8  
                                    _CLCnSEL1 00D9                                      _CLCnSEL2 00DA  
                                    _CLCnSEL3 00DB                                      ?_writeEv 0515  
                                    _DMAnAIRQ 00FE                                      _T4CLKCON 0332  
                                  _C1INTHbits 011D                                      _DMAnSIRQ 00FF  
                                 _bootEsdData 7F0E                            __end_of_canEsdData 824A  
                                  _C1INTTbits 011F                                    _C1INTUbits 011E  
                                 _flashBuffer 05FD                        consumerEventCheckLen@m 0531  
                              doReval@evIndex 052D                __end_of_APP_postProcessMessage 83AA  
                     getNumRxBuffersInUse@i16 0505                                     _nvService FFCF  
                         consumerPowerUp@temp 0501                                 ??_removeEvent 053A  
                                _SPI1BAUDbits 0089                                      _LATBbits 04BF  
                                    _LATCbits 04C0                                     _nvPowerUp 7E00  
                           findEvent@chainIdx 052D                        ?_consumerGetDiagnostic 0507  
                    _canWaitForTxQueueToDrain 8336                                      _IPR0bits 0362  
                                    _PIE0bits 049E                          rebuildHashtable@hash 0525  
                            ?_mnsFactoryReset 0501                                     _rxBuffers 0646  
                                   getHash@en 051E                                     getHash@nn 051C  
                              _flashFlushTime 0642                                  _SPI1CON0bits 0084  
                                    _IVTBASEH 045E                                      _IVTBASEL 045D  
                                _SPI1CON1bits 0085                                      _IVTBASEU 045F  
                                _SPI1CON2bits 0086        __end_of_APP_isSuitableTimeToWriteFlash 82DA  
              _APP_isSuitableTimeToWriteFlash 82C0                                   _bootService FFC1  
                          __end_of_canService FFF9                                  _teachPowerUp 7DC2  
                                 _bootPowerUp 5C36                                      _PIR0bits 04AE  
                          __end_of_canPowerUp 4F50                                      _PIR3bits 04B1  
                           ?_nvProcessMessage 0554                       ??_setTimedResponseDelay 0501  
                           doReqev@tableIndex 0536                                      _SPI1INTF 008A  
                                    _SPI1TCNT 0082                                _mnsDiagnostics 05AD  
                   ??_updateModuleErrorStatus 0501                                      i2u865_40 7F54  
                                    i2u865_41 7F50                                      i2u866_40 7F6C  
                                    i2u866_41 7F68                                      i2u867_40 81CA  
                                    i2u867_41 81C6                                      i2u868_40 81E0  
                                    i2u868_41 81DC                              ivt0x900_undefint 0A00  
                           doReqev@nodeNumber 052F                                   _pbWasPushed 059D  
                                    _TMR0_ISR 81BC                            ??_nvProcessMessage 0556  
                   EEPROM_WriteNoVerify@index 0501                                    ?_findEvent 0522  
                   EEPROM_WriteNoVerify@value 0504                                     _updateRGB 8364  
                        _EEPROM_WriteNoVerify 779E              consumerProcessMessage@tableIndex 055C  
               updateLedRange@colourIndexPair 0502                             _teachFactoryReset 8384  
                                  ?_pbUpTimer 0501                                sendMessage@len 051B  
                              sendMessage@opc 0525                             _timedResponseTime 0560  
                           _timedResponseStep 0595                             _timedResponseType 0596  
                            _enumerationState 05A5                                  doRqevn@count 052C  
                                   _transport 0591                            ?_teachFactoryReset 0501  
               APP_processConsumedEvent@onOff 051F                    canReceiveMessage@rxFifoObj 0518  
                                  ?_leds_poll 0501                               _flushFlashBlock 6A02  
               __end_of_consumerEventCheckLen 8320                               ??_refreshString 0501  
                         __end_of_setNewCanId 7CB6                           __end_of_sendMessage 6D8E  
                         ??_teachFactoryReset 0537                               checkLen@service 052F  
                                 _INTCON0bits 04D6                            __end_of_bl_version FFA0  
                           ___lmul@multiplier 0501                                  _sendMessage2 8114  
                                _sendMessage3 80EA                                  _sendMessage4 80C0  
                                _sendMessage5 8168                                  _sendMessage6 8096  
                                _sendMessage7 813E                               nvFactoryReset@i 0517  
                     __end_of_canFactoryReset 82C0             APP_processConsumedEvent@end_ledno 0522  
                    __end_of_removeTableEntry 461E                              ?_isConsumedEvent 0501  
                     __end_of_teachGetESDdata 7FA8                                    ?_nvPowerUp 0501  
                                 _loadNvCache 7804                                      __Hrparam 0000  
                                 _eventChains 08FC                      evtIdxToTableIndex@evtIdx 0501  
                     APP_addEvent@eventNumber 0549                                     memcpy@tmp 050B  
                       _CAN1_OperationModeGet 8348                                      __Lrparam 0000  
                       _CAN1_OperationModeSet 7040                             doReval@tableIndex 052F  
                            ??_nvFactoryReset 0515                                  ??_initTicker 0501  
                         __end_of_removeEvent 7EDA                                  ??_initRomOps 0501  
                      removeEvent@eventNumber 0538              __end_of_APP_processConsumedEvent 5B4C  
                   __end_of_teachFactoryReset 838A                         ?_EEPROM_WriteNoVerify 0501  
                                    _addEvent 39D0                                    ?_updateRGB 0501  
              ?_mnsTRserviceDiscoveryCallback 052E                               ??_reqevCallback 0530  
                          doNenrd@eventNumber 052E                                  ?_DEFAULT_ISR 0501  
                                    _checkLen 68C4                                    _T0CON0bits 031A  
                                  _T0CON1bits 031B               __end_of_updateModuleErrorStatus 8336  
                                  _FLASH_Read 73B0                         getNextWriteMessage@wr 050C  
                                    __ptext10 7804                                      __ptext11 8192  
                                    __ptext20 5D1E                                      __ptext12 836C  
                                    __ptext21 6BD4                                      __ptext13 7866  
                                    __ptext30 7144                                      __ptext22 16F8  
                                    __ptext14 7040                                      __ptext31 8372  
                                    __ptext23 70C2                                      __ptext15 8348  
                                    __ptext40 6B3C                                      __ptext32 71C6  
                                    __ptext24 7BD6                                      __ptext16 2EC6  
                                    __ptext41 5440                                      __ptext33 7EA6  
                                    __ptext25 5B4C                                      __ptext17 3298  
                                    __ptext50 839A                                      __ptext42 7EDA  
                                    __ptext34 5ECC                                      __ptext26 4AF6  
                                    __ptext18 0A06                                      __ptext51 8206  
                                    __ptext43 7586                                      __ptext35 81E4  
                                    __ptext27 7C22                                      __ptext19 3CB8  
                                    __ptext60 8038                                      __ptext52 8288  
                                    __ptext44 5DF6                                      __ptext36 39D0  
                                    __ptext28 8068                                      __ptext61 7988  
                                    __ptext53 8228                                      __ptext45 8396  
                                    __ptext37 6C6A                                      __ptext29 82DA  
                                    __ptext70 2600                                      __ptext62 8096  
                                    __ptext54 7F0E                                      __ptext46 6964  
                                    __ptext38 61E4                                      __ptext71 7CB6  
                                    __ptext63 80C0                                      __ptext55 7F78  
                                    __ptext47 8378                                      __ptext39 7A3C  
                                    __ptext80 8364                                      __ptext72 8114  
                                    __ptext64 80EA                                      __ptext56 7FA8  
                                    __ptext48 6D8E                                      __ptext81 6AA0  
                                    __ptext73 813E                                      __ptext65 4976  
                                    __ptext57 7FD8                                      __ptext49 83AC  
                                    __ptext90 6EA8                                      __ptext82 423E  
                                    __ptext74 8352                                      __ptext66 6F34  
                                    __ptext58 8008                                      __ptext91 7246  
                                    __ptext83 62A4                                      __ptext75 839E  
                                    __ptext67 6E1C                                      __ptext59 662E  
                                    __ptext92 749E                                      __ptext84 7B38  
                                    __ptext76 641E                                      __ptext68 8336  
                                    __ptext93 595E                                      __ptext85 6584  
                                    __ptext77 830A                                      __ptext69 837E  
                                    __ptext94 461E                                      __ptext86 8168  
                                    __ptext78 68C4                                      __ptext95 75F4  
                                    __ptext87 6CFC                                      __ptext79 5A56  
                                    __ptext96 7CFA                                      __ptext88 2A9E  
                                    __ptext97 7C6E                                      __ptext89 7E70  
                                    __ptext98 7338                                      __ptext99 83A2  
                __end_of_getNumRxBuffersInUse 7512                                  ??_mnsPowerUp 050D  
                                    _ledTimer 0564                                      _ledState 058B  
                               ?_EEPROM_Write 0509                   CAN1_OperationModeSet@status 0501  
                                    _initARGB 4C6A                                   _OSCCON1bits 00AD  
                                 _OSCCON3bits 00AF                            __end_of_initTicker 78C8  
                          __end_of_initRomOps 830A                                      doNnevn@i 052D  
                          __end_of_paramBlock 0840                                canPowerUp@temp 050D  
                       __end_of_setLEDsByMode 7CFA                                 ?_factoryReset 0501  
                            _nvTRnvrdCallback 7A3C                                 findEvent@hash 052C  
                                    doRqevn@i 052D                             ?_canGetDiagnostic 0507  
                                 getEVs@evIdx 051B                                   _IVTLOCKbits 0459  
               __end_of_APP_preProcessMessage 83A6                            ??_canGetDiagnostic 0509  
                                 _SPI1CLKbits 008C                                      isa$xinst 0000  
                                    _testTime 057C                                      _services FF89  
                              _receiveOverrun 7F44                      clearAllEvents@tableIndex 0536  
                             _nvGetDiagnostic 7FA8                                   ??_findEvent 0526  
                       _handleSelfEnumeration 6584                       canSendMessage@txFifoObj 0519  
                          __end_of_mnsService FFEB                       __end_of_flushFlashBlock 6AA0  
                           writeEv@tableIndex 0524                            __end_of_mnsPowerUp 50A0  
                                ??_showStatus 0501                                   ??_pbUpTimer 0518  
                                    _writeNVM 78C8                              sendRTR@txFifoObj 0501  
                  processEnumeration@newCanId 051B                        APP_addEvent@forceOwnNN 054D  
                                 _setNewCanId 7C6E                                   _sendMessage 6CFC  
          handleSelfEnumeration@receivedCanId 050F                                 writeNVM@index 050E  
                     updateLedRange@end_ledno 0501                                 writeNVM@value 0511  
                                 ??_leds_poll 050B                    ??_factoryResetGlobalEvents 0537  
                          _evtIdxToTableIndex 8372                         canGetDiagnostic@index 050A  
                                 _NVMCON0bits 0040                                   _NVMCON1bits 0041  
                                    memcpy@d1 0501                                      memcpy@s1 0503  
                             _eraseFlashBlock 6FBC                             APP_addEvent@evVal 054C  
                           APP_addEvent@evNum 054B                       teachGetDiagnostic@index 0509  
                              ??_EEPROM_Write 050D                    __end_of_processEnumeration 47E2  
                                 getHash@hash 0521                               _C1FIFOCON1Hbits 015D  
                                    intlevel2 0000                           ?_evtIdxToTableIndex 0501  
                             _C1FIFOCON3Hbits 0175                                 ?_getParameter 0501  
                        getNextWriteMessage@q 0501                              ?_canFactoryReset 0501  
                                ?_EEPROM_Read 0501                              ___lldiv@dividend 050B  
                              ??_factoryReset 0537                                   ??_nvPowerUp 0512  
                       removeEvent@tableIndex 053A                              ?_teachGetESDdata 0501  
                    __end_of_findServiceIndex 6EA8                                   _removeEvent 7EA6  
                      APP_addEvent@nodeNumber 0547                       ?_consumerProcessMessage 0554  
                          __end_of_showStatus 51E2                mnsTRrqnpnCallback@serviceIndex 052E  
                       removeEvent@nodeNumber 0536                        ?_CAN1_OperationModeGet 0501  
                      ?_CAN1_OperationModeSet 0501                            _paramBlock_absaddr 0820  
                      __end_of_receiveOverrun 7F78                           updateLedRange@ledno 0504  
                          __end_of_priorities FF59                              ??_canSendMessage 050F  
                 __end_of_teachProcessMessage 1ED0                    __end_of_tableIndexToEvtIdx 837E  
                        __end_of_canTransport FFFF                                  ?_FLASH_Write 0506  
                          tickGet@currentTime 0507                        ??_EEPROM_WriteNoVerify 0505  
                                    powerUp@i 052D                          ??_evtIdxToTableIndex 0501  
                           _pollTimedResponse 61E4                         __end_of_teachCheckLen 7144  
                                 ??_updateRGB 0501                            ?_pollTimedResponse 0501  
                    _APP_processConsumedEvent 5A56                             FLASH_Read@address 0501  
                            _APP_factoryReset 838A                       nerdCallback@eventNumber 0532  
               APP_isConsumedEvent@tableIndex 0501                              ___lldiv@quotient 0513  
                              _updateLedRange 7D3E                             ?_startEnumeration 0501  
                                ?_pbDownTimer 0501                                   findEvent@en 052A  
                                 findEvent@nn 0528                          findEvent@eventNumber 0524  
                                 ?_FLASH_Read 0501                                 bootEsdData@id 0501  
                  ??_canWaitForTxQueueToDrain 0501                           ??_pollTimedResponse 053D  
                            _mnsGetDiagnostic 7FD8                            ??_startEnumeration 050B  
                _timedResponseAllServicesFlag 0597                               _C1FIFOSTA2Hbits 016D  
                     ??_consumerGetDiagnostic 0509                               _C1FIFOSTA1Lbits 0160  
                             _C1FIFOSTA3Hbits 0179                                ??_getParameter 0506  
                             _C1FIFOSTA2Lbits 016C                                  ?_bootEsdData 0501  
                             _C1FIFOSTA3Lbits 0178                             sendMessage2@data1 0526  
                           sendMessage2@data2 0527                             sendMessage3@data1 0526  
                           sendMessage3@data2 0527                             sendMessage3@data3 0528  
                           sendMessage4@data1 0526                             sendMessage4@data2 0527  
                           sendMessage4@data3 0528                             sendMessage4@data4 0529  
                           sendMessage5@data1 0526                             sendMessage5@data2 0527  
                           sendMessage5@data3 0528                             sendMessage5@data4 0529  
                           sendMessage5@data5 052A                             sendMessage6@data1 0526  
                           sendMessage6@data2 0527                             sendMessage6@data3 0528  
                           sendMessage6@data4 0529                             sendMessage6@data5 052A  
                           sendMessage6@data6 052B                              bootPowerUp@found 050E  
                             _last_mode_flags 059F                             sendMessage7@data1 0526  
                           sendMessage7@data2 0527                             sendMessage7@data3 0528  
                           sendMessage7@data4 0529                             sendMessage7@data5 052A  
                           sendMessage7@data6 052B                             sendMessage7@data7 052C  
              __end_of_consumerProcessMessage 3F9E                                _checkPowerOnPb 66D4  
                            EEPROM_Read@index 0501                      ?_prepareSelfEnumResponse 0501  
                             _last_mode_state 05A0                   __end_of_APP_isConsumedEvent 83A2  
                     __end_of_nvGetDiagnostic 7FD8                                  ?_bootPowerUp 0501  
                             ?_receiveOverrun 0501                          nvTRnvrdCallback@step 052F  
                        nvTRnvrdCallback@type 0501                   __end_of_getNextWriteMessage 5A56  
