

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 23 19:32:41 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=2
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1,group=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1,group=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=4,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=4,class=CODE,space=0,delta=1
   167                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   170                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   171   000000                     
   172                           ; Generated 24/03/2025 GMT
   173                           ; 
   174                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution. Publication is not required when
   188                           ;        this file is used in an embedded application.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18F27Q83 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206   0004E0                     bsr             equ	1248
   207   0004E9                     fsr0            equ	1257
   208   0004EA                     fsr0h           equ	1258
   209   0004E9                     fsr0l           equ	1257
   210   0004E1                     fsr1            equ	1249
   211   0004E2                     fsr1h           equ	1250
   212   0004E1                     fsr1l           equ	1249
   213   0004D9                     fsr2            equ	1241
   214   0004DA                     fsr2h           equ	1242
   215   0004D9                     fsr2l           equ	1241
   216   0004EF                     indf0           equ	1263
   217   0004E7                     indf1           equ	1255
   218   0004DF                     indf2           equ	1247
   219   0004D6                     intcon          equ	1238
   220   000041                     nvmcon          equ	65
   221   0004F9                     pcl             equ	1273
   222   0004FA                     pclath          equ	1274
   223   0004FB                     pclatu          equ	1275
   224   0004EB                     plusw0          equ	1259
   225   0004E3                     plusw1          equ	1251
   226   0004DB                     plusw2          equ	1243
   227   0004ED                     postdec0        equ	1261
   228   0004E5                     postdec1        equ	1253
   229   0004DD                     postdec2        equ	1245
   230   0004EE                     postinc0        equ	1262
   231   0004E6                     postinc1        equ	1254
   232   0004DE                     postinc2        equ	1246
   233   0004EC                     preinc0         equ	1260
   234   0004E4                     preinc1         equ	1252
   235   0004DC                     preinc2         equ	1244
   236   0004F3                     prod            equ	1267
   237   0004F4                     prodh           equ	1268
   238   0004F3                     prodl           equ	1267
   239   0004D8                     status          equ	1240
   240   0004F5                     tablat          equ	1269
   241   0004F6                     tblptr          equ	1270
   242   0004F7                     tblptrh         equ	1271
   243   0004F6                     tblptrl         equ	1270
   244   0004F8                     tblptru         equ	1272
   245   0004FD                     tosl            equ	1277
   246   0004E8                     wreg            equ	1256
   247   000038                     BOOTREG         equ	56	;# 
   248   000039                     CLKRCON         equ	57	;# 
   249   00003A                     CLKRCLK         equ	58	;# 
   250   000040                     NVMCON0         equ	64	;# 
   251   000041                     NVMCON1         equ	65	;# 
   252   000042                     NVMLOCK         equ	66	;# 
   253   000043                     NVMADR          equ	67	;# 
   254   000043                     NVMADRL         equ	67	;# 
   255   000044                     NVMADRH         equ	68	;# 
   256   000045                     NVMADRU         equ	69	;# 
   257   000046                     NVMDAT          equ	70	;# 
   258   000046                     NVMDATL         equ	70	;# 
   259   000047                     NVMDATH         equ	71	;# 
   260   000048                     VREGCON         equ	72	;# 
   261   000049                     BORCON          equ	73	;# 
   262   00004A                     HLVDCON0        equ	74	;# 
   263   00004B                     HLVDCON1        equ	75	;# 
   264   00004C                     ZCDCON          equ	76	;# 
   265   000060                     PMD0            equ	96	;# 
   266   000061                     PMD1            equ	97	;# 
   267   000062                     PMD2            equ	98	;# 
   268   000063                     PMD3            equ	99	;# 
   269   000064                     PMD4            equ	100	;# 
   270   000065                     PMD5            equ	101	;# 
   271   000066                     PMD6            equ	102	;# 
   272   000067                     PMD7            equ	103	;# 
   273   000068                     PMD8            equ	104	;# 
   274   00006A                     MD1CON0         equ	106	;# 
   275   00006B                     MD1CON1         equ	107	;# 
   276   00006C                     MD1SRC          equ	108	;# 
   277   00006D                     MD1CARL         equ	109	;# 
   278   00006E                     MD1CARH         equ	110	;# 
   279   00006F                     CMOUT           equ	111	;# 
   280   000070                     CM1CON0         equ	112	;# 
   281   000071                     CM1CON1         equ	113	;# 
   282   000072                     CM1NCH          equ	114	;# 
   283   000073                     CM1PCH          equ	115	;# 
   284   000074                     CM2CON0         equ	116	;# 
   285   000075                     CM2CON1         equ	117	;# 
   286   000076                     CM2NCH          equ	118	;# 
   287   000077                     CM2PCH          equ	119	;# 
   288   000078                     WDTCON0         equ	120	;# 
   289   000079                     WDTCON1         equ	121	;# 
   290   00007A                     WDTPSL          equ	122	;# 
   291   00007B                     WDTPSH          equ	123	;# 
   292   00007C                     WDTTMR          equ	124	;# 
   293   00007D                     DAC1DAT         equ	125	;# 
   294   00007D                     DAC1DATL        equ	125	;# 
   295   00007F                     DAC1CON         equ	127	;# 
   296   000080                     SPI1RXB         equ	128	;# 
   297   000081                     SPI1TXB         equ	129	;# 
   298   000082                     SPI1TCNT        equ	130	;# 
   299   000082                     SPI1TCNTL       equ	130	;# 
   300   000083                     SPI1TCNTH       equ	131	;# 
   301   000084                     SPI1CON0        equ	132	;# 
   302   000085                     SPI1CON1        equ	133	;# 
   303   000086                     SPI1CON2        equ	134	;# 
   304   000087                     SPI1STATUS      equ	135	;# 
   305   000088                     SPI1TWIDTH      equ	136	;# 
   306   000089                     SPI1BAUD        equ	137	;# 
   307   00008A                     SPI1INTF        equ	138	;# 
   308   00008B                     SPI1INTE        equ	139	;# 
   309   00008C                     SPI1CLK         equ	140	;# 
   310   00008D                     SPI2RXB         equ	141	;# 
   311   00008E                     SPI2TXB         equ	142	;# 
   312   00008F                     SPI2TCNT        equ	143	;# 
   313   00008F                     SPI2TCNTL       equ	143	;# 
   314   000090                     SPI2TCNTH       equ	144	;# 
   315   000091                     SPI2CON0        equ	145	;# 
   316   000092                     SPI2CON1        equ	146	;# 
   317   000093                     SPI2CON2        equ	147	;# 
   318   000094                     SPI2STATUS      equ	148	;# 
   319   000095                     SPI2TWIDTH      equ	149	;# 
   320   000096                     SPI2BAUD        equ	150	;# 
   321   000097                     SPI2INTF        equ	151	;# 
   322   000098                     SPI2INTE        equ	152	;# 
   323   000099                     SPI2CLK         equ	153	;# 
   324   0000AC                     ACTCON          equ	172	;# 
   325   0000AD                     OSCCON1         equ	173	;# 
   326   0000AE                     OSCCON2         equ	174	;# 
   327   0000AF                     OSCCON3         equ	175	;# 
   328   0000B0                     OSCTUNE         equ	176	;# 
   329   0000B1                     OSCFRQ          equ	177	;# 
   330   0000B1                     OSCFREQ         equ	177	;# 
   331   0000B2                     OSCSTAT         equ	178	;# 
   332   0000B2                     OSCSTAT1        equ	178	;# 
   333   0000B3                     OSCEN           equ	179	;# 
   334   0000B4                     PRLOCK          equ	180	;# 
   335   0000B5                     SCANPR          equ	181	;# 
   336   0000B6                     DMA1PR          equ	182	;# 
   337   0000B7                     DMA2PR          equ	183	;# 
   338   0000B8                     DMA3PR          equ	184	;# 
   339   0000B9                     DMA4PR          equ	185	;# 
   340   0000BA                     DMA5PR          equ	186	;# 
   341   0000BB                     DMA6PR          equ	187	;# 
   342   0000BC                     DMA7PR          equ	188	;# 
   343   0000BD                     DMA8PR          equ	189	;# 
   344   0000BE                     MAINPR          equ	190	;# 
   345   0000BF                     ISRPR           equ	191	;# 
   346   0000D4                     CLCDATA         equ	212	;# 
   347   0000D5                     CLCSELECT       equ	213	;# 
   348   0000D6                     CLCnCON         equ	214	;# 
   349   0000D7                     CLCnPOL         equ	215	;# 
   350   0000D8                     CLCnSEL0        equ	216	;# 
   351   0000D9                     CLCnSEL1        equ	217	;# 
   352   0000DA                     CLCnSEL2        equ	218	;# 
   353   0000DB                     CLCnSEL3        equ	219	;# 
   354   0000DC                     CLCnGLS0        equ	220	;# 
   355   0000DD                     CLCnGLS1        equ	221	;# 
   356   0000DE                     CLCnGLS2        equ	222	;# 
   357   0000DF                     CLCnGLS3        equ	223	;# 
   358   0000E8                     DMASELECT       equ	232	;# 
   359   0000E9                     DMAnBUF         equ	233	;# 
   360   0000EA                     DMAnDCNT        equ	234	;# 
   361   0000EA                     DMAnDCNTL       equ	234	;# 
   362   0000EB                     DMAnDCNTH       equ	235	;# 
   363   0000EC                     DMAnDPTR        equ	236	;# 
   364   0000EC                     DMAnDPTRL       equ	236	;# 
   365   0000ED                     DMAnDPTRH       equ	237	;# 
   366   0000EE                     DMAnDSZ         equ	238	;# 
   367   0000EE                     DMAnDSZL        equ	238	;# 
   368   0000EF                     DMAnDSZH        equ	239	;# 
   369   0000F0                     DMAnDSA         equ	240	;# 
   370   0000F0                     DMAnDSAL        equ	240	;# 
   371   0000F1                     DMAnDSAH        equ	241	;# 
   372   0000F2                     DMAnSCNT        equ	242	;# 
   373   0000F2                     DMAnSCNTL       equ	242	;# 
   374   0000F3                     DMAnSCNTH       equ	243	;# 
   375   0000F4                     DMAnSPTR        equ	244	;# 
   376   0000F4                     DMAnSPTRL       equ	244	;# 
   377   0000F5                     DMAnSPTRH       equ	245	;# 
   378   0000F6                     DMAnSPTRU       equ	246	;# 
   379   0000F7                     DMAnSSZ         equ	247	;# 
   380   0000F7                     DMAnSSZL        equ	247	;# 
   381   0000F8                     DMAnSSZH        equ	248	;# 
   382   0000F9                     DMAnSSA         equ	249	;# 
   383   0000F9                     DMAnSSAL        equ	249	;# 
   384   0000FA                     DMAnSSAH        equ	250	;# 
   385   0000FB                     DMAnSSAU        equ	251	;# 
   386   0000FC                     DMAnCON0        equ	252	;# 
   387   0000FD                     DMAnCON1        equ	253	;# 
   388   0000FE                     DMAnAIRQ        equ	254	;# 
   389   0000FF                     DMAnSIRQ        equ	255	;# 
   390   000100                     C1CONL          equ	256	;# 
   391   000101                     C1CONH          equ	257	;# 
   392   000102                     C1CONU          equ	258	;# 
   393   000103                     C1CONT          equ	259	;# 
   394   000104                     C1NBTCFGL       equ	260	;# 
   395   000105                     C1NBTCFGH       equ	261	;# 
   396   000106                     C1NBTCFGU       equ	262	;# 
   397   000107                     C1NBTCFGT       equ	263	;# 
   398   000108                     C1DBTCFGL       equ	264	;# 
   399   000109                     C1DBTCFGH       equ	265	;# 
   400   00010A                     C1DBTCFGU       equ	266	;# 
   401   00010B                     C1DBTCFGT       equ	267	;# 
   402   00010C                     C1TDCL          equ	268	;# 
   403   00010D                     C1TDCH          equ	269	;# 
   404   00010E                     C1TDCU          equ	270	;# 
   405   000110                     C1TBC           equ	272	;# 
   406   000110                     C1TBCL          equ	272	;# 
   407   000111                     C1TBCH          equ	273	;# 
   408   000112                     C1TBCU          equ	274	;# 
   409   000113                     C1TBCT          equ	275	;# 
   410   000114                     C1TSCONL        equ	276	;# 
   411   000115                     C1TSCONH        equ	277	;# 
   412   000116                     C1TSCONU        equ	278	;# 
   413   000117                     C1TSCONT        equ	279	;# 
   414   000118                     C1VECL          equ	280	;# 
   415   000119                     C1VECH          equ	281	;# 
   416   00011A                     C1VECU          equ	282	;# 
   417   00011B                     C1VECT          equ	283	;# 
   418   00011C                     C1INTL          equ	284	;# 
   419   00011D                     C1INTH          equ	285	;# 
   420   00011E                     C1INTU          equ	286	;# 
   421   00011F                     C1INTT          equ	287	;# 
   422   000120                     C1RXIF          equ	288	;# 
   423   000120                     C1RXIFL         equ	288	;# 
   424   000121                     C1RXIFH         equ	289	;# 
   425   000122                     C1RXIFU         equ	290	;# 
   426   000123                     C1RXIFT         equ	291	;# 
   427   000124                     C1TXIF          equ	292	;# 
   428   000124                     C1TXIFL         equ	292	;# 
   429   000125                     C1TXIFH         equ	293	;# 
   430   000126                     C1TXIFU         equ	294	;# 
   431   000127                     C1TXIFT         equ	295	;# 
   432   000128                     C1RXOVIF        equ	296	;# 
   433   000128                     C1RXOVIFL       equ	296	;# 
   434   000129                     C1RXOVIFH       equ	297	;# 
   435   00012A                     C1RXOVIFU       equ	298	;# 
   436   00012B                     C1RXOVIFT       equ	299	;# 
   437   00012C                     C1TXATIF        equ	300	;# 
   438   00012C                     C1TXATIFL       equ	300	;# 
   439   00012D                     C1TXATIFH       equ	301	;# 
   440   00012E                     C1TXATIFU       equ	302	;# 
   441   00012F                     C1TXATIFT       equ	303	;# 
   442   000130                     C1TXREQ         equ	304	;# 
   443   000130                     C1TXREQL        equ	304	;# 
   444   000131                     C1TXREQH        equ	305	;# 
   445   000132                     C1TXREQU        equ	306	;# 
   446   000133                     C1TXREQT        equ	307	;# 
   447   000134                     C1TRECL         equ	308	;# 
   448   000135                     C1TRECH         equ	309	;# 
   449   000136                     C1TRECU         equ	310	;# 
   450   000137                     C1TRECT         equ	311	;# 
   451   000138                     C1BDIAG0L       equ	312	;# 
   452   000139                     C1BDIAG0H       equ	313	;# 
   453   00013C                     C1BDIAG1L       equ	316	;# 
   454   00013D                     C1BDIAG1H       equ	317	;# 
   455   00013E                     C1BDIAG1U       equ	318	;# 
   456   00013F                     C1BDIAG1T       equ	319	;# 
   457   000140                     C1TEFCONL       equ	320	;# 
   458   000141                     C1TEFCONH       equ	321	;# 
   459   000142                     C1TEFCONU       equ	322	;# 
   460   000143                     C1TEFCONT       equ	323	;# 
   461   000144                     C1TEFSTAL       equ	324	;# 
   462   000145                     C1TEFSTAH       equ	325	;# 
   463   000146                     C1TEFSTAU       equ	326	;# 
   464   000147                     C1TEFSTAT       equ	327	;# 
   465   000148                     C1TEFUA         equ	328	;# 
   466   000148                     C1TEFUAL        equ	328	;# 
   467   000149                     C1TEFUAH        equ	329	;# 
   468   00014A                     C1TEFUAU        equ	330	;# 
   469   00014B                     C1TEFUAT        equ	331	;# 
   470   00014C                     C1FIFOBA        equ	332	;# 
   471   00014C                     C1FIFOBAL       equ	332	;# 
   472   00014D                     C1FIFOBAH       equ	333	;# 
   473   00014E                     C1FIFOBAU       equ	334	;# 
   474   00014F                     C1FIFOBAT       equ	335	;# 
   475   000150                     C1TXQCONL       equ	336	;# 
   476   000151                     C1TXQCONH       equ	337	;# 
   477   000152                     C1TXQCONU       equ	338	;# 
   478   000153                     C1TXQCONT       equ	339	;# 
   479   000154                     C1TXQSTAL       equ	340	;# 
   480   000155                     C1TXQSTAH       equ	341	;# 
   481   000156                     C1TXQSTAU       equ	342	;# 
   482   000157                     C1TXQSTAT       equ	343	;# 
   483   000158                     C1TXQUA         equ	344	;# 
   484   000158                     C1TXQUAL        equ	344	;# 
   485   000159                     C1TXQUAH        equ	345	;# 
   486   00015A                     C1TXQUAU        equ	346	;# 
   487   00015B                     C1TXQUAT        equ	347	;# 
   488   00015C                     C1FIFOCON1      equ	348	;# 
   489   00015C                     C1FIFOCON1L     equ	348	;# 
   490   00015D                     C1FIFOCON1H     equ	349	;# 
   491   00015E                     C1FIFOCON1U     equ	350	;# 
   492   00015F                     C1FIFOCON1T     equ	351	;# 
   493   000160                     C1FIFOSTA1      equ	352	;# 
   494   000160                     C1FIFOSTA1L     equ	352	;# 
   495   000161                     C1FIFOSTA1H     equ	353	;# 
   496   000162                     C1FIFOSTA1U     equ	354	;# 
   497   000163                     C1FIFOSTA1T     equ	355	;# 
   498   000164                     C1FIFOUA1       equ	356	;# 
   499   000164                     C1FIFOUA1L      equ	356	;# 
   500   000165                     C1FIFOUA1H      equ	357	;# 
   501   000166                     C1FIFOUA1U      equ	358	;# 
   502   000167                     C1FIFOUA1T      equ	359	;# 
   503   000168                     C1FIFOCON2      equ	360	;# 
   504   000168                     C1FIFOCON2L     equ	360	;# 
   505   000169                     C1FIFOCON2H     equ	361	;# 
   506   00016A                     C1FIFOCON2U     equ	362	;# 
   507   00016B                     C1FIFOCON2T     equ	363	;# 
   508   00016C                     C1FIFOSTA2      equ	364	;# 
   509   00016C                     C1FIFOSTA2L     equ	364	;# 
   510   00016D                     C1FIFOSTA2H     equ	365	;# 
   511   00016E                     C1FIFOSTA2U     equ	366	;# 
   512   00016F                     C1FIFOSTA2T     equ	367	;# 
   513   000170                     C1FIFOUA2       equ	368	;# 
   514   000170                     C1FIFOUA2L      equ	368	;# 
   515   000171                     C1FIFOUA2H      equ	369	;# 
   516   000172                     C1FIFOUA2U      equ	370	;# 
   517   000173                     C1FIFOUA2T      equ	371	;# 
   518   000174                     C1FIFOCON3      equ	372	;# 
   519   000174                     C1FIFOCON3L     equ	372	;# 
   520   000175                     C1FIFOCON3H     equ	373	;# 
   521   000176                     C1FIFOCON3U     equ	374	;# 
   522   000177                     C1FIFOCON3T     equ	375	;# 
   523   000178                     C1FIFOSTA3      equ	376	;# 
   524   000178                     C1FIFOSTA3L     equ	376	;# 
   525   000179                     C1FIFOSTA3H     equ	377	;# 
   526   00017A                     C1FIFOSTA3U     equ	378	;# 
   527   00017B                     C1FIFOSTA3T     equ	379	;# 
   528   00017C                     C1FIFOUA3       equ	380	;# 
   529   00017C                     C1FIFOUA3L      equ	380	;# 
   530   00017D                     C1FIFOUA3H      equ	381	;# 
   531   00017E                     C1FIFOUA3U      equ	382	;# 
   532   00017F                     C1FIFOUA3T      equ	383	;# 
   533   000180                     C1FLTCON0L      equ	384	;# 
   534   000181                     C1FLTCON0H      equ	385	;# 
   535   000182                     C1FLTCON0U      equ	386	;# 
   536   000183                     C1FLTCON0T      equ	387	;# 
   537   000184                     C1FLTCON1L      equ	388	;# 
   538   000185                     C1FLTCON1H      equ	389	;# 
   539   000186                     C1FLTCON1U      equ	390	;# 
   540   000187                     C1FLTCON1T      equ	391	;# 
   541   000188                     C1FLTCON2L      equ	392	;# 
   542   000189                     C1FLTCON2H      equ	393	;# 
   543   00018A                     C1FLTCON2U      equ	394	;# 
   544   00018B                     C1FLTCON2T      equ	395	;# 
   545   00018C                     C1FLTOBJ0       equ	396	;# 
   546   00018C                     C1FLTOBJ0L      equ	396	;# 
   547   00018D                     C1FLTOBJ0H      equ	397	;# 
   548   00018E                     C1FLTOBJ0U      equ	398	;# 
   549   00018F                     C1FLTOBJ0T      equ	399	;# 
   550   000190                     C1MASK0         equ	400	;# 
   551   000190                     C1MASK0L        equ	400	;# 
   552   000191                     C1MASK0H        equ	401	;# 
   553   000192                     C1MASK0U        equ	402	;# 
   554   000193                     C1MASK0T        equ	403	;# 
   555   000194                     C1FLTOBJ1       equ	404	;# 
   556   000194                     C1FLTOBJ1L      equ	404	;# 
   557   000195                     C1FLTOBJ1H      equ	405	;# 
   558   000196                     C1FLTOBJ1U      equ	406	;# 
   559   000197                     C1FLTOBJ1T      equ	407	;# 
   560   000198                     C1MASK1         equ	408	;# 
   561   000198                     C1MASK1L        equ	408	;# 
   562   000199                     C1MASK1H        equ	409	;# 
   563   00019A                     C1MASK1U        equ	410	;# 
   564   00019B                     C1MASK1T        equ	411	;# 
   565   00019C                     C1FLTOBJ2       equ	412	;# 
   566   00019C                     C1FLTOBJ2L      equ	412	;# 
   567   00019D                     C1FLTOBJ2H      equ	413	;# 
   568   00019E                     C1FLTOBJ2U      equ	414	;# 
   569   00019F                     C1FLTOBJ2T      equ	415	;# 
   570   0001A0                     C1MASK2         equ	416	;# 
   571   0001A0                     C1MASK2L        equ	416	;# 
   572   0001A1                     C1MASK2H        equ	417	;# 
   573   0001A2                     C1MASK2U        equ	418	;# 
   574   0001A3                     C1MASK2T        equ	419	;# 
   575   0001A4                     C1FLTOBJ3       equ	420	;# 
   576   0001A4                     C1FLTOBJ3L      equ	420	;# 
   577   0001A5                     C1FLTOBJ3H      equ	421	;# 
   578   0001A6                     C1FLTOBJ3U      equ	422	;# 
   579   0001A7                     C1FLTOBJ3T      equ	423	;# 
   580   0001A8                     C1MASK3         equ	424	;# 
   581   0001A8                     C1MASK3L        equ	424	;# 
   582   0001A9                     C1MASK3H        equ	425	;# 
   583   0001AA                     C1MASK3U        equ	426	;# 
   584   0001AB                     C1MASK3T        equ	427	;# 
   585   0001AC                     C1FLTOBJ4       equ	428	;# 
   586   0001AC                     C1FLTOBJ4L      equ	428	;# 
   587   0001AD                     C1FLTOBJ4H      equ	429	;# 
   588   0001AE                     C1FLTOBJ4U      equ	430	;# 
   589   0001AF                     C1FLTOBJ4T      equ	431	;# 
   590   0001B0                     C1MASK4         equ	432	;# 
   591   0001B0                     C1MASK4L        equ	432	;# 
   592   0001B1                     C1MASK4H        equ	433	;# 
   593   0001B2                     C1MASK4U        equ	434	;# 
   594   0001B3                     C1MASK4T        equ	435	;# 
   595   0001B4                     C1FLTOBJ5       equ	436	;# 
   596   0001B4                     C1FLTOBJ5L      equ	436	;# 
   597   0001B5                     C1FLTOBJ5H      equ	437	;# 
   598   0001B6                     C1FLTOBJ5U      equ	438	;# 
   599   0001B7                     C1FLTOBJ5T      equ	439	;# 
   600   0001B8                     C1MASK5         equ	440	;# 
   601   0001B8                     C1MASK5L        equ	440	;# 
   602   0001B9                     C1MASK5H        equ	441	;# 
   603   0001BA                     C1MASK5U        equ	442	;# 
   604   0001BB                     C1MASK5T        equ	443	;# 
   605   0001BC                     C1FLTOBJ6       equ	444	;# 
   606   0001BC                     C1FLTOBJ6L      equ	444	;# 
   607   0001BD                     C1FLTOBJ6H      equ	445	;# 
   608   0001BE                     C1FLTOBJ6U      equ	446	;# 
   609   0001BF                     C1FLTOBJ6T      equ	447	;# 
   610   0001C0                     C1MASK6         equ	448	;# 
   611   0001C0                     C1MASK6L        equ	448	;# 
   612   0001C1                     C1MASK6H        equ	449	;# 
   613   0001C2                     C1MASK6U        equ	450	;# 
   614   0001C3                     C1MASK6T        equ	451	;# 
   615   0001C4                     C1FLTOBJ7       equ	452	;# 
   616   0001C4                     C1FLTOBJ7L      equ	452	;# 
   617   0001C5                     C1FLTOBJ7H      equ	453	;# 
   618   0001C6                     C1FLTOBJ7U      equ	454	;# 
   619   0001C7                     C1FLTOBJ7T      equ	455	;# 
   620   0001C8                     C1MASK7         equ	456	;# 
   621   0001C8                     C1MASK7L        equ	456	;# 
   622   0001C9                     C1MASK7H        equ	457	;# 
   623   0001CA                     C1MASK7U        equ	458	;# 
   624   0001CB                     C1MASK7T        equ	459	;# 
   625   0001CC                     C1FLTOBJ8       equ	460	;# 
   626   0001CC                     C1FLTOBJ8L      equ	460	;# 
   627   0001CD                     C1FLTOBJ8H      equ	461	;# 
   628   0001CE                     C1FLTOBJ8U      equ	462	;# 
   629   0001CF                     C1FLTOBJ8T      equ	463	;# 
   630   0001D0                     C1MASK8         equ	464	;# 
   631   0001D0                     C1MASK8L        equ	464	;# 
   632   0001D1                     C1MASK8H        equ	465	;# 
   633   0001D2                     C1MASK8U        equ	466	;# 
   634   0001D3                     C1MASK8T        equ	467	;# 
   635   0001D4                     C1FLTOBJ9       equ	468	;# 
   636   0001D4                     C1FLTOBJ9L      equ	468	;# 
   637   0001D5                     C1FLTOBJ9H      equ	469	;# 
   638   0001D6                     C1FLTOBJ9U      equ	470	;# 
   639   0001D7                     C1FLTOBJ9T      equ	471	;# 
   640   0001D8                     C1MASK9         equ	472	;# 
   641   0001D8                     C1MASK9L        equ	472	;# 
   642   0001D9                     C1MASK9H        equ	473	;# 
   643   0001DA                     C1MASK9U        equ	474	;# 
   644   0001DB                     C1MASK9T        equ	475	;# 
   645   0001DC                     C1FLTOBJ10      equ	476	;# 
   646   0001DC                     C1FLTOBJ10L     equ	476	;# 
   647   0001DD                     C1FLTOBJ10H     equ	477	;# 
   648   0001DE                     C1FLTOBJ10U     equ	478	;# 
   649   0001DF                     C1FLTOBJ10T     equ	479	;# 
   650   0001E0                     C1MASK10        equ	480	;# 
   651   0001E0                     C1MASK10L       equ	480	;# 
   652   0001E1                     C1MASK10H       equ	481	;# 
   653   0001E2                     C1MASK10U       equ	482	;# 
   654   0001E3                     C1MASK10T       equ	483	;# 
   655   0001E4                     C1FLTOBJ11      equ	484	;# 
   656   0001E4                     C1FLTOBJ11L     equ	484	;# 
   657   0001E5                     C1FLTOBJ11H     equ	485	;# 
   658   0001E6                     C1FLTOBJ11U     equ	486	;# 
   659   0001E7                     C1FLTOBJ11T     equ	487	;# 
   660   0001E8                     C1MASK11        equ	488	;# 
   661   0001E8                     C1MASK11L       equ	488	;# 
   662   0001E9                     C1MASK11H       equ	489	;# 
   663   0001EA                     C1MASK11U       equ	490	;# 
   664   0001EB                     C1MASK11T       equ	491	;# 
   665   000200                     PPSLOCK         equ	512	;# 
   666   000201                     RA0PPS          equ	513	;# 
   667   000202                     RA1PPS          equ	514	;# 
   668   000203                     RA2PPS          equ	515	;# 
   669   000204                     RA3PPS          equ	516	;# 
   670   000205                     RA4PPS          equ	517	;# 
   671   000206                     RA5PPS          equ	518	;# 
   672   000207                     RA6PPS          equ	519	;# 
   673   000208                     RA7PPS          equ	520	;# 
   674   000209                     RB0PPS          equ	521	;# 
   675   00020A                     RB1PPS          equ	522	;# 
   676   00020B                     RB2PPS          equ	523	;# 
   677   00020C                     RB3PPS          equ	524	;# 
   678   00020D                     RB4PPS          equ	525	;# 
   679   00020E                     RB5PPS          equ	526	;# 
   680   00020F                     RB6PPS          equ	527	;# 
   681   000210                     RB7PPS          equ	528	;# 
   682   000211                     RC0PPS          equ	529	;# 
   683   000212                     RC1PPS          equ	530	;# 
   684   000213                     RC2PPS          equ	531	;# 
   685   000214                     RC3PPS          equ	532	;# 
   686   000215                     RC4PPS          equ	533	;# 
   687   000216                     RC5PPS          equ	534	;# 
   688   000217                     RC6PPS          equ	535	;# 
   689   000218                     RC7PPS          equ	536	;# 
   690   00023D                     CANRXPPS        equ	573	;# 
   691   00023E                     INT0PPS         equ	574	;# 
   692   00023F                     INT1PPS         equ	575	;# 
   693   000240                     INT2PPS         equ	576	;# 
   694   000241                     T0CKIPPS        equ	577	;# 
   695   000242                     T1CKIPPS        equ	578	;# 
   696   000243                     T1GPPS          equ	579	;# 
   697   000244                     T3CKIPPS        equ	580	;# 
   698   000245                     T3GPPS          equ	581	;# 
   699   000246                     T5CKIPPS        equ	582	;# 
   700   000247                     T5GPPS          equ	583	;# 
   701   000248                     T2INPPS         equ	584	;# 
   702   000249                     T4INPPS         equ	585	;# 
   703   00024A                     T6INPPS         equ	586	;# 
   704   00024B                     TUIN0PPS        equ	587	;# 
   705   00024C                     TUIN1PPS        equ	588	;# 
   706   00024F                     CCP1PPS         equ	591	;# 
   707   000250                     CCP2PPS         equ	592	;# 
   708   000251                     CCP3PPS         equ	593	;# 
   709   000253                     PWM1ERSPPS      equ	595	;# 
   710   000254                     PWM2ERSPPS      equ	596	;# 
   711   000255                     PWM3ERSPPS      equ	597	;# 
   712   000256                     PWM4ERSPPS      equ	598	;# 
   713   000257                     PWMIN0PPS       equ	599	;# 
   714   000258                     PWMIN1PPS       equ	600	;# 
   715   000259                     SMT1WINPPS      equ	601	;# 
   716   00025A                     SMT1SIGPPS      equ	602	;# 
   717   00025B                     CWG1PPS         equ	603	;# 
   718   00025B                     CWG1INPPS       equ	603	;# 
   719   00025C                     CWG2PPS         equ	604	;# 
   720   00025C                     CWG2INPPS       equ	604	;# 
   721   00025D                     CWG3PPS         equ	605	;# 
   722   00025D                     CWG3INPPS       equ	605	;# 
   723   00025E                     MD1CARLPPS      equ	606	;# 
   724   00025E                     MDCARLPPS       equ	606	;# 
   725   00025F                     MD1CARHPPS      equ	607	;# 
   726   00025F                     MDCARHPPS       equ	607	;# 
   727   000260                     MD1SRCPPS       equ	608	;# 
   728   000260                     MDSRCPPS        equ	608	;# 
   729   000261                     CLCIN0PPS       equ	609	;# 
   730   000262                     CLCIN1PPS       equ	610	;# 
   731   000263                     CLCIN2PPS       equ	611	;# 
   732   000264                     CLCIN3PPS       equ	612	;# 
   733   000265                     CLCIN4PPS       equ	613	;# 
   734   000266                     CLCIN5PPS       equ	614	;# 
   735   000267                     CLCIN6PPS       equ	615	;# 
   736   000268                     CLCIN7PPS       equ	616	;# 
   737   000269                     ADACTPPS        equ	617	;# 
   738   00026A                     SPI1SCKPPS      equ	618	;# 
   739   00026B                     SPI1SDIPPS      equ	619	;# 
   740   00026C                     SPI1SSPPS       equ	620	;# 
   741   00026D                     SPI2SCKPPS      equ	621	;# 
   742   00026E                     SPI2SDIPPS      equ	622	;# 
   743   00026F                     SPI2SSPPS       equ	623	;# 
   744   000270                     I2C1SDAPPS      equ	624	;# 
   745   000271                     I2C1SCLPPS      equ	625	;# 
   746   000272                     U1RXPPS         equ	626	;# 
   747   000273                     U1CTSPPS        equ	627	;# 
   748   000274                     U2RXPPS         equ	628	;# 
   749   000275                     U2CTSPPS        equ	629	;# 
   750   000276                     U3RXPPS         equ	630	;# 
   751   000277                     U3CTSPPS        equ	631	;# 
   752   000278                     U4RXPPS         equ	632	;# 
   753   000279                     U4CTSPPS        equ	633	;# 
   754   00027A                     U5RXPPS         equ	634	;# 
   755   00027B                     U5CTSPPS        equ	635	;# 
   756   000286                     RC4I2C          equ	646	;# 
   757   000287                     RC3I2C          equ	647	;# 
   758   000288                     RB2I2C          equ	648	;# 
   759   000289                     RB1I2C          equ	649	;# 
   760   00028A                     I2C1RXB         equ	650	;# 
   761   00028B                     I2C1TXB         equ	651	;# 
   762   00028C                     I2C1CNTL        equ	652	;# 
   763   00028D                     I2C1CNTH        equ	653	;# 
   764   00028E                     I2C1ADB0        equ	654	;# 
   765   00028F                     I2C1ADB1        equ	655	;# 
   766   000290                     I2C1ADR0        equ	656	;# 
   767   000291                     I2C1ADR1        equ	657	;# 
   768   000292                     I2C1ADR2        equ	658	;# 
   769   000293                     I2C1ADR3        equ	659	;# 
   770   000294                     I2C1CON0        equ	660	;# 
   771   000295                     I2C1CON1        equ	661	;# 
   772   000296                     I2C1CON2        equ	662	;# 
   773   000297                     I2C1ERR         equ	663	;# 
   774   000298                     I2C1STAT0       equ	664	;# 
   775   000299                     I2C1STAT1       equ	665	;# 
   776   00029A                     I2C1PIR         equ	666	;# 
   777   00029B                     I2C1PIE         equ	667	;# 
   778   00029C                     I2C1BTO         equ	668	;# 
   779   00029D                     I2C1BAUD        equ	669	;# 
   780   00029E                     I2C1CLK         equ	670	;# 
   781   00029F                     I2C1BTOC        equ	671	;# 
   782   0002A1                     U1RXB           equ	673	;# 
   783   0002A1                     U1RXBL          equ	673	;# 
   784   0002A2                     U1RXCHK         equ	674	;# 
   785   0002A3                     U1TXB           equ	675	;# 
   786   0002A3                     U1TXBL          equ	675	;# 
   787   0002A4                     U1TXCHK         equ	676	;# 
   788   0002A5                     U1P1            equ	677	;# 
   789   0002A5                     U1P1L           equ	677	;# 
   790   0002A6                     U1P1H           equ	678	;# 
   791   0002A7                     U1P2            equ	679	;# 
   792   0002A7                     U1P2L           equ	679	;# 
   793   0002A8                     U1P2H           equ	680	;# 
   794   0002A9                     U1P3            equ	681	;# 
   795   0002A9                     U1P3L           equ	681	;# 
   796   0002AA                     U1P3H           equ	682	;# 
   797   0002AB                     U1CON0          equ	683	;# 
   798   0002AC                     U1CON1          equ	684	;# 
   799   0002AD                     U1CON2          equ	685	;# 
   800   0002AE                     U1BRG           equ	686	;# 
   801   0002AE                     U1BRGL          equ	686	;# 
   802   0002AF                     U1BRGH          equ	687	;# 
   803   0002B0                     U1FIFO          equ	688	;# 
   804   0002B1                     U1UIR           equ	689	;# 
   805   0002B2                     U1ERRIR         equ	690	;# 
   806   0002B3                     U1ERRIE         equ	691	;# 
   807   0002B4                     U2RXB           equ	692	;# 
   808   0002B4                     U2RXBL          equ	692	;# 
   809   0002B5                     U2RXCHK         equ	693	;# 
   810   0002B6                     U2TXB           equ	694	;# 
   811   0002B6                     U2TXBL          equ	694	;# 
   812   0002B7                     U2TXCHK         equ	695	;# 
   813   0002B8                     U2P1            equ	696	;# 
   814   0002B8                     U2P1L           equ	696	;# 
   815   0002B9                     U2P1H           equ	697	;# 
   816   0002BA                     U2P2            equ	698	;# 
   817   0002BA                     U2P2L           equ	698	;# 
   818   0002BB                     U2P2H           equ	699	;# 
   819   0002BC                     U2P3            equ	700	;# 
   820   0002BC                     U2P3L           equ	700	;# 
   821   0002BD                     U2P3H           equ	701	;# 
   822   0002BE                     U2CON0          equ	702	;# 
   823   0002BF                     U2CON1          equ	703	;# 
   824   0002C0                     U2CON2          equ	704	;# 
   825   0002C1                     U2BRG           equ	705	;# 
   826   0002C1                     U2BRGL          equ	705	;# 
   827   0002C2                     U2BRGH          equ	706	;# 
   828   0002C3                     U2FIFO          equ	707	;# 
   829   0002C4                     U2UIR           equ	708	;# 
   830   0002C5                     U2ERRIR         equ	709	;# 
   831   0002C6                     U2ERRIE         equ	710	;# 
   832   0002C7                     U3RXB           equ	711	;# 
   833   0002C7                     U3RXBL          equ	711	;# 
   834   0002C9                     U3TXB           equ	713	;# 
   835   0002C9                     U3TXBL          equ	713	;# 
   836   0002CB                     U3P1            equ	715	;# 
   837   0002CB                     U3P1L           equ	715	;# 
   838   0002CD                     U3P2            equ	717	;# 
   839   0002CD                     U3P2L           equ	717	;# 
   840   0002CF                     U3P3            equ	719	;# 
   841   0002CF                     U3P3L           equ	719	;# 
   842   0002D1                     U3CON0          equ	721	;# 
   843   0002D2                     U3CON1          equ	722	;# 
   844   0002D3                     U3CON2          equ	723	;# 
   845   0002D4                     U3BRG           equ	724	;# 
   846   0002D4                     U3BRGL          equ	724	;# 
   847   0002D5                     U3BRGH          equ	725	;# 
   848   0002D6                     U3FIFO          equ	726	;# 
   849   0002D7                     U3UIR           equ	727	;# 
   850   0002D8                     U3ERRIR         equ	728	;# 
   851   0002D9                     U3ERRIE         equ	729	;# 
   852   0002DA                     U4RXB           equ	730	;# 
   853   0002DA                     U4RXBL          equ	730	;# 
   854   0002DC                     U4TXB           equ	732	;# 
   855   0002DC                     U4TXBL          equ	732	;# 
   856   0002DE                     U4P1            equ	734	;# 
   857   0002DE                     U4P1L           equ	734	;# 
   858   0002E0                     U4P2            equ	736	;# 
   859   0002E0                     U4P2L           equ	736	;# 
   860   0002E2                     U4P3            equ	738	;# 
   861   0002E2                     U4P3L           equ	738	;# 
   862   0002E4                     U4CON0          equ	740	;# 
   863   0002E5                     U4CON1          equ	741	;# 
   864   0002E6                     U4CON2          equ	742	;# 
   865   0002E7                     U4BRG           equ	743	;# 
   866   0002E7                     U4BRGL          equ	743	;# 
   867   0002E8                     U4BRGH          equ	744	;# 
   868   0002E9                     U4FIFO          equ	745	;# 
   869   0002EA                     U4UIR           equ	746	;# 
   870   0002EB                     U4ERRIR         equ	747	;# 
   871   0002EC                     U4ERRIE         equ	748	;# 
   872   0002ED                     U5RXB           equ	749	;# 
   873   0002ED                     U5RXBL          equ	749	;# 
   874   0002EF                     U5TXB           equ	751	;# 
   875   0002EF                     U5TXBL          equ	751	;# 
   876   0002F1                     U5P1            equ	753	;# 
   877   0002F1                     U5P1L           equ	753	;# 
   878   0002F3                     U5P2            equ	755	;# 
   879   0002F3                     U5P2L           equ	755	;# 
   880   0002F5                     U5P3            equ	757	;# 
   881   0002F5                     U5P3L           equ	757	;# 
   882   0002F7                     U5CON0          equ	759	;# 
   883   0002F8                     U5CON1          equ	760	;# 
   884   0002F9                     U5CON2          equ	761	;# 
   885   0002FA                     U5BRG           equ	762	;# 
   886   0002FA                     U5BRGL          equ	762	;# 
   887   0002FB                     U5BRGH          equ	763	;# 
   888   0002FC                     U5FIFO          equ	764	;# 
   889   0002FD                     U5UIR           equ	765	;# 
   890   0002FE                     U5ERRIR         equ	766	;# 
   891   0002FF                     U5ERRIE         equ	767	;# 
   892   000300                     SMT1TMR         equ	768	;# 
   893   000300                     SMT1TMRL        equ	768	;# 
   894   000301                     SMT1TMRH        equ	769	;# 
   895   000302                     SMT1TMRU        equ	770	;# 
   896   000303                     SMT1CPR         equ	771	;# 
   897   000303                     SMT1CPRL        equ	771	;# 
   898   000304                     SMT1CPRH        equ	772	;# 
   899   000305                     SMT1CPRU        equ	773	;# 
   900   000306                     SMT1CPW         equ	774	;# 
   901   000306                     SMT1CPWL        equ	774	;# 
   902   000307                     SMT1CPWH        equ	775	;# 
   903   000308                     SMT1CPWU        equ	776	;# 
   904   000309                     SMT1PR          equ	777	;# 
   905   000309                     SMT1PRL         equ	777	;# 
   906   00030A                     SMT1PRH         equ	778	;# 
   907   00030B                     SMT1PRU         equ	779	;# 
   908   00030C                     SMT1CON0        equ	780	;# 
   909   00030D                     SMT1CON1        equ	781	;# 
   910   00030E                     SMT1STAT        equ	782	;# 
   911   00030F                     SMT1CLK         equ	783	;# 
   912   000310                     SMT1SIG         equ	784	;# 
   913   000311                     SMT1WIN         equ	785	;# 
   914   000318                     TMR0L           equ	792	;# 
   915   000318                     TMR0            equ	792	;# 
   916   000319                     TMR0H           equ	793	;# 
   917   000319                     PR0             equ	793	;# 
   918   00031A                     T0CON0          equ	794	;# 
   919   00031B                     T0CON1          equ	795	;# 
   920   00031C                     TMR1            equ	796	;# 
   921   00031C                     TMR1L           equ	796	;# 
   922   00031D                     TMR1H           equ	797	;# 
   923   00031E                     T1CON           equ	798	;# 
   924   00031E                     TMR1CON         equ	798	;# 
   925   00031F                     T1GCON          equ	799	;# 
   926   00031F                     TMR1GCON        equ	799	;# 
   927   000320                     T1GATE          equ	800	;# 
   928   000320                     TMR1GATE        equ	800	;# 
   929   000321                     T1CLK           equ	801	;# 
   930   000321                     TMR1CLK         equ	801	;# 
   931   000321                     PR1             equ	801	;# 
   932   000322                     T2TMR           equ	802	;# 
   933   000322                     TMR2            equ	802	;# 
   934   000323                     T2PR            equ	803	;# 
   935   000323                     PR2             equ	803	;# 
   936   000324                     T2CON           equ	804	;# 
   937   000325                     T2HLT           equ	805	;# 
   938   000326                     T2CLKCON        equ	806	;# 
   939   000326                     T2CLK           equ	806	;# 
   940   000327                     T2RST           equ	807	;# 
   941   000328                     TMR3            equ	808	;# 
   942   000328                     TMR3L           equ	808	;# 
   943   000329                     TMR3H           equ	809	;# 
   944   00032A                     T3CON           equ	810	;# 
   945   00032A                     TMR3CON         equ	810	;# 
   946   00032B                     T3GCON          equ	811	;# 
   947   00032B                     TMR3GCON        equ	811	;# 
   948   00032C                     T3GATE          equ	812	;# 
   949   00032C                     TMR3GATE        equ	812	;# 
   950   00032D                     T3CLK           equ	813	;# 
   951   00032D                     TMR3CLK         equ	813	;# 
   952   00032D                     PR3             equ	813	;# 
   953   00032E                     T4TMR           equ	814	;# 
   954   00032E                     TMR4            equ	814	;# 
   955   00032F                     T4PR            equ	815	;# 
   956   00032F                     PR4             equ	815	;# 
   957   000330                     T4CON           equ	816	;# 
   958   000331                     T4HLT           equ	817	;# 
   959   000332                     T4CLKCON        equ	818	;# 
   960   000332                     T4CLK           equ	818	;# 
   961   000333                     T4RST           equ	819	;# 
   962   000334                     TMR5            equ	820	;# 
   963   000334                     TMR5L           equ	820	;# 
   964   000335                     TMR5H           equ	821	;# 
   965   000336                     T5CON           equ	822	;# 
   966   000336                     TMR5CON         equ	822	;# 
   967   000337                     T5GCON          equ	823	;# 
   968   000337                     TMR5GCON        equ	823	;# 
   969   000338                     T5GATE          equ	824	;# 
   970   000338                     TMR5GATE        equ	824	;# 
   971   000339                     T5CLK           equ	825	;# 
   972   000339                     TMR5CLK         equ	825	;# 
   973   000339                     PR5             equ	825	;# 
   974   00033A                     T6TMR           equ	826	;# 
   975   00033A                     TMR6            equ	826	;# 
   976   00033B                     T6PR            equ	827	;# 
   977   00033B                     PR6             equ	827	;# 
   978   00033C                     T6CON           equ	828	;# 
   979   00033D                     T6HLT           equ	829	;# 
   980   00033E                     T6CLKCON        equ	830	;# 
   981   00033E                     T6CLK           equ	830	;# 
   982   00033F                     T6RST           equ	831	;# 
   983   000340                     CCPR1           equ	832	;# 
   984   000340                     CCPR1L          equ	832	;# 
   985   000341                     CCPR1H          equ	833	;# 
   986   000342                     CCP1CON         equ	834	;# 
   987   000343                     CCP1CAP         equ	835	;# 
   988   000344                     CCPR2           equ	836	;# 
   989   000344                     CCPR2L          equ	836	;# 
   990   000345                     CCPR2H          equ	837	;# 
   991   000346                     CCP2CON         equ	838	;# 
   992   000347                     CCP2CAP         equ	839	;# 
   993   000348                     CCPR3           equ	840	;# 
   994   000348                     CCPR3L          equ	840	;# 
   995   000349                     CCPR3H          equ	841	;# 
   996   00034A                     CCP3CON         equ	842	;# 
   997   00034B                     CCP3CAP         equ	843	;# 
   998   00034C                     CCPTMRS0        equ	844	;# 
   999   00034F                     CRCDATA         equ	847	;# 
  1000   00034F                     CRCDATAL        equ	847	;# 
  1001   000350                     CRCDATAH        equ	848	;# 
  1002   000351                     CRCDATAU        equ	849	;# 
  1003   000352                     CRCDATAT        equ	850	;# 
  1004   000353                     CRCOUT          equ	851	;# 
  1005   000353                     CRCSHFT         equ	851	;# 
  1006   000353                     CRCXOR          equ	851	;# 
  1007   000353                     CRCOUTL         equ	851	;# 
  1008   000353                     CRCSHFTL        equ	851	;# 
  1009   000353                     CRCSHIFTL       equ	851	;# 
  1010   000353                     CRCXORL         equ	851	;# 
  1011   000354                     CRCOUTH         equ	852	;# 
  1012   000354                     CRCSHFTH        equ	852	;# 
  1013   000354                     CRCSHIFTH       equ	852	;# 
  1014   000354                     CRCXORH         equ	852	;# 
  1015   000355                     CRCOUTU         equ	853	;# 
  1016   000355                     CRCSHFTU        equ	853	;# 
  1017   000355                     CRCSHIFTU       equ	853	;# 
  1018   000355                     CRCXORU         equ	853	;# 
  1019   000356                     CRCOUTT         equ	854	;# 
  1020   000356                     CRCSHFTT        equ	854	;# 
  1021   000356                     CRCSHIFTT       equ	854	;# 
  1022   000356                     CRCXORT         equ	854	;# 
  1023   000357                     CRCCON0         equ	855	;# 
  1024   000358                     CRCCON1         equ	856	;# 
  1025   000359                     CRCCON2         equ	857	;# 
  1026   00035A                     SCANLADR        equ	858	;# 
  1027   00035A                     SCANLADRL       equ	858	;# 
  1028   00035B                     SCANLADRH       equ	859	;# 
  1029   00035C                     SCANLADRU       equ	860	;# 
  1030   00035D                     SCANHADR        equ	861	;# 
  1031   00035D                     SCANHADRL       equ	861	;# 
  1032   00035E                     SCANHADRH       equ	862	;# 
  1033   00035F                     SCANHADRU       equ	863	;# 
  1034   000360                     SCANCON0        equ	864	;# 
  1035   000361                     SCANTRIG        equ	865	;# 
  1036   000362                     IPR0            equ	866	;# 
  1037   000363                     IPR1            equ	867	;# 
  1038   000364                     IPR2            equ	868	;# 
  1039   000365                     IPR3            equ	869	;# 
  1040   000366                     IPR4            equ	870	;# 
  1041   000367                     IPR5            equ	871	;# 
  1042   000368                     IPR6            equ	872	;# 
  1043   000369                     IPR7            equ	873	;# 
  1044   00036A                     IPR8            equ	874	;# 
  1045   00036B                     IPR9            equ	875	;# 
  1046   00036C                     IPR10           equ	876	;# 
  1047   00036D                     IPR11           equ	877	;# 
  1048   00036E                     IPR12           equ	878	;# 
  1049   00036F                     IPR13           equ	879	;# 
  1050   000370                     IPR14           equ	880	;# 
  1051   000371                     IPR15           equ	881	;# 
  1052   000373                     STATUS_CSHAD    equ	883	;# 
  1053   000374                     WREG_CSHAD      equ	884	;# 
  1054   000375                     BSR_CSHAD       equ	885	;# 
  1055   000376                     SHADCON         equ	886	;# 
  1056   000377                     STATUS_SHAD     equ	887	;# 
  1057   000378                     WREG_SHAD       equ	888	;# 
  1058   000379                     BSR_SHAD        equ	889	;# 
  1059   00037A                     PCLATH_SHAD     equ	890	;# 
  1060   00037B                     PCLATU_SHAD     equ	891	;# 
  1061   00037C                     FSR0SH          equ	892	;# 
  1062   00037C                     FSR0L_SHAD      equ	892	;# 
  1063   00037D                     FSR0H_SHAD      equ	893	;# 
  1064   00037E                     FSR1SH          equ	894	;# 
  1065   00037E                     FSR1L_SHAD      equ	894	;# 
  1066   00037F                     FSR1H_SHAD      equ	895	;# 
  1067   000380                     FSR2SH          equ	896	;# 
  1068   000380                     FSR2L_SHAD      equ	896	;# 
  1069   000381                     FSR2H_SHAD      equ	897	;# 
  1070   000382                     PRODSH          equ	898	;# 
  1071   000382                     PRODL_SHAD      equ	898	;# 
  1072   000383                     PRODH_SHAD      equ	899	;# 
  1073   000387                     TU16ACON0       equ	903	;# 
  1074   000388                     TU16ACON1       equ	904	;# 
  1075   000389                     TU16AHLT        equ	905	;# 
  1076   00038A                     TU16APS         equ	906	;# 
  1077   00038B                     TU16ATMR        equ	907	;# 
  1078   00038B                     TU16ACR         equ	907	;# 
  1079   00038B                     TU16ATMRL       equ	907	;# 
  1080   00038B                     TU16ACRL        equ	907	;# 
  1081   00038C                     TU16ATMRH       equ	908	;# 
  1082   00038C                     TU16ACRH        equ	908	;# 
  1083   00038D                     TU16APR         equ	909	;# 
  1084   00038D                     TU16APRL        equ	909	;# 
  1085   00038E                     TU16APRH        equ	910	;# 
  1086   00038F                     TU16ACLK        equ	911	;# 
  1087   000390                     TU16AERS        equ	912	;# 
  1088   000393                     TU16BCON0       equ	915	;# 
  1089   000394                     TU16BCON1       equ	916	;# 
  1090   000395                     TU16BHLT        equ	917	;# 
  1091   000396                     TU16BPS         equ	918	;# 
  1092   000397                     TU16BTMR        equ	919	;# 
  1093   000397                     TU16BCR         equ	919	;# 
  1094   000397                     TU16BTMRL       equ	919	;# 
  1095   000397                     TU16BCRL        equ	919	;# 
  1096   000398                     TU16BTMRH       equ	920	;# 
  1097   000398                     TU16BCRH        equ	920	;# 
  1098   000399                     TU16BPR         equ	921	;# 
  1099   000399                     TU16BPRL        equ	921	;# 
  1100   00039A                     TU16BPRH        equ	922	;# 
  1101   00039B                     TU16BCLK        equ	923	;# 
  1102   00039C                     TU16BERS        equ	924	;# 
  1103   0003BB                     TUCHAIN         equ	955	;# 
  1104   0003BC                     CWG1CLK         equ	956	;# 
  1105   0003BC                     CWG1CLKCON      equ	956	;# 
  1106   0003BD                     CWG1ISM         equ	957	;# 
  1107   0003BE                     CWG1DBR         equ	958	;# 
  1108   0003BF                     CWG1DBF         equ	959	;# 
  1109   0003C0                     CWG1CON0        equ	960	;# 
  1110   0003C1                     CWG1CON1        equ	961	;# 
  1111   0003C2                     CWG1AS0         equ	962	;# 
  1112   0003C3                     CWG1AS1         equ	963	;# 
  1113   0003C4                     CWG1STR         equ	964	;# 
  1114   0003C5                     CWG2CLK         equ	965	;# 
  1115   0003C5                     CWG2CLKCON      equ	965	;# 
  1116   0003C6                     CWG2ISM         equ	966	;# 
  1117   0003C7                     CWG2DBR         equ	967	;# 
  1118   0003C8                     CWG2DBF         equ	968	;# 
  1119   0003C9                     CWG2CON0        equ	969	;# 
  1120   0003CA                     CWG2CON1        equ	970	;# 
  1121   0003CB                     CWG2AS0         equ	971	;# 
  1122   0003CC                     CWG2AS1         equ	972	;# 
  1123   0003CD                     CWG2STR         equ	973	;# 
  1124   0003CE                     CWG3CLK         equ	974	;# 
  1125   0003CE                     CWG3CLKCON      equ	974	;# 
  1126   0003CF                     CWG3ISM         equ	975	;# 
  1127   0003D0                     CWG3DBR         equ	976	;# 
  1128   0003D1                     CWG3DBF         equ	977	;# 
  1129   0003D2                     CWG3CON0        equ	978	;# 
  1130   0003D3                     CWG3CON1        equ	979	;# 
  1131   0003D4                     CWG3AS0         equ	980	;# 
  1132   0003D5                     CWG3AS1         equ	981	;# 
  1133   0003D6                     CWG3STR         equ	982	;# 
  1134   0003D7                     FVRCON          equ	983	;# 
  1135   0003D8                     ADCPCON         equ	984	;# 
  1136   0003D8                     ADCP            equ	984	;# 
  1137   0003D9                     ADLTH           equ	985	;# 
  1138   0003D9                     ADLTHL          equ	985	;# 
  1139   0003DA                     ADLTHH          equ	986	;# 
  1140   0003DB                     ADUTH           equ	987	;# 
  1141   0003DB                     ADUTHL          equ	987	;# 
  1142   0003DC                     ADUTHH          equ	988	;# 
  1143   0003DD                     ADERR           equ	989	;# 
  1144   0003DD                     ADERRL          equ	989	;# 
  1145   0003DE                     ADERRH          equ	990	;# 
  1146   0003DF                     ADSTPT          equ	991	;# 
  1147   0003DF                     ADSTPTL         equ	991	;# 
  1148   0003E0                     ADSTPTH         equ	992	;# 
  1149   0003E1                     ADFLTR          equ	993	;# 
  1150   0003E1                     ADFLTRL         equ	993	;# 
  1151   0003E2                     ADFLTRH         equ	994	;# 
  1152   0003E3                     ADACC           equ	995	;# 
  1153   0003E3                     ADACCL          equ	995	;# 
  1154   0003E4                     ADACCH          equ	996	;# 
  1155   0003E5                     ADACCU          equ	997	;# 
  1156   0003E6                     ADCNT           equ	998	;# 
  1157   0003E7                     ADRPT           equ	999	;# 
  1158   0003E8                     ADPREV          equ	1000	;# 
  1159   0003E8                     ADPREVL         equ	1000	;# 
  1160   0003E9                     ADPREVH         equ	1001	;# 
  1161   0003EA                     ADRES           equ	1002	;# 
  1162   0003EA                     ADRESL          equ	1002	;# 
  1163   0003EB                     ADRESH          equ	1003	;# 
  1164   0003EC                     ADPCH           equ	1004	;# 
  1165   0003EE                     ADACQ           equ	1006	;# 
  1166   0003EE                     ADACQL          equ	1006	;# 
  1167   0003EF                     ADACQH          equ	1007	;# 
  1168   0003F0                     ADCAP           equ	1008	;# 
  1169   0003F1                     ADPRE           equ	1009	;# 
  1170   0003F1                     ADPREL          equ	1009	;# 
  1171   0003F2                     ADPREH          equ	1010	;# 
  1172   0003F3                     ADCON0          equ	1011	;# 
  1173   0003F4                     ADCON1          equ	1012	;# 
  1174   0003F5                     ADCON2          equ	1013	;# 
  1175   0003F6                     ADCON3          equ	1014	;# 
  1176   0003F7                     ADSTAT          equ	1015	;# 
  1177   0003F8                     ADREF           equ	1016	;# 
  1178   0003F9                     ADACT           equ	1017	;# 
  1179   0003FA                     ADCLK           equ	1018	;# 
  1180   0003FB                     ADCTX           equ	1019	;# 
  1181   0003FC                     ADCSEL1         equ	1020	;# 
  1182   0003FD                     ADCSEL2         equ	1021	;# 
  1183   0003FE                     ADCSEL3         equ	1022	;# 
  1184   0003FF                     ADCSEL4         equ	1023	;# 
  1185   000400                     ANSELA          equ	1024	;# 
  1186   000401                     WPUA            equ	1025	;# 
  1187   000402                     ODCONA          equ	1026	;# 
  1188   000403                     SLRCONA         equ	1027	;# 
  1189   000404                     INLVLA          equ	1028	;# 
  1190   000405                     IOCAP           equ	1029	;# 
  1191   000406                     IOCAN           equ	1030	;# 
  1192   000407                     IOCAF           equ	1031	;# 
  1193   000408                     ANSELB          equ	1032	;# 
  1194   000409                     WPUB            equ	1033	;# 
  1195   00040A                     ODCONB          equ	1034	;# 
  1196   00040B                     SLRCONB         equ	1035	;# 
  1197   00040C                     INLVLB          equ	1036	;# 
  1198   00040D                     IOCBP           equ	1037	;# 
  1199   00040E                     IOCBN           equ	1038	;# 
  1200   00040F                     IOCBF           equ	1039	;# 
  1201   000410                     ANSELC          equ	1040	;# 
  1202   000411                     WPUC            equ	1041	;# 
  1203   000412                     ODCONC          equ	1042	;# 
  1204   000413                     SLRCONC         equ	1043	;# 
  1205   000414                     INLVLC          equ	1044	;# 
  1206   000415                     IOCCP           equ	1045	;# 
  1207   000416                     IOCCN           equ	1046	;# 
  1208   000417                     IOCCF           equ	1047	;# 
  1209   000421                     WPUE            equ	1057	;# 
  1210   000424                     INLVLE          equ	1060	;# 
  1211   000425                     IOCEP           equ	1061	;# 
  1212   000426                     IOCEN           equ	1062	;# 
  1213   000427                     IOCEF           equ	1063	;# 
  1214   000440                     NCO1ACC         equ	1088	;# 
  1215   000440                     NCO1ACCL        equ	1088	;# 
  1216   000441                     NCO1ACCH        equ	1089	;# 
  1217   000442                     NCO1ACCU        equ	1090	;# 
  1218   000443                     NCO1INC         equ	1091	;# 
  1219   000443                     NCO1INCL        equ	1091	;# 
  1220   000444                     NCO1INCH        equ	1092	;# 
  1221   000445                     NCO1INCU        equ	1093	;# 
  1222   000446                     NCO1CON         equ	1094	;# 
  1223   000447                     NCO1CLK         equ	1095	;# 
  1224   000448                     NCO2ACC         equ	1096	;# 
  1225   000448                     NCO2ACCL        equ	1096	;# 
  1226   000449                     NCO2ACCH        equ	1097	;# 
  1227   00044A                     NCO2ACCU        equ	1098	;# 
  1228   00044B                     NCO2INC         equ	1099	;# 
  1229   00044B                     NCO2INCL        equ	1099	;# 
  1230   00044C                     NCO2INCH        equ	1100	;# 
  1231   00044D                     NCO2INCU        equ	1101	;# 
  1232   00044E                     NCO2CON         equ	1102	;# 
  1233   00044F                     NCO2CLK         equ	1103	;# 
  1234   000450                     NCO3ACC         equ	1104	;# 
  1235   000450                     NCO3ACCL        equ	1104	;# 
  1236   000451                     NCO3ACCH        equ	1105	;# 
  1237   000452                     NCO3ACCU        equ	1106	;# 
  1238   000453                     NCO3INC         equ	1107	;# 
  1239   000453                     NCO3INCL        equ	1107	;# 
  1240   000454                     NCO3INCH        equ	1108	;# 
  1241   000455                     NCO3INCU        equ	1109	;# 
  1242   000456                     NCO3CON         equ	1110	;# 
  1243   000457                     NCO3CLK         equ	1111	;# 
  1244   000458                     FSCMCON         equ	1112	;# 
  1245   000459                     IVTLOCK         equ	1113	;# 
  1246   00045A                     IVTAD           equ	1114	;# 
  1247   00045A                     IVTADL          equ	1114	;# 
  1248   00045B                     IVTADH          equ	1115	;# 
  1249   00045C                     IVTADU          equ	1116	;# 
  1250   00045D                     IVTBASE         equ	1117	;# 
  1251   00045D                     IVTBASEL        equ	1117	;# 
  1252   00045E                     IVTBASEH        equ	1118	;# 
  1253   00045F                     IVTBASEU        equ	1119	;# 
  1254   000460                     PWM1ERS         equ	1120	;# 
  1255   000461                     PWM1CLK         equ	1121	;# 
  1256   000462                     PWM1LDS         equ	1122	;# 
  1257   000463                     PWM1PR          equ	1123	;# 
  1258   000463                     PWM1PRL         equ	1123	;# 
  1259   000464                     PWM1PRH         equ	1124	;# 
  1260   000465                     PWM1CPRE        equ	1125	;# 
  1261   000466                     PWM1PIPOS       equ	1126	;# 
  1262   000467                     PWM1GIR         equ	1127	;# 
  1263   000468                     PWM1GIE         equ	1128	;# 
  1264   000469                     PWM1CON         equ	1129	;# 
  1265   00046A                     PWM1S1CFG       equ	1130	;# 
  1266   00046B                     PWM1S1P1        equ	1131	;# 
  1267   00046B                     PWM1S1P1L       equ	1131	;# 
  1268   00046C                     PWM1S1P1H       equ	1132	;# 
  1269   00046D                     PWM1S1P2        equ	1133	;# 
  1270   00046D                     PWM1S1P2L       equ	1133	;# 
  1271   00046E                     PWM1S1P2H       equ	1134	;# 
  1272   00046F                     PWM2ERS         equ	1135	;# 
  1273   000470                     PWM2CLK         equ	1136	;# 
  1274   000471                     PWM2LDS         equ	1137	;# 
  1275   000472                     PWM2PR          equ	1138	;# 
  1276   000472                     PWM2PRL         equ	1138	;# 
  1277   000473                     PWM2PRH         equ	1139	;# 
  1278   000474                     PWM2CPRE        equ	1140	;# 
  1279   000475                     PWM2PIPOS       equ	1141	;# 
  1280   000476                     PWM2GIR         equ	1142	;# 
  1281   000477                     PWM2GIE         equ	1143	;# 
  1282   000478                     PWM2CON         equ	1144	;# 
  1283   000479                     PWM2S1CFG       equ	1145	;# 
  1284   00047A                     PWM2S1P1        equ	1146	;# 
  1285   00047A                     PWM2S1P1L       equ	1146	;# 
  1286   00047B                     PWM2S1P1H       equ	1147	;# 
  1287   00047C                     PWM2S1P2        equ	1148	;# 
  1288   00047C                     PWM2S1P2L       equ	1148	;# 
  1289   00047D                     PWM2S1P2H       equ	1149	;# 
  1290   00047E                     PWM3ERS         equ	1150	;# 
  1291   00047F                     PWM3CLK         equ	1151	;# 
  1292   000480                     PWM3LDS         equ	1152	;# 
  1293   000481                     PWM3PR          equ	1153	;# 
  1294   000481                     PWM3PRL         equ	1153	;# 
  1295   000482                     PWM3PRH         equ	1154	;# 
  1296   000483                     PWM3CPRE        equ	1155	;# 
  1297   000484                     PWM3PIPOS       equ	1156	;# 
  1298   000485                     PWM3GIR         equ	1157	;# 
  1299   000486                     PWM3GIE         equ	1158	;# 
  1300   000487                     PWM3CON         equ	1159	;# 
  1301   000488                     PWM3S1CFG       equ	1160	;# 
  1302   000489                     PWM3S1P1        equ	1161	;# 
  1303   000489                     PWM3S1P1L       equ	1161	;# 
  1304   00048A                     PWM3S1P1H       equ	1162	;# 
  1305   00048B                     PWM3S1P2        equ	1163	;# 
  1306   00048B                     PWM3S1P2L       equ	1163	;# 
  1307   00048C                     PWM3S1P2H       equ	1164	;# 
  1308   00048D                     PWM4ERS         equ	1165	;# 
  1309   00048E                     PWM4CLK         equ	1166	;# 
  1310   00048F                     PWM4LDS         equ	1167	;# 
  1311   000490                     PWM4PR          equ	1168	;# 
  1312   000490                     PWM4PRL         equ	1168	;# 
  1313   000491                     PWM4PRH         equ	1169	;# 
  1314   000492                     PWM4CPRE        equ	1170	;# 
  1315   000493                     PWM4PIPOS       equ	1171	;# 
  1316   000494                     PWM4GIR         equ	1172	;# 
  1317   000495                     PWM4GIE         equ	1173	;# 
  1318   000496                     PWM4CON         equ	1174	;# 
  1319   000497                     PWM4S1CFG       equ	1175	;# 
  1320   000498                     PWM4S1P1        equ	1176	;# 
  1321   000498                     PWM4S1P1L       equ	1176	;# 
  1322   000499                     PWM4S1P1H       equ	1177	;# 
  1323   00049A                     PWM4S1P2        equ	1178	;# 
  1324   00049A                     PWM4S1P2L       equ	1178	;# 
  1325   00049B                     PWM4S1P2H       equ	1179	;# 
  1326   00049C                     PWMLOAD         equ	1180	;# 
  1327   00049D                     PWMEN           equ	1181	;# 
  1328   00049E                     PIE0            equ	1182	;# 
  1329   00049F                     PIE1            equ	1183	;# 
  1330   0004A0                     PIE2            equ	1184	;# 
  1331   0004A1                     PIE3            equ	1185	;# 
  1332   0004A2                     PIE4            equ	1186	;# 
  1333   0004A3                     PIE5            equ	1187	;# 
  1334   0004A4                     PIE6            equ	1188	;# 
  1335   0004A5                     PIE7            equ	1189	;# 
  1336   0004A6                     PIE8            equ	1190	;# 
  1337   0004A7                     PIE9            equ	1191	;# 
  1338   0004A8                     PIE10           equ	1192	;# 
  1339   0004A9                     PIE11           equ	1193	;# 
  1340   0004AA                     PIE12           equ	1194	;# 
  1341   0004AB                     PIE13           equ	1195	;# 
  1342   0004AC                     PIE14           equ	1196	;# 
  1343   0004AD                     PIE15           equ	1197	;# 
  1344   0004AE                     PIR0            equ	1198	;# 
  1345   0004AF                     PIR1            equ	1199	;# 
  1346   0004B0                     PIR2            equ	1200	;# 
  1347   0004B1                     PIR3            equ	1201	;# 
  1348   0004B2                     PIR4            equ	1202	;# 
  1349   0004B3                     PIR5            equ	1203	;# 
  1350   0004B4                     PIR6            equ	1204	;# 
  1351   0004B5                     PIR7            equ	1205	;# 
  1352   0004B6                     PIR8            equ	1206	;# 
  1353   0004B7                     PIR9            equ	1207	;# 
  1354   0004B8                     PIR10           equ	1208	;# 
  1355   0004B9                     PIR11           equ	1209	;# 
  1356   0004BA                     PIR12           equ	1210	;# 
  1357   0004BB                     PIR13           equ	1211	;# 
  1358   0004BC                     PIR14           equ	1212	;# 
  1359   0004BD                     PIR15           equ	1213	;# 
  1360   0004BE                     LATA            equ	1214	;# 
  1361   0004BF                     LATB            equ	1215	;# 
  1362   0004C0                     LATC            equ	1216	;# 
  1363   0004C6                     TRISA           equ	1222	;# 
  1364   0004C7                     TRISB           equ	1223	;# 
  1365   0004C8                     TRISC           equ	1224	;# 
  1366   0004CA                     TRISE           equ	1226	;# 
  1367   0004CE                     PORTA           equ	1230	;# 
  1368   0004CF                     PORTB           equ	1231	;# 
  1369   0004D0                     PORTC           equ	1232	;# 
  1370   0004D2                     PORTE           equ	1234	;# 
  1371   0004D6                     INTCON0         equ	1238	;# 
  1372   0004D7                     INTCON1         equ	1239	;# 
  1373   0004D8                     STATUS          equ	1240	;# 
  1374   0004D9                     FSR2            equ	1241	;# 
  1375   0004D9                     FSR2L           equ	1241	;# 
  1376   0004DA                     FSR2H           equ	1242	;# 
  1377   0004DB                     PLUSW2          equ	1243	;# 
  1378   0004DC                     PREINC2         equ	1244	;# 
  1379   0004DD                     POSTDEC2        equ	1245	;# 
  1380   0004DE                     POSTINC2        equ	1246	;# 
  1381   0004DF                     INDF2           equ	1247	;# 
  1382   0004E0                     BSR             equ	1248	;# 
  1383   0004E1                     FSR1            equ	1249	;# 
  1384   0004E1                     FSR1L           equ	1249	;# 
  1385   0004E2                     FSR1H           equ	1250	;# 
  1386   0004E3                     PLUSW1          equ	1251	;# 
  1387   0004E4                     PREINC1         equ	1252	;# 
  1388   0004E5                     POSTDEC1        equ	1253	;# 
  1389   0004E6                     POSTINC1        equ	1254	;# 
  1390   0004E7                     INDF1           equ	1255	;# 
  1391   0004E8                     WREG            equ	1256	;# 
  1392   0004E9                     FSR0            equ	1257	;# 
  1393   0004E9                     FSR0L           equ	1257	;# 
  1394   0004EA                     FSR0H           equ	1258	;# 
  1395   0004EB                     PLUSW0          equ	1259	;# 
  1396   0004EC                     PREINC0         equ	1260	;# 
  1397   0004ED                     POSTDEC0        equ	1261	;# 
  1398   0004EE                     POSTINC0        equ	1262	;# 
  1399   0004EF                     INDF0           equ	1263	;# 
  1400   0004F0                     PCON0           equ	1264	;# 
  1401   0004F1                     PCON1           equ	1265	;# 
  1402   0004F2                     CPUDOZE         equ	1266	;# 
  1403   0004F3                     PROD            equ	1267	;# 
  1404   0004F3                     PRODL           equ	1267	;# 
  1405   0004F4                     PRODH           equ	1268	;# 
  1406   0004F5                     TABLAT          equ	1269	;# 
  1407   0004F6                     TBLPTR          equ	1270	;# 
  1408   0004F6                     TBLPTRL         equ	1270	;# 
  1409   0004F7                     TBLPTRH         equ	1271	;# 
  1410   0004F8                     TBLPTRU         equ	1272	;# 
  1411   0004F9                     PCLAT           equ	1273	;# 
  1412   0004F9                     PCL             equ	1273	;# 
  1413   0004FA                     PCLATH          equ	1274	;# 
  1414   0004FB                     PCLATU          equ	1275	;# 
  1415   0004FC                     STKPTR          equ	1276	;# 
  1416   0004FD                     TOS             equ	1277	;# 
  1417   0004FD                     TOSL            equ	1277	;# 
  1418   0004FE                     TOSH            equ	1278	;# 
  1419   0004FF                     TOSU            equ	1279	;# 
  1420   000038                     BOOTREG         equ	56	;# 
  1421   000039                     CLKRCON         equ	57	;# 
  1422   00003A                     CLKRCLK         equ	58	;# 
  1423   000040                     NVMCON0         equ	64	;# 
  1424   000041                     NVMCON1         equ	65	;# 
  1425   000042                     NVMLOCK         equ	66	;# 
  1426   000043                     NVMADR          equ	67	;# 
  1427   000043                     NVMADRL         equ	67	;# 
  1428   000044                     NVMADRH         equ	68	;# 
  1429   000045                     NVMADRU         equ	69	;# 
  1430   000046                     NVMDAT          equ	70	;# 
  1431   000046                     NVMDATL         equ	70	;# 
  1432   000047                     NVMDATH         equ	71	;# 
  1433   000048                     VREGCON         equ	72	;# 
  1434   000049                     BORCON          equ	73	;# 
  1435   00004A                     HLVDCON0        equ	74	;# 
  1436   00004B                     HLVDCON1        equ	75	;# 
  1437   00004C                     ZCDCON          equ	76	;# 
  1438   000060                     PMD0            equ	96	;# 
  1439   000061                     PMD1            equ	97	;# 
  1440   000062                     PMD2            equ	98	;# 
  1441   000063                     PMD3            equ	99	;# 
  1442   000064                     PMD4            equ	100	;# 
  1443   000065                     PMD5            equ	101	;# 
  1444   000066                     PMD6            equ	102	;# 
  1445   000067                     PMD7            equ	103	;# 
  1446   000068                     PMD8            equ	104	;# 
  1447   00006A                     MD1CON0         equ	106	;# 
  1448   00006B                     MD1CON1         equ	107	;# 
  1449   00006C                     MD1SRC          equ	108	;# 
  1450   00006D                     MD1CARL         equ	109	;# 
  1451   00006E                     MD1CARH         equ	110	;# 
  1452   00006F                     CMOUT           equ	111	;# 
  1453   000070                     CM1CON0         equ	112	;# 
  1454   000071                     CM1CON1         equ	113	;# 
  1455   000072                     CM1NCH          equ	114	;# 
  1456   000073                     CM1PCH          equ	115	;# 
  1457   000074                     CM2CON0         equ	116	;# 
  1458   000075                     CM2CON1         equ	117	;# 
  1459   000076                     CM2NCH          equ	118	;# 
  1460   000077                     CM2PCH          equ	119	;# 
  1461   000078                     WDTCON0         equ	120	;# 
  1462   000079                     WDTCON1         equ	121	;# 
  1463   00007A                     WDTPSL          equ	122	;# 
  1464   00007B                     WDTPSH          equ	123	;# 
  1465   00007C                     WDTTMR          equ	124	;# 
  1466   00007D                     DAC1DAT         equ	125	;# 
  1467   00007D                     DAC1DATL        equ	125	;# 
  1468   00007F                     DAC1CON         equ	127	;# 
  1469   000080                     SPI1RXB         equ	128	;# 
  1470   000081                     SPI1TXB         equ	129	;# 
  1471   000082                     SPI1TCNT        equ	130	;# 
  1472   000082                     SPI1TCNTL       equ	130	;# 
  1473   000083                     SPI1TCNTH       equ	131	;# 
  1474   000084                     SPI1CON0        equ	132	;# 
  1475   000085                     SPI1CON1        equ	133	;# 
  1476   000086                     SPI1CON2        equ	134	;# 
  1477   000087                     SPI1STATUS      equ	135	;# 
  1478   000088                     SPI1TWIDTH      equ	136	;# 
  1479   000089                     SPI1BAUD        equ	137	;# 
  1480   00008A                     SPI1INTF        equ	138	;# 
  1481   00008B                     SPI1INTE        equ	139	;# 
  1482   00008C                     SPI1CLK         equ	140	;# 
  1483   00008D                     SPI2RXB         equ	141	;# 
  1484   00008E                     SPI2TXB         equ	142	;# 
  1485   00008F                     SPI2TCNT        equ	143	;# 
  1486   00008F                     SPI2TCNTL       equ	143	;# 
  1487   000090                     SPI2TCNTH       equ	144	;# 
  1488   000091                     SPI2CON0        equ	145	;# 
  1489   000092                     SPI2CON1        equ	146	;# 
  1490   000093                     SPI2CON2        equ	147	;# 
  1491   000094                     SPI2STATUS      equ	148	;# 
  1492   000095                     SPI2TWIDTH      equ	149	;# 
  1493   000096                     SPI2BAUD        equ	150	;# 
  1494   000097                     SPI2INTF        equ	151	;# 
  1495   000098                     SPI2INTE        equ	152	;# 
  1496   000099                     SPI2CLK         equ	153	;# 
  1497   0000AC                     ACTCON          equ	172	;# 
  1498   0000AD                     OSCCON1         equ	173	;# 
  1499   0000AE                     OSCCON2         equ	174	;# 
  1500   0000AF                     OSCCON3         equ	175	;# 
  1501   0000B0                     OSCTUNE         equ	176	;# 
  1502   0000B1                     OSCFRQ          equ	177	;# 
  1503   0000B1                     OSCFREQ         equ	177	;# 
  1504   0000B2                     OSCSTAT         equ	178	;# 
  1505   0000B2                     OSCSTAT1        equ	178	;# 
  1506   0000B3                     OSCEN           equ	179	;# 
  1507   0000B4                     PRLOCK          equ	180	;# 
  1508   0000B5                     SCANPR          equ	181	;# 
  1509   0000B6                     DMA1PR          equ	182	;# 
  1510   0000B7                     DMA2PR          equ	183	;# 
  1511   0000B8                     DMA3PR          equ	184	;# 
  1512   0000B9                     DMA4PR          equ	185	;# 
  1513   0000BA                     DMA5PR          equ	186	;# 
  1514   0000BB                     DMA6PR          equ	187	;# 
  1515   0000BC                     DMA7PR          equ	188	;# 
  1516   0000BD                     DMA8PR          equ	189	;# 
  1517   0000BE                     MAINPR          equ	190	;# 
  1518   0000BF                     ISRPR           equ	191	;# 
  1519   0000D4                     CLCDATA         equ	212	;# 
  1520   0000D5                     CLCSELECT       equ	213	;# 
  1521   0000D6                     CLCnCON         equ	214	;# 
  1522   0000D7                     CLCnPOL         equ	215	;# 
  1523   0000D8                     CLCnSEL0        equ	216	;# 
  1524   0000D9                     CLCnSEL1        equ	217	;# 
  1525   0000DA                     CLCnSEL2        equ	218	;# 
  1526   0000DB                     CLCnSEL3        equ	219	;# 
  1527   0000DC                     CLCnGLS0        equ	220	;# 
  1528   0000DD                     CLCnGLS1        equ	221	;# 
  1529   0000DE                     CLCnGLS2        equ	222	;# 
  1530   0000DF                     CLCnGLS3        equ	223	;# 
  1531   0000E8                     DMASELECT       equ	232	;# 
  1532   0000E9                     DMAnBUF         equ	233	;# 
  1533   0000EA                     DMAnDCNT        equ	234	;# 
  1534   0000EA                     DMAnDCNTL       equ	234	;# 
  1535   0000EB                     DMAnDCNTH       equ	235	;# 
  1536   0000EC                     DMAnDPTR        equ	236	;# 
  1537   0000EC                     DMAnDPTRL       equ	236	;# 
  1538   0000ED                     DMAnDPTRH       equ	237	;# 
  1539   0000EE                     DMAnDSZ         equ	238	;# 
  1540   0000EE                     DMAnDSZL        equ	238	;# 
  1541   0000EF                     DMAnDSZH        equ	239	;# 
  1542   0000F0                     DMAnDSA         equ	240	;# 
  1543   0000F0                     DMAnDSAL        equ	240	;# 
  1544   0000F1                     DMAnDSAH        equ	241	;# 
  1545   0000F2                     DMAnSCNT        equ	242	;# 
  1546   0000F2                     DMAnSCNTL       equ	242	;# 
  1547   0000F3                     DMAnSCNTH       equ	243	;# 
  1548   0000F4                     DMAnSPTR        equ	244	;# 
  1549   0000F4                     DMAnSPTRL       equ	244	;# 
  1550   0000F5                     DMAnSPTRH       equ	245	;# 
  1551   0000F6                     DMAnSPTRU       equ	246	;# 
  1552   0000F7                     DMAnSSZ         equ	247	;# 
  1553   0000F7                     DMAnSSZL        equ	247	;# 
  1554   0000F8                     DMAnSSZH        equ	248	;# 
  1555   0000F9                     DMAnSSA         equ	249	;# 
  1556   0000F9                     DMAnSSAL        equ	249	;# 
  1557   0000FA                     DMAnSSAH        equ	250	;# 
  1558   0000FB                     DMAnSSAU        equ	251	;# 
  1559   0000FC                     DMAnCON0        equ	252	;# 
  1560   0000FD                     DMAnCON1        equ	253	;# 
  1561   0000FE                     DMAnAIRQ        equ	254	;# 
  1562   0000FF                     DMAnSIRQ        equ	255	;# 
  1563   000100                     C1CONL          equ	256	;# 
  1564   000101                     C1CONH          equ	257	;# 
  1565   000102                     C1CONU          equ	258	;# 
  1566   000103                     C1CONT          equ	259	;# 
  1567   000104                     C1NBTCFGL       equ	260	;# 
  1568   000105                     C1NBTCFGH       equ	261	;# 
  1569   000106                     C1NBTCFGU       equ	262	;# 
  1570   000107                     C1NBTCFGT       equ	263	;# 
  1571   000108                     C1DBTCFGL       equ	264	;# 
  1572   000109                     C1DBTCFGH       equ	265	;# 
  1573   00010A                     C1DBTCFGU       equ	266	;# 
  1574   00010B                     C1DBTCFGT       equ	267	;# 
  1575   00010C                     C1TDCL          equ	268	;# 
  1576   00010D                     C1TDCH          equ	269	;# 
  1577   00010E                     C1TDCU          equ	270	;# 
  1578   000110                     C1TBC           equ	272	;# 
  1579   000110                     C1TBCL          equ	272	;# 
  1580   000111                     C1TBCH          equ	273	;# 
  1581   000112                     C1TBCU          equ	274	;# 
  1582   000113                     C1TBCT          equ	275	;# 
  1583   000114                     C1TSCONL        equ	276	;# 
  1584   000115                     C1TSCONH        equ	277	;# 
  1585   000116                     C1TSCONU        equ	278	;# 
  1586   000117                     C1TSCONT        equ	279	;# 
  1587   000118                     C1VECL          equ	280	;# 
  1588   000119                     C1VECH          equ	281	;# 
  1589   00011A                     C1VECU          equ	282	;# 
  1590   00011B                     C1VECT          equ	283	;# 
  1591   00011C                     C1INTL          equ	284	;# 
  1592   00011D                     C1INTH          equ	285	;# 
  1593   00011E                     C1INTU          equ	286	;# 
  1594   00011F                     C1INTT          equ	287	;# 
  1595   000120                     C1RXIF          equ	288	;# 
  1596   000120                     C1RXIFL         equ	288	;# 
  1597   000121                     C1RXIFH         equ	289	;# 
  1598   000122                     C1RXIFU         equ	290	;# 
  1599   000123                     C1RXIFT         equ	291	;# 
  1600   000124                     C1TXIF          equ	292	;# 
  1601   000124                     C1TXIFL         equ	292	;# 
  1602   000125                     C1TXIFH         equ	293	;# 
  1603   000126                     C1TXIFU         equ	294	;# 
  1604   000127                     C1TXIFT         equ	295	;# 
  1605   000128                     C1RXOVIF        equ	296	;# 
  1606   000128                     C1RXOVIFL       equ	296	;# 
  1607   000129                     C1RXOVIFH       equ	297	;# 
  1608   00012A                     C1RXOVIFU       equ	298	;# 
  1609   00012B                     C1RXOVIFT       equ	299	;# 
  1610   00012C                     C1TXATIF        equ	300	;# 
  1611   00012C                     C1TXATIFL       equ	300	;# 
  1612   00012D                     C1TXATIFH       equ	301	;# 
  1613   00012E                     C1TXATIFU       equ	302	;# 
  1614   00012F                     C1TXATIFT       equ	303	;# 
  1615   000130                     C1TXREQ         equ	304	;# 
  1616   000130                     C1TXREQL        equ	304	;# 
  1617   000131                     C1TXREQH        equ	305	;# 
  1618   000132                     C1TXREQU        equ	306	;# 
  1619   000133                     C1TXREQT        equ	307	;# 
  1620   000134                     C1TRECL         equ	308	;# 
  1621   000135                     C1TRECH         equ	309	;# 
  1622   000136                     C1TRECU         equ	310	;# 
  1623   000137                     C1TRECT         equ	311	;# 
  1624   000138                     C1BDIAG0L       equ	312	;# 
  1625   000139                     C1BDIAG0H       equ	313	;# 
  1626   00013C                     C1BDIAG1L       equ	316	;# 
  1627   00013D                     C1BDIAG1H       equ	317	;# 
  1628   00013E                     C1BDIAG1U       equ	318	;# 
  1629   00013F                     C1BDIAG1T       equ	319	;# 
  1630   000140                     C1TEFCONL       equ	320	;# 
  1631   000141                     C1TEFCONH       equ	321	;# 
  1632   000142                     C1TEFCONU       equ	322	;# 
  1633   000143                     C1TEFCONT       equ	323	;# 
  1634   000144                     C1TEFSTAL       equ	324	;# 
  1635   000145                     C1TEFSTAH       equ	325	;# 
  1636   000146                     C1TEFSTAU       equ	326	;# 
  1637   000147                     C1TEFSTAT       equ	327	;# 
  1638   000148                     C1TEFUA         equ	328	;# 
  1639   000148                     C1TEFUAL        equ	328	;# 
  1640   000149                     C1TEFUAH        equ	329	;# 
  1641   00014A                     C1TEFUAU        equ	330	;# 
  1642   00014B                     C1TEFUAT        equ	331	;# 
  1643   00014C                     C1FIFOBA        equ	332	;# 
  1644   00014C                     C1FIFOBAL       equ	332	;# 
  1645   00014D                     C1FIFOBAH       equ	333	;# 
  1646   00014E                     C1FIFOBAU       equ	334	;# 
  1647   00014F                     C1FIFOBAT       equ	335	;# 
  1648   000150                     C1TXQCONL       equ	336	;# 
  1649   000151                     C1TXQCONH       equ	337	;# 
  1650   000152                     C1TXQCONU       equ	338	;# 
  1651   000153                     C1TXQCONT       equ	339	;# 
  1652   000154                     C1TXQSTAL       equ	340	;# 
  1653   000155                     C1TXQSTAH       equ	341	;# 
  1654   000156                     C1TXQSTAU       equ	342	;# 
  1655   000157                     C1TXQSTAT       equ	343	;# 
  1656   000158                     C1TXQUA         equ	344	;# 
  1657   000158                     C1TXQUAL        equ	344	;# 
  1658   000159                     C1TXQUAH        equ	345	;# 
  1659   00015A                     C1TXQUAU        equ	346	;# 
  1660   00015B                     C1TXQUAT        equ	347	;# 
  1661   00015C                     C1FIFOCON1      equ	348	;# 
  1662   00015C                     C1FIFOCON1L     equ	348	;# 
  1663   00015D                     C1FIFOCON1H     equ	349	;# 
  1664   00015E                     C1FIFOCON1U     equ	350	;# 
  1665   00015F                     C1FIFOCON1T     equ	351	;# 
  1666   000160                     C1FIFOSTA1      equ	352	;# 
  1667   000160                     C1FIFOSTA1L     equ	352	;# 
  1668   000161                     C1FIFOSTA1H     equ	353	;# 
  1669   000162                     C1FIFOSTA1U     equ	354	;# 
  1670   000163                     C1FIFOSTA1T     equ	355	;# 
  1671   000164                     C1FIFOUA1       equ	356	;# 
  1672   000164                     C1FIFOUA1L      equ	356	;# 
  1673   000165                     C1FIFOUA1H      equ	357	;# 
  1674   000166                     C1FIFOUA1U      equ	358	;# 
  1675   000167                     C1FIFOUA1T      equ	359	;# 
  1676   000168                     C1FIFOCON2      equ	360	;# 
  1677   000168                     C1FIFOCON2L     equ	360	;# 
  1678   000169                     C1FIFOCON2H     equ	361	;# 
  1679   00016A                     C1FIFOCON2U     equ	362	;# 
  1680   00016B                     C1FIFOCON2T     equ	363	;# 
  1681   00016C                     C1FIFOSTA2      equ	364	;# 
  1682   00016C                     C1FIFOSTA2L     equ	364	;# 
  1683   00016D                     C1FIFOSTA2H     equ	365	;# 
  1684   00016E                     C1FIFOSTA2U     equ	366	;# 
  1685   00016F                     C1FIFOSTA2T     equ	367	;# 
  1686   000170                     C1FIFOUA2       equ	368	;# 
  1687   000170                     C1FIFOUA2L      equ	368	;# 
  1688   000171                     C1FIFOUA2H      equ	369	;# 
  1689   000172                     C1FIFOUA2U      equ	370	;# 
  1690   000173                     C1FIFOUA2T      equ	371	;# 
  1691   000174                     C1FIFOCON3      equ	372	;# 
  1692   000174                     C1FIFOCON3L     equ	372	;# 
  1693   000175                     C1FIFOCON3H     equ	373	;# 
  1694   000176                     C1FIFOCON3U     equ	374	;# 
  1695   000177                     C1FIFOCON3T     equ	375	;# 
  1696   000178                     C1FIFOSTA3      equ	376	;# 
  1697   000178                     C1FIFOSTA3L     equ	376	;# 
  1698   000179                     C1FIFOSTA3H     equ	377	;# 
  1699   00017A                     C1FIFOSTA3U     equ	378	;# 
  1700   00017B                     C1FIFOSTA3T     equ	379	;# 
  1701   00017C                     C1FIFOUA3       equ	380	;# 
  1702   00017C                     C1FIFOUA3L      equ	380	;# 
  1703   00017D                     C1FIFOUA3H      equ	381	;# 
  1704   00017E                     C1FIFOUA3U      equ	382	;# 
  1705   00017F                     C1FIFOUA3T      equ	383	;# 
  1706   000180                     C1FLTCON0L      equ	384	;# 
  1707   000181                     C1FLTCON0H      equ	385	;# 
  1708   000182                     C1FLTCON0U      equ	386	;# 
  1709   000183                     C1FLTCON0T      equ	387	;# 
  1710   000184                     C1FLTCON1L      equ	388	;# 
  1711   000185                     C1FLTCON1H      equ	389	;# 
  1712   000186                     C1FLTCON1U      equ	390	;# 
  1713   000187                     C1FLTCON1T      equ	391	;# 
  1714   000188                     C1FLTCON2L      equ	392	;# 
  1715   000189                     C1FLTCON2H      equ	393	;# 
  1716   00018A                     C1FLTCON2U      equ	394	;# 
  1717   00018B                     C1FLTCON2T      equ	395	;# 
  1718   00018C                     C1FLTOBJ0       equ	396	;# 
  1719   00018C                     C1FLTOBJ0L      equ	396	;# 
  1720   00018D                     C1FLTOBJ0H      equ	397	;# 
  1721   00018E                     C1FLTOBJ0U      equ	398	;# 
  1722   00018F                     C1FLTOBJ0T      equ	399	;# 
  1723   000190                     C1MASK0         equ	400	;# 
  1724   000190                     C1MASK0L        equ	400	;# 
  1725   000191                     C1MASK0H        equ	401	;# 
  1726   000192                     C1MASK0U        equ	402	;# 
  1727   000193                     C1MASK0T        equ	403	;# 
  1728   000194                     C1FLTOBJ1       equ	404	;# 
  1729   000194                     C1FLTOBJ1L      equ	404	;# 
  1730   000195                     C1FLTOBJ1H      equ	405	;# 
  1731   000196                     C1FLTOBJ1U      equ	406	;# 
  1732   000197                     C1FLTOBJ1T      equ	407	;# 
  1733   000198                     C1MASK1         equ	408	;# 
  1734   000198                     C1MASK1L        equ	408	;# 
  1735   000199                     C1MASK1H        equ	409	;# 
  1736   00019A                     C1MASK1U        equ	410	;# 
  1737   00019B                     C1MASK1T        equ	411	;# 
  1738   00019C                     C1FLTOBJ2       equ	412	;# 
  1739   00019C                     C1FLTOBJ2L      equ	412	;# 
  1740   00019D                     C1FLTOBJ2H      equ	413	;# 
  1741   00019E                     C1FLTOBJ2U      equ	414	;# 
  1742   00019F                     C1FLTOBJ2T      equ	415	;# 
  1743   0001A0                     C1MASK2         equ	416	;# 
  1744   0001A0                     C1MASK2L        equ	416	;# 
  1745   0001A1                     C1MASK2H        equ	417	;# 
  1746   0001A2                     C1MASK2U        equ	418	;# 
  1747   0001A3                     C1MASK2T        equ	419	;# 
  1748   0001A4                     C1FLTOBJ3       equ	420	;# 
  1749   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1750   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1751   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1752   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1753   0001A8                     C1MASK3         equ	424	;# 
  1754   0001A8                     C1MASK3L        equ	424	;# 
  1755   0001A9                     C1MASK3H        equ	425	;# 
  1756   0001AA                     C1MASK3U        equ	426	;# 
  1757   0001AB                     C1MASK3T        equ	427	;# 
  1758   0001AC                     C1FLTOBJ4       equ	428	;# 
  1759   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1760   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1761   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1762   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1763   0001B0                     C1MASK4         equ	432	;# 
  1764   0001B0                     C1MASK4L        equ	432	;# 
  1765   0001B1                     C1MASK4H        equ	433	;# 
  1766   0001B2                     C1MASK4U        equ	434	;# 
  1767   0001B3                     C1MASK4T        equ	435	;# 
  1768   0001B4                     C1FLTOBJ5       equ	436	;# 
  1769   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1770   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1771   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1772   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1773   0001B8                     C1MASK5         equ	440	;# 
  1774   0001B8                     C1MASK5L        equ	440	;# 
  1775   0001B9                     C1MASK5H        equ	441	;# 
  1776   0001BA                     C1MASK5U        equ	442	;# 
  1777   0001BB                     C1MASK5T        equ	443	;# 
  1778   0001BC                     C1FLTOBJ6       equ	444	;# 
  1779   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1780   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1781   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1782   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1783   0001C0                     C1MASK6         equ	448	;# 
  1784   0001C0                     C1MASK6L        equ	448	;# 
  1785   0001C1                     C1MASK6H        equ	449	;# 
  1786   0001C2                     C1MASK6U        equ	450	;# 
  1787   0001C3                     C1MASK6T        equ	451	;# 
  1788   0001C4                     C1FLTOBJ7       equ	452	;# 
  1789   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1790   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1791   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1792   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1793   0001C8                     C1MASK7         equ	456	;# 
  1794   0001C8                     C1MASK7L        equ	456	;# 
  1795   0001C9                     C1MASK7H        equ	457	;# 
  1796   0001CA                     C1MASK7U        equ	458	;# 
  1797   0001CB                     C1MASK7T        equ	459	;# 
  1798   0001CC                     C1FLTOBJ8       equ	460	;# 
  1799   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1800   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1801   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1802   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1803   0001D0                     C1MASK8         equ	464	;# 
  1804   0001D0                     C1MASK8L        equ	464	;# 
  1805   0001D1                     C1MASK8H        equ	465	;# 
  1806   0001D2                     C1MASK8U        equ	466	;# 
  1807   0001D3                     C1MASK8T        equ	467	;# 
  1808   0001D4                     C1FLTOBJ9       equ	468	;# 
  1809   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1810   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1811   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1812   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1813   0001D8                     C1MASK9         equ	472	;# 
  1814   0001D8                     C1MASK9L        equ	472	;# 
  1815   0001D9                     C1MASK9H        equ	473	;# 
  1816   0001DA                     C1MASK9U        equ	474	;# 
  1817   0001DB                     C1MASK9T        equ	475	;# 
  1818   0001DC                     C1FLTOBJ10      equ	476	;# 
  1819   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1820   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1821   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1822   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1823   0001E0                     C1MASK10        equ	480	;# 
  1824   0001E0                     C1MASK10L       equ	480	;# 
  1825   0001E1                     C1MASK10H       equ	481	;# 
  1826   0001E2                     C1MASK10U       equ	482	;# 
  1827   0001E3                     C1MASK10T       equ	483	;# 
  1828   0001E4                     C1FLTOBJ11      equ	484	;# 
  1829   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1830   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1831   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1832   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1833   0001E8                     C1MASK11        equ	488	;# 
  1834   0001E8                     C1MASK11L       equ	488	;# 
  1835   0001E9                     C1MASK11H       equ	489	;# 
  1836   0001EA                     C1MASK11U       equ	490	;# 
  1837   0001EB                     C1MASK11T       equ	491	;# 
  1838   000200                     PPSLOCK         equ	512	;# 
  1839   000201                     RA0PPS          equ	513	;# 
  1840   000202                     RA1PPS          equ	514	;# 
  1841   000203                     RA2PPS          equ	515	;# 
  1842   000204                     RA3PPS          equ	516	;# 
  1843   000205                     RA4PPS          equ	517	;# 
  1844   000206                     RA5PPS          equ	518	;# 
  1845   000207                     RA6PPS          equ	519	;# 
  1846   000208                     RA7PPS          equ	520	;# 
  1847   000209                     RB0PPS          equ	521	;# 
  1848   00020A                     RB1PPS          equ	522	;# 
  1849   00020B                     RB2PPS          equ	523	;# 
  1850   00020C                     RB3PPS          equ	524	;# 
  1851   00020D                     RB4PPS          equ	525	;# 
  1852   00020E                     RB5PPS          equ	526	;# 
  1853   00020F                     RB6PPS          equ	527	;# 
  1854   000210                     RB7PPS          equ	528	;# 
  1855   000211                     RC0PPS          equ	529	;# 
  1856   000212                     RC1PPS          equ	530	;# 
  1857   000213                     RC2PPS          equ	531	;# 
  1858   000214                     RC3PPS          equ	532	;# 
  1859   000215                     RC4PPS          equ	533	;# 
  1860   000216                     RC5PPS          equ	534	;# 
  1861   000217                     RC6PPS          equ	535	;# 
  1862   000218                     RC7PPS          equ	536	;# 
  1863   00023D                     CANRXPPS        equ	573	;# 
  1864   00023E                     INT0PPS         equ	574	;# 
  1865   00023F                     INT1PPS         equ	575	;# 
  1866   000240                     INT2PPS         equ	576	;# 
  1867   000241                     T0CKIPPS        equ	577	;# 
  1868   000242                     T1CKIPPS        equ	578	;# 
  1869   000243                     T1GPPS          equ	579	;# 
  1870   000244                     T3CKIPPS        equ	580	;# 
  1871   000245                     T3GPPS          equ	581	;# 
  1872   000246                     T5CKIPPS        equ	582	;# 
  1873   000247                     T5GPPS          equ	583	;# 
  1874   000248                     T2INPPS         equ	584	;# 
  1875   000249                     T4INPPS         equ	585	;# 
  1876   00024A                     T6INPPS         equ	586	;# 
  1877   00024B                     TUIN0PPS        equ	587	;# 
  1878   00024C                     TUIN1PPS        equ	588	;# 
  1879   00024F                     CCP1PPS         equ	591	;# 
  1880   000250                     CCP2PPS         equ	592	;# 
  1881   000251                     CCP3PPS         equ	593	;# 
  1882   000253                     PWM1ERSPPS      equ	595	;# 
  1883   000254                     PWM2ERSPPS      equ	596	;# 
  1884   000255                     PWM3ERSPPS      equ	597	;# 
  1885   000256                     PWM4ERSPPS      equ	598	;# 
  1886   000257                     PWMIN0PPS       equ	599	;# 
  1887   000258                     PWMIN1PPS       equ	600	;# 
  1888   000259                     SMT1WINPPS      equ	601	;# 
  1889   00025A                     SMT1SIGPPS      equ	602	;# 
  1890   00025B                     CWG1PPS         equ	603	;# 
  1891   00025B                     CWG1INPPS       equ	603	;# 
  1892   00025C                     CWG2PPS         equ	604	;# 
  1893   00025C                     CWG2INPPS       equ	604	;# 
  1894   00025D                     CWG3PPS         equ	605	;# 
  1895   00025D                     CWG3INPPS       equ	605	;# 
  1896   00025E                     MD1CARLPPS      equ	606	;# 
  1897   00025E                     MDCARLPPS       equ	606	;# 
  1898   00025F                     MD1CARHPPS      equ	607	;# 
  1899   00025F                     MDCARHPPS       equ	607	;# 
  1900   000260                     MD1SRCPPS       equ	608	;# 
  1901   000260                     MDSRCPPS        equ	608	;# 
  1902   000261                     CLCIN0PPS       equ	609	;# 
  1903   000262                     CLCIN1PPS       equ	610	;# 
  1904   000263                     CLCIN2PPS       equ	611	;# 
  1905   000264                     CLCIN3PPS       equ	612	;# 
  1906   000265                     CLCIN4PPS       equ	613	;# 
  1907   000266                     CLCIN5PPS       equ	614	;# 
  1908   000267                     CLCIN6PPS       equ	615	;# 
  1909   000268                     CLCIN7PPS       equ	616	;# 
  1910   000269                     ADACTPPS        equ	617	;# 
  1911   00026A                     SPI1SCKPPS      equ	618	;# 
  1912   00026B                     SPI1SDIPPS      equ	619	;# 
  1913   00026C                     SPI1SSPPS       equ	620	;# 
  1914   00026D                     SPI2SCKPPS      equ	621	;# 
  1915   00026E                     SPI2SDIPPS      equ	622	;# 
  1916   00026F                     SPI2SSPPS       equ	623	;# 
  1917   000270                     I2C1SDAPPS      equ	624	;# 
  1918   000271                     I2C1SCLPPS      equ	625	;# 
  1919   000272                     U1RXPPS         equ	626	;# 
  1920   000273                     U1CTSPPS        equ	627	;# 
  1921   000274                     U2RXPPS         equ	628	;# 
  1922   000275                     U2CTSPPS        equ	629	;# 
  1923   000276                     U3RXPPS         equ	630	;# 
  1924   000277                     U3CTSPPS        equ	631	;# 
  1925   000278                     U4RXPPS         equ	632	;# 
  1926   000279                     U4CTSPPS        equ	633	;# 
  1927   00027A                     U5RXPPS         equ	634	;# 
  1928   00027B                     U5CTSPPS        equ	635	;# 
  1929   000286                     RC4I2C          equ	646	;# 
  1930   000287                     RC3I2C          equ	647	;# 
  1931   000288                     RB2I2C          equ	648	;# 
  1932   000289                     RB1I2C          equ	649	;# 
  1933   00028A                     I2C1RXB         equ	650	;# 
  1934   00028B                     I2C1TXB         equ	651	;# 
  1935   00028C                     I2C1CNTL        equ	652	;# 
  1936   00028D                     I2C1CNTH        equ	653	;# 
  1937   00028E                     I2C1ADB0        equ	654	;# 
  1938   00028F                     I2C1ADB1        equ	655	;# 
  1939   000290                     I2C1ADR0        equ	656	;# 
  1940   000291                     I2C1ADR1        equ	657	;# 
  1941   000292                     I2C1ADR2        equ	658	;# 
  1942   000293                     I2C1ADR3        equ	659	;# 
  1943   000294                     I2C1CON0        equ	660	;# 
  1944   000295                     I2C1CON1        equ	661	;# 
  1945   000296                     I2C1CON2        equ	662	;# 
  1946   000297                     I2C1ERR         equ	663	;# 
  1947   000298                     I2C1STAT0       equ	664	;# 
  1948   000299                     I2C1STAT1       equ	665	;# 
  1949   00029A                     I2C1PIR         equ	666	;# 
  1950   00029B                     I2C1PIE         equ	667	;# 
  1951   00029C                     I2C1BTO         equ	668	;# 
  1952   00029D                     I2C1BAUD        equ	669	;# 
  1953   00029E                     I2C1CLK         equ	670	;# 
  1954   00029F                     I2C1BTOC        equ	671	;# 
  1955   0002A1                     U1RXB           equ	673	;# 
  1956   0002A1                     U1RXBL          equ	673	;# 
  1957   0002A2                     U1RXCHK         equ	674	;# 
  1958   0002A3                     U1TXB           equ	675	;# 
  1959   0002A3                     U1TXBL          equ	675	;# 
  1960   0002A4                     U1TXCHK         equ	676	;# 
  1961   0002A5                     U1P1            equ	677	;# 
  1962   0002A5                     U1P1L           equ	677	;# 
  1963   0002A6                     U1P1H           equ	678	;# 
  1964   0002A7                     U1P2            equ	679	;# 
  1965   0002A7                     U1P2L           equ	679	;# 
  1966   0002A8                     U1P2H           equ	680	;# 
  1967   0002A9                     U1P3            equ	681	;# 
  1968   0002A9                     U1P3L           equ	681	;# 
  1969   0002AA                     U1P3H           equ	682	;# 
  1970   0002AB                     U1CON0          equ	683	;# 
  1971   0002AC                     U1CON1          equ	684	;# 
  1972   0002AD                     U1CON2          equ	685	;# 
  1973   0002AE                     U1BRG           equ	686	;# 
  1974   0002AE                     U1BRGL          equ	686	;# 
  1975   0002AF                     U1BRGH          equ	687	;# 
  1976   0002B0                     U1FIFO          equ	688	;# 
  1977   0002B1                     U1UIR           equ	689	;# 
  1978   0002B2                     U1ERRIR         equ	690	;# 
  1979   0002B3                     U1ERRIE         equ	691	;# 
  1980   0002B4                     U2RXB           equ	692	;# 
  1981   0002B4                     U2RXBL          equ	692	;# 
  1982   0002B5                     U2RXCHK         equ	693	;# 
  1983   0002B6                     U2TXB           equ	694	;# 
  1984   0002B6                     U2TXBL          equ	694	;# 
  1985   0002B7                     U2TXCHK         equ	695	;# 
  1986   0002B8                     U2P1            equ	696	;# 
  1987   0002B8                     U2P1L           equ	696	;# 
  1988   0002B9                     U2P1H           equ	697	;# 
  1989   0002BA                     U2P2            equ	698	;# 
  1990   0002BA                     U2P2L           equ	698	;# 
  1991   0002BB                     U2P2H           equ	699	;# 
  1992   0002BC                     U2P3            equ	700	;# 
  1993   0002BC                     U2P3L           equ	700	;# 
  1994   0002BD                     U2P3H           equ	701	;# 
  1995   0002BE                     U2CON0          equ	702	;# 
  1996   0002BF                     U2CON1          equ	703	;# 
  1997   0002C0                     U2CON2          equ	704	;# 
  1998   0002C1                     U2BRG           equ	705	;# 
  1999   0002C1                     U2BRGL          equ	705	;# 
  2000   0002C2                     U2BRGH          equ	706	;# 
  2001   0002C3                     U2FIFO          equ	707	;# 
  2002   0002C4                     U2UIR           equ	708	;# 
  2003   0002C5                     U2ERRIR         equ	709	;# 
  2004   0002C6                     U2ERRIE         equ	710	;# 
  2005   0002C7                     U3RXB           equ	711	;# 
  2006   0002C7                     U3RXBL          equ	711	;# 
  2007   0002C9                     U3TXB           equ	713	;# 
  2008   0002C9                     U3TXBL          equ	713	;# 
  2009   0002CB                     U3P1            equ	715	;# 
  2010   0002CB                     U3P1L           equ	715	;# 
  2011   0002CD                     U3P2            equ	717	;# 
  2012   0002CD                     U3P2L           equ	717	;# 
  2013   0002CF                     U3P3            equ	719	;# 
  2014   0002CF                     U3P3L           equ	719	;# 
  2015   0002D1                     U3CON0          equ	721	;# 
  2016   0002D2                     U3CON1          equ	722	;# 
  2017   0002D3                     U3CON2          equ	723	;# 
  2018   0002D4                     U3BRG           equ	724	;# 
  2019   0002D4                     U3BRGL          equ	724	;# 
  2020   0002D5                     U3BRGH          equ	725	;# 
  2021   0002D6                     U3FIFO          equ	726	;# 
  2022   0002D7                     U3UIR           equ	727	;# 
  2023   0002D8                     U3ERRIR         equ	728	;# 
  2024   0002D9                     U3ERRIE         equ	729	;# 
  2025   0002DA                     U4RXB           equ	730	;# 
  2026   0002DA                     U4RXBL          equ	730	;# 
  2027   0002DC                     U4TXB           equ	732	;# 
  2028   0002DC                     U4TXBL          equ	732	;# 
  2029   0002DE                     U4P1            equ	734	;# 
  2030   0002DE                     U4P1L           equ	734	;# 
  2031   0002E0                     U4P2            equ	736	;# 
  2032   0002E0                     U4P2L           equ	736	;# 
  2033   0002E2                     U4P3            equ	738	;# 
  2034   0002E2                     U4P3L           equ	738	;# 
  2035   0002E4                     U4CON0          equ	740	;# 
  2036   0002E5                     U4CON1          equ	741	;# 
  2037   0002E6                     U4CON2          equ	742	;# 
  2038   0002E7                     U4BRG           equ	743	;# 
  2039   0002E7                     U4BRGL          equ	743	;# 
  2040   0002E8                     U4BRGH          equ	744	;# 
  2041   0002E9                     U4FIFO          equ	745	;# 
  2042   0002EA                     U4UIR           equ	746	;# 
  2043   0002EB                     U4ERRIR         equ	747	;# 
  2044   0002EC                     U4ERRIE         equ	748	;# 
  2045   0002ED                     U5RXB           equ	749	;# 
  2046   0002ED                     U5RXBL          equ	749	;# 
  2047   0002EF                     U5TXB           equ	751	;# 
  2048   0002EF                     U5TXBL          equ	751	;# 
  2049   0002F1                     U5P1            equ	753	;# 
  2050   0002F1                     U5P1L           equ	753	;# 
  2051   0002F3                     U5P2            equ	755	;# 
  2052   0002F3                     U5P2L           equ	755	;# 
  2053   0002F5                     U5P3            equ	757	;# 
  2054   0002F5                     U5P3L           equ	757	;# 
  2055   0002F7                     U5CON0          equ	759	;# 
  2056   0002F8                     U5CON1          equ	760	;# 
  2057   0002F9                     U5CON2          equ	761	;# 
  2058   0002FA                     U5BRG           equ	762	;# 
  2059   0002FA                     U5BRGL          equ	762	;# 
  2060   0002FB                     U5BRGH          equ	763	;# 
  2061   0002FC                     U5FIFO          equ	764	;# 
  2062   0002FD                     U5UIR           equ	765	;# 
  2063   0002FE                     U5ERRIR         equ	766	;# 
  2064   0002FF                     U5ERRIE         equ	767	;# 
  2065   000300                     SMT1TMR         equ	768	;# 
  2066   000300                     SMT1TMRL        equ	768	;# 
  2067   000301                     SMT1TMRH        equ	769	;# 
  2068   000302                     SMT1TMRU        equ	770	;# 
  2069   000303                     SMT1CPR         equ	771	;# 
  2070   000303                     SMT1CPRL        equ	771	;# 
  2071   000304                     SMT1CPRH        equ	772	;# 
  2072   000305                     SMT1CPRU        equ	773	;# 
  2073   000306                     SMT1CPW         equ	774	;# 
  2074   000306                     SMT1CPWL        equ	774	;# 
  2075   000307                     SMT1CPWH        equ	775	;# 
  2076   000308                     SMT1CPWU        equ	776	;# 
  2077   000309                     SMT1PR          equ	777	;# 
  2078   000309                     SMT1PRL         equ	777	;# 
  2079   00030A                     SMT1PRH         equ	778	;# 
  2080   00030B                     SMT1PRU         equ	779	;# 
  2081   00030C                     SMT1CON0        equ	780	;# 
  2082   00030D                     SMT1CON1        equ	781	;# 
  2083   00030E                     SMT1STAT        equ	782	;# 
  2084   00030F                     SMT1CLK         equ	783	;# 
  2085   000310                     SMT1SIG         equ	784	;# 
  2086   000311                     SMT1WIN         equ	785	;# 
  2087   000318                     TMR0L           equ	792	;# 
  2088   000318                     TMR0            equ	792	;# 
  2089   000319                     TMR0H           equ	793	;# 
  2090   000319                     PR0             equ	793	;# 
  2091   00031A                     T0CON0          equ	794	;# 
  2092   00031B                     T0CON1          equ	795	;# 
  2093   00031C                     TMR1            equ	796	;# 
  2094   00031C                     TMR1L           equ	796	;# 
  2095   00031D                     TMR1H           equ	797	;# 
  2096   00031E                     T1CON           equ	798	;# 
  2097   00031E                     TMR1CON         equ	798	;# 
  2098   00031F                     T1GCON          equ	799	;# 
  2099   00031F                     TMR1GCON        equ	799	;# 
  2100   000320                     T1GATE          equ	800	;# 
  2101   000320                     TMR1GATE        equ	800	;# 
  2102   000321                     T1CLK           equ	801	;# 
  2103   000321                     TMR1CLK         equ	801	;# 
  2104   000321                     PR1             equ	801	;# 
  2105   000322                     T2TMR           equ	802	;# 
  2106   000322                     TMR2            equ	802	;# 
  2107   000323                     T2PR            equ	803	;# 
  2108   000323                     PR2             equ	803	;# 
  2109   000324                     T2CON           equ	804	;# 
  2110   000325                     T2HLT           equ	805	;# 
  2111   000326                     T2CLKCON        equ	806	;# 
  2112   000326                     T2CLK           equ	806	;# 
  2113   000327                     T2RST           equ	807	;# 
  2114   000328                     TMR3            equ	808	;# 
  2115   000328                     TMR3L           equ	808	;# 
  2116   000329                     TMR3H           equ	809	;# 
  2117   00032A                     T3CON           equ	810	;# 
  2118   00032A                     TMR3CON         equ	810	;# 
  2119   00032B                     T3GCON          equ	811	;# 
  2120   00032B                     TMR3GCON        equ	811	;# 
  2121   00032C                     T3GATE          equ	812	;# 
  2122   00032C                     TMR3GATE        equ	812	;# 
  2123   00032D                     T3CLK           equ	813	;# 
  2124   00032D                     TMR3CLK         equ	813	;# 
  2125   00032D                     PR3             equ	813	;# 
  2126   00032E                     T4TMR           equ	814	;# 
  2127   00032E                     TMR4            equ	814	;# 
  2128   00032F                     T4PR            equ	815	;# 
  2129   00032F                     PR4             equ	815	;# 
  2130   000330                     T4CON           equ	816	;# 
  2131   000331                     T4HLT           equ	817	;# 
  2132   000332                     T4CLKCON        equ	818	;# 
  2133   000332                     T4CLK           equ	818	;# 
  2134   000333                     T4RST           equ	819	;# 
  2135   000334                     TMR5            equ	820	;# 
  2136   000334                     TMR5L           equ	820	;# 
  2137   000335                     TMR5H           equ	821	;# 
  2138   000336                     T5CON           equ	822	;# 
  2139   000336                     TMR5CON         equ	822	;# 
  2140   000337                     T5GCON          equ	823	;# 
  2141   000337                     TMR5GCON        equ	823	;# 
  2142   000338                     T5GATE          equ	824	;# 
  2143   000338                     TMR5GATE        equ	824	;# 
  2144   000339                     T5CLK           equ	825	;# 
  2145   000339                     TMR5CLK         equ	825	;# 
  2146   000339                     PR5             equ	825	;# 
  2147   00033A                     T6TMR           equ	826	;# 
  2148   00033A                     TMR6            equ	826	;# 
  2149   00033B                     T6PR            equ	827	;# 
  2150   00033B                     PR6             equ	827	;# 
  2151   00033C                     T6CON           equ	828	;# 
  2152   00033D                     T6HLT           equ	829	;# 
  2153   00033E                     T6CLKCON        equ	830	;# 
  2154   00033E                     T6CLK           equ	830	;# 
  2155   00033F                     T6RST           equ	831	;# 
  2156   000340                     CCPR1           equ	832	;# 
  2157   000340                     CCPR1L          equ	832	;# 
  2158   000341                     CCPR1H          equ	833	;# 
  2159   000342                     CCP1CON         equ	834	;# 
  2160   000343                     CCP1CAP         equ	835	;# 
  2161   000344                     CCPR2           equ	836	;# 
  2162   000344                     CCPR2L          equ	836	;# 
  2163   000345                     CCPR2H          equ	837	;# 
  2164   000346                     CCP2CON         equ	838	;# 
  2165   000347                     CCP2CAP         equ	839	;# 
  2166   000348                     CCPR3           equ	840	;# 
  2167   000348                     CCPR3L          equ	840	;# 
  2168   000349                     CCPR3H          equ	841	;# 
  2169   00034A                     CCP3CON         equ	842	;# 
  2170   00034B                     CCP3CAP         equ	843	;# 
  2171   00034C                     CCPTMRS0        equ	844	;# 
  2172   00034F                     CRCDATA         equ	847	;# 
  2173   00034F                     CRCDATAL        equ	847	;# 
  2174   000350                     CRCDATAH        equ	848	;# 
  2175   000351                     CRCDATAU        equ	849	;# 
  2176   000352                     CRCDATAT        equ	850	;# 
  2177   000353                     CRCOUT          equ	851	;# 
  2178   000353                     CRCSHFT         equ	851	;# 
  2179   000353                     CRCXOR          equ	851	;# 
  2180   000353                     CRCOUTL         equ	851	;# 
  2181   000353                     CRCSHFTL        equ	851	;# 
  2182   000353                     CRCSHIFTL       equ	851	;# 
  2183   000353                     CRCXORL         equ	851	;# 
  2184   000354                     CRCOUTH         equ	852	;# 
  2185   000354                     CRCSHFTH        equ	852	;# 
  2186   000354                     CRCSHIFTH       equ	852	;# 
  2187   000354                     CRCXORH         equ	852	;# 
  2188   000355                     CRCOUTU         equ	853	;# 
  2189   000355                     CRCSHFTU        equ	853	;# 
  2190   000355                     CRCSHIFTU       equ	853	;# 
  2191   000355                     CRCXORU         equ	853	;# 
  2192   000356                     CRCOUTT         equ	854	;# 
  2193   000356                     CRCSHFTT        equ	854	;# 
  2194   000356                     CRCSHIFTT       equ	854	;# 
  2195   000356                     CRCXORT         equ	854	;# 
  2196   000357                     CRCCON0         equ	855	;# 
  2197   000358                     CRCCON1         equ	856	;# 
  2198   000359                     CRCCON2         equ	857	;# 
  2199   00035A                     SCANLADR        equ	858	;# 
  2200   00035A                     SCANLADRL       equ	858	;# 
  2201   00035B                     SCANLADRH       equ	859	;# 
  2202   00035C                     SCANLADRU       equ	860	;# 
  2203   00035D                     SCANHADR        equ	861	;# 
  2204   00035D                     SCANHADRL       equ	861	;# 
  2205   00035E                     SCANHADRH       equ	862	;# 
  2206   00035F                     SCANHADRU       equ	863	;# 
  2207   000360                     SCANCON0        equ	864	;# 
  2208   000361                     SCANTRIG        equ	865	;# 
  2209   000362                     IPR0            equ	866	;# 
  2210   000363                     IPR1            equ	867	;# 
  2211   000364                     IPR2            equ	868	;# 
  2212   000365                     IPR3            equ	869	;# 
  2213   000366                     IPR4            equ	870	;# 
  2214   000367                     IPR5            equ	871	;# 
  2215   000368                     IPR6            equ	872	;# 
  2216   000369                     IPR7            equ	873	;# 
  2217   00036A                     IPR8            equ	874	;# 
  2218   00036B                     IPR9            equ	875	;# 
  2219   00036C                     IPR10           equ	876	;# 
  2220   00036D                     IPR11           equ	877	;# 
  2221   00036E                     IPR12           equ	878	;# 
  2222   00036F                     IPR13           equ	879	;# 
  2223   000370                     IPR14           equ	880	;# 
  2224   000371                     IPR15           equ	881	;# 
  2225   000373                     STATUS_CSHAD    equ	883	;# 
  2226   000374                     WREG_CSHAD      equ	884	;# 
  2227   000375                     BSR_CSHAD       equ	885	;# 
  2228   000376                     SHADCON         equ	886	;# 
  2229   000377                     STATUS_SHAD     equ	887	;# 
  2230   000378                     WREG_SHAD       equ	888	;# 
  2231   000379                     BSR_SHAD        equ	889	;# 
  2232   00037A                     PCLATH_SHAD     equ	890	;# 
  2233   00037B                     PCLATU_SHAD     equ	891	;# 
  2234   00037C                     FSR0SH          equ	892	;# 
  2235   00037C                     FSR0L_SHAD      equ	892	;# 
  2236   00037D                     FSR0H_SHAD      equ	893	;# 
  2237   00037E                     FSR1SH          equ	894	;# 
  2238   00037E                     FSR1L_SHAD      equ	894	;# 
  2239   00037F                     FSR1H_SHAD      equ	895	;# 
  2240   000380                     FSR2SH          equ	896	;# 
  2241   000380                     FSR2L_SHAD      equ	896	;# 
  2242   000381                     FSR2H_SHAD      equ	897	;# 
  2243   000382                     PRODSH          equ	898	;# 
  2244   000382                     PRODL_SHAD      equ	898	;# 
  2245   000383                     PRODH_SHAD      equ	899	;# 
  2246   000387                     TU16ACON0       equ	903	;# 
  2247   000388                     TU16ACON1       equ	904	;# 
  2248   000389                     TU16AHLT        equ	905	;# 
  2249   00038A                     TU16APS         equ	906	;# 
  2250   00038B                     TU16ATMR        equ	907	;# 
  2251   00038B                     TU16ACR         equ	907	;# 
  2252   00038B                     TU16ATMRL       equ	907	;# 
  2253   00038B                     TU16ACRL        equ	907	;# 
  2254   00038C                     TU16ATMRH       equ	908	;# 
  2255   00038C                     TU16ACRH        equ	908	;# 
  2256   00038D                     TU16APR         equ	909	;# 
  2257   00038D                     TU16APRL        equ	909	;# 
  2258   00038E                     TU16APRH        equ	910	;# 
  2259   00038F                     TU16ACLK        equ	911	;# 
  2260   000390                     TU16AERS        equ	912	;# 
  2261   000393                     TU16BCON0       equ	915	;# 
  2262   000394                     TU16BCON1       equ	916	;# 
  2263   000395                     TU16BHLT        equ	917	;# 
  2264   000396                     TU16BPS         equ	918	;# 
  2265   000397                     TU16BTMR        equ	919	;# 
  2266   000397                     TU16BCR         equ	919	;# 
  2267   000397                     TU16BTMRL       equ	919	;# 
  2268   000397                     TU16BCRL        equ	919	;# 
  2269   000398                     TU16BTMRH       equ	920	;# 
  2270   000398                     TU16BCRH        equ	920	;# 
  2271   000399                     TU16BPR         equ	921	;# 
  2272   000399                     TU16BPRL        equ	921	;# 
  2273   00039A                     TU16BPRH        equ	922	;# 
  2274   00039B                     TU16BCLK        equ	923	;# 
  2275   00039C                     TU16BERS        equ	924	;# 
  2276   0003BB                     TUCHAIN         equ	955	;# 
  2277   0003BC                     CWG1CLK         equ	956	;# 
  2278   0003BC                     CWG1CLKCON      equ	956	;# 
  2279   0003BD                     CWG1ISM         equ	957	;# 
  2280   0003BE                     CWG1DBR         equ	958	;# 
  2281   0003BF                     CWG1DBF         equ	959	;# 
  2282   0003C0                     CWG1CON0        equ	960	;# 
  2283   0003C1                     CWG1CON1        equ	961	;# 
  2284   0003C2                     CWG1AS0         equ	962	;# 
  2285   0003C3                     CWG1AS1         equ	963	;# 
  2286   0003C4                     CWG1STR         equ	964	;# 
  2287   0003C5                     CWG2CLK         equ	965	;# 
  2288   0003C5                     CWG2CLKCON      equ	965	;# 
  2289   0003C6                     CWG2ISM         equ	966	;# 
  2290   0003C7                     CWG2DBR         equ	967	;# 
  2291   0003C8                     CWG2DBF         equ	968	;# 
  2292   0003C9                     CWG2CON0        equ	969	;# 
  2293   0003CA                     CWG2CON1        equ	970	;# 
  2294   0003CB                     CWG2AS0         equ	971	;# 
  2295   0003CC                     CWG2AS1         equ	972	;# 
  2296   0003CD                     CWG2STR         equ	973	;# 
  2297   0003CE                     CWG3CLK         equ	974	;# 
  2298   0003CE                     CWG3CLKCON      equ	974	;# 
  2299   0003CF                     CWG3ISM         equ	975	;# 
  2300   0003D0                     CWG3DBR         equ	976	;# 
  2301   0003D1                     CWG3DBF         equ	977	;# 
  2302   0003D2                     CWG3CON0        equ	978	;# 
  2303   0003D3                     CWG3CON1        equ	979	;# 
  2304   0003D4                     CWG3AS0         equ	980	;# 
  2305   0003D5                     CWG3AS1         equ	981	;# 
  2306   0003D6                     CWG3STR         equ	982	;# 
  2307   0003D7                     FVRCON          equ	983	;# 
  2308   0003D8                     ADCPCON         equ	984	;# 
  2309   0003D8                     ADCP            equ	984	;# 
  2310   0003D9                     ADLTH           equ	985	;# 
  2311   0003D9                     ADLTHL          equ	985	;# 
  2312   0003DA                     ADLTHH          equ	986	;# 
  2313   0003DB                     ADUTH           equ	987	;# 
  2314   0003DB                     ADUTHL          equ	987	;# 
  2315   0003DC                     ADUTHH          equ	988	;# 
  2316   0003DD                     ADERR           equ	989	;# 
  2317   0003DD                     ADERRL          equ	989	;# 
  2318   0003DE                     ADERRH          equ	990	;# 
  2319   0003DF                     ADSTPT          equ	991	;# 
  2320   0003DF                     ADSTPTL         equ	991	;# 
  2321   0003E0                     ADSTPTH         equ	992	;# 
  2322   0003E1                     ADFLTR          equ	993	;# 
  2323   0003E1                     ADFLTRL         equ	993	;# 
  2324   0003E2                     ADFLTRH         equ	994	;# 
  2325   0003E3                     ADACC           equ	995	;# 
  2326   0003E3                     ADACCL          equ	995	;# 
  2327   0003E4                     ADACCH          equ	996	;# 
  2328   0003E5                     ADACCU          equ	997	;# 
  2329   0003E6                     ADCNT           equ	998	;# 
  2330   0003E7                     ADRPT           equ	999	;# 
  2331   0003E8                     ADPREV          equ	1000	;# 
  2332   0003E8                     ADPREVL         equ	1000	;# 
  2333   0003E9                     ADPREVH         equ	1001	;# 
  2334   0003EA                     ADRES           equ	1002	;# 
  2335   0003EA                     ADRESL          equ	1002	;# 
  2336   0003EB                     ADRESH          equ	1003	;# 
  2337   0003EC                     ADPCH           equ	1004	;# 
  2338   0003EE                     ADACQ           equ	1006	;# 
  2339   0003EE                     ADACQL          equ	1006	;# 
  2340   0003EF                     ADACQH          equ	1007	;# 
  2341   0003F0                     ADCAP           equ	1008	;# 
  2342   0003F1                     ADPRE           equ	1009	;# 
  2343   0003F1                     ADPREL          equ	1009	;# 
  2344   0003F2                     ADPREH          equ	1010	;# 
  2345   0003F3                     ADCON0          equ	1011	;# 
  2346   0003F4                     ADCON1          equ	1012	;# 
  2347   0003F5                     ADCON2          equ	1013	;# 
  2348   0003F6                     ADCON3          equ	1014	;# 
  2349   0003F7                     ADSTAT          equ	1015	;# 
  2350   0003F8                     ADREF           equ	1016	;# 
  2351   0003F9                     ADACT           equ	1017	;# 
  2352   0003FA                     ADCLK           equ	1018	;# 
  2353   0003FB                     ADCTX           equ	1019	;# 
  2354   0003FC                     ADCSEL1         equ	1020	;# 
  2355   0003FD                     ADCSEL2         equ	1021	;# 
  2356   0003FE                     ADCSEL3         equ	1022	;# 
  2357   0003FF                     ADCSEL4         equ	1023	;# 
  2358   000400                     ANSELA          equ	1024	;# 
  2359   000401                     WPUA            equ	1025	;# 
  2360   000402                     ODCONA          equ	1026	;# 
  2361   000403                     SLRCONA         equ	1027	;# 
  2362   000404                     INLVLA          equ	1028	;# 
  2363   000405                     IOCAP           equ	1029	;# 
  2364   000406                     IOCAN           equ	1030	;# 
  2365   000407                     IOCAF           equ	1031	;# 
  2366   000408                     ANSELB          equ	1032	;# 
  2367   000409                     WPUB            equ	1033	;# 
  2368   00040A                     ODCONB          equ	1034	;# 
  2369   00040B                     SLRCONB         equ	1035	;# 
  2370   00040C                     INLVLB          equ	1036	;# 
  2371   00040D                     IOCBP           equ	1037	;# 
  2372   00040E                     IOCBN           equ	1038	;# 
  2373   00040F                     IOCBF           equ	1039	;# 
  2374   000410                     ANSELC          equ	1040	;# 
  2375   000411                     WPUC            equ	1041	;# 
  2376   000412                     ODCONC          equ	1042	;# 
  2377   000413                     SLRCONC         equ	1043	;# 
  2378   000414                     INLVLC          equ	1044	;# 
  2379   000415                     IOCCP           equ	1045	;# 
  2380   000416                     IOCCN           equ	1046	;# 
  2381   000417                     IOCCF           equ	1047	;# 
  2382   000421                     WPUE            equ	1057	;# 
  2383   000424                     INLVLE          equ	1060	;# 
  2384   000425                     IOCEP           equ	1061	;# 
  2385   000426                     IOCEN           equ	1062	;# 
  2386   000427                     IOCEF           equ	1063	;# 
  2387   000440                     NCO1ACC         equ	1088	;# 
  2388   000440                     NCO1ACCL        equ	1088	;# 
  2389   000441                     NCO1ACCH        equ	1089	;# 
  2390   000442                     NCO1ACCU        equ	1090	;# 
  2391   000443                     NCO1INC         equ	1091	;# 
  2392   000443                     NCO1INCL        equ	1091	;# 
  2393   000444                     NCO1INCH        equ	1092	;# 
  2394   000445                     NCO1INCU        equ	1093	;# 
  2395   000446                     NCO1CON         equ	1094	;# 
  2396   000447                     NCO1CLK         equ	1095	;# 
  2397   000448                     NCO2ACC         equ	1096	;# 
  2398   000448                     NCO2ACCL        equ	1096	;# 
  2399   000449                     NCO2ACCH        equ	1097	;# 
  2400   00044A                     NCO2ACCU        equ	1098	;# 
  2401   00044B                     NCO2INC         equ	1099	;# 
  2402   00044B                     NCO2INCL        equ	1099	;# 
  2403   00044C                     NCO2INCH        equ	1100	;# 
  2404   00044D                     NCO2INCU        equ	1101	;# 
  2405   00044E                     NCO2CON         equ	1102	;# 
  2406   00044F                     NCO2CLK         equ	1103	;# 
  2407   000450                     NCO3ACC         equ	1104	;# 
  2408   000450                     NCO3ACCL        equ	1104	;# 
  2409   000451                     NCO3ACCH        equ	1105	;# 
  2410   000452                     NCO3ACCU        equ	1106	;# 
  2411   000453                     NCO3INC         equ	1107	;# 
  2412   000453                     NCO3INCL        equ	1107	;# 
  2413   000454                     NCO3INCH        equ	1108	;# 
  2414   000455                     NCO3INCU        equ	1109	;# 
  2415   000456                     NCO3CON         equ	1110	;# 
  2416   000457                     NCO3CLK         equ	1111	;# 
  2417   000458                     FSCMCON         equ	1112	;# 
  2418   000459                     IVTLOCK         equ	1113	;# 
  2419   00045A                     IVTAD           equ	1114	;# 
  2420   00045A                     IVTADL          equ	1114	;# 
  2421   00045B                     IVTADH          equ	1115	;# 
  2422   00045C                     IVTADU          equ	1116	;# 
  2423   00045D                     IVTBASE         equ	1117	;# 
  2424   00045D                     IVTBASEL        equ	1117	;# 
  2425   00045E                     IVTBASEH        equ	1118	;# 
  2426   00045F                     IVTBASEU        equ	1119	;# 
  2427   000460                     PWM1ERS         equ	1120	;# 
  2428   000461                     PWM1CLK         equ	1121	;# 
  2429   000462                     PWM1LDS         equ	1122	;# 
  2430   000463                     PWM1PR          equ	1123	;# 
  2431   000463                     PWM1PRL         equ	1123	;# 
  2432   000464                     PWM1PRH         equ	1124	;# 
  2433   000465                     PWM1CPRE        equ	1125	;# 
  2434   000466                     PWM1PIPOS       equ	1126	;# 
  2435   000467                     PWM1GIR         equ	1127	;# 
  2436   000468                     PWM1GIE         equ	1128	;# 
  2437   000469                     PWM1CON         equ	1129	;# 
  2438   00046A                     PWM1S1CFG       equ	1130	;# 
  2439   00046B                     PWM1S1P1        equ	1131	;# 
  2440   00046B                     PWM1S1P1L       equ	1131	;# 
  2441   00046C                     PWM1S1P1H       equ	1132	;# 
  2442   00046D                     PWM1S1P2        equ	1133	;# 
  2443   00046D                     PWM1S1P2L       equ	1133	;# 
  2444   00046E                     PWM1S1P2H       equ	1134	;# 
  2445   00046F                     PWM2ERS         equ	1135	;# 
  2446   000470                     PWM2CLK         equ	1136	;# 
  2447   000471                     PWM2LDS         equ	1137	;# 
  2448   000472                     PWM2PR          equ	1138	;# 
  2449   000472                     PWM2PRL         equ	1138	;# 
  2450   000473                     PWM2PRH         equ	1139	;# 
  2451   000474                     PWM2CPRE        equ	1140	;# 
  2452   000475                     PWM2PIPOS       equ	1141	;# 
  2453   000476                     PWM2GIR         equ	1142	;# 
  2454   000477                     PWM2GIE         equ	1143	;# 
  2455   000478                     PWM2CON         equ	1144	;# 
  2456   000479                     PWM2S1CFG       equ	1145	;# 
  2457   00047A                     PWM2S1P1        equ	1146	;# 
  2458   00047A                     PWM2S1P1L       equ	1146	;# 
  2459   00047B                     PWM2S1P1H       equ	1147	;# 
  2460   00047C                     PWM2S1P2        equ	1148	;# 
  2461   00047C                     PWM2S1P2L       equ	1148	;# 
  2462   00047D                     PWM2S1P2H       equ	1149	;# 
  2463   00047E                     PWM3ERS         equ	1150	;# 
  2464   00047F                     PWM3CLK         equ	1151	;# 
  2465   000480                     PWM3LDS         equ	1152	;# 
  2466   000481                     PWM3PR          equ	1153	;# 
  2467   000481                     PWM3PRL         equ	1153	;# 
  2468   000482                     PWM3PRH         equ	1154	;# 
  2469   000483                     PWM3CPRE        equ	1155	;# 
  2470   000484                     PWM3PIPOS       equ	1156	;# 
  2471   000485                     PWM3GIR         equ	1157	;# 
  2472   000486                     PWM3GIE         equ	1158	;# 
  2473   000487                     PWM3CON         equ	1159	;# 
  2474   000488                     PWM3S1CFG       equ	1160	;# 
  2475   000489                     PWM3S1P1        equ	1161	;# 
  2476   000489                     PWM3S1P1L       equ	1161	;# 
  2477   00048A                     PWM3S1P1H       equ	1162	;# 
  2478   00048B                     PWM3S1P2        equ	1163	;# 
  2479   00048B                     PWM3S1P2L       equ	1163	;# 
  2480   00048C                     PWM3S1P2H       equ	1164	;# 
  2481   00048D                     PWM4ERS         equ	1165	;# 
  2482   00048E                     PWM4CLK         equ	1166	;# 
  2483   00048F                     PWM4LDS         equ	1167	;# 
  2484   000490                     PWM4PR          equ	1168	;# 
  2485   000490                     PWM4PRL         equ	1168	;# 
  2486   000491                     PWM4PRH         equ	1169	;# 
  2487   000492                     PWM4CPRE        equ	1170	;# 
  2488   000493                     PWM4PIPOS       equ	1171	;# 
  2489   000494                     PWM4GIR         equ	1172	;# 
  2490   000495                     PWM4GIE         equ	1173	;# 
  2491   000496                     PWM4CON         equ	1174	;# 
  2492   000497                     PWM4S1CFG       equ	1175	;# 
  2493   000498                     PWM4S1P1        equ	1176	;# 
  2494   000498                     PWM4S1P1L       equ	1176	;# 
  2495   000499                     PWM4S1P1H       equ	1177	;# 
  2496   00049A                     PWM4S1P2        equ	1178	;# 
  2497   00049A                     PWM4S1P2L       equ	1178	;# 
  2498   00049B                     PWM4S1P2H       equ	1179	;# 
  2499   00049C                     PWMLOAD         equ	1180	;# 
  2500   00049D                     PWMEN           equ	1181	;# 
  2501   00049E                     PIE0            equ	1182	;# 
  2502   00049F                     PIE1            equ	1183	;# 
  2503   0004A0                     PIE2            equ	1184	;# 
  2504   0004A1                     PIE3            equ	1185	;# 
  2505   0004A2                     PIE4            equ	1186	;# 
  2506   0004A3                     PIE5            equ	1187	;# 
  2507   0004A4                     PIE6            equ	1188	;# 
  2508   0004A5                     PIE7            equ	1189	;# 
  2509   0004A6                     PIE8            equ	1190	;# 
  2510   0004A7                     PIE9            equ	1191	;# 
  2511   0004A8                     PIE10           equ	1192	;# 
  2512   0004A9                     PIE11           equ	1193	;# 
  2513   0004AA                     PIE12           equ	1194	;# 
  2514   0004AB                     PIE13           equ	1195	;# 
  2515   0004AC                     PIE14           equ	1196	;# 
  2516   0004AD                     PIE15           equ	1197	;# 
  2517   0004AE                     PIR0            equ	1198	;# 
  2518   0004AF                     PIR1            equ	1199	;# 
  2519   0004B0                     PIR2            equ	1200	;# 
  2520   0004B1                     PIR3            equ	1201	;# 
  2521   0004B2                     PIR4            equ	1202	;# 
  2522   0004B3                     PIR5            equ	1203	;# 
  2523   0004B4                     PIR6            equ	1204	;# 
  2524   0004B5                     PIR7            equ	1205	;# 
  2525   0004B6                     PIR8            equ	1206	;# 
  2526   0004B7                     PIR9            equ	1207	;# 
  2527   0004B8                     PIR10           equ	1208	;# 
  2528   0004B9                     PIR11           equ	1209	;# 
  2529   0004BA                     PIR12           equ	1210	;# 
  2530   0004BB                     PIR13           equ	1211	;# 
  2531   0004BC                     PIR14           equ	1212	;# 
  2532   0004BD                     PIR15           equ	1213	;# 
  2533   0004BE                     LATA            equ	1214	;# 
  2534   0004BF                     LATB            equ	1215	;# 
  2535   0004C0                     LATC            equ	1216	;# 
  2536   0004C6                     TRISA           equ	1222	;# 
  2537   0004C7                     TRISB           equ	1223	;# 
  2538   0004C8                     TRISC           equ	1224	;# 
  2539   0004CA                     TRISE           equ	1226	;# 
  2540   0004CE                     PORTA           equ	1230	;# 
  2541   0004CF                     PORTB           equ	1231	;# 
  2542   0004D0                     PORTC           equ	1232	;# 
  2543   0004D2                     PORTE           equ	1234	;# 
  2544   0004D6                     INTCON0         equ	1238	;# 
  2545   0004D7                     INTCON1         equ	1239	;# 
  2546   0004D8                     STATUS          equ	1240	;# 
  2547   0004D9                     FSR2            equ	1241	;# 
  2548   0004D9                     FSR2L           equ	1241	;# 
  2549   0004DA                     FSR2H           equ	1242	;# 
  2550   0004DB                     PLUSW2          equ	1243	;# 
  2551   0004DC                     PREINC2         equ	1244	;# 
  2552   0004DD                     POSTDEC2        equ	1245	;# 
  2553   0004DE                     POSTINC2        equ	1246	;# 
  2554   0004DF                     INDF2           equ	1247	;# 
  2555   0004E0                     BSR             equ	1248	;# 
  2556   0004E1                     FSR1            equ	1249	;# 
  2557   0004E1                     FSR1L           equ	1249	;# 
  2558   0004E2                     FSR1H           equ	1250	;# 
  2559   0004E3                     PLUSW1          equ	1251	;# 
  2560   0004E4                     PREINC1         equ	1252	;# 
  2561   0004E5                     POSTDEC1        equ	1253	;# 
  2562   0004E6                     POSTINC1        equ	1254	;# 
  2563   0004E7                     INDF1           equ	1255	;# 
  2564   0004E8                     WREG            equ	1256	;# 
  2565   0004E9                     FSR0            equ	1257	;# 
  2566   0004E9                     FSR0L           equ	1257	;# 
  2567   0004EA                     FSR0H           equ	1258	;# 
  2568   0004EB                     PLUSW0          equ	1259	;# 
  2569   0004EC                     PREINC0         equ	1260	;# 
  2570   0004ED                     POSTDEC0        equ	1261	;# 
  2571   0004EE                     POSTINC0        equ	1262	;# 
  2572   0004EF                     INDF0           equ	1263	;# 
  2573   0004F0                     PCON0           equ	1264	;# 
  2574   0004F1                     PCON1           equ	1265	;# 
  2575   0004F2                     CPUDOZE         equ	1266	;# 
  2576   0004F3                     PROD            equ	1267	;# 
  2577   0004F3                     PRODL           equ	1267	;# 
  2578   0004F4                     PRODH           equ	1268	;# 
  2579   0004F5                     TABLAT          equ	1269	;# 
  2580   0004F6                     TBLPTR          equ	1270	;# 
  2581   0004F6                     TBLPTRL         equ	1270	;# 
  2582   0004F7                     TBLPTRH         equ	1271	;# 
  2583   0004F8                     TBLPTRU         equ	1272	;# 
  2584   0004F9                     PCLAT           equ	1273	;# 
  2585   0004F9                     PCL             equ	1273	;# 
  2586   0004FA                     PCLATH          equ	1274	;# 
  2587   0004FB                     PCLATU          equ	1275	;# 
  2588   0004FC                     STKPTR          equ	1276	;# 
  2589   0004FD                     TOS             equ	1277	;# 
  2590   0004FD                     TOSL            equ	1277	;# 
  2591   0004FE                     TOSH            equ	1278	;# 
  2592   0004FF                     TOSU            equ	1279	;# 
  2593   000038                     BOOTREG         equ	56	;# 
  2594   000039                     CLKRCON         equ	57	;# 
  2595   00003A                     CLKRCLK         equ	58	;# 
  2596   000040                     NVMCON0         equ	64	;# 
  2597   000041                     NVMCON1         equ	65	;# 
  2598   000042                     NVMLOCK         equ	66	;# 
  2599   000043                     NVMADR          equ	67	;# 
  2600   000043                     NVMADRL         equ	67	;# 
  2601   000044                     NVMADRH         equ	68	;# 
  2602   000045                     NVMADRU         equ	69	;# 
  2603   000046                     NVMDAT          equ	70	;# 
  2604   000046                     NVMDATL         equ	70	;# 
  2605   000047                     NVMDATH         equ	71	;# 
  2606   000048                     VREGCON         equ	72	;# 
  2607   000049                     BORCON          equ	73	;# 
  2608   00004A                     HLVDCON0        equ	74	;# 
  2609   00004B                     HLVDCON1        equ	75	;# 
  2610   00004C                     ZCDCON          equ	76	;# 
  2611   000060                     PMD0            equ	96	;# 
  2612   000061                     PMD1            equ	97	;# 
  2613   000062                     PMD2            equ	98	;# 
  2614   000063                     PMD3            equ	99	;# 
  2615   000064                     PMD4            equ	100	;# 
  2616   000065                     PMD5            equ	101	;# 
  2617   000066                     PMD6            equ	102	;# 
  2618   000067                     PMD7            equ	103	;# 
  2619   000068                     PMD8            equ	104	;# 
  2620   00006A                     MD1CON0         equ	106	;# 
  2621   00006B                     MD1CON1         equ	107	;# 
  2622   00006C                     MD1SRC          equ	108	;# 
  2623   00006D                     MD1CARL         equ	109	;# 
  2624   00006E                     MD1CARH         equ	110	;# 
  2625   00006F                     CMOUT           equ	111	;# 
  2626   000070                     CM1CON0         equ	112	;# 
  2627   000071                     CM1CON1         equ	113	;# 
  2628   000072                     CM1NCH          equ	114	;# 
  2629   000073                     CM1PCH          equ	115	;# 
  2630   000074                     CM2CON0         equ	116	;# 
  2631   000075                     CM2CON1         equ	117	;# 
  2632   000076                     CM2NCH          equ	118	;# 
  2633   000077                     CM2PCH          equ	119	;# 
  2634   000078                     WDTCON0         equ	120	;# 
  2635   000079                     WDTCON1         equ	121	;# 
  2636   00007A                     WDTPSL          equ	122	;# 
  2637   00007B                     WDTPSH          equ	123	;# 
  2638   00007C                     WDTTMR          equ	124	;# 
  2639   00007D                     DAC1DAT         equ	125	;# 
  2640   00007D                     DAC1DATL        equ	125	;# 
  2641   00007F                     DAC1CON         equ	127	;# 
  2642   000080                     SPI1RXB         equ	128	;# 
  2643   000081                     SPI1TXB         equ	129	;# 
  2644   000082                     SPI1TCNT        equ	130	;# 
  2645   000082                     SPI1TCNTL       equ	130	;# 
  2646   000083                     SPI1TCNTH       equ	131	;# 
  2647   000084                     SPI1CON0        equ	132	;# 
  2648   000085                     SPI1CON1        equ	133	;# 
  2649   000086                     SPI1CON2        equ	134	;# 
  2650   000087                     SPI1STATUS      equ	135	;# 
  2651   000088                     SPI1TWIDTH      equ	136	;# 
  2652   000089                     SPI1BAUD        equ	137	;# 
  2653   00008A                     SPI1INTF        equ	138	;# 
  2654   00008B                     SPI1INTE        equ	139	;# 
  2655   00008C                     SPI1CLK         equ	140	;# 
  2656   00008D                     SPI2RXB         equ	141	;# 
  2657   00008E                     SPI2TXB         equ	142	;# 
  2658   00008F                     SPI2TCNT        equ	143	;# 
  2659   00008F                     SPI2TCNTL       equ	143	;# 
  2660   000090                     SPI2TCNTH       equ	144	;# 
  2661   000091                     SPI2CON0        equ	145	;# 
  2662   000092                     SPI2CON1        equ	146	;# 
  2663   000093                     SPI2CON2        equ	147	;# 
  2664   000094                     SPI2STATUS      equ	148	;# 
  2665   000095                     SPI2TWIDTH      equ	149	;# 
  2666   000096                     SPI2BAUD        equ	150	;# 
  2667   000097                     SPI2INTF        equ	151	;# 
  2668   000098                     SPI2INTE        equ	152	;# 
  2669   000099                     SPI2CLK         equ	153	;# 
  2670   0000AC                     ACTCON          equ	172	;# 
  2671   0000AD                     OSCCON1         equ	173	;# 
  2672   0000AE                     OSCCON2         equ	174	;# 
  2673   0000AF                     OSCCON3         equ	175	;# 
  2674   0000B0                     OSCTUNE         equ	176	;# 
  2675   0000B1                     OSCFRQ          equ	177	;# 
  2676   0000B1                     OSCFREQ         equ	177	;# 
  2677   0000B2                     OSCSTAT         equ	178	;# 
  2678   0000B2                     OSCSTAT1        equ	178	;# 
  2679   0000B3                     OSCEN           equ	179	;# 
  2680   0000B4                     PRLOCK          equ	180	;# 
  2681   0000B5                     SCANPR          equ	181	;# 
  2682   0000B6                     DMA1PR          equ	182	;# 
  2683   0000B7                     DMA2PR          equ	183	;# 
  2684   0000B8                     DMA3PR          equ	184	;# 
  2685   0000B9                     DMA4PR          equ	185	;# 
  2686   0000BA                     DMA5PR          equ	186	;# 
  2687   0000BB                     DMA6PR          equ	187	;# 
  2688   0000BC                     DMA7PR          equ	188	;# 
  2689   0000BD                     DMA8PR          equ	189	;# 
  2690   0000BE                     MAINPR          equ	190	;# 
  2691   0000BF                     ISRPR           equ	191	;# 
  2692   0000D4                     CLCDATA         equ	212	;# 
  2693   0000D5                     CLCSELECT       equ	213	;# 
  2694   0000D6                     CLCnCON         equ	214	;# 
  2695   0000D7                     CLCnPOL         equ	215	;# 
  2696   0000D8                     CLCnSEL0        equ	216	;# 
  2697   0000D9                     CLCnSEL1        equ	217	;# 
  2698   0000DA                     CLCnSEL2        equ	218	;# 
  2699   0000DB                     CLCnSEL3        equ	219	;# 
  2700   0000DC                     CLCnGLS0        equ	220	;# 
  2701   0000DD                     CLCnGLS1        equ	221	;# 
  2702   0000DE                     CLCnGLS2        equ	222	;# 
  2703   0000DF                     CLCnGLS3        equ	223	;# 
  2704   0000E8                     DMASELECT       equ	232	;# 
  2705   0000E9                     DMAnBUF         equ	233	;# 
  2706   0000EA                     DMAnDCNT        equ	234	;# 
  2707   0000EA                     DMAnDCNTL       equ	234	;# 
  2708   0000EB                     DMAnDCNTH       equ	235	;# 
  2709   0000EC                     DMAnDPTR        equ	236	;# 
  2710   0000EC                     DMAnDPTRL       equ	236	;# 
  2711   0000ED                     DMAnDPTRH       equ	237	;# 
  2712   0000EE                     DMAnDSZ         equ	238	;# 
  2713   0000EE                     DMAnDSZL        equ	238	;# 
  2714   0000EF                     DMAnDSZH        equ	239	;# 
  2715   0000F0                     DMAnDSA         equ	240	;# 
  2716   0000F0                     DMAnDSAL        equ	240	;# 
  2717   0000F1                     DMAnDSAH        equ	241	;# 
  2718   0000F2                     DMAnSCNT        equ	242	;# 
  2719   0000F2                     DMAnSCNTL       equ	242	;# 
  2720   0000F3                     DMAnSCNTH       equ	243	;# 
  2721   0000F4                     DMAnSPTR        equ	244	;# 
  2722   0000F4                     DMAnSPTRL       equ	244	;# 
  2723   0000F5                     DMAnSPTRH       equ	245	;# 
  2724   0000F6                     DMAnSPTRU       equ	246	;# 
  2725   0000F7                     DMAnSSZ         equ	247	;# 
  2726   0000F7                     DMAnSSZL        equ	247	;# 
  2727   0000F8                     DMAnSSZH        equ	248	;# 
  2728   0000F9                     DMAnSSA         equ	249	;# 
  2729   0000F9                     DMAnSSAL        equ	249	;# 
  2730   0000FA                     DMAnSSAH        equ	250	;# 
  2731   0000FB                     DMAnSSAU        equ	251	;# 
  2732   0000FC                     DMAnCON0        equ	252	;# 
  2733   0000FD                     DMAnCON1        equ	253	;# 
  2734   0000FE                     DMAnAIRQ        equ	254	;# 
  2735   0000FF                     DMAnSIRQ        equ	255	;# 
  2736   000100                     C1CONL          equ	256	;# 
  2737   000101                     C1CONH          equ	257	;# 
  2738   000102                     C1CONU          equ	258	;# 
  2739   000103                     C1CONT          equ	259	;# 
  2740   000104                     C1NBTCFGL       equ	260	;# 
  2741   000105                     C1NBTCFGH       equ	261	;# 
  2742   000106                     C1NBTCFGU       equ	262	;# 
  2743   000107                     C1NBTCFGT       equ	263	;# 
  2744   000108                     C1DBTCFGL       equ	264	;# 
  2745   000109                     C1DBTCFGH       equ	265	;# 
  2746   00010A                     C1DBTCFGU       equ	266	;# 
  2747   00010B                     C1DBTCFGT       equ	267	;# 
  2748   00010C                     C1TDCL          equ	268	;# 
  2749   00010D                     C1TDCH          equ	269	;# 
  2750   00010E                     C1TDCU          equ	270	;# 
  2751   000110                     C1TBC           equ	272	;# 
  2752   000110                     C1TBCL          equ	272	;# 
  2753   000111                     C1TBCH          equ	273	;# 
  2754   000112                     C1TBCU          equ	274	;# 
  2755   000113                     C1TBCT          equ	275	;# 
  2756   000114                     C1TSCONL        equ	276	;# 
  2757   000115                     C1TSCONH        equ	277	;# 
  2758   000116                     C1TSCONU        equ	278	;# 
  2759   000117                     C1TSCONT        equ	279	;# 
  2760   000118                     C1VECL          equ	280	;# 
  2761   000119                     C1VECH          equ	281	;# 
  2762   00011A                     C1VECU          equ	282	;# 
  2763   00011B                     C1VECT          equ	283	;# 
  2764   00011C                     C1INTL          equ	284	;# 
  2765   00011D                     C1INTH          equ	285	;# 
  2766   00011E                     C1INTU          equ	286	;# 
  2767   00011F                     C1INTT          equ	287	;# 
  2768   000120                     C1RXIF          equ	288	;# 
  2769   000120                     C1RXIFL         equ	288	;# 
  2770   000121                     C1RXIFH         equ	289	;# 
  2771   000122                     C1RXIFU         equ	290	;# 
  2772   000123                     C1RXIFT         equ	291	;# 
  2773   000124                     C1TXIF          equ	292	;# 
  2774   000124                     C1TXIFL         equ	292	;# 
  2775   000125                     C1TXIFH         equ	293	;# 
  2776   000126                     C1TXIFU         equ	294	;# 
  2777   000127                     C1TXIFT         equ	295	;# 
  2778   000128                     C1RXOVIF        equ	296	;# 
  2779   000128                     C1RXOVIFL       equ	296	;# 
  2780   000129                     C1RXOVIFH       equ	297	;# 
  2781   00012A                     C1RXOVIFU       equ	298	;# 
  2782   00012B                     C1RXOVIFT       equ	299	;# 
  2783   00012C                     C1TXATIF        equ	300	;# 
  2784   00012C                     C1TXATIFL       equ	300	;# 
  2785   00012D                     C1TXATIFH       equ	301	;# 
  2786   00012E                     C1TXATIFU       equ	302	;# 
  2787   00012F                     C1TXATIFT       equ	303	;# 
  2788   000130                     C1TXREQ         equ	304	;# 
  2789   000130                     C1TXREQL        equ	304	;# 
  2790   000131                     C1TXREQH        equ	305	;# 
  2791   000132                     C1TXREQU        equ	306	;# 
  2792   000133                     C1TXREQT        equ	307	;# 
  2793   000134                     C1TRECL         equ	308	;# 
  2794   000135                     C1TRECH         equ	309	;# 
  2795   000136                     C1TRECU         equ	310	;# 
  2796   000137                     C1TRECT         equ	311	;# 
  2797   000138                     C1BDIAG0L       equ	312	;# 
  2798   000139                     C1BDIAG0H       equ	313	;# 
  2799   00013C                     C1BDIAG1L       equ	316	;# 
  2800   00013D                     C1BDIAG1H       equ	317	;# 
  2801   00013E                     C1BDIAG1U       equ	318	;# 
  2802   00013F                     C1BDIAG1T       equ	319	;# 
  2803   000140                     C1TEFCONL       equ	320	;# 
  2804   000141                     C1TEFCONH       equ	321	;# 
  2805   000142                     C1TEFCONU       equ	322	;# 
  2806   000143                     C1TEFCONT       equ	323	;# 
  2807   000144                     C1TEFSTAL       equ	324	;# 
  2808   000145                     C1TEFSTAH       equ	325	;# 
  2809   000146                     C1TEFSTAU       equ	326	;# 
  2810   000147                     C1TEFSTAT       equ	327	;# 
  2811   000148                     C1TEFUA         equ	328	;# 
  2812   000148                     C1TEFUAL        equ	328	;# 
  2813   000149                     C1TEFUAH        equ	329	;# 
  2814   00014A                     C1TEFUAU        equ	330	;# 
  2815   00014B                     C1TEFUAT        equ	331	;# 
  2816   00014C                     C1FIFOBA        equ	332	;# 
  2817   00014C                     C1FIFOBAL       equ	332	;# 
  2818   00014D                     C1FIFOBAH       equ	333	;# 
  2819   00014E                     C1FIFOBAU       equ	334	;# 
  2820   00014F                     C1FIFOBAT       equ	335	;# 
  2821   000150                     C1TXQCONL       equ	336	;# 
  2822   000151                     C1TXQCONH       equ	337	;# 
  2823   000152                     C1TXQCONU       equ	338	;# 
  2824   000153                     C1TXQCONT       equ	339	;# 
  2825   000154                     C1TXQSTAL       equ	340	;# 
  2826   000155                     C1TXQSTAH       equ	341	;# 
  2827   000156                     C1TXQSTAU       equ	342	;# 
  2828   000157                     C1TXQSTAT       equ	343	;# 
  2829   000158                     C1TXQUA         equ	344	;# 
  2830   000158                     C1TXQUAL        equ	344	;# 
  2831   000159                     C1TXQUAH        equ	345	;# 
  2832   00015A                     C1TXQUAU        equ	346	;# 
  2833   00015B                     C1TXQUAT        equ	347	;# 
  2834   00015C                     C1FIFOCON1      equ	348	;# 
  2835   00015C                     C1FIFOCON1L     equ	348	;# 
  2836   00015D                     C1FIFOCON1H     equ	349	;# 
  2837   00015E                     C1FIFOCON1U     equ	350	;# 
  2838   00015F                     C1FIFOCON1T     equ	351	;# 
  2839   000160                     C1FIFOSTA1      equ	352	;# 
  2840   000160                     C1FIFOSTA1L     equ	352	;# 
  2841   000161                     C1FIFOSTA1H     equ	353	;# 
  2842   000162                     C1FIFOSTA1U     equ	354	;# 
  2843   000163                     C1FIFOSTA1T     equ	355	;# 
  2844   000164                     C1FIFOUA1       equ	356	;# 
  2845   000164                     C1FIFOUA1L      equ	356	;# 
  2846   000165                     C1FIFOUA1H      equ	357	;# 
  2847   000166                     C1FIFOUA1U      equ	358	;# 
  2848   000167                     C1FIFOUA1T      equ	359	;# 
  2849   000168                     C1FIFOCON2      equ	360	;# 
  2850   000168                     C1FIFOCON2L     equ	360	;# 
  2851   000169                     C1FIFOCON2H     equ	361	;# 
  2852   00016A                     C1FIFOCON2U     equ	362	;# 
  2853   00016B                     C1FIFOCON2T     equ	363	;# 
  2854   00016C                     C1FIFOSTA2      equ	364	;# 
  2855   00016C                     C1FIFOSTA2L     equ	364	;# 
  2856   00016D                     C1FIFOSTA2H     equ	365	;# 
  2857   00016E                     C1FIFOSTA2U     equ	366	;# 
  2858   00016F                     C1FIFOSTA2T     equ	367	;# 
  2859   000170                     C1FIFOUA2       equ	368	;# 
  2860   000170                     C1FIFOUA2L      equ	368	;# 
  2861   000171                     C1FIFOUA2H      equ	369	;# 
  2862   000172                     C1FIFOUA2U      equ	370	;# 
  2863   000173                     C1FIFOUA2T      equ	371	;# 
  2864   000174                     C1FIFOCON3      equ	372	;# 
  2865   000174                     C1FIFOCON3L     equ	372	;# 
  2866   000175                     C1FIFOCON3H     equ	373	;# 
  2867   000176                     C1FIFOCON3U     equ	374	;# 
  2868   000177                     C1FIFOCON3T     equ	375	;# 
  2869   000178                     C1FIFOSTA3      equ	376	;# 
  2870   000178                     C1FIFOSTA3L     equ	376	;# 
  2871   000179                     C1FIFOSTA3H     equ	377	;# 
  2872   00017A                     C1FIFOSTA3U     equ	378	;# 
  2873   00017B                     C1FIFOSTA3T     equ	379	;# 
  2874   00017C                     C1FIFOUA3       equ	380	;# 
  2875   00017C                     C1FIFOUA3L      equ	380	;# 
  2876   00017D                     C1FIFOUA3H      equ	381	;# 
  2877   00017E                     C1FIFOUA3U      equ	382	;# 
  2878   00017F                     C1FIFOUA3T      equ	383	;# 
  2879   000180                     C1FLTCON0L      equ	384	;# 
  2880   000181                     C1FLTCON0H      equ	385	;# 
  2881   000182                     C1FLTCON0U      equ	386	;# 
  2882   000183                     C1FLTCON0T      equ	387	;# 
  2883   000184                     C1FLTCON1L      equ	388	;# 
  2884   000185                     C1FLTCON1H      equ	389	;# 
  2885   000186                     C1FLTCON1U      equ	390	;# 
  2886   000187                     C1FLTCON1T      equ	391	;# 
  2887   000188                     C1FLTCON2L      equ	392	;# 
  2888   000189                     C1FLTCON2H      equ	393	;# 
  2889   00018A                     C1FLTCON2U      equ	394	;# 
  2890   00018B                     C1FLTCON2T      equ	395	;# 
  2891   00018C                     C1FLTOBJ0       equ	396	;# 
  2892   00018C                     C1FLTOBJ0L      equ	396	;# 
  2893   00018D                     C1FLTOBJ0H      equ	397	;# 
  2894   00018E                     C1FLTOBJ0U      equ	398	;# 
  2895   00018F                     C1FLTOBJ0T      equ	399	;# 
  2896   000190                     C1MASK0         equ	400	;# 
  2897   000190                     C1MASK0L        equ	400	;# 
  2898   000191                     C1MASK0H        equ	401	;# 
  2899   000192                     C1MASK0U        equ	402	;# 
  2900   000193                     C1MASK0T        equ	403	;# 
  2901   000194                     C1FLTOBJ1       equ	404	;# 
  2902   000194                     C1FLTOBJ1L      equ	404	;# 
  2903   000195                     C1FLTOBJ1H      equ	405	;# 
  2904   000196                     C1FLTOBJ1U      equ	406	;# 
  2905   000197                     C1FLTOBJ1T      equ	407	;# 
  2906   000198                     C1MASK1         equ	408	;# 
  2907   000198                     C1MASK1L        equ	408	;# 
  2908   000199                     C1MASK1H        equ	409	;# 
  2909   00019A                     C1MASK1U        equ	410	;# 
  2910   00019B                     C1MASK1T        equ	411	;# 
  2911   00019C                     C1FLTOBJ2       equ	412	;# 
  2912   00019C                     C1FLTOBJ2L      equ	412	;# 
  2913   00019D                     C1FLTOBJ2H      equ	413	;# 
  2914   00019E                     C1FLTOBJ2U      equ	414	;# 
  2915   00019F                     C1FLTOBJ2T      equ	415	;# 
  2916   0001A0                     C1MASK2         equ	416	;# 
  2917   0001A0                     C1MASK2L        equ	416	;# 
  2918   0001A1                     C1MASK2H        equ	417	;# 
  2919   0001A2                     C1MASK2U        equ	418	;# 
  2920   0001A3                     C1MASK2T        equ	419	;# 
  2921   0001A4                     C1FLTOBJ3       equ	420	;# 
  2922   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2923   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2924   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2925   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2926   0001A8                     C1MASK3         equ	424	;# 
  2927   0001A8                     C1MASK3L        equ	424	;# 
  2928   0001A9                     C1MASK3H        equ	425	;# 
  2929   0001AA                     C1MASK3U        equ	426	;# 
  2930   0001AB                     C1MASK3T        equ	427	;# 
  2931   0001AC                     C1FLTOBJ4       equ	428	;# 
  2932   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2933   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2934   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2935   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2936   0001B0                     C1MASK4         equ	432	;# 
  2937   0001B0                     C1MASK4L        equ	432	;# 
  2938   0001B1                     C1MASK4H        equ	433	;# 
  2939   0001B2                     C1MASK4U        equ	434	;# 
  2940   0001B3                     C1MASK4T        equ	435	;# 
  2941   0001B4                     C1FLTOBJ5       equ	436	;# 
  2942   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2943   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2944   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2945   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2946   0001B8                     C1MASK5         equ	440	;# 
  2947   0001B8                     C1MASK5L        equ	440	;# 
  2948   0001B9                     C1MASK5H        equ	441	;# 
  2949   0001BA                     C1MASK5U        equ	442	;# 
  2950   0001BB                     C1MASK5T        equ	443	;# 
  2951   0001BC                     C1FLTOBJ6       equ	444	;# 
  2952   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2953   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2954   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2955   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2956   0001C0                     C1MASK6         equ	448	;# 
  2957   0001C0                     C1MASK6L        equ	448	;# 
  2958   0001C1                     C1MASK6H        equ	449	;# 
  2959   0001C2                     C1MASK6U        equ	450	;# 
  2960   0001C3                     C1MASK6T        equ	451	;# 
  2961   0001C4                     C1FLTOBJ7       equ	452	;# 
  2962   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2963   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2964   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2965   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2966   0001C8                     C1MASK7         equ	456	;# 
  2967   0001C8                     C1MASK7L        equ	456	;# 
  2968   0001C9                     C1MASK7H        equ	457	;# 
  2969   0001CA                     C1MASK7U        equ	458	;# 
  2970   0001CB                     C1MASK7T        equ	459	;# 
  2971   0001CC                     C1FLTOBJ8       equ	460	;# 
  2972   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2973   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2974   0001CE                     C1FLTOBJ8U      equ	462	;# 
  2975   0001CF                     C1FLTOBJ8T      equ	463	;# 
  2976   0001D0                     C1MASK8         equ	464	;# 
  2977   0001D0                     C1MASK8L        equ	464	;# 
  2978   0001D1                     C1MASK8H        equ	465	;# 
  2979   0001D2                     C1MASK8U        equ	466	;# 
  2980   0001D3                     C1MASK8T        equ	467	;# 
  2981   0001D4                     C1FLTOBJ9       equ	468	;# 
  2982   0001D4                     C1FLTOBJ9L      equ	468	;# 
  2983   0001D5                     C1FLTOBJ9H      equ	469	;# 
  2984   0001D6                     C1FLTOBJ9U      equ	470	;# 
  2985   0001D7                     C1FLTOBJ9T      equ	471	;# 
  2986   0001D8                     C1MASK9         equ	472	;# 
  2987   0001D8                     C1MASK9L        equ	472	;# 
  2988   0001D9                     C1MASK9H        equ	473	;# 
  2989   0001DA                     C1MASK9U        equ	474	;# 
  2990   0001DB                     C1MASK9T        equ	475	;# 
  2991   0001DC                     C1FLTOBJ10      equ	476	;# 
  2992   0001DC                     C1FLTOBJ10L     equ	476	;# 
  2993   0001DD                     C1FLTOBJ10H     equ	477	;# 
  2994   0001DE                     C1FLTOBJ10U     equ	478	;# 
  2995   0001DF                     C1FLTOBJ10T     equ	479	;# 
  2996   0001E0                     C1MASK10        equ	480	;# 
  2997   0001E0                     C1MASK10L       equ	480	;# 
  2998   0001E1                     C1MASK10H       equ	481	;# 
  2999   0001E2                     C1MASK10U       equ	482	;# 
  3000   0001E3                     C1MASK10T       equ	483	;# 
  3001   0001E4                     C1FLTOBJ11      equ	484	;# 
  3002   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3003   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3004   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3005   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3006   0001E8                     C1MASK11        equ	488	;# 
  3007   0001E8                     C1MASK11L       equ	488	;# 
  3008   0001E9                     C1MASK11H       equ	489	;# 
  3009   0001EA                     C1MASK11U       equ	490	;# 
  3010   0001EB                     C1MASK11T       equ	491	;# 
  3011   000200                     PPSLOCK         equ	512	;# 
  3012   000201                     RA0PPS          equ	513	;# 
  3013   000202                     RA1PPS          equ	514	;# 
  3014   000203                     RA2PPS          equ	515	;# 
  3015   000204                     RA3PPS          equ	516	;# 
  3016   000205                     RA4PPS          equ	517	;# 
  3017   000206                     RA5PPS          equ	518	;# 
  3018   000207                     RA6PPS          equ	519	;# 
  3019   000208                     RA7PPS          equ	520	;# 
  3020   000209                     RB0PPS          equ	521	;# 
  3021   00020A                     RB1PPS          equ	522	;# 
  3022   00020B                     RB2PPS          equ	523	;# 
  3023   00020C                     RB3PPS          equ	524	;# 
  3024   00020D                     RB4PPS          equ	525	;# 
  3025   00020E                     RB5PPS          equ	526	;# 
  3026   00020F                     RB6PPS          equ	527	;# 
  3027   000210                     RB7PPS          equ	528	;# 
  3028   000211                     RC0PPS          equ	529	;# 
  3029   000212                     RC1PPS          equ	530	;# 
  3030   000213                     RC2PPS          equ	531	;# 
  3031   000214                     RC3PPS          equ	532	;# 
  3032   000215                     RC4PPS          equ	533	;# 
  3033   000216                     RC5PPS          equ	534	;# 
  3034   000217                     RC6PPS          equ	535	;# 
  3035   000218                     RC7PPS          equ	536	;# 
  3036   00023D                     CANRXPPS        equ	573	;# 
  3037   00023E                     INT0PPS         equ	574	;# 
  3038   00023F                     INT1PPS         equ	575	;# 
  3039   000240                     INT2PPS         equ	576	;# 
  3040   000241                     T0CKIPPS        equ	577	;# 
  3041   000242                     T1CKIPPS        equ	578	;# 
  3042   000243                     T1GPPS          equ	579	;# 
  3043   000244                     T3CKIPPS        equ	580	;# 
  3044   000245                     T3GPPS          equ	581	;# 
  3045   000246                     T5CKIPPS        equ	582	;# 
  3046   000247                     T5GPPS          equ	583	;# 
  3047   000248                     T2INPPS         equ	584	;# 
  3048   000249                     T4INPPS         equ	585	;# 
  3049   00024A                     T6INPPS         equ	586	;# 
  3050   00024B                     TUIN0PPS        equ	587	;# 
  3051   00024C                     TUIN1PPS        equ	588	;# 
  3052   00024F                     CCP1PPS         equ	591	;# 
  3053   000250                     CCP2PPS         equ	592	;# 
  3054   000251                     CCP3PPS         equ	593	;# 
  3055   000253                     PWM1ERSPPS      equ	595	;# 
  3056   000254                     PWM2ERSPPS      equ	596	;# 
  3057   000255                     PWM3ERSPPS      equ	597	;# 
  3058   000256                     PWM4ERSPPS      equ	598	;# 
  3059   000257                     PWMIN0PPS       equ	599	;# 
  3060   000258                     PWMIN1PPS       equ	600	;# 
  3061   000259                     SMT1WINPPS      equ	601	;# 
  3062   00025A                     SMT1SIGPPS      equ	602	;# 
  3063   00025B                     CWG1PPS         equ	603	;# 
  3064   00025B                     CWG1INPPS       equ	603	;# 
  3065   00025C                     CWG2PPS         equ	604	;# 
  3066   00025C                     CWG2INPPS       equ	604	;# 
  3067   00025D                     CWG3PPS         equ	605	;# 
  3068   00025D                     CWG3INPPS       equ	605	;# 
  3069   00025E                     MD1CARLPPS      equ	606	;# 
  3070   00025E                     MDCARLPPS       equ	606	;# 
  3071   00025F                     MD1CARHPPS      equ	607	;# 
  3072   00025F                     MDCARHPPS       equ	607	;# 
  3073   000260                     MD1SRCPPS       equ	608	;# 
  3074   000260                     MDSRCPPS        equ	608	;# 
  3075   000261                     CLCIN0PPS       equ	609	;# 
  3076   000262                     CLCIN1PPS       equ	610	;# 
  3077   000263                     CLCIN2PPS       equ	611	;# 
  3078   000264                     CLCIN3PPS       equ	612	;# 
  3079   000265                     CLCIN4PPS       equ	613	;# 
  3080   000266                     CLCIN5PPS       equ	614	;# 
  3081   000267                     CLCIN6PPS       equ	615	;# 
  3082   000268                     CLCIN7PPS       equ	616	;# 
  3083   000269                     ADACTPPS        equ	617	;# 
  3084   00026A                     SPI1SCKPPS      equ	618	;# 
  3085   00026B                     SPI1SDIPPS      equ	619	;# 
  3086   00026C                     SPI1SSPPS       equ	620	;# 
  3087   00026D                     SPI2SCKPPS      equ	621	;# 
  3088   00026E                     SPI2SDIPPS      equ	622	;# 
  3089   00026F                     SPI2SSPPS       equ	623	;# 
  3090   000270                     I2C1SDAPPS      equ	624	;# 
  3091   000271                     I2C1SCLPPS      equ	625	;# 
  3092   000272                     U1RXPPS         equ	626	;# 
  3093   000273                     U1CTSPPS        equ	627	;# 
  3094   000274                     U2RXPPS         equ	628	;# 
  3095   000275                     U2CTSPPS        equ	629	;# 
  3096   000276                     U3RXPPS         equ	630	;# 
  3097   000277                     U3CTSPPS        equ	631	;# 
  3098   000278                     U4RXPPS         equ	632	;# 
  3099   000279                     U4CTSPPS        equ	633	;# 
  3100   00027A                     U5RXPPS         equ	634	;# 
  3101   00027B                     U5CTSPPS        equ	635	;# 
  3102   000286                     RC4I2C          equ	646	;# 
  3103   000287                     RC3I2C          equ	647	;# 
  3104   000288                     RB2I2C          equ	648	;# 
  3105   000289                     RB1I2C          equ	649	;# 
  3106   00028A                     I2C1RXB         equ	650	;# 
  3107   00028B                     I2C1TXB         equ	651	;# 
  3108   00028C                     I2C1CNTL        equ	652	;# 
  3109   00028D                     I2C1CNTH        equ	653	;# 
  3110   00028E                     I2C1ADB0        equ	654	;# 
  3111   00028F                     I2C1ADB1        equ	655	;# 
  3112   000290                     I2C1ADR0        equ	656	;# 
  3113   000291                     I2C1ADR1        equ	657	;# 
  3114   000292                     I2C1ADR2        equ	658	;# 
  3115   000293                     I2C1ADR3        equ	659	;# 
  3116   000294                     I2C1CON0        equ	660	;# 
  3117   000295                     I2C1CON1        equ	661	;# 
  3118   000296                     I2C1CON2        equ	662	;# 
  3119   000297                     I2C1ERR         equ	663	;# 
  3120   000298                     I2C1STAT0       equ	664	;# 
  3121   000299                     I2C1STAT1       equ	665	;# 
  3122   00029A                     I2C1PIR         equ	666	;# 
  3123   00029B                     I2C1PIE         equ	667	;# 
  3124   00029C                     I2C1BTO         equ	668	;# 
  3125   00029D                     I2C1BAUD        equ	669	;# 
  3126   00029E                     I2C1CLK         equ	670	;# 
  3127   00029F                     I2C1BTOC        equ	671	;# 
  3128   0002A1                     U1RXB           equ	673	;# 
  3129   0002A1                     U1RXBL          equ	673	;# 
  3130   0002A2                     U1RXCHK         equ	674	;# 
  3131   0002A3                     U1TXB           equ	675	;# 
  3132   0002A3                     U1TXBL          equ	675	;# 
  3133   0002A4                     U1TXCHK         equ	676	;# 
  3134   0002A5                     U1P1            equ	677	;# 
  3135   0002A5                     U1P1L           equ	677	;# 
  3136   0002A6                     U1P1H           equ	678	;# 
  3137   0002A7                     U1P2            equ	679	;# 
  3138   0002A7                     U1P2L           equ	679	;# 
  3139   0002A8                     U1P2H           equ	680	;# 
  3140   0002A9                     U1P3            equ	681	;# 
  3141   0002A9                     U1P3L           equ	681	;# 
  3142   0002AA                     U1P3H           equ	682	;# 
  3143   0002AB                     U1CON0          equ	683	;# 
  3144   0002AC                     U1CON1          equ	684	;# 
  3145   0002AD                     U1CON2          equ	685	;# 
  3146   0002AE                     U1BRG           equ	686	;# 
  3147   0002AE                     U1BRGL          equ	686	;# 
  3148   0002AF                     U1BRGH          equ	687	;# 
  3149   0002B0                     U1FIFO          equ	688	;# 
  3150   0002B1                     U1UIR           equ	689	;# 
  3151   0002B2                     U1ERRIR         equ	690	;# 
  3152   0002B3                     U1ERRIE         equ	691	;# 
  3153   0002B4                     U2RXB           equ	692	;# 
  3154   0002B4                     U2RXBL          equ	692	;# 
  3155   0002B5                     U2RXCHK         equ	693	;# 
  3156   0002B6                     U2TXB           equ	694	;# 
  3157   0002B6                     U2TXBL          equ	694	;# 
  3158   0002B7                     U2TXCHK         equ	695	;# 
  3159   0002B8                     U2P1            equ	696	;# 
  3160   0002B8                     U2P1L           equ	696	;# 
  3161   0002B9                     U2P1H           equ	697	;# 
  3162   0002BA                     U2P2            equ	698	;# 
  3163   0002BA                     U2P2L           equ	698	;# 
  3164   0002BB                     U2P2H           equ	699	;# 
  3165   0002BC                     U2P3            equ	700	;# 
  3166   0002BC                     U2P3L           equ	700	;# 
  3167   0002BD                     U2P3H           equ	701	;# 
  3168   0002BE                     U2CON0          equ	702	;# 
  3169   0002BF                     U2CON1          equ	703	;# 
  3170   0002C0                     U2CON2          equ	704	;# 
  3171   0002C1                     U2BRG           equ	705	;# 
  3172   0002C1                     U2BRGL          equ	705	;# 
  3173   0002C2                     U2BRGH          equ	706	;# 
  3174   0002C3                     U2FIFO          equ	707	;# 
  3175   0002C4                     U2UIR           equ	708	;# 
  3176   0002C5                     U2ERRIR         equ	709	;# 
  3177   0002C6                     U2ERRIE         equ	710	;# 
  3178   0002C7                     U3RXB           equ	711	;# 
  3179   0002C7                     U3RXBL          equ	711	;# 
  3180   0002C9                     U3TXB           equ	713	;# 
  3181   0002C9                     U3TXBL          equ	713	;# 
  3182   0002CB                     U3P1            equ	715	;# 
  3183   0002CB                     U3P1L           equ	715	;# 
  3184   0002CD                     U3P2            equ	717	;# 
  3185   0002CD                     U3P2L           equ	717	;# 
  3186   0002CF                     U3P3            equ	719	;# 
  3187   0002CF                     U3P3L           equ	719	;# 
  3188   0002D1                     U3CON0          equ	721	;# 
  3189   0002D2                     U3CON1          equ	722	;# 
  3190   0002D3                     U3CON2          equ	723	;# 
  3191   0002D4                     U3BRG           equ	724	;# 
  3192   0002D4                     U3BRGL          equ	724	;# 
  3193   0002D5                     U3BRGH          equ	725	;# 
  3194   0002D6                     U3FIFO          equ	726	;# 
  3195   0002D7                     U3UIR           equ	727	;# 
  3196   0002D8                     U3ERRIR         equ	728	;# 
  3197   0002D9                     U3ERRIE         equ	729	;# 
  3198   0002DA                     U4RXB           equ	730	;# 
  3199   0002DA                     U4RXBL          equ	730	;# 
  3200   0002DC                     U4TXB           equ	732	;# 
  3201   0002DC                     U4TXBL          equ	732	;# 
  3202   0002DE                     U4P1            equ	734	;# 
  3203   0002DE                     U4P1L           equ	734	;# 
  3204   0002E0                     U4P2            equ	736	;# 
  3205   0002E0                     U4P2L           equ	736	;# 
  3206   0002E2                     U4P3            equ	738	;# 
  3207   0002E2                     U4P3L           equ	738	;# 
  3208   0002E4                     U4CON0          equ	740	;# 
  3209   0002E5                     U4CON1          equ	741	;# 
  3210   0002E6                     U4CON2          equ	742	;# 
  3211   0002E7                     U4BRG           equ	743	;# 
  3212   0002E7                     U4BRGL          equ	743	;# 
  3213   0002E8                     U4BRGH          equ	744	;# 
  3214   0002E9                     U4FIFO          equ	745	;# 
  3215   0002EA                     U4UIR           equ	746	;# 
  3216   0002EB                     U4ERRIR         equ	747	;# 
  3217   0002EC                     U4ERRIE         equ	748	;# 
  3218   0002ED                     U5RXB           equ	749	;# 
  3219   0002ED                     U5RXBL          equ	749	;# 
  3220   0002EF                     U5TXB           equ	751	;# 
  3221   0002EF                     U5TXBL          equ	751	;# 
  3222   0002F1                     U5P1            equ	753	;# 
  3223   0002F1                     U5P1L           equ	753	;# 
  3224   0002F3                     U5P2            equ	755	;# 
  3225   0002F3                     U5P2L           equ	755	;# 
  3226   0002F5                     U5P3            equ	757	;# 
  3227   0002F5                     U5P3L           equ	757	;# 
  3228   0002F7                     U5CON0          equ	759	;# 
  3229   0002F8                     U5CON1          equ	760	;# 
  3230   0002F9                     U5CON2          equ	761	;# 
  3231   0002FA                     U5BRG           equ	762	;# 
  3232   0002FA                     U5BRGL          equ	762	;# 
  3233   0002FB                     U5BRGH          equ	763	;# 
  3234   0002FC                     U5FIFO          equ	764	;# 
  3235   0002FD                     U5UIR           equ	765	;# 
  3236   0002FE                     U5ERRIR         equ	766	;# 
  3237   0002FF                     U5ERRIE         equ	767	;# 
  3238   000300                     SMT1TMR         equ	768	;# 
  3239   000300                     SMT1TMRL        equ	768	;# 
  3240   000301                     SMT1TMRH        equ	769	;# 
  3241   000302                     SMT1TMRU        equ	770	;# 
  3242   000303                     SMT1CPR         equ	771	;# 
  3243   000303                     SMT1CPRL        equ	771	;# 
  3244   000304                     SMT1CPRH        equ	772	;# 
  3245   000305                     SMT1CPRU        equ	773	;# 
  3246   000306                     SMT1CPW         equ	774	;# 
  3247   000306                     SMT1CPWL        equ	774	;# 
  3248   000307                     SMT1CPWH        equ	775	;# 
  3249   000308                     SMT1CPWU        equ	776	;# 
  3250   000309                     SMT1PR          equ	777	;# 
  3251   000309                     SMT1PRL         equ	777	;# 
  3252   00030A                     SMT1PRH         equ	778	;# 
  3253   00030B                     SMT1PRU         equ	779	;# 
  3254   00030C                     SMT1CON0        equ	780	;# 
  3255   00030D                     SMT1CON1        equ	781	;# 
  3256   00030E                     SMT1STAT        equ	782	;# 
  3257   00030F                     SMT1CLK         equ	783	;# 
  3258   000310                     SMT1SIG         equ	784	;# 
  3259   000311                     SMT1WIN         equ	785	;# 
  3260   000318                     TMR0L           equ	792	;# 
  3261   000318                     TMR0            equ	792	;# 
  3262   000319                     TMR0H           equ	793	;# 
  3263   000319                     PR0             equ	793	;# 
  3264   00031A                     T0CON0          equ	794	;# 
  3265   00031B                     T0CON1          equ	795	;# 
  3266   00031C                     TMR1            equ	796	;# 
  3267   00031C                     TMR1L           equ	796	;# 
  3268   00031D                     TMR1H           equ	797	;# 
  3269   00031E                     T1CON           equ	798	;# 
  3270   00031E                     TMR1CON         equ	798	;# 
  3271   00031F                     T1GCON          equ	799	;# 
  3272   00031F                     TMR1GCON        equ	799	;# 
  3273   000320                     T1GATE          equ	800	;# 
  3274   000320                     TMR1GATE        equ	800	;# 
  3275   000321                     T1CLK           equ	801	;# 
  3276   000321                     TMR1CLK         equ	801	;# 
  3277   000321                     PR1             equ	801	;# 
  3278   000322                     T2TMR           equ	802	;# 
  3279   000322                     TMR2            equ	802	;# 
  3280   000323                     T2PR            equ	803	;# 
  3281   000323                     PR2             equ	803	;# 
  3282   000324                     T2CON           equ	804	;# 
  3283   000325                     T2HLT           equ	805	;# 
  3284   000326                     T2CLKCON        equ	806	;# 
  3285   000326                     T2CLK           equ	806	;# 
  3286   000327                     T2RST           equ	807	;# 
  3287   000328                     TMR3            equ	808	;# 
  3288   000328                     TMR3L           equ	808	;# 
  3289   000329                     TMR3H           equ	809	;# 
  3290   00032A                     T3CON           equ	810	;# 
  3291   00032A                     TMR3CON         equ	810	;# 
  3292   00032B                     T3GCON          equ	811	;# 
  3293   00032B                     TMR3GCON        equ	811	;# 
  3294   00032C                     T3GATE          equ	812	;# 
  3295   00032C                     TMR3GATE        equ	812	;# 
  3296   00032D                     T3CLK           equ	813	;# 
  3297   00032D                     TMR3CLK         equ	813	;# 
  3298   00032D                     PR3             equ	813	;# 
  3299   00032E                     T4TMR           equ	814	;# 
  3300   00032E                     TMR4            equ	814	;# 
  3301   00032F                     T4PR            equ	815	;# 
  3302   00032F                     PR4             equ	815	;# 
  3303   000330                     T4CON           equ	816	;# 
  3304   000331                     T4HLT           equ	817	;# 
  3305   000332                     T4CLKCON        equ	818	;# 
  3306   000332                     T4CLK           equ	818	;# 
  3307   000333                     T4RST           equ	819	;# 
  3308   000334                     TMR5            equ	820	;# 
  3309   000334                     TMR5L           equ	820	;# 
  3310   000335                     TMR5H           equ	821	;# 
  3311   000336                     T5CON           equ	822	;# 
  3312   000336                     TMR5CON         equ	822	;# 
  3313   000337                     T5GCON          equ	823	;# 
  3314   000337                     TMR5GCON        equ	823	;# 
  3315   000338                     T5GATE          equ	824	;# 
  3316   000338                     TMR5GATE        equ	824	;# 
  3317   000339                     T5CLK           equ	825	;# 
  3318   000339                     TMR5CLK         equ	825	;# 
  3319   000339                     PR5             equ	825	;# 
  3320   00033A                     T6TMR           equ	826	;# 
  3321   00033A                     TMR6            equ	826	;# 
  3322   00033B                     T6PR            equ	827	;# 
  3323   00033B                     PR6             equ	827	;# 
  3324   00033C                     T6CON           equ	828	;# 
  3325   00033D                     T6HLT           equ	829	;# 
  3326   00033E                     T6CLKCON        equ	830	;# 
  3327   00033E                     T6CLK           equ	830	;# 
  3328   00033F                     T6RST           equ	831	;# 
  3329   000340                     CCPR1           equ	832	;# 
  3330   000340                     CCPR1L          equ	832	;# 
  3331   000341                     CCPR1H          equ	833	;# 
  3332   000342                     CCP1CON         equ	834	;# 
  3333   000343                     CCP1CAP         equ	835	;# 
  3334   000344                     CCPR2           equ	836	;# 
  3335   000344                     CCPR2L          equ	836	;# 
  3336   000345                     CCPR2H          equ	837	;# 
  3337   000346                     CCP2CON         equ	838	;# 
  3338   000347                     CCP2CAP         equ	839	;# 
  3339   000348                     CCPR3           equ	840	;# 
  3340   000348                     CCPR3L          equ	840	;# 
  3341   000349                     CCPR3H          equ	841	;# 
  3342   00034A                     CCP3CON         equ	842	;# 
  3343   00034B                     CCP3CAP         equ	843	;# 
  3344   00034C                     CCPTMRS0        equ	844	;# 
  3345   00034F                     CRCDATA         equ	847	;# 
  3346   00034F                     CRCDATAL        equ	847	;# 
  3347   000350                     CRCDATAH        equ	848	;# 
  3348   000351                     CRCDATAU        equ	849	;# 
  3349   000352                     CRCDATAT        equ	850	;# 
  3350   000353                     CRCOUT          equ	851	;# 
  3351   000353                     CRCSHFT         equ	851	;# 
  3352   000353                     CRCXOR          equ	851	;# 
  3353   000353                     CRCOUTL         equ	851	;# 
  3354   000353                     CRCSHFTL        equ	851	;# 
  3355   000353                     CRCSHIFTL       equ	851	;# 
  3356   000353                     CRCXORL         equ	851	;# 
  3357   000354                     CRCOUTH         equ	852	;# 
  3358   000354                     CRCSHFTH        equ	852	;# 
  3359   000354                     CRCSHIFTH       equ	852	;# 
  3360   000354                     CRCXORH         equ	852	;# 
  3361   000355                     CRCOUTU         equ	853	;# 
  3362   000355                     CRCSHFTU        equ	853	;# 
  3363   000355                     CRCSHIFTU       equ	853	;# 
  3364   000355                     CRCXORU         equ	853	;# 
  3365   000356                     CRCOUTT         equ	854	;# 
  3366   000356                     CRCSHFTT        equ	854	;# 
  3367   000356                     CRCSHIFTT       equ	854	;# 
  3368   000356                     CRCXORT         equ	854	;# 
  3369   000357                     CRCCON0         equ	855	;# 
  3370   000358                     CRCCON1         equ	856	;# 
  3371   000359                     CRCCON2         equ	857	;# 
  3372   00035A                     SCANLADR        equ	858	;# 
  3373   00035A                     SCANLADRL       equ	858	;# 
  3374   00035B                     SCANLADRH       equ	859	;# 
  3375   00035C                     SCANLADRU       equ	860	;# 
  3376   00035D                     SCANHADR        equ	861	;# 
  3377   00035D                     SCANHADRL       equ	861	;# 
  3378   00035E                     SCANHADRH       equ	862	;# 
  3379   00035F                     SCANHADRU       equ	863	;# 
  3380   000360                     SCANCON0        equ	864	;# 
  3381   000361                     SCANTRIG        equ	865	;# 
  3382   000362                     IPR0            equ	866	;# 
  3383   000363                     IPR1            equ	867	;# 
  3384   000364                     IPR2            equ	868	;# 
  3385   000365                     IPR3            equ	869	;# 
  3386   000366                     IPR4            equ	870	;# 
  3387   000367                     IPR5            equ	871	;# 
  3388   000368                     IPR6            equ	872	;# 
  3389   000369                     IPR7            equ	873	;# 
  3390   00036A                     IPR8            equ	874	;# 
  3391   00036B                     IPR9            equ	875	;# 
  3392   00036C                     IPR10           equ	876	;# 
  3393   00036D                     IPR11           equ	877	;# 
  3394   00036E                     IPR12           equ	878	;# 
  3395   00036F                     IPR13           equ	879	;# 
  3396   000370                     IPR14           equ	880	;# 
  3397   000371                     IPR15           equ	881	;# 
  3398   000373                     STATUS_CSHAD    equ	883	;# 
  3399   000374                     WREG_CSHAD      equ	884	;# 
  3400   000375                     BSR_CSHAD       equ	885	;# 
  3401   000376                     SHADCON         equ	886	;# 
  3402   000377                     STATUS_SHAD     equ	887	;# 
  3403   000378                     WREG_SHAD       equ	888	;# 
  3404   000379                     BSR_SHAD        equ	889	;# 
  3405   00037A                     PCLATH_SHAD     equ	890	;# 
  3406   00037B                     PCLATU_SHAD     equ	891	;# 
  3407   00037C                     FSR0SH          equ	892	;# 
  3408   00037C                     FSR0L_SHAD      equ	892	;# 
  3409   00037D                     FSR0H_SHAD      equ	893	;# 
  3410   00037E                     FSR1SH          equ	894	;# 
  3411   00037E                     FSR1L_SHAD      equ	894	;# 
  3412   00037F                     FSR1H_SHAD      equ	895	;# 
  3413   000380                     FSR2SH          equ	896	;# 
  3414   000380                     FSR2L_SHAD      equ	896	;# 
  3415   000381                     FSR2H_SHAD      equ	897	;# 
  3416   000382                     PRODSH          equ	898	;# 
  3417   000382                     PRODL_SHAD      equ	898	;# 
  3418   000383                     PRODH_SHAD      equ	899	;# 
  3419   000387                     TU16ACON0       equ	903	;# 
  3420   000388                     TU16ACON1       equ	904	;# 
  3421   000389                     TU16AHLT        equ	905	;# 
  3422   00038A                     TU16APS         equ	906	;# 
  3423   00038B                     TU16ATMR        equ	907	;# 
  3424   00038B                     TU16ACR         equ	907	;# 
  3425   00038B                     TU16ATMRL       equ	907	;# 
  3426   00038B                     TU16ACRL        equ	907	;# 
  3427   00038C                     TU16ATMRH       equ	908	;# 
  3428   00038C                     TU16ACRH        equ	908	;# 
  3429   00038D                     TU16APR         equ	909	;# 
  3430   00038D                     TU16APRL        equ	909	;# 
  3431   00038E                     TU16APRH        equ	910	;# 
  3432   00038F                     TU16ACLK        equ	911	;# 
  3433   000390                     TU16AERS        equ	912	;# 
  3434   000393                     TU16BCON0       equ	915	;# 
  3435   000394                     TU16BCON1       equ	916	;# 
  3436   000395                     TU16BHLT        equ	917	;# 
  3437   000396                     TU16BPS         equ	918	;# 
  3438   000397                     TU16BTMR        equ	919	;# 
  3439   000397                     TU16BCR         equ	919	;# 
  3440   000397                     TU16BTMRL       equ	919	;# 
  3441   000397                     TU16BCRL        equ	919	;# 
  3442   000398                     TU16BTMRH       equ	920	;# 
  3443   000398                     TU16BCRH        equ	920	;# 
  3444   000399                     TU16BPR         equ	921	;# 
  3445   000399                     TU16BPRL        equ	921	;# 
  3446   00039A                     TU16BPRH        equ	922	;# 
  3447   00039B                     TU16BCLK        equ	923	;# 
  3448   00039C                     TU16BERS        equ	924	;# 
  3449   0003BB                     TUCHAIN         equ	955	;# 
  3450   0003BC                     CWG1CLK         equ	956	;# 
  3451   0003BC                     CWG1CLKCON      equ	956	;# 
  3452   0003BD                     CWG1ISM         equ	957	;# 
  3453   0003BE                     CWG1DBR         equ	958	;# 
  3454   0003BF                     CWG1DBF         equ	959	;# 
  3455   0003C0                     CWG1CON0        equ	960	;# 
  3456   0003C1                     CWG1CON1        equ	961	;# 
  3457   0003C2                     CWG1AS0         equ	962	;# 
  3458   0003C3                     CWG1AS1         equ	963	;# 
  3459   0003C4                     CWG1STR         equ	964	;# 
  3460   0003C5                     CWG2CLK         equ	965	;# 
  3461   0003C5                     CWG2CLKCON      equ	965	;# 
  3462   0003C6                     CWG2ISM         equ	966	;# 
  3463   0003C7                     CWG2DBR         equ	967	;# 
  3464   0003C8                     CWG2DBF         equ	968	;# 
  3465   0003C9                     CWG2CON0        equ	969	;# 
  3466   0003CA                     CWG2CON1        equ	970	;# 
  3467   0003CB                     CWG2AS0         equ	971	;# 
  3468   0003CC                     CWG2AS1         equ	972	;# 
  3469   0003CD                     CWG2STR         equ	973	;# 
  3470   0003CE                     CWG3CLK         equ	974	;# 
  3471   0003CE                     CWG3CLKCON      equ	974	;# 
  3472   0003CF                     CWG3ISM         equ	975	;# 
  3473   0003D0                     CWG3DBR         equ	976	;# 
  3474   0003D1                     CWG3DBF         equ	977	;# 
  3475   0003D2                     CWG3CON0        equ	978	;# 
  3476   0003D3                     CWG3CON1        equ	979	;# 
  3477   0003D4                     CWG3AS0         equ	980	;# 
  3478   0003D5                     CWG3AS1         equ	981	;# 
  3479   0003D6                     CWG3STR         equ	982	;# 
  3480   0003D7                     FVRCON          equ	983	;# 
  3481   0003D8                     ADCPCON         equ	984	;# 
  3482   0003D8                     ADCP            equ	984	;# 
  3483   0003D9                     ADLTH           equ	985	;# 
  3484   0003D9                     ADLTHL          equ	985	;# 
  3485   0003DA                     ADLTHH          equ	986	;# 
  3486   0003DB                     ADUTH           equ	987	;# 
  3487   0003DB                     ADUTHL          equ	987	;# 
  3488   0003DC                     ADUTHH          equ	988	;# 
  3489   0003DD                     ADERR           equ	989	;# 
  3490   0003DD                     ADERRL          equ	989	;# 
  3491   0003DE                     ADERRH          equ	990	;# 
  3492   0003DF                     ADSTPT          equ	991	;# 
  3493   0003DF                     ADSTPTL         equ	991	;# 
  3494   0003E0                     ADSTPTH         equ	992	;# 
  3495   0003E1                     ADFLTR          equ	993	;# 
  3496   0003E1                     ADFLTRL         equ	993	;# 
  3497   0003E2                     ADFLTRH         equ	994	;# 
  3498   0003E3                     ADACC           equ	995	;# 
  3499   0003E3                     ADACCL          equ	995	;# 
  3500   0003E4                     ADACCH          equ	996	;# 
  3501   0003E5                     ADACCU          equ	997	;# 
  3502   0003E6                     ADCNT           equ	998	;# 
  3503   0003E7                     ADRPT           equ	999	;# 
  3504   0003E8                     ADPREV          equ	1000	;# 
  3505   0003E8                     ADPREVL         equ	1000	;# 
  3506   0003E9                     ADPREVH         equ	1001	;# 
  3507   0003EA                     ADRES           equ	1002	;# 
  3508   0003EA                     ADRESL          equ	1002	;# 
  3509   0003EB                     ADRESH          equ	1003	;# 
  3510   0003EC                     ADPCH           equ	1004	;# 
  3511   0003EE                     ADACQ           equ	1006	;# 
  3512   0003EE                     ADACQL          equ	1006	;# 
  3513   0003EF                     ADACQH          equ	1007	;# 
  3514   0003F0                     ADCAP           equ	1008	;# 
  3515   0003F1                     ADPRE           equ	1009	;# 
  3516   0003F1                     ADPREL          equ	1009	;# 
  3517   0003F2                     ADPREH          equ	1010	;# 
  3518   0003F3                     ADCON0          equ	1011	;# 
  3519   0003F4                     ADCON1          equ	1012	;# 
  3520   0003F5                     ADCON2          equ	1013	;# 
  3521   0003F6                     ADCON3          equ	1014	;# 
  3522   0003F7                     ADSTAT          equ	1015	;# 
  3523   0003F8                     ADREF           equ	1016	;# 
  3524   0003F9                     ADACT           equ	1017	;# 
  3525   0003FA                     ADCLK           equ	1018	;# 
  3526   0003FB                     ADCTX           equ	1019	;# 
  3527   0003FC                     ADCSEL1         equ	1020	;# 
  3528   0003FD                     ADCSEL2         equ	1021	;# 
  3529   0003FE                     ADCSEL3         equ	1022	;# 
  3530   0003FF                     ADCSEL4         equ	1023	;# 
  3531   000400                     ANSELA          equ	1024	;# 
  3532   000401                     WPUA            equ	1025	;# 
  3533   000402                     ODCONA          equ	1026	;# 
  3534   000403                     SLRCONA         equ	1027	;# 
  3535   000404                     INLVLA          equ	1028	;# 
  3536   000405                     IOCAP           equ	1029	;# 
  3537   000406                     IOCAN           equ	1030	;# 
  3538   000407                     IOCAF           equ	1031	;# 
  3539   000408                     ANSELB          equ	1032	;# 
  3540   000409                     WPUB            equ	1033	;# 
  3541   00040A                     ODCONB          equ	1034	;# 
  3542   00040B                     SLRCONB         equ	1035	;# 
  3543   00040C                     INLVLB          equ	1036	;# 
  3544   00040D                     IOCBP           equ	1037	;# 
  3545   00040E                     IOCBN           equ	1038	;# 
  3546   00040F                     IOCBF           equ	1039	;# 
  3547   000410                     ANSELC          equ	1040	;# 
  3548   000411                     WPUC            equ	1041	;# 
  3549   000412                     ODCONC          equ	1042	;# 
  3550   000413                     SLRCONC         equ	1043	;# 
  3551   000414                     INLVLC          equ	1044	;# 
  3552   000415                     IOCCP           equ	1045	;# 
  3553   000416                     IOCCN           equ	1046	;# 
  3554   000417                     IOCCF           equ	1047	;# 
  3555   000421                     WPUE            equ	1057	;# 
  3556   000424                     INLVLE          equ	1060	;# 
  3557   000425                     IOCEP           equ	1061	;# 
  3558   000426                     IOCEN           equ	1062	;# 
  3559   000427                     IOCEF           equ	1063	;# 
  3560   000440                     NCO1ACC         equ	1088	;# 
  3561   000440                     NCO1ACCL        equ	1088	;# 
  3562   000441                     NCO1ACCH        equ	1089	;# 
  3563   000442                     NCO1ACCU        equ	1090	;# 
  3564   000443                     NCO1INC         equ	1091	;# 
  3565   000443                     NCO1INCL        equ	1091	;# 
  3566   000444                     NCO1INCH        equ	1092	;# 
  3567   000445                     NCO1INCU        equ	1093	;# 
  3568   000446                     NCO1CON         equ	1094	;# 
  3569   000447                     NCO1CLK         equ	1095	;# 
  3570   000448                     NCO2ACC         equ	1096	;# 
  3571   000448                     NCO2ACCL        equ	1096	;# 
  3572   000449                     NCO2ACCH        equ	1097	;# 
  3573   00044A                     NCO2ACCU        equ	1098	;# 
  3574   00044B                     NCO2INC         equ	1099	;# 
  3575   00044B                     NCO2INCL        equ	1099	;# 
  3576   00044C                     NCO2INCH        equ	1100	;# 
  3577   00044D                     NCO2INCU        equ	1101	;# 
  3578   00044E                     NCO2CON         equ	1102	;# 
  3579   00044F                     NCO2CLK         equ	1103	;# 
  3580   000450                     NCO3ACC         equ	1104	;# 
  3581   000450                     NCO3ACCL        equ	1104	;# 
  3582   000451                     NCO3ACCH        equ	1105	;# 
  3583   000452                     NCO3ACCU        equ	1106	;# 
  3584   000453                     NCO3INC         equ	1107	;# 
  3585   000453                     NCO3INCL        equ	1107	;# 
  3586   000454                     NCO3INCH        equ	1108	;# 
  3587   000455                     NCO3INCU        equ	1109	;# 
  3588   000456                     NCO3CON         equ	1110	;# 
  3589   000457                     NCO3CLK         equ	1111	;# 
  3590   000458                     FSCMCON         equ	1112	;# 
  3591   000459                     IVTLOCK         equ	1113	;# 
  3592   00045A                     IVTAD           equ	1114	;# 
  3593   00045A                     IVTADL          equ	1114	;# 
  3594   00045B                     IVTADH          equ	1115	;# 
  3595   00045C                     IVTADU          equ	1116	;# 
  3596   00045D                     IVTBASE         equ	1117	;# 
  3597   00045D                     IVTBASEL        equ	1117	;# 
  3598   00045E                     IVTBASEH        equ	1118	;# 
  3599   00045F                     IVTBASEU        equ	1119	;# 
  3600   000460                     PWM1ERS         equ	1120	;# 
  3601   000461                     PWM1CLK         equ	1121	;# 
  3602   000462                     PWM1LDS         equ	1122	;# 
  3603   000463                     PWM1PR          equ	1123	;# 
  3604   000463                     PWM1PRL         equ	1123	;# 
  3605   000464                     PWM1PRH         equ	1124	;# 
  3606   000465                     PWM1CPRE        equ	1125	;# 
  3607   000466                     PWM1PIPOS       equ	1126	;# 
  3608   000467                     PWM1GIR         equ	1127	;# 
  3609   000468                     PWM1GIE         equ	1128	;# 
  3610   000469                     PWM1CON         equ	1129	;# 
  3611   00046A                     PWM1S1CFG       equ	1130	;# 
  3612   00046B                     PWM1S1P1        equ	1131	;# 
  3613   00046B                     PWM1S1P1L       equ	1131	;# 
  3614   00046C                     PWM1S1P1H       equ	1132	;# 
  3615   00046D                     PWM1S1P2        equ	1133	;# 
  3616   00046D                     PWM1S1P2L       equ	1133	;# 
  3617   00046E                     PWM1S1P2H       equ	1134	;# 
  3618   00046F                     PWM2ERS         equ	1135	;# 
  3619   000470                     PWM2CLK         equ	1136	;# 
  3620   000471                     PWM2LDS         equ	1137	;# 
  3621   000472                     PWM2PR          equ	1138	;# 
  3622   000472                     PWM2PRL         equ	1138	;# 
  3623   000473                     PWM2PRH         equ	1139	;# 
  3624   000474                     PWM2CPRE        equ	1140	;# 
  3625   000475                     PWM2PIPOS       equ	1141	;# 
  3626   000476                     PWM2GIR         equ	1142	;# 
  3627   000477                     PWM2GIE         equ	1143	;# 
  3628   000478                     PWM2CON         equ	1144	;# 
  3629   000479                     PWM2S1CFG       equ	1145	;# 
  3630   00047A                     PWM2S1P1        equ	1146	;# 
  3631   00047A                     PWM2S1P1L       equ	1146	;# 
  3632   00047B                     PWM2S1P1H       equ	1147	;# 
  3633   00047C                     PWM2S1P2        equ	1148	;# 
  3634   00047C                     PWM2S1P2L       equ	1148	;# 
  3635   00047D                     PWM2S1P2H       equ	1149	;# 
  3636   00047E                     PWM3ERS         equ	1150	;# 
  3637   00047F                     PWM3CLK         equ	1151	;# 
  3638   000480                     PWM3LDS         equ	1152	;# 
  3639   000481                     PWM3PR          equ	1153	;# 
  3640   000481                     PWM3PRL         equ	1153	;# 
  3641   000482                     PWM3PRH         equ	1154	;# 
  3642   000483                     PWM3CPRE        equ	1155	;# 
  3643   000484                     PWM3PIPOS       equ	1156	;# 
  3644   000485                     PWM3GIR         equ	1157	;# 
  3645   000486                     PWM3GIE         equ	1158	;# 
  3646   000487                     PWM3CON         equ	1159	;# 
  3647   000488                     PWM3S1CFG       equ	1160	;# 
  3648   000489                     PWM3S1P1        equ	1161	;# 
  3649   000489                     PWM3S1P1L       equ	1161	;# 
  3650   00048A                     PWM3S1P1H       equ	1162	;# 
  3651   00048B                     PWM3S1P2        equ	1163	;# 
  3652   00048B                     PWM3S1P2L       equ	1163	;# 
  3653   00048C                     PWM3S1P2H       equ	1164	;# 
  3654   00048D                     PWM4ERS         equ	1165	;# 
  3655   00048E                     PWM4CLK         equ	1166	;# 
  3656   00048F                     PWM4LDS         equ	1167	;# 
  3657   000490                     PWM4PR          equ	1168	;# 
  3658   000490                     PWM4PRL         equ	1168	;# 
  3659   000491                     PWM4PRH         equ	1169	;# 
  3660   000492                     PWM4CPRE        equ	1170	;# 
  3661   000493                     PWM4PIPOS       equ	1171	;# 
  3662   000494                     PWM4GIR         equ	1172	;# 
  3663   000495                     PWM4GIE         equ	1173	;# 
  3664   000496                     PWM4CON         equ	1174	;# 
  3665   000497                     PWM4S1CFG       equ	1175	;# 
  3666   000498                     PWM4S1P1        equ	1176	;# 
  3667   000498                     PWM4S1P1L       equ	1176	;# 
  3668   000499                     PWM4S1P1H       equ	1177	;# 
  3669   00049A                     PWM4S1P2        equ	1178	;# 
  3670   00049A                     PWM4S1P2L       equ	1178	;# 
  3671   00049B                     PWM4S1P2H       equ	1179	;# 
  3672   00049C                     PWMLOAD         equ	1180	;# 
  3673   00049D                     PWMEN           equ	1181	;# 
  3674   00049E                     PIE0            equ	1182	;# 
  3675   00049F                     PIE1            equ	1183	;# 
  3676   0004A0                     PIE2            equ	1184	;# 
  3677   0004A1                     PIE3            equ	1185	;# 
  3678   0004A2                     PIE4            equ	1186	;# 
  3679   0004A3                     PIE5            equ	1187	;# 
  3680   0004A4                     PIE6            equ	1188	;# 
  3681   0004A5                     PIE7            equ	1189	;# 
  3682   0004A6                     PIE8            equ	1190	;# 
  3683   0004A7                     PIE9            equ	1191	;# 
  3684   0004A8                     PIE10           equ	1192	;# 
  3685   0004A9                     PIE11           equ	1193	;# 
  3686   0004AA                     PIE12           equ	1194	;# 
  3687   0004AB                     PIE13           equ	1195	;# 
  3688   0004AC                     PIE14           equ	1196	;# 
  3689   0004AD                     PIE15           equ	1197	;# 
  3690   0004AE                     PIR0            equ	1198	;# 
  3691   0004AF                     PIR1            equ	1199	;# 
  3692   0004B0                     PIR2            equ	1200	;# 
  3693   0004B1                     PIR3            equ	1201	;# 
  3694   0004B2                     PIR4            equ	1202	;# 
  3695   0004B3                     PIR5            equ	1203	;# 
  3696   0004B4                     PIR6            equ	1204	;# 
  3697   0004B5                     PIR7            equ	1205	;# 
  3698   0004B6                     PIR8            equ	1206	;# 
  3699   0004B7                     PIR9            equ	1207	;# 
  3700   0004B8                     PIR10           equ	1208	;# 
  3701   0004B9                     PIR11           equ	1209	;# 
  3702   0004BA                     PIR12           equ	1210	;# 
  3703   0004BB                     PIR13           equ	1211	;# 
  3704   0004BC                     PIR14           equ	1212	;# 
  3705   0004BD                     PIR15           equ	1213	;# 
  3706   0004BE                     LATA            equ	1214	;# 
  3707   0004BF                     LATB            equ	1215	;# 
  3708   0004C0                     LATC            equ	1216	;# 
  3709   0004C6                     TRISA           equ	1222	;# 
  3710   0004C7                     TRISB           equ	1223	;# 
  3711   0004C8                     TRISC           equ	1224	;# 
  3712   0004CA                     TRISE           equ	1226	;# 
  3713   0004CE                     PORTA           equ	1230	;# 
  3714   0004CF                     PORTB           equ	1231	;# 
  3715   0004D0                     PORTC           equ	1232	;# 
  3716   0004D2                     PORTE           equ	1234	;# 
  3717   0004D6                     INTCON0         equ	1238	;# 
  3718   0004D7                     INTCON1         equ	1239	;# 
  3719   0004D8                     STATUS          equ	1240	;# 
  3720   0004D9                     FSR2            equ	1241	;# 
  3721   0004D9                     FSR2L           equ	1241	;# 
  3722   0004DA                     FSR2H           equ	1242	;# 
  3723   0004DB                     PLUSW2          equ	1243	;# 
  3724   0004DC                     PREINC2         equ	1244	;# 
  3725   0004DD                     POSTDEC2        equ	1245	;# 
  3726   0004DE                     POSTINC2        equ	1246	;# 
  3727   0004DF                     INDF2           equ	1247	;# 
  3728   0004E0                     BSR             equ	1248	;# 
  3729   0004E1                     FSR1            equ	1249	;# 
  3730   0004E1                     FSR1L           equ	1249	;# 
  3731   0004E2                     FSR1H           equ	1250	;# 
  3732   0004E3                     PLUSW1          equ	1251	;# 
  3733   0004E4                     PREINC1         equ	1252	;# 
  3734   0004E5                     POSTDEC1        equ	1253	;# 
  3735   0004E6                     POSTINC1        equ	1254	;# 
  3736   0004E7                     INDF1           equ	1255	;# 
  3737   0004E8                     WREG            equ	1256	;# 
  3738   0004E9                     FSR0            equ	1257	;# 
  3739   0004E9                     FSR0L           equ	1257	;# 
  3740   0004EA                     FSR0H           equ	1258	;# 
  3741   0004EB                     PLUSW0          equ	1259	;# 
  3742   0004EC                     PREINC0         equ	1260	;# 
  3743   0004ED                     POSTDEC0        equ	1261	;# 
  3744   0004EE                     POSTINC0        equ	1262	;# 
  3745   0004EF                     INDF0           equ	1263	;# 
  3746   0004F0                     PCON0           equ	1264	;# 
  3747   0004F1                     PCON1           equ	1265	;# 
  3748   0004F2                     CPUDOZE         equ	1266	;# 
  3749   0004F3                     PROD            equ	1267	;# 
  3750   0004F3                     PRODL           equ	1267	;# 
  3751   0004F4                     PRODH           equ	1268	;# 
  3752   0004F5                     TABLAT          equ	1269	;# 
  3753   0004F6                     TBLPTR          equ	1270	;# 
  3754   0004F6                     TBLPTRL         equ	1270	;# 
  3755   0004F7                     TBLPTRH         equ	1271	;# 
  3756   0004F8                     TBLPTRU         equ	1272	;# 
  3757   0004F9                     PCLAT           equ	1273	;# 
  3758   0004F9                     PCL             equ	1273	;# 
  3759   0004FA                     PCLATH          equ	1274	;# 
  3760   0004FB                     PCLATU          equ	1275	;# 
  3761   0004FC                     STKPTR          equ	1276	;# 
  3762   0004FD                     TOS             equ	1277	;# 
  3763   0004FD                     TOSL            equ	1277	;# 
  3764   0004FE                     TOSH            equ	1278	;# 
  3765   0004FF                     TOSU            equ	1279	;# 
  3766   000038                     BOOTREG         equ	56	;# 
  3767   000039                     CLKRCON         equ	57	;# 
  3768   00003A                     CLKRCLK         equ	58	;# 
  3769   000040                     NVMCON0         equ	64	;# 
  3770   000041                     NVMCON1         equ	65	;# 
  3771   000042                     NVMLOCK         equ	66	;# 
  3772   000043                     NVMADR          equ	67	;# 
  3773   000043                     NVMADRL         equ	67	;# 
  3774   000044                     NVMADRH         equ	68	;# 
  3775   000045                     NVMADRU         equ	69	;# 
  3776   000046                     NVMDAT          equ	70	;# 
  3777   000046                     NVMDATL         equ	70	;# 
  3778   000047                     NVMDATH         equ	71	;# 
  3779   000048                     VREGCON         equ	72	;# 
  3780   000049                     BORCON          equ	73	;# 
  3781   00004A                     HLVDCON0        equ	74	;# 
  3782   00004B                     HLVDCON1        equ	75	;# 
  3783   00004C                     ZCDCON          equ	76	;# 
  3784   000060                     PMD0            equ	96	;# 
  3785   000061                     PMD1            equ	97	;# 
  3786   000062                     PMD2            equ	98	;# 
  3787   000063                     PMD3            equ	99	;# 
  3788   000064                     PMD4            equ	100	;# 
  3789   000065                     PMD5            equ	101	;# 
  3790   000066                     PMD6            equ	102	;# 
  3791   000067                     PMD7            equ	103	;# 
  3792   000068                     PMD8            equ	104	;# 
  3793   00006A                     MD1CON0         equ	106	;# 
  3794   00006B                     MD1CON1         equ	107	;# 
  3795   00006C                     MD1SRC          equ	108	;# 
  3796   00006D                     MD1CARL         equ	109	;# 
  3797   00006E                     MD1CARH         equ	110	;# 
  3798   00006F                     CMOUT           equ	111	;# 
  3799   000070                     CM1CON0         equ	112	;# 
  3800   000071                     CM1CON1         equ	113	;# 
  3801   000072                     CM1NCH          equ	114	;# 
  3802   000073                     CM1PCH          equ	115	;# 
  3803   000074                     CM2CON0         equ	116	;# 
  3804   000075                     CM2CON1         equ	117	;# 
  3805   000076                     CM2NCH          equ	118	;# 
  3806   000077                     CM2PCH          equ	119	;# 
  3807   000078                     WDTCON0         equ	120	;# 
  3808   000079                     WDTCON1         equ	121	;# 
  3809   00007A                     WDTPSL          equ	122	;# 
  3810   00007B                     WDTPSH          equ	123	;# 
  3811   00007C                     WDTTMR          equ	124	;# 
  3812   00007D                     DAC1DAT         equ	125	;# 
  3813   00007D                     DAC1DATL        equ	125	;# 
  3814   00007F                     DAC1CON         equ	127	;# 
  3815   000080                     SPI1RXB         equ	128	;# 
  3816   000081                     SPI1TXB         equ	129	;# 
  3817   000082                     SPI1TCNT        equ	130	;# 
  3818   000082                     SPI1TCNTL       equ	130	;# 
  3819   000083                     SPI1TCNTH       equ	131	;# 
  3820   000084                     SPI1CON0        equ	132	;# 
  3821   000085                     SPI1CON1        equ	133	;# 
  3822   000086                     SPI1CON2        equ	134	;# 
  3823   000087                     SPI1STATUS      equ	135	;# 
  3824   000088                     SPI1TWIDTH      equ	136	;# 
  3825   000089                     SPI1BAUD        equ	137	;# 
  3826   00008A                     SPI1INTF        equ	138	;# 
  3827   00008B                     SPI1INTE        equ	139	;# 
  3828   00008C                     SPI1CLK         equ	140	;# 
  3829   00008D                     SPI2RXB         equ	141	;# 
  3830   00008E                     SPI2TXB         equ	142	;# 
  3831   00008F                     SPI2TCNT        equ	143	;# 
  3832   00008F                     SPI2TCNTL       equ	143	;# 
  3833   000090                     SPI2TCNTH       equ	144	;# 
  3834   000091                     SPI2CON0        equ	145	;# 
  3835   000092                     SPI2CON1        equ	146	;# 
  3836   000093                     SPI2CON2        equ	147	;# 
  3837   000094                     SPI2STATUS      equ	148	;# 
  3838   000095                     SPI2TWIDTH      equ	149	;# 
  3839   000096                     SPI2BAUD        equ	150	;# 
  3840   000097                     SPI2INTF        equ	151	;# 
  3841   000098                     SPI2INTE        equ	152	;# 
  3842   000099                     SPI2CLK         equ	153	;# 
  3843   0000AC                     ACTCON          equ	172	;# 
  3844   0000AD                     OSCCON1         equ	173	;# 
  3845   0000AE                     OSCCON2         equ	174	;# 
  3846   0000AF                     OSCCON3         equ	175	;# 
  3847   0000B0                     OSCTUNE         equ	176	;# 
  3848   0000B1                     OSCFRQ          equ	177	;# 
  3849   0000B1                     OSCFREQ         equ	177	;# 
  3850   0000B2                     OSCSTAT         equ	178	;# 
  3851   0000B2                     OSCSTAT1        equ	178	;# 
  3852   0000B3                     OSCEN           equ	179	;# 
  3853   0000B4                     PRLOCK          equ	180	;# 
  3854   0000B5                     SCANPR          equ	181	;# 
  3855   0000B6                     DMA1PR          equ	182	;# 
  3856   0000B7                     DMA2PR          equ	183	;# 
  3857   0000B8                     DMA3PR          equ	184	;# 
  3858   0000B9                     DMA4PR          equ	185	;# 
  3859   0000BA                     DMA5PR          equ	186	;# 
  3860   0000BB                     DMA6PR          equ	187	;# 
  3861   0000BC                     DMA7PR          equ	188	;# 
  3862   0000BD                     DMA8PR          equ	189	;# 
  3863   0000BE                     MAINPR          equ	190	;# 
  3864   0000BF                     ISRPR           equ	191	;# 
  3865   0000D4                     CLCDATA         equ	212	;# 
  3866   0000D5                     CLCSELECT       equ	213	;# 
  3867   0000D6                     CLCnCON         equ	214	;# 
  3868   0000D7                     CLCnPOL         equ	215	;# 
  3869   0000D8                     CLCnSEL0        equ	216	;# 
  3870   0000D9                     CLCnSEL1        equ	217	;# 
  3871   0000DA                     CLCnSEL2        equ	218	;# 
  3872   0000DB                     CLCnSEL3        equ	219	;# 
  3873   0000DC                     CLCnGLS0        equ	220	;# 
  3874   0000DD                     CLCnGLS1        equ	221	;# 
  3875   0000DE                     CLCnGLS2        equ	222	;# 
  3876   0000DF                     CLCnGLS3        equ	223	;# 
  3877   0000E8                     DMASELECT       equ	232	;# 
  3878   0000E9                     DMAnBUF         equ	233	;# 
  3879   0000EA                     DMAnDCNT        equ	234	;# 
  3880   0000EA                     DMAnDCNTL       equ	234	;# 
  3881   0000EB                     DMAnDCNTH       equ	235	;# 
  3882   0000EC                     DMAnDPTR        equ	236	;# 
  3883   0000EC                     DMAnDPTRL       equ	236	;# 
  3884   0000ED                     DMAnDPTRH       equ	237	;# 
  3885   0000EE                     DMAnDSZ         equ	238	;# 
  3886   0000EE                     DMAnDSZL        equ	238	;# 
  3887   0000EF                     DMAnDSZH        equ	239	;# 
  3888   0000F0                     DMAnDSA         equ	240	;# 
  3889   0000F0                     DMAnDSAL        equ	240	;# 
  3890   0000F1                     DMAnDSAH        equ	241	;# 
  3891   0000F2                     DMAnSCNT        equ	242	;# 
  3892   0000F2                     DMAnSCNTL       equ	242	;# 
  3893   0000F3                     DMAnSCNTH       equ	243	;# 
  3894   0000F4                     DMAnSPTR        equ	244	;# 
  3895   0000F4                     DMAnSPTRL       equ	244	;# 
  3896   0000F5                     DMAnSPTRH       equ	245	;# 
  3897   0000F6                     DMAnSPTRU       equ	246	;# 
  3898   0000F7                     DMAnSSZ         equ	247	;# 
  3899   0000F7                     DMAnSSZL        equ	247	;# 
  3900   0000F8                     DMAnSSZH        equ	248	;# 
  3901   0000F9                     DMAnSSA         equ	249	;# 
  3902   0000F9                     DMAnSSAL        equ	249	;# 
  3903   0000FA                     DMAnSSAH        equ	250	;# 
  3904   0000FB                     DMAnSSAU        equ	251	;# 
  3905   0000FC                     DMAnCON0        equ	252	;# 
  3906   0000FD                     DMAnCON1        equ	253	;# 
  3907   0000FE                     DMAnAIRQ        equ	254	;# 
  3908   0000FF                     DMAnSIRQ        equ	255	;# 
  3909   000100                     C1CONL          equ	256	;# 
  3910   000101                     C1CONH          equ	257	;# 
  3911   000102                     C1CONU          equ	258	;# 
  3912   000103                     C1CONT          equ	259	;# 
  3913   000104                     C1NBTCFGL       equ	260	;# 
  3914   000105                     C1NBTCFGH       equ	261	;# 
  3915   000106                     C1NBTCFGU       equ	262	;# 
  3916   000107                     C1NBTCFGT       equ	263	;# 
  3917   000108                     C1DBTCFGL       equ	264	;# 
  3918   000109                     C1DBTCFGH       equ	265	;# 
  3919   00010A                     C1DBTCFGU       equ	266	;# 
  3920   00010B                     C1DBTCFGT       equ	267	;# 
  3921   00010C                     C1TDCL          equ	268	;# 
  3922   00010D                     C1TDCH          equ	269	;# 
  3923   00010E                     C1TDCU          equ	270	;# 
  3924   000110                     C1TBC           equ	272	;# 
  3925   000110                     C1TBCL          equ	272	;# 
  3926   000111                     C1TBCH          equ	273	;# 
  3927   000112                     C1TBCU          equ	274	;# 
  3928   000113                     C1TBCT          equ	275	;# 
  3929   000114                     C1TSCONL        equ	276	;# 
  3930   000115                     C1TSCONH        equ	277	;# 
  3931   000116                     C1TSCONU        equ	278	;# 
  3932   000117                     C1TSCONT        equ	279	;# 
  3933   000118                     C1VECL          equ	280	;# 
  3934   000119                     C1VECH          equ	281	;# 
  3935   00011A                     C1VECU          equ	282	;# 
  3936   00011B                     C1VECT          equ	283	;# 
  3937   00011C                     C1INTL          equ	284	;# 
  3938   00011D                     C1INTH          equ	285	;# 
  3939   00011E                     C1INTU          equ	286	;# 
  3940   00011F                     C1INTT          equ	287	;# 
  3941   000120                     C1RXIF          equ	288	;# 
  3942   000120                     C1RXIFL         equ	288	;# 
  3943   000121                     C1RXIFH         equ	289	;# 
  3944   000122                     C1RXIFU         equ	290	;# 
  3945   000123                     C1RXIFT         equ	291	;# 
  3946   000124                     C1TXIF          equ	292	;# 
  3947   000124                     C1TXIFL         equ	292	;# 
  3948   000125                     C1TXIFH         equ	293	;# 
  3949   000126                     C1TXIFU         equ	294	;# 
  3950   000127                     C1TXIFT         equ	295	;# 
  3951   000128                     C1RXOVIF        equ	296	;# 
  3952   000128                     C1RXOVIFL       equ	296	;# 
  3953   000129                     C1RXOVIFH       equ	297	;# 
  3954   00012A                     C1RXOVIFU       equ	298	;# 
  3955   00012B                     C1RXOVIFT       equ	299	;# 
  3956   00012C                     C1TXATIF        equ	300	;# 
  3957   00012C                     C1TXATIFL       equ	300	;# 
  3958   00012D                     C1TXATIFH       equ	301	;# 
  3959   00012E                     C1TXATIFU       equ	302	;# 
  3960   00012F                     C1TXATIFT       equ	303	;# 
  3961   000130                     C1TXREQ         equ	304	;# 
  3962   000130                     C1TXREQL        equ	304	;# 
  3963   000131                     C1TXREQH        equ	305	;# 
  3964   000132                     C1TXREQU        equ	306	;# 
  3965   000133                     C1TXREQT        equ	307	;# 
  3966   000134                     C1TRECL         equ	308	;# 
  3967   000135                     C1TRECH         equ	309	;# 
  3968   000136                     C1TRECU         equ	310	;# 
  3969   000137                     C1TRECT         equ	311	;# 
  3970   000138                     C1BDIAG0L       equ	312	;# 
  3971   000139                     C1BDIAG0H       equ	313	;# 
  3972   00013C                     C1BDIAG1L       equ	316	;# 
  3973   00013D                     C1BDIAG1H       equ	317	;# 
  3974   00013E                     C1BDIAG1U       equ	318	;# 
  3975   00013F                     C1BDIAG1T       equ	319	;# 
  3976   000140                     C1TEFCONL       equ	320	;# 
  3977   000141                     C1TEFCONH       equ	321	;# 
  3978   000142                     C1TEFCONU       equ	322	;# 
  3979   000143                     C1TEFCONT       equ	323	;# 
  3980   000144                     C1TEFSTAL       equ	324	;# 
  3981   000145                     C1TEFSTAH       equ	325	;# 
  3982   000146                     C1TEFSTAU       equ	326	;# 
  3983   000147                     C1TEFSTAT       equ	327	;# 
  3984   000148                     C1TEFUA         equ	328	;# 
  3985   000148                     C1TEFUAL        equ	328	;# 
  3986   000149                     C1TEFUAH        equ	329	;# 
  3987   00014A                     C1TEFUAU        equ	330	;# 
  3988   00014B                     C1TEFUAT        equ	331	;# 
  3989   00014C                     C1FIFOBA        equ	332	;# 
  3990   00014C                     C1FIFOBAL       equ	332	;# 
  3991   00014D                     C1FIFOBAH       equ	333	;# 
  3992   00014E                     C1FIFOBAU       equ	334	;# 
  3993   00014F                     C1FIFOBAT       equ	335	;# 
  3994   000150                     C1TXQCONL       equ	336	;# 
  3995   000151                     C1TXQCONH       equ	337	;# 
  3996   000152                     C1TXQCONU       equ	338	;# 
  3997   000153                     C1TXQCONT       equ	339	;# 
  3998   000154                     C1TXQSTAL       equ	340	;# 
  3999   000155                     C1TXQSTAH       equ	341	;# 
  4000   000156                     C1TXQSTAU       equ	342	;# 
  4001   000157                     C1TXQSTAT       equ	343	;# 
  4002   000158                     C1TXQUA         equ	344	;# 
  4003   000158                     C1TXQUAL        equ	344	;# 
  4004   000159                     C1TXQUAH        equ	345	;# 
  4005   00015A                     C1TXQUAU        equ	346	;# 
  4006   00015B                     C1TXQUAT        equ	347	;# 
  4007   00015C                     C1FIFOCON1      equ	348	;# 
  4008   00015C                     C1FIFOCON1L     equ	348	;# 
  4009   00015D                     C1FIFOCON1H     equ	349	;# 
  4010   00015E                     C1FIFOCON1U     equ	350	;# 
  4011   00015F                     C1FIFOCON1T     equ	351	;# 
  4012   000160                     C1FIFOSTA1      equ	352	;# 
  4013   000160                     C1FIFOSTA1L     equ	352	;# 
  4014   000161                     C1FIFOSTA1H     equ	353	;# 
  4015   000162                     C1FIFOSTA1U     equ	354	;# 
  4016   000163                     C1FIFOSTA1T     equ	355	;# 
  4017   000164                     C1FIFOUA1       equ	356	;# 
  4018   000164                     C1FIFOUA1L      equ	356	;# 
  4019   000165                     C1FIFOUA1H      equ	357	;# 
  4020   000166                     C1FIFOUA1U      equ	358	;# 
  4021   000167                     C1FIFOUA1T      equ	359	;# 
  4022   000168                     C1FIFOCON2      equ	360	;# 
  4023   000168                     C1FIFOCON2L     equ	360	;# 
  4024   000169                     C1FIFOCON2H     equ	361	;# 
  4025   00016A                     C1FIFOCON2U     equ	362	;# 
  4026   00016B                     C1FIFOCON2T     equ	363	;# 
  4027   00016C                     C1FIFOSTA2      equ	364	;# 
  4028   00016C                     C1FIFOSTA2L     equ	364	;# 
  4029   00016D                     C1FIFOSTA2H     equ	365	;# 
  4030   00016E                     C1FIFOSTA2U     equ	366	;# 
  4031   00016F                     C1FIFOSTA2T     equ	367	;# 
  4032   000170                     C1FIFOUA2       equ	368	;# 
  4033   000170                     C1FIFOUA2L      equ	368	;# 
  4034   000171                     C1FIFOUA2H      equ	369	;# 
  4035   000172                     C1FIFOUA2U      equ	370	;# 
  4036   000173                     C1FIFOUA2T      equ	371	;# 
  4037   000174                     C1FIFOCON3      equ	372	;# 
  4038   000174                     C1FIFOCON3L     equ	372	;# 
  4039   000175                     C1FIFOCON3H     equ	373	;# 
  4040   000176                     C1FIFOCON3U     equ	374	;# 
  4041   000177                     C1FIFOCON3T     equ	375	;# 
  4042   000178                     C1FIFOSTA3      equ	376	;# 
  4043   000178                     C1FIFOSTA3L     equ	376	;# 
  4044   000179                     C1FIFOSTA3H     equ	377	;# 
  4045   00017A                     C1FIFOSTA3U     equ	378	;# 
  4046   00017B                     C1FIFOSTA3T     equ	379	;# 
  4047   00017C                     C1FIFOUA3       equ	380	;# 
  4048   00017C                     C1FIFOUA3L      equ	380	;# 
  4049   00017D                     C1FIFOUA3H      equ	381	;# 
  4050   00017E                     C1FIFOUA3U      equ	382	;# 
  4051   00017F                     C1FIFOUA3T      equ	383	;# 
  4052   000180                     C1FLTCON0L      equ	384	;# 
  4053   000181                     C1FLTCON0H      equ	385	;# 
  4054   000182                     C1FLTCON0U      equ	386	;# 
  4055   000183                     C1FLTCON0T      equ	387	;# 
  4056   000184                     C1FLTCON1L      equ	388	;# 
  4057   000185                     C1FLTCON1H      equ	389	;# 
  4058   000186                     C1FLTCON1U      equ	390	;# 
  4059   000187                     C1FLTCON1T      equ	391	;# 
  4060   000188                     C1FLTCON2L      equ	392	;# 
  4061   000189                     C1FLTCON2H      equ	393	;# 
  4062   00018A                     C1FLTCON2U      equ	394	;# 
  4063   00018B                     C1FLTCON2T      equ	395	;# 
  4064   00018C                     C1FLTOBJ0       equ	396	;# 
  4065   00018C                     C1FLTOBJ0L      equ	396	;# 
  4066   00018D                     C1FLTOBJ0H      equ	397	;# 
  4067   00018E                     C1FLTOBJ0U      equ	398	;# 
  4068   00018F                     C1FLTOBJ0T      equ	399	;# 
  4069   000190                     C1MASK0         equ	400	;# 
  4070   000190                     C1MASK0L        equ	400	;# 
  4071   000191                     C1MASK0H        equ	401	;# 
  4072   000192                     C1MASK0U        equ	402	;# 
  4073   000193                     C1MASK0T        equ	403	;# 
  4074   000194                     C1FLTOBJ1       equ	404	;# 
  4075   000194                     C1FLTOBJ1L      equ	404	;# 
  4076   000195                     C1FLTOBJ1H      equ	405	;# 
  4077   000196                     C1FLTOBJ1U      equ	406	;# 
  4078   000197                     C1FLTOBJ1T      equ	407	;# 
  4079   000198                     C1MASK1         equ	408	;# 
  4080   000198                     C1MASK1L        equ	408	;# 
  4081   000199                     C1MASK1H        equ	409	;# 
  4082   00019A                     C1MASK1U        equ	410	;# 
  4083   00019B                     C1MASK1T        equ	411	;# 
  4084   00019C                     C1FLTOBJ2       equ	412	;# 
  4085   00019C                     C1FLTOBJ2L      equ	412	;# 
  4086   00019D                     C1FLTOBJ2H      equ	413	;# 
  4087   00019E                     C1FLTOBJ2U      equ	414	;# 
  4088   00019F                     C1FLTOBJ2T      equ	415	;# 
  4089   0001A0                     C1MASK2         equ	416	;# 
  4090   0001A0                     C1MASK2L        equ	416	;# 
  4091   0001A1                     C1MASK2H        equ	417	;# 
  4092   0001A2                     C1MASK2U        equ	418	;# 
  4093   0001A3                     C1MASK2T        equ	419	;# 
  4094   0001A4                     C1FLTOBJ3       equ	420	;# 
  4095   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4096   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4097   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4098   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4099   0001A8                     C1MASK3         equ	424	;# 
  4100   0001A8                     C1MASK3L        equ	424	;# 
  4101   0001A9                     C1MASK3H        equ	425	;# 
  4102   0001AA                     C1MASK3U        equ	426	;# 
  4103   0001AB                     C1MASK3T        equ	427	;# 
  4104   0001AC                     C1FLTOBJ4       equ	428	;# 
  4105   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4106   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4107   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4108   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4109   0001B0                     C1MASK4         equ	432	;# 
  4110   0001B0                     C1MASK4L        equ	432	;# 
  4111   0001B1                     C1MASK4H        equ	433	;# 
  4112   0001B2                     C1MASK4U        equ	434	;# 
  4113   0001B3                     C1MASK4T        equ	435	;# 
  4114   0001B4                     C1FLTOBJ5       equ	436	;# 
  4115   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4116   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4117   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4118   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4119   0001B8                     C1MASK5         equ	440	;# 
  4120   0001B8                     C1MASK5L        equ	440	;# 
  4121   0001B9                     C1MASK5H        equ	441	;# 
  4122   0001BA                     C1MASK5U        equ	442	;# 
  4123   0001BB                     C1MASK5T        equ	443	;# 
  4124   0001BC                     C1FLTOBJ6       equ	444	;# 
  4125   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4126   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4127   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4128   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4129   0001C0                     C1MASK6         equ	448	;# 
  4130   0001C0                     C1MASK6L        equ	448	;# 
  4131   0001C1                     C1MASK6H        equ	449	;# 
  4132   0001C2                     C1MASK6U        equ	450	;# 
  4133   0001C3                     C1MASK6T        equ	451	;# 
  4134   0001C4                     C1FLTOBJ7       equ	452	;# 
  4135   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4136   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4137   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4138   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4139   0001C8                     C1MASK7         equ	456	;# 
  4140   0001C8                     C1MASK7L        equ	456	;# 
  4141   0001C9                     C1MASK7H        equ	457	;# 
  4142   0001CA                     C1MASK7U        equ	458	;# 
  4143   0001CB                     C1MASK7T        equ	459	;# 
  4144   0001CC                     C1FLTOBJ8       equ	460	;# 
  4145   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4146   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4147   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4148   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4149   0001D0                     C1MASK8         equ	464	;# 
  4150   0001D0                     C1MASK8L        equ	464	;# 
  4151   0001D1                     C1MASK8H        equ	465	;# 
  4152   0001D2                     C1MASK8U        equ	466	;# 
  4153   0001D3                     C1MASK8T        equ	467	;# 
  4154   0001D4                     C1FLTOBJ9       equ	468	;# 
  4155   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4156   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4157   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4158   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4159   0001D8                     C1MASK9         equ	472	;# 
  4160   0001D8                     C1MASK9L        equ	472	;# 
  4161   0001D9                     C1MASK9H        equ	473	;# 
  4162   0001DA                     C1MASK9U        equ	474	;# 
  4163   0001DB                     C1MASK9T        equ	475	;# 
  4164   0001DC                     C1FLTOBJ10      equ	476	;# 
  4165   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4166   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4167   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4168   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4169   0001E0                     C1MASK10        equ	480	;# 
  4170   0001E0                     C1MASK10L       equ	480	;# 
  4171   0001E1                     C1MASK10H       equ	481	;# 
  4172   0001E2                     C1MASK10U       equ	482	;# 
  4173   0001E3                     C1MASK10T       equ	483	;# 
  4174   0001E4                     C1FLTOBJ11      equ	484	;# 
  4175   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4176   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4177   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4178   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4179   0001E8                     C1MASK11        equ	488	;# 
  4180   0001E8                     C1MASK11L       equ	488	;# 
  4181   0001E9                     C1MASK11H       equ	489	;# 
  4182   0001EA                     C1MASK11U       equ	490	;# 
  4183   0001EB                     C1MASK11T       equ	491	;# 
  4184   000200                     PPSLOCK         equ	512	;# 
  4185   000201                     RA0PPS          equ	513	;# 
  4186   000202                     RA1PPS          equ	514	;# 
  4187   000203                     RA2PPS          equ	515	;# 
  4188   000204                     RA3PPS          equ	516	;# 
  4189   000205                     RA4PPS          equ	517	;# 
  4190   000206                     RA5PPS          equ	518	;# 
  4191   000207                     RA6PPS          equ	519	;# 
  4192   000208                     RA7PPS          equ	520	;# 
  4193   000209                     RB0PPS          equ	521	;# 
  4194   00020A                     RB1PPS          equ	522	;# 
  4195   00020B                     RB2PPS          equ	523	;# 
  4196   00020C                     RB3PPS          equ	524	;# 
  4197   00020D                     RB4PPS          equ	525	;# 
  4198   00020E                     RB5PPS          equ	526	;# 
  4199   00020F                     RB6PPS          equ	527	;# 
  4200   000210                     RB7PPS          equ	528	;# 
  4201   000211                     RC0PPS          equ	529	;# 
  4202   000212                     RC1PPS          equ	530	;# 
  4203   000213                     RC2PPS          equ	531	;# 
  4204   000214                     RC3PPS          equ	532	;# 
  4205   000215                     RC4PPS          equ	533	;# 
  4206   000216                     RC5PPS          equ	534	;# 
  4207   000217                     RC6PPS          equ	535	;# 
  4208   000218                     RC7PPS          equ	536	;# 
  4209   00023D                     CANRXPPS        equ	573	;# 
  4210   00023E                     INT0PPS         equ	574	;# 
  4211   00023F                     INT1PPS         equ	575	;# 
  4212   000240                     INT2PPS         equ	576	;# 
  4213   000241                     T0CKIPPS        equ	577	;# 
  4214   000242                     T1CKIPPS        equ	578	;# 
  4215   000243                     T1GPPS          equ	579	;# 
  4216   000244                     T3CKIPPS        equ	580	;# 
  4217   000245                     T3GPPS          equ	581	;# 
  4218   000246                     T5CKIPPS        equ	582	;# 
  4219   000247                     T5GPPS          equ	583	;# 
  4220   000248                     T2INPPS         equ	584	;# 
  4221   000249                     T4INPPS         equ	585	;# 
  4222   00024A                     T6INPPS         equ	586	;# 
  4223   00024B                     TUIN0PPS        equ	587	;# 
  4224   00024C                     TUIN1PPS        equ	588	;# 
  4225   00024F                     CCP1PPS         equ	591	;# 
  4226   000250                     CCP2PPS         equ	592	;# 
  4227   000251                     CCP3PPS         equ	593	;# 
  4228   000253                     PWM1ERSPPS      equ	595	;# 
  4229   000254                     PWM2ERSPPS      equ	596	;# 
  4230   000255                     PWM3ERSPPS      equ	597	;# 
  4231   000256                     PWM4ERSPPS      equ	598	;# 
  4232   000257                     PWMIN0PPS       equ	599	;# 
  4233   000258                     PWMIN1PPS       equ	600	;# 
  4234   000259                     SMT1WINPPS      equ	601	;# 
  4235   00025A                     SMT1SIGPPS      equ	602	;# 
  4236   00025B                     CWG1PPS         equ	603	;# 
  4237   00025B                     CWG1INPPS       equ	603	;# 
  4238   00025C                     CWG2PPS         equ	604	;# 
  4239   00025C                     CWG2INPPS       equ	604	;# 
  4240   00025D                     CWG3PPS         equ	605	;# 
  4241   00025D                     CWG3INPPS       equ	605	;# 
  4242   00025E                     MD1CARLPPS      equ	606	;# 
  4243   00025E                     MDCARLPPS       equ	606	;# 
  4244   00025F                     MD1CARHPPS      equ	607	;# 
  4245   00025F                     MDCARHPPS       equ	607	;# 
  4246   000260                     MD1SRCPPS       equ	608	;# 
  4247   000260                     MDSRCPPS        equ	608	;# 
  4248   000261                     CLCIN0PPS       equ	609	;# 
  4249   000262                     CLCIN1PPS       equ	610	;# 
  4250   000263                     CLCIN2PPS       equ	611	;# 
  4251   000264                     CLCIN3PPS       equ	612	;# 
  4252   000265                     CLCIN4PPS       equ	613	;# 
  4253   000266                     CLCIN5PPS       equ	614	;# 
  4254   000267                     CLCIN6PPS       equ	615	;# 
  4255   000268                     CLCIN7PPS       equ	616	;# 
  4256   000269                     ADACTPPS        equ	617	;# 
  4257   00026A                     SPI1SCKPPS      equ	618	;# 
  4258   00026B                     SPI1SDIPPS      equ	619	;# 
  4259   00026C                     SPI1SSPPS       equ	620	;# 
  4260   00026D                     SPI2SCKPPS      equ	621	;# 
  4261   00026E                     SPI2SDIPPS      equ	622	;# 
  4262   00026F                     SPI2SSPPS       equ	623	;# 
  4263   000270                     I2C1SDAPPS      equ	624	;# 
  4264   000271                     I2C1SCLPPS      equ	625	;# 
  4265   000272                     U1RXPPS         equ	626	;# 
  4266   000273                     U1CTSPPS        equ	627	;# 
  4267   000274                     U2RXPPS         equ	628	;# 
  4268   000275                     U2CTSPPS        equ	629	;# 
  4269   000276                     U3RXPPS         equ	630	;# 
  4270   000277                     U3CTSPPS        equ	631	;# 
  4271   000278                     U4RXPPS         equ	632	;# 
  4272   000279                     U4CTSPPS        equ	633	;# 
  4273   00027A                     U5RXPPS         equ	634	;# 
  4274   00027B                     U5CTSPPS        equ	635	;# 
  4275   000286                     RC4I2C          equ	646	;# 
  4276   000287                     RC3I2C          equ	647	;# 
  4277   000288                     RB2I2C          equ	648	;# 
  4278   000289                     RB1I2C          equ	649	;# 
  4279   00028A                     I2C1RXB         equ	650	;# 
  4280   00028B                     I2C1TXB         equ	651	;# 
  4281   00028C                     I2C1CNTL        equ	652	;# 
  4282   00028D                     I2C1CNTH        equ	653	;# 
  4283   00028E                     I2C1ADB0        equ	654	;# 
  4284   00028F                     I2C1ADB1        equ	655	;# 
  4285   000290                     I2C1ADR0        equ	656	;# 
  4286   000291                     I2C1ADR1        equ	657	;# 
  4287   000292                     I2C1ADR2        equ	658	;# 
  4288   000293                     I2C1ADR3        equ	659	;# 
  4289   000294                     I2C1CON0        equ	660	;# 
  4290   000295                     I2C1CON1        equ	661	;# 
  4291   000296                     I2C1CON2        equ	662	;# 
  4292   000297                     I2C1ERR         equ	663	;# 
  4293   000298                     I2C1STAT0       equ	664	;# 
  4294   000299                     I2C1STAT1       equ	665	;# 
  4295   00029A                     I2C1PIR         equ	666	;# 
  4296   00029B                     I2C1PIE         equ	667	;# 
  4297   00029C                     I2C1BTO         equ	668	;# 
  4298   00029D                     I2C1BAUD        equ	669	;# 
  4299   00029E                     I2C1CLK         equ	670	;# 
  4300   00029F                     I2C1BTOC        equ	671	;# 
  4301   0002A1                     U1RXB           equ	673	;# 
  4302   0002A1                     U1RXBL          equ	673	;# 
  4303   0002A2                     U1RXCHK         equ	674	;# 
  4304   0002A3                     U1TXB           equ	675	;# 
  4305   0002A3                     U1TXBL          equ	675	;# 
  4306   0002A4                     U1TXCHK         equ	676	;# 
  4307   0002A5                     U1P1            equ	677	;# 
  4308   0002A5                     U1P1L           equ	677	;# 
  4309   0002A6                     U1P1H           equ	678	;# 
  4310   0002A7                     U1P2            equ	679	;# 
  4311   0002A7                     U1P2L           equ	679	;# 
  4312   0002A8                     U1P2H           equ	680	;# 
  4313   0002A9                     U1P3            equ	681	;# 
  4314   0002A9                     U1P3L           equ	681	;# 
  4315   0002AA                     U1P3H           equ	682	;# 
  4316   0002AB                     U1CON0          equ	683	;# 
  4317   0002AC                     U1CON1          equ	684	;# 
  4318   0002AD                     U1CON2          equ	685	;# 
  4319   0002AE                     U1BRG           equ	686	;# 
  4320   0002AE                     U1BRGL          equ	686	;# 
  4321   0002AF                     U1BRGH          equ	687	;# 
  4322   0002B0                     U1FIFO          equ	688	;# 
  4323   0002B1                     U1UIR           equ	689	;# 
  4324   0002B2                     U1ERRIR         equ	690	;# 
  4325   0002B3                     U1ERRIE         equ	691	;# 
  4326   0002B4                     U2RXB           equ	692	;# 
  4327   0002B4                     U2RXBL          equ	692	;# 
  4328   0002B5                     U2RXCHK         equ	693	;# 
  4329   0002B6                     U2TXB           equ	694	;# 
  4330   0002B6                     U2TXBL          equ	694	;# 
  4331   0002B7                     U2TXCHK         equ	695	;# 
  4332   0002B8                     U2P1            equ	696	;# 
  4333   0002B8                     U2P1L           equ	696	;# 
  4334   0002B9                     U2P1H           equ	697	;# 
  4335   0002BA                     U2P2            equ	698	;# 
  4336   0002BA                     U2P2L           equ	698	;# 
  4337   0002BB                     U2P2H           equ	699	;# 
  4338   0002BC                     U2P3            equ	700	;# 
  4339   0002BC                     U2P3L           equ	700	;# 
  4340   0002BD                     U2P3H           equ	701	;# 
  4341   0002BE                     U2CON0          equ	702	;# 
  4342   0002BF                     U2CON1          equ	703	;# 
  4343   0002C0                     U2CON2          equ	704	;# 
  4344   0002C1                     U2BRG           equ	705	;# 
  4345   0002C1                     U2BRGL          equ	705	;# 
  4346   0002C2                     U2BRGH          equ	706	;# 
  4347   0002C3                     U2FIFO          equ	707	;# 
  4348   0002C4                     U2UIR           equ	708	;# 
  4349   0002C5                     U2ERRIR         equ	709	;# 
  4350   0002C6                     U2ERRIE         equ	710	;# 
  4351   0002C7                     U3RXB           equ	711	;# 
  4352   0002C7                     U3RXBL          equ	711	;# 
  4353   0002C9                     U3TXB           equ	713	;# 
  4354   0002C9                     U3TXBL          equ	713	;# 
  4355   0002CB                     U3P1            equ	715	;# 
  4356   0002CB                     U3P1L           equ	715	;# 
  4357   0002CD                     U3P2            equ	717	;# 
  4358   0002CD                     U3P2L           equ	717	;# 
  4359   0002CF                     U3P3            equ	719	;# 
  4360   0002CF                     U3P3L           equ	719	;# 
  4361   0002D1                     U3CON0          equ	721	;# 
  4362   0002D2                     U3CON1          equ	722	;# 
  4363   0002D3                     U3CON2          equ	723	;# 
  4364   0002D4                     U3BRG           equ	724	;# 
  4365   0002D4                     U3BRGL          equ	724	;# 
  4366   0002D5                     U3BRGH          equ	725	;# 
  4367   0002D6                     U3FIFO          equ	726	;# 
  4368   0002D7                     U3UIR           equ	727	;# 
  4369   0002D8                     U3ERRIR         equ	728	;# 
  4370   0002D9                     U3ERRIE         equ	729	;# 
  4371   0002DA                     U4RXB           equ	730	;# 
  4372   0002DA                     U4RXBL          equ	730	;# 
  4373   0002DC                     U4TXB           equ	732	;# 
  4374   0002DC                     U4TXBL          equ	732	;# 
  4375   0002DE                     U4P1            equ	734	;# 
  4376   0002DE                     U4P1L           equ	734	;# 
  4377   0002E0                     U4P2            equ	736	;# 
  4378   0002E0                     U4P2L           equ	736	;# 
  4379   0002E2                     U4P3            equ	738	;# 
  4380   0002E2                     U4P3L           equ	738	;# 
  4381   0002E4                     U4CON0          equ	740	;# 
  4382   0002E5                     U4CON1          equ	741	;# 
  4383   0002E6                     U4CON2          equ	742	;# 
  4384   0002E7                     U4BRG           equ	743	;# 
  4385   0002E7                     U4BRGL          equ	743	;# 
  4386   0002E8                     U4BRGH          equ	744	;# 
  4387   0002E9                     U4FIFO          equ	745	;# 
  4388   0002EA                     U4UIR           equ	746	;# 
  4389   0002EB                     U4ERRIR         equ	747	;# 
  4390   0002EC                     U4ERRIE         equ	748	;# 
  4391   0002ED                     U5RXB           equ	749	;# 
  4392   0002ED                     U5RXBL          equ	749	;# 
  4393   0002EF                     U5TXB           equ	751	;# 
  4394   0002EF                     U5TXBL          equ	751	;# 
  4395   0002F1                     U5P1            equ	753	;# 
  4396   0002F1                     U5P1L           equ	753	;# 
  4397   0002F3                     U5P2            equ	755	;# 
  4398   0002F3                     U5P2L           equ	755	;# 
  4399   0002F5                     U5P3            equ	757	;# 
  4400   0002F5                     U5P3L           equ	757	;# 
  4401   0002F7                     U5CON0          equ	759	;# 
  4402   0002F8                     U5CON1          equ	760	;# 
  4403   0002F9                     U5CON2          equ	761	;# 
  4404   0002FA                     U5BRG           equ	762	;# 
  4405   0002FA                     U5BRGL          equ	762	;# 
  4406   0002FB                     U5BRGH          equ	763	;# 
  4407   0002FC                     U5FIFO          equ	764	;# 
  4408   0002FD                     U5UIR           equ	765	;# 
  4409   0002FE                     U5ERRIR         equ	766	;# 
  4410   0002FF                     U5ERRIE         equ	767	;# 
  4411   000300                     SMT1TMR         equ	768	;# 
  4412   000300                     SMT1TMRL        equ	768	;# 
  4413   000301                     SMT1TMRH        equ	769	;# 
  4414   000302                     SMT1TMRU        equ	770	;# 
  4415   000303                     SMT1CPR         equ	771	;# 
  4416   000303                     SMT1CPRL        equ	771	;# 
  4417   000304                     SMT1CPRH        equ	772	;# 
  4418   000305                     SMT1CPRU        equ	773	;# 
  4419   000306                     SMT1CPW         equ	774	;# 
  4420   000306                     SMT1CPWL        equ	774	;# 
  4421   000307                     SMT1CPWH        equ	775	;# 
  4422   000308                     SMT1CPWU        equ	776	;# 
  4423   000309                     SMT1PR          equ	777	;# 
  4424   000309                     SMT1PRL         equ	777	;# 
  4425   00030A                     SMT1PRH         equ	778	;# 
  4426   00030B                     SMT1PRU         equ	779	;# 
  4427   00030C                     SMT1CON0        equ	780	;# 
  4428   00030D                     SMT1CON1        equ	781	;# 
  4429   00030E                     SMT1STAT        equ	782	;# 
  4430   00030F                     SMT1CLK         equ	783	;# 
  4431   000310                     SMT1SIG         equ	784	;# 
  4432   000311                     SMT1WIN         equ	785	;# 
  4433   000318                     TMR0L           equ	792	;# 
  4434   000318                     TMR0            equ	792	;# 
  4435   000319                     TMR0H           equ	793	;# 
  4436   000319                     PR0             equ	793	;# 
  4437   00031A                     T0CON0          equ	794	;# 
  4438   00031B                     T0CON1          equ	795	;# 
  4439   00031C                     TMR1            equ	796	;# 
  4440   00031C                     TMR1L           equ	796	;# 
  4441   00031D                     TMR1H           equ	797	;# 
  4442   00031E                     T1CON           equ	798	;# 
  4443   00031E                     TMR1CON         equ	798	;# 
  4444   00031F                     T1GCON          equ	799	;# 
  4445   00031F                     TMR1GCON        equ	799	;# 
  4446   000320                     T1GATE          equ	800	;# 
  4447   000320                     TMR1GATE        equ	800	;# 
  4448   000321                     T1CLK           equ	801	;# 
  4449   000321                     TMR1CLK         equ	801	;# 
  4450   000321                     PR1             equ	801	;# 
  4451   000322                     T2TMR           equ	802	;# 
  4452   000322                     TMR2            equ	802	;# 
  4453   000323                     T2PR            equ	803	;# 
  4454   000323                     PR2             equ	803	;# 
  4455   000324                     T2CON           equ	804	;# 
  4456   000325                     T2HLT           equ	805	;# 
  4457   000326                     T2CLKCON        equ	806	;# 
  4458   000326                     T2CLK           equ	806	;# 
  4459   000327                     T2RST           equ	807	;# 
  4460   000328                     TMR3            equ	808	;# 
  4461   000328                     TMR3L           equ	808	;# 
  4462   000329                     TMR3H           equ	809	;# 
  4463   00032A                     T3CON           equ	810	;# 
  4464   00032A                     TMR3CON         equ	810	;# 
  4465   00032B                     T3GCON          equ	811	;# 
  4466   00032B                     TMR3GCON        equ	811	;# 
  4467   00032C                     T3GATE          equ	812	;# 
  4468   00032C                     TMR3GATE        equ	812	;# 
  4469   00032D                     T3CLK           equ	813	;# 
  4470   00032D                     TMR3CLK         equ	813	;# 
  4471   00032D                     PR3             equ	813	;# 
  4472   00032E                     T4TMR           equ	814	;# 
  4473   00032E                     TMR4            equ	814	;# 
  4474   00032F                     T4PR            equ	815	;# 
  4475   00032F                     PR4             equ	815	;# 
  4476   000330                     T4CON           equ	816	;# 
  4477   000331                     T4HLT           equ	817	;# 
  4478   000332                     T4CLKCON        equ	818	;# 
  4479   000332                     T4CLK           equ	818	;# 
  4480   000333                     T4RST           equ	819	;# 
  4481   000334                     TMR5            equ	820	;# 
  4482   000334                     TMR5L           equ	820	;# 
  4483   000335                     TMR5H           equ	821	;# 
  4484   000336                     T5CON           equ	822	;# 
  4485   000336                     TMR5CON         equ	822	;# 
  4486   000337                     T5GCON          equ	823	;# 
  4487   000337                     TMR5GCON        equ	823	;# 
  4488   000338                     T5GATE          equ	824	;# 
  4489   000338                     TMR5GATE        equ	824	;# 
  4490   000339                     T5CLK           equ	825	;# 
  4491   000339                     TMR5CLK         equ	825	;# 
  4492   000339                     PR5             equ	825	;# 
  4493   00033A                     T6TMR           equ	826	;# 
  4494   00033A                     TMR6            equ	826	;# 
  4495   00033B                     T6PR            equ	827	;# 
  4496   00033B                     PR6             equ	827	;# 
  4497   00033C                     T6CON           equ	828	;# 
  4498   00033D                     T6HLT           equ	829	;# 
  4499   00033E                     T6CLKCON        equ	830	;# 
  4500   00033E                     T6CLK           equ	830	;# 
  4501   00033F                     T6RST           equ	831	;# 
  4502   000340                     CCPR1           equ	832	;# 
  4503   000340                     CCPR1L          equ	832	;# 
  4504   000341                     CCPR1H          equ	833	;# 
  4505   000342                     CCP1CON         equ	834	;# 
  4506   000343                     CCP1CAP         equ	835	;# 
  4507   000344                     CCPR2           equ	836	;# 
  4508   000344                     CCPR2L          equ	836	;# 
  4509   000345                     CCPR2H          equ	837	;# 
  4510   000346                     CCP2CON         equ	838	;# 
  4511   000347                     CCP2CAP         equ	839	;# 
  4512   000348                     CCPR3           equ	840	;# 
  4513   000348                     CCPR3L          equ	840	;# 
  4514   000349                     CCPR3H          equ	841	;# 
  4515   00034A                     CCP3CON         equ	842	;# 
  4516   00034B                     CCP3CAP         equ	843	;# 
  4517   00034C                     CCPTMRS0        equ	844	;# 
  4518   00034F                     CRCDATA         equ	847	;# 
  4519   00034F                     CRCDATAL        equ	847	;# 
  4520   000350                     CRCDATAH        equ	848	;# 
  4521   000351                     CRCDATAU        equ	849	;# 
  4522   000352                     CRCDATAT        equ	850	;# 
  4523   000353                     CRCOUT          equ	851	;# 
  4524   000353                     CRCSHFT         equ	851	;# 
  4525   000353                     CRCXOR          equ	851	;# 
  4526   000353                     CRCOUTL         equ	851	;# 
  4527   000353                     CRCSHFTL        equ	851	;# 
  4528   000353                     CRCSHIFTL       equ	851	;# 
  4529   000353                     CRCXORL         equ	851	;# 
  4530   000354                     CRCOUTH         equ	852	;# 
  4531   000354                     CRCSHFTH        equ	852	;# 
  4532   000354                     CRCSHIFTH       equ	852	;# 
  4533   000354                     CRCXORH         equ	852	;# 
  4534   000355                     CRCOUTU         equ	853	;# 
  4535   000355                     CRCSHFTU        equ	853	;# 
  4536   000355                     CRCSHIFTU       equ	853	;# 
  4537   000355                     CRCXORU         equ	853	;# 
  4538   000356                     CRCOUTT         equ	854	;# 
  4539   000356                     CRCSHFTT        equ	854	;# 
  4540   000356                     CRCSHIFTT       equ	854	;# 
  4541   000356                     CRCXORT         equ	854	;# 
  4542   000357                     CRCCON0         equ	855	;# 
  4543   000358                     CRCCON1         equ	856	;# 
  4544   000359                     CRCCON2         equ	857	;# 
  4545   00035A                     SCANLADR        equ	858	;# 
  4546   00035A                     SCANLADRL       equ	858	;# 
  4547   00035B                     SCANLADRH       equ	859	;# 
  4548   00035C                     SCANLADRU       equ	860	;# 
  4549   00035D                     SCANHADR        equ	861	;# 
  4550   00035D                     SCANHADRL       equ	861	;# 
  4551   00035E                     SCANHADRH       equ	862	;# 
  4552   00035F                     SCANHADRU       equ	863	;# 
  4553   000360                     SCANCON0        equ	864	;# 
  4554   000361                     SCANTRIG        equ	865	;# 
  4555   000362                     IPR0            equ	866	;# 
  4556   000363                     IPR1            equ	867	;# 
  4557   000364                     IPR2            equ	868	;# 
  4558   000365                     IPR3            equ	869	;# 
  4559   000366                     IPR4            equ	870	;# 
  4560   000367                     IPR5            equ	871	;# 
  4561   000368                     IPR6            equ	872	;# 
  4562   000369                     IPR7            equ	873	;# 
  4563   00036A                     IPR8            equ	874	;# 
  4564   00036B                     IPR9            equ	875	;# 
  4565   00036C                     IPR10           equ	876	;# 
  4566   00036D                     IPR11           equ	877	;# 
  4567   00036E                     IPR12           equ	878	;# 
  4568   00036F                     IPR13           equ	879	;# 
  4569   000370                     IPR14           equ	880	;# 
  4570   000371                     IPR15           equ	881	;# 
  4571   000373                     STATUS_CSHAD    equ	883	;# 
  4572   000374                     WREG_CSHAD      equ	884	;# 
  4573   000375                     BSR_CSHAD       equ	885	;# 
  4574   000376                     SHADCON         equ	886	;# 
  4575   000377                     STATUS_SHAD     equ	887	;# 
  4576   000378                     WREG_SHAD       equ	888	;# 
  4577   000379                     BSR_SHAD        equ	889	;# 
  4578   00037A                     PCLATH_SHAD     equ	890	;# 
  4579   00037B                     PCLATU_SHAD     equ	891	;# 
  4580   00037C                     FSR0SH          equ	892	;# 
  4581   00037C                     FSR0L_SHAD      equ	892	;# 
  4582   00037D                     FSR0H_SHAD      equ	893	;# 
  4583   00037E                     FSR1SH          equ	894	;# 
  4584   00037E                     FSR1L_SHAD      equ	894	;# 
  4585   00037F                     FSR1H_SHAD      equ	895	;# 
  4586   000380                     FSR2SH          equ	896	;# 
  4587   000380                     FSR2L_SHAD      equ	896	;# 
  4588   000381                     FSR2H_SHAD      equ	897	;# 
  4589   000382                     PRODSH          equ	898	;# 
  4590   000382                     PRODL_SHAD      equ	898	;# 
  4591   000383                     PRODH_SHAD      equ	899	;# 
  4592   000387                     TU16ACON0       equ	903	;# 
  4593   000388                     TU16ACON1       equ	904	;# 
  4594   000389                     TU16AHLT        equ	905	;# 
  4595   00038A                     TU16APS         equ	906	;# 
  4596   00038B                     TU16ATMR        equ	907	;# 
  4597   00038B                     TU16ACR         equ	907	;# 
  4598   00038B                     TU16ATMRL       equ	907	;# 
  4599   00038B                     TU16ACRL        equ	907	;# 
  4600   00038C                     TU16ATMRH       equ	908	;# 
  4601   00038C                     TU16ACRH        equ	908	;# 
  4602   00038D                     TU16APR         equ	909	;# 
  4603   00038D                     TU16APRL        equ	909	;# 
  4604   00038E                     TU16APRH        equ	910	;# 
  4605   00038F                     TU16ACLK        equ	911	;# 
  4606   000390                     TU16AERS        equ	912	;# 
  4607   000393                     TU16BCON0       equ	915	;# 
  4608   000394                     TU16BCON1       equ	916	;# 
  4609   000395                     TU16BHLT        equ	917	;# 
  4610   000396                     TU16BPS         equ	918	;# 
  4611   000397                     TU16BTMR        equ	919	;# 
  4612   000397                     TU16BCR         equ	919	;# 
  4613   000397                     TU16BTMRL       equ	919	;# 
  4614   000397                     TU16BCRL        equ	919	;# 
  4615   000398                     TU16BTMRH       equ	920	;# 
  4616   000398                     TU16BCRH        equ	920	;# 
  4617   000399                     TU16BPR         equ	921	;# 
  4618   000399                     TU16BPRL        equ	921	;# 
  4619   00039A                     TU16BPRH        equ	922	;# 
  4620   00039B                     TU16BCLK        equ	923	;# 
  4621   00039C                     TU16BERS        equ	924	;# 
  4622   0003BB                     TUCHAIN         equ	955	;# 
  4623   0003BC                     CWG1CLK         equ	956	;# 
  4624   0003BC                     CWG1CLKCON      equ	956	;# 
  4625   0003BD                     CWG1ISM         equ	957	;# 
  4626   0003BE                     CWG1DBR         equ	958	;# 
  4627   0003BF                     CWG1DBF         equ	959	;# 
  4628   0003C0                     CWG1CON0        equ	960	;# 
  4629   0003C1                     CWG1CON1        equ	961	;# 
  4630   0003C2                     CWG1AS0         equ	962	;# 
  4631   0003C3                     CWG1AS1         equ	963	;# 
  4632   0003C4                     CWG1STR         equ	964	;# 
  4633   0003C5                     CWG2CLK         equ	965	;# 
  4634   0003C5                     CWG2CLKCON      equ	965	;# 
  4635   0003C6                     CWG2ISM         equ	966	;# 
  4636   0003C7                     CWG2DBR         equ	967	;# 
  4637   0003C8                     CWG2DBF         equ	968	;# 
  4638   0003C9                     CWG2CON0        equ	969	;# 
  4639   0003CA                     CWG2CON1        equ	970	;# 
  4640   0003CB                     CWG2AS0         equ	971	;# 
  4641   0003CC                     CWG2AS1         equ	972	;# 
  4642   0003CD                     CWG2STR         equ	973	;# 
  4643   0003CE                     CWG3CLK         equ	974	;# 
  4644   0003CE                     CWG3CLKCON      equ	974	;# 
  4645   0003CF                     CWG3ISM         equ	975	;# 
  4646   0003D0                     CWG3DBR         equ	976	;# 
  4647   0003D1                     CWG3DBF         equ	977	;# 
  4648   0003D2                     CWG3CON0        equ	978	;# 
  4649   0003D3                     CWG3CON1        equ	979	;# 
  4650   0003D4                     CWG3AS0         equ	980	;# 
  4651   0003D5                     CWG3AS1         equ	981	;# 
  4652   0003D6                     CWG3STR         equ	982	;# 
  4653   0003D7                     FVRCON          equ	983	;# 
  4654   0003D8                     ADCPCON         equ	984	;# 
  4655   0003D8                     ADCP            equ	984	;# 
  4656   0003D9                     ADLTH           equ	985	;# 
  4657   0003D9                     ADLTHL          equ	985	;# 
  4658   0003DA                     ADLTHH          equ	986	;# 
  4659   0003DB                     ADUTH           equ	987	;# 
  4660   0003DB                     ADUTHL          equ	987	;# 
  4661   0003DC                     ADUTHH          equ	988	;# 
  4662   0003DD                     ADERR           equ	989	;# 
  4663   0003DD                     ADERRL          equ	989	;# 
  4664   0003DE                     ADERRH          equ	990	;# 
  4665   0003DF                     ADSTPT          equ	991	;# 
  4666   0003DF                     ADSTPTL         equ	991	;# 
  4667   0003E0                     ADSTPTH         equ	992	;# 
  4668   0003E1                     ADFLTR          equ	993	;# 
  4669   0003E1                     ADFLTRL         equ	993	;# 
  4670   0003E2                     ADFLTRH         equ	994	;# 
  4671   0003E3                     ADACC           equ	995	;# 
  4672   0003E3                     ADACCL          equ	995	;# 
  4673   0003E4                     ADACCH          equ	996	;# 
  4674   0003E5                     ADACCU          equ	997	;# 
  4675   0003E6                     ADCNT           equ	998	;# 
  4676   0003E7                     ADRPT           equ	999	;# 
  4677   0003E8                     ADPREV          equ	1000	;# 
  4678   0003E8                     ADPREVL         equ	1000	;# 
  4679   0003E9                     ADPREVH         equ	1001	;# 
  4680   0003EA                     ADRES           equ	1002	;# 
  4681   0003EA                     ADRESL          equ	1002	;# 
  4682   0003EB                     ADRESH          equ	1003	;# 
  4683   0003EC                     ADPCH           equ	1004	;# 
  4684   0003EE                     ADACQ           equ	1006	;# 
  4685   0003EE                     ADACQL          equ	1006	;# 
  4686   0003EF                     ADACQH          equ	1007	;# 
  4687   0003F0                     ADCAP           equ	1008	;# 
  4688   0003F1                     ADPRE           equ	1009	;# 
  4689   0003F1                     ADPREL          equ	1009	;# 
  4690   0003F2                     ADPREH          equ	1010	;# 
  4691   0003F3                     ADCON0          equ	1011	;# 
  4692   0003F4                     ADCON1          equ	1012	;# 
  4693   0003F5                     ADCON2          equ	1013	;# 
  4694   0003F6                     ADCON3          equ	1014	;# 
  4695   0003F7                     ADSTAT          equ	1015	;# 
  4696   0003F8                     ADREF           equ	1016	;# 
  4697   0003F9                     ADACT           equ	1017	;# 
  4698   0003FA                     ADCLK           equ	1018	;# 
  4699   0003FB                     ADCTX           equ	1019	;# 
  4700   0003FC                     ADCSEL1         equ	1020	;# 
  4701   0003FD                     ADCSEL2         equ	1021	;# 
  4702   0003FE                     ADCSEL3         equ	1022	;# 
  4703   0003FF                     ADCSEL4         equ	1023	;# 
  4704   000400                     ANSELA          equ	1024	;# 
  4705   000401                     WPUA            equ	1025	;# 
  4706   000402                     ODCONA          equ	1026	;# 
  4707   000403                     SLRCONA         equ	1027	;# 
  4708   000404                     INLVLA          equ	1028	;# 
  4709   000405                     IOCAP           equ	1029	;# 
  4710   000406                     IOCAN           equ	1030	;# 
  4711   000407                     IOCAF           equ	1031	;# 
  4712   000408                     ANSELB          equ	1032	;# 
  4713   000409                     WPUB            equ	1033	;# 
  4714   00040A                     ODCONB          equ	1034	;# 
  4715   00040B                     SLRCONB         equ	1035	;# 
  4716   00040C                     INLVLB          equ	1036	;# 
  4717   00040D                     IOCBP           equ	1037	;# 
  4718   00040E                     IOCBN           equ	1038	;# 
  4719   00040F                     IOCBF           equ	1039	;# 
  4720   000410                     ANSELC          equ	1040	;# 
  4721   000411                     WPUC            equ	1041	;# 
  4722   000412                     ODCONC          equ	1042	;# 
  4723   000413                     SLRCONC         equ	1043	;# 
  4724   000414                     INLVLC          equ	1044	;# 
  4725   000415                     IOCCP           equ	1045	;# 
  4726   000416                     IOCCN           equ	1046	;# 
  4727   000417                     IOCCF           equ	1047	;# 
  4728   000421                     WPUE            equ	1057	;# 
  4729   000424                     INLVLE          equ	1060	;# 
  4730   000425                     IOCEP           equ	1061	;# 
  4731   000426                     IOCEN           equ	1062	;# 
  4732   000427                     IOCEF           equ	1063	;# 
  4733   000440                     NCO1ACC         equ	1088	;# 
  4734   000440                     NCO1ACCL        equ	1088	;# 
  4735   000441                     NCO1ACCH        equ	1089	;# 
  4736   000442                     NCO1ACCU        equ	1090	;# 
  4737   000443                     NCO1INC         equ	1091	;# 
  4738   000443                     NCO1INCL        equ	1091	;# 
  4739   000444                     NCO1INCH        equ	1092	;# 
  4740   000445                     NCO1INCU        equ	1093	;# 
  4741   000446                     NCO1CON         equ	1094	;# 
  4742   000447                     NCO1CLK         equ	1095	;# 
  4743   000448                     NCO2ACC         equ	1096	;# 
  4744   000448                     NCO2ACCL        equ	1096	;# 
  4745   000449                     NCO2ACCH        equ	1097	;# 
  4746   00044A                     NCO2ACCU        equ	1098	;# 
  4747   00044B                     NCO2INC         equ	1099	;# 
  4748   00044B                     NCO2INCL        equ	1099	;# 
  4749   00044C                     NCO2INCH        equ	1100	;# 
  4750   00044D                     NCO2INCU        equ	1101	;# 
  4751   00044E                     NCO2CON         equ	1102	;# 
  4752   00044F                     NCO2CLK         equ	1103	;# 
  4753   000450                     NCO3ACC         equ	1104	;# 
  4754   000450                     NCO3ACCL        equ	1104	;# 
  4755   000451                     NCO3ACCH        equ	1105	;# 
  4756   000452                     NCO3ACCU        equ	1106	;# 
  4757   000453                     NCO3INC         equ	1107	;# 
  4758   000453                     NCO3INCL        equ	1107	;# 
  4759   000454                     NCO3INCH        equ	1108	;# 
  4760   000455                     NCO3INCU        equ	1109	;# 
  4761   000456                     NCO3CON         equ	1110	;# 
  4762   000457                     NCO3CLK         equ	1111	;# 
  4763   000458                     FSCMCON         equ	1112	;# 
  4764   000459                     IVTLOCK         equ	1113	;# 
  4765   00045A                     IVTAD           equ	1114	;# 
  4766   00045A                     IVTADL          equ	1114	;# 
  4767   00045B                     IVTADH          equ	1115	;# 
  4768   00045C                     IVTADU          equ	1116	;# 
  4769   00045D                     IVTBASE         equ	1117	;# 
  4770   00045D                     IVTBASEL        equ	1117	;# 
  4771   00045E                     IVTBASEH        equ	1118	;# 
  4772   00045F                     IVTBASEU        equ	1119	;# 
  4773   000460                     PWM1ERS         equ	1120	;# 
  4774   000461                     PWM1CLK         equ	1121	;# 
  4775   000462                     PWM1LDS         equ	1122	;# 
  4776   000463                     PWM1PR          equ	1123	;# 
  4777   000463                     PWM1PRL         equ	1123	;# 
  4778   000464                     PWM1PRH         equ	1124	;# 
  4779   000465                     PWM1CPRE        equ	1125	;# 
  4780   000466                     PWM1PIPOS       equ	1126	;# 
  4781   000467                     PWM1GIR         equ	1127	;# 
  4782   000468                     PWM1GIE         equ	1128	;# 
  4783   000469                     PWM1CON         equ	1129	;# 
  4784   00046A                     PWM1S1CFG       equ	1130	;# 
  4785   00046B                     PWM1S1P1        equ	1131	;# 
  4786   00046B                     PWM1S1P1L       equ	1131	;# 
  4787   00046C                     PWM1S1P1H       equ	1132	;# 
  4788   00046D                     PWM1S1P2        equ	1133	;# 
  4789   00046D                     PWM1S1P2L       equ	1133	;# 
  4790   00046E                     PWM1S1P2H       equ	1134	;# 
  4791   00046F                     PWM2ERS         equ	1135	;# 
  4792   000470                     PWM2CLK         equ	1136	;# 
  4793   000471                     PWM2LDS         equ	1137	;# 
  4794   000472                     PWM2PR          equ	1138	;# 
  4795   000472                     PWM2PRL         equ	1138	;# 
  4796   000473                     PWM2PRH         equ	1139	;# 
  4797   000474                     PWM2CPRE        equ	1140	;# 
  4798   000475                     PWM2PIPOS       equ	1141	;# 
  4799   000476                     PWM2GIR         equ	1142	;# 
  4800   000477                     PWM2GIE         equ	1143	;# 
  4801   000478                     PWM2CON         equ	1144	;# 
  4802   000479                     PWM2S1CFG       equ	1145	;# 
  4803   00047A                     PWM2S1P1        equ	1146	;# 
  4804   00047A                     PWM2S1P1L       equ	1146	;# 
  4805   00047B                     PWM2S1P1H       equ	1147	;# 
  4806   00047C                     PWM2S1P2        equ	1148	;# 
  4807   00047C                     PWM2S1P2L       equ	1148	;# 
  4808   00047D                     PWM2S1P2H       equ	1149	;# 
  4809   00047E                     PWM3ERS         equ	1150	;# 
  4810   00047F                     PWM3CLK         equ	1151	;# 
  4811   000480                     PWM3LDS         equ	1152	;# 
  4812   000481                     PWM3PR          equ	1153	;# 
  4813   000481                     PWM3PRL         equ	1153	;# 
  4814   000482                     PWM3PRH         equ	1154	;# 
  4815   000483                     PWM3CPRE        equ	1155	;# 
  4816   000484                     PWM3PIPOS       equ	1156	;# 
  4817   000485                     PWM3GIR         equ	1157	;# 
  4818   000486                     PWM3GIE         equ	1158	;# 
  4819   000487                     PWM3CON         equ	1159	;# 
  4820   000488                     PWM3S1CFG       equ	1160	;# 
  4821   000489                     PWM3S1P1        equ	1161	;# 
  4822   000489                     PWM3S1P1L       equ	1161	;# 
  4823   00048A                     PWM3S1P1H       equ	1162	;# 
  4824   00048B                     PWM3S1P2        equ	1163	;# 
  4825   00048B                     PWM3S1P2L       equ	1163	;# 
  4826   00048C                     PWM3S1P2H       equ	1164	;# 
  4827   00048D                     PWM4ERS         equ	1165	;# 
  4828   00048E                     PWM4CLK         equ	1166	;# 
  4829   00048F                     PWM4LDS         equ	1167	;# 
  4830   000490                     PWM4PR          equ	1168	;# 
  4831   000490                     PWM4PRL         equ	1168	;# 
  4832   000491                     PWM4PRH         equ	1169	;# 
  4833   000492                     PWM4CPRE        equ	1170	;# 
  4834   000493                     PWM4PIPOS       equ	1171	;# 
  4835   000494                     PWM4GIR         equ	1172	;# 
  4836   000495                     PWM4GIE         equ	1173	;# 
  4837   000496                     PWM4CON         equ	1174	;# 
  4838   000497                     PWM4S1CFG       equ	1175	;# 
  4839   000498                     PWM4S1P1        equ	1176	;# 
  4840   000498                     PWM4S1P1L       equ	1176	;# 
  4841   000499                     PWM4S1P1H       equ	1177	;# 
  4842   00049A                     PWM4S1P2        equ	1178	;# 
  4843   00049A                     PWM4S1P2L       equ	1178	;# 
  4844   00049B                     PWM4S1P2H       equ	1179	;# 
  4845   00049C                     PWMLOAD         equ	1180	;# 
  4846   00049D                     PWMEN           equ	1181	;# 
  4847   00049E                     PIE0            equ	1182	;# 
  4848   00049F                     PIE1            equ	1183	;# 
  4849   0004A0                     PIE2            equ	1184	;# 
  4850   0004A1                     PIE3            equ	1185	;# 
  4851   0004A2                     PIE4            equ	1186	;# 
  4852   0004A3                     PIE5            equ	1187	;# 
  4853   0004A4                     PIE6            equ	1188	;# 
  4854   0004A5                     PIE7            equ	1189	;# 
  4855   0004A6                     PIE8            equ	1190	;# 
  4856   0004A7                     PIE9            equ	1191	;# 
  4857   0004A8                     PIE10           equ	1192	;# 
  4858   0004A9                     PIE11           equ	1193	;# 
  4859   0004AA                     PIE12           equ	1194	;# 
  4860   0004AB                     PIE13           equ	1195	;# 
  4861   0004AC                     PIE14           equ	1196	;# 
  4862   0004AD                     PIE15           equ	1197	;# 
  4863   0004AE                     PIR0            equ	1198	;# 
  4864   0004AF                     PIR1            equ	1199	;# 
  4865   0004B0                     PIR2            equ	1200	;# 
  4866   0004B1                     PIR3            equ	1201	;# 
  4867   0004B2                     PIR4            equ	1202	;# 
  4868   0004B3                     PIR5            equ	1203	;# 
  4869   0004B4                     PIR6            equ	1204	;# 
  4870   0004B5                     PIR7            equ	1205	;# 
  4871   0004B6                     PIR8            equ	1206	;# 
  4872   0004B7                     PIR9            equ	1207	;# 
  4873   0004B8                     PIR10           equ	1208	;# 
  4874   0004B9                     PIR11           equ	1209	;# 
  4875   0004BA                     PIR12           equ	1210	;# 
  4876   0004BB                     PIR13           equ	1211	;# 
  4877   0004BC                     PIR14           equ	1212	;# 
  4878   0004BD                     PIR15           equ	1213	;# 
  4879   0004BE                     LATA            equ	1214	;# 
  4880   0004BF                     LATB            equ	1215	;# 
  4881   0004C0                     LATC            equ	1216	;# 
  4882   0004C6                     TRISA           equ	1222	;# 
  4883   0004C7                     TRISB           equ	1223	;# 
  4884   0004C8                     TRISC           equ	1224	;# 
  4885   0004CA                     TRISE           equ	1226	;# 
  4886   0004CE                     PORTA           equ	1230	;# 
  4887   0004CF                     PORTB           equ	1231	;# 
  4888   0004D0                     PORTC           equ	1232	;# 
  4889   0004D2                     PORTE           equ	1234	;# 
  4890   0004D6                     INTCON0         equ	1238	;# 
  4891   0004D7                     INTCON1         equ	1239	;# 
  4892   0004D8                     STATUS          equ	1240	;# 
  4893   0004D9                     FSR2            equ	1241	;# 
  4894   0004D9                     FSR2L           equ	1241	;# 
  4895   0004DA                     FSR2H           equ	1242	;# 
  4896   0004DB                     PLUSW2          equ	1243	;# 
  4897   0004DC                     PREINC2         equ	1244	;# 
  4898   0004DD                     POSTDEC2        equ	1245	;# 
  4899   0004DE                     POSTINC2        equ	1246	;# 
  4900   0004DF                     INDF2           equ	1247	;# 
  4901   0004E0                     BSR             equ	1248	;# 
  4902   0004E1                     FSR1            equ	1249	;# 
  4903   0004E1                     FSR1L           equ	1249	;# 
  4904   0004E2                     FSR1H           equ	1250	;# 
  4905   0004E3                     PLUSW1          equ	1251	;# 
  4906   0004E4                     PREINC1         equ	1252	;# 
  4907   0004E5                     POSTDEC1        equ	1253	;# 
  4908   0004E6                     POSTINC1        equ	1254	;# 
  4909   0004E7                     INDF1           equ	1255	;# 
  4910   0004E8                     WREG            equ	1256	;# 
  4911   0004E9                     FSR0            equ	1257	;# 
  4912   0004E9                     FSR0L           equ	1257	;# 
  4913   0004EA                     FSR0H           equ	1258	;# 
  4914   0004EB                     PLUSW0          equ	1259	;# 
  4915   0004EC                     PREINC0         equ	1260	;# 
  4916   0004ED                     POSTDEC0        equ	1261	;# 
  4917   0004EE                     POSTINC0        equ	1262	;# 
  4918   0004EF                     INDF0           equ	1263	;# 
  4919   0004F0                     PCON0           equ	1264	;# 
  4920   0004F1                     PCON1           equ	1265	;# 
  4921   0004F2                     CPUDOZE         equ	1266	;# 
  4922   0004F3                     PROD            equ	1267	;# 
  4923   0004F3                     PRODL           equ	1267	;# 
  4924   0004F4                     PRODH           equ	1268	;# 
  4925   0004F5                     TABLAT          equ	1269	;# 
  4926   0004F6                     TBLPTR          equ	1270	;# 
  4927   0004F6                     TBLPTRL         equ	1270	;# 
  4928   0004F7                     TBLPTRH         equ	1271	;# 
  4929   0004F8                     TBLPTRU         equ	1272	;# 
  4930   0004F9                     PCLAT           equ	1273	;# 
  4931   0004F9                     PCL             equ	1273	;# 
  4932   0004FA                     PCLATH          equ	1274	;# 
  4933   0004FB                     PCLATU          equ	1275	;# 
  4934   0004FC                     STKPTR          equ	1276	;# 
  4935   0004FD                     TOS             equ	1277	;# 
  4936   0004FD                     TOSL            equ	1277	;# 
  4937   0004FE                     TOSH            equ	1278	;# 
  4938   0004FF                     TOSU            equ	1279	;# 
  4939   000038                     BOOTREG         equ	56	;# 
  4940   000039                     CLKRCON         equ	57	;# 
  4941   00003A                     CLKRCLK         equ	58	;# 
  4942   000040                     NVMCON0         equ	64	;# 
  4943   000041                     NVMCON1         equ	65	;# 
  4944   000042                     NVMLOCK         equ	66	;# 
  4945   000043                     NVMADR          equ	67	;# 
  4946   000043                     NVMADRL         equ	67	;# 
  4947   000044                     NVMADRH         equ	68	;# 
  4948   000045                     NVMADRU         equ	69	;# 
  4949   000046                     NVMDAT          equ	70	;# 
  4950   000046                     NVMDATL         equ	70	;# 
  4951   000047                     NVMDATH         equ	71	;# 
  4952   000048                     VREGCON         equ	72	;# 
  4953   000049                     BORCON          equ	73	;# 
  4954   00004A                     HLVDCON0        equ	74	;# 
  4955   00004B                     HLVDCON1        equ	75	;# 
  4956   00004C                     ZCDCON          equ	76	;# 
  4957   000060                     PMD0            equ	96	;# 
  4958   000061                     PMD1            equ	97	;# 
  4959   000062                     PMD2            equ	98	;# 
  4960   000063                     PMD3            equ	99	;# 
  4961   000064                     PMD4            equ	100	;# 
  4962   000065                     PMD5            equ	101	;# 
  4963   000066                     PMD6            equ	102	;# 
  4964   000067                     PMD7            equ	103	;# 
  4965   000068                     PMD8            equ	104	;# 
  4966   00006A                     MD1CON0         equ	106	;# 
  4967   00006B                     MD1CON1         equ	107	;# 
  4968   00006C                     MD1SRC          equ	108	;# 
  4969   00006D                     MD1CARL         equ	109	;# 
  4970   00006E                     MD1CARH         equ	110	;# 
  4971   00006F                     CMOUT           equ	111	;# 
  4972   000070                     CM1CON0         equ	112	;# 
  4973   000071                     CM1CON1         equ	113	;# 
  4974   000072                     CM1NCH          equ	114	;# 
  4975   000073                     CM1PCH          equ	115	;# 
  4976   000074                     CM2CON0         equ	116	;# 
  4977   000075                     CM2CON1         equ	117	;# 
  4978   000076                     CM2NCH          equ	118	;# 
  4979   000077                     CM2PCH          equ	119	;# 
  4980   000078                     WDTCON0         equ	120	;# 
  4981   000079                     WDTCON1         equ	121	;# 
  4982   00007A                     WDTPSL          equ	122	;# 
  4983   00007B                     WDTPSH          equ	123	;# 
  4984   00007C                     WDTTMR          equ	124	;# 
  4985   00007D                     DAC1DAT         equ	125	;# 
  4986   00007D                     DAC1DATL        equ	125	;# 
  4987   00007F                     DAC1CON         equ	127	;# 
  4988   000080                     SPI1RXB         equ	128	;# 
  4989   000081                     SPI1TXB         equ	129	;# 
  4990   000082                     SPI1TCNT        equ	130	;# 
  4991   000082                     SPI1TCNTL       equ	130	;# 
  4992   000083                     SPI1TCNTH       equ	131	;# 
  4993   000084                     SPI1CON0        equ	132	;# 
  4994   000085                     SPI1CON1        equ	133	;# 
  4995   000086                     SPI1CON2        equ	134	;# 
  4996   000087                     SPI1STATUS      equ	135	;# 
  4997   000088                     SPI1TWIDTH      equ	136	;# 
  4998   000089                     SPI1BAUD        equ	137	;# 
  4999   00008A                     SPI1INTF        equ	138	;# 
  5000   00008B                     SPI1INTE        equ	139	;# 
  5001   00008C                     SPI1CLK         equ	140	;# 
  5002   00008D                     SPI2RXB         equ	141	;# 
  5003   00008E                     SPI2TXB         equ	142	;# 
  5004   00008F                     SPI2TCNT        equ	143	;# 
  5005   00008F                     SPI2TCNTL       equ	143	;# 
  5006   000090                     SPI2TCNTH       equ	144	;# 
  5007   000091                     SPI2CON0        equ	145	;# 
  5008   000092                     SPI2CON1        equ	146	;# 
  5009   000093                     SPI2CON2        equ	147	;# 
  5010   000094                     SPI2STATUS      equ	148	;# 
  5011   000095                     SPI2TWIDTH      equ	149	;# 
  5012   000096                     SPI2BAUD        equ	150	;# 
  5013   000097                     SPI2INTF        equ	151	;# 
  5014   000098                     SPI2INTE        equ	152	;# 
  5015   000099                     SPI2CLK         equ	153	;# 
  5016   0000AC                     ACTCON          equ	172	;# 
  5017   0000AD                     OSCCON1         equ	173	;# 
  5018   0000AE                     OSCCON2         equ	174	;# 
  5019   0000AF                     OSCCON3         equ	175	;# 
  5020   0000B0                     OSCTUNE         equ	176	;# 
  5021   0000B1                     OSCFRQ          equ	177	;# 
  5022   0000B1                     OSCFREQ         equ	177	;# 
  5023   0000B2                     OSCSTAT         equ	178	;# 
  5024   0000B2                     OSCSTAT1        equ	178	;# 
  5025   0000B3                     OSCEN           equ	179	;# 
  5026   0000B4                     PRLOCK          equ	180	;# 
  5027   0000B5                     SCANPR          equ	181	;# 
  5028   0000B6                     DMA1PR          equ	182	;# 
  5029   0000B7                     DMA2PR          equ	183	;# 
  5030   0000B8                     DMA3PR          equ	184	;# 
  5031   0000B9                     DMA4PR          equ	185	;# 
  5032   0000BA                     DMA5PR          equ	186	;# 
  5033   0000BB                     DMA6PR          equ	187	;# 
  5034   0000BC                     DMA7PR          equ	188	;# 
  5035   0000BD                     DMA8PR          equ	189	;# 
  5036   0000BE                     MAINPR          equ	190	;# 
  5037   0000BF                     ISRPR           equ	191	;# 
  5038   0000D4                     CLCDATA         equ	212	;# 
  5039   0000D5                     CLCSELECT       equ	213	;# 
  5040   0000D6                     CLCnCON         equ	214	;# 
  5041   0000D7                     CLCnPOL         equ	215	;# 
  5042   0000D8                     CLCnSEL0        equ	216	;# 
  5043   0000D9                     CLCnSEL1        equ	217	;# 
  5044   0000DA                     CLCnSEL2        equ	218	;# 
  5045   0000DB                     CLCnSEL3        equ	219	;# 
  5046   0000DC                     CLCnGLS0        equ	220	;# 
  5047   0000DD                     CLCnGLS1        equ	221	;# 
  5048   0000DE                     CLCnGLS2        equ	222	;# 
  5049   0000DF                     CLCnGLS3        equ	223	;# 
  5050   0000E8                     DMASELECT       equ	232	;# 
  5051   0000E9                     DMAnBUF         equ	233	;# 
  5052   0000EA                     DMAnDCNT        equ	234	;# 
  5053   0000EA                     DMAnDCNTL       equ	234	;# 
  5054   0000EB                     DMAnDCNTH       equ	235	;# 
  5055   0000EC                     DMAnDPTR        equ	236	;# 
  5056   0000EC                     DMAnDPTRL       equ	236	;# 
  5057   0000ED                     DMAnDPTRH       equ	237	;# 
  5058   0000EE                     DMAnDSZ         equ	238	;# 
  5059   0000EE                     DMAnDSZL        equ	238	;# 
  5060   0000EF                     DMAnDSZH        equ	239	;# 
  5061   0000F0                     DMAnDSA         equ	240	;# 
  5062   0000F0                     DMAnDSAL        equ	240	;# 
  5063   0000F1                     DMAnDSAH        equ	241	;# 
  5064   0000F2                     DMAnSCNT        equ	242	;# 
  5065   0000F2                     DMAnSCNTL       equ	242	;# 
  5066   0000F3                     DMAnSCNTH       equ	243	;# 
  5067   0000F4                     DMAnSPTR        equ	244	;# 
  5068   0000F4                     DMAnSPTRL       equ	244	;# 
  5069   0000F5                     DMAnSPTRH       equ	245	;# 
  5070   0000F6                     DMAnSPTRU       equ	246	;# 
  5071   0000F7                     DMAnSSZ         equ	247	;# 
  5072   0000F7                     DMAnSSZL        equ	247	;# 
  5073   0000F8                     DMAnSSZH        equ	248	;# 
  5074   0000F9                     DMAnSSA         equ	249	;# 
  5075   0000F9                     DMAnSSAL        equ	249	;# 
  5076   0000FA                     DMAnSSAH        equ	250	;# 
  5077   0000FB                     DMAnSSAU        equ	251	;# 
  5078   0000FC                     DMAnCON0        equ	252	;# 
  5079   0000FD                     DMAnCON1        equ	253	;# 
  5080   0000FE                     DMAnAIRQ        equ	254	;# 
  5081   0000FF                     DMAnSIRQ        equ	255	;# 
  5082   000100                     C1CONL          equ	256	;# 
  5083   000101                     C1CONH          equ	257	;# 
  5084   000102                     C1CONU          equ	258	;# 
  5085   000103                     C1CONT          equ	259	;# 
  5086   000104                     C1NBTCFGL       equ	260	;# 
  5087   000105                     C1NBTCFGH       equ	261	;# 
  5088   000106                     C1NBTCFGU       equ	262	;# 
  5089   000107                     C1NBTCFGT       equ	263	;# 
  5090   000108                     C1DBTCFGL       equ	264	;# 
  5091   000109                     C1DBTCFGH       equ	265	;# 
  5092   00010A                     C1DBTCFGU       equ	266	;# 
  5093   00010B                     C1DBTCFGT       equ	267	;# 
  5094   00010C                     C1TDCL          equ	268	;# 
  5095   00010D                     C1TDCH          equ	269	;# 
  5096   00010E                     C1TDCU          equ	270	;# 
  5097   000110                     C1TBC           equ	272	;# 
  5098   000110                     C1TBCL          equ	272	;# 
  5099   000111                     C1TBCH          equ	273	;# 
  5100   000112                     C1TBCU          equ	274	;# 
  5101   000113                     C1TBCT          equ	275	;# 
  5102   000114                     C1TSCONL        equ	276	;# 
  5103   000115                     C1TSCONH        equ	277	;# 
  5104   000116                     C1TSCONU        equ	278	;# 
  5105   000117                     C1TSCONT        equ	279	;# 
  5106   000118                     C1VECL          equ	280	;# 
  5107   000119                     C1VECH          equ	281	;# 
  5108   00011A                     C1VECU          equ	282	;# 
  5109   00011B                     C1VECT          equ	283	;# 
  5110   00011C                     C1INTL          equ	284	;# 
  5111   00011D                     C1INTH          equ	285	;# 
  5112   00011E                     C1INTU          equ	286	;# 
  5113   00011F                     C1INTT          equ	287	;# 
  5114   000120                     C1RXIF          equ	288	;# 
  5115   000120                     C1RXIFL         equ	288	;# 
  5116   000121                     C1RXIFH         equ	289	;# 
  5117   000122                     C1RXIFU         equ	290	;# 
  5118   000123                     C1RXIFT         equ	291	;# 
  5119   000124                     C1TXIF          equ	292	;# 
  5120   000124                     C1TXIFL         equ	292	;# 
  5121   000125                     C1TXIFH         equ	293	;# 
  5122   000126                     C1TXIFU         equ	294	;# 
  5123   000127                     C1TXIFT         equ	295	;# 
  5124   000128                     C1RXOVIF        equ	296	;# 
  5125   000128                     C1RXOVIFL       equ	296	;# 
  5126   000129                     C1RXOVIFH       equ	297	;# 
  5127   00012A                     C1RXOVIFU       equ	298	;# 
  5128   00012B                     C1RXOVIFT       equ	299	;# 
  5129   00012C                     C1TXATIF        equ	300	;# 
  5130   00012C                     C1TXATIFL       equ	300	;# 
  5131   00012D                     C1TXATIFH       equ	301	;# 
  5132   00012E                     C1TXATIFU       equ	302	;# 
  5133   00012F                     C1TXATIFT       equ	303	;# 
  5134   000130                     C1TXREQ         equ	304	;# 
  5135   000130                     C1TXREQL        equ	304	;# 
  5136   000131                     C1TXREQH        equ	305	;# 
  5137   000132                     C1TXREQU        equ	306	;# 
  5138   000133                     C1TXREQT        equ	307	;# 
  5139   000134                     C1TRECL         equ	308	;# 
  5140   000135                     C1TRECH         equ	309	;# 
  5141   000136                     C1TRECU         equ	310	;# 
  5142   000137                     C1TRECT         equ	311	;# 
  5143   000138                     C1BDIAG0L       equ	312	;# 
  5144   000139                     C1BDIAG0H       equ	313	;# 
  5145   00013C                     C1BDIAG1L       equ	316	;# 
  5146   00013D                     C1BDIAG1H       equ	317	;# 
  5147   00013E                     C1BDIAG1U       equ	318	;# 
  5148   00013F                     C1BDIAG1T       equ	319	;# 
  5149   000140                     C1TEFCONL       equ	320	;# 
  5150   000141                     C1TEFCONH       equ	321	;# 
  5151   000142                     C1TEFCONU       equ	322	;# 
  5152   000143                     C1TEFCONT       equ	323	;# 
  5153   000144                     C1TEFSTAL       equ	324	;# 
  5154   000145                     C1TEFSTAH       equ	325	;# 
  5155   000146                     C1TEFSTAU       equ	326	;# 
  5156   000147                     C1TEFSTAT       equ	327	;# 
  5157   000148                     C1TEFUA         equ	328	;# 
  5158   000148                     C1TEFUAL        equ	328	;# 
  5159   000149                     C1TEFUAH        equ	329	;# 
  5160   00014A                     C1TEFUAU        equ	330	;# 
  5161   00014B                     C1TEFUAT        equ	331	;# 
  5162   00014C                     C1FIFOBA        equ	332	;# 
  5163   00014C                     C1FIFOBAL       equ	332	;# 
  5164   00014D                     C1FIFOBAH       equ	333	;# 
  5165   00014E                     C1FIFOBAU       equ	334	;# 
  5166   00014F                     C1FIFOBAT       equ	335	;# 
  5167   000150                     C1TXQCONL       equ	336	;# 
  5168   000151                     C1TXQCONH       equ	337	;# 
  5169   000152                     C1TXQCONU       equ	338	;# 
  5170   000153                     C1TXQCONT       equ	339	;# 
  5171   000154                     C1TXQSTAL       equ	340	;# 
  5172   000155                     C1TXQSTAH       equ	341	;# 
  5173   000156                     C1TXQSTAU       equ	342	;# 
  5174   000157                     C1TXQSTAT       equ	343	;# 
  5175   000158                     C1TXQUA         equ	344	;# 
  5176   000158                     C1TXQUAL        equ	344	;# 
  5177   000159                     C1TXQUAH        equ	345	;# 
  5178   00015A                     C1TXQUAU        equ	346	;# 
  5179   00015B                     C1TXQUAT        equ	347	;# 
  5180   00015C                     C1FIFOCON1      equ	348	;# 
  5181   00015C                     C1FIFOCON1L     equ	348	;# 
  5182   00015D                     C1FIFOCON1H     equ	349	;# 
  5183   00015E                     C1FIFOCON1U     equ	350	;# 
  5184   00015F                     C1FIFOCON1T     equ	351	;# 
  5185   000160                     C1FIFOSTA1      equ	352	;# 
  5186   000160                     C1FIFOSTA1L     equ	352	;# 
  5187   000161                     C1FIFOSTA1H     equ	353	;# 
  5188   000162                     C1FIFOSTA1U     equ	354	;# 
  5189   000163                     C1FIFOSTA1T     equ	355	;# 
  5190   000164                     C1FIFOUA1       equ	356	;# 
  5191   000164                     C1FIFOUA1L      equ	356	;# 
  5192   000165                     C1FIFOUA1H      equ	357	;# 
  5193   000166                     C1FIFOUA1U      equ	358	;# 
  5194   000167                     C1FIFOUA1T      equ	359	;# 
  5195   000168                     C1FIFOCON2      equ	360	;# 
  5196   000168                     C1FIFOCON2L     equ	360	;# 
  5197   000169                     C1FIFOCON2H     equ	361	;# 
  5198   00016A                     C1FIFOCON2U     equ	362	;# 
  5199   00016B                     C1FIFOCON2T     equ	363	;# 
  5200   00016C                     C1FIFOSTA2      equ	364	;# 
  5201   00016C                     C1FIFOSTA2L     equ	364	;# 
  5202   00016D                     C1FIFOSTA2H     equ	365	;# 
  5203   00016E                     C1FIFOSTA2U     equ	366	;# 
  5204   00016F                     C1FIFOSTA2T     equ	367	;# 
  5205   000170                     C1FIFOUA2       equ	368	;# 
  5206   000170                     C1FIFOUA2L      equ	368	;# 
  5207   000171                     C1FIFOUA2H      equ	369	;# 
  5208   000172                     C1FIFOUA2U      equ	370	;# 
  5209   000173                     C1FIFOUA2T      equ	371	;# 
  5210   000174                     C1FIFOCON3      equ	372	;# 
  5211   000174                     C1FIFOCON3L     equ	372	;# 
  5212   000175                     C1FIFOCON3H     equ	373	;# 
  5213   000176                     C1FIFOCON3U     equ	374	;# 
  5214   000177                     C1FIFOCON3T     equ	375	;# 
  5215   000178                     C1FIFOSTA3      equ	376	;# 
  5216   000178                     C1FIFOSTA3L     equ	376	;# 
  5217   000179                     C1FIFOSTA3H     equ	377	;# 
  5218   00017A                     C1FIFOSTA3U     equ	378	;# 
  5219   00017B                     C1FIFOSTA3T     equ	379	;# 
  5220   00017C                     C1FIFOUA3       equ	380	;# 
  5221   00017C                     C1FIFOUA3L      equ	380	;# 
  5222   00017D                     C1FIFOUA3H      equ	381	;# 
  5223   00017E                     C1FIFOUA3U      equ	382	;# 
  5224   00017F                     C1FIFOUA3T      equ	383	;# 
  5225   000180                     C1FLTCON0L      equ	384	;# 
  5226   000181                     C1FLTCON0H      equ	385	;# 
  5227   000182                     C1FLTCON0U      equ	386	;# 
  5228   000183                     C1FLTCON0T      equ	387	;# 
  5229   000184                     C1FLTCON1L      equ	388	;# 
  5230   000185                     C1FLTCON1H      equ	389	;# 
  5231   000186                     C1FLTCON1U      equ	390	;# 
  5232   000187                     C1FLTCON1T      equ	391	;# 
  5233   000188                     C1FLTCON2L      equ	392	;# 
  5234   000189                     C1FLTCON2H      equ	393	;# 
  5235   00018A                     C1FLTCON2U      equ	394	;# 
  5236   00018B                     C1FLTCON2T      equ	395	;# 
  5237   00018C                     C1FLTOBJ0       equ	396	;# 
  5238   00018C                     C1FLTOBJ0L      equ	396	;# 
  5239   00018D                     C1FLTOBJ0H      equ	397	;# 
  5240   00018E                     C1FLTOBJ0U      equ	398	;# 
  5241   00018F                     C1FLTOBJ0T      equ	399	;# 
  5242   000190                     C1MASK0         equ	400	;# 
  5243   000190                     C1MASK0L        equ	400	;# 
  5244   000191                     C1MASK0H        equ	401	;# 
  5245   000192                     C1MASK0U        equ	402	;# 
  5246   000193                     C1MASK0T        equ	403	;# 
  5247   000194                     C1FLTOBJ1       equ	404	;# 
  5248   000194                     C1FLTOBJ1L      equ	404	;# 
  5249   000195                     C1FLTOBJ1H      equ	405	;# 
  5250   000196                     C1FLTOBJ1U      equ	406	;# 
  5251   000197                     C1FLTOBJ1T      equ	407	;# 
  5252   000198                     C1MASK1         equ	408	;# 
  5253   000198                     C1MASK1L        equ	408	;# 
  5254   000199                     C1MASK1H        equ	409	;# 
  5255   00019A                     C1MASK1U        equ	410	;# 
  5256   00019B                     C1MASK1T        equ	411	;# 
  5257   00019C                     C1FLTOBJ2       equ	412	;# 
  5258   00019C                     C1FLTOBJ2L      equ	412	;# 
  5259   00019D                     C1FLTOBJ2H      equ	413	;# 
  5260   00019E                     C1FLTOBJ2U      equ	414	;# 
  5261   00019F                     C1FLTOBJ2T      equ	415	;# 
  5262   0001A0                     C1MASK2         equ	416	;# 
  5263   0001A0                     C1MASK2L        equ	416	;# 
  5264   0001A1                     C1MASK2H        equ	417	;# 
  5265   0001A2                     C1MASK2U        equ	418	;# 
  5266   0001A3                     C1MASK2T        equ	419	;# 
  5267   0001A4                     C1FLTOBJ3       equ	420	;# 
  5268   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5269   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5270   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5271   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5272   0001A8                     C1MASK3         equ	424	;# 
  5273   0001A8                     C1MASK3L        equ	424	;# 
  5274   0001A9                     C1MASK3H        equ	425	;# 
  5275   0001AA                     C1MASK3U        equ	426	;# 
  5276   0001AB                     C1MASK3T        equ	427	;# 
  5277   0001AC                     C1FLTOBJ4       equ	428	;# 
  5278   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5279   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5280   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5281   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5282   0001B0                     C1MASK4         equ	432	;# 
  5283   0001B0                     C1MASK4L        equ	432	;# 
  5284   0001B1                     C1MASK4H        equ	433	;# 
  5285   0001B2                     C1MASK4U        equ	434	;# 
  5286   0001B3                     C1MASK4T        equ	435	;# 
  5287   0001B4                     C1FLTOBJ5       equ	436	;# 
  5288   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5289   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5290   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5291   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5292   0001B8                     C1MASK5         equ	440	;# 
  5293   0001B8                     C1MASK5L        equ	440	;# 
  5294   0001B9                     C1MASK5H        equ	441	;# 
  5295   0001BA                     C1MASK5U        equ	442	;# 
  5296   0001BB                     C1MASK5T        equ	443	;# 
  5297   0001BC                     C1FLTOBJ6       equ	444	;# 
  5298   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5299   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5300   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5301   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5302   0001C0                     C1MASK6         equ	448	;# 
  5303   0001C0                     C1MASK6L        equ	448	;# 
  5304   0001C1                     C1MASK6H        equ	449	;# 
  5305   0001C2                     C1MASK6U        equ	450	;# 
  5306   0001C3                     C1MASK6T        equ	451	;# 
  5307   0001C4                     C1FLTOBJ7       equ	452	;# 
  5308   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5309   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5310   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5311   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5312   0001C8                     C1MASK7         equ	456	;# 
  5313   0001C8                     C1MASK7L        equ	456	;# 
  5314   0001C9                     C1MASK7H        equ	457	;# 
  5315   0001CA                     C1MASK7U        equ	458	;# 
  5316   0001CB                     C1MASK7T        equ	459	;# 
  5317   0001CC                     C1FLTOBJ8       equ	460	;# 
  5318   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5319   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5320   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5321   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5322   0001D0                     C1MASK8         equ	464	;# 
  5323   0001D0                     C1MASK8L        equ	464	;# 
  5324   0001D1                     C1MASK8H        equ	465	;# 
  5325   0001D2                     C1MASK8U        equ	466	;# 
  5326   0001D3                     C1MASK8T        equ	467	;# 
  5327   0001D4                     C1FLTOBJ9       equ	468	;# 
  5328   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5329   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5330   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5331   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5332   0001D8                     C1MASK9         equ	472	;# 
  5333   0001D8                     C1MASK9L        equ	472	;# 
  5334   0001D9                     C1MASK9H        equ	473	;# 
  5335   0001DA                     C1MASK9U        equ	474	;# 
  5336   0001DB                     C1MASK9T        equ	475	;# 
  5337   0001DC                     C1FLTOBJ10      equ	476	;# 
  5338   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5339   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5340   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5341   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5342   0001E0                     C1MASK10        equ	480	;# 
  5343   0001E0                     C1MASK10L       equ	480	;# 
  5344   0001E1                     C1MASK10H       equ	481	;# 
  5345   0001E2                     C1MASK10U       equ	482	;# 
  5346   0001E3                     C1MASK10T       equ	483	;# 
  5347   0001E4                     C1FLTOBJ11      equ	484	;# 
  5348   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5349   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5350   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5351   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5352   0001E8                     C1MASK11        equ	488	;# 
  5353   0001E8                     C1MASK11L       equ	488	;# 
  5354   0001E9                     C1MASK11H       equ	489	;# 
  5355   0001EA                     C1MASK11U       equ	490	;# 
  5356   0001EB                     C1MASK11T       equ	491	;# 
  5357   000200                     PPSLOCK         equ	512	;# 
  5358   000201                     RA0PPS          equ	513	;# 
  5359   000202                     RA1PPS          equ	514	;# 
  5360   000203                     RA2PPS          equ	515	;# 
  5361   000204                     RA3PPS          equ	516	;# 
  5362   000205                     RA4PPS          equ	517	;# 
  5363   000206                     RA5PPS          equ	518	;# 
  5364   000207                     RA6PPS          equ	519	;# 
  5365   000208                     RA7PPS          equ	520	;# 
  5366   000209                     RB0PPS          equ	521	;# 
  5367   00020A                     RB1PPS          equ	522	;# 
  5368   00020B                     RB2PPS          equ	523	;# 
  5369   00020C                     RB3PPS          equ	524	;# 
  5370   00020D                     RB4PPS          equ	525	;# 
  5371   00020E                     RB5PPS          equ	526	;# 
  5372   00020F                     RB6PPS          equ	527	;# 
  5373   000210                     RB7PPS          equ	528	;# 
  5374   000211                     RC0PPS          equ	529	;# 
  5375   000212                     RC1PPS          equ	530	;# 
  5376   000213                     RC2PPS          equ	531	;# 
  5377   000214                     RC3PPS          equ	532	;# 
  5378   000215                     RC4PPS          equ	533	;# 
  5379   000216                     RC5PPS          equ	534	;# 
  5380   000217                     RC6PPS          equ	535	;# 
  5381   000218                     RC7PPS          equ	536	;# 
  5382   00023D                     CANRXPPS        equ	573	;# 
  5383   00023E                     INT0PPS         equ	574	;# 
  5384   00023F                     INT1PPS         equ	575	;# 
  5385   000240                     INT2PPS         equ	576	;# 
  5386   000241                     T0CKIPPS        equ	577	;# 
  5387   000242                     T1CKIPPS        equ	578	;# 
  5388   000243                     T1GPPS          equ	579	;# 
  5389   000244                     T3CKIPPS        equ	580	;# 
  5390   000245                     T3GPPS          equ	581	;# 
  5391   000246                     T5CKIPPS        equ	582	;# 
  5392   000247                     T5GPPS          equ	583	;# 
  5393   000248                     T2INPPS         equ	584	;# 
  5394   000249                     T4INPPS         equ	585	;# 
  5395   00024A                     T6INPPS         equ	586	;# 
  5396   00024B                     TUIN0PPS        equ	587	;# 
  5397   00024C                     TUIN1PPS        equ	588	;# 
  5398   00024F                     CCP1PPS         equ	591	;# 
  5399   000250                     CCP2PPS         equ	592	;# 
  5400   000251                     CCP3PPS         equ	593	;# 
  5401   000253                     PWM1ERSPPS      equ	595	;# 
  5402   000254                     PWM2ERSPPS      equ	596	;# 
  5403   000255                     PWM3ERSPPS      equ	597	;# 
  5404   000256                     PWM4ERSPPS      equ	598	;# 
  5405   000257                     PWMIN0PPS       equ	599	;# 
  5406   000258                     PWMIN1PPS       equ	600	;# 
  5407   000259                     SMT1WINPPS      equ	601	;# 
  5408   00025A                     SMT1SIGPPS      equ	602	;# 
  5409   00025B                     CWG1PPS         equ	603	;# 
  5410   00025B                     CWG1INPPS       equ	603	;# 
  5411   00025C                     CWG2PPS         equ	604	;# 
  5412   00025C                     CWG2INPPS       equ	604	;# 
  5413   00025D                     CWG3PPS         equ	605	;# 
  5414   00025D                     CWG3INPPS       equ	605	;# 
  5415   00025E                     MD1CARLPPS      equ	606	;# 
  5416   00025E                     MDCARLPPS       equ	606	;# 
  5417   00025F                     MD1CARHPPS      equ	607	;# 
  5418   00025F                     MDCARHPPS       equ	607	;# 
  5419   000260                     MD1SRCPPS       equ	608	;# 
  5420   000260                     MDSRCPPS        equ	608	;# 
  5421   000261                     CLCIN0PPS       equ	609	;# 
  5422   000262                     CLCIN1PPS       equ	610	;# 
  5423   000263                     CLCIN2PPS       equ	611	;# 
  5424   000264                     CLCIN3PPS       equ	612	;# 
  5425   000265                     CLCIN4PPS       equ	613	;# 
  5426   000266                     CLCIN5PPS       equ	614	;# 
  5427   000267                     CLCIN6PPS       equ	615	;# 
  5428   000268                     CLCIN7PPS       equ	616	;# 
  5429   000269                     ADACTPPS        equ	617	;# 
  5430   00026A                     SPI1SCKPPS      equ	618	;# 
  5431   00026B                     SPI1SDIPPS      equ	619	;# 
  5432   00026C                     SPI1SSPPS       equ	620	;# 
  5433   00026D                     SPI2SCKPPS      equ	621	;# 
  5434   00026E                     SPI2SDIPPS      equ	622	;# 
  5435   00026F                     SPI2SSPPS       equ	623	;# 
  5436   000270                     I2C1SDAPPS      equ	624	;# 
  5437   000271                     I2C1SCLPPS      equ	625	;# 
  5438   000272                     U1RXPPS         equ	626	;# 
  5439   000273                     U1CTSPPS        equ	627	;# 
  5440   000274                     U2RXPPS         equ	628	;# 
  5441   000275                     U2CTSPPS        equ	629	;# 
  5442   000276                     U3RXPPS         equ	630	;# 
  5443   000277                     U3CTSPPS        equ	631	;# 
  5444   000278                     U4RXPPS         equ	632	;# 
  5445   000279                     U4CTSPPS        equ	633	;# 
  5446   00027A                     U5RXPPS         equ	634	;# 
  5447   00027B                     U5CTSPPS        equ	635	;# 
  5448   000286                     RC4I2C          equ	646	;# 
  5449   000287                     RC3I2C          equ	647	;# 
  5450   000288                     RB2I2C          equ	648	;# 
  5451   000289                     RB1I2C          equ	649	;# 
  5452   00028A                     I2C1RXB         equ	650	;# 
  5453   00028B                     I2C1TXB         equ	651	;# 
  5454   00028C                     I2C1CNTL        equ	652	;# 
  5455   00028D                     I2C1CNTH        equ	653	;# 
  5456   00028E                     I2C1ADB0        equ	654	;# 
  5457   00028F                     I2C1ADB1        equ	655	;# 
  5458   000290                     I2C1ADR0        equ	656	;# 
  5459   000291                     I2C1ADR1        equ	657	;# 
  5460   000292                     I2C1ADR2        equ	658	;# 
  5461   000293                     I2C1ADR3        equ	659	;# 
  5462   000294                     I2C1CON0        equ	660	;# 
  5463   000295                     I2C1CON1        equ	661	;# 
  5464   000296                     I2C1CON2        equ	662	;# 
  5465   000297                     I2C1ERR         equ	663	;# 
  5466   000298                     I2C1STAT0       equ	664	;# 
  5467   000299                     I2C1STAT1       equ	665	;# 
  5468   00029A                     I2C1PIR         equ	666	;# 
  5469   00029B                     I2C1PIE         equ	667	;# 
  5470   00029C                     I2C1BTO         equ	668	;# 
  5471   00029D                     I2C1BAUD        equ	669	;# 
  5472   00029E                     I2C1CLK         equ	670	;# 
  5473   00029F                     I2C1BTOC        equ	671	;# 
  5474   0002A1                     U1RXB           equ	673	;# 
  5475   0002A1                     U1RXBL          equ	673	;# 
  5476   0002A2                     U1RXCHK         equ	674	;# 
  5477   0002A3                     U1TXB           equ	675	;# 
  5478   0002A3                     U1TXBL          equ	675	;# 
  5479   0002A4                     U1TXCHK         equ	676	;# 
  5480   0002A5                     U1P1            equ	677	;# 
  5481   0002A5                     U1P1L           equ	677	;# 
  5482   0002A6                     U1P1H           equ	678	;# 
  5483   0002A7                     U1P2            equ	679	;# 
  5484   0002A7                     U1P2L           equ	679	;# 
  5485   0002A8                     U1P2H           equ	680	;# 
  5486   0002A9                     U1P3            equ	681	;# 
  5487   0002A9                     U1P3L           equ	681	;# 
  5488   0002AA                     U1P3H           equ	682	;# 
  5489   0002AB                     U1CON0          equ	683	;# 
  5490   0002AC                     U1CON1          equ	684	;# 
  5491   0002AD                     U1CON2          equ	685	;# 
  5492   0002AE                     U1BRG           equ	686	;# 
  5493   0002AE                     U1BRGL          equ	686	;# 
  5494   0002AF                     U1BRGH          equ	687	;# 
  5495   0002B0                     U1FIFO          equ	688	;# 
  5496   0002B1                     U1UIR           equ	689	;# 
  5497   0002B2                     U1ERRIR         equ	690	;# 
  5498   0002B3                     U1ERRIE         equ	691	;# 
  5499   0002B4                     U2RXB           equ	692	;# 
  5500   0002B4                     U2RXBL          equ	692	;# 
  5501   0002B5                     U2RXCHK         equ	693	;# 
  5502   0002B6                     U2TXB           equ	694	;# 
  5503   0002B6                     U2TXBL          equ	694	;# 
  5504   0002B7                     U2TXCHK         equ	695	;# 
  5505   0002B8                     U2P1            equ	696	;# 
  5506   0002B8                     U2P1L           equ	696	;# 
  5507   0002B9                     U2P1H           equ	697	;# 
  5508   0002BA                     U2P2            equ	698	;# 
  5509   0002BA                     U2P2L           equ	698	;# 
  5510   0002BB                     U2P2H           equ	699	;# 
  5511   0002BC                     U2P3            equ	700	;# 
  5512   0002BC                     U2P3L           equ	700	;# 
  5513   0002BD                     U2P3H           equ	701	;# 
  5514   0002BE                     U2CON0          equ	702	;# 
  5515   0002BF                     U2CON1          equ	703	;# 
  5516   0002C0                     U2CON2          equ	704	;# 
  5517   0002C1                     U2BRG           equ	705	;# 
  5518   0002C1                     U2BRGL          equ	705	;# 
  5519   0002C2                     U2BRGH          equ	706	;# 
  5520   0002C3                     U2FIFO          equ	707	;# 
  5521   0002C4                     U2UIR           equ	708	;# 
  5522   0002C5                     U2ERRIR         equ	709	;# 
  5523   0002C6                     U2ERRIE         equ	710	;# 
  5524   0002C7                     U3RXB           equ	711	;# 
  5525   0002C7                     U3RXBL          equ	711	;# 
  5526   0002C9                     U3TXB           equ	713	;# 
  5527   0002C9                     U3TXBL          equ	713	;# 
  5528   0002CB                     U3P1            equ	715	;# 
  5529   0002CB                     U3P1L           equ	715	;# 
  5530   0002CD                     U3P2            equ	717	;# 
  5531   0002CD                     U3P2L           equ	717	;# 
  5532   0002CF                     U3P3            equ	719	;# 
  5533   0002CF                     U3P3L           equ	719	;# 
  5534   0002D1                     U3CON0          equ	721	;# 
  5535   0002D2                     U3CON1          equ	722	;# 
  5536   0002D3                     U3CON2          equ	723	;# 
  5537   0002D4                     U3BRG           equ	724	;# 
  5538   0002D4                     U3BRGL          equ	724	;# 
  5539   0002D5                     U3BRGH          equ	725	;# 
  5540   0002D6                     U3FIFO          equ	726	;# 
  5541   0002D7                     U3UIR           equ	727	;# 
  5542   0002D8                     U3ERRIR         equ	728	;# 
  5543   0002D9                     U3ERRIE         equ	729	;# 
  5544   0002DA                     U4RXB           equ	730	;# 
  5545   0002DA                     U4RXBL          equ	730	;# 
  5546   0002DC                     U4TXB           equ	732	;# 
  5547   0002DC                     U4TXBL          equ	732	;# 
  5548   0002DE                     U4P1            equ	734	;# 
  5549   0002DE                     U4P1L           equ	734	;# 
  5550   0002E0                     U4P2            equ	736	;# 
  5551   0002E0                     U4P2L           equ	736	;# 
  5552   0002E2                     U4P3            equ	738	;# 
  5553   0002E2                     U4P3L           equ	738	;# 
  5554   0002E4                     U4CON0          equ	740	;# 
  5555   0002E5                     U4CON1          equ	741	;# 
  5556   0002E6                     U4CON2          equ	742	;# 
  5557   0002E7                     U4BRG           equ	743	;# 
  5558   0002E7                     U4BRGL          equ	743	;# 
  5559   0002E8                     U4BRGH          equ	744	;# 
  5560   0002E9                     U4FIFO          equ	745	;# 
  5561   0002EA                     U4UIR           equ	746	;# 
  5562   0002EB                     U4ERRIR         equ	747	;# 
  5563   0002EC                     U4ERRIE         equ	748	;# 
  5564   0002ED                     U5RXB           equ	749	;# 
  5565   0002ED                     U5RXBL          equ	749	;# 
  5566   0002EF                     U5TXB           equ	751	;# 
  5567   0002EF                     U5TXBL          equ	751	;# 
  5568   0002F1                     U5P1            equ	753	;# 
  5569   0002F1                     U5P1L           equ	753	;# 
  5570   0002F3                     U5P2            equ	755	;# 
  5571   0002F3                     U5P2L           equ	755	;# 
  5572   0002F5                     U5P3            equ	757	;# 
  5573   0002F5                     U5P3L           equ	757	;# 
  5574   0002F7                     U5CON0          equ	759	;# 
  5575   0002F8                     U5CON1          equ	760	;# 
  5576   0002F9                     U5CON2          equ	761	;# 
  5577   0002FA                     U5BRG           equ	762	;# 
  5578   0002FA                     U5BRGL          equ	762	;# 
  5579   0002FB                     U5BRGH          equ	763	;# 
  5580   0002FC                     U5FIFO          equ	764	;# 
  5581   0002FD                     U5UIR           equ	765	;# 
  5582   0002FE                     U5ERRIR         equ	766	;# 
  5583   0002FF                     U5ERRIE         equ	767	;# 
  5584   000300                     SMT1TMR         equ	768	;# 
  5585   000300                     SMT1TMRL        equ	768	;# 
  5586   000301                     SMT1TMRH        equ	769	;# 
  5587   000302                     SMT1TMRU        equ	770	;# 
  5588   000303                     SMT1CPR         equ	771	;# 
  5589   000303                     SMT1CPRL        equ	771	;# 
  5590   000304                     SMT1CPRH        equ	772	;# 
  5591   000305                     SMT1CPRU        equ	773	;# 
  5592   000306                     SMT1CPW         equ	774	;# 
  5593   000306                     SMT1CPWL        equ	774	;# 
  5594   000307                     SMT1CPWH        equ	775	;# 
  5595   000308                     SMT1CPWU        equ	776	;# 
  5596   000309                     SMT1PR          equ	777	;# 
  5597   000309                     SMT1PRL         equ	777	;# 
  5598   00030A                     SMT1PRH         equ	778	;# 
  5599   00030B                     SMT1PRU         equ	779	;# 
  5600   00030C                     SMT1CON0        equ	780	;# 
  5601   00030D                     SMT1CON1        equ	781	;# 
  5602   00030E                     SMT1STAT        equ	782	;# 
  5603   00030F                     SMT1CLK         equ	783	;# 
  5604   000310                     SMT1SIG         equ	784	;# 
  5605   000311                     SMT1WIN         equ	785	;# 
  5606   000318                     TMR0L           equ	792	;# 
  5607   000318                     TMR0            equ	792	;# 
  5608   000319                     TMR0H           equ	793	;# 
  5609   000319                     PR0             equ	793	;# 
  5610   00031A                     T0CON0          equ	794	;# 
  5611   00031B                     T0CON1          equ	795	;# 
  5612   00031C                     TMR1            equ	796	;# 
  5613   00031C                     TMR1L           equ	796	;# 
  5614   00031D                     TMR1H           equ	797	;# 
  5615   00031E                     T1CON           equ	798	;# 
  5616   00031E                     TMR1CON         equ	798	;# 
  5617   00031F                     T1GCON          equ	799	;# 
  5618   00031F                     TMR1GCON        equ	799	;# 
  5619   000320                     T1GATE          equ	800	;# 
  5620   000320                     TMR1GATE        equ	800	;# 
  5621   000321                     T1CLK           equ	801	;# 
  5622   000321                     TMR1CLK         equ	801	;# 
  5623   000321                     PR1             equ	801	;# 
  5624   000322                     T2TMR           equ	802	;# 
  5625   000322                     TMR2            equ	802	;# 
  5626   000323                     T2PR            equ	803	;# 
  5627   000323                     PR2             equ	803	;# 
  5628   000324                     T2CON           equ	804	;# 
  5629   000325                     T2HLT           equ	805	;# 
  5630   000326                     T2CLKCON        equ	806	;# 
  5631   000326                     T2CLK           equ	806	;# 
  5632   000327                     T2RST           equ	807	;# 
  5633   000328                     TMR3            equ	808	;# 
  5634   000328                     TMR3L           equ	808	;# 
  5635   000329                     TMR3H           equ	809	;# 
  5636   00032A                     T3CON           equ	810	;# 
  5637   00032A                     TMR3CON         equ	810	;# 
  5638   00032B                     T3GCON          equ	811	;# 
  5639   00032B                     TMR3GCON        equ	811	;# 
  5640   00032C                     T3GATE          equ	812	;# 
  5641   00032C                     TMR3GATE        equ	812	;# 
  5642   00032D                     T3CLK           equ	813	;# 
  5643   00032D                     TMR3CLK         equ	813	;# 
  5644   00032D                     PR3             equ	813	;# 
  5645   00032E                     T4TMR           equ	814	;# 
  5646   00032E                     TMR4            equ	814	;# 
  5647   00032F                     T4PR            equ	815	;# 
  5648   00032F                     PR4             equ	815	;# 
  5649   000330                     T4CON           equ	816	;# 
  5650   000331                     T4HLT           equ	817	;# 
  5651   000332                     T4CLKCON        equ	818	;# 
  5652   000332                     T4CLK           equ	818	;# 
  5653   000333                     T4RST           equ	819	;# 
  5654   000334                     TMR5            equ	820	;# 
  5655   000334                     TMR5L           equ	820	;# 
  5656   000335                     TMR5H           equ	821	;# 
  5657   000336                     T5CON           equ	822	;# 
  5658   000336                     TMR5CON         equ	822	;# 
  5659   000337                     T5GCON          equ	823	;# 
  5660   000337                     TMR5GCON        equ	823	;# 
  5661   000338                     T5GATE          equ	824	;# 
  5662   000338                     TMR5GATE        equ	824	;# 
  5663   000339                     T5CLK           equ	825	;# 
  5664   000339                     TMR5CLK         equ	825	;# 
  5665   000339                     PR5             equ	825	;# 
  5666   00033A                     T6TMR           equ	826	;# 
  5667   00033A                     TMR6            equ	826	;# 
  5668   00033B                     T6PR            equ	827	;# 
  5669   00033B                     PR6             equ	827	;# 
  5670   00033C                     T6CON           equ	828	;# 
  5671   00033D                     T6HLT           equ	829	;# 
  5672   00033E                     T6CLKCON        equ	830	;# 
  5673   00033E                     T6CLK           equ	830	;# 
  5674   00033F                     T6RST           equ	831	;# 
  5675   000340                     CCPR1           equ	832	;# 
  5676   000340                     CCPR1L          equ	832	;# 
  5677   000341                     CCPR1H          equ	833	;# 
  5678   000342                     CCP1CON         equ	834	;# 
  5679   000343                     CCP1CAP         equ	835	;# 
  5680   000344                     CCPR2           equ	836	;# 
  5681   000344                     CCPR2L          equ	836	;# 
  5682   000345                     CCPR2H          equ	837	;# 
  5683   000346                     CCP2CON         equ	838	;# 
  5684   000347                     CCP2CAP         equ	839	;# 
  5685   000348                     CCPR3           equ	840	;# 
  5686   000348                     CCPR3L          equ	840	;# 
  5687   000349                     CCPR3H          equ	841	;# 
  5688   00034A                     CCP3CON         equ	842	;# 
  5689   00034B                     CCP3CAP         equ	843	;# 
  5690   00034C                     CCPTMRS0        equ	844	;# 
  5691   00034F                     CRCDATA         equ	847	;# 
  5692   00034F                     CRCDATAL        equ	847	;# 
  5693   000350                     CRCDATAH        equ	848	;# 
  5694   000351                     CRCDATAU        equ	849	;# 
  5695   000352                     CRCDATAT        equ	850	;# 
  5696   000353                     CRCOUT          equ	851	;# 
  5697   000353                     CRCSHFT         equ	851	;# 
  5698   000353                     CRCXOR          equ	851	;# 
  5699   000353                     CRCOUTL         equ	851	;# 
  5700   000353                     CRCSHFTL        equ	851	;# 
  5701   000353                     CRCSHIFTL       equ	851	;# 
  5702   000353                     CRCXORL         equ	851	;# 
  5703   000354                     CRCOUTH         equ	852	;# 
  5704   000354                     CRCSHFTH        equ	852	;# 
  5705   000354                     CRCSHIFTH       equ	852	;# 
  5706   000354                     CRCXORH         equ	852	;# 
  5707   000355                     CRCOUTU         equ	853	;# 
  5708   000355                     CRCSHFTU        equ	853	;# 
  5709   000355                     CRCSHIFTU       equ	853	;# 
  5710   000355                     CRCXORU         equ	853	;# 
  5711   000356                     CRCOUTT         equ	854	;# 
  5712   000356                     CRCSHFTT        equ	854	;# 
  5713   000356                     CRCSHIFTT       equ	854	;# 
  5714   000356                     CRCXORT         equ	854	;# 
  5715   000357                     CRCCON0         equ	855	;# 
  5716   000358                     CRCCON1         equ	856	;# 
  5717   000359                     CRCCON2         equ	857	;# 
  5718   00035A                     SCANLADR        equ	858	;# 
  5719   00035A                     SCANLADRL       equ	858	;# 
  5720   00035B                     SCANLADRH       equ	859	;# 
  5721   00035C                     SCANLADRU       equ	860	;# 
  5722   00035D                     SCANHADR        equ	861	;# 
  5723   00035D                     SCANHADRL       equ	861	;# 
  5724   00035E                     SCANHADRH       equ	862	;# 
  5725   00035F                     SCANHADRU       equ	863	;# 
  5726   000360                     SCANCON0        equ	864	;# 
  5727   000361                     SCANTRIG        equ	865	;# 
  5728   000362                     IPR0            equ	866	;# 
  5729   000363                     IPR1            equ	867	;# 
  5730   000364                     IPR2            equ	868	;# 
  5731   000365                     IPR3            equ	869	;# 
  5732   000366                     IPR4            equ	870	;# 
  5733   000367                     IPR5            equ	871	;# 
  5734   000368                     IPR6            equ	872	;# 
  5735   000369                     IPR7            equ	873	;# 
  5736   00036A                     IPR8            equ	874	;# 
  5737   00036B                     IPR9            equ	875	;# 
  5738   00036C                     IPR10           equ	876	;# 
  5739   00036D                     IPR11           equ	877	;# 
  5740   00036E                     IPR12           equ	878	;# 
  5741   00036F                     IPR13           equ	879	;# 
  5742   000370                     IPR14           equ	880	;# 
  5743   000371                     IPR15           equ	881	;# 
  5744   000373                     STATUS_CSHAD    equ	883	;# 
  5745   000374                     WREG_CSHAD      equ	884	;# 
  5746   000375                     BSR_CSHAD       equ	885	;# 
  5747   000376                     SHADCON         equ	886	;# 
  5748   000377                     STATUS_SHAD     equ	887	;# 
  5749   000378                     WREG_SHAD       equ	888	;# 
  5750   000379                     BSR_SHAD        equ	889	;# 
  5751   00037A                     PCLATH_SHAD     equ	890	;# 
  5752   00037B                     PCLATU_SHAD     equ	891	;# 
  5753   00037C                     FSR0SH          equ	892	;# 
  5754   00037C                     FSR0L_SHAD      equ	892	;# 
  5755   00037D                     FSR0H_SHAD      equ	893	;# 
  5756   00037E                     FSR1SH          equ	894	;# 
  5757   00037E                     FSR1L_SHAD      equ	894	;# 
  5758   00037F                     FSR1H_SHAD      equ	895	;# 
  5759   000380                     FSR2SH          equ	896	;# 
  5760   000380                     FSR2L_SHAD      equ	896	;# 
  5761   000381                     FSR2H_SHAD      equ	897	;# 
  5762   000382                     PRODSH          equ	898	;# 
  5763   000382                     PRODL_SHAD      equ	898	;# 
  5764   000383                     PRODH_SHAD      equ	899	;# 
  5765   000387                     TU16ACON0       equ	903	;# 
  5766   000388                     TU16ACON1       equ	904	;# 
  5767   000389                     TU16AHLT        equ	905	;# 
  5768   00038A                     TU16APS         equ	906	;# 
  5769   00038B                     TU16ATMR        equ	907	;# 
  5770   00038B                     TU16ACR         equ	907	;# 
  5771   00038B                     TU16ATMRL       equ	907	;# 
  5772   00038B                     TU16ACRL        equ	907	;# 
  5773   00038C                     TU16ATMRH       equ	908	;# 
  5774   00038C                     TU16ACRH        equ	908	;# 
  5775   00038D                     TU16APR         equ	909	;# 
  5776   00038D                     TU16APRL        equ	909	;# 
  5777   00038E                     TU16APRH        equ	910	;# 
  5778   00038F                     TU16ACLK        equ	911	;# 
  5779   000390                     TU16AERS        equ	912	;# 
  5780   000393                     TU16BCON0       equ	915	;# 
  5781   000394                     TU16BCON1       equ	916	;# 
  5782   000395                     TU16BHLT        equ	917	;# 
  5783   000396                     TU16BPS         equ	918	;# 
  5784   000397                     TU16BTMR        equ	919	;# 
  5785   000397                     TU16BCR         equ	919	;# 
  5786   000397                     TU16BTMRL       equ	919	;# 
  5787   000397                     TU16BCRL        equ	919	;# 
  5788   000398                     TU16BTMRH       equ	920	;# 
  5789   000398                     TU16BCRH        equ	920	;# 
  5790   000399                     TU16BPR         equ	921	;# 
  5791   000399                     TU16BPRL        equ	921	;# 
  5792   00039A                     TU16BPRH        equ	922	;# 
  5793   00039B                     TU16BCLK        equ	923	;# 
  5794   00039C                     TU16BERS        equ	924	;# 
  5795   0003BB                     TUCHAIN         equ	955	;# 
  5796   0003BC                     CWG1CLK         equ	956	;# 
  5797   0003BC                     CWG1CLKCON      equ	956	;# 
  5798   0003BD                     CWG1ISM         equ	957	;# 
  5799   0003BE                     CWG1DBR         equ	958	;# 
  5800   0003BF                     CWG1DBF         equ	959	;# 
  5801   0003C0                     CWG1CON0        equ	960	;# 
  5802   0003C1                     CWG1CON1        equ	961	;# 
  5803   0003C2                     CWG1AS0         equ	962	;# 
  5804   0003C3                     CWG1AS1         equ	963	;# 
  5805   0003C4                     CWG1STR         equ	964	;# 
  5806   0003C5                     CWG2CLK         equ	965	;# 
  5807   0003C5                     CWG2CLKCON      equ	965	;# 
  5808   0003C6                     CWG2ISM         equ	966	;# 
  5809   0003C7                     CWG2DBR         equ	967	;# 
  5810   0003C8                     CWG2DBF         equ	968	;# 
  5811   0003C9                     CWG2CON0        equ	969	;# 
  5812   0003CA                     CWG2CON1        equ	970	;# 
  5813   0003CB                     CWG2AS0         equ	971	;# 
  5814   0003CC                     CWG2AS1         equ	972	;# 
  5815   0003CD                     CWG2STR         equ	973	;# 
  5816   0003CE                     CWG3CLK         equ	974	;# 
  5817   0003CE                     CWG3CLKCON      equ	974	;# 
  5818   0003CF                     CWG3ISM         equ	975	;# 
  5819   0003D0                     CWG3DBR         equ	976	;# 
  5820   0003D1                     CWG3DBF         equ	977	;# 
  5821   0003D2                     CWG3CON0        equ	978	;# 
  5822   0003D3                     CWG3CON1        equ	979	;# 
  5823   0003D4                     CWG3AS0         equ	980	;# 
  5824   0003D5                     CWG3AS1         equ	981	;# 
  5825   0003D6                     CWG3STR         equ	982	;# 
  5826   0003D7                     FVRCON          equ	983	;# 
  5827   0003D8                     ADCPCON         equ	984	;# 
  5828   0003D8                     ADCP            equ	984	;# 
  5829   0003D9                     ADLTH           equ	985	;# 
  5830   0003D9                     ADLTHL          equ	985	;# 
  5831   0003DA                     ADLTHH          equ	986	;# 
  5832   0003DB                     ADUTH           equ	987	;# 
  5833   0003DB                     ADUTHL          equ	987	;# 
  5834   0003DC                     ADUTHH          equ	988	;# 
  5835   0003DD                     ADERR           equ	989	;# 
  5836   0003DD                     ADERRL          equ	989	;# 
  5837   0003DE                     ADERRH          equ	990	;# 
  5838   0003DF                     ADSTPT          equ	991	;# 
  5839   0003DF                     ADSTPTL         equ	991	;# 
  5840   0003E0                     ADSTPTH         equ	992	;# 
  5841   0003E1                     ADFLTR          equ	993	;# 
  5842   0003E1                     ADFLTRL         equ	993	;# 
  5843   0003E2                     ADFLTRH         equ	994	;# 
  5844   0003E3                     ADACC           equ	995	;# 
  5845   0003E3                     ADACCL          equ	995	;# 
  5846   0003E4                     ADACCH          equ	996	;# 
  5847   0003E5                     ADACCU          equ	997	;# 
  5848   0003E6                     ADCNT           equ	998	;# 
  5849   0003E7                     ADRPT           equ	999	;# 
  5850   0003E8                     ADPREV          equ	1000	;# 
  5851   0003E8                     ADPREVL         equ	1000	;# 
  5852   0003E9                     ADPREVH         equ	1001	;# 
  5853   0003EA                     ADRES           equ	1002	;# 
  5854   0003EA                     ADRESL          equ	1002	;# 
  5855   0003EB                     ADRESH          equ	1003	;# 
  5856   0003EC                     ADPCH           equ	1004	;# 
  5857   0003EE                     ADACQ           equ	1006	;# 
  5858   0003EE                     ADACQL          equ	1006	;# 
  5859   0003EF                     ADACQH          equ	1007	;# 
  5860   0003F0                     ADCAP           equ	1008	;# 
  5861   0003F1                     ADPRE           equ	1009	;# 
  5862   0003F1                     ADPREL          equ	1009	;# 
  5863   0003F2                     ADPREH          equ	1010	;# 
  5864   0003F3                     ADCON0          equ	1011	;# 
  5865   0003F4                     ADCON1          equ	1012	;# 
  5866   0003F5                     ADCON2          equ	1013	;# 
  5867   0003F6                     ADCON3          equ	1014	;# 
  5868   0003F7                     ADSTAT          equ	1015	;# 
  5869   0003F8                     ADREF           equ	1016	;# 
  5870   0003F9                     ADACT           equ	1017	;# 
  5871   0003FA                     ADCLK           equ	1018	;# 
  5872   0003FB                     ADCTX           equ	1019	;# 
  5873   0003FC                     ADCSEL1         equ	1020	;# 
  5874   0003FD                     ADCSEL2         equ	1021	;# 
  5875   0003FE                     ADCSEL3         equ	1022	;# 
  5876   0003FF                     ADCSEL4         equ	1023	;# 
  5877   000400                     ANSELA          equ	1024	;# 
  5878   000401                     WPUA            equ	1025	;# 
  5879   000402                     ODCONA          equ	1026	;# 
  5880   000403                     SLRCONA         equ	1027	;# 
  5881   000404                     INLVLA          equ	1028	;# 
  5882   000405                     IOCAP           equ	1029	;# 
  5883   000406                     IOCAN           equ	1030	;# 
  5884   000407                     IOCAF           equ	1031	;# 
  5885   000408                     ANSELB          equ	1032	;# 
  5886   000409                     WPUB            equ	1033	;# 
  5887   00040A                     ODCONB          equ	1034	;# 
  5888   00040B                     SLRCONB         equ	1035	;# 
  5889   00040C                     INLVLB          equ	1036	;# 
  5890   00040D                     IOCBP           equ	1037	;# 
  5891   00040E                     IOCBN           equ	1038	;# 
  5892   00040F                     IOCBF           equ	1039	;# 
  5893   000410                     ANSELC          equ	1040	;# 
  5894   000411                     WPUC            equ	1041	;# 
  5895   000412                     ODCONC          equ	1042	;# 
  5896   000413                     SLRCONC         equ	1043	;# 
  5897   000414                     INLVLC          equ	1044	;# 
  5898   000415                     IOCCP           equ	1045	;# 
  5899   000416                     IOCCN           equ	1046	;# 
  5900   000417                     IOCCF           equ	1047	;# 
  5901   000421                     WPUE            equ	1057	;# 
  5902   000424                     INLVLE          equ	1060	;# 
  5903   000425                     IOCEP           equ	1061	;# 
  5904   000426                     IOCEN           equ	1062	;# 
  5905   000427                     IOCEF           equ	1063	;# 
  5906   000440                     NCO1ACC         equ	1088	;# 
  5907   000440                     NCO1ACCL        equ	1088	;# 
  5908   000441                     NCO1ACCH        equ	1089	;# 
  5909   000442                     NCO1ACCU        equ	1090	;# 
  5910   000443                     NCO1INC         equ	1091	;# 
  5911   000443                     NCO1INCL        equ	1091	;# 
  5912   000444                     NCO1INCH        equ	1092	;# 
  5913   000445                     NCO1INCU        equ	1093	;# 
  5914   000446                     NCO1CON         equ	1094	;# 
  5915   000447                     NCO1CLK         equ	1095	;# 
  5916   000448                     NCO2ACC         equ	1096	;# 
  5917   000448                     NCO2ACCL        equ	1096	;# 
  5918   000449                     NCO2ACCH        equ	1097	;# 
  5919   00044A                     NCO2ACCU        equ	1098	;# 
  5920   00044B                     NCO2INC         equ	1099	;# 
  5921   00044B                     NCO2INCL        equ	1099	;# 
  5922   00044C                     NCO2INCH        equ	1100	;# 
  5923   00044D                     NCO2INCU        equ	1101	;# 
  5924   00044E                     NCO2CON         equ	1102	;# 
  5925   00044F                     NCO2CLK         equ	1103	;# 
  5926   000450                     NCO3ACC         equ	1104	;# 
  5927   000450                     NCO3ACCL        equ	1104	;# 
  5928   000451                     NCO3ACCH        equ	1105	;# 
  5929   000452                     NCO3ACCU        equ	1106	;# 
  5930   000453                     NCO3INC         equ	1107	;# 
  5931   000453                     NCO3INCL        equ	1107	;# 
  5932   000454                     NCO3INCH        equ	1108	;# 
  5933   000455                     NCO3INCU        equ	1109	;# 
  5934   000456                     NCO3CON         equ	1110	;# 
  5935   000457                     NCO3CLK         equ	1111	;# 
  5936   000458                     FSCMCON         equ	1112	;# 
  5937   000459                     IVTLOCK         equ	1113	;# 
  5938   00045A                     IVTAD           equ	1114	;# 
  5939   00045A                     IVTADL          equ	1114	;# 
  5940   00045B                     IVTADH          equ	1115	;# 
  5941   00045C                     IVTADU          equ	1116	;# 
  5942   00045D                     IVTBASE         equ	1117	;# 
  5943   00045D                     IVTBASEL        equ	1117	;# 
  5944   00045E                     IVTBASEH        equ	1118	;# 
  5945   00045F                     IVTBASEU        equ	1119	;# 
  5946   000460                     PWM1ERS         equ	1120	;# 
  5947   000461                     PWM1CLK         equ	1121	;# 
  5948   000462                     PWM1LDS         equ	1122	;# 
  5949   000463                     PWM1PR          equ	1123	;# 
  5950   000463                     PWM1PRL         equ	1123	;# 
  5951   000464                     PWM1PRH         equ	1124	;# 
  5952   000465                     PWM1CPRE        equ	1125	;# 
  5953   000466                     PWM1PIPOS       equ	1126	;# 
  5954   000467                     PWM1GIR         equ	1127	;# 
  5955   000468                     PWM1GIE         equ	1128	;# 
  5956   000469                     PWM1CON         equ	1129	;# 
  5957   00046A                     PWM1S1CFG       equ	1130	;# 
  5958   00046B                     PWM1S1P1        equ	1131	;# 
  5959   00046B                     PWM1S1P1L       equ	1131	;# 
  5960   00046C                     PWM1S1P1H       equ	1132	;# 
  5961   00046D                     PWM1S1P2        equ	1133	;# 
  5962   00046D                     PWM1S1P2L       equ	1133	;# 
  5963   00046E                     PWM1S1P2H       equ	1134	;# 
  5964   00046F                     PWM2ERS         equ	1135	;# 
  5965   000470                     PWM2CLK         equ	1136	;# 
  5966   000471                     PWM2LDS         equ	1137	;# 
  5967   000472                     PWM2PR          equ	1138	;# 
  5968   000472                     PWM2PRL         equ	1138	;# 
  5969   000473                     PWM2PRH         equ	1139	;# 
  5970   000474                     PWM2CPRE        equ	1140	;# 
  5971   000475                     PWM2PIPOS       equ	1141	;# 
  5972   000476                     PWM2GIR         equ	1142	;# 
  5973   000477                     PWM2GIE         equ	1143	;# 
  5974   000478                     PWM2CON         equ	1144	;# 
  5975   000479                     PWM2S1CFG       equ	1145	;# 
  5976   00047A                     PWM2S1P1        equ	1146	;# 
  5977   00047A                     PWM2S1P1L       equ	1146	;# 
  5978   00047B                     PWM2S1P1H       equ	1147	;# 
  5979   00047C                     PWM2S1P2        equ	1148	;# 
  5980   00047C                     PWM2S1P2L       equ	1148	;# 
  5981   00047D                     PWM2S1P2H       equ	1149	;# 
  5982   00047E                     PWM3ERS         equ	1150	;# 
  5983   00047F                     PWM3CLK         equ	1151	;# 
  5984   000480                     PWM3LDS         equ	1152	;# 
  5985   000481                     PWM3PR          equ	1153	;# 
  5986   000481                     PWM3PRL         equ	1153	;# 
  5987   000482                     PWM3PRH         equ	1154	;# 
  5988   000483                     PWM3CPRE        equ	1155	;# 
  5989   000484                     PWM3PIPOS       equ	1156	;# 
  5990   000485                     PWM3GIR         equ	1157	;# 
  5991   000486                     PWM3GIE         equ	1158	;# 
  5992   000487                     PWM3CON         equ	1159	;# 
  5993   000488                     PWM3S1CFG       equ	1160	;# 
  5994   000489                     PWM3S1P1        equ	1161	;# 
  5995   000489                     PWM3S1P1L       equ	1161	;# 
  5996   00048A                     PWM3S1P1H       equ	1162	;# 
  5997   00048B                     PWM3S1P2        equ	1163	;# 
  5998   00048B                     PWM3S1P2L       equ	1163	;# 
  5999   00048C                     PWM3S1P2H       equ	1164	;# 
  6000   00048D                     PWM4ERS         equ	1165	;# 
  6001   00048E                     PWM4CLK         equ	1166	;# 
  6002   00048F                     PWM4LDS         equ	1167	;# 
  6003   000490                     PWM4PR          equ	1168	;# 
  6004   000490                     PWM4PRL         equ	1168	;# 
  6005   000491                     PWM4PRH         equ	1169	;# 
  6006   000492                     PWM4CPRE        equ	1170	;# 
  6007   000493                     PWM4PIPOS       equ	1171	;# 
  6008   000494                     PWM4GIR         equ	1172	;# 
  6009   000495                     PWM4GIE         equ	1173	;# 
  6010   000496                     PWM4CON         equ	1174	;# 
  6011   000497                     PWM4S1CFG       equ	1175	;# 
  6012   000498                     PWM4S1P1        equ	1176	;# 
  6013   000498                     PWM4S1P1L       equ	1176	;# 
  6014   000499                     PWM4S1P1H       equ	1177	;# 
  6015   00049A                     PWM4S1P2        equ	1178	;# 
  6016   00049A                     PWM4S1P2L       equ	1178	;# 
  6017   00049B                     PWM4S1P2H       equ	1179	;# 
  6018   00049C                     PWMLOAD         equ	1180	;# 
  6019   00049D                     PWMEN           equ	1181	;# 
  6020   00049E                     PIE0            equ	1182	;# 
  6021   00049F                     PIE1            equ	1183	;# 
  6022   0004A0                     PIE2            equ	1184	;# 
  6023   0004A1                     PIE3            equ	1185	;# 
  6024   0004A2                     PIE4            equ	1186	;# 
  6025   0004A3                     PIE5            equ	1187	;# 
  6026   0004A4                     PIE6            equ	1188	;# 
  6027   0004A5                     PIE7            equ	1189	;# 
  6028   0004A6                     PIE8            equ	1190	;# 
  6029   0004A7                     PIE9            equ	1191	;# 
  6030   0004A8                     PIE10           equ	1192	;# 
  6031   0004A9                     PIE11           equ	1193	;# 
  6032   0004AA                     PIE12           equ	1194	;# 
  6033   0004AB                     PIE13           equ	1195	;# 
  6034   0004AC                     PIE14           equ	1196	;# 
  6035   0004AD                     PIE15           equ	1197	;# 
  6036   0004AE                     PIR0            equ	1198	;# 
  6037   0004AF                     PIR1            equ	1199	;# 
  6038   0004B0                     PIR2            equ	1200	;# 
  6039   0004B1                     PIR3            equ	1201	;# 
  6040   0004B2                     PIR4            equ	1202	;# 
  6041   0004B3                     PIR5            equ	1203	;# 
  6042   0004B4                     PIR6            equ	1204	;# 
  6043   0004B5                     PIR7            equ	1205	;# 
  6044   0004B6                     PIR8            equ	1206	;# 
  6045   0004B7                     PIR9            equ	1207	;# 
  6046   0004B8                     PIR10           equ	1208	;# 
  6047   0004B9                     PIR11           equ	1209	;# 
  6048   0004BA                     PIR12           equ	1210	;# 
  6049   0004BB                     PIR13           equ	1211	;# 
  6050   0004BC                     PIR14           equ	1212	;# 
  6051   0004BD                     PIR15           equ	1213	;# 
  6052   0004BE                     LATA            equ	1214	;# 
  6053   0004BF                     LATB            equ	1215	;# 
  6054   0004C0                     LATC            equ	1216	;# 
  6055   0004C6                     TRISA           equ	1222	;# 
  6056   0004C7                     TRISB           equ	1223	;# 
  6057   0004C8                     TRISC           equ	1224	;# 
  6058   0004CA                     TRISE           equ	1226	;# 
  6059   0004CE                     PORTA           equ	1230	;# 
  6060   0004CF                     PORTB           equ	1231	;# 
  6061   0004D0                     PORTC           equ	1232	;# 
  6062   0004D2                     PORTE           equ	1234	;# 
  6063   0004D6                     INTCON0         equ	1238	;# 
  6064   0004D7                     INTCON1         equ	1239	;# 
  6065   0004D8                     STATUS          equ	1240	;# 
  6066   0004D9                     FSR2            equ	1241	;# 
  6067   0004D9                     FSR2L           equ	1241	;# 
  6068   0004DA                     FSR2H           equ	1242	;# 
  6069   0004DB                     PLUSW2          equ	1243	;# 
  6070   0004DC                     PREINC2         equ	1244	;# 
  6071   0004DD                     POSTDEC2        equ	1245	;# 
  6072   0004DE                     POSTINC2        equ	1246	;# 
  6073   0004DF                     INDF2           equ	1247	;# 
  6074   0004E0                     BSR             equ	1248	;# 
  6075   0004E1                     FSR1            equ	1249	;# 
  6076   0004E1                     FSR1L           equ	1249	;# 
  6077   0004E2                     FSR1H           equ	1250	;# 
  6078   0004E3                     PLUSW1          equ	1251	;# 
  6079   0004E4                     PREINC1         equ	1252	;# 
  6080   0004E5                     POSTDEC1        equ	1253	;# 
  6081   0004E6                     POSTINC1        equ	1254	;# 
  6082   0004E7                     INDF1           equ	1255	;# 
  6083   0004E8                     WREG            equ	1256	;# 
  6084   0004E9                     FSR0            equ	1257	;# 
  6085   0004E9                     FSR0L           equ	1257	;# 
  6086   0004EA                     FSR0H           equ	1258	;# 
  6087   0004EB                     PLUSW0          equ	1259	;# 
  6088   0004EC                     PREINC0         equ	1260	;# 
  6089   0004ED                     POSTDEC0        equ	1261	;# 
  6090   0004EE                     POSTINC0        equ	1262	;# 
  6091   0004EF                     INDF0           equ	1263	;# 
  6092   0004F0                     PCON0           equ	1264	;# 
  6093   0004F1                     PCON1           equ	1265	;# 
  6094   0004F2                     CPUDOZE         equ	1266	;# 
  6095   0004F3                     PROD            equ	1267	;# 
  6096   0004F3                     PRODL           equ	1267	;# 
  6097   0004F4                     PRODH           equ	1268	;# 
  6098   0004F5                     TABLAT          equ	1269	;# 
  6099   0004F6                     TBLPTR          equ	1270	;# 
  6100   0004F6                     TBLPTRL         equ	1270	;# 
  6101   0004F7                     TBLPTRH         equ	1271	;# 
  6102   0004F8                     TBLPTRU         equ	1272	;# 
  6103   0004F9                     PCLAT           equ	1273	;# 
  6104   0004F9                     PCL             equ	1273	;# 
  6105   0004FA                     PCLATH          equ	1274	;# 
  6106   0004FB                     PCLATU          equ	1275	;# 
  6107   0004FC                     STKPTR          equ	1276	;# 
  6108   0004FD                     TOS             equ	1277	;# 
  6109   0004FD                     TOSL            equ	1277	;# 
  6110   0004FE                     TOSH            equ	1278	;# 
  6111   0004FF                     TOSU            equ	1279	;# 
  6112                           
  6113                           	psect	eeprom_data
  6114   3803FF                     	org	1023	;# 
  6115   3803FF  00                 	db	0	;# 
  6116   000038                     BOOTREG         equ	56	;# 
  6117   000039                     CLKRCON         equ	57	;# 
  6118   00003A                     CLKRCLK         equ	58	;# 
  6119   000040                     NVMCON0         equ	64	;# 
  6120   000041                     NVMCON1         equ	65	;# 
  6121   000042                     NVMLOCK         equ	66	;# 
  6122   000043                     NVMADR          equ	67	;# 
  6123   000043                     NVMADRL         equ	67	;# 
  6124   000044                     NVMADRH         equ	68	;# 
  6125   000045                     NVMADRU         equ	69	;# 
  6126   000046                     NVMDAT          equ	70	;# 
  6127   000046                     NVMDATL         equ	70	;# 
  6128   000047                     NVMDATH         equ	71	;# 
  6129   000048                     VREGCON         equ	72	;# 
  6130   000049                     BORCON          equ	73	;# 
  6131   00004A                     HLVDCON0        equ	74	;# 
  6132   00004B                     HLVDCON1        equ	75	;# 
  6133   00004C                     ZCDCON          equ	76	;# 
  6134   000060                     PMD0            equ	96	;# 
  6135   000061                     PMD1            equ	97	;# 
  6136   000062                     PMD2            equ	98	;# 
  6137   000063                     PMD3            equ	99	;# 
  6138   000064                     PMD4            equ	100	;# 
  6139   000065                     PMD5            equ	101	;# 
  6140   000066                     PMD6            equ	102	;# 
  6141   000067                     PMD7            equ	103	;# 
  6142   000068                     PMD8            equ	104	;# 
  6143   00006A                     MD1CON0         equ	106	;# 
  6144   00006B                     MD1CON1         equ	107	;# 
  6145   00006C                     MD1SRC          equ	108	;# 
  6146   00006D                     MD1CARL         equ	109	;# 
  6147   00006E                     MD1CARH         equ	110	;# 
  6148   00006F                     CMOUT           equ	111	;# 
  6149   000070                     CM1CON0         equ	112	;# 
  6150   000071                     CM1CON1         equ	113	;# 
  6151   000072                     CM1NCH          equ	114	;# 
  6152   000073                     CM1PCH          equ	115	;# 
  6153   000074                     CM2CON0         equ	116	;# 
  6154   000075                     CM2CON1         equ	117	;# 
  6155   000076                     CM2NCH          equ	118	;# 
  6156   000077                     CM2PCH          equ	119	;# 
  6157   000078                     WDTCON0         equ	120	;# 
  6158   000079                     WDTCON1         equ	121	;# 
  6159   00007A                     WDTPSL          equ	122	;# 
  6160   00007B                     WDTPSH          equ	123	;# 
  6161   00007C                     WDTTMR          equ	124	;# 
  6162   00007D                     DAC1DAT         equ	125	;# 
  6163   00007D                     DAC1DATL        equ	125	;# 
  6164   00007F                     DAC1CON         equ	127	;# 
  6165   000080                     SPI1RXB         equ	128	;# 
  6166   000081                     SPI1TXB         equ	129	;# 
  6167   000082                     SPI1TCNT        equ	130	;# 
  6168   000082                     SPI1TCNTL       equ	130	;# 
  6169   000083                     SPI1TCNTH       equ	131	;# 
  6170   000084                     SPI1CON0        equ	132	;# 
  6171   000085                     SPI1CON1        equ	133	;# 
  6172   000086                     SPI1CON2        equ	134	;# 
  6173   000087                     SPI1STATUS      equ	135	;# 
  6174   000088                     SPI1TWIDTH      equ	136	;# 
  6175   000089                     SPI1BAUD        equ	137	;# 
  6176   00008A                     SPI1INTF        equ	138	;# 
  6177   00008B                     SPI1INTE        equ	139	;# 
  6178   00008C                     SPI1CLK         equ	140	;# 
  6179   00008D                     SPI2RXB         equ	141	;# 
  6180   00008E                     SPI2TXB         equ	142	;# 
  6181   00008F                     SPI2TCNT        equ	143	;# 
  6182   00008F                     SPI2TCNTL       equ	143	;# 
  6183   000090                     SPI2TCNTH       equ	144	;# 
  6184   000091                     SPI2CON0        equ	145	;# 
  6185   000092                     SPI2CON1        equ	146	;# 
  6186   000093                     SPI2CON2        equ	147	;# 
  6187   000094                     SPI2STATUS      equ	148	;# 
  6188   000095                     SPI2TWIDTH      equ	149	;# 
  6189   000096                     SPI2BAUD        equ	150	;# 
  6190   000097                     SPI2INTF        equ	151	;# 
  6191   000098                     SPI2INTE        equ	152	;# 
  6192   000099                     SPI2CLK         equ	153	;# 
  6193   0000AC                     ACTCON          equ	172	;# 
  6194   0000AD                     OSCCON1         equ	173	;# 
  6195   0000AE                     OSCCON2         equ	174	;# 
  6196   0000AF                     OSCCON3         equ	175	;# 
  6197   0000B0                     OSCTUNE         equ	176	;# 
  6198   0000B1                     OSCFRQ          equ	177	;# 
  6199   0000B1                     OSCFREQ         equ	177	;# 
  6200   0000B2                     OSCSTAT         equ	178	;# 
  6201   0000B2                     OSCSTAT1        equ	178	;# 
  6202   0000B3                     OSCEN           equ	179	;# 
  6203   0000B4                     PRLOCK          equ	180	;# 
  6204   0000B5                     SCANPR          equ	181	;# 
  6205   0000B6                     DMA1PR          equ	182	;# 
  6206   0000B7                     DMA2PR          equ	183	;# 
  6207   0000B8                     DMA3PR          equ	184	;# 
  6208   0000B9                     DMA4PR          equ	185	;# 
  6209   0000BA                     DMA5PR          equ	186	;# 
  6210   0000BB                     DMA6PR          equ	187	;# 
  6211   0000BC                     DMA7PR          equ	188	;# 
  6212   0000BD                     DMA8PR          equ	189	;# 
  6213   0000BE                     MAINPR          equ	190	;# 
  6214   0000BF                     ISRPR           equ	191	;# 
  6215   0000D4                     CLCDATA         equ	212	;# 
  6216   0000D5                     CLCSELECT       equ	213	;# 
  6217   0000D6                     CLCnCON         equ	214	;# 
  6218   0000D7                     CLCnPOL         equ	215	;# 
  6219   0000D8                     CLCnSEL0        equ	216	;# 
  6220   0000D9                     CLCnSEL1        equ	217	;# 
  6221   0000DA                     CLCnSEL2        equ	218	;# 
  6222   0000DB                     CLCnSEL3        equ	219	;# 
  6223   0000DC                     CLCnGLS0        equ	220	;# 
  6224   0000DD                     CLCnGLS1        equ	221	;# 
  6225   0000DE                     CLCnGLS2        equ	222	;# 
  6226   0000DF                     CLCnGLS3        equ	223	;# 
  6227   0000E8                     DMASELECT       equ	232	;# 
  6228   0000E9                     DMAnBUF         equ	233	;# 
  6229   0000EA                     DMAnDCNT        equ	234	;# 
  6230   0000EA                     DMAnDCNTL       equ	234	;# 
  6231   0000EB                     DMAnDCNTH       equ	235	;# 
  6232   0000EC                     DMAnDPTR        equ	236	;# 
  6233   0000EC                     DMAnDPTRL       equ	236	;# 
  6234   0000ED                     DMAnDPTRH       equ	237	;# 
  6235   0000EE                     DMAnDSZ         equ	238	;# 
  6236   0000EE                     DMAnDSZL        equ	238	;# 
  6237   0000EF                     DMAnDSZH        equ	239	;# 
  6238   0000F0                     DMAnDSA         equ	240	;# 
  6239   0000F0                     DMAnDSAL        equ	240	;# 
  6240   0000F1                     DMAnDSAH        equ	241	;# 
  6241   0000F2                     DMAnSCNT        equ	242	;# 
  6242   0000F2                     DMAnSCNTL       equ	242	;# 
  6243   0000F3                     DMAnSCNTH       equ	243	;# 
  6244   0000F4                     DMAnSPTR        equ	244	;# 
  6245   0000F4                     DMAnSPTRL       equ	244	;# 
  6246   0000F5                     DMAnSPTRH       equ	245	;# 
  6247   0000F6                     DMAnSPTRU       equ	246	;# 
  6248   0000F7                     DMAnSSZ         equ	247	;# 
  6249   0000F7                     DMAnSSZL        equ	247	;# 
  6250   0000F8                     DMAnSSZH        equ	248	;# 
  6251   0000F9                     DMAnSSA         equ	249	;# 
  6252   0000F9                     DMAnSSAL        equ	249	;# 
  6253   0000FA                     DMAnSSAH        equ	250	;# 
  6254   0000FB                     DMAnSSAU        equ	251	;# 
  6255   0000FC                     DMAnCON0        equ	252	;# 
  6256   0000FD                     DMAnCON1        equ	253	;# 
  6257   0000FE                     DMAnAIRQ        equ	254	;# 
  6258   0000FF                     DMAnSIRQ        equ	255	;# 
  6259   000100                     C1CONL          equ	256	;# 
  6260   000101                     C1CONH          equ	257	;# 
  6261   000102                     C1CONU          equ	258	;# 
  6262   000103                     C1CONT          equ	259	;# 
  6263   000104                     C1NBTCFGL       equ	260	;# 
  6264   000105                     C1NBTCFGH       equ	261	;# 
  6265   000106                     C1NBTCFGU       equ	262	;# 
  6266   000107                     C1NBTCFGT       equ	263	;# 
  6267   000108                     C1DBTCFGL       equ	264	;# 
  6268   000109                     C1DBTCFGH       equ	265	;# 
  6269   00010A                     C1DBTCFGU       equ	266	;# 
  6270   00010B                     C1DBTCFGT       equ	267	;# 
  6271   00010C                     C1TDCL          equ	268	;# 
  6272   00010D                     C1TDCH          equ	269	;# 
  6273   00010E                     C1TDCU          equ	270	;# 
  6274   000110                     C1TBC           equ	272	;# 
  6275   000110                     C1TBCL          equ	272	;# 
  6276   000111                     C1TBCH          equ	273	;# 
  6277   000112                     C1TBCU          equ	274	;# 
  6278   000113                     C1TBCT          equ	275	;# 
  6279   000114                     C1TSCONL        equ	276	;# 
  6280   000115                     C1TSCONH        equ	277	;# 
  6281   000116                     C1TSCONU        equ	278	;# 
  6282   000117                     C1TSCONT        equ	279	;# 
  6283   000118                     C1VECL          equ	280	;# 
  6284   000119                     C1VECH          equ	281	;# 
  6285   00011A                     C1VECU          equ	282	;# 
  6286   00011B                     C1VECT          equ	283	;# 
  6287   00011C                     C1INTL          equ	284	;# 
  6288   00011D                     C1INTH          equ	285	;# 
  6289   00011E                     C1INTU          equ	286	;# 
  6290   00011F                     C1INTT          equ	287	;# 
  6291   000120                     C1RXIF          equ	288	;# 
  6292   000120                     C1RXIFL         equ	288	;# 
  6293   000121                     C1RXIFH         equ	289	;# 
  6294   000122                     C1RXIFU         equ	290	;# 
  6295   000123                     C1RXIFT         equ	291	;# 
  6296   000124                     C1TXIF          equ	292	;# 
  6297   000124                     C1TXIFL         equ	292	;# 
  6298   000125                     C1TXIFH         equ	293	;# 
  6299   000126                     C1TXIFU         equ	294	;# 
  6300   000127                     C1TXIFT         equ	295	;# 
  6301   000128                     C1RXOVIF        equ	296	;# 
  6302   000128                     C1RXOVIFL       equ	296	;# 
  6303   000129                     C1RXOVIFH       equ	297	;# 
  6304   00012A                     C1RXOVIFU       equ	298	;# 
  6305   00012B                     C1RXOVIFT       equ	299	;# 
  6306   00012C                     C1TXATIF        equ	300	;# 
  6307   00012C                     C1TXATIFL       equ	300	;# 
  6308   00012D                     C1TXATIFH       equ	301	;# 
  6309   00012E                     C1TXATIFU       equ	302	;# 
  6310   00012F                     C1TXATIFT       equ	303	;# 
  6311   000130                     C1TXREQ         equ	304	;# 
  6312   000130                     C1TXREQL        equ	304	;# 
  6313   000131                     C1TXREQH        equ	305	;# 
  6314   000132                     C1TXREQU        equ	306	;# 
  6315   000133                     C1TXREQT        equ	307	;# 
  6316   000134                     C1TRECL         equ	308	;# 
  6317   000135                     C1TRECH         equ	309	;# 
  6318   000136                     C1TRECU         equ	310	;# 
  6319   000137                     C1TRECT         equ	311	;# 
  6320   000138                     C1BDIAG0L       equ	312	;# 
  6321   000139                     C1BDIAG0H       equ	313	;# 
  6322   00013C                     C1BDIAG1L       equ	316	;# 
  6323   00013D                     C1BDIAG1H       equ	317	;# 
  6324   00013E                     C1BDIAG1U       equ	318	;# 
  6325   00013F                     C1BDIAG1T       equ	319	;# 
  6326   000140                     C1TEFCONL       equ	320	;# 
  6327   000141                     C1TEFCONH       equ	321	;# 
  6328   000142                     C1TEFCONU       equ	322	;# 
  6329   000143                     C1TEFCONT       equ	323	;# 
  6330   000144                     C1TEFSTAL       equ	324	;# 
  6331   000145                     C1TEFSTAH       equ	325	;# 
  6332   000146                     C1TEFSTAU       equ	326	;# 
  6333   000147                     C1TEFSTAT       equ	327	;# 
  6334   000148                     C1TEFUA         equ	328	;# 
  6335   000148                     C1TEFUAL        equ	328	;# 
  6336   000149                     C1TEFUAH        equ	329	;# 
  6337   00014A                     C1TEFUAU        equ	330	;# 
  6338   00014B                     C1TEFUAT        equ	331	;# 
  6339   00014C                     C1FIFOBA        equ	332	;# 
  6340   00014C                     C1FIFOBAL       equ	332	;# 
  6341   00014D                     C1FIFOBAH       equ	333	;# 
  6342   00014E                     C1FIFOBAU       equ	334	;# 
  6343   00014F                     C1FIFOBAT       equ	335	;# 
  6344   000150                     C1TXQCONL       equ	336	;# 
  6345   000151                     C1TXQCONH       equ	337	;# 
  6346   000152                     C1TXQCONU       equ	338	;# 
  6347   000153                     C1TXQCONT       equ	339	;# 
  6348   000154                     C1TXQSTAL       equ	340	;# 
  6349   000155                     C1TXQSTAH       equ	341	;# 
  6350   000156                     C1TXQSTAU       equ	342	;# 
  6351   000157                     C1TXQSTAT       equ	343	;# 
  6352   000158                     C1TXQUA         equ	344	;# 
  6353   000158                     C1TXQUAL        equ	344	;# 
  6354   000159                     C1TXQUAH        equ	345	;# 
  6355   00015A                     C1TXQUAU        equ	346	;# 
  6356   00015B                     C1TXQUAT        equ	347	;# 
  6357   00015C                     C1FIFOCON1      equ	348	;# 
  6358   00015C                     C1FIFOCON1L     equ	348	;# 
  6359   00015D                     C1FIFOCON1H     equ	349	;# 
  6360   00015E                     C1FIFOCON1U     equ	350	;# 
  6361   00015F                     C1FIFOCON1T     equ	351	;# 
  6362   000160                     C1FIFOSTA1      equ	352	;# 
  6363   000160                     C1FIFOSTA1L     equ	352	;# 
  6364   000161                     C1FIFOSTA1H     equ	353	;# 
  6365   000162                     C1FIFOSTA1U     equ	354	;# 
  6366   000163                     C1FIFOSTA1T     equ	355	;# 
  6367   000164                     C1FIFOUA1       equ	356	;# 
  6368   000164                     C1FIFOUA1L      equ	356	;# 
  6369   000165                     C1FIFOUA1H      equ	357	;# 
  6370   000166                     C1FIFOUA1U      equ	358	;# 
  6371   000167                     C1FIFOUA1T      equ	359	;# 
  6372   000168                     C1FIFOCON2      equ	360	;# 
  6373   000168                     C1FIFOCON2L     equ	360	;# 
  6374   000169                     C1FIFOCON2H     equ	361	;# 
  6375   00016A                     C1FIFOCON2U     equ	362	;# 
  6376   00016B                     C1FIFOCON2T     equ	363	;# 
  6377   00016C                     C1FIFOSTA2      equ	364	;# 
  6378   00016C                     C1FIFOSTA2L     equ	364	;# 
  6379   00016D                     C1FIFOSTA2H     equ	365	;# 
  6380   00016E                     C1FIFOSTA2U     equ	366	;# 
  6381   00016F                     C1FIFOSTA2T     equ	367	;# 
  6382   000170                     C1FIFOUA2       equ	368	;# 
  6383   000170                     C1FIFOUA2L      equ	368	;# 
  6384   000171                     C1FIFOUA2H      equ	369	;# 
  6385   000172                     C1FIFOUA2U      equ	370	;# 
  6386   000173                     C1FIFOUA2T      equ	371	;# 
  6387   000174                     C1FIFOCON3      equ	372	;# 
  6388   000174                     C1FIFOCON3L     equ	372	;# 
  6389   000175                     C1FIFOCON3H     equ	373	;# 
  6390   000176                     C1FIFOCON3U     equ	374	;# 
  6391   000177                     C1FIFOCON3T     equ	375	;# 
  6392   000178                     C1FIFOSTA3      equ	376	;# 
  6393   000178                     C1FIFOSTA3L     equ	376	;# 
  6394   000179                     C1FIFOSTA3H     equ	377	;# 
  6395   00017A                     C1FIFOSTA3U     equ	378	;# 
  6396   00017B                     C1FIFOSTA3T     equ	379	;# 
  6397   00017C                     C1FIFOUA3       equ	380	;# 
  6398   00017C                     C1FIFOUA3L      equ	380	;# 
  6399   00017D                     C1FIFOUA3H      equ	381	;# 
  6400   00017E                     C1FIFOUA3U      equ	382	;# 
  6401   00017F                     C1FIFOUA3T      equ	383	;# 
  6402   000180                     C1FLTCON0L      equ	384	;# 
  6403   000181                     C1FLTCON0H      equ	385	;# 
  6404   000182                     C1FLTCON0U      equ	386	;# 
  6405   000183                     C1FLTCON0T      equ	387	;# 
  6406   000184                     C1FLTCON1L      equ	388	;# 
  6407   000185                     C1FLTCON1H      equ	389	;# 
  6408   000186                     C1FLTCON1U      equ	390	;# 
  6409   000187                     C1FLTCON1T      equ	391	;# 
  6410   000188                     C1FLTCON2L      equ	392	;# 
  6411   000189                     C1FLTCON2H      equ	393	;# 
  6412   00018A                     C1FLTCON2U      equ	394	;# 
  6413   00018B                     C1FLTCON2T      equ	395	;# 
  6414   00018C                     C1FLTOBJ0       equ	396	;# 
  6415   00018C                     C1FLTOBJ0L      equ	396	;# 
  6416   00018D                     C1FLTOBJ0H      equ	397	;# 
  6417   00018E                     C1FLTOBJ0U      equ	398	;# 
  6418   00018F                     C1FLTOBJ0T      equ	399	;# 
  6419   000190                     C1MASK0         equ	400	;# 
  6420   000190                     C1MASK0L        equ	400	;# 
  6421   000191                     C1MASK0H        equ	401	;# 
  6422   000192                     C1MASK0U        equ	402	;# 
  6423   000193                     C1MASK0T        equ	403	;# 
  6424   000194                     C1FLTOBJ1       equ	404	;# 
  6425   000194                     C1FLTOBJ1L      equ	404	;# 
  6426   000195                     C1FLTOBJ1H      equ	405	;# 
  6427   000196                     C1FLTOBJ1U      equ	406	;# 
  6428   000197                     C1FLTOBJ1T      equ	407	;# 
  6429   000198                     C1MASK1         equ	408	;# 
  6430   000198                     C1MASK1L        equ	408	;# 
  6431   000199                     C1MASK1H        equ	409	;# 
  6432   00019A                     C1MASK1U        equ	410	;# 
  6433   00019B                     C1MASK1T        equ	411	;# 
  6434   00019C                     C1FLTOBJ2       equ	412	;# 
  6435   00019C                     C1FLTOBJ2L      equ	412	;# 
  6436   00019D                     C1FLTOBJ2H      equ	413	;# 
  6437   00019E                     C1FLTOBJ2U      equ	414	;# 
  6438   00019F                     C1FLTOBJ2T      equ	415	;# 
  6439   0001A0                     C1MASK2         equ	416	;# 
  6440   0001A0                     C1MASK2L        equ	416	;# 
  6441   0001A1                     C1MASK2H        equ	417	;# 
  6442   0001A2                     C1MASK2U        equ	418	;# 
  6443   0001A3                     C1MASK2T        equ	419	;# 
  6444   0001A4                     C1FLTOBJ3       equ	420	;# 
  6445   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6446   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6447   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6448   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6449   0001A8                     C1MASK3         equ	424	;# 
  6450   0001A8                     C1MASK3L        equ	424	;# 
  6451   0001A9                     C1MASK3H        equ	425	;# 
  6452   0001AA                     C1MASK3U        equ	426	;# 
  6453   0001AB                     C1MASK3T        equ	427	;# 
  6454   0001AC                     C1FLTOBJ4       equ	428	;# 
  6455   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6456   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6457   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6458   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6459   0001B0                     C1MASK4         equ	432	;# 
  6460   0001B0                     C1MASK4L        equ	432	;# 
  6461   0001B1                     C1MASK4H        equ	433	;# 
  6462   0001B2                     C1MASK4U        equ	434	;# 
  6463   0001B3                     C1MASK4T        equ	435	;# 
  6464   0001B4                     C1FLTOBJ5       equ	436	;# 
  6465   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6466   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6467   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6468   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6469   0001B8                     C1MASK5         equ	440	;# 
  6470   0001B8                     C1MASK5L        equ	440	;# 
  6471   0001B9                     C1MASK5H        equ	441	;# 
  6472   0001BA                     C1MASK5U        equ	442	;# 
  6473   0001BB                     C1MASK5T        equ	443	;# 
  6474   0001BC                     C1FLTOBJ6       equ	444	;# 
  6475   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6476   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6477   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6478   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6479   0001C0                     C1MASK6         equ	448	;# 
  6480   0001C0                     C1MASK6L        equ	448	;# 
  6481   0001C1                     C1MASK6H        equ	449	;# 
  6482   0001C2                     C1MASK6U        equ	450	;# 
  6483   0001C3                     C1MASK6T        equ	451	;# 
  6484   0001C4                     C1FLTOBJ7       equ	452	;# 
  6485   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6486   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6487   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6488   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6489   0001C8                     C1MASK7         equ	456	;# 
  6490   0001C8                     C1MASK7L        equ	456	;# 
  6491   0001C9                     C1MASK7H        equ	457	;# 
  6492   0001CA                     C1MASK7U        equ	458	;# 
  6493   0001CB                     C1MASK7T        equ	459	;# 
  6494   0001CC                     C1FLTOBJ8       equ	460	;# 
  6495   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6496   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6497   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6498   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6499   0001D0                     C1MASK8         equ	464	;# 
  6500   0001D0                     C1MASK8L        equ	464	;# 
  6501   0001D1                     C1MASK8H        equ	465	;# 
  6502   0001D2                     C1MASK8U        equ	466	;# 
  6503   0001D3                     C1MASK8T        equ	467	;# 
  6504   0001D4                     C1FLTOBJ9       equ	468	;# 
  6505   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6506   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6507   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6508   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6509   0001D8                     C1MASK9         equ	472	;# 
  6510   0001D8                     C1MASK9L        equ	472	;# 
  6511   0001D9                     C1MASK9H        equ	473	;# 
  6512   0001DA                     C1MASK9U        equ	474	;# 
  6513   0001DB                     C1MASK9T        equ	475	;# 
  6514   0001DC                     C1FLTOBJ10      equ	476	;# 
  6515   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6516   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6517   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6518   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6519   0001E0                     C1MASK10        equ	480	;# 
  6520   0001E0                     C1MASK10L       equ	480	;# 
  6521   0001E1                     C1MASK10H       equ	481	;# 
  6522   0001E2                     C1MASK10U       equ	482	;# 
  6523   0001E3                     C1MASK10T       equ	483	;# 
  6524   0001E4                     C1FLTOBJ11      equ	484	;# 
  6525   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6526   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6527   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6528   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6529   0001E8                     C1MASK11        equ	488	;# 
  6530   0001E8                     C1MASK11L       equ	488	;# 
  6531   0001E9                     C1MASK11H       equ	489	;# 
  6532   0001EA                     C1MASK11U       equ	490	;# 
  6533   0001EB                     C1MASK11T       equ	491	;# 
  6534   000200                     PPSLOCK         equ	512	;# 
  6535   000201                     RA0PPS          equ	513	;# 
  6536   000202                     RA1PPS          equ	514	;# 
  6537   000203                     RA2PPS          equ	515	;# 
  6538   000204                     RA3PPS          equ	516	;# 
  6539   000205                     RA4PPS          equ	517	;# 
  6540   000206                     RA5PPS          equ	518	;# 
  6541   000207                     RA6PPS          equ	519	;# 
  6542   000208                     RA7PPS          equ	520	;# 
  6543   000209                     RB0PPS          equ	521	;# 
  6544   00020A                     RB1PPS          equ	522	;# 
  6545   00020B                     RB2PPS          equ	523	;# 
  6546   00020C                     RB3PPS          equ	524	;# 
  6547   00020D                     RB4PPS          equ	525	;# 
  6548   00020E                     RB5PPS          equ	526	;# 
  6549   00020F                     RB6PPS          equ	527	;# 
  6550   000210                     RB7PPS          equ	528	;# 
  6551   000211                     RC0PPS          equ	529	;# 
  6552   000212                     RC1PPS          equ	530	;# 
  6553   000213                     RC2PPS          equ	531	;# 
  6554   000214                     RC3PPS          equ	532	;# 
  6555   000215                     RC4PPS          equ	533	;# 
  6556   000216                     RC5PPS          equ	534	;# 
  6557   000217                     RC6PPS          equ	535	;# 
  6558   000218                     RC7PPS          equ	536	;# 
  6559   00023D                     CANRXPPS        equ	573	;# 
  6560   00023E                     INT0PPS         equ	574	;# 
  6561   00023F                     INT1PPS         equ	575	;# 
  6562   000240                     INT2PPS         equ	576	;# 
  6563   000241                     T0CKIPPS        equ	577	;# 
  6564   000242                     T1CKIPPS        equ	578	;# 
  6565   000243                     T1GPPS          equ	579	;# 
  6566   000244                     T3CKIPPS        equ	580	;# 
  6567   000245                     T3GPPS          equ	581	;# 
  6568   000246                     T5CKIPPS        equ	582	;# 
  6569   000247                     T5GPPS          equ	583	;# 
  6570   000248                     T2INPPS         equ	584	;# 
  6571   000249                     T4INPPS         equ	585	;# 
  6572   00024A                     T6INPPS         equ	586	;# 
  6573   00024B                     TUIN0PPS        equ	587	;# 
  6574   00024C                     TUIN1PPS        equ	588	;# 
  6575   00024F                     CCP1PPS         equ	591	;# 
  6576   000250                     CCP2PPS         equ	592	;# 
  6577   000251                     CCP3PPS         equ	593	;# 
  6578   000253                     PWM1ERSPPS      equ	595	;# 
  6579   000254                     PWM2ERSPPS      equ	596	;# 
  6580   000255                     PWM3ERSPPS      equ	597	;# 
  6581   000256                     PWM4ERSPPS      equ	598	;# 
  6582   000257                     PWMIN0PPS       equ	599	;# 
  6583   000258                     PWMIN1PPS       equ	600	;# 
  6584   000259                     SMT1WINPPS      equ	601	;# 
  6585   00025A                     SMT1SIGPPS      equ	602	;# 
  6586   00025B                     CWG1PPS         equ	603	;# 
  6587   00025B                     CWG1INPPS       equ	603	;# 
  6588   00025C                     CWG2PPS         equ	604	;# 
  6589   00025C                     CWG2INPPS       equ	604	;# 
  6590   00025D                     CWG3PPS         equ	605	;# 
  6591   00025D                     CWG3INPPS       equ	605	;# 
  6592   00025E                     MD1CARLPPS      equ	606	;# 
  6593   00025E                     MDCARLPPS       equ	606	;# 
  6594   00025F                     MD1CARHPPS      equ	607	;# 
  6595   00025F                     MDCARHPPS       equ	607	;# 
  6596   000260                     MD1SRCPPS       equ	608	;# 
  6597   000260                     MDSRCPPS        equ	608	;# 
  6598   000261                     CLCIN0PPS       equ	609	;# 
  6599   000262                     CLCIN1PPS       equ	610	;# 
  6600   000263                     CLCIN2PPS       equ	611	;# 
  6601   000264                     CLCIN3PPS       equ	612	;# 
  6602   000265                     CLCIN4PPS       equ	613	;# 
  6603   000266                     CLCIN5PPS       equ	614	;# 
  6604   000267                     CLCIN6PPS       equ	615	;# 
  6605   000268                     CLCIN7PPS       equ	616	;# 
  6606   000269                     ADACTPPS        equ	617	;# 
  6607   00026A                     SPI1SCKPPS      equ	618	;# 
  6608   00026B                     SPI1SDIPPS      equ	619	;# 
  6609   00026C                     SPI1SSPPS       equ	620	;# 
  6610   00026D                     SPI2SCKPPS      equ	621	;# 
  6611   00026E                     SPI2SDIPPS      equ	622	;# 
  6612   00026F                     SPI2SSPPS       equ	623	;# 
  6613   000270                     I2C1SDAPPS      equ	624	;# 
  6614   000271                     I2C1SCLPPS      equ	625	;# 
  6615   000272                     U1RXPPS         equ	626	;# 
  6616   000273                     U1CTSPPS        equ	627	;# 
  6617   000274                     U2RXPPS         equ	628	;# 
  6618   000275                     U2CTSPPS        equ	629	;# 
  6619   000276                     U3RXPPS         equ	630	;# 
  6620   000277                     U3CTSPPS        equ	631	;# 
  6621   000278                     U4RXPPS         equ	632	;# 
  6622   000279                     U4CTSPPS        equ	633	;# 
  6623   00027A                     U5RXPPS         equ	634	;# 
  6624   00027B                     U5CTSPPS        equ	635	;# 
  6625   000286                     RC4I2C          equ	646	;# 
  6626   000287                     RC3I2C          equ	647	;# 
  6627   000288                     RB2I2C          equ	648	;# 
  6628   000289                     RB1I2C          equ	649	;# 
  6629   00028A                     I2C1RXB         equ	650	;# 
  6630   00028B                     I2C1TXB         equ	651	;# 
  6631   00028C                     I2C1CNTL        equ	652	;# 
  6632   00028D                     I2C1CNTH        equ	653	;# 
  6633   00028E                     I2C1ADB0        equ	654	;# 
  6634   00028F                     I2C1ADB1        equ	655	;# 
  6635   000290                     I2C1ADR0        equ	656	;# 
  6636   000291                     I2C1ADR1        equ	657	;# 
  6637   000292                     I2C1ADR2        equ	658	;# 
  6638   000293                     I2C1ADR3        equ	659	;# 
  6639   000294                     I2C1CON0        equ	660	;# 
  6640   000295                     I2C1CON1        equ	661	;# 
  6641   000296                     I2C1CON2        equ	662	;# 
  6642   000297                     I2C1ERR         equ	663	;# 
  6643   000298                     I2C1STAT0       equ	664	;# 
  6644   000299                     I2C1STAT1       equ	665	;# 
  6645   00029A                     I2C1PIR         equ	666	;# 
  6646   00029B                     I2C1PIE         equ	667	;# 
  6647   00029C                     I2C1BTO         equ	668	;# 
  6648   00029D                     I2C1BAUD        equ	669	;# 
  6649   00029E                     I2C1CLK         equ	670	;# 
  6650   00029F                     I2C1BTOC        equ	671	;# 
  6651   0002A1                     U1RXB           equ	673	;# 
  6652   0002A1                     U1RXBL          equ	673	;# 
  6653   0002A2                     U1RXCHK         equ	674	;# 
  6654   0002A3                     U1TXB           equ	675	;# 
  6655   0002A3                     U1TXBL          equ	675	;# 
  6656   0002A4                     U1TXCHK         equ	676	;# 
  6657   0002A5                     U1P1            equ	677	;# 
  6658   0002A5                     U1P1L           equ	677	;# 
  6659   0002A6                     U1P1H           equ	678	;# 
  6660   0002A7                     U1P2            equ	679	;# 
  6661   0002A7                     U1P2L           equ	679	;# 
  6662   0002A8                     U1P2H           equ	680	;# 
  6663   0002A9                     U1P3            equ	681	;# 
  6664   0002A9                     U1P3L           equ	681	;# 
  6665   0002AA                     U1P3H           equ	682	;# 
  6666   0002AB                     U1CON0          equ	683	;# 
  6667   0002AC                     U1CON1          equ	684	;# 
  6668   0002AD                     U1CON2          equ	685	;# 
  6669   0002AE                     U1BRG           equ	686	;# 
  6670   0002AE                     U1BRGL          equ	686	;# 
  6671   0002AF                     U1BRGH          equ	687	;# 
  6672   0002B0                     U1FIFO          equ	688	;# 
  6673   0002B1                     U1UIR           equ	689	;# 
  6674   0002B2                     U1ERRIR         equ	690	;# 
  6675   0002B3                     U1ERRIE         equ	691	;# 
  6676   0002B4                     U2RXB           equ	692	;# 
  6677   0002B4                     U2RXBL          equ	692	;# 
  6678   0002B5                     U2RXCHK         equ	693	;# 
  6679   0002B6                     U2TXB           equ	694	;# 
  6680   0002B6                     U2TXBL          equ	694	;# 
  6681   0002B7                     U2TXCHK         equ	695	;# 
  6682   0002B8                     U2P1            equ	696	;# 
  6683   0002B8                     U2P1L           equ	696	;# 
  6684   0002B9                     U2P1H           equ	697	;# 
  6685   0002BA                     U2P2            equ	698	;# 
  6686   0002BA                     U2P2L           equ	698	;# 
  6687   0002BB                     U2P2H           equ	699	;# 
  6688   0002BC                     U2P3            equ	700	;# 
  6689   0002BC                     U2P3L           equ	700	;# 
  6690   0002BD                     U2P3H           equ	701	;# 
  6691   0002BE                     U2CON0          equ	702	;# 
  6692   0002BF                     U2CON1          equ	703	;# 
  6693   0002C0                     U2CON2          equ	704	;# 
  6694   0002C1                     U2BRG           equ	705	;# 
  6695   0002C1                     U2BRGL          equ	705	;# 
  6696   0002C2                     U2BRGH          equ	706	;# 
  6697   0002C3                     U2FIFO          equ	707	;# 
  6698   0002C4                     U2UIR           equ	708	;# 
  6699   0002C5                     U2ERRIR         equ	709	;# 
  6700   0002C6                     U2ERRIE         equ	710	;# 
  6701   0002C7                     U3RXB           equ	711	;# 
  6702   0002C7                     U3RXBL          equ	711	;# 
  6703   0002C9                     U3TXB           equ	713	;# 
  6704   0002C9                     U3TXBL          equ	713	;# 
  6705   0002CB                     U3P1            equ	715	;# 
  6706   0002CB                     U3P1L           equ	715	;# 
  6707   0002CD                     U3P2            equ	717	;# 
  6708   0002CD                     U3P2L           equ	717	;# 
  6709   0002CF                     U3P3            equ	719	;# 
  6710   0002CF                     U3P3L           equ	719	;# 
  6711   0002D1                     U3CON0          equ	721	;# 
  6712   0002D2                     U3CON1          equ	722	;# 
  6713   0002D3                     U3CON2          equ	723	;# 
  6714   0002D4                     U3BRG           equ	724	;# 
  6715   0002D4                     U3BRGL          equ	724	;# 
  6716   0002D5                     U3BRGH          equ	725	;# 
  6717   0002D6                     U3FIFO          equ	726	;# 
  6718   0002D7                     U3UIR           equ	727	;# 
  6719   0002D8                     U3ERRIR         equ	728	;# 
  6720   0002D9                     U3ERRIE         equ	729	;# 
  6721   0002DA                     U4RXB           equ	730	;# 
  6722   0002DA                     U4RXBL          equ	730	;# 
  6723   0002DC                     U4TXB           equ	732	;# 
  6724   0002DC                     U4TXBL          equ	732	;# 
  6725   0002DE                     U4P1            equ	734	;# 
  6726   0002DE                     U4P1L           equ	734	;# 
  6727   0002E0                     U4P2            equ	736	;# 
  6728   0002E0                     U4P2L           equ	736	;# 
  6729   0002E2                     U4P3            equ	738	;# 
  6730   0002E2                     U4P3L           equ	738	;# 
  6731   0002E4                     U4CON0          equ	740	;# 
  6732   0002E5                     U4CON1          equ	741	;# 
  6733   0002E6                     U4CON2          equ	742	;# 
  6734   0002E7                     U4BRG           equ	743	;# 
  6735   0002E7                     U4BRGL          equ	743	;# 
  6736   0002E8                     U4BRGH          equ	744	;# 
  6737   0002E9                     U4FIFO          equ	745	;# 
  6738   0002EA                     U4UIR           equ	746	;# 
  6739   0002EB                     U4ERRIR         equ	747	;# 
  6740   0002EC                     U4ERRIE         equ	748	;# 
  6741   0002ED                     U5RXB           equ	749	;# 
  6742   0002ED                     U5RXBL          equ	749	;# 
  6743   0002EF                     U5TXB           equ	751	;# 
  6744   0002EF                     U5TXBL          equ	751	;# 
  6745   0002F1                     U5P1            equ	753	;# 
  6746   0002F1                     U5P1L           equ	753	;# 
  6747   0002F3                     U5P2            equ	755	;# 
  6748   0002F3                     U5P2L           equ	755	;# 
  6749   0002F5                     U5P3            equ	757	;# 
  6750   0002F5                     U5P3L           equ	757	;# 
  6751   0002F7                     U5CON0          equ	759	;# 
  6752   0002F8                     U5CON1          equ	760	;# 
  6753   0002F9                     U5CON2          equ	761	;# 
  6754   0002FA                     U5BRG           equ	762	;# 
  6755   0002FA                     U5BRGL          equ	762	;# 
  6756   0002FB                     U5BRGH          equ	763	;# 
  6757   0002FC                     U5FIFO          equ	764	;# 
  6758   0002FD                     U5UIR           equ	765	;# 
  6759   0002FE                     U5ERRIR         equ	766	;# 
  6760   0002FF                     U5ERRIE         equ	767	;# 
  6761   000300                     SMT1TMR         equ	768	;# 
  6762   000300                     SMT1TMRL        equ	768	;# 
  6763   000301                     SMT1TMRH        equ	769	;# 
  6764   000302                     SMT1TMRU        equ	770	;# 
  6765   000303                     SMT1CPR         equ	771	;# 
  6766   000303                     SMT1CPRL        equ	771	;# 
  6767   000304                     SMT1CPRH        equ	772	;# 
  6768   000305                     SMT1CPRU        equ	773	;# 
  6769   000306                     SMT1CPW         equ	774	;# 
  6770   000306                     SMT1CPWL        equ	774	;# 
  6771   000307                     SMT1CPWH        equ	775	;# 
  6772   000308                     SMT1CPWU        equ	776	;# 
  6773   000309                     SMT1PR          equ	777	;# 
  6774   000309                     SMT1PRL         equ	777	;# 
  6775   00030A                     SMT1PRH         equ	778	;# 
  6776   00030B                     SMT1PRU         equ	779	;# 
  6777   00030C                     SMT1CON0        equ	780	;# 
  6778   00030D                     SMT1CON1        equ	781	;# 
  6779   00030E                     SMT1STAT        equ	782	;# 
  6780   00030F                     SMT1CLK         equ	783	;# 
  6781   000310                     SMT1SIG         equ	784	;# 
  6782   000311                     SMT1WIN         equ	785	;# 
  6783   000318                     TMR0L           equ	792	;# 
  6784   000318                     TMR0            equ	792	;# 
  6785   000319                     TMR0H           equ	793	;# 
  6786   000319                     PR0             equ	793	;# 
  6787   00031A                     T0CON0          equ	794	;# 
  6788   00031B                     T0CON1          equ	795	;# 
  6789   00031C                     TMR1            equ	796	;# 
  6790   00031C                     TMR1L           equ	796	;# 
  6791   00031D                     TMR1H           equ	797	;# 
  6792   00031E                     T1CON           equ	798	;# 
  6793   00031E                     TMR1CON         equ	798	;# 
  6794   00031F                     T1GCON          equ	799	;# 
  6795   00031F                     TMR1GCON        equ	799	;# 
  6796   000320                     T1GATE          equ	800	;# 
  6797   000320                     TMR1GATE        equ	800	;# 
  6798   000321                     T1CLK           equ	801	;# 
  6799   000321                     TMR1CLK         equ	801	;# 
  6800   000321                     PR1             equ	801	;# 
  6801   000322                     T2TMR           equ	802	;# 
  6802   000322                     TMR2            equ	802	;# 
  6803   000323                     T2PR            equ	803	;# 
  6804   000323                     PR2             equ	803	;# 
  6805   000324                     T2CON           equ	804	;# 
  6806   000325                     T2HLT           equ	805	;# 
  6807   000326                     T2CLKCON        equ	806	;# 
  6808   000326                     T2CLK           equ	806	;# 
  6809   000327                     T2RST           equ	807	;# 
  6810   000328                     TMR3            equ	808	;# 
  6811   000328                     TMR3L           equ	808	;# 
  6812   000329                     TMR3H           equ	809	;# 
  6813   00032A                     T3CON           equ	810	;# 
  6814   00032A                     TMR3CON         equ	810	;# 
  6815   00032B                     T3GCON          equ	811	;# 
  6816   00032B                     TMR3GCON        equ	811	;# 
  6817   00032C                     T3GATE          equ	812	;# 
  6818   00032C                     TMR3GATE        equ	812	;# 
  6819   00032D                     T3CLK           equ	813	;# 
  6820   00032D                     TMR3CLK         equ	813	;# 
  6821   00032D                     PR3             equ	813	;# 
  6822   00032E                     T4TMR           equ	814	;# 
  6823   00032E                     TMR4            equ	814	;# 
  6824   00032F                     T4PR            equ	815	;# 
  6825   00032F                     PR4             equ	815	;# 
  6826   000330                     T4CON           equ	816	;# 
  6827   000331                     T4HLT           equ	817	;# 
  6828   000332                     T4CLKCON        equ	818	;# 
  6829   000332                     T4CLK           equ	818	;# 
  6830   000333                     T4RST           equ	819	;# 
  6831   000334                     TMR5            equ	820	;# 
  6832   000334                     TMR5L           equ	820	;# 
  6833   000335                     TMR5H           equ	821	;# 
  6834   000336                     T5CON           equ	822	;# 
  6835   000336                     TMR5CON         equ	822	;# 
  6836   000337                     T5GCON          equ	823	;# 
  6837   000337                     TMR5GCON        equ	823	;# 
  6838   000338                     T5GATE          equ	824	;# 
  6839   000338                     TMR5GATE        equ	824	;# 
  6840   000339                     T5CLK           equ	825	;# 
  6841   000339                     TMR5CLK         equ	825	;# 
  6842   000339                     PR5             equ	825	;# 
  6843   00033A                     T6TMR           equ	826	;# 
  6844   00033A                     TMR6            equ	826	;# 
  6845   00033B                     T6PR            equ	827	;# 
  6846   00033B                     PR6             equ	827	;# 
  6847   00033C                     T6CON           equ	828	;# 
  6848   00033D                     T6HLT           equ	829	;# 
  6849   00033E                     T6CLKCON        equ	830	;# 
  6850   00033E                     T6CLK           equ	830	;# 
  6851   00033F                     T6RST           equ	831	;# 
  6852   000340                     CCPR1           equ	832	;# 
  6853   000340                     CCPR1L          equ	832	;# 
  6854   000341                     CCPR1H          equ	833	;# 
  6855   000342                     CCP1CON         equ	834	;# 
  6856   000343                     CCP1CAP         equ	835	;# 
  6857   000344                     CCPR2           equ	836	;# 
  6858   000344                     CCPR2L          equ	836	;# 
  6859   000345                     CCPR2H          equ	837	;# 
  6860   000346                     CCP2CON         equ	838	;# 
  6861   000347                     CCP2CAP         equ	839	;# 
  6862   000348                     CCPR3           equ	840	;# 
  6863   000348                     CCPR3L          equ	840	;# 
  6864   000349                     CCPR3H          equ	841	;# 
  6865   00034A                     CCP3CON         equ	842	;# 
  6866   00034B                     CCP3CAP         equ	843	;# 
  6867   00034C                     CCPTMRS0        equ	844	;# 
  6868   00034F                     CRCDATA         equ	847	;# 
  6869   00034F                     CRCDATAL        equ	847	;# 
  6870   000350                     CRCDATAH        equ	848	;# 
  6871   000351                     CRCDATAU        equ	849	;# 
  6872   000352                     CRCDATAT        equ	850	;# 
  6873   000353                     CRCOUT          equ	851	;# 
  6874   000353                     CRCSHFT         equ	851	;# 
  6875   000353                     CRCXOR          equ	851	;# 
  6876   000353                     CRCOUTL         equ	851	;# 
  6877   000353                     CRCSHFTL        equ	851	;# 
  6878   000353                     CRCSHIFTL       equ	851	;# 
  6879   000353                     CRCXORL         equ	851	;# 
  6880   000354                     CRCOUTH         equ	852	;# 
  6881   000354                     CRCSHFTH        equ	852	;# 
  6882   000354                     CRCSHIFTH       equ	852	;# 
  6883   000354                     CRCXORH         equ	852	;# 
  6884   000355                     CRCOUTU         equ	853	;# 
  6885   000355                     CRCSHFTU        equ	853	;# 
  6886   000355                     CRCSHIFTU       equ	853	;# 
  6887   000355                     CRCXORU         equ	853	;# 
  6888   000356                     CRCOUTT         equ	854	;# 
  6889   000356                     CRCSHFTT        equ	854	;# 
  6890   000356                     CRCSHIFTT       equ	854	;# 
  6891   000356                     CRCXORT         equ	854	;# 
  6892   000357                     CRCCON0         equ	855	;# 
  6893   000358                     CRCCON1         equ	856	;# 
  6894   000359                     CRCCON2         equ	857	;# 
  6895   00035A                     SCANLADR        equ	858	;# 
  6896   00035A                     SCANLADRL       equ	858	;# 
  6897   00035B                     SCANLADRH       equ	859	;# 
  6898   00035C                     SCANLADRU       equ	860	;# 
  6899   00035D                     SCANHADR        equ	861	;# 
  6900   00035D                     SCANHADRL       equ	861	;# 
  6901   00035E                     SCANHADRH       equ	862	;# 
  6902   00035F                     SCANHADRU       equ	863	;# 
  6903   000360                     SCANCON0        equ	864	;# 
  6904   000361                     SCANTRIG        equ	865	;# 
  6905   000362                     IPR0            equ	866	;# 
  6906   000363                     IPR1            equ	867	;# 
  6907   000364                     IPR2            equ	868	;# 
  6908   000365                     IPR3            equ	869	;# 
  6909   000366                     IPR4            equ	870	;# 
  6910   000367                     IPR5            equ	871	;# 
  6911   000368                     IPR6            equ	872	;# 
  6912   000369                     IPR7            equ	873	;# 
  6913   00036A                     IPR8            equ	874	;# 
  6914   00036B                     IPR9            equ	875	;# 
  6915   00036C                     IPR10           equ	876	;# 
  6916   00036D                     IPR11           equ	877	;# 
  6917   00036E                     IPR12           equ	878	;# 
  6918   00036F                     IPR13           equ	879	;# 
  6919   000370                     IPR14           equ	880	;# 
  6920   000371                     IPR15           equ	881	;# 
  6921   000373                     STATUS_CSHAD    equ	883	;# 
  6922   000374                     WREG_CSHAD      equ	884	;# 
  6923   000375                     BSR_CSHAD       equ	885	;# 
  6924   000376                     SHADCON         equ	886	;# 
  6925   000377                     STATUS_SHAD     equ	887	;# 
  6926   000378                     WREG_SHAD       equ	888	;# 
  6927   000379                     BSR_SHAD        equ	889	;# 
  6928   00037A                     PCLATH_SHAD     equ	890	;# 
  6929   00037B                     PCLATU_SHAD     equ	891	;# 
  6930   00037C                     FSR0SH          equ	892	;# 
  6931   00037C                     FSR0L_SHAD      equ	892	;# 
  6932   00037D                     FSR0H_SHAD      equ	893	;# 
  6933   00037E                     FSR1SH          equ	894	;# 
  6934   00037E                     FSR1L_SHAD      equ	894	;# 
  6935   00037F                     FSR1H_SHAD      equ	895	;# 
  6936   000380                     FSR2SH          equ	896	;# 
  6937   000380                     FSR2L_SHAD      equ	896	;# 
  6938   000381                     FSR2H_SHAD      equ	897	;# 
  6939   000382                     PRODSH          equ	898	;# 
  6940   000382                     PRODL_SHAD      equ	898	;# 
  6941   000383                     PRODH_SHAD      equ	899	;# 
  6942   000387                     TU16ACON0       equ	903	;# 
  6943   000388                     TU16ACON1       equ	904	;# 
  6944   000389                     TU16AHLT        equ	905	;# 
  6945   00038A                     TU16APS         equ	906	;# 
  6946   00038B                     TU16ATMR        equ	907	;# 
  6947   00038B                     TU16ACR         equ	907	;# 
  6948   00038B                     TU16ATMRL       equ	907	;# 
  6949   00038B                     TU16ACRL        equ	907	;# 
  6950   00038C                     TU16ATMRH       equ	908	;# 
  6951   00038C                     TU16ACRH        equ	908	;# 
  6952   00038D                     TU16APR         equ	909	;# 
  6953   00038D                     TU16APRL        equ	909	;# 
  6954   00038E                     TU16APRH        equ	910	;# 
  6955   00038F                     TU16ACLK        equ	911	;# 
  6956   000390                     TU16AERS        equ	912	;# 
  6957   000393                     TU16BCON0       equ	915	;# 
  6958   000394                     TU16BCON1       equ	916	;# 
  6959   000395                     TU16BHLT        equ	917	;# 
  6960   000396                     TU16BPS         equ	918	;# 
  6961   000397                     TU16BTMR        equ	919	;# 
  6962   000397                     TU16BCR         equ	919	;# 
  6963   000397                     TU16BTMRL       equ	919	;# 
  6964   000397                     TU16BCRL        equ	919	;# 
  6965   000398                     TU16BTMRH       equ	920	;# 
  6966   000398                     TU16BCRH        equ	920	;# 
  6967   000399                     TU16BPR         equ	921	;# 
  6968   000399                     TU16BPRL        equ	921	;# 
  6969   00039A                     TU16BPRH        equ	922	;# 
  6970   00039B                     TU16BCLK        equ	923	;# 
  6971   00039C                     TU16BERS        equ	924	;# 
  6972   0003BB                     TUCHAIN         equ	955	;# 
  6973   0003BC                     CWG1CLK         equ	956	;# 
  6974   0003BC                     CWG1CLKCON      equ	956	;# 
  6975   0003BD                     CWG1ISM         equ	957	;# 
  6976   0003BE                     CWG1DBR         equ	958	;# 
  6977   0003BF                     CWG1DBF         equ	959	;# 
  6978   0003C0                     CWG1CON0        equ	960	;# 
  6979   0003C1                     CWG1CON1        equ	961	;# 
  6980   0003C2                     CWG1AS0         equ	962	;# 
  6981   0003C3                     CWG1AS1         equ	963	;# 
  6982   0003C4                     CWG1STR         equ	964	;# 
  6983   0003C5                     CWG2CLK         equ	965	;# 
  6984   0003C5                     CWG2CLKCON      equ	965	;# 
  6985   0003C6                     CWG2ISM         equ	966	;# 
  6986   0003C7                     CWG2DBR         equ	967	;# 
  6987   0003C8                     CWG2DBF         equ	968	;# 
  6988   0003C9                     CWG2CON0        equ	969	;# 
  6989   0003CA                     CWG2CON1        equ	970	;# 
  6990   0003CB                     CWG2AS0         equ	971	;# 
  6991   0003CC                     CWG2AS1         equ	972	;# 
  6992   0003CD                     CWG2STR         equ	973	;# 
  6993   0003CE                     CWG3CLK         equ	974	;# 
  6994   0003CE                     CWG3CLKCON      equ	974	;# 
  6995   0003CF                     CWG3ISM         equ	975	;# 
  6996   0003D0                     CWG3DBR         equ	976	;# 
  6997   0003D1                     CWG3DBF         equ	977	;# 
  6998   0003D2                     CWG3CON0        equ	978	;# 
  6999   0003D3                     CWG3CON1        equ	979	;# 
  7000   0003D4                     CWG3AS0         equ	980	;# 
  7001   0003D5                     CWG3AS1         equ	981	;# 
  7002   0003D6                     CWG3STR         equ	982	;# 
  7003   0003D7                     FVRCON          equ	983	;# 
  7004   0003D8                     ADCPCON         equ	984	;# 
  7005   0003D8                     ADCP            equ	984	;# 
  7006   0003D9                     ADLTH           equ	985	;# 
  7007   0003D9                     ADLTHL          equ	985	;# 
  7008   0003DA                     ADLTHH          equ	986	;# 
  7009   0003DB                     ADUTH           equ	987	;# 
  7010   0003DB                     ADUTHL          equ	987	;# 
  7011   0003DC                     ADUTHH          equ	988	;# 
  7012   0003DD                     ADERR           equ	989	;# 
  7013   0003DD                     ADERRL          equ	989	;# 
  7014   0003DE                     ADERRH          equ	990	;# 
  7015   0003DF                     ADSTPT          equ	991	;# 
  7016   0003DF                     ADSTPTL         equ	991	;# 
  7017   0003E0                     ADSTPTH         equ	992	;# 
  7018   0003E1                     ADFLTR          equ	993	;# 
  7019   0003E1                     ADFLTRL         equ	993	;# 
  7020   0003E2                     ADFLTRH         equ	994	;# 
  7021   0003E3                     ADACC           equ	995	;# 
  7022   0003E3                     ADACCL          equ	995	;# 
  7023   0003E4                     ADACCH          equ	996	;# 
  7024   0003E5                     ADACCU          equ	997	;# 
  7025   0003E6                     ADCNT           equ	998	;# 
  7026   0003E7                     ADRPT           equ	999	;# 
  7027   0003E8                     ADPREV          equ	1000	;# 
  7028   0003E8                     ADPREVL         equ	1000	;# 
  7029   0003E9                     ADPREVH         equ	1001	;# 
  7030   0003EA                     ADRES           equ	1002	;# 
  7031   0003EA                     ADRESL          equ	1002	;# 
  7032   0003EB                     ADRESH          equ	1003	;# 
  7033   0003EC                     ADPCH           equ	1004	;# 
  7034   0003EE                     ADACQ           equ	1006	;# 
  7035   0003EE                     ADACQL          equ	1006	;# 
  7036   0003EF                     ADACQH          equ	1007	;# 
  7037   0003F0                     ADCAP           equ	1008	;# 
  7038   0003F1                     ADPRE           equ	1009	;# 
  7039   0003F1                     ADPREL          equ	1009	;# 
  7040   0003F2                     ADPREH          equ	1010	;# 
  7041   0003F3                     ADCON0          equ	1011	;# 
  7042   0003F4                     ADCON1          equ	1012	;# 
  7043   0003F5                     ADCON2          equ	1013	;# 
  7044   0003F6                     ADCON3          equ	1014	;# 
  7045   0003F7                     ADSTAT          equ	1015	;# 
  7046   0003F8                     ADREF           equ	1016	;# 
  7047   0003F9                     ADACT           equ	1017	;# 
  7048   0003FA                     ADCLK           equ	1018	;# 
  7049   0003FB                     ADCTX           equ	1019	;# 
  7050   0003FC                     ADCSEL1         equ	1020	;# 
  7051   0003FD                     ADCSEL2         equ	1021	;# 
  7052   0003FE                     ADCSEL3         equ	1022	;# 
  7053   0003FF                     ADCSEL4         equ	1023	;# 
  7054   000400                     ANSELA          equ	1024	;# 
  7055   000401                     WPUA            equ	1025	;# 
  7056   000402                     ODCONA          equ	1026	;# 
  7057   000403                     SLRCONA         equ	1027	;# 
  7058   000404                     INLVLA          equ	1028	;# 
  7059   000405                     IOCAP           equ	1029	;# 
  7060   000406                     IOCAN           equ	1030	;# 
  7061   000407                     IOCAF           equ	1031	;# 
  7062   000408                     ANSELB          equ	1032	;# 
  7063   000409                     WPUB            equ	1033	;# 
  7064   00040A                     ODCONB          equ	1034	;# 
  7065   00040B                     SLRCONB         equ	1035	;# 
  7066   00040C                     INLVLB          equ	1036	;# 
  7067   00040D                     IOCBP           equ	1037	;# 
  7068   00040E                     IOCBN           equ	1038	;# 
  7069   00040F                     IOCBF           equ	1039	;# 
  7070   000410                     ANSELC          equ	1040	;# 
  7071   000411                     WPUC            equ	1041	;# 
  7072   000412                     ODCONC          equ	1042	;# 
  7073   000413                     SLRCONC         equ	1043	;# 
  7074   000414                     INLVLC          equ	1044	;# 
  7075   000415                     IOCCP           equ	1045	;# 
  7076   000416                     IOCCN           equ	1046	;# 
  7077   000417                     IOCCF           equ	1047	;# 
  7078   000421                     WPUE            equ	1057	;# 
  7079   000424                     INLVLE          equ	1060	;# 
  7080   000425                     IOCEP           equ	1061	;# 
  7081   000426                     IOCEN           equ	1062	;# 
  7082   000427                     IOCEF           equ	1063	;# 
  7083   000440                     NCO1ACC         equ	1088	;# 
  7084   000440                     NCO1ACCL        equ	1088	;# 
  7085   000441                     NCO1ACCH        equ	1089	;# 
  7086   000442                     NCO1ACCU        equ	1090	;# 
  7087   000443                     NCO1INC         equ	1091	;# 
  7088   000443                     NCO1INCL        equ	1091	;# 
  7089   000444                     NCO1INCH        equ	1092	;# 
  7090   000445                     NCO1INCU        equ	1093	;# 
  7091   000446                     NCO1CON         equ	1094	;# 
  7092   000447                     NCO1CLK         equ	1095	;# 
  7093   000448                     NCO2ACC         equ	1096	;# 
  7094   000448                     NCO2ACCL        equ	1096	;# 
  7095   000449                     NCO2ACCH        equ	1097	;# 
  7096   00044A                     NCO2ACCU        equ	1098	;# 
  7097   00044B                     NCO2INC         equ	1099	;# 
  7098   00044B                     NCO2INCL        equ	1099	;# 
  7099   00044C                     NCO2INCH        equ	1100	;# 
  7100   00044D                     NCO2INCU        equ	1101	;# 
  7101   00044E                     NCO2CON         equ	1102	;# 
  7102   00044F                     NCO2CLK         equ	1103	;# 
  7103   000450                     NCO3ACC         equ	1104	;# 
  7104   000450                     NCO3ACCL        equ	1104	;# 
  7105   000451                     NCO3ACCH        equ	1105	;# 
  7106   000452                     NCO3ACCU        equ	1106	;# 
  7107   000453                     NCO3INC         equ	1107	;# 
  7108   000453                     NCO3INCL        equ	1107	;# 
  7109   000454                     NCO3INCH        equ	1108	;# 
  7110   000455                     NCO3INCU        equ	1109	;# 
  7111   000456                     NCO3CON         equ	1110	;# 
  7112   000457                     NCO3CLK         equ	1111	;# 
  7113   000458                     FSCMCON         equ	1112	;# 
  7114   000459                     IVTLOCK         equ	1113	;# 
  7115   00045A                     IVTAD           equ	1114	;# 
  7116   00045A                     IVTADL          equ	1114	;# 
  7117   00045B                     IVTADH          equ	1115	;# 
  7118   00045C                     IVTADU          equ	1116	;# 
  7119   00045D                     IVTBASE         equ	1117	;# 
  7120   00045D                     IVTBASEL        equ	1117	;# 
  7121   00045E                     IVTBASEH        equ	1118	;# 
  7122   00045F                     IVTBASEU        equ	1119	;# 
  7123   000460                     PWM1ERS         equ	1120	;# 
  7124   000461                     PWM1CLK         equ	1121	;# 
  7125   000462                     PWM1LDS         equ	1122	;# 
  7126   000463                     PWM1PR          equ	1123	;# 
  7127   000463                     PWM1PRL         equ	1123	;# 
  7128   000464                     PWM1PRH         equ	1124	;# 
  7129   000465                     PWM1CPRE        equ	1125	;# 
  7130   000466                     PWM1PIPOS       equ	1126	;# 
  7131   000467                     PWM1GIR         equ	1127	;# 
  7132   000468                     PWM1GIE         equ	1128	;# 
  7133   000469                     PWM1CON         equ	1129	;# 
  7134   00046A                     PWM1S1CFG       equ	1130	;# 
  7135   00046B                     PWM1S1P1        equ	1131	;# 
  7136   00046B                     PWM1S1P1L       equ	1131	;# 
  7137   00046C                     PWM1S1P1H       equ	1132	;# 
  7138   00046D                     PWM1S1P2        equ	1133	;# 
  7139   00046D                     PWM1S1P2L       equ	1133	;# 
  7140   00046E                     PWM1S1P2H       equ	1134	;# 
  7141   00046F                     PWM2ERS         equ	1135	;# 
  7142   000470                     PWM2CLK         equ	1136	;# 
  7143   000471                     PWM2LDS         equ	1137	;# 
  7144   000472                     PWM2PR          equ	1138	;# 
  7145   000472                     PWM2PRL         equ	1138	;# 
  7146   000473                     PWM2PRH         equ	1139	;# 
  7147   000474                     PWM2CPRE        equ	1140	;# 
  7148   000475                     PWM2PIPOS       equ	1141	;# 
  7149   000476                     PWM2GIR         equ	1142	;# 
  7150   000477                     PWM2GIE         equ	1143	;# 
  7151   000478                     PWM2CON         equ	1144	;# 
  7152   000479                     PWM2S1CFG       equ	1145	;# 
  7153   00047A                     PWM2S1P1        equ	1146	;# 
  7154   00047A                     PWM2S1P1L       equ	1146	;# 
  7155   00047B                     PWM2S1P1H       equ	1147	;# 
  7156   00047C                     PWM2S1P2        equ	1148	;# 
  7157   00047C                     PWM2S1P2L       equ	1148	;# 
  7158   00047D                     PWM2S1P2H       equ	1149	;# 
  7159   00047E                     PWM3ERS         equ	1150	;# 
  7160   00047F                     PWM3CLK         equ	1151	;# 
  7161   000480                     PWM3LDS         equ	1152	;# 
  7162   000481                     PWM3PR          equ	1153	;# 
  7163   000481                     PWM3PRL         equ	1153	;# 
  7164   000482                     PWM3PRH         equ	1154	;# 
  7165   000483                     PWM3CPRE        equ	1155	;# 
  7166   000484                     PWM3PIPOS       equ	1156	;# 
  7167   000485                     PWM3GIR         equ	1157	;# 
  7168   000486                     PWM3GIE         equ	1158	;# 
  7169   000487                     PWM3CON         equ	1159	;# 
  7170   000488                     PWM3S1CFG       equ	1160	;# 
  7171   000489                     PWM3S1P1        equ	1161	;# 
  7172   000489                     PWM3S1P1L       equ	1161	;# 
  7173   00048A                     PWM3S1P1H       equ	1162	;# 
  7174   00048B                     PWM3S1P2        equ	1163	;# 
  7175   00048B                     PWM3S1P2L       equ	1163	;# 
  7176   00048C                     PWM3S1P2H       equ	1164	;# 
  7177   00048D                     PWM4ERS         equ	1165	;# 
  7178   00048E                     PWM4CLK         equ	1166	;# 
  7179   00048F                     PWM4LDS         equ	1167	;# 
  7180   000490                     PWM4PR          equ	1168	;# 
  7181   000490                     PWM4PRL         equ	1168	;# 
  7182   000491                     PWM4PRH         equ	1169	;# 
  7183   000492                     PWM4CPRE        equ	1170	;# 
  7184   000493                     PWM4PIPOS       equ	1171	;# 
  7185   000494                     PWM4GIR         equ	1172	;# 
  7186   000495                     PWM4GIE         equ	1173	;# 
  7187   000496                     PWM4CON         equ	1174	;# 
  7188   000497                     PWM4S1CFG       equ	1175	;# 
  7189   000498                     PWM4S1P1        equ	1176	;# 
  7190   000498                     PWM4S1P1L       equ	1176	;# 
  7191   000499                     PWM4S1P1H       equ	1177	;# 
  7192   00049A                     PWM4S1P2        equ	1178	;# 
  7193   00049A                     PWM4S1P2L       equ	1178	;# 
  7194   00049B                     PWM4S1P2H       equ	1179	;# 
  7195   00049C                     PWMLOAD         equ	1180	;# 
  7196   00049D                     PWMEN           equ	1181	;# 
  7197   00049E                     PIE0            equ	1182	;# 
  7198   00049F                     PIE1            equ	1183	;# 
  7199   0004A0                     PIE2            equ	1184	;# 
  7200   0004A1                     PIE3            equ	1185	;# 
  7201   0004A2                     PIE4            equ	1186	;# 
  7202   0004A3                     PIE5            equ	1187	;# 
  7203   0004A4                     PIE6            equ	1188	;# 
  7204   0004A5                     PIE7            equ	1189	;# 
  7205   0004A6                     PIE8            equ	1190	;# 
  7206   0004A7                     PIE9            equ	1191	;# 
  7207   0004A8                     PIE10           equ	1192	;# 
  7208   0004A9                     PIE11           equ	1193	;# 
  7209   0004AA                     PIE12           equ	1194	;# 
  7210   0004AB                     PIE13           equ	1195	;# 
  7211   0004AC                     PIE14           equ	1196	;# 
  7212   0004AD                     PIE15           equ	1197	;# 
  7213   0004AE                     PIR0            equ	1198	;# 
  7214   0004AF                     PIR1            equ	1199	;# 
  7215   0004B0                     PIR2            equ	1200	;# 
  7216   0004B1                     PIR3            equ	1201	;# 
  7217   0004B2                     PIR4            equ	1202	;# 
  7218   0004B3                     PIR5            equ	1203	;# 
  7219   0004B4                     PIR6            equ	1204	;# 
  7220   0004B5                     PIR7            equ	1205	;# 
  7221   0004B6                     PIR8            equ	1206	;# 
  7222   0004B7                     PIR9            equ	1207	;# 
  7223   0004B8                     PIR10           equ	1208	;# 
  7224   0004B9                     PIR11           equ	1209	;# 
  7225   0004BA                     PIR12           equ	1210	;# 
  7226   0004BB                     PIR13           equ	1211	;# 
  7227   0004BC                     PIR14           equ	1212	;# 
  7228   0004BD                     PIR15           equ	1213	;# 
  7229   0004BE                     LATA            equ	1214	;# 
  7230   0004BF                     LATB            equ	1215	;# 
  7231   0004C0                     LATC            equ	1216	;# 
  7232   0004C6                     TRISA           equ	1222	;# 
  7233   0004C7                     TRISB           equ	1223	;# 
  7234   0004C8                     TRISC           equ	1224	;# 
  7235   0004CA                     TRISE           equ	1226	;# 
  7236   0004CE                     PORTA           equ	1230	;# 
  7237   0004CF                     PORTB           equ	1231	;# 
  7238   0004D0                     PORTC           equ	1232	;# 
  7239   0004D2                     PORTE           equ	1234	;# 
  7240   0004D6                     INTCON0         equ	1238	;# 
  7241   0004D7                     INTCON1         equ	1239	;# 
  7242   0004D8                     STATUS          equ	1240	;# 
  7243   0004D9                     FSR2            equ	1241	;# 
  7244   0004D9                     FSR2L           equ	1241	;# 
  7245   0004DA                     FSR2H           equ	1242	;# 
  7246   0004DB                     PLUSW2          equ	1243	;# 
  7247   0004DC                     PREINC2         equ	1244	;# 
  7248   0004DD                     POSTDEC2        equ	1245	;# 
  7249   0004DE                     POSTINC2        equ	1246	;# 
  7250   0004DF                     INDF2           equ	1247	;# 
  7251   0004E0                     BSR             equ	1248	;# 
  7252   0004E1                     FSR1            equ	1249	;# 
  7253   0004E1                     FSR1L           equ	1249	;# 
  7254   0004E2                     FSR1H           equ	1250	;# 
  7255   0004E3                     PLUSW1          equ	1251	;# 
  7256   0004E4                     PREINC1         equ	1252	;# 
  7257   0004E5                     POSTDEC1        equ	1253	;# 
  7258   0004E6                     POSTINC1        equ	1254	;# 
  7259   0004E7                     INDF1           equ	1255	;# 
  7260   0004E8                     WREG            equ	1256	;# 
  7261   0004E9                     FSR0            equ	1257	;# 
  7262   0004E9                     FSR0L           equ	1257	;# 
  7263   0004EA                     FSR0H           equ	1258	;# 
  7264   0004EB                     PLUSW0          equ	1259	;# 
  7265   0004EC                     PREINC0         equ	1260	;# 
  7266   0004ED                     POSTDEC0        equ	1261	;# 
  7267   0004EE                     POSTINC0        equ	1262	;# 
  7268   0004EF                     INDF0           equ	1263	;# 
  7269   0004F0                     PCON0           equ	1264	;# 
  7270   0004F1                     PCON1           equ	1265	;# 
  7271   0004F2                     CPUDOZE         equ	1266	;# 
  7272   0004F3                     PROD            equ	1267	;# 
  7273   0004F3                     PRODL           equ	1267	;# 
  7274   0004F4                     PRODH           equ	1268	;# 
  7275   0004F5                     TABLAT          equ	1269	;# 
  7276   0004F6                     TBLPTR          equ	1270	;# 
  7277   0004F6                     TBLPTRL         equ	1270	;# 
  7278   0004F7                     TBLPTRH         equ	1271	;# 
  7279   0004F8                     TBLPTRU         equ	1272	;# 
  7280   0004F9                     PCLAT           equ	1273	;# 
  7281   0004F9                     PCL             equ	1273	;# 
  7282   0004FA                     PCLATH          equ	1274	;# 
  7283   0004FB                     PCLATU          equ	1275	;# 
  7284   0004FC                     STKPTR          equ	1276	;# 
  7285   0004FD                     TOS             equ	1277	;# 
  7286   0004FD                     TOSL            equ	1277	;# 
  7287   0004FE                     TOSH            equ	1278	;# 
  7288   0004FF                     TOSU            equ	1279	;# 
  7289   000038                     BOOTREG         equ	56	;# 
  7290   000039                     CLKRCON         equ	57	;# 
  7291   00003A                     CLKRCLK         equ	58	;# 
  7292   000040                     NVMCON0         equ	64	;# 
  7293   000041                     NVMCON1         equ	65	;# 
  7294   000042                     NVMLOCK         equ	66	;# 
  7295   000043                     NVMADR          equ	67	;# 
  7296   000043                     NVMADRL         equ	67	;# 
  7297   000044                     NVMADRH         equ	68	;# 
  7298   000045                     NVMADRU         equ	69	;# 
  7299   000046                     NVMDAT          equ	70	;# 
  7300   000046                     NVMDATL         equ	70	;# 
  7301   000047                     NVMDATH         equ	71	;# 
  7302   000048                     VREGCON         equ	72	;# 
  7303   000049                     BORCON          equ	73	;# 
  7304   00004A                     HLVDCON0        equ	74	;# 
  7305   00004B                     HLVDCON1        equ	75	;# 
  7306   00004C                     ZCDCON          equ	76	;# 
  7307   000060                     PMD0            equ	96	;# 
  7308   000061                     PMD1            equ	97	;# 
  7309   000062                     PMD2            equ	98	;# 
  7310   000063                     PMD3            equ	99	;# 
  7311   000064                     PMD4            equ	100	;# 
  7312   000065                     PMD5            equ	101	;# 
  7313   000066                     PMD6            equ	102	;# 
  7314   000067                     PMD7            equ	103	;# 
  7315   000068                     PMD8            equ	104	;# 
  7316   00006A                     MD1CON0         equ	106	;# 
  7317   00006B                     MD1CON1         equ	107	;# 
  7318   00006C                     MD1SRC          equ	108	;# 
  7319   00006D                     MD1CARL         equ	109	;# 
  7320   00006E                     MD1CARH         equ	110	;# 
  7321   00006F                     CMOUT           equ	111	;# 
  7322   000070                     CM1CON0         equ	112	;# 
  7323   000071                     CM1CON1         equ	113	;# 
  7324   000072                     CM1NCH          equ	114	;# 
  7325   000073                     CM1PCH          equ	115	;# 
  7326   000074                     CM2CON0         equ	116	;# 
  7327   000075                     CM2CON1         equ	117	;# 
  7328   000076                     CM2NCH          equ	118	;# 
  7329   000077                     CM2PCH          equ	119	;# 
  7330   000078                     WDTCON0         equ	120	;# 
  7331   000079                     WDTCON1         equ	121	;# 
  7332   00007A                     WDTPSL          equ	122	;# 
  7333   00007B                     WDTPSH          equ	123	;# 
  7334   00007C                     WDTTMR          equ	124	;# 
  7335   00007D                     DAC1DAT         equ	125	;# 
  7336   00007D                     DAC1DATL        equ	125	;# 
  7337   00007F                     DAC1CON         equ	127	;# 
  7338   000080                     SPI1RXB         equ	128	;# 
  7339   000081                     SPI1TXB         equ	129	;# 
  7340   000082                     SPI1TCNT        equ	130	;# 
  7341   000082                     SPI1TCNTL       equ	130	;# 
  7342   000083                     SPI1TCNTH       equ	131	;# 
  7343   000084                     SPI1CON0        equ	132	;# 
  7344   000085                     SPI1CON1        equ	133	;# 
  7345   000086                     SPI1CON2        equ	134	;# 
  7346   000087                     SPI1STATUS      equ	135	;# 
  7347   000088                     SPI1TWIDTH      equ	136	;# 
  7348   000089                     SPI1BAUD        equ	137	;# 
  7349   00008A                     SPI1INTF        equ	138	;# 
  7350   00008B                     SPI1INTE        equ	139	;# 
  7351   00008C                     SPI1CLK         equ	140	;# 
  7352   00008D                     SPI2RXB         equ	141	;# 
  7353   00008E                     SPI2TXB         equ	142	;# 
  7354   00008F                     SPI2TCNT        equ	143	;# 
  7355   00008F                     SPI2TCNTL       equ	143	;# 
  7356   000090                     SPI2TCNTH       equ	144	;# 
  7357   000091                     SPI2CON0        equ	145	;# 
  7358   000092                     SPI2CON1        equ	146	;# 
  7359   000093                     SPI2CON2        equ	147	;# 
  7360   000094                     SPI2STATUS      equ	148	;# 
  7361   000095                     SPI2TWIDTH      equ	149	;# 
  7362   000096                     SPI2BAUD        equ	150	;# 
  7363   000097                     SPI2INTF        equ	151	;# 
  7364   000098                     SPI2INTE        equ	152	;# 
  7365   000099                     SPI2CLK         equ	153	;# 
  7366   0000AC                     ACTCON          equ	172	;# 
  7367   0000AD                     OSCCON1         equ	173	;# 
  7368   0000AE                     OSCCON2         equ	174	;# 
  7369   0000AF                     OSCCON3         equ	175	;# 
  7370   0000B0                     OSCTUNE         equ	176	;# 
  7371   0000B1                     OSCFRQ          equ	177	;# 
  7372   0000B1                     OSCFREQ         equ	177	;# 
  7373   0000B2                     OSCSTAT         equ	178	;# 
  7374   0000B2                     OSCSTAT1        equ	178	;# 
  7375   0000B3                     OSCEN           equ	179	;# 
  7376   0000B4                     PRLOCK          equ	180	;# 
  7377   0000B5                     SCANPR          equ	181	;# 
  7378   0000B6                     DMA1PR          equ	182	;# 
  7379   0000B7                     DMA2PR          equ	183	;# 
  7380   0000B8                     DMA3PR          equ	184	;# 
  7381   0000B9                     DMA4PR          equ	185	;# 
  7382   0000BA                     DMA5PR          equ	186	;# 
  7383   0000BB                     DMA6PR          equ	187	;# 
  7384   0000BC                     DMA7PR          equ	188	;# 
  7385   0000BD                     DMA8PR          equ	189	;# 
  7386   0000BE                     MAINPR          equ	190	;# 
  7387   0000BF                     ISRPR           equ	191	;# 
  7388   0000D4                     CLCDATA         equ	212	;# 
  7389   0000D5                     CLCSELECT       equ	213	;# 
  7390   0000D6                     CLCnCON         equ	214	;# 
  7391   0000D7                     CLCnPOL         equ	215	;# 
  7392   0000D8                     CLCnSEL0        equ	216	;# 
  7393   0000D9                     CLCnSEL1        equ	217	;# 
  7394   0000DA                     CLCnSEL2        equ	218	;# 
  7395   0000DB                     CLCnSEL3        equ	219	;# 
  7396   0000DC                     CLCnGLS0        equ	220	;# 
  7397   0000DD                     CLCnGLS1        equ	221	;# 
  7398   0000DE                     CLCnGLS2        equ	222	;# 
  7399   0000DF                     CLCnGLS3        equ	223	;# 
  7400   0000E8                     DMASELECT       equ	232	;# 
  7401   0000E9                     DMAnBUF         equ	233	;# 
  7402   0000EA                     DMAnDCNT        equ	234	;# 
  7403   0000EA                     DMAnDCNTL       equ	234	;# 
  7404   0000EB                     DMAnDCNTH       equ	235	;# 
  7405   0000EC                     DMAnDPTR        equ	236	;# 
  7406   0000EC                     DMAnDPTRL       equ	236	;# 
  7407   0000ED                     DMAnDPTRH       equ	237	;# 
  7408   0000EE                     DMAnDSZ         equ	238	;# 
  7409   0000EE                     DMAnDSZL        equ	238	;# 
  7410   0000EF                     DMAnDSZH        equ	239	;# 
  7411   0000F0                     DMAnDSA         equ	240	;# 
  7412   0000F0                     DMAnDSAL        equ	240	;# 
  7413   0000F1                     DMAnDSAH        equ	241	;# 
  7414   0000F2                     DMAnSCNT        equ	242	;# 
  7415   0000F2                     DMAnSCNTL       equ	242	;# 
  7416   0000F3                     DMAnSCNTH       equ	243	;# 
  7417   0000F4                     DMAnSPTR        equ	244	;# 
  7418   0000F4                     DMAnSPTRL       equ	244	;# 
  7419   0000F5                     DMAnSPTRH       equ	245	;# 
  7420   0000F6                     DMAnSPTRU       equ	246	;# 
  7421   0000F7                     DMAnSSZ         equ	247	;# 
  7422   0000F7                     DMAnSSZL        equ	247	;# 
  7423   0000F8                     DMAnSSZH        equ	248	;# 
  7424   0000F9                     DMAnSSA         equ	249	;# 
  7425   0000F9                     DMAnSSAL        equ	249	;# 
  7426   0000FA                     DMAnSSAH        equ	250	;# 
  7427   0000FB                     DMAnSSAU        equ	251	;# 
  7428   0000FC                     DMAnCON0        equ	252	;# 
  7429   0000FD                     DMAnCON1        equ	253	;# 
  7430   0000FE                     DMAnAIRQ        equ	254	;# 
  7431   0000FF                     DMAnSIRQ        equ	255	;# 
  7432   000100                     C1CONL          equ	256	;# 
  7433   000101                     C1CONH          equ	257	;# 
  7434   000102                     C1CONU          equ	258	;# 
  7435   000103                     C1CONT          equ	259	;# 
  7436   000104                     C1NBTCFGL       equ	260	;# 
  7437   000105                     C1NBTCFGH       equ	261	;# 
  7438   000106                     C1NBTCFGU       equ	262	;# 
  7439   000107                     C1NBTCFGT       equ	263	;# 
  7440   000108                     C1DBTCFGL       equ	264	;# 
  7441   000109                     C1DBTCFGH       equ	265	;# 
  7442   00010A                     C1DBTCFGU       equ	266	;# 
  7443   00010B                     C1DBTCFGT       equ	267	;# 
  7444   00010C                     C1TDCL          equ	268	;# 
  7445   00010D                     C1TDCH          equ	269	;# 
  7446   00010E                     C1TDCU          equ	270	;# 
  7447   000110                     C1TBC           equ	272	;# 
  7448   000110                     C1TBCL          equ	272	;# 
  7449   000111                     C1TBCH          equ	273	;# 
  7450   000112                     C1TBCU          equ	274	;# 
  7451   000113                     C1TBCT          equ	275	;# 
  7452   000114                     C1TSCONL        equ	276	;# 
  7453   000115                     C1TSCONH        equ	277	;# 
  7454   000116                     C1TSCONU        equ	278	;# 
  7455   000117                     C1TSCONT        equ	279	;# 
  7456   000118                     C1VECL          equ	280	;# 
  7457   000119                     C1VECH          equ	281	;# 
  7458   00011A                     C1VECU          equ	282	;# 
  7459   00011B                     C1VECT          equ	283	;# 
  7460   00011C                     C1INTL          equ	284	;# 
  7461   00011D                     C1INTH          equ	285	;# 
  7462   00011E                     C1INTU          equ	286	;# 
  7463   00011F                     C1INTT          equ	287	;# 
  7464   000120                     C1RXIF          equ	288	;# 
  7465   000120                     C1RXIFL         equ	288	;# 
  7466   000121                     C1RXIFH         equ	289	;# 
  7467   000122                     C1RXIFU         equ	290	;# 
  7468   000123                     C1RXIFT         equ	291	;# 
  7469   000124                     C1TXIF          equ	292	;# 
  7470   000124                     C1TXIFL         equ	292	;# 
  7471   000125                     C1TXIFH         equ	293	;# 
  7472   000126                     C1TXIFU         equ	294	;# 
  7473   000127                     C1TXIFT         equ	295	;# 
  7474   000128                     C1RXOVIF        equ	296	;# 
  7475   000128                     C1RXOVIFL       equ	296	;# 
  7476   000129                     C1RXOVIFH       equ	297	;# 
  7477   00012A                     C1RXOVIFU       equ	298	;# 
  7478   00012B                     C1RXOVIFT       equ	299	;# 
  7479   00012C                     C1TXATIF        equ	300	;# 
  7480   00012C                     C1TXATIFL       equ	300	;# 
  7481   00012D                     C1TXATIFH       equ	301	;# 
  7482   00012E                     C1TXATIFU       equ	302	;# 
  7483   00012F                     C1TXATIFT       equ	303	;# 
  7484   000130                     C1TXREQ         equ	304	;# 
  7485   000130                     C1TXREQL        equ	304	;# 
  7486   000131                     C1TXREQH        equ	305	;# 
  7487   000132                     C1TXREQU        equ	306	;# 
  7488   000133                     C1TXREQT        equ	307	;# 
  7489   000134                     C1TRECL         equ	308	;# 
  7490   000135                     C1TRECH         equ	309	;# 
  7491   000136                     C1TRECU         equ	310	;# 
  7492   000137                     C1TRECT         equ	311	;# 
  7493   000138                     C1BDIAG0L       equ	312	;# 
  7494   000139                     C1BDIAG0H       equ	313	;# 
  7495   00013C                     C1BDIAG1L       equ	316	;# 
  7496   00013D                     C1BDIAG1H       equ	317	;# 
  7497   00013E                     C1BDIAG1U       equ	318	;# 
  7498   00013F                     C1BDIAG1T       equ	319	;# 
  7499   000140                     C1TEFCONL       equ	320	;# 
  7500   000141                     C1TEFCONH       equ	321	;# 
  7501   000142                     C1TEFCONU       equ	322	;# 
  7502   000143                     C1TEFCONT       equ	323	;# 
  7503   000144                     C1TEFSTAL       equ	324	;# 
  7504   000145                     C1TEFSTAH       equ	325	;# 
  7505   000146                     C1TEFSTAU       equ	326	;# 
  7506   000147                     C1TEFSTAT       equ	327	;# 
  7507   000148                     C1TEFUA         equ	328	;# 
  7508   000148                     C1TEFUAL        equ	328	;# 
  7509   000149                     C1TEFUAH        equ	329	;# 
  7510   00014A                     C1TEFUAU        equ	330	;# 
  7511   00014B                     C1TEFUAT        equ	331	;# 
  7512   00014C                     C1FIFOBA        equ	332	;# 
  7513   00014C                     C1FIFOBAL       equ	332	;# 
  7514   00014D                     C1FIFOBAH       equ	333	;# 
  7515   00014E                     C1FIFOBAU       equ	334	;# 
  7516   00014F                     C1FIFOBAT       equ	335	;# 
  7517   000150                     C1TXQCONL       equ	336	;# 
  7518   000151                     C1TXQCONH       equ	337	;# 
  7519   000152                     C1TXQCONU       equ	338	;# 
  7520   000153                     C1TXQCONT       equ	339	;# 
  7521   000154                     C1TXQSTAL       equ	340	;# 
  7522   000155                     C1TXQSTAH       equ	341	;# 
  7523   000156                     C1TXQSTAU       equ	342	;# 
  7524   000157                     C1TXQSTAT       equ	343	;# 
  7525   000158                     C1TXQUA         equ	344	;# 
  7526   000158                     C1TXQUAL        equ	344	;# 
  7527   000159                     C1TXQUAH        equ	345	;# 
  7528   00015A                     C1TXQUAU        equ	346	;# 
  7529   00015B                     C1TXQUAT        equ	347	;# 
  7530   00015C                     C1FIFOCON1      equ	348	;# 
  7531   00015C                     C1FIFOCON1L     equ	348	;# 
  7532   00015D                     C1FIFOCON1H     equ	349	;# 
  7533   00015E                     C1FIFOCON1U     equ	350	;# 
  7534   00015F                     C1FIFOCON1T     equ	351	;# 
  7535   000160                     C1FIFOSTA1      equ	352	;# 
  7536   000160                     C1FIFOSTA1L     equ	352	;# 
  7537   000161                     C1FIFOSTA1H     equ	353	;# 
  7538   000162                     C1FIFOSTA1U     equ	354	;# 
  7539   000163                     C1FIFOSTA1T     equ	355	;# 
  7540   000164                     C1FIFOUA1       equ	356	;# 
  7541   000164                     C1FIFOUA1L      equ	356	;# 
  7542   000165                     C1FIFOUA1H      equ	357	;# 
  7543   000166                     C1FIFOUA1U      equ	358	;# 
  7544   000167                     C1FIFOUA1T      equ	359	;# 
  7545   000168                     C1FIFOCON2      equ	360	;# 
  7546   000168                     C1FIFOCON2L     equ	360	;# 
  7547   000169                     C1FIFOCON2H     equ	361	;# 
  7548   00016A                     C1FIFOCON2U     equ	362	;# 
  7549   00016B                     C1FIFOCON2T     equ	363	;# 
  7550   00016C                     C1FIFOSTA2      equ	364	;# 
  7551   00016C                     C1FIFOSTA2L     equ	364	;# 
  7552   00016D                     C1FIFOSTA2H     equ	365	;# 
  7553   00016E                     C1FIFOSTA2U     equ	366	;# 
  7554   00016F                     C1FIFOSTA2T     equ	367	;# 
  7555   000170                     C1FIFOUA2       equ	368	;# 
  7556   000170                     C1FIFOUA2L      equ	368	;# 
  7557   000171                     C1FIFOUA2H      equ	369	;# 
  7558   000172                     C1FIFOUA2U      equ	370	;# 
  7559   000173                     C1FIFOUA2T      equ	371	;# 
  7560   000174                     C1FIFOCON3      equ	372	;# 
  7561   000174                     C1FIFOCON3L     equ	372	;# 
  7562   000175                     C1FIFOCON3H     equ	373	;# 
  7563   000176                     C1FIFOCON3U     equ	374	;# 
  7564   000177                     C1FIFOCON3T     equ	375	;# 
  7565   000178                     C1FIFOSTA3      equ	376	;# 
  7566   000178                     C1FIFOSTA3L     equ	376	;# 
  7567   000179                     C1FIFOSTA3H     equ	377	;# 
  7568   00017A                     C1FIFOSTA3U     equ	378	;# 
  7569   00017B                     C1FIFOSTA3T     equ	379	;# 
  7570   00017C                     C1FIFOUA3       equ	380	;# 
  7571   00017C                     C1FIFOUA3L      equ	380	;# 
  7572   00017D                     C1FIFOUA3H      equ	381	;# 
  7573   00017E                     C1FIFOUA3U      equ	382	;# 
  7574   00017F                     C1FIFOUA3T      equ	383	;# 
  7575   000180                     C1FLTCON0L      equ	384	;# 
  7576   000181                     C1FLTCON0H      equ	385	;# 
  7577   000182                     C1FLTCON0U      equ	386	;# 
  7578   000183                     C1FLTCON0T      equ	387	;# 
  7579   000184                     C1FLTCON1L      equ	388	;# 
  7580   000185                     C1FLTCON1H      equ	389	;# 
  7581   000186                     C1FLTCON1U      equ	390	;# 
  7582   000187                     C1FLTCON1T      equ	391	;# 
  7583   000188                     C1FLTCON2L      equ	392	;# 
  7584   000189                     C1FLTCON2H      equ	393	;# 
  7585   00018A                     C1FLTCON2U      equ	394	;# 
  7586   00018B                     C1FLTCON2T      equ	395	;# 
  7587   00018C                     C1FLTOBJ0       equ	396	;# 
  7588   00018C                     C1FLTOBJ0L      equ	396	;# 
  7589   00018D                     C1FLTOBJ0H      equ	397	;# 
  7590   00018E                     C1FLTOBJ0U      equ	398	;# 
  7591   00018F                     C1FLTOBJ0T      equ	399	;# 
  7592   000190                     C1MASK0         equ	400	;# 
  7593   000190                     C1MASK0L        equ	400	;# 
  7594   000191                     C1MASK0H        equ	401	;# 
  7595   000192                     C1MASK0U        equ	402	;# 
  7596   000193                     C1MASK0T        equ	403	;# 
  7597   000194                     C1FLTOBJ1       equ	404	;# 
  7598   000194                     C1FLTOBJ1L      equ	404	;# 
  7599   000195                     C1FLTOBJ1H      equ	405	;# 
  7600   000196                     C1FLTOBJ1U      equ	406	;# 
  7601   000197                     C1FLTOBJ1T      equ	407	;# 
  7602   000198                     C1MASK1         equ	408	;# 
  7603   000198                     C1MASK1L        equ	408	;# 
  7604   000199                     C1MASK1H        equ	409	;# 
  7605   00019A                     C1MASK1U        equ	410	;# 
  7606   00019B                     C1MASK1T        equ	411	;# 
  7607   00019C                     C1FLTOBJ2       equ	412	;# 
  7608   00019C                     C1FLTOBJ2L      equ	412	;# 
  7609   00019D                     C1FLTOBJ2H      equ	413	;# 
  7610   00019E                     C1FLTOBJ2U      equ	414	;# 
  7611   00019F                     C1FLTOBJ2T      equ	415	;# 
  7612   0001A0                     C1MASK2         equ	416	;# 
  7613   0001A0                     C1MASK2L        equ	416	;# 
  7614   0001A1                     C1MASK2H        equ	417	;# 
  7615   0001A2                     C1MASK2U        equ	418	;# 
  7616   0001A3                     C1MASK2T        equ	419	;# 
  7617   0001A4                     C1FLTOBJ3       equ	420	;# 
  7618   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7619   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7620   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7621   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7622   0001A8                     C1MASK3         equ	424	;# 
  7623   0001A8                     C1MASK3L        equ	424	;# 
  7624   0001A9                     C1MASK3H        equ	425	;# 
  7625   0001AA                     C1MASK3U        equ	426	;# 
  7626   0001AB                     C1MASK3T        equ	427	;# 
  7627   0001AC                     C1FLTOBJ4       equ	428	;# 
  7628   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7629   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7630   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7631   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7632   0001B0                     C1MASK4         equ	432	;# 
  7633   0001B0                     C1MASK4L        equ	432	;# 
  7634   0001B1                     C1MASK4H        equ	433	;# 
  7635   0001B2                     C1MASK4U        equ	434	;# 
  7636   0001B3                     C1MASK4T        equ	435	;# 
  7637   0001B4                     C1FLTOBJ5       equ	436	;# 
  7638   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7639   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7640   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7641   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7642   0001B8                     C1MASK5         equ	440	;# 
  7643   0001B8                     C1MASK5L        equ	440	;# 
  7644   0001B9                     C1MASK5H        equ	441	;# 
  7645   0001BA                     C1MASK5U        equ	442	;# 
  7646   0001BB                     C1MASK5T        equ	443	;# 
  7647   0001BC                     C1FLTOBJ6       equ	444	;# 
  7648   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7649   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7650   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7651   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7652   0001C0                     C1MASK6         equ	448	;# 
  7653   0001C0                     C1MASK6L        equ	448	;# 
  7654   0001C1                     C1MASK6H        equ	449	;# 
  7655   0001C2                     C1MASK6U        equ	450	;# 
  7656   0001C3                     C1MASK6T        equ	451	;# 
  7657   0001C4                     C1FLTOBJ7       equ	452	;# 
  7658   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7659   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7660   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7661   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7662   0001C8                     C1MASK7         equ	456	;# 
  7663   0001C8                     C1MASK7L        equ	456	;# 
  7664   0001C9                     C1MASK7H        equ	457	;# 
  7665   0001CA                     C1MASK7U        equ	458	;# 
  7666   0001CB                     C1MASK7T        equ	459	;# 
  7667   0001CC                     C1FLTOBJ8       equ	460	;# 
  7668   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7669   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7670   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7671   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7672   0001D0                     C1MASK8         equ	464	;# 
  7673   0001D0                     C1MASK8L        equ	464	;# 
  7674   0001D1                     C1MASK8H        equ	465	;# 
  7675   0001D2                     C1MASK8U        equ	466	;# 
  7676   0001D3                     C1MASK8T        equ	467	;# 
  7677   0001D4                     C1FLTOBJ9       equ	468	;# 
  7678   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7679   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7680   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7681   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7682   0001D8                     C1MASK9         equ	472	;# 
  7683   0001D8                     C1MASK9L        equ	472	;# 
  7684   0001D9                     C1MASK9H        equ	473	;# 
  7685   0001DA                     C1MASK9U        equ	474	;# 
  7686   0001DB                     C1MASK9T        equ	475	;# 
  7687   0001DC                     C1FLTOBJ10      equ	476	;# 
  7688   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7689   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7690   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7691   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7692   0001E0                     C1MASK10        equ	480	;# 
  7693   0001E0                     C1MASK10L       equ	480	;# 
  7694   0001E1                     C1MASK10H       equ	481	;# 
  7695   0001E2                     C1MASK10U       equ	482	;# 
  7696   0001E3                     C1MASK10T       equ	483	;# 
  7697   0001E4                     C1FLTOBJ11      equ	484	;# 
  7698   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7699   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7700   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7701   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7702   0001E8                     C1MASK11        equ	488	;# 
  7703   0001E8                     C1MASK11L       equ	488	;# 
  7704   0001E9                     C1MASK11H       equ	489	;# 
  7705   0001EA                     C1MASK11U       equ	490	;# 
  7706   0001EB                     C1MASK11T       equ	491	;# 
  7707   000200                     PPSLOCK         equ	512	;# 
  7708   000201                     RA0PPS          equ	513	;# 
  7709   000202                     RA1PPS          equ	514	;# 
  7710   000203                     RA2PPS          equ	515	;# 
  7711   000204                     RA3PPS          equ	516	;# 
  7712   000205                     RA4PPS          equ	517	;# 
  7713   000206                     RA5PPS          equ	518	;# 
  7714   000207                     RA6PPS          equ	519	;# 
  7715   000208                     RA7PPS          equ	520	;# 
  7716   000209                     RB0PPS          equ	521	;# 
  7717   00020A                     RB1PPS          equ	522	;# 
  7718   00020B                     RB2PPS          equ	523	;# 
  7719   00020C                     RB3PPS          equ	524	;# 
  7720   00020D                     RB4PPS          equ	525	;# 
  7721   00020E                     RB5PPS          equ	526	;# 
  7722   00020F                     RB6PPS          equ	527	;# 
  7723   000210                     RB7PPS          equ	528	;# 
  7724   000211                     RC0PPS          equ	529	;# 
  7725   000212                     RC1PPS          equ	530	;# 
  7726   000213                     RC2PPS          equ	531	;# 
  7727   000214                     RC3PPS          equ	532	;# 
  7728   000215                     RC4PPS          equ	533	;# 
  7729   000216                     RC5PPS          equ	534	;# 
  7730   000217                     RC6PPS          equ	535	;# 
  7731   000218                     RC7PPS          equ	536	;# 
  7732   00023D                     CANRXPPS        equ	573	;# 
  7733   00023E                     INT0PPS         equ	574	;# 
  7734   00023F                     INT1PPS         equ	575	;# 
  7735   000240                     INT2PPS         equ	576	;# 
  7736   000241                     T0CKIPPS        equ	577	;# 
  7737   000242                     T1CKIPPS        equ	578	;# 
  7738   000243                     T1GPPS          equ	579	;# 
  7739   000244                     T3CKIPPS        equ	580	;# 
  7740   000245                     T3GPPS          equ	581	;# 
  7741   000246                     T5CKIPPS        equ	582	;# 
  7742   000247                     T5GPPS          equ	583	;# 
  7743   000248                     T2INPPS         equ	584	;# 
  7744   000249                     T4INPPS         equ	585	;# 
  7745   00024A                     T6INPPS         equ	586	;# 
  7746   00024B                     TUIN0PPS        equ	587	;# 
  7747   00024C                     TUIN1PPS        equ	588	;# 
  7748   00024F                     CCP1PPS         equ	591	;# 
  7749   000250                     CCP2PPS         equ	592	;# 
  7750   000251                     CCP3PPS         equ	593	;# 
  7751   000253                     PWM1ERSPPS      equ	595	;# 
  7752   000254                     PWM2ERSPPS      equ	596	;# 
  7753   000255                     PWM3ERSPPS      equ	597	;# 
  7754   000256                     PWM4ERSPPS      equ	598	;# 
  7755   000257                     PWMIN0PPS       equ	599	;# 
  7756   000258                     PWMIN1PPS       equ	600	;# 
  7757   000259                     SMT1WINPPS      equ	601	;# 
  7758   00025A                     SMT1SIGPPS      equ	602	;# 
  7759   00025B                     CWG1PPS         equ	603	;# 
  7760   00025B                     CWG1INPPS       equ	603	;# 
  7761   00025C                     CWG2PPS         equ	604	;# 
  7762   00025C                     CWG2INPPS       equ	604	;# 
  7763   00025D                     CWG3PPS         equ	605	;# 
  7764   00025D                     CWG3INPPS       equ	605	;# 
  7765   00025E                     MD1CARLPPS      equ	606	;# 
  7766   00025E                     MDCARLPPS       equ	606	;# 
  7767   00025F                     MD1CARHPPS      equ	607	;# 
  7768   00025F                     MDCARHPPS       equ	607	;# 
  7769   000260                     MD1SRCPPS       equ	608	;# 
  7770   000260                     MDSRCPPS        equ	608	;# 
  7771   000261                     CLCIN0PPS       equ	609	;# 
  7772   000262                     CLCIN1PPS       equ	610	;# 
  7773   000263                     CLCIN2PPS       equ	611	;# 
  7774   000264                     CLCIN3PPS       equ	612	;# 
  7775   000265                     CLCIN4PPS       equ	613	;# 
  7776   000266                     CLCIN5PPS       equ	614	;# 
  7777   000267                     CLCIN6PPS       equ	615	;# 
  7778   000268                     CLCIN7PPS       equ	616	;# 
  7779   000269                     ADACTPPS        equ	617	;# 
  7780   00026A                     SPI1SCKPPS      equ	618	;# 
  7781   00026B                     SPI1SDIPPS      equ	619	;# 
  7782   00026C                     SPI1SSPPS       equ	620	;# 
  7783   00026D                     SPI2SCKPPS      equ	621	;# 
  7784   00026E                     SPI2SDIPPS      equ	622	;# 
  7785   00026F                     SPI2SSPPS       equ	623	;# 
  7786   000270                     I2C1SDAPPS      equ	624	;# 
  7787   000271                     I2C1SCLPPS      equ	625	;# 
  7788   000272                     U1RXPPS         equ	626	;# 
  7789   000273                     U1CTSPPS        equ	627	;# 
  7790   000274                     U2RXPPS         equ	628	;# 
  7791   000275                     U2CTSPPS        equ	629	;# 
  7792   000276                     U3RXPPS         equ	630	;# 
  7793   000277                     U3CTSPPS        equ	631	;# 
  7794   000278                     U4RXPPS         equ	632	;# 
  7795   000279                     U4CTSPPS        equ	633	;# 
  7796   00027A                     U5RXPPS         equ	634	;# 
  7797   00027B                     U5CTSPPS        equ	635	;# 
  7798   000286                     RC4I2C          equ	646	;# 
  7799   000287                     RC3I2C          equ	647	;# 
  7800   000288                     RB2I2C          equ	648	;# 
  7801   000289                     RB1I2C          equ	649	;# 
  7802   00028A                     I2C1RXB         equ	650	;# 
  7803   00028B                     I2C1TXB         equ	651	;# 
  7804   00028C                     I2C1CNTL        equ	652	;# 
  7805   00028D                     I2C1CNTH        equ	653	;# 
  7806   00028E                     I2C1ADB0        equ	654	;# 
  7807   00028F                     I2C1ADB1        equ	655	;# 
  7808   000290                     I2C1ADR0        equ	656	;# 
  7809   000291                     I2C1ADR1        equ	657	;# 
  7810   000292                     I2C1ADR2        equ	658	;# 
  7811   000293                     I2C1ADR3        equ	659	;# 
  7812   000294                     I2C1CON0        equ	660	;# 
  7813   000295                     I2C1CON1        equ	661	;# 
  7814   000296                     I2C1CON2        equ	662	;# 
  7815   000297                     I2C1ERR         equ	663	;# 
  7816   000298                     I2C1STAT0       equ	664	;# 
  7817   000299                     I2C1STAT1       equ	665	;# 
  7818   00029A                     I2C1PIR         equ	666	;# 
  7819   00029B                     I2C1PIE         equ	667	;# 
  7820   00029C                     I2C1BTO         equ	668	;# 
  7821   00029D                     I2C1BAUD        equ	669	;# 
  7822   00029E                     I2C1CLK         equ	670	;# 
  7823   00029F                     I2C1BTOC        equ	671	;# 
  7824   0002A1                     U1RXB           equ	673	;# 
  7825   0002A1                     U1RXBL          equ	673	;# 
  7826   0002A2                     U1RXCHK         equ	674	;# 
  7827   0002A3                     U1TXB           equ	675	;# 
  7828   0002A3                     U1TXBL          equ	675	;# 
  7829   0002A4                     U1TXCHK         equ	676	;# 
  7830   0002A5                     U1P1            equ	677	;# 
  7831   0002A5                     U1P1L           equ	677	;# 
  7832   0002A6                     U1P1H           equ	678	;# 
  7833   0002A7                     U1P2            equ	679	;# 
  7834   0002A7                     U1P2L           equ	679	;# 
  7835   0002A8                     U1P2H           equ	680	;# 
  7836   0002A9                     U1P3            equ	681	;# 
  7837   0002A9                     U1P3L           equ	681	;# 
  7838   0002AA                     U1P3H           equ	682	;# 
  7839   0002AB                     U1CON0          equ	683	;# 
  7840   0002AC                     U1CON1          equ	684	;# 
  7841   0002AD                     U1CON2          equ	685	;# 
  7842   0002AE                     U1BRG           equ	686	;# 
  7843   0002AE                     U1BRGL          equ	686	;# 
  7844   0002AF                     U1BRGH          equ	687	;# 
  7845   0002B0                     U1FIFO          equ	688	;# 
  7846   0002B1                     U1UIR           equ	689	;# 
  7847   0002B2                     U1ERRIR         equ	690	;# 
  7848   0002B3                     U1ERRIE         equ	691	;# 
  7849   0002B4                     U2RXB           equ	692	;# 
  7850   0002B4                     U2RXBL          equ	692	;# 
  7851   0002B5                     U2RXCHK         equ	693	;# 
  7852   0002B6                     U2TXB           equ	694	;# 
  7853   0002B6                     U2TXBL          equ	694	;# 
  7854   0002B7                     U2TXCHK         equ	695	;# 
  7855   0002B8                     U2P1            equ	696	;# 
  7856   0002B8                     U2P1L           equ	696	;# 
  7857   0002B9                     U2P1H           equ	697	;# 
  7858   0002BA                     U2P2            equ	698	;# 
  7859   0002BA                     U2P2L           equ	698	;# 
  7860   0002BB                     U2P2H           equ	699	;# 
  7861   0002BC                     U2P3            equ	700	;# 
  7862   0002BC                     U2P3L           equ	700	;# 
  7863   0002BD                     U2P3H           equ	701	;# 
  7864   0002BE                     U2CON0          equ	702	;# 
  7865   0002BF                     U2CON1          equ	703	;# 
  7866   0002C0                     U2CON2          equ	704	;# 
  7867   0002C1                     U2BRG           equ	705	;# 
  7868   0002C1                     U2BRGL          equ	705	;# 
  7869   0002C2                     U2BRGH          equ	706	;# 
  7870   0002C3                     U2FIFO          equ	707	;# 
  7871   0002C4                     U2UIR           equ	708	;# 
  7872   0002C5                     U2ERRIR         equ	709	;# 
  7873   0002C6                     U2ERRIE         equ	710	;# 
  7874   0002C7                     U3RXB           equ	711	;# 
  7875   0002C7                     U3RXBL          equ	711	;# 
  7876   0002C9                     U3TXB           equ	713	;# 
  7877   0002C9                     U3TXBL          equ	713	;# 
  7878   0002CB                     U3P1            equ	715	;# 
  7879   0002CB                     U3P1L           equ	715	;# 
  7880   0002CD                     U3P2            equ	717	;# 
  7881   0002CD                     U3P2L           equ	717	;# 
  7882   0002CF                     U3P3            equ	719	;# 
  7883   0002CF                     U3P3L           equ	719	;# 
  7884   0002D1                     U3CON0          equ	721	;# 
  7885   0002D2                     U3CON1          equ	722	;# 
  7886   0002D3                     U3CON2          equ	723	;# 
  7887   0002D4                     U3BRG           equ	724	;# 
  7888   0002D4                     U3BRGL          equ	724	;# 
  7889   0002D5                     U3BRGH          equ	725	;# 
  7890   0002D6                     U3FIFO          equ	726	;# 
  7891   0002D7                     U3UIR           equ	727	;# 
  7892   0002D8                     U3ERRIR         equ	728	;# 
  7893   0002D9                     U3ERRIE         equ	729	;# 
  7894   0002DA                     U4RXB           equ	730	;# 
  7895   0002DA                     U4RXBL          equ	730	;# 
  7896   0002DC                     U4TXB           equ	732	;# 
  7897   0002DC                     U4TXBL          equ	732	;# 
  7898   0002DE                     U4P1            equ	734	;# 
  7899   0002DE                     U4P1L           equ	734	;# 
  7900   0002E0                     U4P2            equ	736	;# 
  7901   0002E0                     U4P2L           equ	736	;# 
  7902   0002E2                     U4P3            equ	738	;# 
  7903   0002E2                     U4P3L           equ	738	;# 
  7904   0002E4                     U4CON0          equ	740	;# 
  7905   0002E5                     U4CON1          equ	741	;# 
  7906   0002E6                     U4CON2          equ	742	;# 
  7907   0002E7                     U4BRG           equ	743	;# 
  7908   0002E7                     U4BRGL          equ	743	;# 
  7909   0002E8                     U4BRGH          equ	744	;# 
  7910   0002E9                     U4FIFO          equ	745	;# 
  7911   0002EA                     U4UIR           equ	746	;# 
  7912   0002EB                     U4ERRIR         equ	747	;# 
  7913   0002EC                     U4ERRIE         equ	748	;# 
  7914   0002ED                     U5RXB           equ	749	;# 
  7915   0002ED                     U5RXBL          equ	749	;# 
  7916   0002EF                     U5TXB           equ	751	;# 
  7917   0002EF                     U5TXBL          equ	751	;# 
  7918   0002F1                     U5P1            equ	753	;# 
  7919   0002F1                     U5P1L           equ	753	;# 
  7920   0002F3                     U5P2            equ	755	;# 
  7921   0002F3                     U5P2L           equ	755	;# 
  7922   0002F5                     U5P3            equ	757	;# 
  7923   0002F5                     U5P3L           equ	757	;# 
  7924   0002F7                     U5CON0          equ	759	;# 
  7925   0002F8                     U5CON1          equ	760	;# 
  7926   0002F9                     U5CON2          equ	761	;# 
  7927   0002FA                     U5BRG           equ	762	;# 
  7928   0002FA                     U5BRGL          equ	762	;# 
  7929   0002FB                     U5BRGH          equ	763	;# 
  7930   0002FC                     U5FIFO          equ	764	;# 
  7931   0002FD                     U5UIR           equ	765	;# 
  7932   0002FE                     U5ERRIR         equ	766	;# 
  7933   0002FF                     U5ERRIE         equ	767	;# 
  7934   000300                     SMT1TMR         equ	768	;# 
  7935   000300                     SMT1TMRL        equ	768	;# 
  7936   000301                     SMT1TMRH        equ	769	;# 
  7937   000302                     SMT1TMRU        equ	770	;# 
  7938   000303                     SMT1CPR         equ	771	;# 
  7939   000303                     SMT1CPRL        equ	771	;# 
  7940   000304                     SMT1CPRH        equ	772	;# 
  7941   000305                     SMT1CPRU        equ	773	;# 
  7942   000306                     SMT1CPW         equ	774	;# 
  7943   000306                     SMT1CPWL        equ	774	;# 
  7944   000307                     SMT1CPWH        equ	775	;# 
  7945   000308                     SMT1CPWU        equ	776	;# 
  7946   000309                     SMT1PR          equ	777	;# 
  7947   000309                     SMT1PRL         equ	777	;# 
  7948   00030A                     SMT1PRH         equ	778	;# 
  7949   00030B                     SMT1PRU         equ	779	;# 
  7950   00030C                     SMT1CON0        equ	780	;# 
  7951   00030D                     SMT1CON1        equ	781	;# 
  7952   00030E                     SMT1STAT        equ	782	;# 
  7953   00030F                     SMT1CLK         equ	783	;# 
  7954   000310                     SMT1SIG         equ	784	;# 
  7955   000311                     SMT1WIN         equ	785	;# 
  7956   000318                     TMR0L           equ	792	;# 
  7957   000318                     TMR0            equ	792	;# 
  7958   000319                     TMR0H           equ	793	;# 
  7959   000319                     PR0             equ	793	;# 
  7960   00031A                     T0CON0          equ	794	;# 
  7961   00031B                     T0CON1          equ	795	;# 
  7962   00031C                     TMR1            equ	796	;# 
  7963   00031C                     TMR1L           equ	796	;# 
  7964   00031D                     TMR1H           equ	797	;# 
  7965   00031E                     T1CON           equ	798	;# 
  7966   00031E                     TMR1CON         equ	798	;# 
  7967   00031F                     T1GCON          equ	799	;# 
  7968   00031F                     TMR1GCON        equ	799	;# 
  7969   000320                     T1GATE          equ	800	;# 
  7970   000320                     TMR1GATE        equ	800	;# 
  7971   000321                     T1CLK           equ	801	;# 
  7972   000321                     TMR1CLK         equ	801	;# 
  7973   000321                     PR1             equ	801	;# 
  7974   000322                     T2TMR           equ	802	;# 
  7975   000322                     TMR2            equ	802	;# 
  7976   000323                     T2PR            equ	803	;# 
  7977   000323                     PR2             equ	803	;# 
  7978   000324                     T2CON           equ	804	;# 
  7979   000325                     T2HLT           equ	805	;# 
  7980   000326                     T2CLKCON        equ	806	;# 
  7981   000326                     T2CLK           equ	806	;# 
  7982   000327                     T2RST           equ	807	;# 
  7983   000328                     TMR3            equ	808	;# 
  7984   000328                     TMR3L           equ	808	;# 
  7985   000329                     TMR3H           equ	809	;# 
  7986   00032A                     T3CON           equ	810	;# 
  7987   00032A                     TMR3CON         equ	810	;# 
  7988   00032B                     T3GCON          equ	811	;# 
  7989   00032B                     TMR3GCON        equ	811	;# 
  7990   00032C                     T3GATE          equ	812	;# 
  7991   00032C                     TMR3GATE        equ	812	;# 
  7992   00032D                     T3CLK           equ	813	;# 
  7993   00032D                     TMR3CLK         equ	813	;# 
  7994   00032D                     PR3             equ	813	;# 
  7995   00032E                     T4TMR           equ	814	;# 
  7996   00032E                     TMR4            equ	814	;# 
  7997   00032F                     T4PR            equ	815	;# 
  7998   00032F                     PR4             equ	815	;# 
  7999   000330                     T4CON           equ	816	;# 
  8000   000331                     T4HLT           equ	817	;# 
  8001   000332                     T4CLKCON        equ	818	;# 
  8002   000332                     T4CLK           equ	818	;# 
  8003   000333                     T4RST           equ	819	;# 
  8004   000334                     TMR5            equ	820	;# 
  8005   000334                     TMR5L           equ	820	;# 
  8006   000335                     TMR5H           equ	821	;# 
  8007   000336                     T5CON           equ	822	;# 
  8008   000336                     TMR5CON         equ	822	;# 
  8009   000337                     T5GCON          equ	823	;# 
  8010   000337                     TMR5GCON        equ	823	;# 
  8011   000338                     T5GATE          equ	824	;# 
  8012   000338                     TMR5GATE        equ	824	;# 
  8013   000339                     T5CLK           equ	825	;# 
  8014   000339                     TMR5CLK         equ	825	;# 
  8015   000339                     PR5             equ	825	;# 
  8016   00033A                     T6TMR           equ	826	;# 
  8017   00033A                     TMR6            equ	826	;# 
  8018   00033B                     T6PR            equ	827	;# 
  8019   00033B                     PR6             equ	827	;# 
  8020   00033C                     T6CON           equ	828	;# 
  8021   00033D                     T6HLT           equ	829	;# 
  8022   00033E                     T6CLKCON        equ	830	;# 
  8023   00033E                     T6CLK           equ	830	;# 
  8024   00033F                     T6RST           equ	831	;# 
  8025   000340                     CCPR1           equ	832	;# 
  8026   000340                     CCPR1L          equ	832	;# 
  8027   000341                     CCPR1H          equ	833	;# 
  8028   000342                     CCP1CON         equ	834	;# 
  8029   000343                     CCP1CAP         equ	835	;# 
  8030   000344                     CCPR2           equ	836	;# 
  8031   000344                     CCPR2L          equ	836	;# 
  8032   000345                     CCPR2H          equ	837	;# 
  8033   000346                     CCP2CON         equ	838	;# 
  8034   000347                     CCP2CAP         equ	839	;# 
  8035   000348                     CCPR3           equ	840	;# 
  8036   000348                     CCPR3L          equ	840	;# 
  8037   000349                     CCPR3H          equ	841	;# 
  8038   00034A                     CCP3CON         equ	842	;# 
  8039   00034B                     CCP3CAP         equ	843	;# 
  8040   00034C                     CCPTMRS0        equ	844	;# 
  8041   00034F                     CRCDATA         equ	847	;# 
  8042   00034F                     CRCDATAL        equ	847	;# 
  8043   000350                     CRCDATAH        equ	848	;# 
  8044   000351                     CRCDATAU        equ	849	;# 
  8045   000352                     CRCDATAT        equ	850	;# 
  8046   000353                     CRCOUT          equ	851	;# 
  8047   000353                     CRCSHFT         equ	851	;# 
  8048   000353                     CRCXOR          equ	851	;# 
  8049   000353                     CRCOUTL         equ	851	;# 
  8050   000353                     CRCSHFTL        equ	851	;# 
  8051   000353                     CRCSHIFTL       equ	851	;# 
  8052   000353                     CRCXORL         equ	851	;# 
  8053   000354                     CRCOUTH         equ	852	;# 
  8054   000354                     CRCSHFTH        equ	852	;# 
  8055   000354                     CRCSHIFTH       equ	852	;# 
  8056   000354                     CRCXORH         equ	852	;# 
  8057   000355                     CRCOUTU         equ	853	;# 
  8058   000355                     CRCSHFTU        equ	853	;# 
  8059   000355                     CRCSHIFTU       equ	853	;# 
  8060   000355                     CRCXORU         equ	853	;# 
  8061   000356                     CRCOUTT         equ	854	;# 
  8062   000356                     CRCSHFTT        equ	854	;# 
  8063   000356                     CRCSHIFTT       equ	854	;# 
  8064   000356                     CRCXORT         equ	854	;# 
  8065   000357                     CRCCON0         equ	855	;# 
  8066   000358                     CRCCON1         equ	856	;# 
  8067   000359                     CRCCON2         equ	857	;# 
  8068   00035A                     SCANLADR        equ	858	;# 
  8069   00035A                     SCANLADRL       equ	858	;# 
  8070   00035B                     SCANLADRH       equ	859	;# 
  8071   00035C                     SCANLADRU       equ	860	;# 
  8072   00035D                     SCANHADR        equ	861	;# 
  8073   00035D                     SCANHADRL       equ	861	;# 
  8074   00035E                     SCANHADRH       equ	862	;# 
  8075   00035F                     SCANHADRU       equ	863	;# 
  8076   000360                     SCANCON0        equ	864	;# 
  8077   000361                     SCANTRIG        equ	865	;# 
  8078   000362                     IPR0            equ	866	;# 
  8079   000363                     IPR1            equ	867	;# 
  8080   000364                     IPR2            equ	868	;# 
  8081   000365                     IPR3            equ	869	;# 
  8082   000366                     IPR4            equ	870	;# 
  8083   000367                     IPR5            equ	871	;# 
  8084   000368                     IPR6            equ	872	;# 
  8085   000369                     IPR7            equ	873	;# 
  8086   00036A                     IPR8            equ	874	;# 
  8087   00036B                     IPR9            equ	875	;# 
  8088   00036C                     IPR10           equ	876	;# 
  8089   00036D                     IPR11           equ	877	;# 
  8090   00036E                     IPR12           equ	878	;# 
  8091   00036F                     IPR13           equ	879	;# 
  8092   000370                     IPR14           equ	880	;# 
  8093   000371                     IPR15           equ	881	;# 
  8094   000373                     STATUS_CSHAD    equ	883	;# 
  8095   000374                     WREG_CSHAD      equ	884	;# 
  8096   000375                     BSR_CSHAD       equ	885	;# 
  8097   000376                     SHADCON         equ	886	;# 
  8098   000377                     STATUS_SHAD     equ	887	;# 
  8099   000378                     WREG_SHAD       equ	888	;# 
  8100   000379                     BSR_SHAD        equ	889	;# 
  8101   00037A                     PCLATH_SHAD     equ	890	;# 
  8102   00037B                     PCLATU_SHAD     equ	891	;# 
  8103   00037C                     FSR0SH          equ	892	;# 
  8104   00037C                     FSR0L_SHAD      equ	892	;# 
  8105   00037D                     FSR0H_SHAD      equ	893	;# 
  8106   00037E                     FSR1SH          equ	894	;# 
  8107   00037E                     FSR1L_SHAD      equ	894	;# 
  8108   00037F                     FSR1H_SHAD      equ	895	;# 
  8109   000380                     FSR2SH          equ	896	;# 
  8110   000380                     FSR2L_SHAD      equ	896	;# 
  8111   000381                     FSR2H_SHAD      equ	897	;# 
  8112   000382                     PRODSH          equ	898	;# 
  8113   000382                     PRODL_SHAD      equ	898	;# 
  8114   000383                     PRODH_SHAD      equ	899	;# 
  8115   000387                     TU16ACON0       equ	903	;# 
  8116   000388                     TU16ACON1       equ	904	;# 
  8117   000389                     TU16AHLT        equ	905	;# 
  8118   00038A                     TU16APS         equ	906	;# 
  8119   00038B                     TU16ATMR        equ	907	;# 
  8120   00038B                     TU16ACR         equ	907	;# 
  8121   00038B                     TU16ATMRL       equ	907	;# 
  8122   00038B                     TU16ACRL        equ	907	;# 
  8123   00038C                     TU16ATMRH       equ	908	;# 
  8124   00038C                     TU16ACRH        equ	908	;# 
  8125   00038D                     TU16APR         equ	909	;# 
  8126   00038D                     TU16APRL        equ	909	;# 
  8127   00038E                     TU16APRH        equ	910	;# 
  8128   00038F                     TU16ACLK        equ	911	;# 
  8129   000390                     TU16AERS        equ	912	;# 
  8130   000393                     TU16BCON0       equ	915	;# 
  8131   000394                     TU16BCON1       equ	916	;# 
  8132   000395                     TU16BHLT        equ	917	;# 
  8133   000396                     TU16BPS         equ	918	;# 
  8134   000397                     TU16BTMR        equ	919	;# 
  8135   000397                     TU16BCR         equ	919	;# 
  8136   000397                     TU16BTMRL       equ	919	;# 
  8137   000397                     TU16BCRL        equ	919	;# 
  8138   000398                     TU16BTMRH       equ	920	;# 
  8139   000398                     TU16BCRH        equ	920	;# 
  8140   000399                     TU16BPR         equ	921	;# 
  8141   000399                     TU16BPRL        equ	921	;# 
  8142   00039A                     TU16BPRH        equ	922	;# 
  8143   00039B                     TU16BCLK        equ	923	;# 
  8144   00039C                     TU16BERS        equ	924	;# 
  8145   0003BB                     TUCHAIN         equ	955	;# 
  8146   0003BC                     CWG1CLK         equ	956	;# 
  8147   0003BC                     CWG1CLKCON      equ	956	;# 
  8148   0003BD                     CWG1ISM         equ	957	;# 
  8149   0003BE                     CWG1DBR         equ	958	;# 
  8150   0003BF                     CWG1DBF         equ	959	;# 
  8151   0003C0                     CWG1CON0        equ	960	;# 
  8152   0003C1                     CWG1CON1        equ	961	;# 
  8153   0003C2                     CWG1AS0         equ	962	;# 
  8154   0003C3                     CWG1AS1         equ	963	;# 
  8155   0003C4                     CWG1STR         equ	964	;# 
  8156   0003C5                     CWG2CLK         equ	965	;# 
  8157   0003C5                     CWG2CLKCON      equ	965	;# 
  8158   0003C6                     CWG2ISM         equ	966	;# 
  8159   0003C7                     CWG2DBR         equ	967	;# 
  8160   0003C8                     CWG2DBF         equ	968	;# 
  8161   0003C9                     CWG2CON0        equ	969	;# 
  8162   0003CA                     CWG2CON1        equ	970	;# 
  8163   0003CB                     CWG2AS0         equ	971	;# 
  8164   0003CC                     CWG2AS1         equ	972	;# 
  8165   0003CD                     CWG2STR         equ	973	;# 
  8166   0003CE                     CWG3CLK         equ	974	;# 
  8167   0003CE                     CWG3CLKCON      equ	974	;# 
  8168   0003CF                     CWG3ISM         equ	975	;# 
  8169   0003D0                     CWG3DBR         equ	976	;# 
  8170   0003D1                     CWG3DBF         equ	977	;# 
  8171   0003D2                     CWG3CON0        equ	978	;# 
  8172   0003D3                     CWG3CON1        equ	979	;# 
  8173   0003D4                     CWG3AS0         equ	980	;# 
  8174   0003D5                     CWG3AS1         equ	981	;# 
  8175   0003D6                     CWG3STR         equ	982	;# 
  8176   0003D7                     FVRCON          equ	983	;# 
  8177   0003D8                     ADCPCON         equ	984	;# 
  8178   0003D8                     ADCP            equ	984	;# 
  8179   0003D9                     ADLTH           equ	985	;# 
  8180   0003D9                     ADLTHL          equ	985	;# 
  8181   0003DA                     ADLTHH          equ	986	;# 
  8182   0003DB                     ADUTH           equ	987	;# 
  8183   0003DB                     ADUTHL          equ	987	;# 
  8184   0003DC                     ADUTHH          equ	988	;# 
  8185   0003DD                     ADERR           equ	989	;# 
  8186   0003DD                     ADERRL          equ	989	;# 
  8187   0003DE                     ADERRH          equ	990	;# 
  8188   0003DF                     ADSTPT          equ	991	;# 
  8189   0003DF                     ADSTPTL         equ	991	;# 
  8190   0003E0                     ADSTPTH         equ	992	;# 
  8191   0003E1                     ADFLTR          equ	993	;# 
  8192   0003E1                     ADFLTRL         equ	993	;# 
  8193   0003E2                     ADFLTRH         equ	994	;# 
  8194   0003E3                     ADACC           equ	995	;# 
  8195   0003E3                     ADACCL          equ	995	;# 
  8196   0003E4                     ADACCH          equ	996	;# 
  8197   0003E5                     ADACCU          equ	997	;# 
  8198   0003E6                     ADCNT           equ	998	;# 
  8199   0003E7                     ADRPT           equ	999	;# 
  8200   0003E8                     ADPREV          equ	1000	;# 
  8201   0003E8                     ADPREVL         equ	1000	;# 
  8202   0003E9                     ADPREVH         equ	1001	;# 
  8203   0003EA                     ADRES           equ	1002	;# 
  8204   0003EA                     ADRESL          equ	1002	;# 
  8205   0003EB                     ADRESH          equ	1003	;# 
  8206   0003EC                     ADPCH           equ	1004	;# 
  8207   0003EE                     ADACQ           equ	1006	;# 
  8208   0003EE                     ADACQL          equ	1006	;# 
  8209   0003EF                     ADACQH          equ	1007	;# 
  8210   0003F0                     ADCAP           equ	1008	;# 
  8211   0003F1                     ADPRE           equ	1009	;# 
  8212   0003F1                     ADPREL          equ	1009	;# 
  8213   0003F2                     ADPREH          equ	1010	;# 
  8214   0003F3                     ADCON0          equ	1011	;# 
  8215   0003F4                     ADCON1          equ	1012	;# 
  8216   0003F5                     ADCON2          equ	1013	;# 
  8217   0003F6                     ADCON3          equ	1014	;# 
  8218   0003F7                     ADSTAT          equ	1015	;# 
  8219   0003F8                     ADREF           equ	1016	;# 
  8220   0003F9                     ADACT           equ	1017	;# 
  8221   0003FA                     ADCLK           equ	1018	;# 
  8222   0003FB                     ADCTX           equ	1019	;# 
  8223   0003FC                     ADCSEL1         equ	1020	;# 
  8224   0003FD                     ADCSEL2         equ	1021	;# 
  8225   0003FE                     ADCSEL3         equ	1022	;# 
  8226   0003FF                     ADCSEL4         equ	1023	;# 
  8227   000400                     ANSELA          equ	1024	;# 
  8228   000401                     WPUA            equ	1025	;# 
  8229   000402                     ODCONA          equ	1026	;# 
  8230   000403                     SLRCONA         equ	1027	;# 
  8231   000404                     INLVLA          equ	1028	;# 
  8232   000405                     IOCAP           equ	1029	;# 
  8233   000406                     IOCAN           equ	1030	;# 
  8234   000407                     IOCAF           equ	1031	;# 
  8235   000408                     ANSELB          equ	1032	;# 
  8236   000409                     WPUB            equ	1033	;# 
  8237   00040A                     ODCONB          equ	1034	;# 
  8238   00040B                     SLRCONB         equ	1035	;# 
  8239   00040C                     INLVLB          equ	1036	;# 
  8240   00040D                     IOCBP           equ	1037	;# 
  8241   00040E                     IOCBN           equ	1038	;# 
  8242   00040F                     IOCBF           equ	1039	;# 
  8243   000410                     ANSELC          equ	1040	;# 
  8244   000411                     WPUC            equ	1041	;# 
  8245   000412                     ODCONC          equ	1042	;# 
  8246   000413                     SLRCONC         equ	1043	;# 
  8247   000414                     INLVLC          equ	1044	;# 
  8248   000415                     IOCCP           equ	1045	;# 
  8249   000416                     IOCCN           equ	1046	;# 
  8250   000417                     IOCCF           equ	1047	;# 
  8251   000421                     WPUE            equ	1057	;# 
  8252   000424                     INLVLE          equ	1060	;# 
  8253   000425                     IOCEP           equ	1061	;# 
  8254   000426                     IOCEN           equ	1062	;# 
  8255   000427                     IOCEF           equ	1063	;# 
  8256   000440                     NCO1ACC         equ	1088	;# 
  8257   000440                     NCO1ACCL        equ	1088	;# 
  8258   000441                     NCO1ACCH        equ	1089	;# 
  8259   000442                     NCO1ACCU        equ	1090	;# 
  8260   000443                     NCO1INC         equ	1091	;# 
  8261   000443                     NCO1INCL        equ	1091	;# 
  8262   000444                     NCO1INCH        equ	1092	;# 
  8263   000445                     NCO1INCU        equ	1093	;# 
  8264   000446                     NCO1CON         equ	1094	;# 
  8265   000447                     NCO1CLK         equ	1095	;# 
  8266   000448                     NCO2ACC         equ	1096	;# 
  8267   000448                     NCO2ACCL        equ	1096	;# 
  8268   000449                     NCO2ACCH        equ	1097	;# 
  8269   00044A                     NCO2ACCU        equ	1098	;# 
  8270   00044B                     NCO2INC         equ	1099	;# 
  8271   00044B                     NCO2INCL        equ	1099	;# 
  8272   00044C                     NCO2INCH        equ	1100	;# 
  8273   00044D                     NCO2INCU        equ	1101	;# 
  8274   00044E                     NCO2CON         equ	1102	;# 
  8275   00044F                     NCO2CLK         equ	1103	;# 
  8276   000450                     NCO3ACC         equ	1104	;# 
  8277   000450                     NCO3ACCL        equ	1104	;# 
  8278   000451                     NCO3ACCH        equ	1105	;# 
  8279   000452                     NCO3ACCU        equ	1106	;# 
  8280   000453                     NCO3INC         equ	1107	;# 
  8281   000453                     NCO3INCL        equ	1107	;# 
  8282   000454                     NCO3INCH        equ	1108	;# 
  8283   000455                     NCO3INCU        equ	1109	;# 
  8284   000456                     NCO3CON         equ	1110	;# 
  8285   000457                     NCO3CLK         equ	1111	;# 
  8286   000458                     FSCMCON         equ	1112	;# 
  8287   000459                     IVTLOCK         equ	1113	;# 
  8288   00045A                     IVTAD           equ	1114	;# 
  8289   00045A                     IVTADL          equ	1114	;# 
  8290   00045B                     IVTADH          equ	1115	;# 
  8291   00045C                     IVTADU          equ	1116	;# 
  8292   00045D                     IVTBASE         equ	1117	;# 
  8293   00045D                     IVTBASEL        equ	1117	;# 
  8294   00045E                     IVTBASEH        equ	1118	;# 
  8295   00045F                     IVTBASEU        equ	1119	;# 
  8296   000460                     PWM1ERS         equ	1120	;# 
  8297   000461                     PWM1CLK         equ	1121	;# 
  8298   000462                     PWM1LDS         equ	1122	;# 
  8299   000463                     PWM1PR          equ	1123	;# 
  8300   000463                     PWM1PRL         equ	1123	;# 
  8301   000464                     PWM1PRH         equ	1124	;# 
  8302   000465                     PWM1CPRE        equ	1125	;# 
  8303   000466                     PWM1PIPOS       equ	1126	;# 
  8304   000467                     PWM1GIR         equ	1127	;# 
  8305   000468                     PWM1GIE         equ	1128	;# 
  8306   000469                     PWM1CON         equ	1129	;# 
  8307   00046A                     PWM1S1CFG       equ	1130	;# 
  8308   00046B                     PWM1S1P1        equ	1131	;# 
  8309   00046B                     PWM1S1P1L       equ	1131	;# 
  8310   00046C                     PWM1S1P1H       equ	1132	;# 
  8311   00046D                     PWM1S1P2        equ	1133	;# 
  8312   00046D                     PWM1S1P2L       equ	1133	;# 
  8313   00046E                     PWM1S1P2H       equ	1134	;# 
  8314   00046F                     PWM2ERS         equ	1135	;# 
  8315   000470                     PWM2CLK         equ	1136	;# 
  8316   000471                     PWM2LDS         equ	1137	;# 
  8317   000472                     PWM2PR          equ	1138	;# 
  8318   000472                     PWM2PRL         equ	1138	;# 
  8319   000473                     PWM2PRH         equ	1139	;# 
  8320   000474                     PWM2CPRE        equ	1140	;# 
  8321   000475                     PWM2PIPOS       equ	1141	;# 
  8322   000476                     PWM2GIR         equ	1142	;# 
  8323   000477                     PWM2GIE         equ	1143	;# 
  8324   000478                     PWM2CON         equ	1144	;# 
  8325   000479                     PWM2S1CFG       equ	1145	;# 
  8326   00047A                     PWM2S1P1        equ	1146	;# 
  8327   00047A                     PWM2S1P1L       equ	1146	;# 
  8328   00047B                     PWM2S1P1H       equ	1147	;# 
  8329   00047C                     PWM2S1P2        equ	1148	;# 
  8330   00047C                     PWM2S1P2L       equ	1148	;# 
  8331   00047D                     PWM2S1P2H       equ	1149	;# 
  8332   00047E                     PWM3ERS         equ	1150	;# 
  8333   00047F                     PWM3CLK         equ	1151	;# 
  8334   000480                     PWM3LDS         equ	1152	;# 
  8335   000481                     PWM3PR          equ	1153	;# 
  8336   000481                     PWM3PRL         equ	1153	;# 
  8337   000482                     PWM3PRH         equ	1154	;# 
  8338   000483                     PWM3CPRE        equ	1155	;# 
  8339   000484                     PWM3PIPOS       equ	1156	;# 
  8340   000485                     PWM3GIR         equ	1157	;# 
  8341   000486                     PWM3GIE         equ	1158	;# 
  8342   000487                     PWM3CON         equ	1159	;# 
  8343   000488                     PWM3S1CFG       equ	1160	;# 
  8344   000489                     PWM3S1P1        equ	1161	;# 
  8345   000489                     PWM3S1P1L       equ	1161	;# 
  8346   00048A                     PWM3S1P1H       equ	1162	;# 
  8347   00048B                     PWM3S1P2        equ	1163	;# 
  8348   00048B                     PWM3S1P2L       equ	1163	;# 
  8349   00048C                     PWM3S1P2H       equ	1164	;# 
  8350   00048D                     PWM4ERS         equ	1165	;# 
  8351   00048E                     PWM4CLK         equ	1166	;# 
  8352   00048F                     PWM4LDS         equ	1167	;# 
  8353   000490                     PWM4PR          equ	1168	;# 
  8354   000490                     PWM4PRL         equ	1168	;# 
  8355   000491                     PWM4PRH         equ	1169	;# 
  8356   000492                     PWM4CPRE        equ	1170	;# 
  8357   000493                     PWM4PIPOS       equ	1171	;# 
  8358   000494                     PWM4GIR         equ	1172	;# 
  8359   000495                     PWM4GIE         equ	1173	;# 
  8360   000496                     PWM4CON         equ	1174	;# 
  8361   000497                     PWM4S1CFG       equ	1175	;# 
  8362   000498                     PWM4S1P1        equ	1176	;# 
  8363   000498                     PWM4S1P1L       equ	1176	;# 
  8364   000499                     PWM4S1P1H       equ	1177	;# 
  8365   00049A                     PWM4S1P2        equ	1178	;# 
  8366   00049A                     PWM4S1P2L       equ	1178	;# 
  8367   00049B                     PWM4S1P2H       equ	1179	;# 
  8368   00049C                     PWMLOAD         equ	1180	;# 
  8369   00049D                     PWMEN           equ	1181	;# 
  8370   00049E                     PIE0            equ	1182	;# 
  8371   00049F                     PIE1            equ	1183	;# 
  8372   0004A0                     PIE2            equ	1184	;# 
  8373   0004A1                     PIE3            equ	1185	;# 
  8374   0004A2                     PIE4            equ	1186	;# 
  8375   0004A3                     PIE5            equ	1187	;# 
  8376   0004A4                     PIE6            equ	1188	;# 
  8377   0004A5                     PIE7            equ	1189	;# 
  8378   0004A6                     PIE8            equ	1190	;# 
  8379   0004A7                     PIE9            equ	1191	;# 
  8380   0004A8                     PIE10           equ	1192	;# 
  8381   0004A9                     PIE11           equ	1193	;# 
  8382   0004AA                     PIE12           equ	1194	;# 
  8383   0004AB                     PIE13           equ	1195	;# 
  8384   0004AC                     PIE14           equ	1196	;# 
  8385   0004AD                     PIE15           equ	1197	;# 
  8386   0004AE                     PIR0            equ	1198	;# 
  8387   0004AF                     PIR1            equ	1199	;# 
  8388   0004B0                     PIR2            equ	1200	;# 
  8389   0004B1                     PIR3            equ	1201	;# 
  8390   0004B2                     PIR4            equ	1202	;# 
  8391   0004B3                     PIR5            equ	1203	;# 
  8392   0004B4                     PIR6            equ	1204	;# 
  8393   0004B5                     PIR7            equ	1205	;# 
  8394   0004B6                     PIR8            equ	1206	;# 
  8395   0004B7                     PIR9            equ	1207	;# 
  8396   0004B8                     PIR10           equ	1208	;# 
  8397   0004B9                     PIR11           equ	1209	;# 
  8398   0004BA                     PIR12           equ	1210	;# 
  8399   0004BB                     PIR13           equ	1211	;# 
  8400   0004BC                     PIR14           equ	1212	;# 
  8401   0004BD                     PIR15           equ	1213	;# 
  8402   0004BE                     LATA            equ	1214	;# 
  8403   0004BF                     LATB            equ	1215	;# 
  8404   0004C0                     LATC            equ	1216	;# 
  8405   0004C6                     TRISA           equ	1222	;# 
  8406   0004C7                     TRISB           equ	1223	;# 
  8407   0004C8                     TRISC           equ	1224	;# 
  8408   0004CA                     TRISE           equ	1226	;# 
  8409   0004CE                     PORTA           equ	1230	;# 
  8410   0004CF                     PORTB           equ	1231	;# 
  8411   0004D0                     PORTC           equ	1232	;# 
  8412   0004D2                     PORTE           equ	1234	;# 
  8413   0004D6                     INTCON0         equ	1238	;# 
  8414   0004D7                     INTCON1         equ	1239	;# 
  8415   0004D8                     STATUS          equ	1240	;# 
  8416   0004D9                     FSR2            equ	1241	;# 
  8417   0004D9                     FSR2L           equ	1241	;# 
  8418   0004DA                     FSR2H           equ	1242	;# 
  8419   0004DB                     PLUSW2          equ	1243	;# 
  8420   0004DC                     PREINC2         equ	1244	;# 
  8421   0004DD                     POSTDEC2        equ	1245	;# 
  8422   0004DE                     POSTINC2        equ	1246	;# 
  8423   0004DF                     INDF2           equ	1247	;# 
  8424   0004E0                     BSR             equ	1248	;# 
  8425   0004E1                     FSR1            equ	1249	;# 
  8426   0004E1                     FSR1L           equ	1249	;# 
  8427   0004E2                     FSR1H           equ	1250	;# 
  8428   0004E3                     PLUSW1          equ	1251	;# 
  8429   0004E4                     PREINC1         equ	1252	;# 
  8430   0004E5                     POSTDEC1        equ	1253	;# 
  8431   0004E6                     POSTINC1        equ	1254	;# 
  8432   0004E7                     INDF1           equ	1255	;# 
  8433   0004E8                     WREG            equ	1256	;# 
  8434   0004E9                     FSR0            equ	1257	;# 
  8435   0004E9                     FSR0L           equ	1257	;# 
  8436   0004EA                     FSR0H           equ	1258	;# 
  8437   0004EB                     PLUSW0          equ	1259	;# 
  8438   0004EC                     PREINC0         equ	1260	;# 
  8439   0004ED                     POSTDEC0        equ	1261	;# 
  8440   0004EE                     POSTINC0        equ	1262	;# 
  8441   0004EF                     INDF0           equ	1263	;# 
  8442   0004F0                     PCON0           equ	1264	;# 
  8443   0004F1                     PCON1           equ	1265	;# 
  8444   0004F2                     CPUDOZE         equ	1266	;# 
  8445   0004F3                     PROD            equ	1267	;# 
  8446   0004F3                     PRODL           equ	1267	;# 
  8447   0004F4                     PRODH           equ	1268	;# 
  8448   0004F5                     TABLAT          equ	1269	;# 
  8449   0004F6                     TBLPTR          equ	1270	;# 
  8450   0004F6                     TBLPTRL         equ	1270	;# 
  8451   0004F7                     TBLPTRH         equ	1271	;# 
  8452   0004F8                     TBLPTRU         equ	1272	;# 
  8453   0004F9                     PCLAT           equ	1273	;# 
  8454   0004F9                     PCL             equ	1273	;# 
  8455   0004FA                     PCLATH          equ	1274	;# 
  8456   0004FB                     PCLATU          equ	1275	;# 
  8457   0004FC                     STKPTR          equ	1276	;# 
  8458   0004FD                     TOS             equ	1277	;# 
  8459   0004FD                     TOSL            equ	1277	;# 
  8460   0004FE                     TOSH            equ	1278	;# 
  8461   0004FF                     TOSU            equ	1279	;# 
  8462   000038                     BOOTREG         equ	56	;# 
  8463   000039                     CLKRCON         equ	57	;# 
  8464   00003A                     CLKRCLK         equ	58	;# 
  8465   000040                     NVMCON0         equ	64	;# 
  8466   000041                     NVMCON1         equ	65	;# 
  8467   000042                     NVMLOCK         equ	66	;# 
  8468   000043                     NVMADR          equ	67	;# 
  8469   000043                     NVMADRL         equ	67	;# 
  8470   000044                     NVMADRH         equ	68	;# 
  8471   000045                     NVMADRU         equ	69	;# 
  8472   000046                     NVMDAT          equ	70	;# 
  8473   000046                     NVMDATL         equ	70	;# 
  8474   000047                     NVMDATH         equ	71	;# 
  8475   000048                     VREGCON         equ	72	;# 
  8476   000049                     BORCON          equ	73	;# 
  8477   00004A                     HLVDCON0        equ	74	;# 
  8478   00004B                     HLVDCON1        equ	75	;# 
  8479   00004C                     ZCDCON          equ	76	;# 
  8480   000060                     PMD0            equ	96	;# 
  8481   000061                     PMD1            equ	97	;# 
  8482   000062                     PMD2            equ	98	;# 
  8483   000063                     PMD3            equ	99	;# 
  8484   000064                     PMD4            equ	100	;# 
  8485   000065                     PMD5            equ	101	;# 
  8486   000066                     PMD6            equ	102	;# 
  8487   000067                     PMD7            equ	103	;# 
  8488   000068                     PMD8            equ	104	;# 
  8489   00006A                     MD1CON0         equ	106	;# 
  8490   00006B                     MD1CON1         equ	107	;# 
  8491   00006C                     MD1SRC          equ	108	;# 
  8492   00006D                     MD1CARL         equ	109	;# 
  8493   00006E                     MD1CARH         equ	110	;# 
  8494   00006F                     CMOUT           equ	111	;# 
  8495   000070                     CM1CON0         equ	112	;# 
  8496   000071                     CM1CON1         equ	113	;# 
  8497   000072                     CM1NCH          equ	114	;# 
  8498   000073                     CM1PCH          equ	115	;# 
  8499   000074                     CM2CON0         equ	116	;# 
  8500   000075                     CM2CON1         equ	117	;# 
  8501   000076                     CM2NCH          equ	118	;# 
  8502   000077                     CM2PCH          equ	119	;# 
  8503   000078                     WDTCON0         equ	120	;# 
  8504   000079                     WDTCON1         equ	121	;# 
  8505   00007A                     WDTPSL          equ	122	;# 
  8506   00007B                     WDTPSH          equ	123	;# 
  8507   00007C                     WDTTMR          equ	124	;# 
  8508   00007D                     DAC1DAT         equ	125	;# 
  8509   00007D                     DAC1DATL        equ	125	;# 
  8510   00007F                     DAC1CON         equ	127	;# 
  8511   000080                     SPI1RXB         equ	128	;# 
  8512   000081                     SPI1TXB         equ	129	;# 
  8513   000082                     SPI1TCNT        equ	130	;# 
  8514   000082                     SPI1TCNTL       equ	130	;# 
  8515   000083                     SPI1TCNTH       equ	131	;# 
  8516   000084                     SPI1CON0        equ	132	;# 
  8517   000085                     SPI1CON1        equ	133	;# 
  8518   000086                     SPI1CON2        equ	134	;# 
  8519   000087                     SPI1STATUS      equ	135	;# 
  8520   000088                     SPI1TWIDTH      equ	136	;# 
  8521   000089                     SPI1BAUD        equ	137	;# 
  8522   00008A                     SPI1INTF        equ	138	;# 
  8523   00008B                     SPI1INTE        equ	139	;# 
  8524   00008C                     SPI1CLK         equ	140	;# 
  8525   00008D                     SPI2RXB         equ	141	;# 
  8526   00008E                     SPI2TXB         equ	142	;# 
  8527   00008F                     SPI2TCNT        equ	143	;# 
  8528   00008F                     SPI2TCNTL       equ	143	;# 
  8529   000090                     SPI2TCNTH       equ	144	;# 
  8530   000091                     SPI2CON0        equ	145	;# 
  8531   000092                     SPI2CON1        equ	146	;# 
  8532   000093                     SPI2CON2        equ	147	;# 
  8533   000094                     SPI2STATUS      equ	148	;# 
  8534   000095                     SPI2TWIDTH      equ	149	;# 
  8535   000096                     SPI2BAUD        equ	150	;# 
  8536   000097                     SPI2INTF        equ	151	;# 
  8537   000098                     SPI2INTE        equ	152	;# 
  8538   000099                     SPI2CLK         equ	153	;# 
  8539   0000AC                     ACTCON          equ	172	;# 
  8540   0000AD                     OSCCON1         equ	173	;# 
  8541   0000AE                     OSCCON2         equ	174	;# 
  8542   0000AF                     OSCCON3         equ	175	;# 
  8543   0000B0                     OSCTUNE         equ	176	;# 
  8544   0000B1                     OSCFRQ          equ	177	;# 
  8545   0000B1                     OSCFREQ         equ	177	;# 
  8546   0000B2                     OSCSTAT         equ	178	;# 
  8547   0000B2                     OSCSTAT1        equ	178	;# 
  8548   0000B3                     OSCEN           equ	179	;# 
  8549   0000B4                     PRLOCK          equ	180	;# 
  8550   0000B5                     SCANPR          equ	181	;# 
  8551   0000B6                     DMA1PR          equ	182	;# 
  8552   0000B7                     DMA2PR          equ	183	;# 
  8553   0000B8                     DMA3PR          equ	184	;# 
  8554   0000B9                     DMA4PR          equ	185	;# 
  8555   0000BA                     DMA5PR          equ	186	;# 
  8556   0000BB                     DMA6PR          equ	187	;# 
  8557   0000BC                     DMA7PR          equ	188	;# 
  8558   0000BD                     DMA8PR          equ	189	;# 
  8559   0000BE                     MAINPR          equ	190	;# 
  8560   0000BF                     ISRPR           equ	191	;# 
  8561   0000D4                     CLCDATA         equ	212	;# 
  8562   0000D5                     CLCSELECT       equ	213	;# 
  8563   0000D6                     CLCnCON         equ	214	;# 
  8564   0000D7                     CLCnPOL         equ	215	;# 
  8565   0000D8                     CLCnSEL0        equ	216	;# 
  8566   0000D9                     CLCnSEL1        equ	217	;# 
  8567   0000DA                     CLCnSEL2        equ	218	;# 
  8568   0000DB                     CLCnSEL3        equ	219	;# 
  8569   0000DC                     CLCnGLS0        equ	220	;# 
  8570   0000DD                     CLCnGLS1        equ	221	;# 
  8571   0000DE                     CLCnGLS2        equ	222	;# 
  8572   0000DF                     CLCnGLS3        equ	223	;# 
  8573   0000E8                     DMASELECT       equ	232	;# 
  8574   0000E9                     DMAnBUF         equ	233	;# 
  8575   0000EA                     DMAnDCNT        equ	234	;# 
  8576   0000EA                     DMAnDCNTL       equ	234	;# 
  8577   0000EB                     DMAnDCNTH       equ	235	;# 
  8578   0000EC                     DMAnDPTR        equ	236	;# 
  8579   0000EC                     DMAnDPTRL       equ	236	;# 
  8580   0000ED                     DMAnDPTRH       equ	237	;# 
  8581   0000EE                     DMAnDSZ         equ	238	;# 
  8582   0000EE                     DMAnDSZL        equ	238	;# 
  8583   0000EF                     DMAnDSZH        equ	239	;# 
  8584   0000F0                     DMAnDSA         equ	240	;# 
  8585   0000F0                     DMAnDSAL        equ	240	;# 
  8586   0000F1                     DMAnDSAH        equ	241	;# 
  8587   0000F2                     DMAnSCNT        equ	242	;# 
  8588   0000F2                     DMAnSCNTL       equ	242	;# 
  8589   0000F3                     DMAnSCNTH       equ	243	;# 
  8590   0000F4                     DMAnSPTR        equ	244	;# 
  8591   0000F4                     DMAnSPTRL       equ	244	;# 
  8592   0000F5                     DMAnSPTRH       equ	245	;# 
  8593   0000F6                     DMAnSPTRU       equ	246	;# 
  8594   0000F7                     DMAnSSZ         equ	247	;# 
  8595   0000F7                     DMAnSSZL        equ	247	;# 
  8596   0000F8                     DMAnSSZH        equ	248	;# 
  8597   0000F9                     DMAnSSA         equ	249	;# 
  8598   0000F9                     DMAnSSAL        equ	249	;# 
  8599   0000FA                     DMAnSSAH        equ	250	;# 
  8600   0000FB                     DMAnSSAU        equ	251	;# 
  8601   0000FC                     DMAnCON0        equ	252	;# 
  8602   0000FD                     DMAnCON1        equ	253	;# 
  8603   0000FE                     DMAnAIRQ        equ	254	;# 
  8604   0000FF                     DMAnSIRQ        equ	255	;# 
  8605   000100                     C1CONL          equ	256	;# 
  8606   000101                     C1CONH          equ	257	;# 
  8607   000102                     C1CONU          equ	258	;# 
  8608   000103                     C1CONT          equ	259	;# 
  8609   000104                     C1NBTCFGL       equ	260	;# 
  8610   000105                     C1NBTCFGH       equ	261	;# 
  8611   000106                     C1NBTCFGU       equ	262	;# 
  8612   000107                     C1NBTCFGT       equ	263	;# 
  8613   000108                     C1DBTCFGL       equ	264	;# 
  8614   000109                     C1DBTCFGH       equ	265	;# 
  8615   00010A                     C1DBTCFGU       equ	266	;# 
  8616   00010B                     C1DBTCFGT       equ	267	;# 
  8617   00010C                     C1TDCL          equ	268	;# 
  8618   00010D                     C1TDCH          equ	269	;# 
  8619   00010E                     C1TDCU          equ	270	;# 
  8620   000110                     C1TBC           equ	272	;# 
  8621   000110                     C1TBCL          equ	272	;# 
  8622   000111                     C1TBCH          equ	273	;# 
  8623   000112                     C1TBCU          equ	274	;# 
  8624   000113                     C1TBCT          equ	275	;# 
  8625   000114                     C1TSCONL        equ	276	;# 
  8626   000115                     C1TSCONH        equ	277	;# 
  8627   000116                     C1TSCONU        equ	278	;# 
  8628   000117                     C1TSCONT        equ	279	;# 
  8629   000118                     C1VECL          equ	280	;# 
  8630   000119                     C1VECH          equ	281	;# 
  8631   00011A                     C1VECU          equ	282	;# 
  8632   00011B                     C1VECT          equ	283	;# 
  8633   00011C                     C1INTL          equ	284	;# 
  8634   00011D                     C1INTH          equ	285	;# 
  8635   00011E                     C1INTU          equ	286	;# 
  8636   00011F                     C1INTT          equ	287	;# 
  8637   000120                     C1RXIF          equ	288	;# 
  8638   000120                     C1RXIFL         equ	288	;# 
  8639   000121                     C1RXIFH         equ	289	;# 
  8640   000122                     C1RXIFU         equ	290	;# 
  8641   000123                     C1RXIFT         equ	291	;# 
  8642   000124                     C1TXIF          equ	292	;# 
  8643   000124                     C1TXIFL         equ	292	;# 
  8644   000125                     C1TXIFH         equ	293	;# 
  8645   000126                     C1TXIFU         equ	294	;# 
  8646   000127                     C1TXIFT         equ	295	;# 
  8647   000128                     C1RXOVIF        equ	296	;# 
  8648   000128                     C1RXOVIFL       equ	296	;# 
  8649   000129                     C1RXOVIFH       equ	297	;# 
  8650   00012A                     C1RXOVIFU       equ	298	;# 
  8651   00012B                     C1RXOVIFT       equ	299	;# 
  8652   00012C                     C1TXATIF        equ	300	;# 
  8653   00012C                     C1TXATIFL       equ	300	;# 
  8654   00012D                     C1TXATIFH       equ	301	;# 
  8655   00012E                     C1TXATIFU       equ	302	;# 
  8656   00012F                     C1TXATIFT       equ	303	;# 
  8657   000130                     C1TXREQ         equ	304	;# 
  8658   000130                     C1TXREQL        equ	304	;# 
  8659   000131                     C1TXREQH        equ	305	;# 
  8660   000132                     C1TXREQU        equ	306	;# 
  8661   000133                     C1TXREQT        equ	307	;# 
  8662   000134                     C1TRECL         equ	308	;# 
  8663   000135                     C1TRECH         equ	309	;# 
  8664   000136                     C1TRECU         equ	310	;# 
  8665   000137                     C1TRECT         equ	311	;# 
  8666   000138                     C1BDIAG0L       equ	312	;# 
  8667   000139                     C1BDIAG0H       equ	313	;# 
  8668   00013C                     C1BDIAG1L       equ	316	;# 
  8669   00013D                     C1BDIAG1H       equ	317	;# 
  8670   00013E                     C1BDIAG1U       equ	318	;# 
  8671   00013F                     C1BDIAG1T       equ	319	;# 
  8672   000140                     C1TEFCONL       equ	320	;# 
  8673   000141                     C1TEFCONH       equ	321	;# 
  8674   000142                     C1TEFCONU       equ	322	;# 
  8675   000143                     C1TEFCONT       equ	323	;# 
  8676   000144                     C1TEFSTAL       equ	324	;# 
  8677   000145                     C1TEFSTAH       equ	325	;# 
  8678   000146                     C1TEFSTAU       equ	326	;# 
  8679   000147                     C1TEFSTAT       equ	327	;# 
  8680   000148                     C1TEFUA         equ	328	;# 
  8681   000148                     C1TEFUAL        equ	328	;# 
  8682   000149                     C1TEFUAH        equ	329	;# 
  8683   00014A                     C1TEFUAU        equ	330	;# 
  8684   00014B                     C1TEFUAT        equ	331	;# 
  8685   00014C                     C1FIFOBA        equ	332	;# 
  8686   00014C                     C1FIFOBAL       equ	332	;# 
  8687   00014D                     C1FIFOBAH       equ	333	;# 
  8688   00014E                     C1FIFOBAU       equ	334	;# 
  8689   00014F                     C1FIFOBAT       equ	335	;# 
  8690   000150                     C1TXQCONL       equ	336	;# 
  8691   000151                     C1TXQCONH       equ	337	;# 
  8692   000152                     C1TXQCONU       equ	338	;# 
  8693   000153                     C1TXQCONT       equ	339	;# 
  8694   000154                     C1TXQSTAL       equ	340	;# 
  8695   000155                     C1TXQSTAH       equ	341	;# 
  8696   000156                     C1TXQSTAU       equ	342	;# 
  8697   000157                     C1TXQSTAT       equ	343	;# 
  8698   000158                     C1TXQUA         equ	344	;# 
  8699   000158                     C1TXQUAL        equ	344	;# 
  8700   000159                     C1TXQUAH        equ	345	;# 
  8701   00015A                     C1TXQUAU        equ	346	;# 
  8702   00015B                     C1TXQUAT        equ	347	;# 
  8703   00015C                     C1FIFOCON1      equ	348	;# 
  8704   00015C                     C1FIFOCON1L     equ	348	;# 
  8705   00015D                     C1FIFOCON1H     equ	349	;# 
  8706   00015E                     C1FIFOCON1U     equ	350	;# 
  8707   00015F                     C1FIFOCON1T     equ	351	;# 
  8708   000160                     C1FIFOSTA1      equ	352	;# 
  8709   000160                     C1FIFOSTA1L     equ	352	;# 
  8710   000161                     C1FIFOSTA1H     equ	353	;# 
  8711   000162                     C1FIFOSTA1U     equ	354	;# 
  8712   000163                     C1FIFOSTA1T     equ	355	;# 
  8713   000164                     C1FIFOUA1       equ	356	;# 
  8714   000164                     C1FIFOUA1L      equ	356	;# 
  8715   000165                     C1FIFOUA1H      equ	357	;# 
  8716   000166                     C1FIFOUA1U      equ	358	;# 
  8717   000167                     C1FIFOUA1T      equ	359	;# 
  8718   000168                     C1FIFOCON2      equ	360	;# 
  8719   000168                     C1FIFOCON2L     equ	360	;# 
  8720   000169                     C1FIFOCON2H     equ	361	;# 
  8721   00016A                     C1FIFOCON2U     equ	362	;# 
  8722   00016B                     C1FIFOCON2T     equ	363	;# 
  8723   00016C                     C1FIFOSTA2      equ	364	;# 
  8724   00016C                     C1FIFOSTA2L     equ	364	;# 
  8725   00016D                     C1FIFOSTA2H     equ	365	;# 
  8726   00016E                     C1FIFOSTA2U     equ	366	;# 
  8727   00016F                     C1FIFOSTA2T     equ	367	;# 
  8728   000170                     C1FIFOUA2       equ	368	;# 
  8729   000170                     C1FIFOUA2L      equ	368	;# 
  8730   000171                     C1FIFOUA2H      equ	369	;# 
  8731   000172                     C1FIFOUA2U      equ	370	;# 
  8732   000173                     C1FIFOUA2T      equ	371	;# 
  8733   000174                     C1FIFOCON3      equ	372	;# 
  8734   000174                     C1FIFOCON3L     equ	372	;# 
  8735   000175                     C1FIFOCON3H     equ	373	;# 
  8736   000176                     C1FIFOCON3U     equ	374	;# 
  8737   000177                     C1FIFOCON3T     equ	375	;# 
  8738   000178                     C1FIFOSTA3      equ	376	;# 
  8739   000178                     C1FIFOSTA3L     equ	376	;# 
  8740   000179                     C1FIFOSTA3H     equ	377	;# 
  8741   00017A                     C1FIFOSTA3U     equ	378	;# 
  8742   00017B                     C1FIFOSTA3T     equ	379	;# 
  8743   00017C                     C1FIFOUA3       equ	380	;# 
  8744   00017C                     C1FIFOUA3L      equ	380	;# 
  8745   00017D                     C1FIFOUA3H      equ	381	;# 
  8746   00017E                     C1FIFOUA3U      equ	382	;# 
  8747   00017F                     C1FIFOUA3T      equ	383	;# 
  8748   000180                     C1FLTCON0L      equ	384	;# 
  8749   000181                     C1FLTCON0H      equ	385	;# 
  8750   000182                     C1FLTCON0U      equ	386	;# 
  8751   000183                     C1FLTCON0T      equ	387	;# 
  8752   000184                     C1FLTCON1L      equ	388	;# 
  8753   000185                     C1FLTCON1H      equ	389	;# 
  8754   000186                     C1FLTCON1U      equ	390	;# 
  8755   000187                     C1FLTCON1T      equ	391	;# 
  8756   000188                     C1FLTCON2L      equ	392	;# 
  8757   000189                     C1FLTCON2H      equ	393	;# 
  8758   00018A                     C1FLTCON2U      equ	394	;# 
  8759   00018B                     C1FLTCON2T      equ	395	;# 
  8760   00018C                     C1FLTOBJ0       equ	396	;# 
  8761   00018C                     C1FLTOBJ0L      equ	396	;# 
  8762   00018D                     C1FLTOBJ0H      equ	397	;# 
  8763   00018E                     C1FLTOBJ0U      equ	398	;# 
  8764   00018F                     C1FLTOBJ0T      equ	399	;# 
  8765   000190                     C1MASK0         equ	400	;# 
  8766   000190                     C1MASK0L        equ	400	;# 
  8767   000191                     C1MASK0H        equ	401	;# 
  8768   000192                     C1MASK0U        equ	402	;# 
  8769   000193                     C1MASK0T        equ	403	;# 
  8770   000194                     C1FLTOBJ1       equ	404	;# 
  8771   000194                     C1FLTOBJ1L      equ	404	;# 
  8772   000195                     C1FLTOBJ1H      equ	405	;# 
  8773   000196                     C1FLTOBJ1U      equ	406	;# 
  8774   000197                     C1FLTOBJ1T      equ	407	;# 
  8775   000198                     C1MASK1         equ	408	;# 
  8776   000198                     C1MASK1L        equ	408	;# 
  8777   000199                     C1MASK1H        equ	409	;# 
  8778   00019A                     C1MASK1U        equ	410	;# 
  8779   00019B                     C1MASK1T        equ	411	;# 
  8780   00019C                     C1FLTOBJ2       equ	412	;# 
  8781   00019C                     C1FLTOBJ2L      equ	412	;# 
  8782   00019D                     C1FLTOBJ2H      equ	413	;# 
  8783   00019E                     C1FLTOBJ2U      equ	414	;# 
  8784   00019F                     C1FLTOBJ2T      equ	415	;# 
  8785   0001A0                     C1MASK2         equ	416	;# 
  8786   0001A0                     C1MASK2L        equ	416	;# 
  8787   0001A1                     C1MASK2H        equ	417	;# 
  8788   0001A2                     C1MASK2U        equ	418	;# 
  8789   0001A3                     C1MASK2T        equ	419	;# 
  8790   0001A4                     C1FLTOBJ3       equ	420	;# 
  8791   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8792   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8793   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8794   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8795   0001A8                     C1MASK3         equ	424	;# 
  8796   0001A8                     C1MASK3L        equ	424	;# 
  8797   0001A9                     C1MASK3H        equ	425	;# 
  8798   0001AA                     C1MASK3U        equ	426	;# 
  8799   0001AB                     C1MASK3T        equ	427	;# 
  8800   0001AC                     C1FLTOBJ4       equ	428	;# 
  8801   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8802   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8803   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8804   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8805   0001B0                     C1MASK4         equ	432	;# 
  8806   0001B0                     C1MASK4L        equ	432	;# 
  8807   0001B1                     C1MASK4H        equ	433	;# 
  8808   0001B2                     C1MASK4U        equ	434	;# 
  8809   0001B3                     C1MASK4T        equ	435	;# 
  8810   0001B4                     C1FLTOBJ5       equ	436	;# 
  8811   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8812   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8813   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8814   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8815   0001B8                     C1MASK5         equ	440	;# 
  8816   0001B8                     C1MASK5L        equ	440	;# 
  8817   0001B9                     C1MASK5H        equ	441	;# 
  8818   0001BA                     C1MASK5U        equ	442	;# 
  8819   0001BB                     C1MASK5T        equ	443	;# 
  8820   0001BC                     C1FLTOBJ6       equ	444	;# 
  8821   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8822   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8823   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8824   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8825   0001C0                     C1MASK6         equ	448	;# 
  8826   0001C0                     C1MASK6L        equ	448	;# 
  8827   0001C1                     C1MASK6H        equ	449	;# 
  8828   0001C2                     C1MASK6U        equ	450	;# 
  8829   0001C3                     C1MASK6T        equ	451	;# 
  8830   0001C4                     C1FLTOBJ7       equ	452	;# 
  8831   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8832   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8833   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8834   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8835   0001C8                     C1MASK7         equ	456	;# 
  8836   0001C8                     C1MASK7L        equ	456	;# 
  8837   0001C9                     C1MASK7H        equ	457	;# 
  8838   0001CA                     C1MASK7U        equ	458	;# 
  8839   0001CB                     C1MASK7T        equ	459	;# 
  8840   0001CC                     C1FLTOBJ8       equ	460	;# 
  8841   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8842   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8843   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8844   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8845   0001D0                     C1MASK8         equ	464	;# 
  8846   0001D0                     C1MASK8L        equ	464	;# 
  8847   0001D1                     C1MASK8H        equ	465	;# 
  8848   0001D2                     C1MASK8U        equ	466	;# 
  8849   0001D3                     C1MASK8T        equ	467	;# 
  8850   0001D4                     C1FLTOBJ9       equ	468	;# 
  8851   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8852   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8853   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8854   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8855   0001D8                     C1MASK9         equ	472	;# 
  8856   0001D8                     C1MASK9L        equ	472	;# 
  8857   0001D9                     C1MASK9H        equ	473	;# 
  8858   0001DA                     C1MASK9U        equ	474	;# 
  8859   0001DB                     C1MASK9T        equ	475	;# 
  8860   0001DC                     C1FLTOBJ10      equ	476	;# 
  8861   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8862   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8863   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8864   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8865   0001E0                     C1MASK10        equ	480	;# 
  8866   0001E0                     C1MASK10L       equ	480	;# 
  8867   0001E1                     C1MASK10H       equ	481	;# 
  8868   0001E2                     C1MASK10U       equ	482	;# 
  8869   0001E3                     C1MASK10T       equ	483	;# 
  8870   0001E4                     C1FLTOBJ11      equ	484	;# 
  8871   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8872   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8873   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8874   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8875   0001E8                     C1MASK11        equ	488	;# 
  8876   0001E8                     C1MASK11L       equ	488	;# 
  8877   0001E9                     C1MASK11H       equ	489	;# 
  8878   0001EA                     C1MASK11U       equ	490	;# 
  8879   0001EB                     C1MASK11T       equ	491	;# 
  8880   000200                     PPSLOCK         equ	512	;# 
  8881   000201                     RA0PPS          equ	513	;# 
  8882   000202                     RA1PPS          equ	514	;# 
  8883   000203                     RA2PPS          equ	515	;# 
  8884   000204                     RA3PPS          equ	516	;# 
  8885   000205                     RA4PPS          equ	517	;# 
  8886   000206                     RA5PPS          equ	518	;# 
  8887   000207                     RA6PPS          equ	519	;# 
  8888   000208                     RA7PPS          equ	520	;# 
  8889   000209                     RB0PPS          equ	521	;# 
  8890   00020A                     RB1PPS          equ	522	;# 
  8891   00020B                     RB2PPS          equ	523	;# 
  8892   00020C                     RB3PPS          equ	524	;# 
  8893   00020D                     RB4PPS          equ	525	;# 
  8894   00020E                     RB5PPS          equ	526	;# 
  8895   00020F                     RB6PPS          equ	527	;# 
  8896   000210                     RB7PPS          equ	528	;# 
  8897   000211                     RC0PPS          equ	529	;# 
  8898   000212                     RC1PPS          equ	530	;# 
  8899   000213                     RC2PPS          equ	531	;# 
  8900   000214                     RC3PPS          equ	532	;# 
  8901   000215                     RC4PPS          equ	533	;# 
  8902   000216                     RC5PPS          equ	534	;# 
  8903   000217                     RC6PPS          equ	535	;# 
  8904   000218                     RC7PPS          equ	536	;# 
  8905   00023D                     CANRXPPS        equ	573	;# 
  8906   00023E                     INT0PPS         equ	574	;# 
  8907   00023F                     INT1PPS         equ	575	;# 
  8908   000240                     INT2PPS         equ	576	;# 
  8909   000241                     T0CKIPPS        equ	577	;# 
  8910   000242                     T1CKIPPS        equ	578	;# 
  8911   000243                     T1GPPS          equ	579	;# 
  8912   000244                     T3CKIPPS        equ	580	;# 
  8913   000245                     T3GPPS          equ	581	;# 
  8914   000246                     T5CKIPPS        equ	582	;# 
  8915   000247                     T5GPPS          equ	583	;# 
  8916   000248                     T2INPPS         equ	584	;# 
  8917   000249                     T4INPPS         equ	585	;# 
  8918   00024A                     T6INPPS         equ	586	;# 
  8919   00024B                     TUIN0PPS        equ	587	;# 
  8920   00024C                     TUIN1PPS        equ	588	;# 
  8921   00024F                     CCP1PPS         equ	591	;# 
  8922   000250                     CCP2PPS         equ	592	;# 
  8923   000251                     CCP3PPS         equ	593	;# 
  8924   000253                     PWM1ERSPPS      equ	595	;# 
  8925   000254                     PWM2ERSPPS      equ	596	;# 
  8926   000255                     PWM3ERSPPS      equ	597	;# 
  8927   000256                     PWM4ERSPPS      equ	598	;# 
  8928   000257                     PWMIN0PPS       equ	599	;# 
  8929   000258                     PWMIN1PPS       equ	600	;# 
  8930   000259                     SMT1WINPPS      equ	601	;# 
  8931   00025A                     SMT1SIGPPS      equ	602	;# 
  8932   00025B                     CWG1PPS         equ	603	;# 
  8933   00025B                     CWG1INPPS       equ	603	;# 
  8934   00025C                     CWG2PPS         equ	604	;# 
  8935   00025C                     CWG2INPPS       equ	604	;# 
  8936   00025D                     CWG3PPS         equ	605	;# 
  8937   00025D                     CWG3INPPS       equ	605	;# 
  8938   00025E                     MD1CARLPPS      equ	606	;# 
  8939   00025E                     MDCARLPPS       equ	606	;# 
  8940   00025F                     MD1CARHPPS      equ	607	;# 
  8941   00025F                     MDCARHPPS       equ	607	;# 
  8942   000260                     MD1SRCPPS       equ	608	;# 
  8943   000260                     MDSRCPPS        equ	608	;# 
  8944   000261                     CLCIN0PPS       equ	609	;# 
  8945   000262                     CLCIN1PPS       equ	610	;# 
  8946   000263                     CLCIN2PPS       equ	611	;# 
  8947   000264                     CLCIN3PPS       equ	612	;# 
  8948   000265                     CLCIN4PPS       equ	613	;# 
  8949   000266                     CLCIN5PPS       equ	614	;# 
  8950   000267                     CLCIN6PPS       equ	615	;# 
  8951   000268                     CLCIN7PPS       equ	616	;# 
  8952   000269                     ADACTPPS        equ	617	;# 
  8953   00026A                     SPI1SCKPPS      equ	618	;# 
  8954   00026B                     SPI1SDIPPS      equ	619	;# 
  8955   00026C                     SPI1SSPPS       equ	620	;# 
  8956   00026D                     SPI2SCKPPS      equ	621	;# 
  8957   00026E                     SPI2SDIPPS      equ	622	;# 
  8958   00026F                     SPI2SSPPS       equ	623	;# 
  8959   000270                     I2C1SDAPPS      equ	624	;# 
  8960   000271                     I2C1SCLPPS      equ	625	;# 
  8961   000272                     U1RXPPS         equ	626	;# 
  8962   000273                     U1CTSPPS        equ	627	;# 
  8963   000274                     U2RXPPS         equ	628	;# 
  8964   000275                     U2CTSPPS        equ	629	;# 
  8965   000276                     U3RXPPS         equ	630	;# 
  8966   000277                     U3CTSPPS        equ	631	;# 
  8967   000278                     U4RXPPS         equ	632	;# 
  8968   000279                     U4CTSPPS        equ	633	;# 
  8969   00027A                     U5RXPPS         equ	634	;# 
  8970   00027B                     U5CTSPPS        equ	635	;# 
  8971   000286                     RC4I2C          equ	646	;# 
  8972   000287                     RC3I2C          equ	647	;# 
  8973   000288                     RB2I2C          equ	648	;# 
  8974   000289                     RB1I2C          equ	649	;# 
  8975   00028A                     I2C1RXB         equ	650	;# 
  8976   00028B                     I2C1TXB         equ	651	;# 
  8977   00028C                     I2C1CNTL        equ	652	;# 
  8978   00028D                     I2C1CNTH        equ	653	;# 
  8979   00028E                     I2C1ADB0        equ	654	;# 
  8980   00028F                     I2C1ADB1        equ	655	;# 
  8981   000290                     I2C1ADR0        equ	656	;# 
  8982   000291                     I2C1ADR1        equ	657	;# 
  8983   000292                     I2C1ADR2        equ	658	;# 
  8984   000293                     I2C1ADR3        equ	659	;# 
  8985   000294                     I2C1CON0        equ	660	;# 
  8986   000295                     I2C1CON1        equ	661	;# 
  8987   000296                     I2C1CON2        equ	662	;# 
  8988   000297                     I2C1ERR         equ	663	;# 
  8989   000298                     I2C1STAT0       equ	664	;# 
  8990   000299                     I2C1STAT1       equ	665	;# 
  8991   00029A                     I2C1PIR         equ	666	;# 
  8992   00029B                     I2C1PIE         equ	667	;# 
  8993   00029C                     I2C1BTO         equ	668	;# 
  8994   00029D                     I2C1BAUD        equ	669	;# 
  8995   00029E                     I2C1CLK         equ	670	;# 
  8996   00029F                     I2C1BTOC        equ	671	;# 
  8997   0002A1                     U1RXB           equ	673	;# 
  8998   0002A1                     U1RXBL          equ	673	;# 
  8999   0002A2                     U1RXCHK         equ	674	;# 
  9000   0002A3                     U1TXB           equ	675	;# 
  9001   0002A3                     U1TXBL          equ	675	;# 
  9002   0002A4                     U1TXCHK         equ	676	;# 
  9003   0002A5                     U1P1            equ	677	;# 
  9004   0002A5                     U1P1L           equ	677	;# 
  9005   0002A6                     U1P1H           equ	678	;# 
  9006   0002A7                     U1P2            equ	679	;# 
  9007   0002A7                     U1P2L           equ	679	;# 
  9008   0002A8                     U1P2H           equ	680	;# 
  9009   0002A9                     U1P3            equ	681	;# 
  9010   0002A9                     U1P3L           equ	681	;# 
  9011   0002AA                     U1P3H           equ	682	;# 
  9012   0002AB                     U1CON0          equ	683	;# 
  9013   0002AC                     U1CON1          equ	684	;# 
  9014   0002AD                     U1CON2          equ	685	;# 
  9015   0002AE                     U1BRG           equ	686	;# 
  9016   0002AE                     U1BRGL          equ	686	;# 
  9017   0002AF                     U1BRGH          equ	687	;# 
  9018   0002B0                     U1FIFO          equ	688	;# 
  9019   0002B1                     U1UIR           equ	689	;# 
  9020   0002B2                     U1ERRIR         equ	690	;# 
  9021   0002B3                     U1ERRIE         equ	691	;# 
  9022   0002B4                     U2RXB           equ	692	;# 
  9023   0002B4                     U2RXBL          equ	692	;# 
  9024   0002B5                     U2RXCHK         equ	693	;# 
  9025   0002B6                     U2TXB           equ	694	;# 
  9026   0002B6                     U2TXBL          equ	694	;# 
  9027   0002B7                     U2TXCHK         equ	695	;# 
  9028   0002B8                     U2P1            equ	696	;# 
  9029   0002B8                     U2P1L           equ	696	;# 
  9030   0002B9                     U2P1H           equ	697	;# 
  9031   0002BA                     U2P2            equ	698	;# 
  9032   0002BA                     U2P2L           equ	698	;# 
  9033   0002BB                     U2P2H           equ	699	;# 
  9034   0002BC                     U2P3            equ	700	;# 
  9035   0002BC                     U2P3L           equ	700	;# 
  9036   0002BD                     U2P3H           equ	701	;# 
  9037   0002BE                     U2CON0          equ	702	;# 
  9038   0002BF                     U2CON1          equ	703	;# 
  9039   0002C0                     U2CON2          equ	704	;# 
  9040   0002C1                     U2BRG           equ	705	;# 
  9041   0002C1                     U2BRGL          equ	705	;# 
  9042   0002C2                     U2BRGH          equ	706	;# 
  9043   0002C3                     U2FIFO          equ	707	;# 
  9044   0002C4                     U2UIR           equ	708	;# 
  9045   0002C5                     U2ERRIR         equ	709	;# 
  9046   0002C6                     U2ERRIE         equ	710	;# 
  9047   0002C7                     U3RXB           equ	711	;# 
  9048   0002C7                     U3RXBL          equ	711	;# 
  9049   0002C9                     U3TXB           equ	713	;# 
  9050   0002C9                     U3TXBL          equ	713	;# 
  9051   0002CB                     U3P1            equ	715	;# 
  9052   0002CB                     U3P1L           equ	715	;# 
  9053   0002CD                     U3P2            equ	717	;# 
  9054   0002CD                     U3P2L           equ	717	;# 
  9055   0002CF                     U3P3            equ	719	;# 
  9056   0002CF                     U3P3L           equ	719	;# 
  9057   0002D1                     U3CON0          equ	721	;# 
  9058   0002D2                     U3CON1          equ	722	;# 
  9059   0002D3                     U3CON2          equ	723	;# 
  9060   0002D4                     U3BRG           equ	724	;# 
  9061   0002D4                     U3BRGL          equ	724	;# 
  9062   0002D5                     U3BRGH          equ	725	;# 
  9063   0002D6                     U3FIFO          equ	726	;# 
  9064   0002D7                     U3UIR           equ	727	;# 
  9065   0002D8                     U3ERRIR         equ	728	;# 
  9066   0002D9                     U3ERRIE         equ	729	;# 
  9067   0002DA                     U4RXB           equ	730	;# 
  9068   0002DA                     U4RXBL          equ	730	;# 
  9069   0002DC                     U4TXB           equ	732	;# 
  9070   0002DC                     U4TXBL          equ	732	;# 
  9071   0002DE                     U4P1            equ	734	;# 
  9072   0002DE                     U4P1L           equ	734	;# 
  9073   0002E0                     U4P2            equ	736	;# 
  9074   0002E0                     U4P2L           equ	736	;# 
  9075   0002E2                     U4P3            equ	738	;# 
  9076   0002E2                     U4P3L           equ	738	;# 
  9077   0002E4                     U4CON0          equ	740	;# 
  9078   0002E5                     U4CON1          equ	741	;# 
  9079   0002E6                     U4CON2          equ	742	;# 
  9080   0002E7                     U4BRG           equ	743	;# 
  9081   0002E7                     U4BRGL          equ	743	;# 
  9082   0002E8                     U4BRGH          equ	744	;# 
  9083   0002E9                     U4FIFO          equ	745	;# 
  9084   0002EA                     U4UIR           equ	746	;# 
  9085   0002EB                     U4ERRIR         equ	747	;# 
  9086   0002EC                     U4ERRIE         equ	748	;# 
  9087   0002ED                     U5RXB           equ	749	;# 
  9088   0002ED                     U5RXBL          equ	749	;# 
  9089   0002EF                     U5TXB           equ	751	;# 
  9090   0002EF                     U5TXBL          equ	751	;# 
  9091   0002F1                     U5P1            equ	753	;# 
  9092   0002F1                     U5P1L           equ	753	;# 
  9093   0002F3                     U5P2            equ	755	;# 
  9094   0002F3                     U5P2L           equ	755	;# 
  9095   0002F5                     U5P3            equ	757	;# 
  9096   0002F5                     U5P3L           equ	757	;# 
  9097   0002F7                     U5CON0          equ	759	;# 
  9098   0002F8                     U5CON1          equ	760	;# 
  9099   0002F9                     U5CON2          equ	761	;# 
  9100   0002FA                     U5BRG           equ	762	;# 
  9101   0002FA                     U5BRGL          equ	762	;# 
  9102   0002FB                     U5BRGH          equ	763	;# 
  9103   0002FC                     U5FIFO          equ	764	;# 
  9104   0002FD                     U5UIR           equ	765	;# 
  9105   0002FE                     U5ERRIR         equ	766	;# 
  9106   0002FF                     U5ERRIE         equ	767	;# 
  9107   000300                     SMT1TMR         equ	768	;# 
  9108   000300                     SMT1TMRL        equ	768	;# 
  9109   000301                     SMT1TMRH        equ	769	;# 
  9110   000302                     SMT1TMRU        equ	770	;# 
  9111   000303                     SMT1CPR         equ	771	;# 
  9112   000303                     SMT1CPRL        equ	771	;# 
  9113   000304                     SMT1CPRH        equ	772	;# 
  9114   000305                     SMT1CPRU        equ	773	;# 
  9115   000306                     SMT1CPW         equ	774	;# 
  9116   000306                     SMT1CPWL        equ	774	;# 
  9117   000307                     SMT1CPWH        equ	775	;# 
  9118   000308                     SMT1CPWU        equ	776	;# 
  9119   000309                     SMT1PR          equ	777	;# 
  9120   000309                     SMT1PRL         equ	777	;# 
  9121   00030A                     SMT1PRH         equ	778	;# 
  9122   00030B                     SMT1PRU         equ	779	;# 
  9123   00030C                     SMT1CON0        equ	780	;# 
  9124   00030D                     SMT1CON1        equ	781	;# 
  9125   00030E                     SMT1STAT        equ	782	;# 
  9126   00030F                     SMT1CLK         equ	783	;# 
  9127   000310                     SMT1SIG         equ	784	;# 
  9128   000311                     SMT1WIN         equ	785	;# 
  9129   000318                     TMR0L           equ	792	;# 
  9130   000318                     TMR0            equ	792	;# 
  9131   000319                     TMR0H           equ	793	;# 
  9132   000319                     PR0             equ	793	;# 
  9133   00031A                     T0CON0          equ	794	;# 
  9134   00031B                     T0CON1          equ	795	;# 
  9135   00031C                     TMR1            equ	796	;# 
  9136   00031C                     TMR1L           equ	796	;# 
  9137   00031D                     TMR1H           equ	797	;# 
  9138   00031E                     T1CON           equ	798	;# 
  9139   00031E                     TMR1CON         equ	798	;# 
  9140   00031F                     T1GCON          equ	799	;# 
  9141   00031F                     TMR1GCON        equ	799	;# 
  9142   000320                     T1GATE          equ	800	;# 
  9143   000320                     TMR1GATE        equ	800	;# 
  9144   000321                     T1CLK           equ	801	;# 
  9145   000321                     TMR1CLK         equ	801	;# 
  9146   000321                     PR1             equ	801	;# 
  9147   000322                     T2TMR           equ	802	;# 
  9148   000322                     TMR2            equ	802	;# 
  9149   000323                     T2PR            equ	803	;# 
  9150   000323                     PR2             equ	803	;# 
  9151   000324                     T2CON           equ	804	;# 
  9152   000325                     T2HLT           equ	805	;# 
  9153   000326                     T2CLKCON        equ	806	;# 
  9154   000326                     T2CLK           equ	806	;# 
  9155   000327                     T2RST           equ	807	;# 
  9156   000328                     TMR3            equ	808	;# 
  9157   000328                     TMR3L           equ	808	;# 
  9158   000329                     TMR3H           equ	809	;# 
  9159   00032A                     T3CON           equ	810	;# 
  9160   00032A                     TMR3CON         equ	810	;# 
  9161   00032B                     T3GCON          equ	811	;# 
  9162   00032B                     TMR3GCON        equ	811	;# 
  9163   00032C                     T3GATE          equ	812	;# 
  9164   00032C                     TMR3GATE        equ	812	;# 
  9165   00032D                     T3CLK           equ	813	;# 
  9166   00032D                     TMR3CLK         equ	813	;# 
  9167   00032D                     PR3             equ	813	;# 
  9168   00032E                     T4TMR           equ	814	;# 
  9169   00032E                     TMR4            equ	814	;# 
  9170   00032F                     T4PR            equ	815	;# 
  9171   00032F                     PR4             equ	815	;# 
  9172   000330                     T4CON           equ	816	;# 
  9173   000331                     T4HLT           equ	817	;# 
  9174   000332                     T4CLKCON        equ	818	;# 
  9175   000332                     T4CLK           equ	818	;# 
  9176   000333                     T4RST           equ	819	;# 
  9177   000334                     TMR5            equ	820	;# 
  9178   000334                     TMR5L           equ	820	;# 
  9179   000335                     TMR5H           equ	821	;# 
  9180   000336                     T5CON           equ	822	;# 
  9181   000336                     TMR5CON         equ	822	;# 
  9182   000337                     T5GCON          equ	823	;# 
  9183   000337                     TMR5GCON        equ	823	;# 
  9184   000338                     T5GATE          equ	824	;# 
  9185   000338                     TMR5GATE        equ	824	;# 
  9186   000339                     T5CLK           equ	825	;# 
  9187   000339                     TMR5CLK         equ	825	;# 
  9188   000339                     PR5             equ	825	;# 
  9189   00033A                     T6TMR           equ	826	;# 
  9190   00033A                     TMR6            equ	826	;# 
  9191   00033B                     T6PR            equ	827	;# 
  9192   00033B                     PR6             equ	827	;# 
  9193   00033C                     T6CON           equ	828	;# 
  9194   00033D                     T6HLT           equ	829	;# 
  9195   00033E                     T6CLKCON        equ	830	;# 
  9196   00033E                     T6CLK           equ	830	;# 
  9197   00033F                     T6RST           equ	831	;# 
  9198   000340                     CCPR1           equ	832	;# 
  9199   000340                     CCPR1L          equ	832	;# 
  9200   000341                     CCPR1H          equ	833	;# 
  9201   000342                     CCP1CON         equ	834	;# 
  9202   000343                     CCP1CAP         equ	835	;# 
  9203   000344                     CCPR2           equ	836	;# 
  9204   000344                     CCPR2L          equ	836	;# 
  9205   000345                     CCPR2H          equ	837	;# 
  9206   000346                     CCP2CON         equ	838	;# 
  9207   000347                     CCP2CAP         equ	839	;# 
  9208   000348                     CCPR3           equ	840	;# 
  9209   000348                     CCPR3L          equ	840	;# 
  9210   000349                     CCPR3H          equ	841	;# 
  9211   00034A                     CCP3CON         equ	842	;# 
  9212   00034B                     CCP3CAP         equ	843	;# 
  9213   00034C                     CCPTMRS0        equ	844	;# 
  9214   00034F                     CRCDATA         equ	847	;# 
  9215   00034F                     CRCDATAL        equ	847	;# 
  9216   000350                     CRCDATAH        equ	848	;# 
  9217   000351                     CRCDATAU        equ	849	;# 
  9218   000352                     CRCDATAT        equ	850	;# 
  9219   000353                     CRCOUT          equ	851	;# 
  9220   000353                     CRCSHFT         equ	851	;# 
  9221   000353                     CRCXOR          equ	851	;# 
  9222   000353                     CRCOUTL         equ	851	;# 
  9223   000353                     CRCSHFTL        equ	851	;# 
  9224   000353                     CRCSHIFTL       equ	851	;# 
  9225   000353                     CRCXORL         equ	851	;# 
  9226   000354                     CRCOUTH         equ	852	;# 
  9227   000354                     CRCSHFTH        equ	852	;# 
  9228   000354                     CRCSHIFTH       equ	852	;# 
  9229   000354                     CRCXORH         equ	852	;# 
  9230   000355                     CRCOUTU         equ	853	;# 
  9231   000355                     CRCSHFTU        equ	853	;# 
  9232   000355                     CRCSHIFTU       equ	853	;# 
  9233   000355                     CRCXORU         equ	853	;# 
  9234   000356                     CRCOUTT         equ	854	;# 
  9235   000356                     CRCSHFTT        equ	854	;# 
  9236   000356                     CRCSHIFTT       equ	854	;# 
  9237   000356                     CRCXORT         equ	854	;# 
  9238   000357                     CRCCON0         equ	855	;# 
  9239   000358                     CRCCON1         equ	856	;# 
  9240   000359                     CRCCON2         equ	857	;# 
  9241   00035A                     SCANLADR        equ	858	;# 
  9242   00035A                     SCANLADRL       equ	858	;# 
  9243   00035B                     SCANLADRH       equ	859	;# 
  9244   00035C                     SCANLADRU       equ	860	;# 
  9245   00035D                     SCANHADR        equ	861	;# 
  9246   00035D                     SCANHADRL       equ	861	;# 
  9247   00035E                     SCANHADRH       equ	862	;# 
  9248   00035F                     SCANHADRU       equ	863	;# 
  9249   000360                     SCANCON0        equ	864	;# 
  9250   000361                     SCANTRIG        equ	865	;# 
  9251   000362                     IPR0            equ	866	;# 
  9252   000363                     IPR1            equ	867	;# 
  9253   000364                     IPR2            equ	868	;# 
  9254   000365                     IPR3            equ	869	;# 
  9255   000366                     IPR4            equ	870	;# 
  9256   000367                     IPR5            equ	871	;# 
  9257   000368                     IPR6            equ	872	;# 
  9258   000369                     IPR7            equ	873	;# 
  9259   00036A                     IPR8            equ	874	;# 
  9260   00036B                     IPR9            equ	875	;# 
  9261   00036C                     IPR10           equ	876	;# 
  9262   00036D                     IPR11           equ	877	;# 
  9263   00036E                     IPR12           equ	878	;# 
  9264   00036F                     IPR13           equ	879	;# 
  9265   000370                     IPR14           equ	880	;# 
  9266   000371                     IPR15           equ	881	;# 
  9267   000373                     STATUS_CSHAD    equ	883	;# 
  9268   000374                     WREG_CSHAD      equ	884	;# 
  9269   000375                     BSR_CSHAD       equ	885	;# 
  9270   000376                     SHADCON         equ	886	;# 
  9271   000377                     STATUS_SHAD     equ	887	;# 
  9272   000378                     WREG_SHAD       equ	888	;# 
  9273   000379                     BSR_SHAD        equ	889	;# 
  9274   00037A                     PCLATH_SHAD     equ	890	;# 
  9275   00037B                     PCLATU_SHAD     equ	891	;# 
  9276   00037C                     FSR0SH          equ	892	;# 
  9277   00037C                     FSR0L_SHAD      equ	892	;# 
  9278   00037D                     FSR0H_SHAD      equ	893	;# 
  9279   00037E                     FSR1SH          equ	894	;# 
  9280   00037E                     FSR1L_SHAD      equ	894	;# 
  9281   00037F                     FSR1H_SHAD      equ	895	;# 
  9282   000380                     FSR2SH          equ	896	;# 
  9283   000380                     FSR2L_SHAD      equ	896	;# 
  9284   000381                     FSR2H_SHAD      equ	897	;# 
  9285   000382                     PRODSH          equ	898	;# 
  9286   000382                     PRODL_SHAD      equ	898	;# 
  9287   000383                     PRODH_SHAD      equ	899	;# 
  9288   000387                     TU16ACON0       equ	903	;# 
  9289   000388                     TU16ACON1       equ	904	;# 
  9290   000389                     TU16AHLT        equ	905	;# 
  9291   00038A                     TU16APS         equ	906	;# 
  9292   00038B                     TU16ATMR        equ	907	;# 
  9293   00038B                     TU16ACR         equ	907	;# 
  9294   00038B                     TU16ATMRL       equ	907	;# 
  9295   00038B                     TU16ACRL        equ	907	;# 
  9296   00038C                     TU16ATMRH       equ	908	;# 
  9297   00038C                     TU16ACRH        equ	908	;# 
  9298   00038D                     TU16APR         equ	909	;# 
  9299   00038D                     TU16APRL        equ	909	;# 
  9300   00038E                     TU16APRH        equ	910	;# 
  9301   00038F                     TU16ACLK        equ	911	;# 
  9302   000390                     TU16AERS        equ	912	;# 
  9303   000393                     TU16BCON0       equ	915	;# 
  9304   000394                     TU16BCON1       equ	916	;# 
  9305   000395                     TU16BHLT        equ	917	;# 
  9306   000396                     TU16BPS         equ	918	;# 
  9307   000397                     TU16BTMR        equ	919	;# 
  9308   000397                     TU16BCR         equ	919	;# 
  9309   000397                     TU16BTMRL       equ	919	;# 
  9310   000397                     TU16BCRL        equ	919	;# 
  9311   000398                     TU16BTMRH       equ	920	;# 
  9312   000398                     TU16BCRH        equ	920	;# 
  9313   000399                     TU16BPR         equ	921	;# 
  9314   000399                     TU16BPRL        equ	921	;# 
  9315   00039A                     TU16BPRH        equ	922	;# 
  9316   00039B                     TU16BCLK        equ	923	;# 
  9317   00039C                     TU16BERS        equ	924	;# 
  9318   0003BB                     TUCHAIN         equ	955	;# 
  9319   0003BC                     CWG1CLK         equ	956	;# 
  9320   0003BC                     CWG1CLKCON      equ	956	;# 
  9321   0003BD                     CWG1ISM         equ	957	;# 
  9322   0003BE                     CWG1DBR         equ	958	;# 
  9323   0003BF                     CWG1DBF         equ	959	;# 
  9324   0003C0                     CWG1CON0        equ	960	;# 
  9325   0003C1                     CWG1CON1        equ	961	;# 
  9326   0003C2                     CWG1AS0         equ	962	;# 
  9327   0003C3                     CWG1AS1         equ	963	;# 
  9328   0003C4                     CWG1STR         equ	964	;# 
  9329   0003C5                     CWG2CLK         equ	965	;# 
  9330   0003C5                     CWG2CLKCON      equ	965	;# 
  9331   0003C6                     CWG2ISM         equ	966	;# 
  9332   0003C7                     CWG2DBR         equ	967	;# 
  9333   0003C8                     CWG2DBF         equ	968	;# 
  9334   0003C9                     CWG2CON0        equ	969	;# 
  9335   0003CA                     CWG2CON1        equ	970	;# 
  9336   0003CB                     CWG2AS0         equ	971	;# 
  9337   0003CC                     CWG2AS1         equ	972	;# 
  9338   0003CD                     CWG2STR         equ	973	;# 
  9339   0003CE                     CWG3CLK         equ	974	;# 
  9340   0003CE                     CWG3CLKCON      equ	974	;# 
  9341   0003CF                     CWG3ISM         equ	975	;# 
  9342   0003D0                     CWG3DBR         equ	976	;# 
  9343   0003D1                     CWG3DBF         equ	977	;# 
  9344   0003D2                     CWG3CON0        equ	978	;# 
  9345   0003D3                     CWG3CON1        equ	979	;# 
  9346   0003D4                     CWG3AS0         equ	980	;# 
  9347   0003D5                     CWG3AS1         equ	981	;# 
  9348   0003D6                     CWG3STR         equ	982	;# 
  9349   0003D7                     FVRCON          equ	983	;# 
  9350   0003D8                     ADCPCON         equ	984	;# 
  9351   0003D8                     ADCP            equ	984	;# 
  9352   0003D9                     ADLTH           equ	985	;# 
  9353   0003D9                     ADLTHL          equ	985	;# 
  9354   0003DA                     ADLTHH          equ	986	;# 
  9355   0003DB                     ADUTH           equ	987	;# 
  9356   0003DB                     ADUTHL          equ	987	;# 
  9357   0003DC                     ADUTHH          equ	988	;# 
  9358   0003DD                     ADERR           equ	989	;# 
  9359   0003DD                     ADERRL          equ	989	;# 
  9360   0003DE                     ADERRH          equ	990	;# 
  9361   0003DF                     ADSTPT          equ	991	;# 
  9362   0003DF                     ADSTPTL         equ	991	;# 
  9363   0003E0                     ADSTPTH         equ	992	;# 
  9364   0003E1                     ADFLTR          equ	993	;# 
  9365   0003E1                     ADFLTRL         equ	993	;# 
  9366   0003E2                     ADFLTRH         equ	994	;# 
  9367   0003E3                     ADACC           equ	995	;# 
  9368   0003E3                     ADACCL          equ	995	;# 
  9369   0003E4                     ADACCH          equ	996	;# 
  9370   0003E5                     ADACCU          equ	997	;# 
  9371   0003E6                     ADCNT           equ	998	;# 
  9372   0003E7                     ADRPT           equ	999	;# 
  9373   0003E8                     ADPREV          equ	1000	;# 
  9374   0003E8                     ADPREVL         equ	1000	;# 
  9375   0003E9                     ADPREVH         equ	1001	;# 
  9376   0003EA                     ADRES           equ	1002	;# 
  9377   0003EA                     ADRESL          equ	1002	;# 
  9378   0003EB                     ADRESH          equ	1003	;# 
  9379   0003EC                     ADPCH           equ	1004	;# 
  9380   0003EE                     ADACQ           equ	1006	;# 
  9381   0003EE                     ADACQL          equ	1006	;# 
  9382   0003EF                     ADACQH          equ	1007	;# 
  9383   0003F0                     ADCAP           equ	1008	;# 
  9384   0003F1                     ADPRE           equ	1009	;# 
  9385   0003F1                     ADPREL          equ	1009	;# 
  9386   0003F2                     ADPREH          equ	1010	;# 
  9387   0003F3                     ADCON0          equ	1011	;# 
  9388   0003F4                     ADCON1          equ	1012	;# 
  9389   0003F5                     ADCON2          equ	1013	;# 
  9390   0003F6                     ADCON3          equ	1014	;# 
  9391   0003F7                     ADSTAT          equ	1015	;# 
  9392   0003F8                     ADREF           equ	1016	;# 
  9393   0003F9                     ADACT           equ	1017	;# 
  9394   0003FA                     ADCLK           equ	1018	;# 
  9395   0003FB                     ADCTX           equ	1019	;# 
  9396   0003FC                     ADCSEL1         equ	1020	;# 
  9397   0003FD                     ADCSEL2         equ	1021	;# 
  9398   0003FE                     ADCSEL3         equ	1022	;# 
  9399   0003FF                     ADCSEL4         equ	1023	;# 
  9400   000400                     ANSELA          equ	1024	;# 
  9401   000401                     WPUA            equ	1025	;# 
  9402   000402                     ODCONA          equ	1026	;# 
  9403   000403                     SLRCONA         equ	1027	;# 
  9404   000404                     INLVLA          equ	1028	;# 
  9405   000405                     IOCAP           equ	1029	;# 
  9406   000406                     IOCAN           equ	1030	;# 
  9407   000407                     IOCAF           equ	1031	;# 
  9408   000408                     ANSELB          equ	1032	;# 
  9409   000409                     WPUB            equ	1033	;# 
  9410   00040A                     ODCONB          equ	1034	;# 
  9411   00040B                     SLRCONB         equ	1035	;# 
  9412   00040C                     INLVLB          equ	1036	;# 
  9413   00040D                     IOCBP           equ	1037	;# 
  9414   00040E                     IOCBN           equ	1038	;# 
  9415   00040F                     IOCBF           equ	1039	;# 
  9416   000410                     ANSELC          equ	1040	;# 
  9417   000411                     WPUC            equ	1041	;# 
  9418   000412                     ODCONC          equ	1042	;# 
  9419   000413                     SLRCONC         equ	1043	;# 
  9420   000414                     INLVLC          equ	1044	;# 
  9421   000415                     IOCCP           equ	1045	;# 
  9422   000416                     IOCCN           equ	1046	;# 
  9423   000417                     IOCCF           equ	1047	;# 
  9424   000421                     WPUE            equ	1057	;# 
  9425   000424                     INLVLE          equ	1060	;# 
  9426   000425                     IOCEP           equ	1061	;# 
  9427   000426                     IOCEN           equ	1062	;# 
  9428   000427                     IOCEF           equ	1063	;# 
  9429   000440                     NCO1ACC         equ	1088	;# 
  9430   000440                     NCO1ACCL        equ	1088	;# 
  9431   000441                     NCO1ACCH        equ	1089	;# 
  9432   000442                     NCO1ACCU        equ	1090	;# 
  9433   000443                     NCO1INC         equ	1091	;# 
  9434   000443                     NCO1INCL        equ	1091	;# 
  9435   000444                     NCO1INCH        equ	1092	;# 
  9436   000445                     NCO1INCU        equ	1093	;# 
  9437   000446                     NCO1CON         equ	1094	;# 
  9438   000447                     NCO1CLK         equ	1095	;# 
  9439   000448                     NCO2ACC         equ	1096	;# 
  9440   000448                     NCO2ACCL        equ	1096	;# 
  9441   000449                     NCO2ACCH        equ	1097	;# 
  9442   00044A                     NCO2ACCU        equ	1098	;# 
  9443   00044B                     NCO2INC         equ	1099	;# 
  9444   00044B                     NCO2INCL        equ	1099	;# 
  9445   00044C                     NCO2INCH        equ	1100	;# 
  9446   00044D                     NCO2INCU        equ	1101	;# 
  9447   00044E                     NCO2CON         equ	1102	;# 
  9448   00044F                     NCO2CLK         equ	1103	;# 
  9449   000450                     NCO3ACC         equ	1104	;# 
  9450   000450                     NCO3ACCL        equ	1104	;# 
  9451   000451                     NCO3ACCH        equ	1105	;# 
  9452   000452                     NCO3ACCU        equ	1106	;# 
  9453   000453                     NCO3INC         equ	1107	;# 
  9454   000453                     NCO3INCL        equ	1107	;# 
  9455   000454                     NCO3INCH        equ	1108	;# 
  9456   000455                     NCO3INCU        equ	1109	;# 
  9457   000456                     NCO3CON         equ	1110	;# 
  9458   000457                     NCO3CLK         equ	1111	;# 
  9459   000458                     FSCMCON         equ	1112	;# 
  9460   000459                     IVTLOCK         equ	1113	;# 
  9461   00045A                     IVTAD           equ	1114	;# 
  9462   00045A                     IVTADL          equ	1114	;# 
  9463   00045B                     IVTADH          equ	1115	;# 
  9464   00045C                     IVTADU          equ	1116	;# 
  9465   00045D                     IVTBASE         equ	1117	;# 
  9466   00045D                     IVTBASEL        equ	1117	;# 
  9467   00045E                     IVTBASEH        equ	1118	;# 
  9468   00045F                     IVTBASEU        equ	1119	;# 
  9469   000460                     PWM1ERS         equ	1120	;# 
  9470   000461                     PWM1CLK         equ	1121	;# 
  9471   000462                     PWM1LDS         equ	1122	;# 
  9472   000463                     PWM1PR          equ	1123	;# 
  9473   000463                     PWM1PRL         equ	1123	;# 
  9474   000464                     PWM1PRH         equ	1124	;# 
  9475   000465                     PWM1CPRE        equ	1125	;# 
  9476   000466                     PWM1PIPOS       equ	1126	;# 
  9477   000467                     PWM1GIR         equ	1127	;# 
  9478   000468                     PWM1GIE         equ	1128	;# 
  9479   000469                     PWM1CON         equ	1129	;# 
  9480   00046A                     PWM1S1CFG       equ	1130	;# 
  9481   00046B                     PWM1S1P1        equ	1131	;# 
  9482   00046B                     PWM1S1P1L       equ	1131	;# 
  9483   00046C                     PWM1S1P1H       equ	1132	;# 
  9484   00046D                     PWM1S1P2        equ	1133	;# 
  9485   00046D                     PWM1S1P2L       equ	1133	;# 
  9486   00046E                     PWM1S1P2H       equ	1134	;# 
  9487   00046F                     PWM2ERS         equ	1135	;# 
  9488   000470                     PWM2CLK         equ	1136	;# 
  9489   000471                     PWM2LDS         equ	1137	;# 
  9490   000472                     PWM2PR          equ	1138	;# 
  9491   000472                     PWM2PRL         equ	1138	;# 
  9492   000473                     PWM2PRH         equ	1139	;# 
  9493   000474                     PWM2CPRE        equ	1140	;# 
  9494   000475                     PWM2PIPOS       equ	1141	;# 
  9495   000476                     PWM2GIR         equ	1142	;# 
  9496   000477                     PWM2GIE         equ	1143	;# 
  9497   000478                     PWM2CON         equ	1144	;# 
  9498   000479                     PWM2S1CFG       equ	1145	;# 
  9499   00047A                     PWM2S1P1        equ	1146	;# 
  9500   00047A                     PWM2S1P1L       equ	1146	;# 
  9501   00047B                     PWM2S1P1H       equ	1147	;# 
  9502   00047C                     PWM2S1P2        equ	1148	;# 
  9503   00047C                     PWM2S1P2L       equ	1148	;# 
  9504   00047D                     PWM2S1P2H       equ	1149	;# 
  9505   00047E                     PWM3ERS         equ	1150	;# 
  9506   00047F                     PWM3CLK         equ	1151	;# 
  9507   000480                     PWM3LDS         equ	1152	;# 
  9508   000481                     PWM3PR          equ	1153	;# 
  9509   000481                     PWM3PRL         equ	1153	;# 
  9510   000482                     PWM3PRH         equ	1154	;# 
  9511   000483                     PWM3CPRE        equ	1155	;# 
  9512   000484                     PWM3PIPOS       equ	1156	;# 
  9513   000485                     PWM3GIR         equ	1157	;# 
  9514   000486                     PWM3GIE         equ	1158	;# 
  9515   000487                     PWM3CON         equ	1159	;# 
  9516   000488                     PWM3S1CFG       equ	1160	;# 
  9517   000489                     PWM3S1P1        equ	1161	;# 
  9518   000489                     PWM3S1P1L       equ	1161	;# 
  9519   00048A                     PWM3S1P1H       equ	1162	;# 
  9520   00048B                     PWM3S1P2        equ	1163	;# 
  9521   00048B                     PWM3S1P2L       equ	1163	;# 
  9522   00048C                     PWM3S1P2H       equ	1164	;# 
  9523   00048D                     PWM4ERS         equ	1165	;# 
  9524   00048E                     PWM4CLK         equ	1166	;# 
  9525   00048F                     PWM4LDS         equ	1167	;# 
  9526   000490                     PWM4PR          equ	1168	;# 
  9527   000490                     PWM4PRL         equ	1168	;# 
  9528   000491                     PWM4PRH         equ	1169	;# 
  9529   000492                     PWM4CPRE        equ	1170	;# 
  9530   000493                     PWM4PIPOS       equ	1171	;# 
  9531   000494                     PWM4GIR         equ	1172	;# 
  9532   000495                     PWM4GIE         equ	1173	;# 
  9533   000496                     PWM4CON         equ	1174	;# 
  9534   000497                     PWM4S1CFG       equ	1175	;# 
  9535   000498                     PWM4S1P1        equ	1176	;# 
  9536   000498                     PWM4S1P1L       equ	1176	;# 
  9537   000499                     PWM4S1P1H       equ	1177	;# 
  9538   00049A                     PWM4S1P2        equ	1178	;# 
  9539   00049A                     PWM4S1P2L       equ	1178	;# 
  9540   00049B                     PWM4S1P2H       equ	1179	;# 
  9541   00049C                     PWMLOAD         equ	1180	;# 
  9542   00049D                     PWMEN           equ	1181	;# 
  9543   00049E                     PIE0            equ	1182	;# 
  9544   00049F                     PIE1            equ	1183	;# 
  9545   0004A0                     PIE2            equ	1184	;# 
  9546   0004A1                     PIE3            equ	1185	;# 
  9547   0004A2                     PIE4            equ	1186	;# 
  9548   0004A3                     PIE5            equ	1187	;# 
  9549   0004A4                     PIE6            equ	1188	;# 
  9550   0004A5                     PIE7            equ	1189	;# 
  9551   0004A6                     PIE8            equ	1190	;# 
  9552   0004A7                     PIE9            equ	1191	;# 
  9553   0004A8                     PIE10           equ	1192	;# 
  9554   0004A9                     PIE11           equ	1193	;# 
  9555   0004AA                     PIE12           equ	1194	;# 
  9556   0004AB                     PIE13           equ	1195	;# 
  9557   0004AC                     PIE14           equ	1196	;# 
  9558   0004AD                     PIE15           equ	1197	;# 
  9559   0004AE                     PIR0            equ	1198	;# 
  9560   0004AF                     PIR1            equ	1199	;# 
  9561   0004B0                     PIR2            equ	1200	;# 
  9562   0004B1                     PIR3            equ	1201	;# 
  9563   0004B2                     PIR4            equ	1202	;# 
  9564   0004B3                     PIR5            equ	1203	;# 
  9565   0004B4                     PIR6            equ	1204	;# 
  9566   0004B5                     PIR7            equ	1205	;# 
  9567   0004B6                     PIR8            equ	1206	;# 
  9568   0004B7                     PIR9            equ	1207	;# 
  9569   0004B8                     PIR10           equ	1208	;# 
  9570   0004B9                     PIR11           equ	1209	;# 
  9571   0004BA                     PIR12           equ	1210	;# 
  9572   0004BB                     PIR13           equ	1211	;# 
  9573   0004BC                     PIR14           equ	1212	;# 
  9574   0004BD                     PIR15           equ	1213	;# 
  9575   0004BE                     LATA            equ	1214	;# 
  9576   0004BF                     LATB            equ	1215	;# 
  9577   0004C0                     LATC            equ	1216	;# 
  9578   0004C6                     TRISA           equ	1222	;# 
  9579   0004C7                     TRISB           equ	1223	;# 
  9580   0004C8                     TRISC           equ	1224	;# 
  9581   0004CA                     TRISE           equ	1226	;# 
  9582   0004CE                     PORTA           equ	1230	;# 
  9583   0004CF                     PORTB           equ	1231	;# 
  9584   0004D0                     PORTC           equ	1232	;# 
  9585   0004D2                     PORTE           equ	1234	;# 
  9586   0004D6                     INTCON0         equ	1238	;# 
  9587   0004D7                     INTCON1         equ	1239	;# 
  9588   0004D8                     STATUS          equ	1240	;# 
  9589   0004D9                     FSR2            equ	1241	;# 
  9590   0004D9                     FSR2L           equ	1241	;# 
  9591   0004DA                     FSR2H           equ	1242	;# 
  9592   0004DB                     PLUSW2          equ	1243	;# 
  9593   0004DC                     PREINC2         equ	1244	;# 
  9594   0004DD                     POSTDEC2        equ	1245	;# 
  9595   0004DE                     POSTINC2        equ	1246	;# 
  9596   0004DF                     INDF2           equ	1247	;# 
  9597   0004E0                     BSR             equ	1248	;# 
  9598   0004E1                     FSR1            equ	1249	;# 
  9599   0004E1                     FSR1L           equ	1249	;# 
  9600   0004E2                     FSR1H           equ	1250	;# 
  9601   0004E3                     PLUSW1          equ	1251	;# 
  9602   0004E4                     PREINC1         equ	1252	;# 
  9603   0004E5                     POSTDEC1        equ	1253	;# 
  9604   0004E6                     POSTINC1        equ	1254	;# 
  9605   0004E7                     INDF1           equ	1255	;# 
  9606   0004E8                     WREG            equ	1256	;# 
  9607   0004E9                     FSR0            equ	1257	;# 
  9608   0004E9                     FSR0L           equ	1257	;# 
  9609   0004EA                     FSR0H           equ	1258	;# 
  9610   0004EB                     PLUSW0          equ	1259	;# 
  9611   0004EC                     PREINC0         equ	1260	;# 
  9612   0004ED                     POSTDEC0        equ	1261	;# 
  9613   0004EE                     POSTINC0        equ	1262	;# 
  9614   0004EF                     INDF0           equ	1263	;# 
  9615   0004F0                     PCON0           equ	1264	;# 
  9616   0004F1                     PCON1           equ	1265	;# 
  9617   0004F2                     CPUDOZE         equ	1266	;# 
  9618   0004F3                     PROD            equ	1267	;# 
  9619   0004F3                     PRODL           equ	1267	;# 
  9620   0004F4                     PRODH           equ	1268	;# 
  9621   0004F5                     TABLAT          equ	1269	;# 
  9622   0004F6                     TBLPTR          equ	1270	;# 
  9623   0004F6                     TBLPTRL         equ	1270	;# 
  9624   0004F7                     TBLPTRH         equ	1271	;# 
  9625   0004F8                     TBLPTRU         equ	1272	;# 
  9626   0004F9                     PCLAT           equ	1273	;# 
  9627   0004F9                     PCL             equ	1273	;# 
  9628   0004FA                     PCLATH          equ	1274	;# 
  9629   0004FB                     PCLATU          equ	1275	;# 
  9630   0004FC                     STKPTR          equ	1276	;# 
  9631   0004FD                     TOS             equ	1277	;# 
  9632   0004FD                     TOSL            equ	1277	;# 
  9633   0004FE                     TOSH            equ	1278	;# 
  9634   0004FF                     TOSU            equ	1279	;# 
  9635   000038                     BOOTREG         equ	56	;# 
  9636   000039                     CLKRCON         equ	57	;# 
  9637   00003A                     CLKRCLK         equ	58	;# 
  9638   000040                     NVMCON0         equ	64	;# 
  9639   000041                     NVMCON1         equ	65	;# 
  9640   000042                     NVMLOCK         equ	66	;# 
  9641   000043                     NVMADR          equ	67	;# 
  9642   000043                     NVMADRL         equ	67	;# 
  9643   000044                     NVMADRH         equ	68	;# 
  9644   000045                     NVMADRU         equ	69	;# 
  9645   000046                     NVMDAT          equ	70	;# 
  9646   000046                     NVMDATL         equ	70	;# 
  9647   000047                     NVMDATH         equ	71	;# 
  9648   000048                     VREGCON         equ	72	;# 
  9649   000049                     BORCON          equ	73	;# 
  9650   00004A                     HLVDCON0        equ	74	;# 
  9651   00004B                     HLVDCON1        equ	75	;# 
  9652   00004C                     ZCDCON          equ	76	;# 
  9653   000060                     PMD0            equ	96	;# 
  9654   000061                     PMD1            equ	97	;# 
  9655   000062                     PMD2            equ	98	;# 
  9656   000063                     PMD3            equ	99	;# 
  9657   000064                     PMD4            equ	100	;# 
  9658   000065                     PMD5            equ	101	;# 
  9659   000066                     PMD6            equ	102	;# 
  9660   000067                     PMD7            equ	103	;# 
  9661   000068                     PMD8            equ	104	;# 
  9662   00006A                     MD1CON0         equ	106	;# 
  9663   00006B                     MD1CON1         equ	107	;# 
  9664   00006C                     MD1SRC          equ	108	;# 
  9665   00006D                     MD1CARL         equ	109	;# 
  9666   00006E                     MD1CARH         equ	110	;# 
  9667   00006F                     CMOUT           equ	111	;# 
  9668   000070                     CM1CON0         equ	112	;# 
  9669   000071                     CM1CON1         equ	113	;# 
  9670   000072                     CM1NCH          equ	114	;# 
  9671   000073                     CM1PCH          equ	115	;# 
  9672   000074                     CM2CON0         equ	116	;# 
  9673   000075                     CM2CON1         equ	117	;# 
  9674   000076                     CM2NCH          equ	118	;# 
  9675   000077                     CM2PCH          equ	119	;# 
  9676   000078                     WDTCON0         equ	120	;# 
  9677   000079                     WDTCON1         equ	121	;# 
  9678   00007A                     WDTPSL          equ	122	;# 
  9679   00007B                     WDTPSH          equ	123	;# 
  9680   00007C                     WDTTMR          equ	124	;# 
  9681   00007D                     DAC1DAT         equ	125	;# 
  9682   00007D                     DAC1DATL        equ	125	;# 
  9683   00007F                     DAC1CON         equ	127	;# 
  9684   000080                     SPI1RXB         equ	128	;# 
  9685   000081                     SPI1TXB         equ	129	;# 
  9686   000082                     SPI1TCNT        equ	130	;# 
  9687   000082                     SPI1TCNTL       equ	130	;# 
  9688   000083                     SPI1TCNTH       equ	131	;# 
  9689   000084                     SPI1CON0        equ	132	;# 
  9690   000085                     SPI1CON1        equ	133	;# 
  9691   000086                     SPI1CON2        equ	134	;# 
  9692   000087                     SPI1STATUS      equ	135	;# 
  9693   000088                     SPI1TWIDTH      equ	136	;# 
  9694   000089                     SPI1BAUD        equ	137	;# 
  9695   00008A                     SPI1INTF        equ	138	;# 
  9696   00008B                     SPI1INTE        equ	139	;# 
  9697   00008C                     SPI1CLK         equ	140	;# 
  9698   00008D                     SPI2RXB         equ	141	;# 
  9699   00008E                     SPI2TXB         equ	142	;# 
  9700   00008F                     SPI2TCNT        equ	143	;# 
  9701   00008F                     SPI2TCNTL       equ	143	;# 
  9702   000090                     SPI2TCNTH       equ	144	;# 
  9703   000091                     SPI2CON0        equ	145	;# 
  9704   000092                     SPI2CON1        equ	146	;# 
  9705   000093                     SPI2CON2        equ	147	;# 
  9706   000094                     SPI2STATUS      equ	148	;# 
  9707   000095                     SPI2TWIDTH      equ	149	;# 
  9708   000096                     SPI2BAUD        equ	150	;# 
  9709   000097                     SPI2INTF        equ	151	;# 
  9710   000098                     SPI2INTE        equ	152	;# 
  9711   000099                     SPI2CLK         equ	153	;# 
  9712   0000AC                     ACTCON          equ	172	;# 
  9713   0000AD                     OSCCON1         equ	173	;# 
  9714   0000AE                     OSCCON2         equ	174	;# 
  9715   0000AF                     OSCCON3         equ	175	;# 
  9716   0000B0                     OSCTUNE         equ	176	;# 
  9717   0000B1                     OSCFRQ          equ	177	;# 
  9718   0000B1                     OSCFREQ         equ	177	;# 
  9719   0000B2                     OSCSTAT         equ	178	;# 
  9720   0000B2                     OSCSTAT1        equ	178	;# 
  9721   0000B3                     OSCEN           equ	179	;# 
  9722   0000B4                     PRLOCK          equ	180	;# 
  9723   0000B5                     SCANPR          equ	181	;# 
  9724   0000B6                     DMA1PR          equ	182	;# 
  9725   0000B7                     DMA2PR          equ	183	;# 
  9726   0000B8                     DMA3PR          equ	184	;# 
  9727   0000B9                     DMA4PR          equ	185	;# 
  9728   0000BA                     DMA5PR          equ	186	;# 
  9729   0000BB                     DMA6PR          equ	187	;# 
  9730   0000BC                     DMA7PR          equ	188	;# 
  9731   0000BD                     DMA8PR          equ	189	;# 
  9732   0000BE                     MAINPR          equ	190	;# 
  9733   0000BF                     ISRPR           equ	191	;# 
  9734   0000D4                     CLCDATA         equ	212	;# 
  9735   0000D5                     CLCSELECT       equ	213	;# 
  9736   0000D6                     CLCnCON         equ	214	;# 
  9737   0000D7                     CLCnPOL         equ	215	;# 
  9738   0000D8                     CLCnSEL0        equ	216	;# 
  9739   0000D9                     CLCnSEL1        equ	217	;# 
  9740   0000DA                     CLCnSEL2        equ	218	;# 
  9741   0000DB                     CLCnSEL3        equ	219	;# 
  9742   0000DC                     CLCnGLS0        equ	220	;# 
  9743   0000DD                     CLCnGLS1        equ	221	;# 
  9744   0000DE                     CLCnGLS2        equ	222	;# 
  9745   0000DF                     CLCnGLS3        equ	223	;# 
  9746   0000E8                     DMASELECT       equ	232	;# 
  9747   0000E9                     DMAnBUF         equ	233	;# 
  9748   0000EA                     DMAnDCNT        equ	234	;# 
  9749   0000EA                     DMAnDCNTL       equ	234	;# 
  9750   0000EB                     DMAnDCNTH       equ	235	;# 
  9751   0000EC                     DMAnDPTR        equ	236	;# 
  9752   0000EC                     DMAnDPTRL       equ	236	;# 
  9753   0000ED                     DMAnDPTRH       equ	237	;# 
  9754   0000EE                     DMAnDSZ         equ	238	;# 
  9755   0000EE                     DMAnDSZL        equ	238	;# 
  9756   0000EF                     DMAnDSZH        equ	239	;# 
  9757   0000F0                     DMAnDSA         equ	240	;# 
  9758   0000F0                     DMAnDSAL        equ	240	;# 
  9759   0000F1                     DMAnDSAH        equ	241	;# 
  9760   0000F2                     DMAnSCNT        equ	242	;# 
  9761   0000F2                     DMAnSCNTL       equ	242	;# 
  9762   0000F3                     DMAnSCNTH       equ	243	;# 
  9763   0000F4                     DMAnSPTR        equ	244	;# 
  9764   0000F4                     DMAnSPTRL       equ	244	;# 
  9765   0000F5                     DMAnSPTRH       equ	245	;# 
  9766   0000F6                     DMAnSPTRU       equ	246	;# 
  9767   0000F7                     DMAnSSZ         equ	247	;# 
  9768   0000F7                     DMAnSSZL        equ	247	;# 
  9769   0000F8                     DMAnSSZH        equ	248	;# 
  9770   0000F9                     DMAnSSA         equ	249	;# 
  9771   0000F9                     DMAnSSAL        equ	249	;# 
  9772   0000FA                     DMAnSSAH        equ	250	;# 
  9773   0000FB                     DMAnSSAU        equ	251	;# 
  9774   0000FC                     DMAnCON0        equ	252	;# 
  9775   0000FD                     DMAnCON1        equ	253	;# 
  9776   0000FE                     DMAnAIRQ        equ	254	;# 
  9777   0000FF                     DMAnSIRQ        equ	255	;# 
  9778   000100                     C1CONL          equ	256	;# 
  9779   000101                     C1CONH          equ	257	;# 
  9780   000102                     C1CONU          equ	258	;# 
  9781   000103                     C1CONT          equ	259	;# 
  9782   000104                     C1NBTCFGL       equ	260	;# 
  9783   000105                     C1NBTCFGH       equ	261	;# 
  9784   000106                     C1NBTCFGU       equ	262	;# 
  9785   000107                     C1NBTCFGT       equ	263	;# 
  9786   000108                     C1DBTCFGL       equ	264	;# 
  9787   000109                     C1DBTCFGH       equ	265	;# 
  9788   00010A                     C1DBTCFGU       equ	266	;# 
  9789   00010B                     C1DBTCFGT       equ	267	;# 
  9790   00010C                     C1TDCL          equ	268	;# 
  9791   00010D                     C1TDCH          equ	269	;# 
  9792   00010E                     C1TDCU          equ	270	;# 
  9793   000110                     C1TBC           equ	272	;# 
  9794   000110                     C1TBCL          equ	272	;# 
  9795   000111                     C1TBCH          equ	273	;# 
  9796   000112                     C1TBCU          equ	274	;# 
  9797   000113                     C1TBCT          equ	275	;# 
  9798   000114                     C1TSCONL        equ	276	;# 
  9799   000115                     C1TSCONH        equ	277	;# 
  9800   000116                     C1TSCONU        equ	278	;# 
  9801   000117                     C1TSCONT        equ	279	;# 
  9802   000118                     C1VECL          equ	280	;# 
  9803   000119                     C1VECH          equ	281	;# 
  9804   00011A                     C1VECU          equ	282	;# 
  9805   00011B                     C1VECT          equ	283	;# 
  9806   00011C                     C1INTL          equ	284	;# 
  9807   00011D                     C1INTH          equ	285	;# 
  9808   00011E                     C1INTU          equ	286	;# 
  9809   00011F                     C1INTT          equ	287	;# 
  9810   000120                     C1RXIF          equ	288	;# 
  9811   000120                     C1RXIFL         equ	288	;# 
  9812   000121                     C1RXIFH         equ	289	;# 
  9813   000122                     C1RXIFU         equ	290	;# 
  9814   000123                     C1RXIFT         equ	291	;# 
  9815   000124                     C1TXIF          equ	292	;# 
  9816   000124                     C1TXIFL         equ	292	;# 
  9817   000125                     C1TXIFH         equ	293	;# 
  9818   000126                     C1TXIFU         equ	294	;# 
  9819   000127                     C1TXIFT         equ	295	;# 
  9820   000128                     C1RXOVIF        equ	296	;# 
  9821   000128                     C1RXOVIFL       equ	296	;# 
  9822   000129                     C1RXOVIFH       equ	297	;# 
  9823   00012A                     C1RXOVIFU       equ	298	;# 
  9824   00012B                     C1RXOVIFT       equ	299	;# 
  9825   00012C                     C1TXATIF        equ	300	;# 
  9826   00012C                     C1TXATIFL       equ	300	;# 
  9827   00012D                     C1TXATIFH       equ	301	;# 
  9828   00012E                     C1TXATIFU       equ	302	;# 
  9829   00012F                     C1TXATIFT       equ	303	;# 
  9830   000130                     C1TXREQ         equ	304	;# 
  9831   000130                     C1TXREQL        equ	304	;# 
  9832   000131                     C1TXREQH        equ	305	;# 
  9833   000132                     C1TXREQU        equ	306	;# 
  9834   000133                     C1TXREQT        equ	307	;# 
  9835   000134                     C1TRECL         equ	308	;# 
  9836   000135                     C1TRECH         equ	309	;# 
  9837   000136                     C1TRECU         equ	310	;# 
  9838   000137                     C1TRECT         equ	311	;# 
  9839   000138                     C1BDIAG0L       equ	312	;# 
  9840   000139                     C1BDIAG0H       equ	313	;# 
  9841   00013C                     C1BDIAG1L       equ	316	;# 
  9842   00013D                     C1BDIAG1H       equ	317	;# 
  9843   00013E                     C1BDIAG1U       equ	318	;# 
  9844   00013F                     C1BDIAG1T       equ	319	;# 
  9845   000140                     C1TEFCONL       equ	320	;# 
  9846   000141                     C1TEFCONH       equ	321	;# 
  9847   000142                     C1TEFCONU       equ	322	;# 
  9848   000143                     C1TEFCONT       equ	323	;# 
  9849   000144                     C1TEFSTAL       equ	324	;# 
  9850   000145                     C1TEFSTAH       equ	325	;# 
  9851   000146                     C1TEFSTAU       equ	326	;# 
  9852   000147                     C1TEFSTAT       equ	327	;# 
  9853   000148                     C1TEFUA         equ	328	;# 
  9854   000148                     C1TEFUAL        equ	328	;# 
  9855   000149                     C1TEFUAH        equ	329	;# 
  9856   00014A                     C1TEFUAU        equ	330	;# 
  9857   00014B                     C1TEFUAT        equ	331	;# 
  9858   00014C                     C1FIFOBA        equ	332	;# 
  9859   00014C                     C1FIFOBAL       equ	332	;# 
  9860   00014D                     C1FIFOBAH       equ	333	;# 
  9861   00014E                     C1FIFOBAU       equ	334	;# 
  9862   00014F                     C1FIFOBAT       equ	335	;# 
  9863   000150                     C1TXQCONL       equ	336	;# 
  9864   000151                     C1TXQCONH       equ	337	;# 
  9865   000152                     C1TXQCONU       equ	338	;# 
  9866   000153                     C1TXQCONT       equ	339	;# 
  9867   000154                     C1TXQSTAL       equ	340	;# 
  9868   000155                     C1TXQSTAH       equ	341	;# 
  9869   000156                     C1TXQSTAU       equ	342	;# 
  9870   000157                     C1TXQSTAT       equ	343	;# 
  9871   000158                     C1TXQUA         equ	344	;# 
  9872   000158                     C1TXQUAL        equ	344	;# 
  9873   000159                     C1TXQUAH        equ	345	;# 
  9874   00015A                     C1TXQUAU        equ	346	;# 
  9875   00015B                     C1TXQUAT        equ	347	;# 
  9876   00015C                     C1FIFOCON1      equ	348	;# 
  9877   00015C                     C1FIFOCON1L     equ	348	;# 
  9878   00015D                     C1FIFOCON1H     equ	349	;# 
  9879   00015E                     C1FIFOCON1U     equ	350	;# 
  9880   00015F                     C1FIFOCON1T     equ	351	;# 
  9881   000160                     C1FIFOSTA1      equ	352	;# 
  9882   000160                     C1FIFOSTA1L     equ	352	;# 
  9883   000161                     C1FIFOSTA1H     equ	353	;# 
  9884   000162                     C1FIFOSTA1U     equ	354	;# 
  9885   000163                     C1FIFOSTA1T     equ	355	;# 
  9886   000164                     C1FIFOUA1       equ	356	;# 
  9887   000164                     C1FIFOUA1L      equ	356	;# 
  9888   000165                     C1FIFOUA1H      equ	357	;# 
  9889   000166                     C1FIFOUA1U      equ	358	;# 
  9890   000167                     C1FIFOUA1T      equ	359	;# 
  9891   000168                     C1FIFOCON2      equ	360	;# 
  9892   000168                     C1FIFOCON2L     equ	360	;# 
  9893   000169                     C1FIFOCON2H     equ	361	;# 
  9894   00016A                     C1FIFOCON2U     equ	362	;# 
  9895   00016B                     C1FIFOCON2T     equ	363	;# 
  9896   00016C                     C1FIFOSTA2      equ	364	;# 
  9897   00016C                     C1FIFOSTA2L     equ	364	;# 
  9898   00016D                     C1FIFOSTA2H     equ	365	;# 
  9899   00016E                     C1FIFOSTA2U     equ	366	;# 
  9900   00016F                     C1FIFOSTA2T     equ	367	;# 
  9901   000170                     C1FIFOUA2       equ	368	;# 
  9902   000170                     C1FIFOUA2L      equ	368	;# 
  9903   000171                     C1FIFOUA2H      equ	369	;# 
  9904   000172                     C1FIFOUA2U      equ	370	;# 
  9905   000173                     C1FIFOUA2T      equ	371	;# 
  9906   000174                     C1FIFOCON3      equ	372	;# 
  9907   000174                     C1FIFOCON3L     equ	372	;# 
  9908   000175                     C1FIFOCON3H     equ	373	;# 
  9909   000176                     C1FIFOCON3U     equ	374	;# 
  9910   000177                     C1FIFOCON3T     equ	375	;# 
  9911   000178                     C1FIFOSTA3      equ	376	;# 
  9912   000178                     C1FIFOSTA3L     equ	376	;# 
  9913   000179                     C1FIFOSTA3H     equ	377	;# 
  9914   00017A                     C1FIFOSTA3U     equ	378	;# 
  9915   00017B                     C1FIFOSTA3T     equ	379	;# 
  9916   00017C                     C1FIFOUA3       equ	380	;# 
  9917   00017C                     C1FIFOUA3L      equ	380	;# 
  9918   00017D                     C1FIFOUA3H      equ	381	;# 
  9919   00017E                     C1FIFOUA3U      equ	382	;# 
  9920   00017F                     C1FIFOUA3T      equ	383	;# 
  9921   000180                     C1FLTCON0L      equ	384	;# 
  9922   000181                     C1FLTCON0H      equ	385	;# 
  9923   000182                     C1FLTCON0U      equ	386	;# 
  9924   000183                     C1FLTCON0T      equ	387	;# 
  9925   000184                     C1FLTCON1L      equ	388	;# 
  9926   000185                     C1FLTCON1H      equ	389	;# 
  9927   000186                     C1FLTCON1U      equ	390	;# 
  9928   000187                     C1FLTCON1T      equ	391	;# 
  9929   000188                     C1FLTCON2L      equ	392	;# 
  9930   000189                     C1FLTCON2H      equ	393	;# 
  9931   00018A                     C1FLTCON2U      equ	394	;# 
  9932   00018B                     C1FLTCON2T      equ	395	;# 
  9933   00018C                     C1FLTOBJ0       equ	396	;# 
  9934   00018C                     C1FLTOBJ0L      equ	396	;# 
  9935   00018D                     C1FLTOBJ0H      equ	397	;# 
  9936   00018E                     C1FLTOBJ0U      equ	398	;# 
  9937   00018F                     C1FLTOBJ0T      equ	399	;# 
  9938   000190                     C1MASK0         equ	400	;# 
  9939   000190                     C1MASK0L        equ	400	;# 
  9940   000191                     C1MASK0H        equ	401	;# 
  9941   000192                     C1MASK0U        equ	402	;# 
  9942   000193                     C1MASK0T        equ	403	;# 
  9943   000194                     C1FLTOBJ1       equ	404	;# 
  9944   000194                     C1FLTOBJ1L      equ	404	;# 
  9945   000195                     C1FLTOBJ1H      equ	405	;# 
  9946   000196                     C1FLTOBJ1U      equ	406	;# 
  9947   000197                     C1FLTOBJ1T      equ	407	;# 
  9948   000198                     C1MASK1         equ	408	;# 
  9949   000198                     C1MASK1L        equ	408	;# 
  9950   000199                     C1MASK1H        equ	409	;# 
  9951   00019A                     C1MASK1U        equ	410	;# 
  9952   00019B                     C1MASK1T        equ	411	;# 
  9953   00019C                     C1FLTOBJ2       equ	412	;# 
  9954   00019C                     C1FLTOBJ2L      equ	412	;# 
  9955   00019D                     C1FLTOBJ2H      equ	413	;# 
  9956   00019E                     C1FLTOBJ2U      equ	414	;# 
  9957   00019F                     C1FLTOBJ2T      equ	415	;# 
  9958   0001A0                     C1MASK2         equ	416	;# 
  9959   0001A0                     C1MASK2L        equ	416	;# 
  9960   0001A1                     C1MASK2H        equ	417	;# 
  9961   0001A2                     C1MASK2U        equ	418	;# 
  9962   0001A3                     C1MASK2T        equ	419	;# 
  9963   0001A4                     C1FLTOBJ3       equ	420	;# 
  9964   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9965   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9966   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9967   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9968   0001A8                     C1MASK3         equ	424	;# 
  9969   0001A8                     C1MASK3L        equ	424	;# 
  9970   0001A9                     C1MASK3H        equ	425	;# 
  9971   0001AA                     C1MASK3U        equ	426	;# 
  9972   0001AB                     C1MASK3T        equ	427	;# 
  9973   0001AC                     C1FLTOBJ4       equ	428	;# 
  9974   0001AC                     C1FLTOBJ4L      equ	428	;# 
  9975   0001AD                     C1FLTOBJ4H      equ	429	;# 
  9976   0001AE                     C1FLTOBJ4U      equ	430	;# 
  9977   0001AF                     C1FLTOBJ4T      equ	431	;# 
  9978   0001B0                     C1MASK4         equ	432	;# 
  9979   0001B0                     C1MASK4L        equ	432	;# 
  9980   0001B1                     C1MASK4H        equ	433	;# 
  9981   0001B2                     C1MASK4U        equ	434	;# 
  9982   0001B3                     C1MASK4T        equ	435	;# 
  9983   0001B4                     C1FLTOBJ5       equ	436	;# 
  9984   0001B4                     C1FLTOBJ5L      equ	436	;# 
  9985   0001B5                     C1FLTOBJ5H      equ	437	;# 
  9986   0001B6                     C1FLTOBJ5U      equ	438	;# 
  9987   0001B7                     C1FLTOBJ5T      equ	439	;# 
  9988   0001B8                     C1MASK5         equ	440	;# 
  9989   0001B8                     C1MASK5L        equ	440	;# 
  9990   0001B9                     C1MASK5H        equ	441	;# 
  9991   0001BA                     C1MASK5U        equ	442	;# 
  9992   0001BB                     C1MASK5T        equ	443	;# 
  9993   0001BC                     C1FLTOBJ6       equ	444	;# 
  9994   0001BC                     C1FLTOBJ6L      equ	444	;# 
  9995   0001BD                     C1FLTOBJ6H      equ	445	;# 
  9996   0001BE                     C1FLTOBJ6U      equ	446	;# 
  9997   0001BF                     C1FLTOBJ6T      equ	447	;# 
  9998   0001C0                     C1MASK6         equ	448	;# 
  9999   0001C0                     C1MASK6L        equ	448	;# 
 10000   0001C1                     C1MASK6H        equ	449	;# 
 10001   0001C2                     C1MASK6U        equ	450	;# 
 10002   0001C3                     C1MASK6T        equ	451	;# 
 10003   0001C4                     C1FLTOBJ7       equ	452	;# 
 10004   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10005   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10006   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10007   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10008   0001C8                     C1MASK7         equ	456	;# 
 10009   0001C8                     C1MASK7L        equ	456	;# 
 10010   0001C9                     C1MASK7H        equ	457	;# 
 10011   0001CA                     C1MASK7U        equ	458	;# 
 10012   0001CB                     C1MASK7T        equ	459	;# 
 10013   0001CC                     C1FLTOBJ8       equ	460	;# 
 10014   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10015   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10016   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10017   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10018   0001D0                     C1MASK8         equ	464	;# 
 10019   0001D0                     C1MASK8L        equ	464	;# 
 10020   0001D1                     C1MASK8H        equ	465	;# 
 10021   0001D2                     C1MASK8U        equ	466	;# 
 10022   0001D3                     C1MASK8T        equ	467	;# 
 10023   0001D4                     C1FLTOBJ9       equ	468	;# 
 10024   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10025   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10026   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10027   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10028   0001D8                     C1MASK9         equ	472	;# 
 10029   0001D8                     C1MASK9L        equ	472	;# 
 10030   0001D9                     C1MASK9H        equ	473	;# 
 10031   0001DA                     C1MASK9U        equ	474	;# 
 10032   0001DB                     C1MASK9T        equ	475	;# 
 10033   0001DC                     C1FLTOBJ10      equ	476	;# 
 10034   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10035   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10036   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10037   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10038   0001E0                     C1MASK10        equ	480	;# 
 10039   0001E0                     C1MASK10L       equ	480	;# 
 10040   0001E1                     C1MASK10H       equ	481	;# 
 10041   0001E2                     C1MASK10U       equ	482	;# 
 10042   0001E3                     C1MASK10T       equ	483	;# 
 10043   0001E4                     C1FLTOBJ11      equ	484	;# 
 10044   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10045   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10046   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10047   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10048   0001E8                     C1MASK11        equ	488	;# 
 10049   0001E8                     C1MASK11L       equ	488	;# 
 10050   0001E9                     C1MASK11H       equ	489	;# 
 10051   0001EA                     C1MASK11U       equ	490	;# 
 10052   0001EB                     C1MASK11T       equ	491	;# 
 10053   000200                     PPSLOCK         equ	512	;# 
 10054   000201                     RA0PPS          equ	513	;# 
 10055   000202                     RA1PPS          equ	514	;# 
 10056   000203                     RA2PPS          equ	515	;# 
 10057   000204                     RA3PPS          equ	516	;# 
 10058   000205                     RA4PPS          equ	517	;# 
 10059   000206                     RA5PPS          equ	518	;# 
 10060   000207                     RA6PPS          equ	519	;# 
 10061   000208                     RA7PPS          equ	520	;# 
 10062   000209                     RB0PPS          equ	521	;# 
 10063   00020A                     RB1PPS          equ	522	;# 
 10064   00020B                     RB2PPS          equ	523	;# 
 10065   00020C                     RB3PPS          equ	524	;# 
 10066   00020D                     RB4PPS          equ	525	;# 
 10067   00020E                     RB5PPS          equ	526	;# 
 10068   00020F                     RB6PPS          equ	527	;# 
 10069   000210                     RB7PPS          equ	528	;# 
 10070   000211                     RC0PPS          equ	529	;# 
 10071   000212                     RC1PPS          equ	530	;# 
 10072   000213                     RC2PPS          equ	531	;# 
 10073   000214                     RC3PPS          equ	532	;# 
 10074   000215                     RC4PPS          equ	533	;# 
 10075   000216                     RC5PPS          equ	534	;# 
 10076   000217                     RC6PPS          equ	535	;# 
 10077   000218                     RC7PPS          equ	536	;# 
 10078   00023D                     CANRXPPS        equ	573	;# 
 10079   00023E                     INT0PPS         equ	574	;# 
 10080   00023F                     INT1PPS         equ	575	;# 
 10081   000240                     INT2PPS         equ	576	;# 
 10082   000241                     T0CKIPPS        equ	577	;# 
 10083   000242                     T1CKIPPS        equ	578	;# 
 10084   000243                     T1GPPS          equ	579	;# 
 10085   000244                     T3CKIPPS        equ	580	;# 
 10086   000245                     T3GPPS          equ	581	;# 
 10087   000246                     T5CKIPPS        equ	582	;# 
 10088   000247                     T5GPPS          equ	583	;# 
 10089   000248                     T2INPPS         equ	584	;# 
 10090   000249                     T4INPPS         equ	585	;# 
 10091   00024A                     T6INPPS         equ	586	;# 
 10092   00024B                     TUIN0PPS        equ	587	;# 
 10093   00024C                     TUIN1PPS        equ	588	;# 
 10094   00024F                     CCP1PPS         equ	591	;# 
 10095   000250                     CCP2PPS         equ	592	;# 
 10096   000251                     CCP3PPS         equ	593	;# 
 10097   000253                     PWM1ERSPPS      equ	595	;# 
 10098   000254                     PWM2ERSPPS      equ	596	;# 
 10099   000255                     PWM3ERSPPS      equ	597	;# 
 10100   000256                     PWM4ERSPPS      equ	598	;# 
 10101   000257                     PWMIN0PPS       equ	599	;# 
 10102   000258                     PWMIN1PPS       equ	600	;# 
 10103   000259                     SMT1WINPPS      equ	601	;# 
 10104   00025A                     SMT1SIGPPS      equ	602	;# 
 10105   00025B                     CWG1PPS         equ	603	;# 
 10106   00025B                     CWG1INPPS       equ	603	;# 
 10107   00025C                     CWG2PPS         equ	604	;# 
 10108   00025C                     CWG2INPPS       equ	604	;# 
 10109   00025D                     CWG3PPS         equ	605	;# 
 10110   00025D                     CWG3INPPS       equ	605	;# 
 10111   00025E                     MD1CARLPPS      equ	606	;# 
 10112   00025E                     MDCARLPPS       equ	606	;# 
 10113   00025F                     MD1CARHPPS      equ	607	;# 
 10114   00025F                     MDCARHPPS       equ	607	;# 
 10115   000260                     MD1SRCPPS       equ	608	;# 
 10116   000260                     MDSRCPPS        equ	608	;# 
 10117   000261                     CLCIN0PPS       equ	609	;# 
 10118   000262                     CLCIN1PPS       equ	610	;# 
 10119   000263                     CLCIN2PPS       equ	611	;# 
 10120   000264                     CLCIN3PPS       equ	612	;# 
 10121   000265                     CLCIN4PPS       equ	613	;# 
 10122   000266                     CLCIN5PPS       equ	614	;# 
 10123   000267                     CLCIN6PPS       equ	615	;# 
 10124   000268                     CLCIN7PPS       equ	616	;# 
 10125   000269                     ADACTPPS        equ	617	;# 
 10126   00026A                     SPI1SCKPPS      equ	618	;# 
 10127   00026B                     SPI1SDIPPS      equ	619	;# 
 10128   00026C                     SPI1SSPPS       equ	620	;# 
 10129   00026D                     SPI2SCKPPS      equ	621	;# 
 10130   00026E                     SPI2SDIPPS      equ	622	;# 
 10131   00026F                     SPI2SSPPS       equ	623	;# 
 10132   000270                     I2C1SDAPPS      equ	624	;# 
 10133   000271                     I2C1SCLPPS      equ	625	;# 
 10134   000272                     U1RXPPS         equ	626	;# 
 10135   000273                     U1CTSPPS        equ	627	;# 
 10136   000274                     U2RXPPS         equ	628	;# 
 10137   000275                     U2CTSPPS        equ	629	;# 
 10138   000276                     U3RXPPS         equ	630	;# 
 10139   000277                     U3CTSPPS        equ	631	;# 
 10140   000278                     U4RXPPS         equ	632	;# 
 10141   000279                     U4CTSPPS        equ	633	;# 
 10142   00027A                     U5RXPPS         equ	634	;# 
 10143   00027B                     U5CTSPPS        equ	635	;# 
 10144   000286                     RC4I2C          equ	646	;# 
 10145   000287                     RC3I2C          equ	647	;# 
 10146   000288                     RB2I2C          equ	648	;# 
 10147   000289                     RB1I2C          equ	649	;# 
 10148   00028A                     I2C1RXB         equ	650	;# 
 10149   00028B                     I2C1TXB         equ	651	;# 
 10150   00028C                     I2C1CNTL        equ	652	;# 
 10151   00028D                     I2C1CNTH        equ	653	;# 
 10152   00028E                     I2C1ADB0        equ	654	;# 
 10153   00028F                     I2C1ADB1        equ	655	;# 
 10154   000290                     I2C1ADR0        equ	656	;# 
 10155   000291                     I2C1ADR1        equ	657	;# 
 10156   000292                     I2C1ADR2        equ	658	;# 
 10157   000293                     I2C1ADR3        equ	659	;# 
 10158   000294                     I2C1CON0        equ	660	;# 
 10159   000295                     I2C1CON1        equ	661	;# 
 10160   000296                     I2C1CON2        equ	662	;# 
 10161   000297                     I2C1ERR         equ	663	;# 
 10162   000298                     I2C1STAT0       equ	664	;# 
 10163   000299                     I2C1STAT1       equ	665	;# 
 10164   00029A                     I2C1PIR         equ	666	;# 
 10165   00029B                     I2C1PIE         equ	667	;# 
 10166   00029C                     I2C1BTO         equ	668	;# 
 10167   00029D                     I2C1BAUD        equ	669	;# 
 10168   00029E                     I2C1CLK         equ	670	;# 
 10169   00029F                     I2C1BTOC        equ	671	;# 
 10170   0002A1                     U1RXB           equ	673	;# 
 10171   0002A1                     U1RXBL          equ	673	;# 
 10172   0002A2                     U1RXCHK         equ	674	;# 
 10173   0002A3                     U1TXB           equ	675	;# 
 10174   0002A3                     U1TXBL          equ	675	;# 
 10175   0002A4                     U1TXCHK         equ	676	;# 
 10176   0002A5                     U1P1            equ	677	;# 
 10177   0002A5                     U1P1L           equ	677	;# 
 10178   0002A6                     U1P1H           equ	678	;# 
 10179   0002A7                     U1P2            equ	679	;# 
 10180   0002A7                     U1P2L           equ	679	;# 
 10181   0002A8                     U1P2H           equ	680	;# 
 10182   0002A9                     U1P3            equ	681	;# 
 10183   0002A9                     U1P3L           equ	681	;# 
 10184   0002AA                     U1P3H           equ	682	;# 
 10185   0002AB                     U1CON0          equ	683	;# 
 10186   0002AC                     U1CON1          equ	684	;# 
 10187   0002AD                     U1CON2          equ	685	;# 
 10188   0002AE                     U1BRG           equ	686	;# 
 10189   0002AE                     U1BRGL          equ	686	;# 
 10190   0002AF                     U1BRGH          equ	687	;# 
 10191   0002B0                     U1FIFO          equ	688	;# 
 10192   0002B1                     U1UIR           equ	689	;# 
 10193   0002B2                     U1ERRIR         equ	690	;# 
 10194   0002B3                     U1ERRIE         equ	691	;# 
 10195   0002B4                     U2RXB           equ	692	;# 
 10196   0002B4                     U2RXBL          equ	692	;# 
 10197   0002B5                     U2RXCHK         equ	693	;# 
 10198   0002B6                     U2TXB           equ	694	;# 
 10199   0002B6                     U2TXBL          equ	694	;# 
 10200   0002B7                     U2TXCHK         equ	695	;# 
 10201   0002B8                     U2P1            equ	696	;# 
 10202   0002B8                     U2P1L           equ	696	;# 
 10203   0002B9                     U2P1H           equ	697	;# 
 10204   0002BA                     U2P2            equ	698	;# 
 10205   0002BA                     U2P2L           equ	698	;# 
 10206   0002BB                     U2P2H           equ	699	;# 
 10207   0002BC                     U2P3            equ	700	;# 
 10208   0002BC                     U2P3L           equ	700	;# 
 10209   0002BD                     U2P3H           equ	701	;# 
 10210   0002BE                     U2CON0          equ	702	;# 
 10211   0002BF                     U2CON1          equ	703	;# 
 10212   0002C0                     U2CON2          equ	704	;# 
 10213   0002C1                     U2BRG           equ	705	;# 
 10214   0002C1                     U2BRGL          equ	705	;# 
 10215   0002C2                     U2BRGH          equ	706	;# 
 10216   0002C3                     U2FIFO          equ	707	;# 
 10217   0002C4                     U2UIR           equ	708	;# 
 10218   0002C5                     U2ERRIR         equ	709	;# 
 10219   0002C6                     U2ERRIE         equ	710	;# 
 10220   0002C7                     U3RXB           equ	711	;# 
 10221   0002C7                     U3RXBL          equ	711	;# 
 10222   0002C9                     U3TXB           equ	713	;# 
 10223   0002C9                     U3TXBL          equ	713	;# 
 10224   0002CB                     U3P1            equ	715	;# 
 10225   0002CB                     U3P1L           equ	715	;# 
 10226   0002CD                     U3P2            equ	717	;# 
 10227   0002CD                     U3P2L           equ	717	;# 
 10228   0002CF                     U3P3            equ	719	;# 
 10229   0002CF                     U3P3L           equ	719	;# 
 10230   0002D1                     U3CON0          equ	721	;# 
 10231   0002D2                     U3CON1          equ	722	;# 
 10232   0002D3                     U3CON2          equ	723	;# 
 10233   0002D4                     U3BRG           equ	724	;# 
 10234   0002D4                     U3BRGL          equ	724	;# 
 10235   0002D5                     U3BRGH          equ	725	;# 
 10236   0002D6                     U3FIFO          equ	726	;# 
 10237   0002D7                     U3UIR           equ	727	;# 
 10238   0002D8                     U3ERRIR         equ	728	;# 
 10239   0002D9                     U3ERRIE         equ	729	;# 
 10240   0002DA                     U4RXB           equ	730	;# 
 10241   0002DA                     U4RXBL          equ	730	;# 
 10242   0002DC                     U4TXB           equ	732	;# 
 10243   0002DC                     U4TXBL          equ	732	;# 
 10244   0002DE                     U4P1            equ	734	;# 
 10245   0002DE                     U4P1L           equ	734	;# 
 10246   0002E0                     U4P2            equ	736	;# 
 10247   0002E0                     U4P2L           equ	736	;# 
 10248   0002E2                     U4P3            equ	738	;# 
 10249   0002E2                     U4P3L           equ	738	;# 
 10250   0002E4                     U4CON0          equ	740	;# 
 10251   0002E5                     U4CON1          equ	741	;# 
 10252   0002E6                     U4CON2          equ	742	;# 
 10253   0002E7                     U4BRG           equ	743	;# 
 10254   0002E7                     U4BRGL          equ	743	;# 
 10255   0002E8                     U4BRGH          equ	744	;# 
 10256   0002E9                     U4FIFO          equ	745	;# 
 10257   0002EA                     U4UIR           equ	746	;# 
 10258   0002EB                     U4ERRIR         equ	747	;# 
 10259   0002EC                     U4ERRIE         equ	748	;# 
 10260   0002ED                     U5RXB           equ	749	;# 
 10261   0002ED                     U5RXBL          equ	749	;# 
 10262   0002EF                     U5TXB           equ	751	;# 
 10263   0002EF                     U5TXBL          equ	751	;# 
 10264   0002F1                     U5P1            equ	753	;# 
 10265   0002F1                     U5P1L           equ	753	;# 
 10266   0002F3                     U5P2            equ	755	;# 
 10267   0002F3                     U5P2L           equ	755	;# 
 10268   0002F5                     U5P3            equ	757	;# 
 10269   0002F5                     U5P3L           equ	757	;# 
 10270   0002F7                     U5CON0          equ	759	;# 
 10271   0002F8                     U5CON1          equ	760	;# 
 10272   0002F9                     U5CON2          equ	761	;# 
 10273   0002FA                     U5BRG           equ	762	;# 
 10274   0002FA                     U5BRGL          equ	762	;# 
 10275   0002FB                     U5BRGH          equ	763	;# 
 10276   0002FC                     U5FIFO          equ	764	;# 
 10277   0002FD                     U5UIR           equ	765	;# 
 10278   0002FE                     U5ERRIR         equ	766	;# 
 10279   0002FF                     U5ERRIE         equ	767	;# 
 10280   000300                     SMT1TMR         equ	768	;# 
 10281   000300                     SMT1TMRL        equ	768	;# 
 10282   000301                     SMT1TMRH        equ	769	;# 
 10283   000302                     SMT1TMRU        equ	770	;# 
 10284   000303                     SMT1CPR         equ	771	;# 
 10285   000303                     SMT1CPRL        equ	771	;# 
 10286   000304                     SMT1CPRH        equ	772	;# 
 10287   000305                     SMT1CPRU        equ	773	;# 
 10288   000306                     SMT1CPW         equ	774	;# 
 10289   000306                     SMT1CPWL        equ	774	;# 
 10290   000307                     SMT1CPWH        equ	775	;# 
 10291   000308                     SMT1CPWU        equ	776	;# 
 10292   000309                     SMT1PR          equ	777	;# 
 10293   000309                     SMT1PRL         equ	777	;# 
 10294   00030A                     SMT1PRH         equ	778	;# 
 10295   00030B                     SMT1PRU         equ	779	;# 
 10296   00030C                     SMT1CON0        equ	780	;# 
 10297   00030D                     SMT1CON1        equ	781	;# 
 10298   00030E                     SMT1STAT        equ	782	;# 
 10299   00030F                     SMT1CLK         equ	783	;# 
 10300   000310                     SMT1SIG         equ	784	;# 
 10301   000311                     SMT1WIN         equ	785	;# 
 10302   000318                     TMR0L           equ	792	;# 
 10303   000318                     TMR0            equ	792	;# 
 10304   000319                     TMR0H           equ	793	;# 
 10305   000319                     PR0             equ	793	;# 
 10306   00031A                     T0CON0          equ	794	;# 
 10307   00031B                     T0CON1          equ	795	;# 
 10308   00031C                     TMR1            equ	796	;# 
 10309   00031C                     TMR1L           equ	796	;# 
 10310   00031D                     TMR1H           equ	797	;# 
 10311   00031E                     T1CON           equ	798	;# 
 10312   00031E                     TMR1CON         equ	798	;# 
 10313   00031F                     T1GCON          equ	799	;# 
 10314   00031F                     TMR1GCON        equ	799	;# 
 10315   000320                     T1GATE          equ	800	;# 
 10316   000320                     TMR1GATE        equ	800	;# 
 10317   000321                     T1CLK           equ	801	;# 
 10318   000321                     TMR1CLK         equ	801	;# 
 10319   000321                     PR1             equ	801	;# 
 10320   000322                     T2TMR           equ	802	;# 
 10321   000322                     TMR2            equ	802	;# 
 10322   000323                     T2PR            equ	803	;# 
 10323   000323                     PR2             equ	803	;# 
 10324   000324                     T2CON           equ	804	;# 
 10325   000325                     T2HLT           equ	805	;# 
 10326   000326                     T2CLKCON        equ	806	;# 
 10327   000326                     T2CLK           equ	806	;# 
 10328   000327                     T2RST           equ	807	;# 
 10329   000328                     TMR3            equ	808	;# 
 10330   000328                     TMR3L           equ	808	;# 
 10331   000329                     TMR3H           equ	809	;# 
 10332   00032A                     T3CON           equ	810	;# 
 10333   00032A                     TMR3CON         equ	810	;# 
 10334   00032B                     T3GCON          equ	811	;# 
 10335   00032B                     TMR3GCON        equ	811	;# 
 10336   00032C                     T3GATE          equ	812	;# 
 10337   00032C                     TMR3GATE        equ	812	;# 
 10338   00032D                     T3CLK           equ	813	;# 
 10339   00032D                     TMR3CLK         equ	813	;# 
 10340   00032D                     PR3             equ	813	;# 
 10341   00032E                     T4TMR           equ	814	;# 
 10342   00032E                     TMR4            equ	814	;# 
 10343   00032F                     T4PR            equ	815	;# 
 10344   00032F                     PR4             equ	815	;# 
 10345   000330                     T4CON           equ	816	;# 
 10346   000331                     T4HLT           equ	817	;# 
 10347   000332                     T4CLKCON        equ	818	;# 
 10348   000332                     T4CLK           equ	818	;# 
 10349   000333                     T4RST           equ	819	;# 
 10350   000334                     TMR5            equ	820	;# 
 10351   000334                     TMR5L           equ	820	;# 
 10352   000335                     TMR5H           equ	821	;# 
 10353   000336                     T5CON           equ	822	;# 
 10354   000336                     TMR5CON         equ	822	;# 
 10355   000337                     T5GCON          equ	823	;# 
 10356   000337                     TMR5GCON        equ	823	;# 
 10357   000338                     T5GATE          equ	824	;# 
 10358   000338                     TMR5GATE        equ	824	;# 
 10359   000339                     T5CLK           equ	825	;# 
 10360   000339                     TMR5CLK         equ	825	;# 
 10361   000339                     PR5             equ	825	;# 
 10362   00033A                     T6TMR           equ	826	;# 
 10363   00033A                     TMR6            equ	826	;# 
 10364   00033B                     T6PR            equ	827	;# 
 10365   00033B                     PR6             equ	827	;# 
 10366   00033C                     T6CON           equ	828	;# 
 10367   00033D                     T6HLT           equ	829	;# 
 10368   00033E                     T6CLKCON        equ	830	;# 
 10369   00033E                     T6CLK           equ	830	;# 
 10370   00033F                     T6RST           equ	831	;# 
 10371   000340                     CCPR1           equ	832	;# 
 10372   000340                     CCPR1L          equ	832	;# 
 10373   000341                     CCPR1H          equ	833	;# 
 10374   000342                     CCP1CON         equ	834	;# 
 10375   000343                     CCP1CAP         equ	835	;# 
 10376   000344                     CCPR2           equ	836	;# 
 10377   000344                     CCPR2L          equ	836	;# 
 10378   000345                     CCPR2H          equ	837	;# 
 10379   000346                     CCP2CON         equ	838	;# 
 10380   000347                     CCP2CAP         equ	839	;# 
 10381   000348                     CCPR3           equ	840	;# 
 10382   000348                     CCPR3L          equ	840	;# 
 10383   000349                     CCPR3H          equ	841	;# 
 10384   00034A                     CCP3CON         equ	842	;# 
 10385   00034B                     CCP3CAP         equ	843	;# 
 10386   00034C                     CCPTMRS0        equ	844	;# 
 10387   00034F                     CRCDATA         equ	847	;# 
 10388   00034F                     CRCDATAL        equ	847	;# 
 10389   000350                     CRCDATAH        equ	848	;# 
 10390   000351                     CRCDATAU        equ	849	;# 
 10391   000352                     CRCDATAT        equ	850	;# 
 10392   000353                     CRCOUT          equ	851	;# 
 10393   000353                     CRCSHFT         equ	851	;# 
 10394   000353                     CRCXOR          equ	851	;# 
 10395   000353                     CRCOUTL         equ	851	;# 
 10396   000353                     CRCSHFTL        equ	851	;# 
 10397   000353                     CRCSHIFTL       equ	851	;# 
 10398   000353                     CRCXORL         equ	851	;# 
 10399   000354                     CRCOUTH         equ	852	;# 
 10400   000354                     CRCSHFTH        equ	852	;# 
 10401   000354                     CRCSHIFTH       equ	852	;# 
 10402   000354                     CRCXORH         equ	852	;# 
 10403   000355                     CRCOUTU         equ	853	;# 
 10404   000355                     CRCSHFTU        equ	853	;# 
 10405   000355                     CRCSHIFTU       equ	853	;# 
 10406   000355                     CRCXORU         equ	853	;# 
 10407   000356                     CRCOUTT         equ	854	;# 
 10408   000356                     CRCSHFTT        equ	854	;# 
 10409   000356                     CRCSHIFTT       equ	854	;# 
 10410   000356                     CRCXORT         equ	854	;# 
 10411   000357                     CRCCON0         equ	855	;# 
 10412   000358                     CRCCON1         equ	856	;# 
 10413   000359                     CRCCON2         equ	857	;# 
 10414   00035A                     SCANLADR        equ	858	;# 
 10415   00035A                     SCANLADRL       equ	858	;# 
 10416   00035B                     SCANLADRH       equ	859	;# 
 10417   00035C                     SCANLADRU       equ	860	;# 
 10418   00035D                     SCANHADR        equ	861	;# 
 10419   00035D                     SCANHADRL       equ	861	;# 
 10420   00035E                     SCANHADRH       equ	862	;# 
 10421   00035F                     SCANHADRU       equ	863	;# 
 10422   000360                     SCANCON0        equ	864	;# 
 10423   000361                     SCANTRIG        equ	865	;# 
 10424   000362                     IPR0            equ	866	;# 
 10425   000363                     IPR1            equ	867	;# 
 10426   000364                     IPR2            equ	868	;# 
 10427   000365                     IPR3            equ	869	;# 
 10428   000366                     IPR4            equ	870	;# 
 10429   000367                     IPR5            equ	871	;# 
 10430   000368                     IPR6            equ	872	;# 
 10431   000369                     IPR7            equ	873	;# 
 10432   00036A                     IPR8            equ	874	;# 
 10433   00036B                     IPR9            equ	875	;# 
 10434   00036C                     IPR10           equ	876	;# 
 10435   00036D                     IPR11           equ	877	;# 
 10436   00036E                     IPR12           equ	878	;# 
 10437   00036F                     IPR13           equ	879	;# 
 10438   000370                     IPR14           equ	880	;# 
 10439   000371                     IPR15           equ	881	;# 
 10440   000373                     STATUS_CSHAD    equ	883	;# 
 10441   000374                     WREG_CSHAD      equ	884	;# 
 10442   000375                     BSR_CSHAD       equ	885	;# 
 10443   000376                     SHADCON         equ	886	;# 
 10444   000377                     STATUS_SHAD     equ	887	;# 
 10445   000378                     WREG_SHAD       equ	888	;# 
 10446   000379                     BSR_SHAD        equ	889	;# 
 10447   00037A                     PCLATH_SHAD     equ	890	;# 
 10448   00037B                     PCLATU_SHAD     equ	891	;# 
 10449   00037C                     FSR0SH          equ	892	;# 
 10450   00037C                     FSR0L_SHAD      equ	892	;# 
 10451   00037D                     FSR0H_SHAD      equ	893	;# 
 10452   00037E                     FSR1SH          equ	894	;# 
 10453   00037E                     FSR1L_SHAD      equ	894	;# 
 10454   00037F                     FSR1H_SHAD      equ	895	;# 
 10455   000380                     FSR2SH          equ	896	;# 
 10456   000380                     FSR2L_SHAD      equ	896	;# 
 10457   000381                     FSR2H_SHAD      equ	897	;# 
 10458   000382                     PRODSH          equ	898	;# 
 10459   000382                     PRODL_SHAD      equ	898	;# 
 10460   000383                     PRODH_SHAD      equ	899	;# 
 10461   000387                     TU16ACON0       equ	903	;# 
 10462   000388                     TU16ACON1       equ	904	;# 
 10463   000389                     TU16AHLT        equ	905	;# 
 10464   00038A                     TU16APS         equ	906	;# 
 10465   00038B                     TU16ATMR        equ	907	;# 
 10466   00038B                     TU16ACR         equ	907	;# 
 10467   00038B                     TU16ATMRL       equ	907	;# 
 10468   00038B                     TU16ACRL        equ	907	;# 
 10469   00038C                     TU16ATMRH       equ	908	;# 
 10470   00038C                     TU16ACRH        equ	908	;# 
 10471   00038D                     TU16APR         equ	909	;# 
 10472   00038D                     TU16APRL        equ	909	;# 
 10473   00038E                     TU16APRH        equ	910	;# 
 10474   00038F                     TU16ACLK        equ	911	;# 
 10475   000390                     TU16AERS        equ	912	;# 
 10476   000393                     TU16BCON0       equ	915	;# 
 10477   000394                     TU16BCON1       equ	916	;# 
 10478   000395                     TU16BHLT        equ	917	;# 
 10479   000396                     TU16BPS         equ	918	;# 
 10480   000397                     TU16BTMR        equ	919	;# 
 10481   000397                     TU16BCR         equ	919	;# 
 10482   000397                     TU16BTMRL       equ	919	;# 
 10483   000397                     TU16BCRL        equ	919	;# 
 10484   000398                     TU16BTMRH       equ	920	;# 
 10485   000398                     TU16BCRH        equ	920	;# 
 10486   000399                     TU16BPR         equ	921	;# 
 10487   000399                     TU16BPRL        equ	921	;# 
 10488   00039A                     TU16BPRH        equ	922	;# 
 10489   00039B                     TU16BCLK        equ	923	;# 
 10490   00039C                     TU16BERS        equ	924	;# 
 10491   0003BB                     TUCHAIN         equ	955	;# 
 10492   0003BC                     CWG1CLK         equ	956	;# 
 10493   0003BC                     CWG1CLKCON      equ	956	;# 
 10494   0003BD                     CWG1ISM         equ	957	;# 
 10495   0003BE                     CWG1DBR         equ	958	;# 
 10496   0003BF                     CWG1DBF         equ	959	;# 
 10497   0003C0                     CWG1CON0        equ	960	;# 
 10498   0003C1                     CWG1CON1        equ	961	;# 
 10499   0003C2                     CWG1AS0         equ	962	;# 
 10500   0003C3                     CWG1AS1         equ	963	;# 
 10501   0003C4                     CWG1STR         equ	964	;# 
 10502   0003C5                     CWG2CLK         equ	965	;# 
 10503   0003C5                     CWG2CLKCON      equ	965	;# 
 10504   0003C6                     CWG2ISM         equ	966	;# 
 10505   0003C7                     CWG2DBR         equ	967	;# 
 10506   0003C8                     CWG2DBF         equ	968	;# 
 10507   0003C9                     CWG2CON0        equ	969	;# 
 10508   0003CA                     CWG2CON1        equ	970	;# 
 10509   0003CB                     CWG2AS0         equ	971	;# 
 10510   0003CC                     CWG2AS1         equ	972	;# 
 10511   0003CD                     CWG2STR         equ	973	;# 
 10512   0003CE                     CWG3CLK         equ	974	;# 
 10513   0003CE                     CWG3CLKCON      equ	974	;# 
 10514   0003CF                     CWG3ISM         equ	975	;# 
 10515   0003D0                     CWG3DBR         equ	976	;# 
 10516   0003D1                     CWG3DBF         equ	977	;# 
 10517   0003D2                     CWG3CON0        equ	978	;# 
 10518   0003D3                     CWG3CON1        equ	979	;# 
 10519   0003D4                     CWG3AS0         equ	980	;# 
 10520   0003D5                     CWG3AS1         equ	981	;# 
 10521   0003D6                     CWG3STR         equ	982	;# 
 10522   0003D7                     FVRCON          equ	983	;# 
 10523   0003D8                     ADCPCON         equ	984	;# 
 10524   0003D8                     ADCP            equ	984	;# 
 10525   0003D9                     ADLTH           equ	985	;# 
 10526   0003D9                     ADLTHL          equ	985	;# 
 10527   0003DA                     ADLTHH          equ	986	;# 
 10528   0003DB                     ADUTH           equ	987	;# 
 10529   0003DB                     ADUTHL          equ	987	;# 
 10530   0003DC                     ADUTHH          equ	988	;# 
 10531   0003DD                     ADERR           equ	989	;# 
 10532   0003DD                     ADERRL          equ	989	;# 
 10533   0003DE                     ADERRH          equ	990	;# 
 10534   0003DF                     ADSTPT          equ	991	;# 
 10535   0003DF                     ADSTPTL         equ	991	;# 
 10536   0003E0                     ADSTPTH         equ	992	;# 
 10537   0003E1                     ADFLTR          equ	993	;# 
 10538   0003E1                     ADFLTRL         equ	993	;# 
 10539   0003E2                     ADFLTRH         equ	994	;# 
 10540   0003E3                     ADACC           equ	995	;# 
 10541   0003E3                     ADACCL          equ	995	;# 
 10542   0003E4                     ADACCH          equ	996	;# 
 10543   0003E5                     ADACCU          equ	997	;# 
 10544   0003E6                     ADCNT           equ	998	;# 
 10545   0003E7                     ADRPT           equ	999	;# 
 10546   0003E8                     ADPREV          equ	1000	;# 
 10547   0003E8                     ADPREVL         equ	1000	;# 
 10548   0003E9                     ADPREVH         equ	1001	;# 
 10549   0003EA                     ADRES           equ	1002	;# 
 10550   0003EA                     ADRESL          equ	1002	;# 
 10551   0003EB                     ADRESH          equ	1003	;# 
 10552   0003EC                     ADPCH           equ	1004	;# 
 10553   0003EE                     ADACQ           equ	1006	;# 
 10554   0003EE                     ADACQL          equ	1006	;# 
 10555   0003EF                     ADACQH          equ	1007	;# 
 10556   0003F0                     ADCAP           equ	1008	;# 
 10557   0003F1                     ADPRE           equ	1009	;# 
 10558   0003F1                     ADPREL          equ	1009	;# 
 10559   0003F2                     ADPREH          equ	1010	;# 
 10560   0003F3                     ADCON0          equ	1011	;# 
 10561   0003F4                     ADCON1          equ	1012	;# 
 10562   0003F5                     ADCON2          equ	1013	;# 
 10563   0003F6                     ADCON3          equ	1014	;# 
 10564   0003F7                     ADSTAT          equ	1015	;# 
 10565   0003F8                     ADREF           equ	1016	;# 
 10566   0003F9                     ADACT           equ	1017	;# 
 10567   0003FA                     ADCLK           equ	1018	;# 
 10568   0003FB                     ADCTX           equ	1019	;# 
 10569   0003FC                     ADCSEL1         equ	1020	;# 
 10570   0003FD                     ADCSEL2         equ	1021	;# 
 10571   0003FE                     ADCSEL3         equ	1022	;# 
 10572   0003FF                     ADCSEL4         equ	1023	;# 
 10573   000400                     ANSELA          equ	1024	;# 
 10574   000401                     WPUA            equ	1025	;# 
 10575   000402                     ODCONA          equ	1026	;# 
 10576   000403                     SLRCONA         equ	1027	;# 
 10577   000404                     INLVLA          equ	1028	;# 
 10578   000405                     IOCAP           equ	1029	;# 
 10579   000406                     IOCAN           equ	1030	;# 
 10580   000407                     IOCAF           equ	1031	;# 
 10581   000408                     ANSELB          equ	1032	;# 
 10582   000409                     WPUB            equ	1033	;# 
 10583   00040A                     ODCONB          equ	1034	;# 
 10584   00040B                     SLRCONB         equ	1035	;# 
 10585   00040C                     INLVLB          equ	1036	;# 
 10586   00040D                     IOCBP           equ	1037	;# 
 10587   00040E                     IOCBN           equ	1038	;# 
 10588   00040F                     IOCBF           equ	1039	;# 
 10589   000410                     ANSELC          equ	1040	;# 
 10590   000411                     WPUC            equ	1041	;# 
 10591   000412                     ODCONC          equ	1042	;# 
 10592   000413                     SLRCONC         equ	1043	;# 
 10593   000414                     INLVLC          equ	1044	;# 
 10594   000415                     IOCCP           equ	1045	;# 
 10595   000416                     IOCCN           equ	1046	;# 
 10596   000417                     IOCCF           equ	1047	;# 
 10597   000421                     WPUE            equ	1057	;# 
 10598   000424                     INLVLE          equ	1060	;# 
 10599   000425                     IOCEP           equ	1061	;# 
 10600   000426                     IOCEN           equ	1062	;# 
 10601   000427                     IOCEF           equ	1063	;# 
 10602   000440                     NCO1ACC         equ	1088	;# 
 10603   000440                     NCO1ACCL        equ	1088	;# 
 10604   000441                     NCO1ACCH        equ	1089	;# 
 10605   000442                     NCO1ACCU        equ	1090	;# 
 10606   000443                     NCO1INC         equ	1091	;# 
 10607   000443                     NCO1INCL        equ	1091	;# 
 10608   000444                     NCO1INCH        equ	1092	;# 
 10609   000445                     NCO1INCU        equ	1093	;# 
 10610   000446                     NCO1CON         equ	1094	;# 
 10611   000447                     NCO1CLK         equ	1095	;# 
 10612   000448                     NCO2ACC         equ	1096	;# 
 10613   000448                     NCO2ACCL        equ	1096	;# 
 10614   000449                     NCO2ACCH        equ	1097	;# 
 10615   00044A                     NCO2ACCU        equ	1098	;# 
 10616   00044B                     NCO2INC         equ	1099	;# 
 10617   00044B                     NCO2INCL        equ	1099	;# 
 10618   00044C                     NCO2INCH        equ	1100	;# 
 10619   00044D                     NCO2INCU        equ	1101	;# 
 10620   00044E                     NCO2CON         equ	1102	;# 
 10621   00044F                     NCO2CLK         equ	1103	;# 
 10622   000450                     NCO3ACC         equ	1104	;# 
 10623   000450                     NCO3ACCL        equ	1104	;# 
 10624   000451                     NCO3ACCH        equ	1105	;# 
 10625   000452                     NCO3ACCU        equ	1106	;# 
 10626   000453                     NCO3INC         equ	1107	;# 
 10627   000453                     NCO3INCL        equ	1107	;# 
 10628   000454                     NCO3INCH        equ	1108	;# 
 10629   000455                     NCO3INCU        equ	1109	;# 
 10630   000456                     NCO3CON         equ	1110	;# 
 10631   000457                     NCO3CLK         equ	1111	;# 
 10632   000458                     FSCMCON         equ	1112	;# 
 10633   000459                     IVTLOCK         equ	1113	;# 
 10634   00045A                     IVTAD           equ	1114	;# 
 10635   00045A                     IVTADL          equ	1114	;# 
 10636   00045B                     IVTADH          equ	1115	;# 
 10637   00045C                     IVTADU          equ	1116	;# 
 10638   00045D                     IVTBASE         equ	1117	;# 
 10639   00045D                     IVTBASEL        equ	1117	;# 
 10640   00045E                     IVTBASEH        equ	1118	;# 
 10641   00045F                     IVTBASEU        equ	1119	;# 
 10642   000460                     PWM1ERS         equ	1120	;# 
 10643   000461                     PWM1CLK         equ	1121	;# 
 10644   000462                     PWM1LDS         equ	1122	;# 
 10645   000463                     PWM1PR          equ	1123	;# 
 10646   000463                     PWM1PRL         equ	1123	;# 
 10647   000464                     PWM1PRH         equ	1124	;# 
 10648   000465                     PWM1CPRE        equ	1125	;# 
 10649   000466                     PWM1PIPOS       equ	1126	;# 
 10650   000467                     PWM1GIR         equ	1127	;# 
 10651   000468                     PWM1GIE         equ	1128	;# 
 10652   000469                     PWM1CON         equ	1129	;# 
 10653   00046A                     PWM1S1CFG       equ	1130	;# 
 10654   00046B                     PWM1S1P1        equ	1131	;# 
 10655   00046B                     PWM1S1P1L       equ	1131	;# 
 10656   00046C                     PWM1S1P1H       equ	1132	;# 
 10657   00046D                     PWM1S1P2        equ	1133	;# 
 10658   00046D                     PWM1S1P2L       equ	1133	;# 
 10659   00046E                     PWM1S1P2H       equ	1134	;# 
 10660   00046F                     PWM2ERS         equ	1135	;# 
 10661   000470                     PWM2CLK         equ	1136	;# 
 10662   000471                     PWM2LDS         equ	1137	;# 
 10663   000472                     PWM2PR          equ	1138	;# 
 10664   000472                     PWM2PRL         equ	1138	;# 
 10665   000473                     PWM2PRH         equ	1139	;# 
 10666   000474                     PWM2CPRE        equ	1140	;# 
 10667   000475                     PWM2PIPOS       equ	1141	;# 
 10668   000476                     PWM2GIR         equ	1142	;# 
 10669   000477                     PWM2GIE         equ	1143	;# 
 10670   000478                     PWM2CON         equ	1144	;# 
 10671   000479                     PWM2S1CFG       equ	1145	;# 
 10672   00047A                     PWM2S1P1        equ	1146	;# 
 10673   00047A                     PWM2S1P1L       equ	1146	;# 
 10674   00047B                     PWM2S1P1H       equ	1147	;# 
 10675   00047C                     PWM2S1P2        equ	1148	;# 
 10676   00047C                     PWM2S1P2L       equ	1148	;# 
 10677   00047D                     PWM2S1P2H       equ	1149	;# 
 10678   00047E                     PWM3ERS         equ	1150	;# 
 10679   00047F                     PWM3CLK         equ	1151	;# 
 10680   000480                     PWM3LDS         equ	1152	;# 
 10681   000481                     PWM3PR          equ	1153	;# 
 10682   000481                     PWM3PRL         equ	1153	;# 
 10683   000482                     PWM3PRH         equ	1154	;# 
 10684   000483                     PWM3CPRE        equ	1155	;# 
 10685   000484                     PWM3PIPOS       equ	1156	;# 
 10686   000485                     PWM3GIR         equ	1157	;# 
 10687   000486                     PWM3GIE         equ	1158	;# 
 10688   000487                     PWM3CON         equ	1159	;# 
 10689   000488                     PWM3S1CFG       equ	1160	;# 
 10690   000489                     PWM3S1P1        equ	1161	;# 
 10691   000489                     PWM3S1P1L       equ	1161	;# 
 10692   00048A                     PWM3S1P1H       equ	1162	;# 
 10693   00048B                     PWM3S1P2        equ	1163	;# 
 10694   00048B                     PWM3S1P2L       equ	1163	;# 
 10695   00048C                     PWM3S1P2H       equ	1164	;# 
 10696   00048D                     PWM4ERS         equ	1165	;# 
 10697   00048E                     PWM4CLK         equ	1166	;# 
 10698   00048F                     PWM4LDS         equ	1167	;# 
 10699   000490                     PWM4PR          equ	1168	;# 
 10700   000490                     PWM4PRL         equ	1168	;# 
 10701   000491                     PWM4PRH         equ	1169	;# 
 10702   000492                     PWM4CPRE        equ	1170	;# 
 10703   000493                     PWM4PIPOS       equ	1171	;# 
 10704   000494                     PWM4GIR         equ	1172	;# 
 10705   000495                     PWM4GIE         equ	1173	;# 
 10706   000496                     PWM4CON         equ	1174	;# 
 10707   000497                     PWM4S1CFG       equ	1175	;# 
 10708   000498                     PWM4S1P1        equ	1176	;# 
 10709   000498                     PWM4S1P1L       equ	1176	;# 
 10710   000499                     PWM4S1P1H       equ	1177	;# 
 10711   00049A                     PWM4S1P2        equ	1178	;# 
 10712   00049A                     PWM4S1P2L       equ	1178	;# 
 10713   00049B                     PWM4S1P2H       equ	1179	;# 
 10714   00049C                     PWMLOAD         equ	1180	;# 
 10715   00049D                     PWMEN           equ	1181	;# 
 10716   00049E                     PIE0            equ	1182	;# 
 10717   00049F                     PIE1            equ	1183	;# 
 10718   0004A0                     PIE2            equ	1184	;# 
 10719   0004A1                     PIE3            equ	1185	;# 
 10720   0004A2                     PIE4            equ	1186	;# 
 10721   0004A3                     PIE5            equ	1187	;# 
 10722   0004A4                     PIE6            equ	1188	;# 
 10723   0004A5                     PIE7            equ	1189	;# 
 10724   0004A6                     PIE8            equ	1190	;# 
 10725   0004A7                     PIE9            equ	1191	;# 
 10726   0004A8                     PIE10           equ	1192	;# 
 10727   0004A9                     PIE11           equ	1193	;# 
 10728   0004AA                     PIE12           equ	1194	;# 
 10729   0004AB                     PIE13           equ	1195	;# 
 10730   0004AC                     PIE14           equ	1196	;# 
 10731   0004AD                     PIE15           equ	1197	;# 
 10732   0004AE                     PIR0            equ	1198	;# 
 10733   0004AF                     PIR1            equ	1199	;# 
 10734   0004B0                     PIR2            equ	1200	;# 
 10735   0004B1                     PIR3            equ	1201	;# 
 10736   0004B2                     PIR4            equ	1202	;# 
 10737   0004B3                     PIR5            equ	1203	;# 
 10738   0004B4                     PIR6            equ	1204	;# 
 10739   0004B5                     PIR7            equ	1205	;# 
 10740   0004B6                     PIR8            equ	1206	;# 
 10741   0004B7                     PIR9            equ	1207	;# 
 10742   0004B8                     PIR10           equ	1208	;# 
 10743   0004B9                     PIR11           equ	1209	;# 
 10744   0004BA                     PIR12           equ	1210	;# 
 10745   0004BB                     PIR13           equ	1211	;# 
 10746   0004BC                     PIR14           equ	1212	;# 
 10747   0004BD                     PIR15           equ	1213	;# 
 10748   0004BE                     LATA            equ	1214	;# 
 10749   0004BF                     LATB            equ	1215	;# 
 10750   0004C0                     LATC            equ	1216	;# 
 10751   0004C6                     TRISA           equ	1222	;# 
 10752   0004C7                     TRISB           equ	1223	;# 
 10753   0004C8                     TRISC           equ	1224	;# 
 10754   0004CA                     TRISE           equ	1226	;# 
 10755   0004CE                     PORTA           equ	1230	;# 
 10756   0004CF                     PORTB           equ	1231	;# 
 10757   0004D0                     PORTC           equ	1232	;# 
 10758   0004D2                     PORTE           equ	1234	;# 
 10759   0004D6                     INTCON0         equ	1238	;# 
 10760   0004D7                     INTCON1         equ	1239	;# 
 10761   0004D8                     STATUS          equ	1240	;# 
 10762   0004D9                     FSR2            equ	1241	;# 
 10763   0004D9                     FSR2L           equ	1241	;# 
 10764   0004DA                     FSR2H           equ	1242	;# 
 10765   0004DB                     PLUSW2          equ	1243	;# 
 10766   0004DC                     PREINC2         equ	1244	;# 
 10767   0004DD                     POSTDEC2        equ	1245	;# 
 10768   0004DE                     POSTINC2        equ	1246	;# 
 10769   0004DF                     INDF2           equ	1247	;# 
 10770   0004E0                     BSR             equ	1248	;# 
 10771   0004E1                     FSR1            equ	1249	;# 
 10772   0004E1                     FSR1L           equ	1249	;# 
 10773   0004E2                     FSR1H           equ	1250	;# 
 10774   0004E3                     PLUSW1          equ	1251	;# 
 10775   0004E4                     PREINC1         equ	1252	;# 
 10776   0004E5                     POSTDEC1        equ	1253	;# 
 10777   0004E6                     POSTINC1        equ	1254	;# 
 10778   0004E7                     INDF1           equ	1255	;# 
 10779   0004E8                     WREG            equ	1256	;# 
 10780   0004E9                     FSR0            equ	1257	;# 
 10781   0004E9                     FSR0L           equ	1257	;# 
 10782   0004EA                     FSR0H           equ	1258	;# 
 10783   0004EB                     PLUSW0          equ	1259	;# 
 10784   0004EC                     PREINC0         equ	1260	;# 
 10785   0004ED                     POSTDEC0        equ	1261	;# 
 10786   0004EE                     POSTINC0        equ	1262	;# 
 10787   0004EF                     INDF0           equ	1263	;# 
 10788   0004F0                     PCON0           equ	1264	;# 
 10789   0004F1                     PCON1           equ	1265	;# 
 10790   0004F2                     CPUDOZE         equ	1266	;# 
 10791   0004F3                     PROD            equ	1267	;# 
 10792   0004F3                     PRODL           equ	1267	;# 
 10793   0004F4                     PRODH           equ	1268	;# 
 10794   0004F5                     TABLAT          equ	1269	;# 
 10795   0004F6                     TBLPTR          equ	1270	;# 
 10796   0004F6                     TBLPTRL         equ	1270	;# 
 10797   0004F7                     TBLPTRH         equ	1271	;# 
 10798   0004F8                     TBLPTRU         equ	1272	;# 
 10799   0004F9                     PCLAT           equ	1273	;# 
 10800   0004F9                     PCL             equ	1273	;# 
 10801   0004FA                     PCLATH          equ	1274	;# 
 10802   0004FB                     PCLATU          equ	1275	;# 
 10803   0004FC                     STKPTR          equ	1276	;# 
 10804   0004FD                     TOS             equ	1277	;# 
 10805   0004FD                     TOSL            equ	1277	;# 
 10806   0004FE                     TOSH            equ	1278	;# 
 10807   0004FF                     TOSU            equ	1279	;# 
 10808   000038                     BOOTREG         equ	56	;# 
 10809   000039                     CLKRCON         equ	57	;# 
 10810   00003A                     CLKRCLK         equ	58	;# 
 10811   000040                     NVMCON0         equ	64	;# 
 10812   000041                     NVMCON1         equ	65	;# 
 10813   000042                     NVMLOCK         equ	66	;# 
 10814   000043                     NVMADR          equ	67	;# 
 10815   000043                     NVMADRL         equ	67	;# 
 10816   000044                     NVMADRH         equ	68	;# 
 10817   000045                     NVMADRU         equ	69	;# 
 10818   000046                     NVMDAT          equ	70	;# 
 10819   000046                     NVMDATL         equ	70	;# 
 10820   000047                     NVMDATH         equ	71	;# 
 10821   000048                     VREGCON         equ	72	;# 
 10822   000049                     BORCON          equ	73	;# 
 10823   00004A                     HLVDCON0        equ	74	;# 
 10824   00004B                     HLVDCON1        equ	75	;# 
 10825   00004C                     ZCDCON          equ	76	;# 
 10826   000060                     PMD0            equ	96	;# 
 10827   000061                     PMD1            equ	97	;# 
 10828   000062                     PMD2            equ	98	;# 
 10829   000063                     PMD3            equ	99	;# 
 10830   000064                     PMD4            equ	100	;# 
 10831   000065                     PMD5            equ	101	;# 
 10832   000066                     PMD6            equ	102	;# 
 10833   000067                     PMD7            equ	103	;# 
 10834   000068                     PMD8            equ	104	;# 
 10835   00006A                     MD1CON0         equ	106	;# 
 10836   00006B                     MD1CON1         equ	107	;# 
 10837   00006C                     MD1SRC          equ	108	;# 
 10838   00006D                     MD1CARL         equ	109	;# 
 10839   00006E                     MD1CARH         equ	110	;# 
 10840   00006F                     CMOUT           equ	111	;# 
 10841   000070                     CM1CON0         equ	112	;# 
 10842   000071                     CM1CON1         equ	113	;# 
 10843   000072                     CM1NCH          equ	114	;# 
 10844   000073                     CM1PCH          equ	115	;# 
 10845   000074                     CM2CON0         equ	116	;# 
 10846   000075                     CM2CON1         equ	117	;# 
 10847   000076                     CM2NCH          equ	118	;# 
 10848   000077                     CM2PCH          equ	119	;# 
 10849   000078                     WDTCON0         equ	120	;# 
 10850   000079                     WDTCON1         equ	121	;# 
 10851   00007A                     WDTPSL          equ	122	;# 
 10852   00007B                     WDTPSH          equ	123	;# 
 10853   00007C                     WDTTMR          equ	124	;# 
 10854   00007D                     DAC1DAT         equ	125	;# 
 10855   00007D                     DAC1DATL        equ	125	;# 
 10856   00007F                     DAC1CON         equ	127	;# 
 10857   000080                     SPI1RXB         equ	128	;# 
 10858   000081                     SPI1TXB         equ	129	;# 
 10859   000082                     SPI1TCNT        equ	130	;# 
 10860   000082                     SPI1TCNTL       equ	130	;# 
 10861   000083                     SPI1TCNTH       equ	131	;# 
 10862   000084                     SPI1CON0        equ	132	;# 
 10863   000085                     SPI1CON1        equ	133	;# 
 10864   000086                     SPI1CON2        equ	134	;# 
 10865   000087                     SPI1STATUS      equ	135	;# 
 10866   000088                     SPI1TWIDTH      equ	136	;# 
 10867   000089                     SPI1BAUD        equ	137	;# 
 10868   00008A                     SPI1INTF        equ	138	;# 
 10869   00008B                     SPI1INTE        equ	139	;# 
 10870   00008C                     SPI1CLK         equ	140	;# 
 10871   00008D                     SPI2RXB         equ	141	;# 
 10872   00008E                     SPI2TXB         equ	142	;# 
 10873   00008F                     SPI2TCNT        equ	143	;# 
 10874   00008F                     SPI2TCNTL       equ	143	;# 
 10875   000090                     SPI2TCNTH       equ	144	;# 
 10876   000091                     SPI2CON0        equ	145	;# 
 10877   000092                     SPI2CON1        equ	146	;# 
 10878   000093                     SPI2CON2        equ	147	;# 
 10879   000094                     SPI2STATUS      equ	148	;# 
 10880   000095                     SPI2TWIDTH      equ	149	;# 
 10881   000096                     SPI2BAUD        equ	150	;# 
 10882   000097                     SPI2INTF        equ	151	;# 
 10883   000098                     SPI2INTE        equ	152	;# 
 10884   000099                     SPI2CLK         equ	153	;# 
 10885   0000AC                     ACTCON          equ	172	;# 
 10886   0000AD                     OSCCON1         equ	173	;# 
 10887   0000AE                     OSCCON2         equ	174	;# 
 10888   0000AF                     OSCCON3         equ	175	;# 
 10889   0000B0                     OSCTUNE         equ	176	;# 
 10890   0000B1                     OSCFRQ          equ	177	;# 
 10891   0000B1                     OSCFREQ         equ	177	;# 
 10892   0000B2                     OSCSTAT         equ	178	;# 
 10893   0000B2                     OSCSTAT1        equ	178	;# 
 10894   0000B3                     OSCEN           equ	179	;# 
 10895   0000B4                     PRLOCK          equ	180	;# 
 10896   0000B5                     SCANPR          equ	181	;# 
 10897   0000B6                     DMA1PR          equ	182	;# 
 10898   0000B7                     DMA2PR          equ	183	;# 
 10899   0000B8                     DMA3PR          equ	184	;# 
 10900   0000B9                     DMA4PR          equ	185	;# 
 10901   0000BA                     DMA5PR          equ	186	;# 
 10902   0000BB                     DMA6PR          equ	187	;# 
 10903   0000BC                     DMA7PR          equ	188	;# 
 10904   0000BD                     DMA8PR          equ	189	;# 
 10905   0000BE                     MAINPR          equ	190	;# 
 10906   0000BF                     ISRPR           equ	191	;# 
 10907   0000D4                     CLCDATA         equ	212	;# 
 10908   0000D5                     CLCSELECT       equ	213	;# 
 10909   0000D6                     CLCnCON         equ	214	;# 
 10910   0000D7                     CLCnPOL         equ	215	;# 
 10911   0000D8                     CLCnSEL0        equ	216	;# 
 10912   0000D9                     CLCnSEL1        equ	217	;# 
 10913   0000DA                     CLCnSEL2        equ	218	;# 
 10914   0000DB                     CLCnSEL3        equ	219	;# 
 10915   0000DC                     CLCnGLS0        equ	220	;# 
 10916   0000DD                     CLCnGLS1        equ	221	;# 
 10917   0000DE                     CLCnGLS2        equ	222	;# 
 10918   0000DF                     CLCnGLS3        equ	223	;# 
 10919   0000E8                     DMASELECT       equ	232	;# 
 10920   0000E9                     DMAnBUF         equ	233	;# 
 10921   0000EA                     DMAnDCNT        equ	234	;# 
 10922   0000EA                     DMAnDCNTL       equ	234	;# 
 10923   0000EB                     DMAnDCNTH       equ	235	;# 
 10924   0000EC                     DMAnDPTR        equ	236	;# 
 10925   0000EC                     DMAnDPTRL       equ	236	;# 
 10926   0000ED                     DMAnDPTRH       equ	237	;# 
 10927   0000EE                     DMAnDSZ         equ	238	;# 
 10928   0000EE                     DMAnDSZL        equ	238	;# 
 10929   0000EF                     DMAnDSZH        equ	239	;# 
 10930   0000F0                     DMAnDSA         equ	240	;# 
 10931   0000F0                     DMAnDSAL        equ	240	;# 
 10932   0000F1                     DMAnDSAH        equ	241	;# 
 10933   0000F2                     DMAnSCNT        equ	242	;# 
 10934   0000F2                     DMAnSCNTL       equ	242	;# 
 10935   0000F3                     DMAnSCNTH       equ	243	;# 
 10936   0000F4                     DMAnSPTR        equ	244	;# 
 10937   0000F4                     DMAnSPTRL       equ	244	;# 
 10938   0000F5                     DMAnSPTRH       equ	245	;# 
 10939   0000F6                     DMAnSPTRU       equ	246	;# 
 10940   0000F7                     DMAnSSZ         equ	247	;# 
 10941   0000F7                     DMAnSSZL        equ	247	;# 
 10942   0000F8                     DMAnSSZH        equ	248	;# 
 10943   0000F9                     DMAnSSA         equ	249	;# 
 10944   0000F9                     DMAnSSAL        equ	249	;# 
 10945   0000FA                     DMAnSSAH        equ	250	;# 
 10946   0000FB                     DMAnSSAU        equ	251	;# 
 10947   0000FC                     DMAnCON0        equ	252	;# 
 10948   0000FD                     DMAnCON1        equ	253	;# 
 10949   0000FE                     DMAnAIRQ        equ	254	;# 
 10950   0000FF                     DMAnSIRQ        equ	255	;# 
 10951   000100                     C1CONL          equ	256	;# 
 10952   000101                     C1CONH          equ	257	;# 
 10953   000102                     C1CONU          equ	258	;# 
 10954   000103                     C1CONT          equ	259	;# 
 10955   000104                     C1NBTCFGL       equ	260	;# 
 10956   000105                     C1NBTCFGH       equ	261	;# 
 10957   000106                     C1NBTCFGU       equ	262	;# 
 10958   000107                     C1NBTCFGT       equ	263	;# 
 10959   000108                     C1DBTCFGL       equ	264	;# 
 10960   000109                     C1DBTCFGH       equ	265	;# 
 10961   00010A                     C1DBTCFGU       equ	266	;# 
 10962   00010B                     C1DBTCFGT       equ	267	;# 
 10963   00010C                     C1TDCL          equ	268	;# 
 10964   00010D                     C1TDCH          equ	269	;# 
 10965   00010E                     C1TDCU          equ	270	;# 
 10966   000110                     C1TBC           equ	272	;# 
 10967   000110                     C1TBCL          equ	272	;# 
 10968   000111                     C1TBCH          equ	273	;# 
 10969   000112                     C1TBCU          equ	274	;# 
 10970   000113                     C1TBCT          equ	275	;# 
 10971   000114                     C1TSCONL        equ	276	;# 
 10972   000115                     C1TSCONH        equ	277	;# 
 10973   000116                     C1TSCONU        equ	278	;# 
 10974   000117                     C1TSCONT        equ	279	;# 
 10975   000118                     C1VECL          equ	280	;# 
 10976   000119                     C1VECH          equ	281	;# 
 10977   00011A                     C1VECU          equ	282	;# 
 10978   00011B                     C1VECT          equ	283	;# 
 10979   00011C                     C1INTL          equ	284	;# 
 10980   00011D                     C1INTH          equ	285	;# 
 10981   00011E                     C1INTU          equ	286	;# 
 10982   00011F                     C1INTT          equ	287	;# 
 10983   000120                     C1RXIF          equ	288	;# 
 10984   000120                     C1RXIFL         equ	288	;# 
 10985   000121                     C1RXIFH         equ	289	;# 
 10986   000122                     C1RXIFU         equ	290	;# 
 10987   000123                     C1RXIFT         equ	291	;# 
 10988   000124                     C1TXIF          equ	292	;# 
 10989   000124                     C1TXIFL         equ	292	;# 
 10990   000125                     C1TXIFH         equ	293	;# 
 10991   000126                     C1TXIFU         equ	294	;# 
 10992   000127                     C1TXIFT         equ	295	;# 
 10993   000128                     C1RXOVIF        equ	296	;# 
 10994   000128                     C1RXOVIFL       equ	296	;# 
 10995   000129                     C1RXOVIFH       equ	297	;# 
 10996   00012A                     C1RXOVIFU       equ	298	;# 
 10997   00012B                     C1RXOVIFT       equ	299	;# 
 10998   00012C                     C1TXATIF        equ	300	;# 
 10999   00012C                     C1TXATIFL       equ	300	;# 
 11000   00012D                     C1TXATIFH       equ	301	;# 
 11001   00012E                     C1TXATIFU       equ	302	;# 
 11002   00012F                     C1TXATIFT       equ	303	;# 
 11003   000130                     C1TXREQ         equ	304	;# 
 11004   000130                     C1TXREQL        equ	304	;# 
 11005   000131                     C1TXREQH        equ	305	;# 
 11006   000132                     C1TXREQU        equ	306	;# 
 11007   000133                     C1TXREQT        equ	307	;# 
 11008   000134                     C1TRECL         equ	308	;# 
 11009   000135                     C1TRECH         equ	309	;# 
 11010   000136                     C1TRECU         equ	310	;# 
 11011   000137                     C1TRECT         equ	311	;# 
 11012   000138                     C1BDIAG0L       equ	312	;# 
 11013   000139                     C1BDIAG0H       equ	313	;# 
 11014   00013C                     C1BDIAG1L       equ	316	;# 
 11015   00013D                     C1BDIAG1H       equ	317	;# 
 11016   00013E                     C1BDIAG1U       equ	318	;# 
 11017   00013F                     C1BDIAG1T       equ	319	;# 
 11018   000140                     C1TEFCONL       equ	320	;# 
 11019   000141                     C1TEFCONH       equ	321	;# 
 11020   000142                     C1TEFCONU       equ	322	;# 
 11021   000143                     C1TEFCONT       equ	323	;# 
 11022   000144                     C1TEFSTAL       equ	324	;# 
 11023   000145                     C1TEFSTAH       equ	325	;# 
 11024   000146                     C1TEFSTAU       equ	326	;# 
 11025   000147                     C1TEFSTAT       equ	327	;# 
 11026   000148                     C1TEFUA         equ	328	;# 
 11027   000148                     C1TEFUAL        equ	328	;# 
 11028   000149                     C1TEFUAH        equ	329	;# 
 11029   00014A                     C1TEFUAU        equ	330	;# 
 11030   00014B                     C1TEFUAT        equ	331	;# 
 11031   00014C                     C1FIFOBA        equ	332	;# 
 11032   00014C                     C1FIFOBAL       equ	332	;# 
 11033   00014D                     C1FIFOBAH       equ	333	;# 
 11034   00014E                     C1FIFOBAU       equ	334	;# 
 11035   00014F                     C1FIFOBAT       equ	335	;# 
 11036   000150                     C1TXQCONL       equ	336	;# 
 11037   000151                     C1TXQCONH       equ	337	;# 
 11038   000152                     C1TXQCONU       equ	338	;# 
 11039   000153                     C1TXQCONT       equ	339	;# 
 11040   000154                     C1TXQSTAL       equ	340	;# 
 11041   000155                     C1TXQSTAH       equ	341	;# 
 11042   000156                     C1TXQSTAU       equ	342	;# 
 11043   000157                     C1TXQSTAT       equ	343	;# 
 11044   000158                     C1TXQUA         equ	344	;# 
 11045   000158                     C1TXQUAL        equ	344	;# 
 11046   000159                     C1TXQUAH        equ	345	;# 
 11047   00015A                     C1TXQUAU        equ	346	;# 
 11048   00015B                     C1TXQUAT        equ	347	;# 
 11049   00015C                     C1FIFOCON1      equ	348	;# 
 11050   00015C                     C1FIFOCON1L     equ	348	;# 
 11051   00015D                     C1FIFOCON1H     equ	349	;# 
 11052   00015E                     C1FIFOCON1U     equ	350	;# 
 11053   00015F                     C1FIFOCON1T     equ	351	;# 
 11054   000160                     C1FIFOSTA1      equ	352	;# 
 11055   000160                     C1FIFOSTA1L     equ	352	;# 
 11056   000161                     C1FIFOSTA1H     equ	353	;# 
 11057   000162                     C1FIFOSTA1U     equ	354	;# 
 11058   000163                     C1FIFOSTA1T     equ	355	;# 
 11059   000164                     C1FIFOUA1       equ	356	;# 
 11060   000164                     C1FIFOUA1L      equ	356	;# 
 11061   000165                     C1FIFOUA1H      equ	357	;# 
 11062   000166                     C1FIFOUA1U      equ	358	;# 
 11063   000167                     C1FIFOUA1T      equ	359	;# 
 11064   000168                     C1FIFOCON2      equ	360	;# 
 11065   000168                     C1FIFOCON2L     equ	360	;# 
 11066   000169                     C1FIFOCON2H     equ	361	;# 
 11067   00016A                     C1FIFOCON2U     equ	362	;# 
 11068   00016B                     C1FIFOCON2T     equ	363	;# 
 11069   00016C                     C1FIFOSTA2      equ	364	;# 
 11070   00016C                     C1FIFOSTA2L     equ	364	;# 
 11071   00016D                     C1FIFOSTA2H     equ	365	;# 
 11072   00016E                     C1FIFOSTA2U     equ	366	;# 
 11073   00016F                     C1FIFOSTA2T     equ	367	;# 
 11074   000170                     C1FIFOUA2       equ	368	;# 
 11075   000170                     C1FIFOUA2L      equ	368	;# 
 11076   000171                     C1FIFOUA2H      equ	369	;# 
 11077   000172                     C1FIFOUA2U      equ	370	;# 
 11078   000173                     C1FIFOUA2T      equ	371	;# 
 11079   000174                     C1FIFOCON3      equ	372	;# 
 11080   000174                     C1FIFOCON3L     equ	372	;# 
 11081   000175                     C1FIFOCON3H     equ	373	;# 
 11082   000176                     C1FIFOCON3U     equ	374	;# 
 11083   000177                     C1FIFOCON3T     equ	375	;# 
 11084   000178                     C1FIFOSTA3      equ	376	;# 
 11085   000178                     C1FIFOSTA3L     equ	376	;# 
 11086   000179                     C1FIFOSTA3H     equ	377	;# 
 11087   00017A                     C1FIFOSTA3U     equ	378	;# 
 11088   00017B                     C1FIFOSTA3T     equ	379	;# 
 11089   00017C                     C1FIFOUA3       equ	380	;# 
 11090   00017C                     C1FIFOUA3L      equ	380	;# 
 11091   00017D                     C1FIFOUA3H      equ	381	;# 
 11092   00017E                     C1FIFOUA3U      equ	382	;# 
 11093   00017F                     C1FIFOUA3T      equ	383	;# 
 11094   000180                     C1FLTCON0L      equ	384	;# 
 11095   000181                     C1FLTCON0H      equ	385	;# 
 11096   000182                     C1FLTCON0U      equ	386	;# 
 11097   000183                     C1FLTCON0T      equ	387	;# 
 11098   000184                     C1FLTCON1L      equ	388	;# 
 11099   000185                     C1FLTCON1H      equ	389	;# 
 11100   000186                     C1FLTCON1U      equ	390	;# 
 11101   000187                     C1FLTCON1T      equ	391	;# 
 11102   000188                     C1FLTCON2L      equ	392	;# 
 11103   000189                     C1FLTCON2H      equ	393	;# 
 11104   00018A                     C1FLTCON2U      equ	394	;# 
 11105   00018B                     C1FLTCON2T      equ	395	;# 
 11106   00018C                     C1FLTOBJ0       equ	396	;# 
 11107   00018C                     C1FLTOBJ0L      equ	396	;# 
 11108   00018D                     C1FLTOBJ0H      equ	397	;# 
 11109   00018E                     C1FLTOBJ0U      equ	398	;# 
 11110   00018F                     C1FLTOBJ0T      equ	399	;# 
 11111   000190                     C1MASK0         equ	400	;# 
 11112   000190                     C1MASK0L        equ	400	;# 
 11113   000191                     C1MASK0H        equ	401	;# 
 11114   000192                     C1MASK0U        equ	402	;# 
 11115   000193                     C1MASK0T        equ	403	;# 
 11116   000194                     C1FLTOBJ1       equ	404	;# 
 11117   000194                     C1FLTOBJ1L      equ	404	;# 
 11118   000195                     C1FLTOBJ1H      equ	405	;# 
 11119   000196                     C1FLTOBJ1U      equ	406	;# 
 11120   000197                     C1FLTOBJ1T      equ	407	;# 
 11121   000198                     C1MASK1         equ	408	;# 
 11122   000198                     C1MASK1L        equ	408	;# 
 11123   000199                     C1MASK1H        equ	409	;# 
 11124   00019A                     C1MASK1U        equ	410	;# 
 11125   00019B                     C1MASK1T        equ	411	;# 
 11126   00019C                     C1FLTOBJ2       equ	412	;# 
 11127   00019C                     C1FLTOBJ2L      equ	412	;# 
 11128   00019D                     C1FLTOBJ2H      equ	413	;# 
 11129   00019E                     C1FLTOBJ2U      equ	414	;# 
 11130   00019F                     C1FLTOBJ2T      equ	415	;# 
 11131   0001A0                     C1MASK2         equ	416	;# 
 11132   0001A0                     C1MASK2L        equ	416	;# 
 11133   0001A1                     C1MASK2H        equ	417	;# 
 11134   0001A2                     C1MASK2U        equ	418	;# 
 11135   0001A3                     C1MASK2T        equ	419	;# 
 11136   0001A4                     C1FLTOBJ3       equ	420	;# 
 11137   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11138   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11139   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11140   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11141   0001A8                     C1MASK3         equ	424	;# 
 11142   0001A8                     C1MASK3L        equ	424	;# 
 11143   0001A9                     C1MASK3H        equ	425	;# 
 11144   0001AA                     C1MASK3U        equ	426	;# 
 11145   0001AB                     C1MASK3T        equ	427	;# 
 11146   0001AC                     C1FLTOBJ4       equ	428	;# 
 11147   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11148   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11149   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11150   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11151   0001B0                     C1MASK4         equ	432	;# 
 11152   0001B0                     C1MASK4L        equ	432	;# 
 11153   0001B1                     C1MASK4H        equ	433	;# 
 11154   0001B2                     C1MASK4U        equ	434	;# 
 11155   0001B3                     C1MASK4T        equ	435	;# 
 11156   0001B4                     C1FLTOBJ5       equ	436	;# 
 11157   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11158   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11159   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11160   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11161   0001B8                     C1MASK5         equ	440	;# 
 11162   0001B8                     C1MASK5L        equ	440	;# 
 11163   0001B9                     C1MASK5H        equ	441	;# 
 11164   0001BA                     C1MASK5U        equ	442	;# 
 11165   0001BB                     C1MASK5T        equ	443	;# 
 11166   0001BC                     C1FLTOBJ6       equ	444	;# 
 11167   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11168   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11169   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11170   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11171   0001C0                     C1MASK6         equ	448	;# 
 11172   0001C0                     C1MASK6L        equ	448	;# 
 11173   0001C1                     C1MASK6H        equ	449	;# 
 11174   0001C2                     C1MASK6U        equ	450	;# 
 11175   0001C3                     C1MASK6T        equ	451	;# 
 11176   0001C4                     C1FLTOBJ7       equ	452	;# 
 11177   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11178   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11179   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11180   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11181   0001C8                     C1MASK7         equ	456	;# 
 11182   0001C8                     C1MASK7L        equ	456	;# 
 11183   0001C9                     C1MASK7H        equ	457	;# 
 11184   0001CA                     C1MASK7U        equ	458	;# 
 11185   0001CB                     C1MASK7T        equ	459	;# 
 11186   0001CC                     C1FLTOBJ8       equ	460	;# 
 11187   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11188   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11189   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11190   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11191   0001D0                     C1MASK8         equ	464	;# 
 11192   0001D0                     C1MASK8L        equ	464	;# 
 11193   0001D1                     C1MASK8H        equ	465	;# 
 11194   0001D2                     C1MASK8U        equ	466	;# 
 11195   0001D3                     C1MASK8T        equ	467	;# 
 11196   0001D4                     C1FLTOBJ9       equ	468	;# 
 11197   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11198   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11199   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11200   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11201   0001D8                     C1MASK9         equ	472	;# 
 11202   0001D8                     C1MASK9L        equ	472	;# 
 11203   0001D9                     C1MASK9H        equ	473	;# 
 11204   0001DA                     C1MASK9U        equ	474	;# 
 11205   0001DB                     C1MASK9T        equ	475	;# 
 11206   0001DC                     C1FLTOBJ10      equ	476	;# 
 11207   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11208   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11209   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11210   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11211   0001E0                     C1MASK10        equ	480	;# 
 11212   0001E0                     C1MASK10L       equ	480	;# 
 11213   0001E1                     C1MASK10H       equ	481	;# 
 11214   0001E2                     C1MASK10U       equ	482	;# 
 11215   0001E3                     C1MASK10T       equ	483	;# 
 11216   0001E4                     C1FLTOBJ11      equ	484	;# 
 11217   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11218   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11219   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11220   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11221   0001E8                     C1MASK11        equ	488	;# 
 11222   0001E8                     C1MASK11L       equ	488	;# 
 11223   0001E9                     C1MASK11H       equ	489	;# 
 11224   0001EA                     C1MASK11U       equ	490	;# 
 11225   0001EB                     C1MASK11T       equ	491	;# 
 11226   000200                     PPSLOCK         equ	512	;# 
 11227   000201                     RA0PPS          equ	513	;# 
 11228   000202                     RA1PPS          equ	514	;# 
 11229   000203                     RA2PPS          equ	515	;# 
 11230   000204                     RA3PPS          equ	516	;# 
 11231   000205                     RA4PPS          equ	517	;# 
 11232   000206                     RA5PPS          equ	518	;# 
 11233   000207                     RA6PPS          equ	519	;# 
 11234   000208                     RA7PPS          equ	520	;# 
 11235   000209                     RB0PPS          equ	521	;# 
 11236   00020A                     RB1PPS          equ	522	;# 
 11237   00020B                     RB2PPS          equ	523	;# 
 11238   00020C                     RB3PPS          equ	524	;# 
 11239   00020D                     RB4PPS          equ	525	;# 
 11240   00020E                     RB5PPS          equ	526	;# 
 11241   00020F                     RB6PPS          equ	527	;# 
 11242   000210                     RB7PPS          equ	528	;# 
 11243   000211                     RC0PPS          equ	529	;# 
 11244   000212                     RC1PPS          equ	530	;# 
 11245   000213                     RC2PPS          equ	531	;# 
 11246   000214                     RC3PPS          equ	532	;# 
 11247   000215                     RC4PPS          equ	533	;# 
 11248   000216                     RC5PPS          equ	534	;# 
 11249   000217                     RC6PPS          equ	535	;# 
 11250   000218                     RC7PPS          equ	536	;# 
 11251   00023D                     CANRXPPS        equ	573	;# 
 11252   00023E                     INT0PPS         equ	574	;# 
 11253   00023F                     INT1PPS         equ	575	;# 
 11254   000240                     INT2PPS         equ	576	;# 
 11255   000241                     T0CKIPPS        equ	577	;# 
 11256   000242                     T1CKIPPS        equ	578	;# 
 11257   000243                     T1GPPS          equ	579	;# 
 11258   000244                     T3CKIPPS        equ	580	;# 
 11259   000245                     T3GPPS          equ	581	;# 
 11260   000246                     T5CKIPPS        equ	582	;# 
 11261   000247                     T5GPPS          equ	583	;# 
 11262   000248                     T2INPPS         equ	584	;# 
 11263   000249                     T4INPPS         equ	585	;# 
 11264   00024A                     T6INPPS         equ	586	;# 
 11265   00024B                     TUIN0PPS        equ	587	;# 
 11266   00024C                     TUIN1PPS        equ	588	;# 
 11267   00024F                     CCP1PPS         equ	591	;# 
 11268   000250                     CCP2PPS         equ	592	;# 
 11269   000251                     CCP3PPS         equ	593	;# 
 11270   000253                     PWM1ERSPPS      equ	595	;# 
 11271   000254                     PWM2ERSPPS      equ	596	;# 
 11272   000255                     PWM3ERSPPS      equ	597	;# 
 11273   000256                     PWM4ERSPPS      equ	598	;# 
 11274   000257                     PWMIN0PPS       equ	599	;# 
 11275   000258                     PWMIN1PPS       equ	600	;# 
 11276   000259                     SMT1WINPPS      equ	601	;# 
 11277   00025A                     SMT1SIGPPS      equ	602	;# 
 11278   00025B                     CWG1PPS         equ	603	;# 
 11279   00025B                     CWG1INPPS       equ	603	;# 
 11280   00025C                     CWG2PPS         equ	604	;# 
 11281   00025C                     CWG2INPPS       equ	604	;# 
 11282   00025D                     CWG3PPS         equ	605	;# 
 11283   00025D                     CWG3INPPS       equ	605	;# 
 11284   00025E                     MD1CARLPPS      equ	606	;# 
 11285   00025E                     MDCARLPPS       equ	606	;# 
 11286   00025F                     MD1CARHPPS      equ	607	;# 
 11287   00025F                     MDCARHPPS       equ	607	;# 
 11288   000260                     MD1SRCPPS       equ	608	;# 
 11289   000260                     MDSRCPPS        equ	608	;# 
 11290   000261                     CLCIN0PPS       equ	609	;# 
 11291   000262                     CLCIN1PPS       equ	610	;# 
 11292   000263                     CLCIN2PPS       equ	611	;# 
 11293   000264                     CLCIN3PPS       equ	612	;# 
 11294   000265                     CLCIN4PPS       equ	613	;# 
 11295   000266                     CLCIN5PPS       equ	614	;# 
 11296   000267                     CLCIN6PPS       equ	615	;# 
 11297   000268                     CLCIN7PPS       equ	616	;# 
 11298   000269                     ADACTPPS        equ	617	;# 
 11299   00026A                     SPI1SCKPPS      equ	618	;# 
 11300   00026B                     SPI1SDIPPS      equ	619	;# 
 11301   00026C                     SPI1SSPPS       equ	620	;# 
 11302   00026D                     SPI2SCKPPS      equ	621	;# 
 11303   00026E                     SPI2SDIPPS      equ	622	;# 
 11304   00026F                     SPI2SSPPS       equ	623	;# 
 11305   000270                     I2C1SDAPPS      equ	624	;# 
 11306   000271                     I2C1SCLPPS      equ	625	;# 
 11307   000272                     U1RXPPS         equ	626	;# 
 11308   000273                     U1CTSPPS        equ	627	;# 
 11309   000274                     U2RXPPS         equ	628	;# 
 11310   000275                     U2CTSPPS        equ	629	;# 
 11311   000276                     U3RXPPS         equ	630	;# 
 11312   000277                     U3CTSPPS        equ	631	;# 
 11313   000278                     U4RXPPS         equ	632	;# 
 11314   000279                     U4CTSPPS        equ	633	;# 
 11315   00027A                     U5RXPPS         equ	634	;# 
 11316   00027B                     U5CTSPPS        equ	635	;# 
 11317   000286                     RC4I2C          equ	646	;# 
 11318   000287                     RC3I2C          equ	647	;# 
 11319   000288                     RB2I2C          equ	648	;# 
 11320   000289                     RB1I2C          equ	649	;# 
 11321   00028A                     I2C1RXB         equ	650	;# 
 11322   00028B                     I2C1TXB         equ	651	;# 
 11323   00028C                     I2C1CNTL        equ	652	;# 
 11324   00028D                     I2C1CNTH        equ	653	;# 
 11325   00028E                     I2C1ADB0        equ	654	;# 
 11326   00028F                     I2C1ADB1        equ	655	;# 
 11327   000290                     I2C1ADR0        equ	656	;# 
 11328   000291                     I2C1ADR1        equ	657	;# 
 11329   000292                     I2C1ADR2        equ	658	;# 
 11330   000293                     I2C1ADR3        equ	659	;# 
 11331   000294                     I2C1CON0        equ	660	;# 
 11332   000295                     I2C1CON1        equ	661	;# 
 11333   000296                     I2C1CON2        equ	662	;# 
 11334   000297                     I2C1ERR         equ	663	;# 
 11335   000298                     I2C1STAT0       equ	664	;# 
 11336   000299                     I2C1STAT1       equ	665	;# 
 11337   00029A                     I2C1PIR         equ	666	;# 
 11338   00029B                     I2C1PIE         equ	667	;# 
 11339   00029C                     I2C1BTO         equ	668	;# 
 11340   00029D                     I2C1BAUD        equ	669	;# 
 11341   00029E                     I2C1CLK         equ	670	;# 
 11342   00029F                     I2C1BTOC        equ	671	;# 
 11343   0002A1                     U1RXB           equ	673	;# 
 11344   0002A1                     U1RXBL          equ	673	;# 
 11345   0002A2                     U1RXCHK         equ	674	;# 
 11346   0002A3                     U1TXB           equ	675	;# 
 11347   0002A3                     U1TXBL          equ	675	;# 
 11348   0002A4                     U1TXCHK         equ	676	;# 
 11349   0002A5                     U1P1            equ	677	;# 
 11350   0002A5                     U1P1L           equ	677	;# 
 11351   0002A6                     U1P1H           equ	678	;# 
 11352   0002A7                     U1P2            equ	679	;# 
 11353   0002A7                     U1P2L           equ	679	;# 
 11354   0002A8                     U1P2H           equ	680	;# 
 11355   0002A9                     U1P3            equ	681	;# 
 11356   0002A9                     U1P3L           equ	681	;# 
 11357   0002AA                     U1P3H           equ	682	;# 
 11358   0002AB                     U1CON0          equ	683	;# 
 11359   0002AC                     U1CON1          equ	684	;# 
 11360   0002AD                     U1CON2          equ	685	;# 
 11361   0002AE                     U1BRG           equ	686	;# 
 11362   0002AE                     U1BRGL          equ	686	;# 
 11363   0002AF                     U1BRGH          equ	687	;# 
 11364   0002B0                     U1FIFO          equ	688	;# 
 11365   0002B1                     U1UIR           equ	689	;# 
 11366   0002B2                     U1ERRIR         equ	690	;# 
 11367   0002B3                     U1ERRIE         equ	691	;# 
 11368   0002B4                     U2RXB           equ	692	;# 
 11369   0002B4                     U2RXBL          equ	692	;# 
 11370   0002B5                     U2RXCHK         equ	693	;# 
 11371   0002B6                     U2TXB           equ	694	;# 
 11372   0002B6                     U2TXBL          equ	694	;# 
 11373   0002B7                     U2TXCHK         equ	695	;# 
 11374   0002B8                     U2P1            equ	696	;# 
 11375   0002B8                     U2P1L           equ	696	;# 
 11376   0002B9                     U2P1H           equ	697	;# 
 11377   0002BA                     U2P2            equ	698	;# 
 11378   0002BA                     U2P2L           equ	698	;# 
 11379   0002BB                     U2P2H           equ	699	;# 
 11380   0002BC                     U2P3            equ	700	;# 
 11381   0002BC                     U2P3L           equ	700	;# 
 11382   0002BD                     U2P3H           equ	701	;# 
 11383   0002BE                     U2CON0          equ	702	;# 
 11384   0002BF                     U2CON1          equ	703	;# 
 11385   0002C0                     U2CON2          equ	704	;# 
 11386   0002C1                     U2BRG           equ	705	;# 
 11387   0002C1                     U2BRGL          equ	705	;# 
 11388   0002C2                     U2BRGH          equ	706	;# 
 11389   0002C3                     U2FIFO          equ	707	;# 
 11390   0002C4                     U2UIR           equ	708	;# 
 11391   0002C5                     U2ERRIR         equ	709	;# 
 11392   0002C6                     U2ERRIE         equ	710	;# 
 11393   0002C7                     U3RXB           equ	711	;# 
 11394   0002C7                     U3RXBL          equ	711	;# 
 11395   0002C9                     U3TXB           equ	713	;# 
 11396   0002C9                     U3TXBL          equ	713	;# 
 11397   0002CB                     U3P1            equ	715	;# 
 11398   0002CB                     U3P1L           equ	715	;# 
 11399   0002CD                     U3P2            equ	717	;# 
 11400   0002CD                     U3P2L           equ	717	;# 
 11401   0002CF                     U3P3            equ	719	;# 
 11402   0002CF                     U3P3L           equ	719	;# 
 11403   0002D1                     U3CON0          equ	721	;# 
 11404   0002D2                     U3CON1          equ	722	;# 
 11405   0002D3                     U3CON2          equ	723	;# 
 11406   0002D4                     U3BRG           equ	724	;# 
 11407   0002D4                     U3BRGL          equ	724	;# 
 11408   0002D5                     U3BRGH          equ	725	;# 
 11409   0002D6                     U3FIFO          equ	726	;# 
 11410   0002D7                     U3UIR           equ	727	;# 
 11411   0002D8                     U3ERRIR         equ	728	;# 
 11412   0002D9                     U3ERRIE         equ	729	;# 
 11413   0002DA                     U4RXB           equ	730	;# 
 11414   0002DA                     U4RXBL          equ	730	;# 
 11415   0002DC                     U4TXB           equ	732	;# 
 11416   0002DC                     U4TXBL          equ	732	;# 
 11417   0002DE                     U4P1            equ	734	;# 
 11418   0002DE                     U4P1L           equ	734	;# 
 11419   0002E0                     U4P2            equ	736	;# 
 11420   0002E0                     U4P2L           equ	736	;# 
 11421   0002E2                     U4P3            equ	738	;# 
 11422   0002E2                     U4P3L           equ	738	;# 
 11423   0002E4                     U4CON0          equ	740	;# 
 11424   0002E5                     U4CON1          equ	741	;# 
 11425   0002E6                     U4CON2          equ	742	;# 
 11426   0002E7                     U4BRG           equ	743	;# 
 11427   0002E7                     U4BRGL          equ	743	;# 
 11428   0002E8                     U4BRGH          equ	744	;# 
 11429   0002E9                     U4FIFO          equ	745	;# 
 11430   0002EA                     U4UIR           equ	746	;# 
 11431   0002EB                     U4ERRIR         equ	747	;# 
 11432   0002EC                     U4ERRIE         equ	748	;# 
 11433   0002ED                     U5RXB           equ	749	;# 
 11434   0002ED                     U5RXBL          equ	749	;# 
 11435   0002EF                     U5TXB           equ	751	;# 
 11436   0002EF                     U5TXBL          equ	751	;# 
 11437   0002F1                     U5P1            equ	753	;# 
 11438   0002F1                     U5P1L           equ	753	;# 
 11439   0002F3                     U5P2            equ	755	;# 
 11440   0002F3                     U5P2L           equ	755	;# 
 11441   0002F5                     U5P3            equ	757	;# 
 11442   0002F5                     U5P3L           equ	757	;# 
 11443   0002F7                     U5CON0          equ	759	;# 
 11444   0002F8                     U5CON1          equ	760	;# 
 11445   0002F9                     U5CON2          equ	761	;# 
 11446   0002FA                     U5BRG           equ	762	;# 
 11447   0002FA                     U5BRGL          equ	762	;# 
 11448   0002FB                     U5BRGH          equ	763	;# 
 11449   0002FC                     U5FIFO          equ	764	;# 
 11450   0002FD                     U5UIR           equ	765	;# 
 11451   0002FE                     U5ERRIR         equ	766	;# 
 11452   0002FF                     U5ERRIE         equ	767	;# 
 11453   000300                     SMT1TMR         equ	768	;# 
 11454   000300                     SMT1TMRL        equ	768	;# 
 11455   000301                     SMT1TMRH        equ	769	;# 
 11456   000302                     SMT1TMRU        equ	770	;# 
 11457   000303                     SMT1CPR         equ	771	;# 
 11458   000303                     SMT1CPRL        equ	771	;# 
 11459   000304                     SMT1CPRH        equ	772	;# 
 11460   000305                     SMT1CPRU        equ	773	;# 
 11461   000306                     SMT1CPW         equ	774	;# 
 11462   000306                     SMT1CPWL        equ	774	;# 
 11463   000307                     SMT1CPWH        equ	775	;# 
 11464   000308                     SMT1CPWU        equ	776	;# 
 11465   000309                     SMT1PR          equ	777	;# 
 11466   000309                     SMT1PRL         equ	777	;# 
 11467   00030A                     SMT1PRH         equ	778	;# 
 11468   00030B                     SMT1PRU         equ	779	;# 
 11469   00030C                     SMT1CON0        equ	780	;# 
 11470   00030D                     SMT1CON1        equ	781	;# 
 11471   00030E                     SMT1STAT        equ	782	;# 
 11472   00030F                     SMT1CLK         equ	783	;# 
 11473   000310                     SMT1SIG         equ	784	;# 
 11474   000311                     SMT1WIN         equ	785	;# 
 11475   000318                     TMR0L           equ	792	;# 
 11476   000318                     TMR0            equ	792	;# 
 11477   000319                     TMR0H           equ	793	;# 
 11478   000319                     PR0             equ	793	;# 
 11479   00031A                     T0CON0          equ	794	;# 
 11480   00031B                     T0CON1          equ	795	;# 
 11481   00031C                     TMR1            equ	796	;# 
 11482   00031C                     TMR1L           equ	796	;# 
 11483   00031D                     TMR1H           equ	797	;# 
 11484   00031E                     T1CON           equ	798	;# 
 11485   00031E                     TMR1CON         equ	798	;# 
 11486   00031F                     T1GCON          equ	799	;# 
 11487   00031F                     TMR1GCON        equ	799	;# 
 11488   000320                     T1GATE          equ	800	;# 
 11489   000320                     TMR1GATE        equ	800	;# 
 11490   000321                     T1CLK           equ	801	;# 
 11491   000321                     TMR1CLK         equ	801	;# 
 11492   000321                     PR1             equ	801	;# 
 11493   000322                     T2TMR           equ	802	;# 
 11494   000322                     TMR2            equ	802	;# 
 11495   000323                     T2PR            equ	803	;# 
 11496   000323                     PR2             equ	803	;# 
 11497   000324                     T2CON           equ	804	;# 
 11498   000325                     T2HLT           equ	805	;# 
 11499   000326                     T2CLKCON        equ	806	;# 
 11500   000326                     T2CLK           equ	806	;# 
 11501   000327                     T2RST           equ	807	;# 
 11502   000328                     TMR3            equ	808	;# 
 11503   000328                     TMR3L           equ	808	;# 
 11504   000329                     TMR3H           equ	809	;# 
 11505   00032A                     T3CON           equ	810	;# 
 11506   00032A                     TMR3CON         equ	810	;# 
 11507   00032B                     T3GCON          equ	811	;# 
 11508   00032B                     TMR3GCON        equ	811	;# 
 11509   00032C                     T3GATE          equ	812	;# 
 11510   00032C                     TMR3GATE        equ	812	;# 
 11511   00032D                     T3CLK           equ	813	;# 
 11512   00032D                     TMR3CLK         equ	813	;# 
 11513   00032D                     PR3             equ	813	;# 
 11514   00032E                     T4TMR           equ	814	;# 
 11515   00032E                     TMR4            equ	814	;# 
 11516   00032F                     T4PR            equ	815	;# 
 11517   00032F                     PR4             equ	815	;# 
 11518   000330                     T4CON           equ	816	;# 
 11519   000331                     T4HLT           equ	817	;# 
 11520   000332                     T4CLKCON        equ	818	;# 
 11521   000332                     T4CLK           equ	818	;# 
 11522   000333                     T4RST           equ	819	;# 
 11523   000334                     TMR5            equ	820	;# 
 11524   000334                     TMR5L           equ	820	;# 
 11525   000335                     TMR5H           equ	821	;# 
 11526   000336                     T5CON           equ	822	;# 
 11527   000336                     TMR5CON         equ	822	;# 
 11528   000337                     T5GCON          equ	823	;# 
 11529   000337                     TMR5GCON        equ	823	;# 
 11530   000338                     T5GATE          equ	824	;# 
 11531   000338                     TMR5GATE        equ	824	;# 
 11532   000339                     T5CLK           equ	825	;# 
 11533   000339                     TMR5CLK         equ	825	;# 
 11534   000339                     PR5             equ	825	;# 
 11535   00033A                     T6TMR           equ	826	;# 
 11536   00033A                     TMR6            equ	826	;# 
 11537   00033B                     T6PR            equ	827	;# 
 11538   00033B                     PR6             equ	827	;# 
 11539   00033C                     T6CON           equ	828	;# 
 11540   00033D                     T6HLT           equ	829	;# 
 11541   00033E                     T6CLKCON        equ	830	;# 
 11542   00033E                     T6CLK           equ	830	;# 
 11543   00033F                     T6RST           equ	831	;# 
 11544   000340                     CCPR1           equ	832	;# 
 11545   000340                     CCPR1L          equ	832	;# 
 11546   000341                     CCPR1H          equ	833	;# 
 11547   000342                     CCP1CON         equ	834	;# 
 11548   000343                     CCP1CAP         equ	835	;# 
 11549   000344                     CCPR2           equ	836	;# 
 11550   000344                     CCPR2L          equ	836	;# 
 11551   000345                     CCPR2H          equ	837	;# 
 11552   000346                     CCP2CON         equ	838	;# 
 11553   000347                     CCP2CAP         equ	839	;# 
 11554   000348                     CCPR3           equ	840	;# 
 11555   000348                     CCPR3L          equ	840	;# 
 11556   000349                     CCPR3H          equ	841	;# 
 11557   00034A                     CCP3CON         equ	842	;# 
 11558   00034B                     CCP3CAP         equ	843	;# 
 11559   00034C                     CCPTMRS0        equ	844	;# 
 11560   00034F                     CRCDATA         equ	847	;# 
 11561   00034F                     CRCDATAL        equ	847	;# 
 11562   000350                     CRCDATAH        equ	848	;# 
 11563   000351                     CRCDATAU        equ	849	;# 
 11564   000352                     CRCDATAT        equ	850	;# 
 11565   000353                     CRCOUT          equ	851	;# 
 11566   000353                     CRCSHFT         equ	851	;# 
 11567   000353                     CRCXOR          equ	851	;# 
 11568   000353                     CRCOUTL         equ	851	;# 
 11569   000353                     CRCSHFTL        equ	851	;# 
 11570   000353                     CRCSHIFTL       equ	851	;# 
 11571   000353                     CRCXORL         equ	851	;# 
 11572   000354                     CRCOUTH         equ	852	;# 
 11573   000354                     CRCSHFTH        equ	852	;# 
 11574   000354                     CRCSHIFTH       equ	852	;# 
 11575   000354                     CRCXORH         equ	852	;# 
 11576   000355                     CRCOUTU         equ	853	;# 
 11577   000355                     CRCSHFTU        equ	853	;# 
 11578   000355                     CRCSHIFTU       equ	853	;# 
 11579   000355                     CRCXORU         equ	853	;# 
 11580   000356                     CRCOUTT         equ	854	;# 
 11581   000356                     CRCSHFTT        equ	854	;# 
 11582   000356                     CRCSHIFTT       equ	854	;# 
 11583   000356                     CRCXORT         equ	854	;# 
 11584   000357                     CRCCON0         equ	855	;# 
 11585   000358                     CRCCON1         equ	856	;# 
 11586   000359                     CRCCON2         equ	857	;# 
 11587   00035A                     SCANLADR        equ	858	;# 
 11588   00035A                     SCANLADRL       equ	858	;# 
 11589   00035B                     SCANLADRH       equ	859	;# 
 11590   00035C                     SCANLADRU       equ	860	;# 
 11591   00035D                     SCANHADR        equ	861	;# 
 11592   00035D                     SCANHADRL       equ	861	;# 
 11593   00035E                     SCANHADRH       equ	862	;# 
 11594   00035F                     SCANHADRU       equ	863	;# 
 11595   000360                     SCANCON0        equ	864	;# 
 11596   000361                     SCANTRIG        equ	865	;# 
 11597   000362                     IPR0            equ	866	;# 
 11598   000363                     IPR1            equ	867	;# 
 11599   000364                     IPR2            equ	868	;# 
 11600   000365                     IPR3            equ	869	;# 
 11601   000366                     IPR4            equ	870	;# 
 11602   000367                     IPR5            equ	871	;# 
 11603   000368                     IPR6            equ	872	;# 
 11604   000369                     IPR7            equ	873	;# 
 11605   00036A                     IPR8            equ	874	;# 
 11606   00036B                     IPR9            equ	875	;# 
 11607   00036C                     IPR10           equ	876	;# 
 11608   00036D                     IPR11           equ	877	;# 
 11609   00036E                     IPR12           equ	878	;# 
 11610   00036F                     IPR13           equ	879	;# 
 11611   000370                     IPR14           equ	880	;# 
 11612   000371                     IPR15           equ	881	;# 
 11613   000373                     STATUS_CSHAD    equ	883	;# 
 11614   000374                     WREG_CSHAD      equ	884	;# 
 11615   000375                     BSR_CSHAD       equ	885	;# 
 11616   000376                     SHADCON         equ	886	;# 
 11617   000377                     STATUS_SHAD     equ	887	;# 
 11618   000378                     WREG_SHAD       equ	888	;# 
 11619   000379                     BSR_SHAD        equ	889	;# 
 11620   00037A                     PCLATH_SHAD     equ	890	;# 
 11621   00037B                     PCLATU_SHAD     equ	891	;# 
 11622   00037C                     FSR0SH          equ	892	;# 
 11623   00037C                     FSR0L_SHAD      equ	892	;# 
 11624   00037D                     FSR0H_SHAD      equ	893	;# 
 11625   00037E                     FSR1SH          equ	894	;# 
 11626   00037E                     FSR1L_SHAD      equ	894	;# 
 11627   00037F                     FSR1H_SHAD      equ	895	;# 
 11628   000380                     FSR2SH          equ	896	;# 
 11629   000380                     FSR2L_SHAD      equ	896	;# 
 11630   000381                     FSR2H_SHAD      equ	897	;# 
 11631   000382                     PRODSH          equ	898	;# 
 11632   000382                     PRODL_SHAD      equ	898	;# 
 11633   000383                     PRODH_SHAD      equ	899	;# 
 11634   000387                     TU16ACON0       equ	903	;# 
 11635   000388                     TU16ACON1       equ	904	;# 
 11636   000389                     TU16AHLT        equ	905	;# 
 11637   00038A                     TU16APS         equ	906	;# 
 11638   00038B                     TU16ATMR        equ	907	;# 
 11639   00038B                     TU16ACR         equ	907	;# 
 11640   00038B                     TU16ATMRL       equ	907	;# 
 11641   00038B                     TU16ACRL        equ	907	;# 
 11642   00038C                     TU16ATMRH       equ	908	;# 
 11643   00038C                     TU16ACRH        equ	908	;# 
 11644   00038D                     TU16APR         equ	909	;# 
 11645   00038D                     TU16APRL        equ	909	;# 
 11646   00038E                     TU16APRH        equ	910	;# 
 11647   00038F                     TU16ACLK        equ	911	;# 
 11648   000390                     TU16AERS        equ	912	;# 
 11649   000393                     TU16BCON0       equ	915	;# 
 11650   000394                     TU16BCON1       equ	916	;# 
 11651   000395                     TU16BHLT        equ	917	;# 
 11652   000396                     TU16BPS         equ	918	;# 
 11653   000397                     TU16BTMR        equ	919	;# 
 11654   000397                     TU16BCR         equ	919	;# 
 11655   000397                     TU16BTMRL       equ	919	;# 
 11656   000397                     TU16BCRL        equ	919	;# 
 11657   000398                     TU16BTMRH       equ	920	;# 
 11658   000398                     TU16BCRH        equ	920	;# 
 11659   000399                     TU16BPR         equ	921	;# 
 11660   000399                     TU16BPRL        equ	921	;# 
 11661   00039A                     TU16BPRH        equ	922	;# 
 11662   00039B                     TU16BCLK        equ	923	;# 
 11663   00039C                     TU16BERS        equ	924	;# 
 11664   0003BB                     TUCHAIN         equ	955	;# 
 11665   0003BC                     CWG1CLK         equ	956	;# 
 11666   0003BC                     CWG1CLKCON      equ	956	;# 
 11667   0003BD                     CWG1ISM         equ	957	;# 
 11668   0003BE                     CWG1DBR         equ	958	;# 
 11669   0003BF                     CWG1DBF         equ	959	;# 
 11670   0003C0                     CWG1CON0        equ	960	;# 
 11671   0003C1                     CWG1CON1        equ	961	;# 
 11672   0003C2                     CWG1AS0         equ	962	;# 
 11673   0003C3                     CWG1AS1         equ	963	;# 
 11674   0003C4                     CWG1STR         equ	964	;# 
 11675   0003C5                     CWG2CLK         equ	965	;# 
 11676   0003C5                     CWG2CLKCON      equ	965	;# 
 11677   0003C6                     CWG2ISM         equ	966	;# 
 11678   0003C7                     CWG2DBR         equ	967	;# 
 11679   0003C8                     CWG2DBF         equ	968	;# 
 11680   0003C9                     CWG2CON0        equ	969	;# 
 11681   0003CA                     CWG2CON1        equ	970	;# 
 11682   0003CB                     CWG2AS0         equ	971	;# 
 11683   0003CC                     CWG2AS1         equ	972	;# 
 11684   0003CD                     CWG2STR         equ	973	;# 
 11685   0003CE                     CWG3CLK         equ	974	;# 
 11686   0003CE                     CWG3CLKCON      equ	974	;# 
 11687   0003CF                     CWG3ISM         equ	975	;# 
 11688   0003D0                     CWG3DBR         equ	976	;# 
 11689   0003D1                     CWG3DBF         equ	977	;# 
 11690   0003D2                     CWG3CON0        equ	978	;# 
 11691   0003D3                     CWG3CON1        equ	979	;# 
 11692   0003D4                     CWG3AS0         equ	980	;# 
 11693   0003D5                     CWG3AS1         equ	981	;# 
 11694   0003D6                     CWG3STR         equ	982	;# 
 11695   0003D7                     FVRCON          equ	983	;# 
 11696   0003D8                     ADCPCON         equ	984	;# 
 11697   0003D8                     ADCP            equ	984	;# 
 11698   0003D9                     ADLTH           equ	985	;# 
 11699   0003D9                     ADLTHL          equ	985	;# 
 11700   0003DA                     ADLTHH          equ	986	;# 
 11701   0003DB                     ADUTH           equ	987	;# 
 11702   0003DB                     ADUTHL          equ	987	;# 
 11703   0003DC                     ADUTHH          equ	988	;# 
 11704   0003DD                     ADERR           equ	989	;# 
 11705   0003DD                     ADERRL          equ	989	;# 
 11706   0003DE                     ADERRH          equ	990	;# 
 11707   0003DF                     ADSTPT          equ	991	;# 
 11708   0003DF                     ADSTPTL         equ	991	;# 
 11709   0003E0                     ADSTPTH         equ	992	;# 
 11710   0003E1                     ADFLTR          equ	993	;# 
 11711   0003E1                     ADFLTRL         equ	993	;# 
 11712   0003E2                     ADFLTRH         equ	994	;# 
 11713   0003E3                     ADACC           equ	995	;# 
 11714   0003E3                     ADACCL          equ	995	;# 
 11715   0003E4                     ADACCH          equ	996	;# 
 11716   0003E5                     ADACCU          equ	997	;# 
 11717   0003E6                     ADCNT           equ	998	;# 
 11718   0003E7                     ADRPT           equ	999	;# 
 11719   0003E8                     ADPREV          equ	1000	;# 
 11720   0003E8                     ADPREVL         equ	1000	;# 
 11721   0003E9                     ADPREVH         equ	1001	;# 
 11722   0003EA                     ADRES           equ	1002	;# 
 11723   0003EA                     ADRESL          equ	1002	;# 
 11724   0003EB                     ADRESH          equ	1003	;# 
 11725   0003EC                     ADPCH           equ	1004	;# 
 11726   0003EE                     ADACQ           equ	1006	;# 
 11727   0003EE                     ADACQL          equ	1006	;# 
 11728   0003EF                     ADACQH          equ	1007	;# 
 11729   0003F0                     ADCAP           equ	1008	;# 
 11730   0003F1                     ADPRE           equ	1009	;# 
 11731   0003F1                     ADPREL          equ	1009	;# 
 11732   0003F2                     ADPREH          equ	1010	;# 
 11733   0003F3                     ADCON0          equ	1011	;# 
 11734   0003F4                     ADCON1          equ	1012	;# 
 11735   0003F5                     ADCON2          equ	1013	;# 
 11736   0003F6                     ADCON3          equ	1014	;# 
 11737   0003F7                     ADSTAT          equ	1015	;# 
 11738   0003F8                     ADREF           equ	1016	;# 
 11739   0003F9                     ADACT           equ	1017	;# 
 11740   0003FA                     ADCLK           equ	1018	;# 
 11741   0003FB                     ADCTX           equ	1019	;# 
 11742   0003FC                     ADCSEL1         equ	1020	;# 
 11743   0003FD                     ADCSEL2         equ	1021	;# 
 11744   0003FE                     ADCSEL3         equ	1022	;# 
 11745   0003FF                     ADCSEL4         equ	1023	;# 
 11746   000400                     ANSELA          equ	1024	;# 
 11747   000401                     WPUA            equ	1025	;# 
 11748   000402                     ODCONA          equ	1026	;# 
 11749   000403                     SLRCONA         equ	1027	;# 
 11750   000404                     INLVLA          equ	1028	;# 
 11751   000405                     IOCAP           equ	1029	;# 
 11752   000406                     IOCAN           equ	1030	;# 
 11753   000407                     IOCAF           equ	1031	;# 
 11754   000408                     ANSELB          equ	1032	;# 
 11755   000409                     WPUB            equ	1033	;# 
 11756   00040A                     ODCONB          equ	1034	;# 
 11757   00040B                     SLRCONB         equ	1035	;# 
 11758   00040C                     INLVLB          equ	1036	;# 
 11759   00040D                     IOCBP           equ	1037	;# 
 11760   00040E                     IOCBN           equ	1038	;# 
 11761   00040F                     IOCBF           equ	1039	;# 
 11762   000410                     ANSELC          equ	1040	;# 
 11763   000411                     WPUC            equ	1041	;# 
 11764   000412                     ODCONC          equ	1042	;# 
 11765   000413                     SLRCONC         equ	1043	;# 
 11766   000414                     INLVLC          equ	1044	;# 
 11767   000415                     IOCCP           equ	1045	;# 
 11768   000416                     IOCCN           equ	1046	;# 
 11769   000417                     IOCCF           equ	1047	;# 
 11770   000421                     WPUE            equ	1057	;# 
 11771   000424                     INLVLE          equ	1060	;# 
 11772   000425                     IOCEP           equ	1061	;# 
 11773   000426                     IOCEN           equ	1062	;# 
 11774   000427                     IOCEF           equ	1063	;# 
 11775   000440                     NCO1ACC         equ	1088	;# 
 11776   000440                     NCO1ACCL        equ	1088	;# 
 11777   000441                     NCO1ACCH        equ	1089	;# 
 11778   000442                     NCO1ACCU        equ	1090	;# 
 11779   000443                     NCO1INC         equ	1091	;# 
 11780   000443                     NCO1INCL        equ	1091	;# 
 11781   000444                     NCO1INCH        equ	1092	;# 
 11782   000445                     NCO1INCU        equ	1093	;# 
 11783   000446                     NCO1CON         equ	1094	;# 
 11784   000447                     NCO1CLK         equ	1095	;# 
 11785   000448                     NCO2ACC         equ	1096	;# 
 11786   000448                     NCO2ACCL        equ	1096	;# 
 11787   000449                     NCO2ACCH        equ	1097	;# 
 11788   00044A                     NCO2ACCU        equ	1098	;# 
 11789   00044B                     NCO2INC         equ	1099	;# 
 11790   00044B                     NCO2INCL        equ	1099	;# 
 11791   00044C                     NCO2INCH        equ	1100	;# 
 11792   00044D                     NCO2INCU        equ	1101	;# 
 11793   00044E                     NCO2CON         equ	1102	;# 
 11794   00044F                     NCO2CLK         equ	1103	;# 
 11795   000450                     NCO3ACC         equ	1104	;# 
 11796   000450                     NCO3ACCL        equ	1104	;# 
 11797   000451                     NCO3ACCH        equ	1105	;# 
 11798   000452                     NCO3ACCU        equ	1106	;# 
 11799   000453                     NCO3INC         equ	1107	;# 
 11800   000453                     NCO3INCL        equ	1107	;# 
 11801   000454                     NCO3INCH        equ	1108	;# 
 11802   000455                     NCO3INCU        equ	1109	;# 
 11803   000456                     NCO3CON         equ	1110	;# 
 11804   000457                     NCO3CLK         equ	1111	;# 
 11805   000458                     FSCMCON         equ	1112	;# 
 11806   000459                     IVTLOCK         equ	1113	;# 
 11807   00045A                     IVTAD           equ	1114	;# 
 11808   00045A                     IVTADL          equ	1114	;# 
 11809   00045B                     IVTADH          equ	1115	;# 
 11810   00045C                     IVTADU          equ	1116	;# 
 11811   00045D                     IVTBASE         equ	1117	;# 
 11812   00045D                     IVTBASEL        equ	1117	;# 
 11813   00045E                     IVTBASEH        equ	1118	;# 
 11814   00045F                     IVTBASEU        equ	1119	;# 
 11815   000460                     PWM1ERS         equ	1120	;# 
 11816   000461                     PWM1CLK         equ	1121	;# 
 11817   000462                     PWM1LDS         equ	1122	;# 
 11818   000463                     PWM1PR          equ	1123	;# 
 11819   000463                     PWM1PRL         equ	1123	;# 
 11820   000464                     PWM1PRH         equ	1124	;# 
 11821   000465                     PWM1CPRE        equ	1125	;# 
 11822   000466                     PWM1PIPOS       equ	1126	;# 
 11823   000467                     PWM1GIR         equ	1127	;# 
 11824   000468                     PWM1GIE         equ	1128	;# 
 11825   000469                     PWM1CON         equ	1129	;# 
 11826   00046A                     PWM1S1CFG       equ	1130	;# 
 11827   00046B                     PWM1S1P1        equ	1131	;# 
 11828   00046B                     PWM1S1P1L       equ	1131	;# 
 11829   00046C                     PWM1S1P1H       equ	1132	;# 
 11830   00046D                     PWM1S1P2        equ	1133	;# 
 11831   00046D                     PWM1S1P2L       equ	1133	;# 
 11832   00046E                     PWM1S1P2H       equ	1134	;# 
 11833   00046F                     PWM2ERS         equ	1135	;# 
 11834   000470                     PWM2CLK         equ	1136	;# 
 11835   000471                     PWM2LDS         equ	1137	;# 
 11836   000472                     PWM2PR          equ	1138	;# 
 11837   000472                     PWM2PRL         equ	1138	;# 
 11838   000473                     PWM2PRH         equ	1139	;# 
 11839   000474                     PWM2CPRE        equ	1140	;# 
 11840   000475                     PWM2PIPOS       equ	1141	;# 
 11841   000476                     PWM2GIR         equ	1142	;# 
 11842   000477                     PWM2GIE         equ	1143	;# 
 11843   000478                     PWM2CON         equ	1144	;# 
 11844   000479                     PWM2S1CFG       equ	1145	;# 
 11845   00047A                     PWM2S1P1        equ	1146	;# 
 11846   00047A                     PWM2S1P1L       equ	1146	;# 
 11847   00047B                     PWM2S1P1H       equ	1147	;# 
 11848   00047C                     PWM2S1P2        equ	1148	;# 
 11849   00047C                     PWM2S1P2L       equ	1148	;# 
 11850   00047D                     PWM2S1P2H       equ	1149	;# 
 11851   00047E                     PWM3ERS         equ	1150	;# 
 11852   00047F                     PWM3CLK         equ	1151	;# 
 11853   000480                     PWM3LDS         equ	1152	;# 
 11854   000481                     PWM3PR          equ	1153	;# 
 11855   000481                     PWM3PRL         equ	1153	;# 
 11856   000482                     PWM3PRH         equ	1154	;# 
 11857   000483                     PWM3CPRE        equ	1155	;# 
 11858   000484                     PWM3PIPOS       equ	1156	;# 
 11859   000485                     PWM3GIR         equ	1157	;# 
 11860   000486                     PWM3GIE         equ	1158	;# 
 11861   000487                     PWM3CON         equ	1159	;# 
 11862   000488                     PWM3S1CFG       equ	1160	;# 
 11863   000489                     PWM3S1P1        equ	1161	;# 
 11864   000489                     PWM3S1P1L       equ	1161	;# 
 11865   00048A                     PWM3S1P1H       equ	1162	;# 
 11866   00048B                     PWM3S1P2        equ	1163	;# 
 11867   00048B                     PWM3S1P2L       equ	1163	;# 
 11868   00048C                     PWM3S1P2H       equ	1164	;# 
 11869   00048D                     PWM4ERS         equ	1165	;# 
 11870   00048E                     PWM4CLK         equ	1166	;# 
 11871   00048F                     PWM4LDS         equ	1167	;# 
 11872   000490                     PWM4PR          equ	1168	;# 
 11873   000490                     PWM4PRL         equ	1168	;# 
 11874   000491                     PWM4PRH         equ	1169	;# 
 11875   000492                     PWM4CPRE        equ	1170	;# 
 11876   000493                     PWM4PIPOS       equ	1171	;# 
 11877   000494                     PWM4GIR         equ	1172	;# 
 11878   000495                     PWM4GIE         equ	1173	;# 
 11879   000496                     PWM4CON         equ	1174	;# 
 11880   000497                     PWM4S1CFG       equ	1175	;# 
 11881   000498                     PWM4S1P1        equ	1176	;# 
 11882   000498                     PWM4S1P1L       equ	1176	;# 
 11883   000499                     PWM4S1P1H       equ	1177	;# 
 11884   00049A                     PWM4S1P2        equ	1178	;# 
 11885   00049A                     PWM4S1P2L       equ	1178	;# 
 11886   00049B                     PWM4S1P2H       equ	1179	;# 
 11887   00049C                     PWMLOAD         equ	1180	;# 
 11888   00049D                     PWMEN           equ	1181	;# 
 11889   00049E                     PIE0            equ	1182	;# 
 11890   00049F                     PIE1            equ	1183	;# 
 11891   0004A0                     PIE2            equ	1184	;# 
 11892   0004A1                     PIE3            equ	1185	;# 
 11893   0004A2                     PIE4            equ	1186	;# 
 11894   0004A3                     PIE5            equ	1187	;# 
 11895   0004A4                     PIE6            equ	1188	;# 
 11896   0004A5                     PIE7            equ	1189	;# 
 11897   0004A6                     PIE8            equ	1190	;# 
 11898   0004A7                     PIE9            equ	1191	;# 
 11899   0004A8                     PIE10           equ	1192	;# 
 11900   0004A9                     PIE11           equ	1193	;# 
 11901   0004AA                     PIE12           equ	1194	;# 
 11902   0004AB                     PIE13           equ	1195	;# 
 11903   0004AC                     PIE14           equ	1196	;# 
 11904   0004AD                     PIE15           equ	1197	;# 
 11905   0004AE                     PIR0            equ	1198	;# 
 11906   0004AF                     PIR1            equ	1199	;# 
 11907   0004B0                     PIR2            equ	1200	;# 
 11908   0004B1                     PIR3            equ	1201	;# 
 11909   0004B2                     PIR4            equ	1202	;# 
 11910   0004B3                     PIR5            equ	1203	;# 
 11911   0004B4                     PIR6            equ	1204	;# 
 11912   0004B5                     PIR7            equ	1205	;# 
 11913   0004B6                     PIR8            equ	1206	;# 
 11914   0004B7                     PIR9            equ	1207	;# 
 11915   0004B8                     PIR10           equ	1208	;# 
 11916   0004B9                     PIR11           equ	1209	;# 
 11917   0004BA                     PIR12           equ	1210	;# 
 11918   0004BB                     PIR13           equ	1211	;# 
 11919   0004BC                     PIR14           equ	1212	;# 
 11920   0004BD                     PIR15           equ	1213	;# 
 11921   0004BE                     LATA            equ	1214	;# 
 11922   0004BF                     LATB            equ	1215	;# 
 11923   0004C0                     LATC            equ	1216	;# 
 11924   0004C6                     TRISA           equ	1222	;# 
 11925   0004C7                     TRISB           equ	1223	;# 
 11926   0004C8                     TRISC           equ	1224	;# 
 11927   0004CA                     TRISE           equ	1226	;# 
 11928   0004CE                     PORTA           equ	1230	;# 
 11929   0004CF                     PORTB           equ	1231	;# 
 11930   0004D0                     PORTC           equ	1232	;# 
 11931   0004D2                     PORTE           equ	1234	;# 
 11932   0004D6                     INTCON0         equ	1238	;# 
 11933   0004D7                     INTCON1         equ	1239	;# 
 11934   0004D8                     STATUS          equ	1240	;# 
 11935   0004D9                     FSR2            equ	1241	;# 
 11936   0004D9                     FSR2L           equ	1241	;# 
 11937   0004DA                     FSR2H           equ	1242	;# 
 11938   0004DB                     PLUSW2          equ	1243	;# 
 11939   0004DC                     PREINC2         equ	1244	;# 
 11940   0004DD                     POSTDEC2        equ	1245	;# 
 11941   0004DE                     POSTINC2        equ	1246	;# 
 11942   0004DF                     INDF2           equ	1247	;# 
 11943   0004E0                     BSR             equ	1248	;# 
 11944   0004E1                     FSR1            equ	1249	;# 
 11945   0004E1                     FSR1L           equ	1249	;# 
 11946   0004E2                     FSR1H           equ	1250	;# 
 11947   0004E3                     PLUSW1          equ	1251	;# 
 11948   0004E4                     PREINC1         equ	1252	;# 
 11949   0004E5                     POSTDEC1        equ	1253	;# 
 11950   0004E6                     POSTINC1        equ	1254	;# 
 11951   0004E7                     INDF1           equ	1255	;# 
 11952   0004E8                     WREG            equ	1256	;# 
 11953   0004E9                     FSR0            equ	1257	;# 
 11954   0004E9                     FSR0L           equ	1257	;# 
 11955   0004EA                     FSR0H           equ	1258	;# 
 11956   0004EB                     PLUSW0          equ	1259	;# 
 11957   0004EC                     PREINC0         equ	1260	;# 
 11958   0004ED                     POSTDEC0        equ	1261	;# 
 11959   0004EE                     POSTINC0        equ	1262	;# 
 11960   0004EF                     INDF0           equ	1263	;# 
 11961   0004F0                     PCON0           equ	1264	;# 
 11962   0004F1                     PCON1           equ	1265	;# 
 11963   0004F2                     CPUDOZE         equ	1266	;# 
 11964   0004F3                     PROD            equ	1267	;# 
 11965   0004F3                     PRODL           equ	1267	;# 
 11966   0004F4                     PRODH           equ	1268	;# 
 11967   0004F5                     TABLAT          equ	1269	;# 
 11968   0004F6                     TBLPTR          equ	1270	;# 
 11969   0004F6                     TBLPTRL         equ	1270	;# 
 11970   0004F7                     TBLPTRH         equ	1271	;# 
 11971   0004F8                     TBLPTRU         equ	1272	;# 
 11972   0004F9                     PCLAT           equ	1273	;# 
 11973   0004F9                     PCL             equ	1273	;# 
 11974   0004FA                     PCLATH          equ	1274	;# 
 11975   0004FB                     PCLATU          equ	1275	;# 
 11976   0004FC                     STKPTR          equ	1276	;# 
 11977   0004FD                     TOS             equ	1277	;# 
 11978   0004FD                     TOSL            equ	1277	;# 
 11979   0004FE                     TOSH            equ	1278	;# 
 11980   0004FF                     TOSU            equ	1279	;# 
 11981   000038                     BOOTREG         equ	56	;# 
 11982   000039                     CLKRCON         equ	57	;# 
 11983   00003A                     CLKRCLK         equ	58	;# 
 11984   000040                     NVMCON0         equ	64	;# 
 11985   000041                     NVMCON1         equ	65	;# 
 11986   000042                     NVMLOCK         equ	66	;# 
 11987   000043                     NVMADR          equ	67	;# 
 11988   000043                     NVMADRL         equ	67	;# 
 11989   000044                     NVMADRH         equ	68	;# 
 11990   000045                     NVMADRU         equ	69	;# 
 11991   000046                     NVMDAT          equ	70	;# 
 11992   000046                     NVMDATL         equ	70	;# 
 11993   000047                     NVMDATH         equ	71	;# 
 11994   000048                     VREGCON         equ	72	;# 
 11995   000049                     BORCON          equ	73	;# 
 11996   00004A                     HLVDCON0        equ	74	;# 
 11997   00004B                     HLVDCON1        equ	75	;# 
 11998   00004C                     ZCDCON          equ	76	;# 
 11999   000060                     PMD0            equ	96	;# 
 12000   000061                     PMD1            equ	97	;# 
 12001   000062                     PMD2            equ	98	;# 
 12002   000063                     PMD3            equ	99	;# 
 12003   000064                     PMD4            equ	100	;# 
 12004   000065                     PMD5            equ	101	;# 
 12005   000066                     PMD6            equ	102	;# 
 12006   000067                     PMD7            equ	103	;# 
 12007   000068                     PMD8            equ	104	;# 
 12008   00006A                     MD1CON0         equ	106	;# 
 12009   00006B                     MD1CON1         equ	107	;# 
 12010   00006C                     MD1SRC          equ	108	;# 
 12011   00006D                     MD1CARL         equ	109	;# 
 12012   00006E                     MD1CARH         equ	110	;# 
 12013   00006F                     CMOUT           equ	111	;# 
 12014   000070                     CM1CON0         equ	112	;# 
 12015   000071                     CM1CON1         equ	113	;# 
 12016   000072                     CM1NCH          equ	114	;# 
 12017   000073                     CM1PCH          equ	115	;# 
 12018   000074                     CM2CON0         equ	116	;# 
 12019   000075                     CM2CON1         equ	117	;# 
 12020   000076                     CM2NCH          equ	118	;# 
 12021   000077                     CM2PCH          equ	119	;# 
 12022   000078                     WDTCON0         equ	120	;# 
 12023   000079                     WDTCON1         equ	121	;# 
 12024   00007A                     WDTPSL          equ	122	;# 
 12025   00007B                     WDTPSH          equ	123	;# 
 12026   00007C                     WDTTMR          equ	124	;# 
 12027   00007D                     DAC1DAT         equ	125	;# 
 12028   00007D                     DAC1DATL        equ	125	;# 
 12029   00007F                     DAC1CON         equ	127	;# 
 12030   000080                     SPI1RXB         equ	128	;# 
 12031   000081                     SPI1TXB         equ	129	;# 
 12032   000082                     SPI1TCNT        equ	130	;# 
 12033   000082                     SPI1TCNTL       equ	130	;# 
 12034   000083                     SPI1TCNTH       equ	131	;# 
 12035   000084                     SPI1CON0        equ	132	;# 
 12036   000085                     SPI1CON1        equ	133	;# 
 12037   000086                     SPI1CON2        equ	134	;# 
 12038   000087                     SPI1STATUS      equ	135	;# 
 12039   000088                     SPI1TWIDTH      equ	136	;# 
 12040   000089                     SPI1BAUD        equ	137	;# 
 12041   00008A                     SPI1INTF        equ	138	;# 
 12042   00008B                     SPI1INTE        equ	139	;# 
 12043   00008C                     SPI1CLK         equ	140	;# 
 12044   00008D                     SPI2RXB         equ	141	;# 
 12045   00008E                     SPI2TXB         equ	142	;# 
 12046   00008F                     SPI2TCNT        equ	143	;# 
 12047   00008F                     SPI2TCNTL       equ	143	;# 
 12048   000090                     SPI2TCNTH       equ	144	;# 
 12049   000091                     SPI2CON0        equ	145	;# 
 12050   000092                     SPI2CON1        equ	146	;# 
 12051   000093                     SPI2CON2        equ	147	;# 
 12052   000094                     SPI2STATUS      equ	148	;# 
 12053   000095                     SPI2TWIDTH      equ	149	;# 
 12054   000096                     SPI2BAUD        equ	150	;# 
 12055   000097                     SPI2INTF        equ	151	;# 
 12056   000098                     SPI2INTE        equ	152	;# 
 12057   000099                     SPI2CLK         equ	153	;# 
 12058   0000AC                     ACTCON          equ	172	;# 
 12059   0000AD                     OSCCON1         equ	173	;# 
 12060   0000AE                     OSCCON2         equ	174	;# 
 12061   0000AF                     OSCCON3         equ	175	;# 
 12062   0000B0                     OSCTUNE         equ	176	;# 
 12063   0000B1                     OSCFRQ          equ	177	;# 
 12064   0000B1                     OSCFREQ         equ	177	;# 
 12065   0000B2                     OSCSTAT         equ	178	;# 
 12066   0000B2                     OSCSTAT1        equ	178	;# 
 12067   0000B3                     OSCEN           equ	179	;# 
 12068   0000B4                     PRLOCK          equ	180	;# 
 12069   0000B5                     SCANPR          equ	181	;# 
 12070   0000B6                     DMA1PR          equ	182	;# 
 12071   0000B7                     DMA2PR          equ	183	;# 
 12072   0000B8                     DMA3PR          equ	184	;# 
 12073   0000B9                     DMA4PR          equ	185	;# 
 12074   0000BA                     DMA5PR          equ	186	;# 
 12075   0000BB                     DMA6PR          equ	187	;# 
 12076   0000BC                     DMA7PR          equ	188	;# 
 12077   0000BD                     DMA8PR          equ	189	;# 
 12078   0000BE                     MAINPR          equ	190	;# 
 12079   0000BF                     ISRPR           equ	191	;# 
 12080   0000D4                     CLCDATA         equ	212	;# 
 12081   0000D5                     CLCSELECT       equ	213	;# 
 12082   0000D6                     CLCnCON         equ	214	;# 
 12083   0000D7                     CLCnPOL         equ	215	;# 
 12084   0000D8                     CLCnSEL0        equ	216	;# 
 12085   0000D9                     CLCnSEL1        equ	217	;# 
 12086   0000DA                     CLCnSEL2        equ	218	;# 
 12087   0000DB                     CLCnSEL3        equ	219	;# 
 12088   0000DC                     CLCnGLS0        equ	220	;# 
 12089   0000DD                     CLCnGLS1        equ	221	;# 
 12090   0000DE                     CLCnGLS2        equ	222	;# 
 12091   0000DF                     CLCnGLS3        equ	223	;# 
 12092   0000E8                     DMASELECT       equ	232	;# 
 12093   0000E9                     DMAnBUF         equ	233	;# 
 12094   0000EA                     DMAnDCNT        equ	234	;# 
 12095   0000EA                     DMAnDCNTL       equ	234	;# 
 12096   0000EB                     DMAnDCNTH       equ	235	;# 
 12097   0000EC                     DMAnDPTR        equ	236	;# 
 12098   0000EC                     DMAnDPTRL       equ	236	;# 
 12099   0000ED                     DMAnDPTRH       equ	237	;# 
 12100   0000EE                     DMAnDSZ         equ	238	;# 
 12101   0000EE                     DMAnDSZL        equ	238	;# 
 12102   0000EF                     DMAnDSZH        equ	239	;# 
 12103   0000F0                     DMAnDSA         equ	240	;# 
 12104   0000F0                     DMAnDSAL        equ	240	;# 
 12105   0000F1                     DMAnDSAH        equ	241	;# 
 12106   0000F2                     DMAnSCNT        equ	242	;# 
 12107   0000F2                     DMAnSCNTL       equ	242	;# 
 12108   0000F3                     DMAnSCNTH       equ	243	;# 
 12109   0000F4                     DMAnSPTR        equ	244	;# 
 12110   0000F4                     DMAnSPTRL       equ	244	;# 
 12111   0000F5                     DMAnSPTRH       equ	245	;# 
 12112   0000F6                     DMAnSPTRU       equ	246	;# 
 12113   0000F7                     DMAnSSZ         equ	247	;# 
 12114   0000F7                     DMAnSSZL        equ	247	;# 
 12115   0000F8                     DMAnSSZH        equ	248	;# 
 12116   0000F9                     DMAnSSA         equ	249	;# 
 12117   0000F9                     DMAnSSAL        equ	249	;# 
 12118   0000FA                     DMAnSSAH        equ	250	;# 
 12119   0000FB                     DMAnSSAU        equ	251	;# 
 12120   0000FC                     DMAnCON0        equ	252	;# 
 12121   0000FD                     DMAnCON1        equ	253	;# 
 12122   0000FE                     DMAnAIRQ        equ	254	;# 
 12123   0000FF                     DMAnSIRQ        equ	255	;# 
 12124   000100                     C1CONL          equ	256	;# 
 12125   000101                     C1CONH          equ	257	;# 
 12126   000102                     C1CONU          equ	258	;# 
 12127   000103                     C1CONT          equ	259	;# 
 12128   000104                     C1NBTCFGL       equ	260	;# 
 12129   000105                     C1NBTCFGH       equ	261	;# 
 12130   000106                     C1NBTCFGU       equ	262	;# 
 12131   000107                     C1NBTCFGT       equ	263	;# 
 12132   000108                     C1DBTCFGL       equ	264	;# 
 12133   000109                     C1DBTCFGH       equ	265	;# 
 12134   00010A                     C1DBTCFGU       equ	266	;# 
 12135   00010B                     C1DBTCFGT       equ	267	;# 
 12136   00010C                     C1TDCL          equ	268	;# 
 12137   00010D                     C1TDCH          equ	269	;# 
 12138   00010E                     C1TDCU          equ	270	;# 
 12139   000110                     C1TBC           equ	272	;# 
 12140   000110                     C1TBCL          equ	272	;# 
 12141   000111                     C1TBCH          equ	273	;# 
 12142   000112                     C1TBCU          equ	274	;# 
 12143   000113                     C1TBCT          equ	275	;# 
 12144   000114                     C1TSCONL        equ	276	;# 
 12145   000115                     C1TSCONH        equ	277	;# 
 12146   000116                     C1TSCONU        equ	278	;# 
 12147   000117                     C1TSCONT        equ	279	;# 
 12148   000118                     C1VECL          equ	280	;# 
 12149   000119                     C1VECH          equ	281	;# 
 12150   00011A                     C1VECU          equ	282	;# 
 12151   00011B                     C1VECT          equ	283	;# 
 12152   00011C                     C1INTL          equ	284	;# 
 12153   00011D                     C1INTH          equ	285	;# 
 12154   00011E                     C1INTU          equ	286	;# 
 12155   00011F                     C1INTT          equ	287	;# 
 12156   000120                     C1RXIF          equ	288	;# 
 12157   000120                     C1RXIFL         equ	288	;# 
 12158   000121                     C1RXIFH         equ	289	;# 
 12159   000122                     C1RXIFU         equ	290	;# 
 12160   000123                     C1RXIFT         equ	291	;# 
 12161   000124                     C1TXIF          equ	292	;# 
 12162   000124                     C1TXIFL         equ	292	;# 
 12163   000125                     C1TXIFH         equ	293	;# 
 12164   000126                     C1TXIFU         equ	294	;# 
 12165   000127                     C1TXIFT         equ	295	;# 
 12166   000128                     C1RXOVIF        equ	296	;# 
 12167   000128                     C1RXOVIFL       equ	296	;# 
 12168   000129                     C1RXOVIFH       equ	297	;# 
 12169   00012A                     C1RXOVIFU       equ	298	;# 
 12170   00012B                     C1RXOVIFT       equ	299	;# 
 12171   00012C                     C1TXATIF        equ	300	;# 
 12172   00012C                     C1TXATIFL       equ	300	;# 
 12173   00012D                     C1TXATIFH       equ	301	;# 
 12174   00012E                     C1TXATIFU       equ	302	;# 
 12175   00012F                     C1TXATIFT       equ	303	;# 
 12176   000130                     C1TXREQ         equ	304	;# 
 12177   000130                     C1TXREQL        equ	304	;# 
 12178   000131                     C1TXREQH        equ	305	;# 
 12179   000132                     C1TXREQU        equ	306	;# 
 12180   000133                     C1TXREQT        equ	307	;# 
 12181   000134                     C1TRECL         equ	308	;# 
 12182   000135                     C1TRECH         equ	309	;# 
 12183   000136                     C1TRECU         equ	310	;# 
 12184   000137                     C1TRECT         equ	311	;# 
 12185   000138                     C1BDIAG0L       equ	312	;# 
 12186   000139                     C1BDIAG0H       equ	313	;# 
 12187   00013C                     C1BDIAG1L       equ	316	;# 
 12188   00013D                     C1BDIAG1H       equ	317	;# 
 12189   00013E                     C1BDIAG1U       equ	318	;# 
 12190   00013F                     C1BDIAG1T       equ	319	;# 
 12191   000140                     C1TEFCONL       equ	320	;# 
 12192   000141                     C1TEFCONH       equ	321	;# 
 12193   000142                     C1TEFCONU       equ	322	;# 
 12194   000143                     C1TEFCONT       equ	323	;# 
 12195   000144                     C1TEFSTAL       equ	324	;# 
 12196   000145                     C1TEFSTAH       equ	325	;# 
 12197   000146                     C1TEFSTAU       equ	326	;# 
 12198   000147                     C1TEFSTAT       equ	327	;# 
 12199   000148                     C1TEFUA         equ	328	;# 
 12200   000148                     C1TEFUAL        equ	328	;# 
 12201   000149                     C1TEFUAH        equ	329	;# 
 12202   00014A                     C1TEFUAU        equ	330	;# 
 12203   00014B                     C1TEFUAT        equ	331	;# 
 12204   00014C                     C1FIFOBA        equ	332	;# 
 12205   00014C                     C1FIFOBAL       equ	332	;# 
 12206   00014D                     C1FIFOBAH       equ	333	;# 
 12207   00014E                     C1FIFOBAU       equ	334	;# 
 12208   00014F                     C1FIFOBAT       equ	335	;# 
 12209   000150                     C1TXQCONL       equ	336	;# 
 12210   000151                     C1TXQCONH       equ	337	;# 
 12211   000152                     C1TXQCONU       equ	338	;# 
 12212   000153                     C1TXQCONT       equ	339	;# 
 12213   000154                     C1TXQSTAL       equ	340	;# 
 12214   000155                     C1TXQSTAH       equ	341	;# 
 12215   000156                     C1TXQSTAU       equ	342	;# 
 12216   000157                     C1TXQSTAT       equ	343	;# 
 12217   000158                     C1TXQUA         equ	344	;# 
 12218   000158                     C1TXQUAL        equ	344	;# 
 12219   000159                     C1TXQUAH        equ	345	;# 
 12220   00015A                     C1TXQUAU        equ	346	;# 
 12221   00015B                     C1TXQUAT        equ	347	;# 
 12222   00015C                     C1FIFOCON1      equ	348	;# 
 12223   00015C                     C1FIFOCON1L     equ	348	;# 
 12224   00015D                     C1FIFOCON1H     equ	349	;# 
 12225   00015E                     C1FIFOCON1U     equ	350	;# 
 12226   00015F                     C1FIFOCON1T     equ	351	;# 
 12227   000160                     C1FIFOSTA1      equ	352	;# 
 12228   000160                     C1FIFOSTA1L     equ	352	;# 
 12229   000161                     C1FIFOSTA1H     equ	353	;# 
 12230   000162                     C1FIFOSTA1U     equ	354	;# 
 12231   000163                     C1FIFOSTA1T     equ	355	;# 
 12232   000164                     C1FIFOUA1       equ	356	;# 
 12233   000164                     C1FIFOUA1L      equ	356	;# 
 12234   000165                     C1FIFOUA1H      equ	357	;# 
 12235   000166                     C1FIFOUA1U      equ	358	;# 
 12236   000167                     C1FIFOUA1T      equ	359	;# 
 12237   000168                     C1FIFOCON2      equ	360	;# 
 12238   000168                     C1FIFOCON2L     equ	360	;# 
 12239   000169                     C1FIFOCON2H     equ	361	;# 
 12240   00016A                     C1FIFOCON2U     equ	362	;# 
 12241   00016B                     C1FIFOCON2T     equ	363	;# 
 12242   00016C                     C1FIFOSTA2      equ	364	;# 
 12243   00016C                     C1FIFOSTA2L     equ	364	;# 
 12244   00016D                     C1FIFOSTA2H     equ	365	;# 
 12245   00016E                     C1FIFOSTA2U     equ	366	;# 
 12246   00016F                     C1FIFOSTA2T     equ	367	;# 
 12247   000170                     C1FIFOUA2       equ	368	;# 
 12248   000170                     C1FIFOUA2L      equ	368	;# 
 12249   000171                     C1FIFOUA2H      equ	369	;# 
 12250   000172                     C1FIFOUA2U      equ	370	;# 
 12251   000173                     C1FIFOUA2T      equ	371	;# 
 12252   000174                     C1FIFOCON3      equ	372	;# 
 12253   000174                     C1FIFOCON3L     equ	372	;# 
 12254   000175                     C1FIFOCON3H     equ	373	;# 
 12255   000176                     C1FIFOCON3U     equ	374	;# 
 12256   000177                     C1FIFOCON3T     equ	375	;# 
 12257   000178                     C1FIFOSTA3      equ	376	;# 
 12258   000178                     C1FIFOSTA3L     equ	376	;# 
 12259   000179                     C1FIFOSTA3H     equ	377	;# 
 12260   00017A                     C1FIFOSTA3U     equ	378	;# 
 12261   00017B                     C1FIFOSTA3T     equ	379	;# 
 12262   00017C                     C1FIFOUA3       equ	380	;# 
 12263   00017C                     C1FIFOUA3L      equ	380	;# 
 12264   00017D                     C1FIFOUA3H      equ	381	;# 
 12265   00017E                     C1FIFOUA3U      equ	382	;# 
 12266   00017F                     C1FIFOUA3T      equ	383	;# 
 12267   000180                     C1FLTCON0L      equ	384	;# 
 12268   000181                     C1FLTCON0H      equ	385	;# 
 12269   000182                     C1FLTCON0U      equ	386	;# 
 12270   000183                     C1FLTCON0T      equ	387	;# 
 12271   000184                     C1FLTCON1L      equ	388	;# 
 12272   000185                     C1FLTCON1H      equ	389	;# 
 12273   000186                     C1FLTCON1U      equ	390	;# 
 12274   000187                     C1FLTCON1T      equ	391	;# 
 12275   000188                     C1FLTCON2L      equ	392	;# 
 12276   000189                     C1FLTCON2H      equ	393	;# 
 12277   00018A                     C1FLTCON2U      equ	394	;# 
 12278   00018B                     C1FLTCON2T      equ	395	;# 
 12279   00018C                     C1FLTOBJ0       equ	396	;# 
 12280   00018C                     C1FLTOBJ0L      equ	396	;# 
 12281   00018D                     C1FLTOBJ0H      equ	397	;# 
 12282   00018E                     C1FLTOBJ0U      equ	398	;# 
 12283   00018F                     C1FLTOBJ0T      equ	399	;# 
 12284   000190                     C1MASK0         equ	400	;# 
 12285   000190                     C1MASK0L        equ	400	;# 
 12286   000191                     C1MASK0H        equ	401	;# 
 12287   000192                     C1MASK0U        equ	402	;# 
 12288   000193                     C1MASK0T        equ	403	;# 
 12289   000194                     C1FLTOBJ1       equ	404	;# 
 12290   000194                     C1FLTOBJ1L      equ	404	;# 
 12291   000195                     C1FLTOBJ1H      equ	405	;# 
 12292   000196                     C1FLTOBJ1U      equ	406	;# 
 12293   000197                     C1FLTOBJ1T      equ	407	;# 
 12294   000198                     C1MASK1         equ	408	;# 
 12295   000198                     C1MASK1L        equ	408	;# 
 12296   000199                     C1MASK1H        equ	409	;# 
 12297   00019A                     C1MASK1U        equ	410	;# 
 12298   00019B                     C1MASK1T        equ	411	;# 
 12299   00019C                     C1FLTOBJ2       equ	412	;# 
 12300   00019C                     C1FLTOBJ2L      equ	412	;# 
 12301   00019D                     C1FLTOBJ2H      equ	413	;# 
 12302   00019E                     C1FLTOBJ2U      equ	414	;# 
 12303   00019F                     C1FLTOBJ2T      equ	415	;# 
 12304   0001A0                     C1MASK2         equ	416	;# 
 12305   0001A0                     C1MASK2L        equ	416	;# 
 12306   0001A1                     C1MASK2H        equ	417	;# 
 12307   0001A2                     C1MASK2U        equ	418	;# 
 12308   0001A3                     C1MASK2T        equ	419	;# 
 12309   0001A4                     C1FLTOBJ3       equ	420	;# 
 12310   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12311   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12312   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12313   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12314   0001A8                     C1MASK3         equ	424	;# 
 12315   0001A8                     C1MASK3L        equ	424	;# 
 12316   0001A9                     C1MASK3H        equ	425	;# 
 12317   0001AA                     C1MASK3U        equ	426	;# 
 12318   0001AB                     C1MASK3T        equ	427	;# 
 12319   0001AC                     C1FLTOBJ4       equ	428	;# 
 12320   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12321   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12322   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12323   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12324   0001B0                     C1MASK4         equ	432	;# 
 12325   0001B0                     C1MASK4L        equ	432	;# 
 12326   0001B1                     C1MASK4H        equ	433	;# 
 12327   0001B2                     C1MASK4U        equ	434	;# 
 12328   0001B3                     C1MASK4T        equ	435	;# 
 12329   0001B4                     C1FLTOBJ5       equ	436	;# 
 12330   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12331   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12332   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12333   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12334   0001B8                     C1MASK5         equ	440	;# 
 12335   0001B8                     C1MASK5L        equ	440	;# 
 12336   0001B9                     C1MASK5H        equ	441	;# 
 12337   0001BA                     C1MASK5U        equ	442	;# 
 12338   0001BB                     C1MASK5T        equ	443	;# 
 12339   0001BC                     C1FLTOBJ6       equ	444	;# 
 12340   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12341   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12342   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12343   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12344   0001C0                     C1MASK6         equ	448	;# 
 12345   0001C0                     C1MASK6L        equ	448	;# 
 12346   0001C1                     C1MASK6H        equ	449	;# 
 12347   0001C2                     C1MASK6U        equ	450	;# 
 12348   0001C3                     C1MASK6T        equ	451	;# 
 12349   0001C4                     C1FLTOBJ7       equ	452	;# 
 12350   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12351   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12352   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12353   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12354   0001C8                     C1MASK7         equ	456	;# 
 12355   0001C8                     C1MASK7L        equ	456	;# 
 12356   0001C9                     C1MASK7H        equ	457	;# 
 12357   0001CA                     C1MASK7U        equ	458	;# 
 12358   0001CB                     C1MASK7T        equ	459	;# 
 12359   0001CC                     C1FLTOBJ8       equ	460	;# 
 12360   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12361   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12362   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12363   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12364   0001D0                     C1MASK8         equ	464	;# 
 12365   0001D0                     C1MASK8L        equ	464	;# 
 12366   0001D1                     C1MASK8H        equ	465	;# 
 12367   0001D2                     C1MASK8U        equ	466	;# 
 12368   0001D3                     C1MASK8T        equ	467	;# 
 12369   0001D4                     C1FLTOBJ9       equ	468	;# 
 12370   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12371   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12372   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12373   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12374   0001D8                     C1MASK9         equ	472	;# 
 12375   0001D8                     C1MASK9L        equ	472	;# 
 12376   0001D9                     C1MASK9H        equ	473	;# 
 12377   0001DA                     C1MASK9U        equ	474	;# 
 12378   0001DB                     C1MASK9T        equ	475	;# 
 12379   0001DC                     C1FLTOBJ10      equ	476	;# 
 12380   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12381   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12382   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12383   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12384   0001E0                     C1MASK10        equ	480	;# 
 12385   0001E0                     C1MASK10L       equ	480	;# 
 12386   0001E1                     C1MASK10H       equ	481	;# 
 12387   0001E2                     C1MASK10U       equ	482	;# 
 12388   0001E3                     C1MASK10T       equ	483	;# 
 12389   0001E4                     C1FLTOBJ11      equ	484	;# 
 12390   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12391   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12392   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12393   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12394   0001E8                     C1MASK11        equ	488	;# 
 12395   0001E8                     C1MASK11L       equ	488	;# 
 12396   0001E9                     C1MASK11H       equ	489	;# 
 12397   0001EA                     C1MASK11U       equ	490	;# 
 12398   0001EB                     C1MASK11T       equ	491	;# 
 12399   000200                     PPSLOCK         equ	512	;# 
 12400   000201                     RA0PPS          equ	513	;# 
 12401   000202                     RA1PPS          equ	514	;# 
 12402   000203                     RA2PPS          equ	515	;# 
 12403   000204                     RA3PPS          equ	516	;# 
 12404   000205                     RA4PPS          equ	517	;# 
 12405   000206                     RA5PPS          equ	518	;# 
 12406   000207                     RA6PPS          equ	519	;# 
 12407   000208                     RA7PPS          equ	520	;# 
 12408   000209                     RB0PPS          equ	521	;# 
 12409   00020A                     RB1PPS          equ	522	;# 
 12410   00020B                     RB2PPS          equ	523	;# 
 12411   00020C                     RB3PPS          equ	524	;# 
 12412   00020D                     RB4PPS          equ	525	;# 
 12413   00020E                     RB5PPS          equ	526	;# 
 12414   00020F                     RB6PPS          equ	527	;# 
 12415   000210                     RB7PPS          equ	528	;# 
 12416   000211                     RC0PPS          equ	529	;# 
 12417   000212                     RC1PPS          equ	530	;# 
 12418   000213                     RC2PPS          equ	531	;# 
 12419   000214                     RC3PPS          equ	532	;# 
 12420   000215                     RC4PPS          equ	533	;# 
 12421   000216                     RC5PPS          equ	534	;# 
 12422   000217                     RC6PPS          equ	535	;# 
 12423   000218                     RC7PPS          equ	536	;# 
 12424   00023D                     CANRXPPS        equ	573	;# 
 12425   00023E                     INT0PPS         equ	574	;# 
 12426   00023F                     INT1PPS         equ	575	;# 
 12427   000240                     INT2PPS         equ	576	;# 
 12428   000241                     T0CKIPPS        equ	577	;# 
 12429   000242                     T1CKIPPS        equ	578	;# 
 12430   000243                     T1GPPS          equ	579	;# 
 12431   000244                     T3CKIPPS        equ	580	;# 
 12432   000245                     T3GPPS          equ	581	;# 
 12433   000246                     T5CKIPPS        equ	582	;# 
 12434   000247                     T5GPPS          equ	583	;# 
 12435   000248                     T2INPPS         equ	584	;# 
 12436   000249                     T4INPPS         equ	585	;# 
 12437   00024A                     T6INPPS         equ	586	;# 
 12438   00024B                     TUIN0PPS        equ	587	;# 
 12439   00024C                     TUIN1PPS        equ	588	;# 
 12440   00024F                     CCP1PPS         equ	591	;# 
 12441   000250                     CCP2PPS         equ	592	;# 
 12442   000251                     CCP3PPS         equ	593	;# 
 12443   000253                     PWM1ERSPPS      equ	595	;# 
 12444   000254                     PWM2ERSPPS      equ	596	;# 
 12445   000255                     PWM3ERSPPS      equ	597	;# 
 12446   000256                     PWM4ERSPPS      equ	598	;# 
 12447   000257                     PWMIN0PPS       equ	599	;# 
 12448   000258                     PWMIN1PPS       equ	600	;# 
 12449   000259                     SMT1WINPPS      equ	601	;# 
 12450   00025A                     SMT1SIGPPS      equ	602	;# 
 12451   00025B                     CWG1PPS         equ	603	;# 
 12452   00025B                     CWG1INPPS       equ	603	;# 
 12453   00025C                     CWG2PPS         equ	604	;# 
 12454   00025C                     CWG2INPPS       equ	604	;# 
 12455   00025D                     CWG3PPS         equ	605	;# 
 12456   00025D                     CWG3INPPS       equ	605	;# 
 12457   00025E                     MD1CARLPPS      equ	606	;# 
 12458   00025E                     MDCARLPPS       equ	606	;# 
 12459   00025F                     MD1CARHPPS      equ	607	;# 
 12460   00025F                     MDCARHPPS       equ	607	;# 
 12461   000260                     MD1SRCPPS       equ	608	;# 
 12462   000260                     MDSRCPPS        equ	608	;# 
 12463   000261                     CLCIN0PPS       equ	609	;# 
 12464   000262                     CLCIN1PPS       equ	610	;# 
 12465   000263                     CLCIN2PPS       equ	611	;# 
 12466   000264                     CLCIN3PPS       equ	612	;# 
 12467   000265                     CLCIN4PPS       equ	613	;# 
 12468   000266                     CLCIN5PPS       equ	614	;# 
 12469   000267                     CLCIN6PPS       equ	615	;# 
 12470   000268                     CLCIN7PPS       equ	616	;# 
 12471   000269                     ADACTPPS        equ	617	;# 
 12472   00026A                     SPI1SCKPPS      equ	618	;# 
 12473   00026B                     SPI1SDIPPS      equ	619	;# 
 12474   00026C                     SPI1SSPPS       equ	620	;# 
 12475   00026D                     SPI2SCKPPS      equ	621	;# 
 12476   00026E                     SPI2SDIPPS      equ	622	;# 
 12477   00026F                     SPI2SSPPS       equ	623	;# 
 12478   000270                     I2C1SDAPPS      equ	624	;# 
 12479   000271                     I2C1SCLPPS      equ	625	;# 
 12480   000272                     U1RXPPS         equ	626	;# 
 12481   000273                     U1CTSPPS        equ	627	;# 
 12482   000274                     U2RXPPS         equ	628	;# 
 12483   000275                     U2CTSPPS        equ	629	;# 
 12484   000276                     U3RXPPS         equ	630	;# 
 12485   000277                     U3CTSPPS        equ	631	;# 
 12486   000278                     U4RXPPS         equ	632	;# 
 12487   000279                     U4CTSPPS        equ	633	;# 
 12488   00027A                     U5RXPPS         equ	634	;# 
 12489   00027B                     U5CTSPPS        equ	635	;# 
 12490   000286                     RC4I2C          equ	646	;# 
 12491   000287                     RC3I2C          equ	647	;# 
 12492   000288                     RB2I2C          equ	648	;# 
 12493   000289                     RB1I2C          equ	649	;# 
 12494   00028A                     I2C1RXB         equ	650	;# 
 12495   00028B                     I2C1TXB         equ	651	;# 
 12496   00028C                     I2C1CNTL        equ	652	;# 
 12497   00028D                     I2C1CNTH        equ	653	;# 
 12498   00028E                     I2C1ADB0        equ	654	;# 
 12499   00028F                     I2C1ADB1        equ	655	;# 
 12500   000290                     I2C1ADR0        equ	656	;# 
 12501   000291                     I2C1ADR1        equ	657	;# 
 12502   000292                     I2C1ADR2        equ	658	;# 
 12503   000293                     I2C1ADR3        equ	659	;# 
 12504   000294                     I2C1CON0        equ	660	;# 
 12505   000295                     I2C1CON1        equ	661	;# 
 12506   000296                     I2C1CON2        equ	662	;# 
 12507   000297                     I2C1ERR         equ	663	;# 
 12508   000298                     I2C1STAT0       equ	664	;# 
 12509   000299                     I2C1STAT1       equ	665	;# 
 12510   00029A                     I2C1PIR         equ	666	;# 
 12511   00029B                     I2C1PIE         equ	667	;# 
 12512   00029C                     I2C1BTO         equ	668	;# 
 12513   00029D                     I2C1BAUD        equ	669	;# 
 12514   00029E                     I2C1CLK         equ	670	;# 
 12515   00029F                     I2C1BTOC        equ	671	;# 
 12516   0002A1                     U1RXB           equ	673	;# 
 12517   0002A1                     U1RXBL          equ	673	;# 
 12518   0002A2                     U1RXCHK         equ	674	;# 
 12519   0002A3                     U1TXB           equ	675	;# 
 12520   0002A3                     U1TXBL          equ	675	;# 
 12521   0002A4                     U1TXCHK         equ	676	;# 
 12522   0002A5                     U1P1            equ	677	;# 
 12523   0002A5                     U1P1L           equ	677	;# 
 12524   0002A6                     U1P1H           equ	678	;# 
 12525   0002A7                     U1P2            equ	679	;# 
 12526   0002A7                     U1P2L           equ	679	;# 
 12527   0002A8                     U1P2H           equ	680	;# 
 12528   0002A9                     U1P3            equ	681	;# 
 12529   0002A9                     U1P3L           equ	681	;# 
 12530   0002AA                     U1P3H           equ	682	;# 
 12531   0002AB                     U1CON0          equ	683	;# 
 12532   0002AC                     U1CON1          equ	684	;# 
 12533   0002AD                     U1CON2          equ	685	;# 
 12534   0002AE                     U1BRG           equ	686	;# 
 12535   0002AE                     U1BRGL          equ	686	;# 
 12536   0002AF                     U1BRGH          equ	687	;# 
 12537   0002B0                     U1FIFO          equ	688	;# 
 12538   0002B1                     U1UIR           equ	689	;# 
 12539   0002B2                     U1ERRIR         equ	690	;# 
 12540   0002B3                     U1ERRIE         equ	691	;# 
 12541   0002B4                     U2RXB           equ	692	;# 
 12542   0002B4                     U2RXBL          equ	692	;# 
 12543   0002B5                     U2RXCHK         equ	693	;# 
 12544   0002B6                     U2TXB           equ	694	;# 
 12545   0002B6                     U2TXBL          equ	694	;# 
 12546   0002B7                     U2TXCHK         equ	695	;# 
 12547   0002B8                     U2P1            equ	696	;# 
 12548   0002B8                     U2P1L           equ	696	;# 
 12549   0002B9                     U2P1H           equ	697	;# 
 12550   0002BA                     U2P2            equ	698	;# 
 12551   0002BA                     U2P2L           equ	698	;# 
 12552   0002BB                     U2P2H           equ	699	;# 
 12553   0002BC                     U2P3            equ	700	;# 
 12554   0002BC                     U2P3L           equ	700	;# 
 12555   0002BD                     U2P3H           equ	701	;# 
 12556   0002BE                     U2CON0          equ	702	;# 
 12557   0002BF                     U2CON1          equ	703	;# 
 12558   0002C0                     U2CON2          equ	704	;# 
 12559   0002C1                     U2BRG           equ	705	;# 
 12560   0002C1                     U2BRGL          equ	705	;# 
 12561   0002C2                     U2BRGH          equ	706	;# 
 12562   0002C3                     U2FIFO          equ	707	;# 
 12563   0002C4                     U2UIR           equ	708	;# 
 12564   0002C5                     U2ERRIR         equ	709	;# 
 12565   0002C6                     U2ERRIE         equ	710	;# 
 12566   0002C7                     U3RXB           equ	711	;# 
 12567   0002C7                     U3RXBL          equ	711	;# 
 12568   0002C9                     U3TXB           equ	713	;# 
 12569   0002C9                     U3TXBL          equ	713	;# 
 12570   0002CB                     U3P1            equ	715	;# 
 12571   0002CB                     U3P1L           equ	715	;# 
 12572   0002CD                     U3P2            equ	717	;# 
 12573   0002CD                     U3P2L           equ	717	;# 
 12574   0002CF                     U3P3            equ	719	;# 
 12575   0002CF                     U3P3L           equ	719	;# 
 12576   0002D1                     U3CON0          equ	721	;# 
 12577   0002D2                     U3CON1          equ	722	;# 
 12578   0002D3                     U3CON2          equ	723	;# 
 12579   0002D4                     U3BRG           equ	724	;# 
 12580   0002D4                     U3BRGL          equ	724	;# 
 12581   0002D5                     U3BRGH          equ	725	;# 
 12582   0002D6                     U3FIFO          equ	726	;# 
 12583   0002D7                     U3UIR           equ	727	;# 
 12584   0002D8                     U3ERRIR         equ	728	;# 
 12585   0002D9                     U3ERRIE         equ	729	;# 
 12586   0002DA                     U4RXB           equ	730	;# 
 12587   0002DA                     U4RXBL          equ	730	;# 
 12588   0002DC                     U4TXB           equ	732	;# 
 12589   0002DC                     U4TXBL          equ	732	;# 
 12590   0002DE                     U4P1            equ	734	;# 
 12591   0002DE                     U4P1L           equ	734	;# 
 12592   0002E0                     U4P2            equ	736	;# 
 12593   0002E0                     U4P2L           equ	736	;# 
 12594   0002E2                     U4P3            equ	738	;# 
 12595   0002E2                     U4P3L           equ	738	;# 
 12596   0002E4                     U4CON0          equ	740	;# 
 12597   0002E5                     U4CON1          equ	741	;# 
 12598   0002E6                     U4CON2          equ	742	;# 
 12599   0002E7                     U4BRG           equ	743	;# 
 12600   0002E7                     U4BRGL          equ	743	;# 
 12601   0002E8                     U4BRGH          equ	744	;# 
 12602   0002E9                     U4FIFO          equ	745	;# 
 12603   0002EA                     U4UIR           equ	746	;# 
 12604   0002EB                     U4ERRIR         equ	747	;# 
 12605   0002EC                     U4ERRIE         equ	748	;# 
 12606   0002ED                     U5RXB           equ	749	;# 
 12607   0002ED                     U5RXBL          equ	749	;# 
 12608   0002EF                     U5TXB           equ	751	;# 
 12609   0002EF                     U5TXBL          equ	751	;# 
 12610   0002F1                     U5P1            equ	753	;# 
 12611   0002F1                     U5P1L           equ	753	;# 
 12612   0002F3                     U5P2            equ	755	;# 
 12613   0002F3                     U5P2L           equ	755	;# 
 12614   0002F5                     U5P3            equ	757	;# 
 12615   0002F5                     U5P3L           equ	757	;# 
 12616   0002F7                     U5CON0          equ	759	;# 
 12617   0002F8                     U5CON1          equ	760	;# 
 12618   0002F9                     U5CON2          equ	761	;# 
 12619   0002FA                     U5BRG           equ	762	;# 
 12620   0002FA                     U5BRGL          equ	762	;# 
 12621   0002FB                     U5BRGH          equ	763	;# 
 12622   0002FC                     U5FIFO          equ	764	;# 
 12623   0002FD                     U5UIR           equ	765	;# 
 12624   0002FE                     U5ERRIR         equ	766	;# 
 12625   0002FF                     U5ERRIE         equ	767	;# 
 12626   000300                     SMT1TMR         equ	768	;# 
 12627   000300                     SMT1TMRL        equ	768	;# 
 12628   000301                     SMT1TMRH        equ	769	;# 
 12629   000302                     SMT1TMRU        equ	770	;# 
 12630   000303                     SMT1CPR         equ	771	;# 
 12631   000303                     SMT1CPRL        equ	771	;# 
 12632   000304                     SMT1CPRH        equ	772	;# 
 12633   000305                     SMT1CPRU        equ	773	;# 
 12634   000306                     SMT1CPW         equ	774	;# 
 12635   000306                     SMT1CPWL        equ	774	;# 
 12636   000307                     SMT1CPWH        equ	775	;# 
 12637   000308                     SMT1CPWU        equ	776	;# 
 12638   000309                     SMT1PR          equ	777	;# 
 12639   000309                     SMT1PRL         equ	777	;# 
 12640   00030A                     SMT1PRH         equ	778	;# 
 12641   00030B                     SMT1PRU         equ	779	;# 
 12642   00030C                     SMT1CON0        equ	780	;# 
 12643   00030D                     SMT1CON1        equ	781	;# 
 12644   00030E                     SMT1STAT        equ	782	;# 
 12645   00030F                     SMT1CLK         equ	783	;# 
 12646   000310                     SMT1SIG         equ	784	;# 
 12647   000311                     SMT1WIN         equ	785	;# 
 12648   000318                     TMR0L           equ	792	;# 
 12649   000318                     TMR0            equ	792	;# 
 12650   000319                     TMR0H           equ	793	;# 
 12651   000319                     PR0             equ	793	;# 
 12652   00031A                     T0CON0          equ	794	;# 
 12653   00031B                     T0CON1          equ	795	;# 
 12654   00031C                     TMR1            equ	796	;# 
 12655   00031C                     TMR1L           equ	796	;# 
 12656   00031D                     TMR1H           equ	797	;# 
 12657   00031E                     T1CON           equ	798	;# 
 12658   00031E                     TMR1CON         equ	798	;# 
 12659   00031F                     T1GCON          equ	799	;# 
 12660   00031F                     TMR1GCON        equ	799	;# 
 12661   000320                     T1GATE          equ	800	;# 
 12662   000320                     TMR1GATE        equ	800	;# 
 12663   000321                     T1CLK           equ	801	;# 
 12664   000321                     TMR1CLK         equ	801	;# 
 12665   000321                     PR1             equ	801	;# 
 12666   000322                     T2TMR           equ	802	;# 
 12667   000322                     TMR2            equ	802	;# 
 12668   000323                     T2PR            equ	803	;# 
 12669   000323                     PR2             equ	803	;# 
 12670   000324                     T2CON           equ	804	;# 
 12671   000325                     T2HLT           equ	805	;# 
 12672   000326                     T2CLKCON        equ	806	;# 
 12673   000326                     T2CLK           equ	806	;# 
 12674   000327                     T2RST           equ	807	;# 
 12675   000328                     TMR3            equ	808	;# 
 12676   000328                     TMR3L           equ	808	;# 
 12677   000329                     TMR3H           equ	809	;# 
 12678   00032A                     T3CON           equ	810	;# 
 12679   00032A                     TMR3CON         equ	810	;# 
 12680   00032B                     T3GCON          equ	811	;# 
 12681   00032B                     TMR3GCON        equ	811	;# 
 12682   00032C                     T3GATE          equ	812	;# 
 12683   00032C                     TMR3GATE        equ	812	;# 
 12684   00032D                     T3CLK           equ	813	;# 
 12685   00032D                     TMR3CLK         equ	813	;# 
 12686   00032D                     PR3             equ	813	;# 
 12687   00032E                     T4TMR           equ	814	;# 
 12688   00032E                     TMR4            equ	814	;# 
 12689   00032F                     T4PR            equ	815	;# 
 12690   00032F                     PR4             equ	815	;# 
 12691   000330                     T4CON           equ	816	;# 
 12692   000331                     T4HLT           equ	817	;# 
 12693   000332                     T4CLKCON        equ	818	;# 
 12694   000332                     T4CLK           equ	818	;# 
 12695   000333                     T4RST           equ	819	;# 
 12696   000334                     TMR5            equ	820	;# 
 12697   000334                     TMR5L           equ	820	;# 
 12698   000335                     TMR5H           equ	821	;# 
 12699   000336                     T5CON           equ	822	;# 
 12700   000336                     TMR5CON         equ	822	;# 
 12701   000337                     T5GCON          equ	823	;# 
 12702   000337                     TMR5GCON        equ	823	;# 
 12703   000338                     T5GATE          equ	824	;# 
 12704   000338                     TMR5GATE        equ	824	;# 
 12705   000339                     T5CLK           equ	825	;# 
 12706   000339                     TMR5CLK         equ	825	;# 
 12707   000339                     PR5             equ	825	;# 
 12708   00033A                     T6TMR           equ	826	;# 
 12709   00033A                     TMR6            equ	826	;# 
 12710   00033B                     T6PR            equ	827	;# 
 12711   00033B                     PR6             equ	827	;# 
 12712   00033C                     T6CON           equ	828	;# 
 12713   00033D                     T6HLT           equ	829	;# 
 12714   00033E                     T6CLKCON        equ	830	;# 
 12715   00033E                     T6CLK           equ	830	;# 
 12716   00033F                     T6RST           equ	831	;# 
 12717   000340                     CCPR1           equ	832	;# 
 12718   000340                     CCPR1L          equ	832	;# 
 12719   000341                     CCPR1H          equ	833	;# 
 12720   000342                     CCP1CON         equ	834	;# 
 12721   000343                     CCP1CAP         equ	835	;# 
 12722   000344                     CCPR2           equ	836	;# 
 12723   000344                     CCPR2L          equ	836	;# 
 12724   000345                     CCPR2H          equ	837	;# 
 12725   000346                     CCP2CON         equ	838	;# 
 12726   000347                     CCP2CAP         equ	839	;# 
 12727   000348                     CCPR3           equ	840	;# 
 12728   000348                     CCPR3L          equ	840	;# 
 12729   000349                     CCPR3H          equ	841	;# 
 12730   00034A                     CCP3CON         equ	842	;# 
 12731   00034B                     CCP3CAP         equ	843	;# 
 12732   00034C                     CCPTMRS0        equ	844	;# 
 12733   00034F                     CRCDATA         equ	847	;# 
 12734   00034F                     CRCDATAL        equ	847	;# 
 12735   000350                     CRCDATAH        equ	848	;# 
 12736   000351                     CRCDATAU        equ	849	;# 
 12737   000352                     CRCDATAT        equ	850	;# 
 12738   000353                     CRCOUT          equ	851	;# 
 12739   000353                     CRCSHFT         equ	851	;# 
 12740   000353                     CRCXOR          equ	851	;# 
 12741   000353                     CRCOUTL         equ	851	;# 
 12742   000353                     CRCSHFTL        equ	851	;# 
 12743   000353                     CRCSHIFTL       equ	851	;# 
 12744   000353                     CRCXORL         equ	851	;# 
 12745   000354                     CRCOUTH         equ	852	;# 
 12746   000354                     CRCSHFTH        equ	852	;# 
 12747   000354                     CRCSHIFTH       equ	852	;# 
 12748   000354                     CRCXORH         equ	852	;# 
 12749   000355                     CRCOUTU         equ	853	;# 
 12750   000355                     CRCSHFTU        equ	853	;# 
 12751   000355                     CRCSHIFTU       equ	853	;# 
 12752   000355                     CRCXORU         equ	853	;# 
 12753   000356                     CRCOUTT         equ	854	;# 
 12754   000356                     CRCSHFTT        equ	854	;# 
 12755   000356                     CRCSHIFTT       equ	854	;# 
 12756   000356                     CRCXORT         equ	854	;# 
 12757   000357                     CRCCON0         equ	855	;# 
 12758   000358                     CRCCON1         equ	856	;# 
 12759   000359                     CRCCON2         equ	857	;# 
 12760   00035A                     SCANLADR        equ	858	;# 
 12761   00035A                     SCANLADRL       equ	858	;# 
 12762   00035B                     SCANLADRH       equ	859	;# 
 12763   00035C                     SCANLADRU       equ	860	;# 
 12764   00035D                     SCANHADR        equ	861	;# 
 12765   00035D                     SCANHADRL       equ	861	;# 
 12766   00035E                     SCANHADRH       equ	862	;# 
 12767   00035F                     SCANHADRU       equ	863	;# 
 12768   000360                     SCANCON0        equ	864	;# 
 12769   000361                     SCANTRIG        equ	865	;# 
 12770   000362                     IPR0            equ	866	;# 
 12771   000363                     IPR1            equ	867	;# 
 12772   000364                     IPR2            equ	868	;# 
 12773   000365                     IPR3            equ	869	;# 
 12774   000366                     IPR4            equ	870	;# 
 12775   000367                     IPR5            equ	871	;# 
 12776   000368                     IPR6            equ	872	;# 
 12777   000369                     IPR7            equ	873	;# 
 12778   00036A                     IPR8            equ	874	;# 
 12779   00036B                     IPR9            equ	875	;# 
 12780   00036C                     IPR10           equ	876	;# 
 12781   00036D                     IPR11           equ	877	;# 
 12782   00036E                     IPR12           equ	878	;# 
 12783   00036F                     IPR13           equ	879	;# 
 12784   000370                     IPR14           equ	880	;# 
 12785   000371                     IPR15           equ	881	;# 
 12786   000373                     STATUS_CSHAD    equ	883	;# 
 12787   000374                     WREG_CSHAD      equ	884	;# 
 12788   000375                     BSR_CSHAD       equ	885	;# 
 12789   000376                     SHADCON         equ	886	;# 
 12790   000377                     STATUS_SHAD     equ	887	;# 
 12791   000378                     WREG_SHAD       equ	888	;# 
 12792   000379                     BSR_SHAD        equ	889	;# 
 12793   00037A                     PCLATH_SHAD     equ	890	;# 
 12794   00037B                     PCLATU_SHAD     equ	891	;# 
 12795   00037C                     FSR0SH          equ	892	;# 
 12796   00037C                     FSR0L_SHAD      equ	892	;# 
 12797   00037D                     FSR0H_SHAD      equ	893	;# 
 12798   00037E                     FSR1SH          equ	894	;# 
 12799   00037E                     FSR1L_SHAD      equ	894	;# 
 12800   00037F                     FSR1H_SHAD      equ	895	;# 
 12801   000380                     FSR2SH          equ	896	;# 
 12802   000380                     FSR2L_SHAD      equ	896	;# 
 12803   000381                     FSR2H_SHAD      equ	897	;# 
 12804   000382                     PRODSH          equ	898	;# 
 12805   000382                     PRODL_SHAD      equ	898	;# 
 12806   000383                     PRODH_SHAD      equ	899	;# 
 12807   000387                     TU16ACON0       equ	903	;# 
 12808   000388                     TU16ACON1       equ	904	;# 
 12809   000389                     TU16AHLT        equ	905	;# 
 12810   00038A                     TU16APS         equ	906	;# 
 12811   00038B                     TU16ATMR        equ	907	;# 
 12812   00038B                     TU16ACR         equ	907	;# 
 12813   00038B                     TU16ATMRL       equ	907	;# 
 12814   00038B                     TU16ACRL        equ	907	;# 
 12815   00038C                     TU16ATMRH       equ	908	;# 
 12816   00038C                     TU16ACRH        equ	908	;# 
 12817   00038D                     TU16APR         equ	909	;# 
 12818   00038D                     TU16APRL        equ	909	;# 
 12819   00038E                     TU16APRH        equ	910	;# 
 12820   00038F                     TU16ACLK        equ	911	;# 
 12821   000390                     TU16AERS        equ	912	;# 
 12822   000393                     TU16BCON0       equ	915	;# 
 12823   000394                     TU16BCON1       equ	916	;# 
 12824   000395                     TU16BHLT        equ	917	;# 
 12825   000396                     TU16BPS         equ	918	;# 
 12826   000397                     TU16BTMR        equ	919	;# 
 12827   000397                     TU16BCR         equ	919	;# 
 12828   000397                     TU16BTMRL       equ	919	;# 
 12829   000397                     TU16BCRL        equ	919	;# 
 12830   000398                     TU16BTMRH       equ	920	;# 
 12831   000398                     TU16BCRH        equ	920	;# 
 12832   000399                     TU16BPR         equ	921	;# 
 12833   000399                     TU16BPRL        equ	921	;# 
 12834   00039A                     TU16BPRH        equ	922	;# 
 12835   00039B                     TU16BCLK        equ	923	;# 
 12836   00039C                     TU16BERS        equ	924	;# 
 12837   0003BB                     TUCHAIN         equ	955	;# 
 12838   0003BC                     CWG1CLK         equ	956	;# 
 12839   0003BC                     CWG1CLKCON      equ	956	;# 
 12840   0003BD                     CWG1ISM         equ	957	;# 
 12841   0003BE                     CWG1DBR         equ	958	;# 
 12842   0003BF                     CWG1DBF         equ	959	;# 
 12843   0003C0                     CWG1CON0        equ	960	;# 
 12844   0003C1                     CWG1CON1        equ	961	;# 
 12845   0003C2                     CWG1AS0         equ	962	;# 
 12846   0003C3                     CWG1AS1         equ	963	;# 
 12847   0003C4                     CWG1STR         equ	964	;# 
 12848   0003C5                     CWG2CLK         equ	965	;# 
 12849   0003C5                     CWG2CLKCON      equ	965	;# 
 12850   0003C6                     CWG2ISM         equ	966	;# 
 12851   0003C7                     CWG2DBR         equ	967	;# 
 12852   0003C8                     CWG2DBF         equ	968	;# 
 12853   0003C9                     CWG2CON0        equ	969	;# 
 12854   0003CA                     CWG2CON1        equ	970	;# 
 12855   0003CB                     CWG2AS0         equ	971	;# 
 12856   0003CC                     CWG2AS1         equ	972	;# 
 12857   0003CD                     CWG2STR         equ	973	;# 
 12858   0003CE                     CWG3CLK         equ	974	;# 
 12859   0003CE                     CWG3CLKCON      equ	974	;# 
 12860   0003CF                     CWG3ISM         equ	975	;# 
 12861   0003D0                     CWG3DBR         equ	976	;# 
 12862   0003D1                     CWG3DBF         equ	977	;# 
 12863   0003D2                     CWG3CON0        equ	978	;# 
 12864   0003D3                     CWG3CON1        equ	979	;# 
 12865   0003D4                     CWG3AS0         equ	980	;# 
 12866   0003D5                     CWG3AS1         equ	981	;# 
 12867   0003D6                     CWG3STR         equ	982	;# 
 12868   0003D7                     FVRCON          equ	983	;# 
 12869   0003D8                     ADCPCON         equ	984	;# 
 12870   0003D8                     ADCP            equ	984	;# 
 12871   0003D9                     ADLTH           equ	985	;# 
 12872   0003D9                     ADLTHL          equ	985	;# 
 12873   0003DA                     ADLTHH          equ	986	;# 
 12874   0003DB                     ADUTH           equ	987	;# 
 12875   0003DB                     ADUTHL          equ	987	;# 
 12876   0003DC                     ADUTHH          equ	988	;# 
 12877   0003DD                     ADERR           equ	989	;# 
 12878   0003DD                     ADERRL          equ	989	;# 
 12879   0003DE                     ADERRH          equ	990	;# 
 12880   0003DF                     ADSTPT          equ	991	;# 
 12881   0003DF                     ADSTPTL         equ	991	;# 
 12882   0003E0                     ADSTPTH         equ	992	;# 
 12883   0003E1                     ADFLTR          equ	993	;# 
 12884   0003E1                     ADFLTRL         equ	993	;# 
 12885   0003E2                     ADFLTRH         equ	994	;# 
 12886   0003E3                     ADACC           equ	995	;# 
 12887   0003E3                     ADACCL          equ	995	;# 
 12888   0003E4                     ADACCH          equ	996	;# 
 12889   0003E5                     ADACCU          equ	997	;# 
 12890   0003E6                     ADCNT           equ	998	;# 
 12891   0003E7                     ADRPT           equ	999	;# 
 12892   0003E8                     ADPREV          equ	1000	;# 
 12893   0003E8                     ADPREVL         equ	1000	;# 
 12894   0003E9                     ADPREVH         equ	1001	;# 
 12895   0003EA                     ADRES           equ	1002	;# 
 12896   0003EA                     ADRESL          equ	1002	;# 
 12897   0003EB                     ADRESH          equ	1003	;# 
 12898   0003EC                     ADPCH           equ	1004	;# 
 12899   0003EE                     ADACQ           equ	1006	;# 
 12900   0003EE                     ADACQL          equ	1006	;# 
 12901   0003EF                     ADACQH          equ	1007	;# 
 12902   0003F0                     ADCAP           equ	1008	;# 
 12903   0003F1                     ADPRE           equ	1009	;# 
 12904   0003F1                     ADPREL          equ	1009	;# 
 12905   0003F2                     ADPREH          equ	1010	;# 
 12906   0003F3                     ADCON0          equ	1011	;# 
 12907   0003F4                     ADCON1          equ	1012	;# 
 12908   0003F5                     ADCON2          equ	1013	;# 
 12909   0003F6                     ADCON3          equ	1014	;# 
 12910   0003F7                     ADSTAT          equ	1015	;# 
 12911   0003F8                     ADREF           equ	1016	;# 
 12912   0003F9                     ADACT           equ	1017	;# 
 12913   0003FA                     ADCLK           equ	1018	;# 
 12914   0003FB                     ADCTX           equ	1019	;# 
 12915   0003FC                     ADCSEL1         equ	1020	;# 
 12916   0003FD                     ADCSEL2         equ	1021	;# 
 12917   0003FE                     ADCSEL3         equ	1022	;# 
 12918   0003FF                     ADCSEL4         equ	1023	;# 
 12919   000400                     ANSELA          equ	1024	;# 
 12920   000401                     WPUA            equ	1025	;# 
 12921   000402                     ODCONA          equ	1026	;# 
 12922   000403                     SLRCONA         equ	1027	;# 
 12923   000404                     INLVLA          equ	1028	;# 
 12924   000405                     IOCAP           equ	1029	;# 
 12925   000406                     IOCAN           equ	1030	;# 
 12926   000407                     IOCAF           equ	1031	;# 
 12927   000408                     ANSELB          equ	1032	;# 
 12928   000409                     WPUB            equ	1033	;# 
 12929   00040A                     ODCONB          equ	1034	;# 
 12930   00040B                     SLRCONB         equ	1035	;# 
 12931   00040C                     INLVLB          equ	1036	;# 
 12932   00040D                     IOCBP           equ	1037	;# 
 12933   00040E                     IOCBN           equ	1038	;# 
 12934   00040F                     IOCBF           equ	1039	;# 
 12935   000410                     ANSELC          equ	1040	;# 
 12936   000411                     WPUC            equ	1041	;# 
 12937   000412                     ODCONC          equ	1042	;# 
 12938   000413                     SLRCONC         equ	1043	;# 
 12939   000414                     INLVLC          equ	1044	;# 
 12940   000415                     IOCCP           equ	1045	;# 
 12941   000416                     IOCCN           equ	1046	;# 
 12942   000417                     IOCCF           equ	1047	;# 
 12943   000421                     WPUE            equ	1057	;# 
 12944   000424                     INLVLE          equ	1060	;# 
 12945   000425                     IOCEP           equ	1061	;# 
 12946   000426                     IOCEN           equ	1062	;# 
 12947   000427                     IOCEF           equ	1063	;# 
 12948   000440                     NCO1ACC         equ	1088	;# 
 12949   000440                     NCO1ACCL        equ	1088	;# 
 12950   000441                     NCO1ACCH        equ	1089	;# 
 12951   000442                     NCO1ACCU        equ	1090	;# 
 12952   000443                     NCO1INC         equ	1091	;# 
 12953   000443                     NCO1INCL        equ	1091	;# 
 12954   000444                     NCO1INCH        equ	1092	;# 
 12955   000445                     NCO1INCU        equ	1093	;# 
 12956   000446                     NCO1CON         equ	1094	;# 
 12957   000447                     NCO1CLK         equ	1095	;# 
 12958   000448                     NCO2ACC         equ	1096	;# 
 12959   000448                     NCO2ACCL        equ	1096	;# 
 12960   000449                     NCO2ACCH        equ	1097	;# 
 12961   00044A                     NCO2ACCU        equ	1098	;# 
 12962   00044B                     NCO2INC         equ	1099	;# 
 12963   00044B                     NCO2INCL        equ	1099	;# 
 12964   00044C                     NCO2INCH        equ	1100	;# 
 12965   00044D                     NCO2INCU        equ	1101	;# 
 12966   00044E                     NCO2CON         equ	1102	;# 
 12967   00044F                     NCO2CLK         equ	1103	;# 
 12968   000450                     NCO3ACC         equ	1104	;# 
 12969   000450                     NCO3ACCL        equ	1104	;# 
 12970   000451                     NCO3ACCH        equ	1105	;# 
 12971   000452                     NCO3ACCU        equ	1106	;# 
 12972   000453                     NCO3INC         equ	1107	;# 
 12973   000453                     NCO3INCL        equ	1107	;# 
 12974   000454                     NCO3INCH        equ	1108	;# 
 12975   000455                     NCO3INCU        equ	1109	;# 
 12976   000456                     NCO3CON         equ	1110	;# 
 12977   000457                     NCO3CLK         equ	1111	;# 
 12978   000458                     FSCMCON         equ	1112	;# 
 12979   000459                     IVTLOCK         equ	1113	;# 
 12980   00045A                     IVTAD           equ	1114	;# 
 12981   00045A                     IVTADL          equ	1114	;# 
 12982   00045B                     IVTADH          equ	1115	;# 
 12983   00045C                     IVTADU          equ	1116	;# 
 12984   00045D                     IVTBASE         equ	1117	;# 
 12985   00045D                     IVTBASEL        equ	1117	;# 
 12986   00045E                     IVTBASEH        equ	1118	;# 
 12987   00045F                     IVTBASEU        equ	1119	;# 
 12988   000460                     PWM1ERS         equ	1120	;# 
 12989   000461                     PWM1CLK         equ	1121	;# 
 12990   000462                     PWM1LDS         equ	1122	;# 
 12991   000463                     PWM1PR          equ	1123	;# 
 12992   000463                     PWM1PRL         equ	1123	;# 
 12993   000464                     PWM1PRH         equ	1124	;# 
 12994   000465                     PWM1CPRE        equ	1125	;# 
 12995   000466                     PWM1PIPOS       equ	1126	;# 
 12996   000467                     PWM1GIR         equ	1127	;# 
 12997   000468                     PWM1GIE         equ	1128	;# 
 12998   000469                     PWM1CON         equ	1129	;# 
 12999   00046A                     PWM1S1CFG       equ	1130	;# 
 13000   00046B                     PWM1S1P1        equ	1131	;# 
 13001   00046B                     PWM1S1P1L       equ	1131	;# 
 13002   00046C                     PWM1S1P1H       equ	1132	;# 
 13003   00046D                     PWM1S1P2        equ	1133	;# 
 13004   00046D                     PWM1S1P2L       equ	1133	;# 
 13005   00046E                     PWM1S1P2H       equ	1134	;# 
 13006   00046F                     PWM2ERS         equ	1135	;# 
 13007   000470                     PWM2CLK         equ	1136	;# 
 13008   000471                     PWM2LDS         equ	1137	;# 
 13009   000472                     PWM2PR          equ	1138	;# 
 13010   000472                     PWM2PRL         equ	1138	;# 
 13011   000473                     PWM2PRH         equ	1139	;# 
 13012   000474                     PWM2CPRE        equ	1140	;# 
 13013   000475                     PWM2PIPOS       equ	1141	;# 
 13014   000476                     PWM2GIR         equ	1142	;# 
 13015   000477                     PWM2GIE         equ	1143	;# 
 13016   000478                     PWM2CON         equ	1144	;# 
 13017   000479                     PWM2S1CFG       equ	1145	;# 
 13018   00047A                     PWM2S1P1        equ	1146	;# 
 13019   00047A                     PWM2S1P1L       equ	1146	;# 
 13020   00047B                     PWM2S1P1H       equ	1147	;# 
 13021   00047C                     PWM2S1P2        equ	1148	;# 
 13022   00047C                     PWM2S1P2L       equ	1148	;# 
 13023   00047D                     PWM2S1P2H       equ	1149	;# 
 13024   00047E                     PWM3ERS         equ	1150	;# 
 13025   00047F                     PWM3CLK         equ	1151	;# 
 13026   000480                     PWM3LDS         equ	1152	;# 
 13027   000481                     PWM3PR          equ	1153	;# 
 13028   000481                     PWM3PRL         equ	1153	;# 
 13029   000482                     PWM3PRH         equ	1154	;# 
 13030   000483                     PWM3CPRE        equ	1155	;# 
 13031   000484                     PWM3PIPOS       equ	1156	;# 
 13032   000485                     PWM3GIR         equ	1157	;# 
 13033   000486                     PWM3GIE         equ	1158	;# 
 13034   000487                     PWM3CON         equ	1159	;# 
 13035   000488                     PWM3S1CFG       equ	1160	;# 
 13036   000489                     PWM3S1P1        equ	1161	;# 
 13037   000489                     PWM3S1P1L       equ	1161	;# 
 13038   00048A                     PWM3S1P1H       equ	1162	;# 
 13039   00048B                     PWM3S1P2        equ	1163	;# 
 13040   00048B                     PWM3S1P2L       equ	1163	;# 
 13041   00048C                     PWM3S1P2H       equ	1164	;# 
 13042   00048D                     PWM4ERS         equ	1165	;# 
 13043   00048E                     PWM4CLK         equ	1166	;# 
 13044   00048F                     PWM4LDS         equ	1167	;# 
 13045   000490                     PWM4PR          equ	1168	;# 
 13046   000490                     PWM4PRL         equ	1168	;# 
 13047   000491                     PWM4PRH         equ	1169	;# 
 13048   000492                     PWM4CPRE        equ	1170	;# 
 13049   000493                     PWM4PIPOS       equ	1171	;# 
 13050   000494                     PWM4GIR         equ	1172	;# 
 13051   000495                     PWM4GIE         equ	1173	;# 
 13052   000496                     PWM4CON         equ	1174	;# 
 13053   000497                     PWM4S1CFG       equ	1175	;# 
 13054   000498                     PWM4S1P1        equ	1176	;# 
 13055   000498                     PWM4S1P1L       equ	1176	;# 
 13056   000499                     PWM4S1P1H       equ	1177	;# 
 13057   00049A                     PWM4S1P2        equ	1178	;# 
 13058   00049A                     PWM4S1P2L       equ	1178	;# 
 13059   00049B                     PWM4S1P2H       equ	1179	;# 
 13060   00049C                     PWMLOAD         equ	1180	;# 
 13061   00049D                     PWMEN           equ	1181	;# 
 13062   00049E                     PIE0            equ	1182	;# 
 13063   00049F                     PIE1            equ	1183	;# 
 13064   0004A0                     PIE2            equ	1184	;# 
 13065   0004A1                     PIE3            equ	1185	;# 
 13066   0004A2                     PIE4            equ	1186	;# 
 13067   0004A3                     PIE5            equ	1187	;# 
 13068   0004A4                     PIE6            equ	1188	;# 
 13069   0004A5                     PIE7            equ	1189	;# 
 13070   0004A6                     PIE8            equ	1190	;# 
 13071   0004A7                     PIE9            equ	1191	;# 
 13072   0004A8                     PIE10           equ	1192	;# 
 13073   0004A9                     PIE11           equ	1193	;# 
 13074   0004AA                     PIE12           equ	1194	;# 
 13075   0004AB                     PIE13           equ	1195	;# 
 13076   0004AC                     PIE14           equ	1196	;# 
 13077   0004AD                     PIE15           equ	1197	;# 
 13078   0004AE                     PIR0            equ	1198	;# 
 13079   0004AF                     PIR1            equ	1199	;# 
 13080   0004B0                     PIR2            equ	1200	;# 
 13081   0004B1                     PIR3            equ	1201	;# 
 13082   0004B2                     PIR4            equ	1202	;# 
 13083   0004B3                     PIR5            equ	1203	;# 
 13084   0004B4                     PIR6            equ	1204	;# 
 13085   0004B5                     PIR7            equ	1205	;# 
 13086   0004B6                     PIR8            equ	1206	;# 
 13087   0004B7                     PIR9            equ	1207	;# 
 13088   0004B8                     PIR10           equ	1208	;# 
 13089   0004B9                     PIR11           equ	1209	;# 
 13090   0004BA                     PIR12           equ	1210	;# 
 13091   0004BB                     PIR13           equ	1211	;# 
 13092   0004BC                     PIR14           equ	1212	;# 
 13093   0004BD                     PIR15           equ	1213	;# 
 13094   0004BE                     LATA            equ	1214	;# 
 13095   0004BF                     LATB            equ	1215	;# 
 13096   0004C0                     LATC            equ	1216	;# 
 13097   0004C6                     TRISA           equ	1222	;# 
 13098   0004C7                     TRISB           equ	1223	;# 
 13099   0004C8                     TRISC           equ	1224	;# 
 13100   0004CA                     TRISE           equ	1226	;# 
 13101   0004CE                     PORTA           equ	1230	;# 
 13102   0004CF                     PORTB           equ	1231	;# 
 13103   0004D0                     PORTC           equ	1232	;# 
 13104   0004D2                     PORTE           equ	1234	;# 
 13105   0004D6                     INTCON0         equ	1238	;# 
 13106   0004D7                     INTCON1         equ	1239	;# 
 13107   0004D8                     STATUS          equ	1240	;# 
 13108   0004D9                     FSR2            equ	1241	;# 
 13109   0004D9                     FSR2L           equ	1241	;# 
 13110   0004DA                     FSR2H           equ	1242	;# 
 13111   0004DB                     PLUSW2          equ	1243	;# 
 13112   0004DC                     PREINC2         equ	1244	;# 
 13113   0004DD                     POSTDEC2        equ	1245	;# 
 13114   0004DE                     POSTINC2        equ	1246	;# 
 13115   0004DF                     INDF2           equ	1247	;# 
 13116   0004E0                     BSR             equ	1248	;# 
 13117   0004E1                     FSR1            equ	1249	;# 
 13118   0004E1                     FSR1L           equ	1249	;# 
 13119   0004E2                     FSR1H           equ	1250	;# 
 13120   0004E3                     PLUSW1          equ	1251	;# 
 13121   0004E4                     PREINC1         equ	1252	;# 
 13122   0004E5                     POSTDEC1        equ	1253	;# 
 13123   0004E6                     POSTINC1        equ	1254	;# 
 13124   0004E7                     INDF1           equ	1255	;# 
 13125   0004E8                     WREG            equ	1256	;# 
 13126   0004E9                     FSR0            equ	1257	;# 
 13127   0004E9                     FSR0L           equ	1257	;# 
 13128   0004EA                     FSR0H           equ	1258	;# 
 13129   0004EB                     PLUSW0          equ	1259	;# 
 13130   0004EC                     PREINC0         equ	1260	;# 
 13131   0004ED                     POSTDEC0        equ	1261	;# 
 13132   0004EE                     POSTINC0        equ	1262	;# 
 13133   0004EF                     INDF0           equ	1263	;# 
 13134   0004F0                     PCON0           equ	1264	;# 
 13135   0004F1                     PCON1           equ	1265	;# 
 13136   0004F2                     CPUDOZE         equ	1266	;# 
 13137   0004F3                     PROD            equ	1267	;# 
 13138   0004F3                     PRODL           equ	1267	;# 
 13139   0004F4                     PRODH           equ	1268	;# 
 13140   0004F5                     TABLAT          equ	1269	;# 
 13141   0004F6                     TBLPTR          equ	1270	;# 
 13142   0004F6                     TBLPTRL         equ	1270	;# 
 13143   0004F7                     TBLPTRH         equ	1271	;# 
 13144   0004F8                     TBLPTRU         equ	1272	;# 
 13145   0004F9                     PCLAT           equ	1273	;# 
 13146   0004F9                     PCL             equ	1273	;# 
 13147   0004FA                     PCLATH          equ	1274	;# 
 13148   0004FB                     PCLATU          equ	1275	;# 
 13149   0004FC                     STKPTR          equ	1276	;# 
 13150   0004FD                     TOS             equ	1277	;# 
 13151   0004FD                     TOSL            equ	1277	;# 
 13152   0004FE                     TOSH            equ	1278	;# 
 13153   0004FF                     TOSU            equ	1279	;# 
 13154   000038                     BOOTREG         equ	56	;# 
 13155   000039                     CLKRCON         equ	57	;# 
 13156   00003A                     CLKRCLK         equ	58	;# 
 13157   000040                     NVMCON0         equ	64	;# 
 13158   000041                     NVMCON1         equ	65	;# 
 13159   000042                     NVMLOCK         equ	66	;# 
 13160   000043                     NVMADR          equ	67	;# 
 13161   000043                     NVMADRL         equ	67	;# 
 13162   000044                     NVMADRH         equ	68	;# 
 13163   000045                     NVMADRU         equ	69	;# 
 13164   000046                     NVMDAT          equ	70	;# 
 13165   000046                     NVMDATL         equ	70	;# 
 13166   000047                     NVMDATH         equ	71	;# 
 13167   000048                     VREGCON         equ	72	;# 
 13168   000049                     BORCON          equ	73	;# 
 13169   00004A                     HLVDCON0        equ	74	;# 
 13170   00004B                     HLVDCON1        equ	75	;# 
 13171   00004C                     ZCDCON          equ	76	;# 
 13172   000060                     PMD0            equ	96	;# 
 13173   000061                     PMD1            equ	97	;# 
 13174   000062                     PMD2            equ	98	;# 
 13175   000063                     PMD3            equ	99	;# 
 13176   000064                     PMD4            equ	100	;# 
 13177   000065                     PMD5            equ	101	;# 
 13178   000066                     PMD6            equ	102	;# 
 13179   000067                     PMD7            equ	103	;# 
 13180   000068                     PMD8            equ	104	;# 
 13181   00006A                     MD1CON0         equ	106	;# 
 13182   00006B                     MD1CON1         equ	107	;# 
 13183   00006C                     MD1SRC          equ	108	;# 
 13184   00006D                     MD1CARL         equ	109	;# 
 13185   00006E                     MD1CARH         equ	110	;# 
 13186   00006F                     CMOUT           equ	111	;# 
 13187   000070                     CM1CON0         equ	112	;# 
 13188   000071                     CM1CON1         equ	113	;# 
 13189   000072                     CM1NCH          equ	114	;# 
 13190   000073                     CM1PCH          equ	115	;# 
 13191   000074                     CM2CON0         equ	116	;# 
 13192   000075                     CM2CON1         equ	117	;# 
 13193   000076                     CM2NCH          equ	118	;# 
 13194   000077                     CM2PCH          equ	119	;# 
 13195   000078                     WDTCON0         equ	120	;# 
 13196   000079                     WDTCON1         equ	121	;# 
 13197   00007A                     WDTPSL          equ	122	;# 
 13198   00007B                     WDTPSH          equ	123	;# 
 13199   00007C                     WDTTMR          equ	124	;# 
 13200   00007D                     DAC1DAT         equ	125	;# 
 13201   00007D                     DAC1DATL        equ	125	;# 
 13202   00007F                     DAC1CON         equ	127	;# 
 13203   000080                     SPI1RXB         equ	128	;# 
 13204   000081                     SPI1TXB         equ	129	;# 
 13205   000082                     SPI1TCNT        equ	130	;# 
 13206   000082                     SPI1TCNTL       equ	130	;# 
 13207   000083                     SPI1TCNTH       equ	131	;# 
 13208   000084                     SPI1CON0        equ	132	;# 
 13209   000085                     SPI1CON1        equ	133	;# 
 13210   000086                     SPI1CON2        equ	134	;# 
 13211   000087                     SPI1STATUS      equ	135	;# 
 13212   000088                     SPI1TWIDTH      equ	136	;# 
 13213   000089                     SPI1BAUD        equ	137	;# 
 13214   00008A                     SPI1INTF        equ	138	;# 
 13215   00008B                     SPI1INTE        equ	139	;# 
 13216   00008C                     SPI1CLK         equ	140	;# 
 13217   00008D                     SPI2RXB         equ	141	;# 
 13218   00008E                     SPI2TXB         equ	142	;# 
 13219   00008F                     SPI2TCNT        equ	143	;# 
 13220   00008F                     SPI2TCNTL       equ	143	;# 
 13221   000090                     SPI2TCNTH       equ	144	;# 
 13222   000091                     SPI2CON0        equ	145	;# 
 13223   000092                     SPI2CON1        equ	146	;# 
 13224   000093                     SPI2CON2        equ	147	;# 
 13225   000094                     SPI2STATUS      equ	148	;# 
 13226   000095                     SPI2TWIDTH      equ	149	;# 
 13227   000096                     SPI2BAUD        equ	150	;# 
 13228   000097                     SPI2INTF        equ	151	;# 
 13229   000098                     SPI2INTE        equ	152	;# 
 13230   000099                     SPI2CLK         equ	153	;# 
 13231   0000AC                     ACTCON          equ	172	;# 
 13232   0000AD                     OSCCON1         equ	173	;# 
 13233   0000AE                     OSCCON2         equ	174	;# 
 13234   0000AF                     OSCCON3         equ	175	;# 
 13235   0000B0                     OSCTUNE         equ	176	;# 
 13236   0000B1                     OSCFRQ          equ	177	;# 
 13237   0000B1                     OSCFREQ         equ	177	;# 
 13238   0000B2                     OSCSTAT         equ	178	;# 
 13239   0000B2                     OSCSTAT1        equ	178	;# 
 13240   0000B3                     OSCEN           equ	179	;# 
 13241   0000B4                     PRLOCK          equ	180	;# 
 13242   0000B5                     SCANPR          equ	181	;# 
 13243   0000B6                     DMA1PR          equ	182	;# 
 13244   0000B7                     DMA2PR          equ	183	;# 
 13245   0000B8                     DMA3PR          equ	184	;# 
 13246   0000B9                     DMA4PR          equ	185	;# 
 13247   0000BA                     DMA5PR          equ	186	;# 
 13248   0000BB                     DMA6PR          equ	187	;# 
 13249   0000BC                     DMA7PR          equ	188	;# 
 13250   0000BD                     DMA8PR          equ	189	;# 
 13251   0000BE                     MAINPR          equ	190	;# 
 13252   0000BF                     ISRPR           equ	191	;# 
 13253   0000D4                     CLCDATA         equ	212	;# 
 13254   0000D5                     CLCSELECT       equ	213	;# 
 13255   0000D6                     CLCnCON         equ	214	;# 
 13256   0000D7                     CLCnPOL         equ	215	;# 
 13257   0000D8                     CLCnSEL0        equ	216	;# 
 13258   0000D9                     CLCnSEL1        equ	217	;# 
 13259   0000DA                     CLCnSEL2        equ	218	;# 
 13260   0000DB                     CLCnSEL3        equ	219	;# 
 13261   0000DC                     CLCnGLS0        equ	220	;# 
 13262   0000DD                     CLCnGLS1        equ	221	;# 
 13263   0000DE                     CLCnGLS2        equ	222	;# 
 13264   0000DF                     CLCnGLS3        equ	223	;# 
 13265   0000E8                     DMASELECT       equ	232	;# 
 13266   0000E9                     DMAnBUF         equ	233	;# 
 13267   0000EA                     DMAnDCNT        equ	234	;# 
 13268   0000EA                     DMAnDCNTL       equ	234	;# 
 13269   0000EB                     DMAnDCNTH       equ	235	;# 
 13270   0000EC                     DMAnDPTR        equ	236	;# 
 13271   0000EC                     DMAnDPTRL       equ	236	;# 
 13272   0000ED                     DMAnDPTRH       equ	237	;# 
 13273   0000EE                     DMAnDSZ         equ	238	;# 
 13274   0000EE                     DMAnDSZL        equ	238	;# 
 13275   0000EF                     DMAnDSZH        equ	239	;# 
 13276   0000F0                     DMAnDSA         equ	240	;# 
 13277   0000F0                     DMAnDSAL        equ	240	;# 
 13278   0000F1                     DMAnDSAH        equ	241	;# 
 13279   0000F2                     DMAnSCNT        equ	242	;# 
 13280   0000F2                     DMAnSCNTL       equ	242	;# 
 13281   0000F3                     DMAnSCNTH       equ	243	;# 
 13282   0000F4                     DMAnSPTR        equ	244	;# 
 13283   0000F4                     DMAnSPTRL       equ	244	;# 
 13284   0000F5                     DMAnSPTRH       equ	245	;# 
 13285   0000F6                     DMAnSPTRU       equ	246	;# 
 13286   0000F7                     DMAnSSZ         equ	247	;# 
 13287   0000F7                     DMAnSSZL        equ	247	;# 
 13288   0000F8                     DMAnSSZH        equ	248	;# 
 13289   0000F9                     DMAnSSA         equ	249	;# 
 13290   0000F9                     DMAnSSAL        equ	249	;# 
 13291   0000FA                     DMAnSSAH        equ	250	;# 
 13292   0000FB                     DMAnSSAU        equ	251	;# 
 13293   0000FC                     DMAnCON0        equ	252	;# 
 13294   0000FD                     DMAnCON1        equ	253	;# 
 13295   0000FE                     DMAnAIRQ        equ	254	;# 
 13296   0000FF                     DMAnSIRQ        equ	255	;# 
 13297   000100                     C1CONL          equ	256	;# 
 13298   000101                     C1CONH          equ	257	;# 
 13299   000102                     C1CONU          equ	258	;# 
 13300   000103                     C1CONT          equ	259	;# 
 13301   000104                     C1NBTCFGL       equ	260	;# 
 13302   000105                     C1NBTCFGH       equ	261	;# 
 13303   000106                     C1NBTCFGU       equ	262	;# 
 13304   000107                     C1NBTCFGT       equ	263	;# 
 13305   000108                     C1DBTCFGL       equ	264	;# 
 13306   000109                     C1DBTCFGH       equ	265	;# 
 13307   00010A                     C1DBTCFGU       equ	266	;# 
 13308   00010B                     C1DBTCFGT       equ	267	;# 
 13309   00010C                     C1TDCL          equ	268	;# 
 13310   00010D                     C1TDCH          equ	269	;# 
 13311   00010E                     C1TDCU          equ	270	;# 
 13312   000110                     C1TBC           equ	272	;# 
 13313   000110                     C1TBCL          equ	272	;# 
 13314   000111                     C1TBCH          equ	273	;# 
 13315   000112                     C1TBCU          equ	274	;# 
 13316   000113                     C1TBCT          equ	275	;# 
 13317   000114                     C1TSCONL        equ	276	;# 
 13318   000115                     C1TSCONH        equ	277	;# 
 13319   000116                     C1TSCONU        equ	278	;# 
 13320   000117                     C1TSCONT        equ	279	;# 
 13321   000118                     C1VECL          equ	280	;# 
 13322   000119                     C1VECH          equ	281	;# 
 13323   00011A                     C1VECU          equ	282	;# 
 13324   00011B                     C1VECT          equ	283	;# 
 13325   00011C                     C1INTL          equ	284	;# 
 13326   00011D                     C1INTH          equ	285	;# 
 13327   00011E                     C1INTU          equ	286	;# 
 13328   00011F                     C1INTT          equ	287	;# 
 13329   000120                     C1RXIF          equ	288	;# 
 13330   000120                     C1RXIFL         equ	288	;# 
 13331   000121                     C1RXIFH         equ	289	;# 
 13332   000122                     C1RXIFU         equ	290	;# 
 13333   000123                     C1RXIFT         equ	291	;# 
 13334   000124                     C1TXIF          equ	292	;# 
 13335   000124                     C1TXIFL         equ	292	;# 
 13336   000125                     C1TXIFH         equ	293	;# 
 13337   000126                     C1TXIFU         equ	294	;# 
 13338   000127                     C1TXIFT         equ	295	;# 
 13339   000128                     C1RXOVIF        equ	296	;# 
 13340   000128                     C1RXOVIFL       equ	296	;# 
 13341   000129                     C1RXOVIFH       equ	297	;# 
 13342   00012A                     C1RXOVIFU       equ	298	;# 
 13343   00012B                     C1RXOVIFT       equ	299	;# 
 13344   00012C                     C1TXATIF        equ	300	;# 
 13345   00012C                     C1TXATIFL       equ	300	;# 
 13346   00012D                     C1TXATIFH       equ	301	;# 
 13347   00012E                     C1TXATIFU       equ	302	;# 
 13348   00012F                     C1TXATIFT       equ	303	;# 
 13349   000130                     C1TXREQ         equ	304	;# 
 13350   000130                     C1TXREQL        equ	304	;# 
 13351   000131                     C1TXREQH        equ	305	;# 
 13352   000132                     C1TXREQU        equ	306	;# 
 13353   000133                     C1TXREQT        equ	307	;# 
 13354   000134                     C1TRECL         equ	308	;# 
 13355   000135                     C1TRECH         equ	309	;# 
 13356   000136                     C1TRECU         equ	310	;# 
 13357   000137                     C1TRECT         equ	311	;# 
 13358   000138                     C1BDIAG0L       equ	312	;# 
 13359   000139                     C1BDIAG0H       equ	313	;# 
 13360   00013C                     C1BDIAG1L       equ	316	;# 
 13361   00013D                     C1BDIAG1H       equ	317	;# 
 13362   00013E                     C1BDIAG1U       equ	318	;# 
 13363   00013F                     C1BDIAG1T       equ	319	;# 
 13364   000140                     C1TEFCONL       equ	320	;# 
 13365   000141                     C1TEFCONH       equ	321	;# 
 13366   000142                     C1TEFCONU       equ	322	;# 
 13367   000143                     C1TEFCONT       equ	323	;# 
 13368   000144                     C1TEFSTAL       equ	324	;# 
 13369   000145                     C1TEFSTAH       equ	325	;# 
 13370   000146                     C1TEFSTAU       equ	326	;# 
 13371   000147                     C1TEFSTAT       equ	327	;# 
 13372   000148                     C1TEFUA         equ	328	;# 
 13373   000148                     C1TEFUAL        equ	328	;# 
 13374   000149                     C1TEFUAH        equ	329	;# 
 13375   00014A                     C1TEFUAU        equ	330	;# 
 13376   00014B                     C1TEFUAT        equ	331	;# 
 13377   00014C                     C1FIFOBA        equ	332	;# 
 13378   00014C                     C1FIFOBAL       equ	332	;# 
 13379   00014D                     C1FIFOBAH       equ	333	;# 
 13380   00014E                     C1FIFOBAU       equ	334	;# 
 13381   00014F                     C1FIFOBAT       equ	335	;# 
 13382   000150                     C1TXQCONL       equ	336	;# 
 13383   000151                     C1TXQCONH       equ	337	;# 
 13384   000152                     C1TXQCONU       equ	338	;# 
 13385   000153                     C1TXQCONT       equ	339	;# 
 13386   000154                     C1TXQSTAL       equ	340	;# 
 13387   000155                     C1TXQSTAH       equ	341	;# 
 13388   000156                     C1TXQSTAU       equ	342	;# 
 13389   000157                     C1TXQSTAT       equ	343	;# 
 13390   000158                     C1TXQUA         equ	344	;# 
 13391   000158                     C1TXQUAL        equ	344	;# 
 13392   000159                     C1TXQUAH        equ	345	;# 
 13393   00015A                     C1TXQUAU        equ	346	;# 
 13394   00015B                     C1TXQUAT        equ	347	;# 
 13395   00015C                     C1FIFOCON1      equ	348	;# 
 13396   00015C                     C1FIFOCON1L     equ	348	;# 
 13397   00015D                     C1FIFOCON1H     equ	349	;# 
 13398   00015E                     C1FIFOCON1U     equ	350	;# 
 13399   00015F                     C1FIFOCON1T     equ	351	;# 
 13400   000160                     C1FIFOSTA1      equ	352	;# 
 13401   000160                     C1FIFOSTA1L     equ	352	;# 
 13402   000161                     C1FIFOSTA1H     equ	353	;# 
 13403   000162                     C1FIFOSTA1U     equ	354	;# 
 13404   000163                     C1FIFOSTA1T     equ	355	;# 
 13405   000164                     C1FIFOUA1       equ	356	;# 
 13406   000164                     C1FIFOUA1L      equ	356	;# 
 13407   000165                     C1FIFOUA1H      equ	357	;# 
 13408   000166                     C1FIFOUA1U      equ	358	;# 
 13409   000167                     C1FIFOUA1T      equ	359	;# 
 13410   000168                     C1FIFOCON2      equ	360	;# 
 13411   000168                     C1FIFOCON2L     equ	360	;# 
 13412   000169                     C1FIFOCON2H     equ	361	;# 
 13413   00016A                     C1FIFOCON2U     equ	362	;# 
 13414   00016B                     C1FIFOCON2T     equ	363	;# 
 13415   00016C                     C1FIFOSTA2      equ	364	;# 
 13416   00016C                     C1FIFOSTA2L     equ	364	;# 
 13417   00016D                     C1FIFOSTA2H     equ	365	;# 
 13418   00016E                     C1FIFOSTA2U     equ	366	;# 
 13419   00016F                     C1FIFOSTA2T     equ	367	;# 
 13420   000170                     C1FIFOUA2       equ	368	;# 
 13421   000170                     C1FIFOUA2L      equ	368	;# 
 13422   000171                     C1FIFOUA2H      equ	369	;# 
 13423   000172                     C1FIFOUA2U      equ	370	;# 
 13424   000173                     C1FIFOUA2T      equ	371	;# 
 13425   000174                     C1FIFOCON3      equ	372	;# 
 13426   000174                     C1FIFOCON3L     equ	372	;# 
 13427   000175                     C1FIFOCON3H     equ	373	;# 
 13428   000176                     C1FIFOCON3U     equ	374	;# 
 13429   000177                     C1FIFOCON3T     equ	375	;# 
 13430   000178                     C1FIFOSTA3      equ	376	;# 
 13431   000178                     C1FIFOSTA3L     equ	376	;# 
 13432   000179                     C1FIFOSTA3H     equ	377	;# 
 13433   00017A                     C1FIFOSTA3U     equ	378	;# 
 13434   00017B                     C1FIFOSTA3T     equ	379	;# 
 13435   00017C                     C1FIFOUA3       equ	380	;# 
 13436   00017C                     C1FIFOUA3L      equ	380	;# 
 13437   00017D                     C1FIFOUA3H      equ	381	;# 
 13438   00017E                     C1FIFOUA3U      equ	382	;# 
 13439   00017F                     C1FIFOUA3T      equ	383	;# 
 13440   000180                     C1FLTCON0L      equ	384	;# 
 13441   000181                     C1FLTCON0H      equ	385	;# 
 13442   000182                     C1FLTCON0U      equ	386	;# 
 13443   000183                     C1FLTCON0T      equ	387	;# 
 13444   000184                     C1FLTCON1L      equ	388	;# 
 13445   000185                     C1FLTCON1H      equ	389	;# 
 13446   000186                     C1FLTCON1U      equ	390	;# 
 13447   000187                     C1FLTCON1T      equ	391	;# 
 13448   000188                     C1FLTCON2L      equ	392	;# 
 13449   000189                     C1FLTCON2H      equ	393	;# 
 13450   00018A                     C1FLTCON2U      equ	394	;# 
 13451   00018B                     C1FLTCON2T      equ	395	;# 
 13452   00018C                     C1FLTOBJ0       equ	396	;# 
 13453   00018C                     C1FLTOBJ0L      equ	396	;# 
 13454   00018D                     C1FLTOBJ0H      equ	397	;# 
 13455   00018E                     C1FLTOBJ0U      equ	398	;# 
 13456   00018F                     C1FLTOBJ0T      equ	399	;# 
 13457   000190                     C1MASK0         equ	400	;# 
 13458   000190                     C1MASK0L        equ	400	;# 
 13459   000191                     C1MASK0H        equ	401	;# 
 13460   000192                     C1MASK0U        equ	402	;# 
 13461   000193                     C1MASK0T        equ	403	;# 
 13462   000194                     C1FLTOBJ1       equ	404	;# 
 13463   000194                     C1FLTOBJ1L      equ	404	;# 
 13464   000195                     C1FLTOBJ1H      equ	405	;# 
 13465   000196                     C1FLTOBJ1U      equ	406	;# 
 13466   000197                     C1FLTOBJ1T      equ	407	;# 
 13467   000198                     C1MASK1         equ	408	;# 
 13468   000198                     C1MASK1L        equ	408	;# 
 13469   000199                     C1MASK1H        equ	409	;# 
 13470   00019A                     C1MASK1U        equ	410	;# 
 13471   00019B                     C1MASK1T        equ	411	;# 
 13472   00019C                     C1FLTOBJ2       equ	412	;# 
 13473   00019C                     C1FLTOBJ2L      equ	412	;# 
 13474   00019D                     C1FLTOBJ2H      equ	413	;# 
 13475   00019E                     C1FLTOBJ2U      equ	414	;# 
 13476   00019F                     C1FLTOBJ2T      equ	415	;# 
 13477   0001A0                     C1MASK2         equ	416	;# 
 13478   0001A0                     C1MASK2L        equ	416	;# 
 13479   0001A1                     C1MASK2H        equ	417	;# 
 13480   0001A2                     C1MASK2U        equ	418	;# 
 13481   0001A3                     C1MASK2T        equ	419	;# 
 13482   0001A4                     C1FLTOBJ3       equ	420	;# 
 13483   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13484   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13485   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13486   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13487   0001A8                     C1MASK3         equ	424	;# 
 13488   0001A8                     C1MASK3L        equ	424	;# 
 13489   0001A9                     C1MASK3H        equ	425	;# 
 13490   0001AA                     C1MASK3U        equ	426	;# 
 13491   0001AB                     C1MASK3T        equ	427	;# 
 13492   0001AC                     C1FLTOBJ4       equ	428	;# 
 13493   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13494   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13495   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13496   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13497   0001B0                     C1MASK4         equ	432	;# 
 13498   0001B0                     C1MASK4L        equ	432	;# 
 13499   0001B1                     C1MASK4H        equ	433	;# 
 13500   0001B2                     C1MASK4U        equ	434	;# 
 13501   0001B3                     C1MASK4T        equ	435	;# 
 13502   0001B4                     C1FLTOBJ5       equ	436	;# 
 13503   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13504   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13505   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13506   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13507   0001B8                     C1MASK5         equ	440	;# 
 13508   0001B8                     C1MASK5L        equ	440	;# 
 13509   0001B9                     C1MASK5H        equ	441	;# 
 13510   0001BA                     C1MASK5U        equ	442	;# 
 13511   0001BB                     C1MASK5T        equ	443	;# 
 13512   0001BC                     C1FLTOBJ6       equ	444	;# 
 13513   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13514   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13515   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13516   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13517   0001C0                     C1MASK6         equ	448	;# 
 13518   0001C0                     C1MASK6L        equ	448	;# 
 13519   0001C1                     C1MASK6H        equ	449	;# 
 13520   0001C2                     C1MASK6U        equ	450	;# 
 13521   0001C3                     C1MASK6T        equ	451	;# 
 13522   0001C4                     C1FLTOBJ7       equ	452	;# 
 13523   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13524   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13525   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13526   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13527   0001C8                     C1MASK7         equ	456	;# 
 13528   0001C8                     C1MASK7L        equ	456	;# 
 13529   0001C9                     C1MASK7H        equ	457	;# 
 13530   0001CA                     C1MASK7U        equ	458	;# 
 13531   0001CB                     C1MASK7T        equ	459	;# 
 13532   0001CC                     C1FLTOBJ8       equ	460	;# 
 13533   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13534   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13535   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13536   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13537   0001D0                     C1MASK8         equ	464	;# 
 13538   0001D0                     C1MASK8L        equ	464	;# 
 13539   0001D1                     C1MASK8H        equ	465	;# 
 13540   0001D2                     C1MASK8U        equ	466	;# 
 13541   0001D3                     C1MASK8T        equ	467	;# 
 13542   0001D4                     C1FLTOBJ9       equ	468	;# 
 13543   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13544   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13545   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13546   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13547   0001D8                     C1MASK9         equ	472	;# 
 13548   0001D8                     C1MASK9L        equ	472	;# 
 13549   0001D9                     C1MASK9H        equ	473	;# 
 13550   0001DA                     C1MASK9U        equ	474	;# 
 13551   0001DB                     C1MASK9T        equ	475	;# 
 13552   0001DC                     C1FLTOBJ10      equ	476	;# 
 13553   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13554   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13555   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13556   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13557   0001E0                     C1MASK10        equ	480	;# 
 13558   0001E0                     C1MASK10L       equ	480	;# 
 13559   0001E1                     C1MASK10H       equ	481	;# 
 13560   0001E2                     C1MASK10U       equ	482	;# 
 13561   0001E3                     C1MASK10T       equ	483	;# 
 13562   0001E4                     C1FLTOBJ11      equ	484	;# 
 13563   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13564   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13565   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13566   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13567   0001E8                     C1MASK11        equ	488	;# 
 13568   0001E8                     C1MASK11L       equ	488	;# 
 13569   0001E9                     C1MASK11H       equ	489	;# 
 13570   0001EA                     C1MASK11U       equ	490	;# 
 13571   0001EB                     C1MASK11T       equ	491	;# 
 13572   000200                     PPSLOCK         equ	512	;# 
 13573   000201                     RA0PPS          equ	513	;# 
 13574   000202                     RA1PPS          equ	514	;# 
 13575   000203                     RA2PPS          equ	515	;# 
 13576   000204                     RA3PPS          equ	516	;# 
 13577   000205                     RA4PPS          equ	517	;# 
 13578   000206                     RA5PPS          equ	518	;# 
 13579   000207                     RA6PPS          equ	519	;# 
 13580   000208                     RA7PPS          equ	520	;# 
 13581   000209                     RB0PPS          equ	521	;# 
 13582   00020A                     RB1PPS          equ	522	;# 
 13583   00020B                     RB2PPS          equ	523	;# 
 13584   00020C                     RB3PPS          equ	524	;# 
 13585   00020D                     RB4PPS          equ	525	;# 
 13586   00020E                     RB5PPS          equ	526	;# 
 13587   00020F                     RB6PPS          equ	527	;# 
 13588   000210                     RB7PPS          equ	528	;# 
 13589   000211                     RC0PPS          equ	529	;# 
 13590   000212                     RC1PPS          equ	530	;# 
 13591   000213                     RC2PPS          equ	531	;# 
 13592   000214                     RC3PPS          equ	532	;# 
 13593   000215                     RC4PPS          equ	533	;# 
 13594   000216                     RC5PPS          equ	534	;# 
 13595   000217                     RC6PPS          equ	535	;# 
 13596   000218                     RC7PPS          equ	536	;# 
 13597   00023D                     CANRXPPS        equ	573	;# 
 13598   00023E                     INT0PPS         equ	574	;# 
 13599   00023F                     INT1PPS         equ	575	;# 
 13600   000240                     INT2PPS         equ	576	;# 
 13601   000241                     T0CKIPPS        equ	577	;# 
 13602   000242                     T1CKIPPS        equ	578	;# 
 13603   000243                     T1GPPS          equ	579	;# 
 13604   000244                     T3CKIPPS        equ	580	;# 
 13605   000245                     T3GPPS          equ	581	;# 
 13606   000246                     T5CKIPPS        equ	582	;# 
 13607   000247                     T5GPPS          equ	583	;# 
 13608   000248                     T2INPPS         equ	584	;# 
 13609   000249                     T4INPPS         equ	585	;# 
 13610   00024A                     T6INPPS         equ	586	;# 
 13611   00024B                     TUIN0PPS        equ	587	;# 
 13612   00024C                     TUIN1PPS        equ	588	;# 
 13613   00024F                     CCP1PPS         equ	591	;# 
 13614   000250                     CCP2PPS         equ	592	;# 
 13615   000251                     CCP3PPS         equ	593	;# 
 13616   000253                     PWM1ERSPPS      equ	595	;# 
 13617   000254                     PWM2ERSPPS      equ	596	;# 
 13618   000255                     PWM3ERSPPS      equ	597	;# 
 13619   000256                     PWM4ERSPPS      equ	598	;# 
 13620   000257                     PWMIN0PPS       equ	599	;# 
 13621   000258                     PWMIN1PPS       equ	600	;# 
 13622   000259                     SMT1WINPPS      equ	601	;# 
 13623   00025A                     SMT1SIGPPS      equ	602	;# 
 13624   00025B                     CWG1PPS         equ	603	;# 
 13625   00025B                     CWG1INPPS       equ	603	;# 
 13626   00025C                     CWG2PPS         equ	604	;# 
 13627   00025C                     CWG2INPPS       equ	604	;# 
 13628   00025D                     CWG3PPS         equ	605	;# 
 13629   00025D                     CWG3INPPS       equ	605	;# 
 13630   00025E                     MD1CARLPPS      equ	606	;# 
 13631   00025E                     MDCARLPPS       equ	606	;# 
 13632   00025F                     MD1CARHPPS      equ	607	;# 
 13633   00025F                     MDCARHPPS       equ	607	;# 
 13634   000260                     MD1SRCPPS       equ	608	;# 
 13635   000260                     MDSRCPPS        equ	608	;# 
 13636   000261                     CLCIN0PPS       equ	609	;# 
 13637   000262                     CLCIN1PPS       equ	610	;# 
 13638   000263                     CLCIN2PPS       equ	611	;# 
 13639   000264                     CLCIN3PPS       equ	612	;# 
 13640   000265                     CLCIN4PPS       equ	613	;# 
 13641   000266                     CLCIN5PPS       equ	614	;# 
 13642   000267                     CLCIN6PPS       equ	615	;# 
 13643   000268                     CLCIN7PPS       equ	616	;# 
 13644   000269                     ADACTPPS        equ	617	;# 
 13645   00026A                     SPI1SCKPPS      equ	618	;# 
 13646   00026B                     SPI1SDIPPS      equ	619	;# 
 13647   00026C                     SPI1SSPPS       equ	620	;# 
 13648   00026D                     SPI2SCKPPS      equ	621	;# 
 13649   00026E                     SPI2SDIPPS      equ	622	;# 
 13650   00026F                     SPI2SSPPS       equ	623	;# 
 13651   000270                     I2C1SDAPPS      equ	624	;# 
 13652   000271                     I2C1SCLPPS      equ	625	;# 
 13653   000272                     U1RXPPS         equ	626	;# 
 13654   000273                     U1CTSPPS        equ	627	;# 
 13655   000274                     U2RXPPS         equ	628	;# 
 13656   000275                     U2CTSPPS        equ	629	;# 
 13657   000276                     U3RXPPS         equ	630	;# 
 13658   000277                     U3CTSPPS        equ	631	;# 
 13659   000278                     U4RXPPS         equ	632	;# 
 13660   000279                     U4CTSPPS        equ	633	;# 
 13661   00027A                     U5RXPPS         equ	634	;# 
 13662   00027B                     U5CTSPPS        equ	635	;# 
 13663   000286                     RC4I2C          equ	646	;# 
 13664   000287                     RC3I2C          equ	647	;# 
 13665   000288                     RB2I2C          equ	648	;# 
 13666   000289                     RB1I2C          equ	649	;# 
 13667   00028A                     I2C1RXB         equ	650	;# 
 13668   00028B                     I2C1TXB         equ	651	;# 
 13669   00028C                     I2C1CNTL        equ	652	;# 
 13670   00028D                     I2C1CNTH        equ	653	;# 
 13671   00028E                     I2C1ADB0        equ	654	;# 
 13672   00028F                     I2C1ADB1        equ	655	;# 
 13673   000290                     I2C1ADR0        equ	656	;# 
 13674   000291                     I2C1ADR1        equ	657	;# 
 13675   000292                     I2C1ADR2        equ	658	;# 
 13676   000293                     I2C1ADR3        equ	659	;# 
 13677   000294                     I2C1CON0        equ	660	;# 
 13678   000295                     I2C1CON1        equ	661	;# 
 13679   000296                     I2C1CON2        equ	662	;# 
 13680   000297                     I2C1ERR         equ	663	;# 
 13681   000298                     I2C1STAT0       equ	664	;# 
 13682   000299                     I2C1STAT1       equ	665	;# 
 13683   00029A                     I2C1PIR         equ	666	;# 
 13684   00029B                     I2C1PIE         equ	667	;# 
 13685   00029C                     I2C1BTO         equ	668	;# 
 13686   00029D                     I2C1BAUD        equ	669	;# 
 13687   00029E                     I2C1CLK         equ	670	;# 
 13688   00029F                     I2C1BTOC        equ	671	;# 
 13689   0002A1                     U1RXB           equ	673	;# 
 13690   0002A1                     U1RXBL          equ	673	;# 
 13691   0002A2                     U1RXCHK         equ	674	;# 
 13692   0002A3                     U1TXB           equ	675	;# 
 13693   0002A3                     U1TXBL          equ	675	;# 
 13694   0002A4                     U1TXCHK         equ	676	;# 
 13695   0002A5                     U1P1            equ	677	;# 
 13696   0002A5                     U1P1L           equ	677	;# 
 13697   0002A6                     U1P1H           equ	678	;# 
 13698   0002A7                     U1P2            equ	679	;# 
 13699   0002A7                     U1P2L           equ	679	;# 
 13700   0002A8                     U1P2H           equ	680	;# 
 13701   0002A9                     U1P3            equ	681	;# 
 13702   0002A9                     U1P3L           equ	681	;# 
 13703   0002AA                     U1P3H           equ	682	;# 
 13704   0002AB                     U1CON0          equ	683	;# 
 13705   0002AC                     U1CON1          equ	684	;# 
 13706   0002AD                     U1CON2          equ	685	;# 
 13707   0002AE                     U1BRG           equ	686	;# 
 13708   0002AE                     U1BRGL          equ	686	;# 
 13709   0002AF                     U1BRGH          equ	687	;# 
 13710   0002B0                     U1FIFO          equ	688	;# 
 13711   0002B1                     U1UIR           equ	689	;# 
 13712   0002B2                     U1ERRIR         equ	690	;# 
 13713   0002B3                     U1ERRIE         equ	691	;# 
 13714   0002B4                     U2RXB           equ	692	;# 
 13715   0002B4                     U2RXBL          equ	692	;# 
 13716   0002B5                     U2RXCHK         equ	693	;# 
 13717   0002B6                     U2TXB           equ	694	;# 
 13718   0002B6                     U2TXBL          equ	694	;# 
 13719   0002B7                     U2TXCHK         equ	695	;# 
 13720   0002B8                     U2P1            equ	696	;# 
 13721   0002B8                     U2P1L           equ	696	;# 
 13722   0002B9                     U2P1H           equ	697	;# 
 13723   0002BA                     U2P2            equ	698	;# 
 13724   0002BA                     U2P2L           equ	698	;# 
 13725   0002BB                     U2P2H           equ	699	;# 
 13726   0002BC                     U2P3            equ	700	;# 
 13727   0002BC                     U2P3L           equ	700	;# 
 13728   0002BD                     U2P3H           equ	701	;# 
 13729   0002BE                     U2CON0          equ	702	;# 
 13730   0002BF                     U2CON1          equ	703	;# 
 13731   0002C0                     U2CON2          equ	704	;# 
 13732   0002C1                     U2BRG           equ	705	;# 
 13733   0002C1                     U2BRGL          equ	705	;# 
 13734   0002C2                     U2BRGH          equ	706	;# 
 13735   0002C3                     U2FIFO          equ	707	;# 
 13736   0002C4                     U2UIR           equ	708	;# 
 13737   0002C5                     U2ERRIR         equ	709	;# 
 13738   0002C6                     U2ERRIE         equ	710	;# 
 13739   0002C7                     U3RXB           equ	711	;# 
 13740   0002C7                     U3RXBL          equ	711	;# 
 13741   0002C9                     U3TXB           equ	713	;# 
 13742   0002C9                     U3TXBL          equ	713	;# 
 13743   0002CB                     U3P1            equ	715	;# 
 13744   0002CB                     U3P1L           equ	715	;# 
 13745   0002CD                     U3P2            equ	717	;# 
 13746   0002CD                     U3P2L           equ	717	;# 
 13747   0002CF                     U3P3            equ	719	;# 
 13748   0002CF                     U3P3L           equ	719	;# 
 13749   0002D1                     U3CON0          equ	721	;# 
 13750   0002D2                     U3CON1          equ	722	;# 
 13751   0002D3                     U3CON2          equ	723	;# 
 13752   0002D4                     U3BRG           equ	724	;# 
 13753   0002D4                     U3BRGL          equ	724	;# 
 13754   0002D5                     U3BRGH          equ	725	;# 
 13755   0002D6                     U3FIFO          equ	726	;# 
 13756   0002D7                     U3UIR           equ	727	;# 
 13757   0002D8                     U3ERRIR         equ	728	;# 
 13758   0002D9                     U3ERRIE         equ	729	;# 
 13759   0002DA                     U4RXB           equ	730	;# 
 13760   0002DA                     U4RXBL          equ	730	;# 
 13761   0002DC                     U4TXB           equ	732	;# 
 13762   0002DC                     U4TXBL          equ	732	;# 
 13763   0002DE                     U4P1            equ	734	;# 
 13764   0002DE                     U4P1L           equ	734	;# 
 13765   0002E0                     U4P2            equ	736	;# 
 13766   0002E0                     U4P2L           equ	736	;# 
 13767   0002E2                     U4P3            equ	738	;# 
 13768   0002E2                     U4P3L           equ	738	;# 
 13769   0002E4                     U4CON0          equ	740	;# 
 13770   0002E5                     U4CON1          equ	741	;# 
 13771   0002E6                     U4CON2          equ	742	;# 
 13772   0002E7                     U4BRG           equ	743	;# 
 13773   0002E7                     U4BRGL          equ	743	;# 
 13774   0002E8                     U4BRGH          equ	744	;# 
 13775   0002E9                     U4FIFO          equ	745	;# 
 13776   0002EA                     U4UIR           equ	746	;# 
 13777   0002EB                     U4ERRIR         equ	747	;# 
 13778   0002EC                     U4ERRIE         equ	748	;# 
 13779   0002ED                     U5RXB           equ	749	;# 
 13780   0002ED                     U5RXBL          equ	749	;# 
 13781   0002EF                     U5TXB           equ	751	;# 
 13782   0002EF                     U5TXBL          equ	751	;# 
 13783   0002F1                     U5P1            equ	753	;# 
 13784   0002F1                     U5P1L           equ	753	;# 
 13785   0002F3                     U5P2            equ	755	;# 
 13786   0002F3                     U5P2L           equ	755	;# 
 13787   0002F5                     U5P3            equ	757	;# 
 13788   0002F5                     U5P3L           equ	757	;# 
 13789   0002F7                     U5CON0          equ	759	;# 
 13790   0002F8                     U5CON1          equ	760	;# 
 13791   0002F9                     U5CON2          equ	761	;# 
 13792   0002FA                     U5BRG           equ	762	;# 
 13793   0002FA                     U5BRGL          equ	762	;# 
 13794   0002FB                     U5BRGH          equ	763	;# 
 13795   0002FC                     U5FIFO          equ	764	;# 
 13796   0002FD                     U5UIR           equ	765	;# 
 13797   0002FE                     U5ERRIR         equ	766	;# 
 13798   0002FF                     U5ERRIE         equ	767	;# 
 13799   000300                     SMT1TMR         equ	768	;# 
 13800   000300                     SMT1TMRL        equ	768	;# 
 13801   000301                     SMT1TMRH        equ	769	;# 
 13802   000302                     SMT1TMRU        equ	770	;# 
 13803   000303                     SMT1CPR         equ	771	;# 
 13804   000303                     SMT1CPRL        equ	771	;# 
 13805   000304                     SMT1CPRH        equ	772	;# 
 13806   000305                     SMT1CPRU        equ	773	;# 
 13807   000306                     SMT1CPW         equ	774	;# 
 13808   000306                     SMT1CPWL        equ	774	;# 
 13809   000307                     SMT1CPWH        equ	775	;# 
 13810   000308                     SMT1CPWU        equ	776	;# 
 13811   000309                     SMT1PR          equ	777	;# 
 13812   000309                     SMT1PRL         equ	777	;# 
 13813   00030A                     SMT1PRH         equ	778	;# 
 13814   00030B                     SMT1PRU         equ	779	;# 
 13815   00030C                     SMT1CON0        equ	780	;# 
 13816   00030D                     SMT1CON1        equ	781	;# 
 13817   00030E                     SMT1STAT        equ	782	;# 
 13818   00030F                     SMT1CLK         equ	783	;# 
 13819   000310                     SMT1SIG         equ	784	;# 
 13820   000311                     SMT1WIN         equ	785	;# 
 13821   000318                     TMR0L           equ	792	;# 
 13822   000318                     TMR0            equ	792	;# 
 13823   000319                     TMR0H           equ	793	;# 
 13824   000319                     PR0             equ	793	;# 
 13825   00031A                     T0CON0          equ	794	;# 
 13826   00031B                     T0CON1          equ	795	;# 
 13827   00031C                     TMR1            equ	796	;# 
 13828   00031C                     TMR1L           equ	796	;# 
 13829   00031D                     TMR1H           equ	797	;# 
 13830   00031E                     T1CON           equ	798	;# 
 13831   00031E                     TMR1CON         equ	798	;# 
 13832   00031F                     T1GCON          equ	799	;# 
 13833   00031F                     TMR1GCON        equ	799	;# 
 13834   000320                     T1GATE          equ	800	;# 
 13835   000320                     TMR1GATE        equ	800	;# 
 13836   000321                     T1CLK           equ	801	;# 
 13837   000321                     TMR1CLK         equ	801	;# 
 13838   000321                     PR1             equ	801	;# 
 13839   000322                     T2TMR           equ	802	;# 
 13840   000322                     TMR2            equ	802	;# 
 13841   000323                     T2PR            equ	803	;# 
 13842   000323                     PR2             equ	803	;# 
 13843   000324                     T2CON           equ	804	;# 
 13844   000325                     T2HLT           equ	805	;# 
 13845   000326                     T2CLKCON        equ	806	;# 
 13846   000326                     T2CLK           equ	806	;# 
 13847   000327                     T2RST           equ	807	;# 
 13848   000328                     TMR3            equ	808	;# 
 13849   000328                     TMR3L           equ	808	;# 
 13850   000329                     TMR3H           equ	809	;# 
 13851   00032A                     T3CON           equ	810	;# 
 13852   00032A                     TMR3CON         equ	810	;# 
 13853   00032B                     T3GCON          equ	811	;# 
 13854   00032B                     TMR3GCON        equ	811	;# 
 13855   00032C                     T3GATE          equ	812	;# 
 13856   00032C                     TMR3GATE        equ	812	;# 
 13857   00032D                     T3CLK           equ	813	;# 
 13858   00032D                     TMR3CLK         equ	813	;# 
 13859   00032D                     PR3             equ	813	;# 
 13860   00032E                     T4TMR           equ	814	;# 
 13861   00032E                     TMR4            equ	814	;# 
 13862   00032F                     T4PR            equ	815	;# 
 13863   00032F                     PR4             equ	815	;# 
 13864   000330                     T4CON           equ	816	;# 
 13865   000331                     T4HLT           equ	817	;# 
 13866   000332                     T4CLKCON        equ	818	;# 
 13867   000332                     T4CLK           equ	818	;# 
 13868   000333                     T4RST           equ	819	;# 
 13869   000334                     TMR5            equ	820	;# 
 13870   000334                     TMR5L           equ	820	;# 
 13871   000335                     TMR5H           equ	821	;# 
 13872   000336                     T5CON           equ	822	;# 
 13873   000336                     TMR5CON         equ	822	;# 
 13874   000337                     T5GCON          equ	823	;# 
 13875   000337                     TMR5GCON        equ	823	;# 
 13876   000338                     T5GATE          equ	824	;# 
 13877   000338                     TMR5GATE        equ	824	;# 
 13878   000339                     T5CLK           equ	825	;# 
 13879   000339                     TMR5CLK         equ	825	;# 
 13880   000339                     PR5             equ	825	;# 
 13881   00033A                     T6TMR           equ	826	;# 
 13882   00033A                     TMR6            equ	826	;# 
 13883   00033B                     T6PR            equ	827	;# 
 13884   00033B                     PR6             equ	827	;# 
 13885   00033C                     T6CON           equ	828	;# 
 13886   00033D                     T6HLT           equ	829	;# 
 13887   00033E                     T6CLKCON        equ	830	;# 
 13888   00033E                     T6CLK           equ	830	;# 
 13889   00033F                     T6RST           equ	831	;# 
 13890   000340                     CCPR1           equ	832	;# 
 13891   000340                     CCPR1L          equ	832	;# 
 13892   000341                     CCPR1H          equ	833	;# 
 13893   000342                     CCP1CON         equ	834	;# 
 13894   000343                     CCP1CAP         equ	835	;# 
 13895   000344                     CCPR2           equ	836	;# 
 13896   000344                     CCPR2L          equ	836	;# 
 13897   000345                     CCPR2H          equ	837	;# 
 13898   000346                     CCP2CON         equ	838	;# 
 13899   000347                     CCP2CAP         equ	839	;# 
 13900   000348                     CCPR3           equ	840	;# 
 13901   000348                     CCPR3L          equ	840	;# 
 13902   000349                     CCPR3H          equ	841	;# 
 13903   00034A                     CCP3CON         equ	842	;# 
 13904   00034B                     CCP3CAP         equ	843	;# 
 13905   00034C                     CCPTMRS0        equ	844	;# 
 13906   00034F                     CRCDATA         equ	847	;# 
 13907   00034F                     CRCDATAL        equ	847	;# 
 13908   000350                     CRCDATAH        equ	848	;# 
 13909   000351                     CRCDATAU        equ	849	;# 
 13910   000352                     CRCDATAT        equ	850	;# 
 13911   000353                     CRCOUT          equ	851	;# 
 13912   000353                     CRCSHFT         equ	851	;# 
 13913   000353                     CRCXOR          equ	851	;# 
 13914   000353                     CRCOUTL         equ	851	;# 
 13915   000353                     CRCSHFTL        equ	851	;# 
 13916   000353                     CRCSHIFTL       equ	851	;# 
 13917   000353                     CRCXORL         equ	851	;# 
 13918   000354                     CRCOUTH         equ	852	;# 
 13919   000354                     CRCSHFTH        equ	852	;# 
 13920   000354                     CRCSHIFTH       equ	852	;# 
 13921   000354                     CRCXORH         equ	852	;# 
 13922   000355                     CRCOUTU         equ	853	;# 
 13923   000355                     CRCSHFTU        equ	853	;# 
 13924   000355                     CRCSHIFTU       equ	853	;# 
 13925   000355                     CRCXORU         equ	853	;# 
 13926   000356                     CRCOUTT         equ	854	;# 
 13927   000356                     CRCSHFTT        equ	854	;# 
 13928   000356                     CRCSHIFTT       equ	854	;# 
 13929   000356                     CRCXORT         equ	854	;# 
 13930   000357                     CRCCON0         equ	855	;# 
 13931   000358                     CRCCON1         equ	856	;# 
 13932   000359                     CRCCON2         equ	857	;# 
 13933   00035A                     SCANLADR        equ	858	;# 
 13934   00035A                     SCANLADRL       equ	858	;# 
 13935   00035B                     SCANLADRH       equ	859	;# 
 13936   00035C                     SCANLADRU       equ	860	;# 
 13937   00035D                     SCANHADR        equ	861	;# 
 13938   00035D                     SCANHADRL       equ	861	;# 
 13939   00035E                     SCANHADRH       equ	862	;# 
 13940   00035F                     SCANHADRU       equ	863	;# 
 13941   000360                     SCANCON0        equ	864	;# 
 13942   000361                     SCANTRIG        equ	865	;# 
 13943   000362                     IPR0            equ	866	;# 
 13944   000363                     IPR1            equ	867	;# 
 13945   000364                     IPR2            equ	868	;# 
 13946   000365                     IPR3            equ	869	;# 
 13947   000366                     IPR4            equ	870	;# 
 13948   000367                     IPR5            equ	871	;# 
 13949   000368                     IPR6            equ	872	;# 
 13950   000369                     IPR7            equ	873	;# 
 13951   00036A                     IPR8            equ	874	;# 
 13952   00036B                     IPR9            equ	875	;# 
 13953   00036C                     IPR10           equ	876	;# 
 13954   00036D                     IPR11           equ	877	;# 
 13955   00036E                     IPR12           equ	878	;# 
 13956   00036F                     IPR13           equ	879	;# 
 13957   000370                     IPR14           equ	880	;# 
 13958   000371                     IPR15           equ	881	;# 
 13959   000373                     STATUS_CSHAD    equ	883	;# 
 13960   000374                     WREG_CSHAD      equ	884	;# 
 13961   000375                     BSR_CSHAD       equ	885	;# 
 13962   000376                     SHADCON         equ	886	;# 
 13963   000377                     STATUS_SHAD     equ	887	;# 
 13964   000378                     WREG_SHAD       equ	888	;# 
 13965   000379                     BSR_SHAD        equ	889	;# 
 13966   00037A                     PCLATH_SHAD     equ	890	;# 
 13967   00037B                     PCLATU_SHAD     equ	891	;# 
 13968   00037C                     FSR0SH          equ	892	;# 
 13969   00037C                     FSR0L_SHAD      equ	892	;# 
 13970   00037D                     FSR0H_SHAD      equ	893	;# 
 13971   00037E                     FSR1SH          equ	894	;# 
 13972   00037E                     FSR1L_SHAD      equ	894	;# 
 13973   00037F                     FSR1H_SHAD      equ	895	;# 
 13974   000380                     FSR2SH          equ	896	;# 
 13975   000380                     FSR2L_SHAD      equ	896	;# 
 13976   000381                     FSR2H_SHAD      equ	897	;# 
 13977   000382                     PRODSH          equ	898	;# 
 13978   000382                     PRODL_SHAD      equ	898	;# 
 13979   000383                     PRODH_SHAD      equ	899	;# 
 13980   000387                     TU16ACON0       equ	903	;# 
 13981   000388                     TU16ACON1       equ	904	;# 
 13982   000389                     TU16AHLT        equ	905	;# 
 13983   00038A                     TU16APS         equ	906	;# 
 13984   00038B                     TU16ATMR        equ	907	;# 
 13985   00038B                     TU16ACR         equ	907	;# 
 13986   00038B                     TU16ATMRL       equ	907	;# 
 13987   00038B                     TU16ACRL        equ	907	;# 
 13988   00038C                     TU16ATMRH       equ	908	;# 
 13989   00038C                     TU16ACRH        equ	908	;# 
 13990   00038D                     TU16APR         equ	909	;# 
 13991   00038D                     TU16APRL        equ	909	;# 
 13992   00038E                     TU16APRH        equ	910	;# 
 13993   00038F                     TU16ACLK        equ	911	;# 
 13994   000390                     TU16AERS        equ	912	;# 
 13995   000393                     TU16BCON0       equ	915	;# 
 13996   000394                     TU16BCON1       equ	916	;# 
 13997   000395                     TU16BHLT        equ	917	;# 
 13998   000396                     TU16BPS         equ	918	;# 
 13999   000397                     TU16BTMR        equ	919	;# 
 14000   000397                     TU16BCR         equ	919	;# 
 14001   000397                     TU16BTMRL       equ	919	;# 
 14002   000397                     TU16BCRL        equ	919	;# 
 14003   000398                     TU16BTMRH       equ	920	;# 
 14004   000398                     TU16BCRH        equ	920	;# 
 14005   000399                     TU16BPR         equ	921	;# 
 14006   000399                     TU16BPRL        equ	921	;# 
 14007   00039A                     TU16BPRH        equ	922	;# 
 14008   00039B                     TU16BCLK        equ	923	;# 
 14009   00039C                     TU16BERS        equ	924	;# 
 14010   0003BB                     TUCHAIN         equ	955	;# 
 14011   0003BC                     CWG1CLK         equ	956	;# 
 14012   0003BC                     CWG1CLKCON      equ	956	;# 
 14013   0003BD                     CWG1ISM         equ	957	;# 
 14014   0003BE                     CWG1DBR         equ	958	;# 
 14015   0003BF                     CWG1DBF         equ	959	;# 
 14016   0003C0                     CWG1CON0        equ	960	;# 
 14017   0003C1                     CWG1CON1        equ	961	;# 
 14018   0003C2                     CWG1AS0         equ	962	;# 
 14019   0003C3                     CWG1AS1         equ	963	;# 
 14020   0003C4                     CWG1STR         equ	964	;# 
 14021   0003C5                     CWG2CLK         equ	965	;# 
 14022   0003C5                     CWG2CLKCON      equ	965	;# 
 14023   0003C6                     CWG2ISM         equ	966	;# 
 14024   0003C7                     CWG2DBR         equ	967	;# 
 14025   0003C8                     CWG2DBF         equ	968	;# 
 14026   0003C9                     CWG2CON0        equ	969	;# 
 14027   0003CA                     CWG2CON1        equ	970	;# 
 14028   0003CB                     CWG2AS0         equ	971	;# 
 14029   0003CC                     CWG2AS1         equ	972	;# 
 14030   0003CD                     CWG2STR         equ	973	;# 
 14031   0003CE                     CWG3CLK         equ	974	;# 
 14032   0003CE                     CWG3CLKCON      equ	974	;# 
 14033   0003CF                     CWG3ISM         equ	975	;# 
 14034   0003D0                     CWG3DBR         equ	976	;# 
 14035   0003D1                     CWG3DBF         equ	977	;# 
 14036   0003D2                     CWG3CON0        equ	978	;# 
 14037   0003D3                     CWG3CON1        equ	979	;# 
 14038   0003D4                     CWG3AS0         equ	980	;# 
 14039   0003D5                     CWG3AS1         equ	981	;# 
 14040   0003D6                     CWG3STR         equ	982	;# 
 14041   0003D7                     FVRCON          equ	983	;# 
 14042   0003D8                     ADCPCON         equ	984	;# 
 14043   0003D8                     ADCP            equ	984	;# 
 14044   0003D9                     ADLTH           equ	985	;# 
 14045   0003D9                     ADLTHL          equ	985	;# 
 14046   0003DA                     ADLTHH          equ	986	;# 
 14047   0003DB                     ADUTH           equ	987	;# 
 14048   0003DB                     ADUTHL          equ	987	;# 
 14049   0003DC                     ADUTHH          equ	988	;# 
 14050   0003DD                     ADERR           equ	989	;# 
 14051   0003DD                     ADERRL          equ	989	;# 
 14052   0003DE                     ADERRH          equ	990	;# 
 14053   0003DF                     ADSTPT          equ	991	;# 
 14054   0003DF                     ADSTPTL         equ	991	;# 
 14055   0003E0                     ADSTPTH         equ	992	;# 
 14056   0003E1                     ADFLTR          equ	993	;# 
 14057   0003E1                     ADFLTRL         equ	993	;# 
 14058   0003E2                     ADFLTRH         equ	994	;# 
 14059   0003E3                     ADACC           equ	995	;# 
 14060   0003E3                     ADACCL          equ	995	;# 
 14061   0003E4                     ADACCH          equ	996	;# 
 14062   0003E5                     ADACCU          equ	997	;# 
 14063   0003E6                     ADCNT           equ	998	;# 
 14064   0003E7                     ADRPT           equ	999	;# 
 14065   0003E8                     ADPREV          equ	1000	;# 
 14066   0003E8                     ADPREVL         equ	1000	;# 
 14067   0003E9                     ADPREVH         equ	1001	;# 
 14068   0003EA                     ADRES           equ	1002	;# 
 14069   0003EA                     ADRESL          equ	1002	;# 
 14070   0003EB                     ADRESH          equ	1003	;# 
 14071   0003EC                     ADPCH           equ	1004	;# 
 14072   0003EE                     ADACQ           equ	1006	;# 
 14073   0003EE                     ADACQL          equ	1006	;# 
 14074   0003EF                     ADACQH          equ	1007	;# 
 14075   0003F0                     ADCAP           equ	1008	;# 
 14076   0003F1                     ADPRE           equ	1009	;# 
 14077   0003F1                     ADPREL          equ	1009	;# 
 14078   0003F2                     ADPREH          equ	1010	;# 
 14079   0003F3                     ADCON0          equ	1011	;# 
 14080   0003F4                     ADCON1          equ	1012	;# 
 14081   0003F5                     ADCON2          equ	1013	;# 
 14082   0003F6                     ADCON3          equ	1014	;# 
 14083   0003F7                     ADSTAT          equ	1015	;# 
 14084   0003F8                     ADREF           equ	1016	;# 
 14085   0003F9                     ADACT           equ	1017	;# 
 14086   0003FA                     ADCLK           equ	1018	;# 
 14087   0003FB                     ADCTX           equ	1019	;# 
 14088   0003FC                     ADCSEL1         equ	1020	;# 
 14089   0003FD                     ADCSEL2         equ	1021	;# 
 14090   0003FE                     ADCSEL3         equ	1022	;# 
 14091   0003FF                     ADCSEL4         equ	1023	;# 
 14092   000400                     ANSELA          equ	1024	;# 
 14093   000401                     WPUA            equ	1025	;# 
 14094   000402                     ODCONA          equ	1026	;# 
 14095   000403                     SLRCONA         equ	1027	;# 
 14096   000404                     INLVLA          equ	1028	;# 
 14097   000405                     IOCAP           equ	1029	;# 
 14098   000406                     IOCAN           equ	1030	;# 
 14099   000407                     IOCAF           equ	1031	;# 
 14100   000408                     ANSELB          equ	1032	;# 
 14101   000409                     WPUB            equ	1033	;# 
 14102   00040A                     ODCONB          equ	1034	;# 
 14103   00040B                     SLRCONB         equ	1035	;# 
 14104   00040C                     INLVLB          equ	1036	;# 
 14105   00040D                     IOCBP           equ	1037	;# 
 14106   00040E                     IOCBN           equ	1038	;# 
 14107   00040F                     IOCBF           equ	1039	;# 
 14108   000410                     ANSELC          equ	1040	;# 
 14109   000411                     WPUC            equ	1041	;# 
 14110   000412                     ODCONC          equ	1042	;# 
 14111   000413                     SLRCONC         equ	1043	;# 
 14112   000414                     INLVLC          equ	1044	;# 
 14113   000415                     IOCCP           equ	1045	;# 
 14114   000416                     IOCCN           equ	1046	;# 
 14115   000417                     IOCCF           equ	1047	;# 
 14116   000421                     WPUE            equ	1057	;# 
 14117   000424                     INLVLE          equ	1060	;# 
 14118   000425                     IOCEP           equ	1061	;# 
 14119   000426                     IOCEN           equ	1062	;# 
 14120   000427                     IOCEF           equ	1063	;# 
 14121   000440                     NCO1ACC         equ	1088	;# 
 14122   000440                     NCO1ACCL        equ	1088	;# 
 14123   000441                     NCO1ACCH        equ	1089	;# 
 14124   000442                     NCO1ACCU        equ	1090	;# 
 14125   000443                     NCO1INC         equ	1091	;# 
 14126   000443                     NCO1INCL        equ	1091	;# 
 14127   000444                     NCO1INCH        equ	1092	;# 
 14128   000445                     NCO1INCU        equ	1093	;# 
 14129   000446                     NCO1CON         equ	1094	;# 
 14130   000447                     NCO1CLK         equ	1095	;# 
 14131   000448                     NCO2ACC         equ	1096	;# 
 14132   000448                     NCO2ACCL        equ	1096	;# 
 14133   000449                     NCO2ACCH        equ	1097	;# 
 14134   00044A                     NCO2ACCU        equ	1098	;# 
 14135   00044B                     NCO2INC         equ	1099	;# 
 14136   00044B                     NCO2INCL        equ	1099	;# 
 14137   00044C                     NCO2INCH        equ	1100	;# 
 14138   00044D                     NCO2INCU        equ	1101	;# 
 14139   00044E                     NCO2CON         equ	1102	;# 
 14140   00044F                     NCO2CLK         equ	1103	;# 
 14141   000450                     NCO3ACC         equ	1104	;# 
 14142   000450                     NCO3ACCL        equ	1104	;# 
 14143   000451                     NCO3ACCH        equ	1105	;# 
 14144   000452                     NCO3ACCU        equ	1106	;# 
 14145   000453                     NCO3INC         equ	1107	;# 
 14146   000453                     NCO3INCL        equ	1107	;# 
 14147   000454                     NCO3INCH        equ	1108	;# 
 14148   000455                     NCO3INCU        equ	1109	;# 
 14149   000456                     NCO3CON         equ	1110	;# 
 14150   000457                     NCO3CLK         equ	1111	;# 
 14151   000458                     FSCMCON         equ	1112	;# 
 14152   000459                     IVTLOCK         equ	1113	;# 
 14153   00045A                     IVTAD           equ	1114	;# 
 14154   00045A                     IVTADL          equ	1114	;# 
 14155   00045B                     IVTADH          equ	1115	;# 
 14156   00045C                     IVTADU          equ	1116	;# 
 14157   00045D                     IVTBASE         equ	1117	;# 
 14158   00045D                     IVTBASEL        equ	1117	;# 
 14159   00045E                     IVTBASEH        equ	1118	;# 
 14160   00045F                     IVTBASEU        equ	1119	;# 
 14161   000460                     PWM1ERS         equ	1120	;# 
 14162   000461                     PWM1CLK         equ	1121	;# 
 14163   000462                     PWM1LDS         equ	1122	;# 
 14164   000463                     PWM1PR          equ	1123	;# 
 14165   000463                     PWM1PRL         equ	1123	;# 
 14166   000464                     PWM1PRH         equ	1124	;# 
 14167   000465                     PWM1CPRE        equ	1125	;# 
 14168   000466                     PWM1PIPOS       equ	1126	;# 
 14169   000467                     PWM1GIR         equ	1127	;# 
 14170   000468                     PWM1GIE         equ	1128	;# 
 14171   000469                     PWM1CON         equ	1129	;# 
 14172   00046A                     PWM1S1CFG       equ	1130	;# 
 14173   00046B                     PWM1S1P1        equ	1131	;# 
 14174   00046B                     PWM1S1P1L       equ	1131	;# 
 14175   00046C                     PWM1S1P1H       equ	1132	;# 
 14176   00046D                     PWM1S1P2        equ	1133	;# 
 14177   00046D                     PWM1S1P2L       equ	1133	;# 
 14178   00046E                     PWM1S1P2H       equ	1134	;# 
 14179   00046F                     PWM2ERS         equ	1135	;# 
 14180   000470                     PWM2CLK         equ	1136	;# 
 14181   000471                     PWM2LDS         equ	1137	;# 
 14182   000472                     PWM2PR          equ	1138	;# 
 14183   000472                     PWM2PRL         equ	1138	;# 
 14184   000473                     PWM2PRH         equ	1139	;# 
 14185   000474                     PWM2CPRE        equ	1140	;# 
 14186   000475                     PWM2PIPOS       equ	1141	;# 
 14187   000476                     PWM2GIR         equ	1142	;# 
 14188   000477                     PWM2GIE         equ	1143	;# 
 14189   000478                     PWM2CON         equ	1144	;# 
 14190   000479                     PWM2S1CFG       equ	1145	;# 
 14191   00047A                     PWM2S1P1        equ	1146	;# 
 14192   00047A                     PWM2S1P1L       equ	1146	;# 
 14193   00047B                     PWM2S1P1H       equ	1147	;# 
 14194   00047C                     PWM2S1P2        equ	1148	;# 
 14195   00047C                     PWM2S1P2L       equ	1148	;# 
 14196   00047D                     PWM2S1P2H       equ	1149	;# 
 14197   00047E                     PWM3ERS         equ	1150	;# 
 14198   00047F                     PWM3CLK         equ	1151	;# 
 14199   000480                     PWM3LDS         equ	1152	;# 
 14200   000481                     PWM3PR          equ	1153	;# 
 14201   000481                     PWM3PRL         equ	1153	;# 
 14202   000482                     PWM3PRH         equ	1154	;# 
 14203   000483                     PWM3CPRE        equ	1155	;# 
 14204   000484                     PWM3PIPOS       equ	1156	;# 
 14205   000485                     PWM3GIR         equ	1157	;# 
 14206   000486                     PWM3GIE         equ	1158	;# 
 14207   000487                     PWM3CON         equ	1159	;# 
 14208   000488                     PWM3S1CFG       equ	1160	;# 
 14209   000489                     PWM3S1P1        equ	1161	;# 
 14210   000489                     PWM3S1P1L       equ	1161	;# 
 14211   00048A                     PWM3S1P1H       equ	1162	;# 
 14212   00048B                     PWM3S1P2        equ	1163	;# 
 14213   00048B                     PWM3S1P2L       equ	1163	;# 
 14214   00048C                     PWM3S1P2H       equ	1164	;# 
 14215   00048D                     PWM4ERS         equ	1165	;# 
 14216   00048E                     PWM4CLK         equ	1166	;# 
 14217   00048F                     PWM4LDS         equ	1167	;# 
 14218   000490                     PWM4PR          equ	1168	;# 
 14219   000490                     PWM4PRL         equ	1168	;# 
 14220   000491                     PWM4PRH         equ	1169	;# 
 14221   000492                     PWM4CPRE        equ	1170	;# 
 14222   000493                     PWM4PIPOS       equ	1171	;# 
 14223   000494                     PWM4GIR         equ	1172	;# 
 14224   000495                     PWM4GIE         equ	1173	;# 
 14225   000496                     PWM4CON         equ	1174	;# 
 14226   000497                     PWM4S1CFG       equ	1175	;# 
 14227   000498                     PWM4S1P1        equ	1176	;# 
 14228   000498                     PWM4S1P1L       equ	1176	;# 
 14229   000499                     PWM4S1P1H       equ	1177	;# 
 14230   00049A                     PWM4S1P2        equ	1178	;# 
 14231   00049A                     PWM4S1P2L       equ	1178	;# 
 14232   00049B                     PWM4S1P2H       equ	1179	;# 
 14233   00049C                     PWMLOAD         equ	1180	;# 
 14234   00049D                     PWMEN           equ	1181	;# 
 14235   00049E                     PIE0            equ	1182	;# 
 14236   00049F                     PIE1            equ	1183	;# 
 14237   0004A0                     PIE2            equ	1184	;# 
 14238   0004A1                     PIE3            equ	1185	;# 
 14239   0004A2                     PIE4            equ	1186	;# 
 14240   0004A3                     PIE5            equ	1187	;# 
 14241   0004A4                     PIE6            equ	1188	;# 
 14242   0004A5                     PIE7            equ	1189	;# 
 14243   0004A6                     PIE8            equ	1190	;# 
 14244   0004A7                     PIE9            equ	1191	;# 
 14245   0004A8                     PIE10           equ	1192	;# 
 14246   0004A9                     PIE11           equ	1193	;# 
 14247   0004AA                     PIE12           equ	1194	;# 
 14248   0004AB                     PIE13           equ	1195	;# 
 14249   0004AC                     PIE14           equ	1196	;# 
 14250   0004AD                     PIE15           equ	1197	;# 
 14251   0004AE                     PIR0            equ	1198	;# 
 14252   0004AF                     PIR1            equ	1199	;# 
 14253   0004B0                     PIR2            equ	1200	;# 
 14254   0004B1                     PIR3            equ	1201	;# 
 14255   0004B2                     PIR4            equ	1202	;# 
 14256   0004B3                     PIR5            equ	1203	;# 
 14257   0004B4                     PIR6            equ	1204	;# 
 14258   0004B5                     PIR7            equ	1205	;# 
 14259   0004B6                     PIR8            equ	1206	;# 
 14260   0004B7                     PIR9            equ	1207	;# 
 14261   0004B8                     PIR10           equ	1208	;# 
 14262   0004B9                     PIR11           equ	1209	;# 
 14263   0004BA                     PIR12           equ	1210	;# 
 14264   0004BB                     PIR13           equ	1211	;# 
 14265   0004BC                     PIR14           equ	1212	;# 
 14266   0004BD                     PIR15           equ	1213	;# 
 14267   0004BE                     LATA            equ	1214	;# 
 14268   0004BF                     LATB            equ	1215	;# 
 14269   0004C0                     LATC            equ	1216	;# 
 14270   0004C6                     TRISA           equ	1222	;# 
 14271   0004C7                     TRISB           equ	1223	;# 
 14272   0004C8                     TRISC           equ	1224	;# 
 14273   0004CA                     TRISE           equ	1226	;# 
 14274   0004CE                     PORTA           equ	1230	;# 
 14275   0004CF                     PORTB           equ	1231	;# 
 14276   0004D0                     PORTC           equ	1232	;# 
 14277   0004D2                     PORTE           equ	1234	;# 
 14278   0004D6                     INTCON0         equ	1238	;# 
 14279   0004D7                     INTCON1         equ	1239	;# 
 14280   0004D8                     STATUS          equ	1240	;# 
 14281   0004D9                     FSR2            equ	1241	;# 
 14282   0004D9                     FSR2L           equ	1241	;# 
 14283   0004DA                     FSR2H           equ	1242	;# 
 14284   0004DB                     PLUSW2          equ	1243	;# 
 14285   0004DC                     PREINC2         equ	1244	;# 
 14286   0004DD                     POSTDEC2        equ	1245	;# 
 14287   0004DE                     POSTINC2        equ	1246	;# 
 14288   0004DF                     INDF2           equ	1247	;# 
 14289   0004E0                     BSR             equ	1248	;# 
 14290   0004E1                     FSR1            equ	1249	;# 
 14291   0004E1                     FSR1L           equ	1249	;# 
 14292   0004E2                     FSR1H           equ	1250	;# 
 14293   0004E3                     PLUSW1          equ	1251	;# 
 14294   0004E4                     PREINC1         equ	1252	;# 
 14295   0004E5                     POSTDEC1        equ	1253	;# 
 14296   0004E6                     POSTINC1        equ	1254	;# 
 14297   0004E7                     INDF1           equ	1255	;# 
 14298   0004E8                     WREG            equ	1256	;# 
 14299   0004E9                     FSR0            equ	1257	;# 
 14300   0004E9                     FSR0L           equ	1257	;# 
 14301   0004EA                     FSR0H           equ	1258	;# 
 14302   0004EB                     PLUSW0          equ	1259	;# 
 14303   0004EC                     PREINC0         equ	1260	;# 
 14304   0004ED                     POSTDEC0        equ	1261	;# 
 14305   0004EE                     POSTINC0        equ	1262	;# 
 14306   0004EF                     INDF0           equ	1263	;# 
 14307   0004F0                     PCON0           equ	1264	;# 
 14308   0004F1                     PCON1           equ	1265	;# 
 14309   0004F2                     CPUDOZE         equ	1266	;# 
 14310   0004F3                     PROD            equ	1267	;# 
 14311   0004F3                     PRODL           equ	1267	;# 
 14312   0004F4                     PRODH           equ	1268	;# 
 14313   0004F5                     TABLAT          equ	1269	;# 
 14314   0004F6                     TBLPTR          equ	1270	;# 
 14315   0004F6                     TBLPTRL         equ	1270	;# 
 14316   0004F7                     TBLPTRH         equ	1271	;# 
 14317   0004F8                     TBLPTRU         equ	1272	;# 
 14318   0004F9                     PCLAT           equ	1273	;# 
 14319   0004F9                     PCL             equ	1273	;# 
 14320   0004FA                     PCLATH          equ	1274	;# 
 14321   0004FB                     PCLATU          equ	1275	;# 
 14322   0004FC                     STKPTR          equ	1276	;# 
 14323   0004FD                     TOS             equ	1277	;# 
 14324   0004FD                     TOSL            equ	1277	;# 
 14325   0004FE                     TOSH            equ	1278	;# 
 14326   0004FF                     TOSU            equ	1279	;# 
 14327   000038                     BOOTREG         equ	56	;# 
 14328   000039                     CLKRCON         equ	57	;# 
 14329   00003A                     CLKRCLK         equ	58	;# 
 14330   000040                     NVMCON0         equ	64	;# 
 14331   000041                     NVMCON1         equ	65	;# 
 14332   000042                     NVMLOCK         equ	66	;# 
 14333   000043                     NVMADR          equ	67	;# 
 14334   000043                     NVMADRL         equ	67	;# 
 14335   000044                     NVMADRH         equ	68	;# 
 14336   000045                     NVMADRU         equ	69	;# 
 14337   000046                     NVMDAT          equ	70	;# 
 14338   000046                     NVMDATL         equ	70	;# 
 14339   000047                     NVMDATH         equ	71	;# 
 14340   000048                     VREGCON         equ	72	;# 
 14341   000049                     BORCON          equ	73	;# 
 14342   00004A                     HLVDCON0        equ	74	;# 
 14343   00004B                     HLVDCON1        equ	75	;# 
 14344   00004C                     ZCDCON          equ	76	;# 
 14345   000060                     PMD0            equ	96	;# 
 14346   000061                     PMD1            equ	97	;# 
 14347   000062                     PMD2            equ	98	;# 
 14348   000063                     PMD3            equ	99	;# 
 14349   000064                     PMD4            equ	100	;# 
 14350   000065                     PMD5            equ	101	;# 
 14351   000066                     PMD6            equ	102	;# 
 14352   000067                     PMD7            equ	103	;# 
 14353   000068                     PMD8            equ	104	;# 
 14354   00006A                     MD1CON0         equ	106	;# 
 14355   00006B                     MD1CON1         equ	107	;# 
 14356   00006C                     MD1SRC          equ	108	;# 
 14357   00006D                     MD1CARL         equ	109	;# 
 14358   00006E                     MD1CARH         equ	110	;# 
 14359   00006F                     CMOUT           equ	111	;# 
 14360   000070                     CM1CON0         equ	112	;# 
 14361   000071                     CM1CON1         equ	113	;# 
 14362   000072                     CM1NCH          equ	114	;# 
 14363   000073                     CM1PCH          equ	115	;# 
 14364   000074                     CM2CON0         equ	116	;# 
 14365   000075                     CM2CON1         equ	117	;# 
 14366   000076                     CM2NCH          equ	118	;# 
 14367   000077                     CM2PCH          equ	119	;# 
 14368   000078                     WDTCON0         equ	120	;# 
 14369   000079                     WDTCON1         equ	121	;# 
 14370   00007A                     WDTPSL          equ	122	;# 
 14371   00007B                     WDTPSH          equ	123	;# 
 14372   00007C                     WDTTMR          equ	124	;# 
 14373   00007D                     DAC1DAT         equ	125	;# 
 14374   00007D                     DAC1DATL        equ	125	;# 
 14375   00007F                     DAC1CON         equ	127	;# 
 14376   000080                     SPI1RXB         equ	128	;# 
 14377   000081                     SPI1TXB         equ	129	;# 
 14378   000082                     SPI1TCNT        equ	130	;# 
 14379   000082                     SPI1TCNTL       equ	130	;# 
 14380   000083                     SPI1TCNTH       equ	131	;# 
 14381   000084                     SPI1CON0        equ	132	;# 
 14382   000085                     SPI1CON1        equ	133	;# 
 14383   000086                     SPI1CON2        equ	134	;# 
 14384   000087                     SPI1STATUS      equ	135	;# 
 14385   000088                     SPI1TWIDTH      equ	136	;# 
 14386   000089                     SPI1BAUD        equ	137	;# 
 14387   00008A                     SPI1INTF        equ	138	;# 
 14388   00008B                     SPI1INTE        equ	139	;# 
 14389   00008C                     SPI1CLK         equ	140	;# 
 14390   00008D                     SPI2RXB         equ	141	;# 
 14391   00008E                     SPI2TXB         equ	142	;# 
 14392   00008F                     SPI2TCNT        equ	143	;# 
 14393   00008F                     SPI2TCNTL       equ	143	;# 
 14394   000090                     SPI2TCNTH       equ	144	;# 
 14395   000091                     SPI2CON0        equ	145	;# 
 14396   000092                     SPI2CON1        equ	146	;# 
 14397   000093                     SPI2CON2        equ	147	;# 
 14398   000094                     SPI2STATUS      equ	148	;# 
 14399   000095                     SPI2TWIDTH      equ	149	;# 
 14400   000096                     SPI2BAUD        equ	150	;# 
 14401   000097                     SPI2INTF        equ	151	;# 
 14402   000098                     SPI2INTE        equ	152	;# 
 14403   000099                     SPI2CLK         equ	153	;# 
 14404   0000AC                     ACTCON          equ	172	;# 
 14405   0000AD                     OSCCON1         equ	173	;# 
 14406   0000AE                     OSCCON2         equ	174	;# 
 14407   0000AF                     OSCCON3         equ	175	;# 
 14408   0000B0                     OSCTUNE         equ	176	;# 
 14409   0000B1                     OSCFRQ          equ	177	;# 
 14410   0000B1                     OSCFREQ         equ	177	;# 
 14411   0000B2                     OSCSTAT         equ	178	;# 
 14412   0000B2                     OSCSTAT1        equ	178	;# 
 14413   0000B3                     OSCEN           equ	179	;# 
 14414   0000B4                     PRLOCK          equ	180	;# 
 14415   0000B5                     SCANPR          equ	181	;# 
 14416   0000B6                     DMA1PR          equ	182	;# 
 14417   0000B7                     DMA2PR          equ	183	;# 
 14418   0000B8                     DMA3PR          equ	184	;# 
 14419   0000B9                     DMA4PR          equ	185	;# 
 14420   0000BA                     DMA5PR          equ	186	;# 
 14421   0000BB                     DMA6PR          equ	187	;# 
 14422   0000BC                     DMA7PR          equ	188	;# 
 14423   0000BD                     DMA8PR          equ	189	;# 
 14424   0000BE                     MAINPR          equ	190	;# 
 14425   0000BF                     ISRPR           equ	191	;# 
 14426   0000D4                     CLCDATA         equ	212	;# 
 14427   0000D5                     CLCSELECT       equ	213	;# 
 14428   0000D6                     CLCnCON         equ	214	;# 
 14429   0000D7                     CLCnPOL         equ	215	;# 
 14430   0000D8                     CLCnSEL0        equ	216	;# 
 14431   0000D9                     CLCnSEL1        equ	217	;# 
 14432   0000DA                     CLCnSEL2        equ	218	;# 
 14433   0000DB                     CLCnSEL3        equ	219	;# 
 14434   0000DC                     CLCnGLS0        equ	220	;# 
 14435   0000DD                     CLCnGLS1        equ	221	;# 
 14436   0000DE                     CLCnGLS2        equ	222	;# 
 14437   0000DF                     CLCnGLS3        equ	223	;# 
 14438   0000E8                     DMASELECT       equ	232	;# 
 14439   0000E9                     DMAnBUF         equ	233	;# 
 14440   0000EA                     DMAnDCNT        equ	234	;# 
 14441   0000EA                     DMAnDCNTL       equ	234	;# 
 14442   0000EB                     DMAnDCNTH       equ	235	;# 
 14443   0000EC                     DMAnDPTR        equ	236	;# 
 14444   0000EC                     DMAnDPTRL       equ	236	;# 
 14445   0000ED                     DMAnDPTRH       equ	237	;# 
 14446   0000EE                     DMAnDSZ         equ	238	;# 
 14447   0000EE                     DMAnDSZL        equ	238	;# 
 14448   0000EF                     DMAnDSZH        equ	239	;# 
 14449   0000F0                     DMAnDSA         equ	240	;# 
 14450   0000F0                     DMAnDSAL        equ	240	;# 
 14451   0000F1                     DMAnDSAH        equ	241	;# 
 14452   0000F2                     DMAnSCNT        equ	242	;# 
 14453   0000F2                     DMAnSCNTL       equ	242	;# 
 14454   0000F3                     DMAnSCNTH       equ	243	;# 
 14455   0000F4                     DMAnSPTR        equ	244	;# 
 14456   0000F4                     DMAnSPTRL       equ	244	;# 
 14457   0000F5                     DMAnSPTRH       equ	245	;# 
 14458   0000F6                     DMAnSPTRU       equ	246	;# 
 14459   0000F7                     DMAnSSZ         equ	247	;# 
 14460   0000F7                     DMAnSSZL        equ	247	;# 
 14461   0000F8                     DMAnSSZH        equ	248	;# 
 14462   0000F9                     DMAnSSA         equ	249	;# 
 14463   0000F9                     DMAnSSAL        equ	249	;# 
 14464   0000FA                     DMAnSSAH        equ	250	;# 
 14465   0000FB                     DMAnSSAU        equ	251	;# 
 14466   0000FC                     DMAnCON0        equ	252	;# 
 14467   0000FD                     DMAnCON1        equ	253	;# 
 14468   0000FE                     DMAnAIRQ        equ	254	;# 
 14469   0000FF                     DMAnSIRQ        equ	255	;# 
 14470   000100                     C1CONL          equ	256	;# 
 14471   000101                     C1CONH          equ	257	;# 
 14472   000102                     C1CONU          equ	258	;# 
 14473   000103                     C1CONT          equ	259	;# 
 14474   000104                     C1NBTCFGL       equ	260	;# 
 14475   000105                     C1NBTCFGH       equ	261	;# 
 14476   000106                     C1NBTCFGU       equ	262	;# 
 14477   000107                     C1NBTCFGT       equ	263	;# 
 14478   000108                     C1DBTCFGL       equ	264	;# 
 14479   000109                     C1DBTCFGH       equ	265	;# 
 14480   00010A                     C1DBTCFGU       equ	266	;# 
 14481   00010B                     C1DBTCFGT       equ	267	;# 
 14482   00010C                     C1TDCL          equ	268	;# 
 14483   00010D                     C1TDCH          equ	269	;# 
 14484   00010E                     C1TDCU          equ	270	;# 
 14485   000110                     C1TBC           equ	272	;# 
 14486   000110                     C1TBCL          equ	272	;# 
 14487   000111                     C1TBCH          equ	273	;# 
 14488   000112                     C1TBCU          equ	274	;# 
 14489   000113                     C1TBCT          equ	275	;# 
 14490   000114                     C1TSCONL        equ	276	;# 
 14491   000115                     C1TSCONH        equ	277	;# 
 14492   000116                     C1TSCONU        equ	278	;# 
 14493   000117                     C1TSCONT        equ	279	;# 
 14494   000118                     C1VECL          equ	280	;# 
 14495   000119                     C1VECH          equ	281	;# 
 14496   00011A                     C1VECU          equ	282	;# 
 14497   00011B                     C1VECT          equ	283	;# 
 14498   00011C                     C1INTL          equ	284	;# 
 14499   00011D                     C1INTH          equ	285	;# 
 14500   00011E                     C1INTU          equ	286	;# 
 14501   00011F                     C1INTT          equ	287	;# 
 14502   000120                     C1RXIF          equ	288	;# 
 14503   000120                     C1RXIFL         equ	288	;# 
 14504   000121                     C1RXIFH         equ	289	;# 
 14505   000122                     C1RXIFU         equ	290	;# 
 14506   000123                     C1RXIFT         equ	291	;# 
 14507   000124                     C1TXIF          equ	292	;# 
 14508   000124                     C1TXIFL         equ	292	;# 
 14509   000125                     C1TXIFH         equ	293	;# 
 14510   000126                     C1TXIFU         equ	294	;# 
 14511   000127                     C1TXIFT         equ	295	;# 
 14512   000128                     C1RXOVIF        equ	296	;# 
 14513   000128                     C1RXOVIFL       equ	296	;# 
 14514   000129                     C1RXOVIFH       equ	297	;# 
 14515   00012A                     C1RXOVIFU       equ	298	;# 
 14516   00012B                     C1RXOVIFT       equ	299	;# 
 14517   00012C                     C1TXATIF        equ	300	;# 
 14518   00012C                     C1TXATIFL       equ	300	;# 
 14519   00012D                     C1TXATIFH       equ	301	;# 
 14520   00012E                     C1TXATIFU       equ	302	;# 
 14521   00012F                     C1TXATIFT       equ	303	;# 
 14522   000130                     C1TXREQ         equ	304	;# 
 14523   000130                     C1TXREQL        equ	304	;# 
 14524   000131                     C1TXREQH        equ	305	;# 
 14525   000132                     C1TXREQU        equ	306	;# 
 14526   000133                     C1TXREQT        equ	307	;# 
 14527   000134                     C1TRECL         equ	308	;# 
 14528   000135                     C1TRECH         equ	309	;# 
 14529   000136                     C1TRECU         equ	310	;# 
 14530   000137                     C1TRECT         equ	311	;# 
 14531   000138                     C1BDIAG0L       equ	312	;# 
 14532   000139                     C1BDIAG0H       equ	313	;# 
 14533   00013C                     C1BDIAG1L       equ	316	;# 
 14534   00013D                     C1BDIAG1H       equ	317	;# 
 14535   00013E                     C1BDIAG1U       equ	318	;# 
 14536   00013F                     C1BDIAG1T       equ	319	;# 
 14537   000140                     C1TEFCONL       equ	320	;# 
 14538   000141                     C1TEFCONH       equ	321	;# 
 14539   000142                     C1TEFCONU       equ	322	;# 
 14540   000143                     C1TEFCONT       equ	323	;# 
 14541   000144                     C1TEFSTAL       equ	324	;# 
 14542   000145                     C1TEFSTAH       equ	325	;# 
 14543   000146                     C1TEFSTAU       equ	326	;# 
 14544   000147                     C1TEFSTAT       equ	327	;# 
 14545   000148                     C1TEFUA         equ	328	;# 
 14546   000148                     C1TEFUAL        equ	328	;# 
 14547   000149                     C1TEFUAH        equ	329	;# 
 14548   00014A                     C1TEFUAU        equ	330	;# 
 14549   00014B                     C1TEFUAT        equ	331	;# 
 14550   00014C                     C1FIFOBA        equ	332	;# 
 14551   00014C                     C1FIFOBAL       equ	332	;# 
 14552   00014D                     C1FIFOBAH       equ	333	;# 
 14553   00014E                     C1FIFOBAU       equ	334	;# 
 14554   00014F                     C1FIFOBAT       equ	335	;# 
 14555   000150                     C1TXQCONL       equ	336	;# 
 14556   000151                     C1TXQCONH       equ	337	;# 
 14557   000152                     C1TXQCONU       equ	338	;# 
 14558   000153                     C1TXQCONT       equ	339	;# 
 14559   000154                     C1TXQSTAL       equ	340	;# 
 14560   000155                     C1TXQSTAH       equ	341	;# 
 14561   000156                     C1TXQSTAU       equ	342	;# 
 14562   000157                     C1TXQSTAT       equ	343	;# 
 14563   000158                     C1TXQUA         equ	344	;# 
 14564   000158                     C1TXQUAL        equ	344	;# 
 14565   000159                     C1TXQUAH        equ	345	;# 
 14566   00015A                     C1TXQUAU        equ	346	;# 
 14567   00015B                     C1TXQUAT        equ	347	;# 
 14568   00015C                     C1FIFOCON1      equ	348	;# 
 14569   00015C                     C1FIFOCON1L     equ	348	;# 
 14570   00015D                     C1FIFOCON1H     equ	349	;# 
 14571   00015E                     C1FIFOCON1U     equ	350	;# 
 14572   00015F                     C1FIFOCON1T     equ	351	;# 
 14573   000160                     C1FIFOSTA1      equ	352	;# 
 14574   000160                     C1FIFOSTA1L     equ	352	;# 
 14575   000161                     C1FIFOSTA1H     equ	353	;# 
 14576   000162                     C1FIFOSTA1U     equ	354	;# 
 14577   000163                     C1FIFOSTA1T     equ	355	;# 
 14578   000164                     C1FIFOUA1       equ	356	;# 
 14579   000164                     C1FIFOUA1L      equ	356	;# 
 14580   000165                     C1FIFOUA1H      equ	357	;# 
 14581   000166                     C1FIFOUA1U      equ	358	;# 
 14582   000167                     C1FIFOUA1T      equ	359	;# 
 14583   000168                     C1FIFOCON2      equ	360	;# 
 14584   000168                     C1FIFOCON2L     equ	360	;# 
 14585   000169                     C1FIFOCON2H     equ	361	;# 
 14586   00016A                     C1FIFOCON2U     equ	362	;# 
 14587   00016B                     C1FIFOCON2T     equ	363	;# 
 14588   00016C                     C1FIFOSTA2      equ	364	;# 
 14589   00016C                     C1FIFOSTA2L     equ	364	;# 
 14590   00016D                     C1FIFOSTA2H     equ	365	;# 
 14591   00016E                     C1FIFOSTA2U     equ	366	;# 
 14592   00016F                     C1FIFOSTA2T     equ	367	;# 
 14593   000170                     C1FIFOUA2       equ	368	;# 
 14594   000170                     C1FIFOUA2L      equ	368	;# 
 14595   000171                     C1FIFOUA2H      equ	369	;# 
 14596   000172                     C1FIFOUA2U      equ	370	;# 
 14597   000173                     C1FIFOUA2T      equ	371	;# 
 14598   000174                     C1FIFOCON3      equ	372	;# 
 14599   000174                     C1FIFOCON3L     equ	372	;# 
 14600   000175                     C1FIFOCON3H     equ	373	;# 
 14601   000176                     C1FIFOCON3U     equ	374	;# 
 14602   000177                     C1FIFOCON3T     equ	375	;# 
 14603   000178                     C1FIFOSTA3      equ	376	;# 
 14604   000178                     C1FIFOSTA3L     equ	376	;# 
 14605   000179                     C1FIFOSTA3H     equ	377	;# 
 14606   00017A                     C1FIFOSTA3U     equ	378	;# 
 14607   00017B                     C1FIFOSTA3T     equ	379	;# 
 14608   00017C                     C1FIFOUA3       equ	380	;# 
 14609   00017C                     C1FIFOUA3L      equ	380	;# 
 14610   00017D                     C1FIFOUA3H      equ	381	;# 
 14611   00017E                     C1FIFOUA3U      equ	382	;# 
 14612   00017F                     C1FIFOUA3T      equ	383	;# 
 14613   000180                     C1FLTCON0L      equ	384	;# 
 14614   000181                     C1FLTCON0H      equ	385	;# 
 14615   000182                     C1FLTCON0U      equ	386	;# 
 14616   000183                     C1FLTCON0T      equ	387	;# 
 14617   000184                     C1FLTCON1L      equ	388	;# 
 14618   000185                     C1FLTCON1H      equ	389	;# 
 14619   000186                     C1FLTCON1U      equ	390	;# 
 14620   000187                     C1FLTCON1T      equ	391	;# 
 14621   000188                     C1FLTCON2L      equ	392	;# 
 14622   000189                     C1FLTCON2H      equ	393	;# 
 14623   00018A                     C1FLTCON2U      equ	394	;# 
 14624   00018B                     C1FLTCON2T      equ	395	;# 
 14625   00018C                     C1FLTOBJ0       equ	396	;# 
 14626   00018C                     C1FLTOBJ0L      equ	396	;# 
 14627   00018D                     C1FLTOBJ0H      equ	397	;# 
 14628   00018E                     C1FLTOBJ0U      equ	398	;# 
 14629   00018F                     C1FLTOBJ0T      equ	399	;# 
 14630   000190                     C1MASK0         equ	400	;# 
 14631   000190                     C1MASK0L        equ	400	;# 
 14632   000191                     C1MASK0H        equ	401	;# 
 14633   000192                     C1MASK0U        equ	402	;# 
 14634   000193                     C1MASK0T        equ	403	;# 
 14635   000194                     C1FLTOBJ1       equ	404	;# 
 14636   000194                     C1FLTOBJ1L      equ	404	;# 
 14637   000195                     C1FLTOBJ1H      equ	405	;# 
 14638   000196                     C1FLTOBJ1U      equ	406	;# 
 14639   000197                     C1FLTOBJ1T      equ	407	;# 
 14640   000198                     C1MASK1         equ	408	;# 
 14641   000198                     C1MASK1L        equ	408	;# 
 14642   000199                     C1MASK1H        equ	409	;# 
 14643   00019A                     C1MASK1U        equ	410	;# 
 14644   00019B                     C1MASK1T        equ	411	;# 
 14645   00019C                     C1FLTOBJ2       equ	412	;# 
 14646   00019C                     C1FLTOBJ2L      equ	412	;# 
 14647   00019D                     C1FLTOBJ2H      equ	413	;# 
 14648   00019E                     C1FLTOBJ2U      equ	414	;# 
 14649   00019F                     C1FLTOBJ2T      equ	415	;# 
 14650   0001A0                     C1MASK2         equ	416	;# 
 14651   0001A0                     C1MASK2L        equ	416	;# 
 14652   0001A1                     C1MASK2H        equ	417	;# 
 14653   0001A2                     C1MASK2U        equ	418	;# 
 14654   0001A3                     C1MASK2T        equ	419	;# 
 14655   0001A4                     C1FLTOBJ3       equ	420	;# 
 14656   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14657   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14658   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14659   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14660   0001A8                     C1MASK3         equ	424	;# 
 14661   0001A8                     C1MASK3L        equ	424	;# 
 14662   0001A9                     C1MASK3H        equ	425	;# 
 14663   0001AA                     C1MASK3U        equ	426	;# 
 14664   0001AB                     C1MASK3T        equ	427	;# 
 14665   0001AC                     C1FLTOBJ4       equ	428	;# 
 14666   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14667   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14668   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14669   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14670   0001B0                     C1MASK4         equ	432	;# 
 14671   0001B0                     C1MASK4L        equ	432	;# 
 14672   0001B1                     C1MASK4H        equ	433	;# 
 14673   0001B2                     C1MASK4U        equ	434	;# 
 14674   0001B3                     C1MASK4T        equ	435	;# 
 14675   0001B4                     C1FLTOBJ5       equ	436	;# 
 14676   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14677   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14678   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14679   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14680   0001B8                     C1MASK5         equ	440	;# 
 14681   0001B8                     C1MASK5L        equ	440	;# 
 14682   0001B9                     C1MASK5H        equ	441	;# 
 14683   0001BA                     C1MASK5U        equ	442	;# 
 14684   0001BB                     C1MASK5T        equ	443	;# 
 14685   0001BC                     C1FLTOBJ6       equ	444	;# 
 14686   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14687   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14688   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14689   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14690   0001C0                     C1MASK6         equ	448	;# 
 14691   0001C0                     C1MASK6L        equ	448	;# 
 14692   0001C1                     C1MASK6H        equ	449	;# 
 14693   0001C2                     C1MASK6U        equ	450	;# 
 14694   0001C3                     C1MASK6T        equ	451	;# 
 14695   0001C4                     C1FLTOBJ7       equ	452	;# 
 14696   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14697   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14698   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14699   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14700   0001C8                     C1MASK7         equ	456	;# 
 14701   0001C8                     C1MASK7L        equ	456	;# 
 14702   0001C9                     C1MASK7H        equ	457	;# 
 14703   0001CA                     C1MASK7U        equ	458	;# 
 14704   0001CB                     C1MASK7T        equ	459	;# 
 14705   0001CC                     C1FLTOBJ8       equ	460	;# 
 14706   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14707   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14708   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14709   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14710   0001D0                     C1MASK8         equ	464	;# 
 14711   0001D0                     C1MASK8L        equ	464	;# 
 14712   0001D1                     C1MASK8H        equ	465	;# 
 14713   0001D2                     C1MASK8U        equ	466	;# 
 14714   0001D3                     C1MASK8T        equ	467	;# 
 14715   0001D4                     C1FLTOBJ9       equ	468	;# 
 14716   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14717   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14718   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14719   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14720   0001D8                     C1MASK9         equ	472	;# 
 14721   0001D8                     C1MASK9L        equ	472	;# 
 14722   0001D9                     C1MASK9H        equ	473	;# 
 14723   0001DA                     C1MASK9U        equ	474	;# 
 14724   0001DB                     C1MASK9T        equ	475	;# 
 14725   0001DC                     C1FLTOBJ10      equ	476	;# 
 14726   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14727   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14728   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14729   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14730   0001E0                     C1MASK10        equ	480	;# 
 14731   0001E0                     C1MASK10L       equ	480	;# 
 14732   0001E1                     C1MASK10H       equ	481	;# 
 14733   0001E2                     C1MASK10U       equ	482	;# 
 14734   0001E3                     C1MASK10T       equ	483	;# 
 14735   0001E4                     C1FLTOBJ11      equ	484	;# 
 14736   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14737   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14738   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14739   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14740   0001E8                     C1MASK11        equ	488	;# 
 14741   0001E8                     C1MASK11L       equ	488	;# 
 14742   0001E9                     C1MASK11H       equ	489	;# 
 14743   0001EA                     C1MASK11U       equ	490	;# 
 14744   0001EB                     C1MASK11T       equ	491	;# 
 14745   000200                     PPSLOCK         equ	512	;# 
 14746   000201                     RA0PPS          equ	513	;# 
 14747   000202                     RA1PPS          equ	514	;# 
 14748   000203                     RA2PPS          equ	515	;# 
 14749   000204                     RA3PPS          equ	516	;# 
 14750   000205                     RA4PPS          equ	517	;# 
 14751   000206                     RA5PPS          equ	518	;# 
 14752   000207                     RA6PPS          equ	519	;# 
 14753   000208                     RA7PPS          equ	520	;# 
 14754   000209                     RB0PPS          equ	521	;# 
 14755   00020A                     RB1PPS          equ	522	;# 
 14756   00020B                     RB2PPS          equ	523	;# 
 14757   00020C                     RB3PPS          equ	524	;# 
 14758   00020D                     RB4PPS          equ	525	;# 
 14759   00020E                     RB5PPS          equ	526	;# 
 14760   00020F                     RB6PPS          equ	527	;# 
 14761   000210                     RB7PPS          equ	528	;# 
 14762   000211                     RC0PPS          equ	529	;# 
 14763   000212                     RC1PPS          equ	530	;# 
 14764   000213                     RC2PPS          equ	531	;# 
 14765   000214                     RC3PPS          equ	532	;# 
 14766   000215                     RC4PPS          equ	533	;# 
 14767   000216                     RC5PPS          equ	534	;# 
 14768   000217                     RC6PPS          equ	535	;# 
 14769   000218                     RC7PPS          equ	536	;# 
 14770   00023D                     CANRXPPS        equ	573	;# 
 14771   00023E                     INT0PPS         equ	574	;# 
 14772   00023F                     INT1PPS         equ	575	;# 
 14773   000240                     INT2PPS         equ	576	;# 
 14774   000241                     T0CKIPPS        equ	577	;# 
 14775   000242                     T1CKIPPS        equ	578	;# 
 14776   000243                     T1GPPS          equ	579	;# 
 14777   000244                     T3CKIPPS        equ	580	;# 
 14778   000245                     T3GPPS          equ	581	;# 
 14779   000246                     T5CKIPPS        equ	582	;# 
 14780   000247                     T5GPPS          equ	583	;# 
 14781   000248                     T2INPPS         equ	584	;# 
 14782   000249                     T4INPPS         equ	585	;# 
 14783   00024A                     T6INPPS         equ	586	;# 
 14784   00024B                     TUIN0PPS        equ	587	;# 
 14785   00024C                     TUIN1PPS        equ	588	;# 
 14786   00024F                     CCP1PPS         equ	591	;# 
 14787   000250                     CCP2PPS         equ	592	;# 
 14788   000251                     CCP3PPS         equ	593	;# 
 14789   000253                     PWM1ERSPPS      equ	595	;# 
 14790   000254                     PWM2ERSPPS      equ	596	;# 
 14791   000255                     PWM3ERSPPS      equ	597	;# 
 14792   000256                     PWM4ERSPPS      equ	598	;# 
 14793   000257                     PWMIN0PPS       equ	599	;# 
 14794   000258                     PWMIN1PPS       equ	600	;# 
 14795   000259                     SMT1WINPPS      equ	601	;# 
 14796   00025A                     SMT1SIGPPS      equ	602	;# 
 14797   00025B                     CWG1PPS         equ	603	;# 
 14798   00025B                     CWG1INPPS       equ	603	;# 
 14799   00025C                     CWG2PPS         equ	604	;# 
 14800   00025C                     CWG2INPPS       equ	604	;# 
 14801   00025D                     CWG3PPS         equ	605	;# 
 14802   00025D                     CWG3INPPS       equ	605	;# 
 14803   00025E                     MD1CARLPPS      equ	606	;# 
 14804   00025E                     MDCARLPPS       equ	606	;# 
 14805   00025F                     MD1CARHPPS      equ	607	;# 
 14806   00025F                     MDCARHPPS       equ	607	;# 
 14807   000260                     MD1SRCPPS       equ	608	;# 
 14808   000260                     MDSRCPPS        equ	608	;# 
 14809   000261                     CLCIN0PPS       equ	609	;# 
 14810   000262                     CLCIN1PPS       equ	610	;# 
 14811   000263                     CLCIN2PPS       equ	611	;# 
 14812   000264                     CLCIN3PPS       equ	612	;# 
 14813   000265                     CLCIN4PPS       equ	613	;# 
 14814   000266                     CLCIN5PPS       equ	614	;# 
 14815   000267                     CLCIN6PPS       equ	615	;# 
 14816   000268                     CLCIN7PPS       equ	616	;# 
 14817   000269                     ADACTPPS        equ	617	;# 
 14818   00026A                     SPI1SCKPPS      equ	618	;# 
 14819   00026B                     SPI1SDIPPS      equ	619	;# 
 14820   00026C                     SPI1SSPPS       equ	620	;# 
 14821   00026D                     SPI2SCKPPS      equ	621	;# 
 14822   00026E                     SPI2SDIPPS      equ	622	;# 
 14823   00026F                     SPI2SSPPS       equ	623	;# 
 14824   000270                     I2C1SDAPPS      equ	624	;# 
 14825   000271                     I2C1SCLPPS      equ	625	;# 
 14826   000272                     U1RXPPS         equ	626	;# 
 14827   000273                     U1CTSPPS        equ	627	;# 
 14828   000274                     U2RXPPS         equ	628	;# 
 14829   000275                     U2CTSPPS        equ	629	;# 
 14830   000276                     U3RXPPS         equ	630	;# 
 14831   000277                     U3CTSPPS        equ	631	;# 
 14832   000278                     U4RXPPS         equ	632	;# 
 14833   000279                     U4CTSPPS        equ	633	;# 
 14834   00027A                     U5RXPPS         equ	634	;# 
 14835   00027B                     U5CTSPPS        equ	635	;# 
 14836   000286                     RC4I2C          equ	646	;# 
 14837   000287                     RC3I2C          equ	647	;# 
 14838   000288                     RB2I2C          equ	648	;# 
 14839   000289                     RB1I2C          equ	649	;# 
 14840   00028A                     I2C1RXB         equ	650	;# 
 14841   00028B                     I2C1TXB         equ	651	;# 
 14842   00028C                     I2C1CNTL        equ	652	;# 
 14843   00028D                     I2C1CNTH        equ	653	;# 
 14844   00028E                     I2C1ADB0        equ	654	;# 
 14845   00028F                     I2C1ADB1        equ	655	;# 
 14846   000290                     I2C1ADR0        equ	656	;# 
 14847   000291                     I2C1ADR1        equ	657	;# 
 14848   000292                     I2C1ADR2        equ	658	;# 
 14849   000293                     I2C1ADR3        equ	659	;# 
 14850   000294                     I2C1CON0        equ	660	;# 
 14851   000295                     I2C1CON1        equ	661	;# 
 14852   000296                     I2C1CON2        equ	662	;# 
 14853   000297                     I2C1ERR         equ	663	;# 
 14854   000298                     I2C1STAT0       equ	664	;# 
 14855   000299                     I2C1STAT1       equ	665	;# 
 14856   00029A                     I2C1PIR         equ	666	;# 
 14857   00029B                     I2C1PIE         equ	667	;# 
 14858   00029C                     I2C1BTO         equ	668	;# 
 14859   00029D                     I2C1BAUD        equ	669	;# 
 14860   00029E                     I2C1CLK         equ	670	;# 
 14861   00029F                     I2C1BTOC        equ	671	;# 
 14862   0002A1                     U1RXB           equ	673	;# 
 14863   0002A1                     U1RXBL          equ	673	;# 
 14864   0002A2                     U1RXCHK         equ	674	;# 
 14865   0002A3                     U1TXB           equ	675	;# 
 14866   0002A3                     U1TXBL          equ	675	;# 
 14867   0002A4                     U1TXCHK         equ	676	;# 
 14868   0002A5                     U1P1            equ	677	;# 
 14869   0002A5                     U1P1L           equ	677	;# 
 14870   0002A6                     U1P1H           equ	678	;# 
 14871   0002A7                     U1P2            equ	679	;# 
 14872   0002A7                     U1P2L           equ	679	;# 
 14873   0002A8                     U1P2H           equ	680	;# 
 14874   0002A9                     U1P3            equ	681	;# 
 14875   0002A9                     U1P3L           equ	681	;# 
 14876   0002AA                     U1P3H           equ	682	;# 
 14877   0002AB                     U1CON0          equ	683	;# 
 14878   0002AC                     U1CON1          equ	684	;# 
 14879   0002AD                     U1CON2          equ	685	;# 
 14880   0002AE                     U1BRG           equ	686	;# 
 14881   0002AE                     U1BRGL          equ	686	;# 
 14882   0002AF                     U1BRGH          equ	687	;# 
 14883   0002B0                     U1FIFO          equ	688	;# 
 14884   0002B1                     U1UIR           equ	689	;# 
 14885   0002B2                     U1ERRIR         equ	690	;# 
 14886   0002B3                     U1ERRIE         equ	691	;# 
 14887   0002B4                     U2RXB           equ	692	;# 
 14888   0002B4                     U2RXBL          equ	692	;# 
 14889   0002B5                     U2RXCHK         equ	693	;# 
 14890   0002B6                     U2TXB           equ	694	;# 
 14891   0002B6                     U2TXBL          equ	694	;# 
 14892   0002B7                     U2TXCHK         equ	695	;# 
 14893   0002B8                     U2P1            equ	696	;# 
 14894   0002B8                     U2P1L           equ	696	;# 
 14895   0002B9                     U2P1H           equ	697	;# 
 14896   0002BA                     U2P2            equ	698	;# 
 14897   0002BA                     U2P2L           equ	698	;# 
 14898   0002BB                     U2P2H           equ	699	;# 
 14899   0002BC                     U2P3            equ	700	;# 
 14900   0002BC                     U2P3L           equ	700	;# 
 14901   0002BD                     U2P3H           equ	701	;# 
 14902   0002BE                     U2CON0          equ	702	;# 
 14903   0002BF                     U2CON1          equ	703	;# 
 14904   0002C0                     U2CON2          equ	704	;# 
 14905   0002C1                     U2BRG           equ	705	;# 
 14906   0002C1                     U2BRGL          equ	705	;# 
 14907   0002C2                     U2BRGH          equ	706	;# 
 14908   0002C3                     U2FIFO          equ	707	;# 
 14909   0002C4                     U2UIR           equ	708	;# 
 14910   0002C5                     U2ERRIR         equ	709	;# 
 14911   0002C6                     U2ERRIE         equ	710	;# 
 14912   0002C7                     U3RXB           equ	711	;# 
 14913   0002C7                     U3RXBL          equ	711	;# 
 14914   0002C9                     U3TXB           equ	713	;# 
 14915   0002C9                     U3TXBL          equ	713	;# 
 14916   0002CB                     U3P1            equ	715	;# 
 14917   0002CB                     U3P1L           equ	715	;# 
 14918   0002CD                     U3P2            equ	717	;# 
 14919   0002CD                     U3P2L           equ	717	;# 
 14920   0002CF                     U3P3            equ	719	;# 
 14921   0002CF                     U3P3L           equ	719	;# 
 14922   0002D1                     U3CON0          equ	721	;# 
 14923   0002D2                     U3CON1          equ	722	;# 
 14924   0002D3                     U3CON2          equ	723	;# 
 14925   0002D4                     U3BRG           equ	724	;# 
 14926   0002D4                     U3BRGL          equ	724	;# 
 14927   0002D5                     U3BRGH          equ	725	;# 
 14928   0002D6                     U3FIFO          equ	726	;# 
 14929   0002D7                     U3UIR           equ	727	;# 
 14930   0002D8                     U3ERRIR         equ	728	;# 
 14931   0002D9                     U3ERRIE         equ	729	;# 
 14932   0002DA                     U4RXB           equ	730	;# 
 14933   0002DA                     U4RXBL          equ	730	;# 
 14934   0002DC                     U4TXB           equ	732	;# 
 14935   0002DC                     U4TXBL          equ	732	;# 
 14936   0002DE                     U4P1            equ	734	;# 
 14937   0002DE                     U4P1L           equ	734	;# 
 14938   0002E0                     U4P2            equ	736	;# 
 14939   0002E0                     U4P2L           equ	736	;# 
 14940   0002E2                     U4P3            equ	738	;# 
 14941   0002E2                     U4P3L           equ	738	;# 
 14942   0002E4                     U4CON0          equ	740	;# 
 14943   0002E5                     U4CON1          equ	741	;# 
 14944   0002E6                     U4CON2          equ	742	;# 
 14945   0002E7                     U4BRG           equ	743	;# 
 14946   0002E7                     U4BRGL          equ	743	;# 
 14947   0002E8                     U4BRGH          equ	744	;# 
 14948   0002E9                     U4FIFO          equ	745	;# 
 14949   0002EA                     U4UIR           equ	746	;# 
 14950   0002EB                     U4ERRIR         equ	747	;# 
 14951   0002EC                     U4ERRIE         equ	748	;# 
 14952   0002ED                     U5RXB           equ	749	;# 
 14953   0002ED                     U5RXBL          equ	749	;# 
 14954   0002EF                     U5TXB           equ	751	;# 
 14955   0002EF                     U5TXBL          equ	751	;# 
 14956   0002F1                     U5P1            equ	753	;# 
 14957   0002F1                     U5P1L           equ	753	;# 
 14958   0002F3                     U5P2            equ	755	;# 
 14959   0002F3                     U5P2L           equ	755	;# 
 14960   0002F5                     U5P3            equ	757	;# 
 14961   0002F5                     U5P3L           equ	757	;# 
 14962   0002F7                     U5CON0          equ	759	;# 
 14963   0002F8                     U5CON1          equ	760	;# 
 14964   0002F9                     U5CON2          equ	761	;# 
 14965   0002FA                     U5BRG           equ	762	;# 
 14966   0002FA                     U5BRGL          equ	762	;# 
 14967   0002FB                     U5BRGH          equ	763	;# 
 14968   0002FC                     U5FIFO          equ	764	;# 
 14969   0002FD                     U5UIR           equ	765	;# 
 14970   0002FE                     U5ERRIR         equ	766	;# 
 14971   0002FF                     U5ERRIE         equ	767	;# 
 14972   000300                     SMT1TMR         equ	768	;# 
 14973   000300                     SMT1TMRL        equ	768	;# 
 14974   000301                     SMT1TMRH        equ	769	;# 
 14975   000302                     SMT1TMRU        equ	770	;# 
 14976   000303                     SMT1CPR         equ	771	;# 
 14977   000303                     SMT1CPRL        equ	771	;# 
 14978   000304                     SMT1CPRH        equ	772	;# 
 14979   000305                     SMT1CPRU        equ	773	;# 
 14980   000306                     SMT1CPW         equ	774	;# 
 14981   000306                     SMT1CPWL        equ	774	;# 
 14982   000307                     SMT1CPWH        equ	775	;# 
 14983   000308                     SMT1CPWU        equ	776	;# 
 14984   000309                     SMT1PR          equ	777	;# 
 14985   000309                     SMT1PRL         equ	777	;# 
 14986   00030A                     SMT1PRH         equ	778	;# 
 14987   00030B                     SMT1PRU         equ	779	;# 
 14988   00030C                     SMT1CON0        equ	780	;# 
 14989   00030D                     SMT1CON1        equ	781	;# 
 14990   00030E                     SMT1STAT        equ	782	;# 
 14991   00030F                     SMT1CLK         equ	783	;# 
 14992   000310                     SMT1SIG         equ	784	;# 
 14993   000311                     SMT1WIN         equ	785	;# 
 14994   000318                     TMR0L           equ	792	;# 
 14995   000318                     TMR0            equ	792	;# 
 14996   000319                     TMR0H           equ	793	;# 
 14997   000319                     PR0             equ	793	;# 
 14998   00031A                     T0CON0          equ	794	;# 
 14999   00031B                     T0CON1          equ	795	;# 
 15000   00031C                     TMR1            equ	796	;# 
 15001   00031C                     TMR1L           equ	796	;# 
 15002   00031D                     TMR1H           equ	797	;# 
 15003   00031E                     T1CON           equ	798	;# 
 15004   00031E                     TMR1CON         equ	798	;# 
 15005   00031F                     T1GCON          equ	799	;# 
 15006   00031F                     TMR1GCON        equ	799	;# 
 15007   000320                     T1GATE          equ	800	;# 
 15008   000320                     TMR1GATE        equ	800	;# 
 15009   000321                     T1CLK           equ	801	;# 
 15010   000321                     TMR1CLK         equ	801	;# 
 15011   000321                     PR1             equ	801	;# 
 15012   000322                     T2TMR           equ	802	;# 
 15013   000322                     TMR2            equ	802	;# 
 15014   000323                     T2PR            equ	803	;# 
 15015   000323                     PR2             equ	803	;# 
 15016   000324                     T2CON           equ	804	;# 
 15017   000325                     T2HLT           equ	805	;# 
 15018   000326                     T2CLKCON        equ	806	;# 
 15019   000326                     T2CLK           equ	806	;# 
 15020   000327                     T2RST           equ	807	;# 
 15021   000328                     TMR3            equ	808	;# 
 15022   000328                     TMR3L           equ	808	;# 
 15023   000329                     TMR3H           equ	809	;# 
 15024   00032A                     T3CON           equ	810	;# 
 15025   00032A                     TMR3CON         equ	810	;# 
 15026   00032B                     T3GCON          equ	811	;# 
 15027   00032B                     TMR3GCON        equ	811	;# 
 15028   00032C                     T3GATE          equ	812	;# 
 15029   00032C                     TMR3GATE        equ	812	;# 
 15030   00032D                     T3CLK           equ	813	;# 
 15031   00032D                     TMR3CLK         equ	813	;# 
 15032   00032D                     PR3             equ	813	;# 
 15033   00032E                     T4TMR           equ	814	;# 
 15034   00032E                     TMR4            equ	814	;# 
 15035   00032F                     T4PR            equ	815	;# 
 15036   00032F                     PR4             equ	815	;# 
 15037   000330                     T4CON           equ	816	;# 
 15038   000331                     T4HLT           equ	817	;# 
 15039   000332                     T4CLKCON        equ	818	;# 
 15040   000332                     T4CLK           equ	818	;# 
 15041   000333                     T4RST           equ	819	;# 
 15042   000334                     TMR5            equ	820	;# 
 15043   000334                     TMR5L           equ	820	;# 
 15044   000335                     TMR5H           equ	821	;# 
 15045   000336                     T5CON           equ	822	;# 
 15046   000336                     TMR5CON         equ	822	;# 
 15047   000337                     T5GCON          equ	823	;# 
 15048   000337                     TMR5GCON        equ	823	;# 
 15049   000338                     T5GATE          equ	824	;# 
 15050   000338                     TMR5GATE        equ	824	;# 
 15051   000339                     T5CLK           equ	825	;# 
 15052   000339                     TMR5CLK         equ	825	;# 
 15053   000339                     PR5             equ	825	;# 
 15054   00033A                     T6TMR           equ	826	;# 
 15055   00033A                     TMR6            equ	826	;# 
 15056   00033B                     T6PR            equ	827	;# 
 15057   00033B                     PR6             equ	827	;# 
 15058   00033C                     T6CON           equ	828	;# 
 15059   00033D                     T6HLT           equ	829	;# 
 15060   00033E                     T6CLKCON        equ	830	;# 
 15061   00033E                     T6CLK           equ	830	;# 
 15062   00033F                     T6RST           equ	831	;# 
 15063   000340                     CCPR1           equ	832	;# 
 15064   000340                     CCPR1L          equ	832	;# 
 15065   000341                     CCPR1H          equ	833	;# 
 15066   000342                     CCP1CON         equ	834	;# 
 15067   000343                     CCP1CAP         equ	835	;# 
 15068   000344                     CCPR2           equ	836	;# 
 15069   000344                     CCPR2L          equ	836	;# 
 15070   000345                     CCPR2H          equ	837	;# 
 15071   000346                     CCP2CON         equ	838	;# 
 15072   000347                     CCP2CAP         equ	839	;# 
 15073   000348                     CCPR3           equ	840	;# 
 15074   000348                     CCPR3L          equ	840	;# 
 15075   000349                     CCPR3H          equ	841	;# 
 15076   00034A                     CCP3CON         equ	842	;# 
 15077   00034B                     CCP3CAP         equ	843	;# 
 15078   00034C                     CCPTMRS0        equ	844	;# 
 15079   00034F                     CRCDATA         equ	847	;# 
 15080   00034F                     CRCDATAL        equ	847	;# 
 15081   000350                     CRCDATAH        equ	848	;# 
 15082   000351                     CRCDATAU        equ	849	;# 
 15083   000352                     CRCDATAT        equ	850	;# 
 15084   000353                     CRCOUT          equ	851	;# 
 15085   000353                     CRCSHFT         equ	851	;# 
 15086   000353                     CRCXOR          equ	851	;# 
 15087   000353                     CRCOUTL         equ	851	;# 
 15088   000353                     CRCSHFTL        equ	851	;# 
 15089   000353                     CRCSHIFTL       equ	851	;# 
 15090   000353                     CRCXORL         equ	851	;# 
 15091   000354                     CRCOUTH         equ	852	;# 
 15092   000354                     CRCSHFTH        equ	852	;# 
 15093   000354                     CRCSHIFTH       equ	852	;# 
 15094   000354                     CRCXORH         equ	852	;# 
 15095   000355                     CRCOUTU         equ	853	;# 
 15096   000355                     CRCSHFTU        equ	853	;# 
 15097   000355                     CRCSHIFTU       equ	853	;# 
 15098   000355                     CRCXORU         equ	853	;# 
 15099   000356                     CRCOUTT         equ	854	;# 
 15100   000356                     CRCSHFTT        equ	854	;# 
 15101   000356                     CRCSHIFTT       equ	854	;# 
 15102   000356                     CRCXORT         equ	854	;# 
 15103   000357                     CRCCON0         equ	855	;# 
 15104   000358                     CRCCON1         equ	856	;# 
 15105   000359                     CRCCON2         equ	857	;# 
 15106   00035A                     SCANLADR        equ	858	;# 
 15107   00035A                     SCANLADRL       equ	858	;# 
 15108   00035B                     SCANLADRH       equ	859	;# 
 15109   00035C                     SCANLADRU       equ	860	;# 
 15110   00035D                     SCANHADR        equ	861	;# 
 15111   00035D                     SCANHADRL       equ	861	;# 
 15112   00035E                     SCANHADRH       equ	862	;# 
 15113   00035F                     SCANHADRU       equ	863	;# 
 15114   000360                     SCANCON0        equ	864	;# 
 15115   000361                     SCANTRIG        equ	865	;# 
 15116   000362                     IPR0            equ	866	;# 
 15117   000363                     IPR1            equ	867	;# 
 15118   000364                     IPR2            equ	868	;# 
 15119   000365                     IPR3            equ	869	;# 
 15120   000366                     IPR4            equ	870	;# 
 15121   000367                     IPR5            equ	871	;# 
 15122   000368                     IPR6            equ	872	;# 
 15123   000369                     IPR7            equ	873	;# 
 15124   00036A                     IPR8            equ	874	;# 
 15125   00036B                     IPR9            equ	875	;# 
 15126   00036C                     IPR10           equ	876	;# 
 15127   00036D                     IPR11           equ	877	;# 
 15128   00036E                     IPR12           equ	878	;# 
 15129   00036F                     IPR13           equ	879	;# 
 15130   000370                     IPR14           equ	880	;# 
 15131   000371                     IPR15           equ	881	;# 
 15132   000373                     STATUS_CSHAD    equ	883	;# 
 15133   000374                     WREG_CSHAD      equ	884	;# 
 15134   000375                     BSR_CSHAD       equ	885	;# 
 15135   000376                     SHADCON         equ	886	;# 
 15136   000377                     STATUS_SHAD     equ	887	;# 
 15137   000378                     WREG_SHAD       equ	888	;# 
 15138   000379                     BSR_SHAD        equ	889	;# 
 15139   00037A                     PCLATH_SHAD     equ	890	;# 
 15140   00037B                     PCLATU_SHAD     equ	891	;# 
 15141   00037C                     FSR0SH          equ	892	;# 
 15142   00037C                     FSR0L_SHAD      equ	892	;# 
 15143   00037D                     FSR0H_SHAD      equ	893	;# 
 15144   00037E                     FSR1SH          equ	894	;# 
 15145   00037E                     FSR1L_SHAD      equ	894	;# 
 15146   00037F                     FSR1H_SHAD      equ	895	;# 
 15147   000380                     FSR2SH          equ	896	;# 
 15148   000380                     FSR2L_SHAD      equ	896	;# 
 15149   000381                     FSR2H_SHAD      equ	897	;# 
 15150   000382                     PRODSH          equ	898	;# 
 15151   000382                     PRODL_SHAD      equ	898	;# 
 15152   000383                     PRODH_SHAD      equ	899	;# 
 15153   000387                     TU16ACON0       equ	903	;# 
 15154   000388                     TU16ACON1       equ	904	;# 
 15155   000389                     TU16AHLT        equ	905	;# 
 15156   00038A                     TU16APS         equ	906	;# 
 15157   00038B                     TU16ATMR        equ	907	;# 
 15158   00038B                     TU16ACR         equ	907	;# 
 15159   00038B                     TU16ATMRL       equ	907	;# 
 15160   00038B                     TU16ACRL        equ	907	;# 
 15161   00038C                     TU16ATMRH       equ	908	;# 
 15162   00038C                     TU16ACRH        equ	908	;# 
 15163   00038D                     TU16APR         equ	909	;# 
 15164   00038D                     TU16APRL        equ	909	;# 
 15165   00038E                     TU16APRH        equ	910	;# 
 15166   00038F                     TU16ACLK        equ	911	;# 
 15167   000390                     TU16AERS        equ	912	;# 
 15168   000393                     TU16BCON0       equ	915	;# 
 15169   000394                     TU16BCON1       equ	916	;# 
 15170   000395                     TU16BHLT        equ	917	;# 
 15171   000396                     TU16BPS         equ	918	;# 
 15172   000397                     TU16BTMR        equ	919	;# 
 15173   000397                     TU16BCR         equ	919	;# 
 15174   000397                     TU16BTMRL       equ	919	;# 
 15175   000397                     TU16BCRL        equ	919	;# 
 15176   000398                     TU16BTMRH       equ	920	;# 
 15177   000398                     TU16BCRH        equ	920	;# 
 15178   000399                     TU16BPR         equ	921	;# 
 15179   000399                     TU16BPRL        equ	921	;# 
 15180   00039A                     TU16BPRH        equ	922	;# 
 15181   00039B                     TU16BCLK        equ	923	;# 
 15182   00039C                     TU16BERS        equ	924	;# 
 15183   0003BB                     TUCHAIN         equ	955	;# 
 15184   0003BC                     CWG1CLK         equ	956	;# 
 15185   0003BC                     CWG1CLKCON      equ	956	;# 
 15186   0003BD                     CWG1ISM         equ	957	;# 
 15187   0003BE                     CWG1DBR         equ	958	;# 
 15188   0003BF                     CWG1DBF         equ	959	;# 
 15189   0003C0                     CWG1CON0        equ	960	;# 
 15190   0003C1                     CWG1CON1        equ	961	;# 
 15191   0003C2                     CWG1AS0         equ	962	;# 
 15192   0003C3                     CWG1AS1         equ	963	;# 
 15193   0003C4                     CWG1STR         equ	964	;# 
 15194   0003C5                     CWG2CLK         equ	965	;# 
 15195   0003C5                     CWG2CLKCON      equ	965	;# 
 15196   0003C6                     CWG2ISM         equ	966	;# 
 15197   0003C7                     CWG2DBR         equ	967	;# 
 15198   0003C8                     CWG2DBF         equ	968	;# 
 15199   0003C9                     CWG2CON0        equ	969	;# 
 15200   0003CA                     CWG2CON1        equ	970	;# 
 15201   0003CB                     CWG2AS0         equ	971	;# 
 15202   0003CC                     CWG2AS1         equ	972	;# 
 15203   0003CD                     CWG2STR         equ	973	;# 
 15204   0003CE                     CWG3CLK         equ	974	;# 
 15205   0003CE                     CWG3CLKCON      equ	974	;# 
 15206   0003CF                     CWG3ISM         equ	975	;# 
 15207   0003D0                     CWG3DBR         equ	976	;# 
 15208   0003D1                     CWG3DBF         equ	977	;# 
 15209   0003D2                     CWG3CON0        equ	978	;# 
 15210   0003D3                     CWG3CON1        equ	979	;# 
 15211   0003D4                     CWG3AS0         equ	980	;# 
 15212   0003D5                     CWG3AS1         equ	981	;# 
 15213   0003D6                     CWG3STR         equ	982	;# 
 15214   0003D7                     FVRCON          equ	983	;# 
 15215   0003D8                     ADCPCON         equ	984	;# 
 15216   0003D8                     ADCP            equ	984	;# 
 15217   0003D9                     ADLTH           equ	985	;# 
 15218   0003D9                     ADLTHL          equ	985	;# 
 15219   0003DA                     ADLTHH          equ	986	;# 
 15220   0003DB                     ADUTH           equ	987	;# 
 15221   0003DB                     ADUTHL          equ	987	;# 
 15222   0003DC                     ADUTHH          equ	988	;# 
 15223   0003DD                     ADERR           equ	989	;# 
 15224   0003DD                     ADERRL          equ	989	;# 
 15225   0003DE                     ADERRH          equ	990	;# 
 15226   0003DF                     ADSTPT          equ	991	;# 
 15227   0003DF                     ADSTPTL         equ	991	;# 
 15228   0003E0                     ADSTPTH         equ	992	;# 
 15229   0003E1                     ADFLTR          equ	993	;# 
 15230   0003E1                     ADFLTRL         equ	993	;# 
 15231   0003E2                     ADFLTRH         equ	994	;# 
 15232   0003E3                     ADACC           equ	995	;# 
 15233   0003E3                     ADACCL          equ	995	;# 
 15234   0003E4                     ADACCH          equ	996	;# 
 15235   0003E5                     ADACCU          equ	997	;# 
 15236   0003E6                     ADCNT           equ	998	;# 
 15237   0003E7                     ADRPT           equ	999	;# 
 15238   0003E8                     ADPREV          equ	1000	;# 
 15239   0003E8                     ADPREVL         equ	1000	;# 
 15240   0003E9                     ADPREVH         equ	1001	;# 
 15241   0003EA                     ADRES           equ	1002	;# 
 15242   0003EA                     ADRESL          equ	1002	;# 
 15243   0003EB                     ADRESH          equ	1003	;# 
 15244   0003EC                     ADPCH           equ	1004	;# 
 15245   0003EE                     ADACQ           equ	1006	;# 
 15246   0003EE                     ADACQL          equ	1006	;# 
 15247   0003EF                     ADACQH          equ	1007	;# 
 15248   0003F0                     ADCAP           equ	1008	;# 
 15249   0003F1                     ADPRE           equ	1009	;# 
 15250   0003F1                     ADPREL          equ	1009	;# 
 15251   0003F2                     ADPREH          equ	1010	;# 
 15252   0003F3                     ADCON0          equ	1011	;# 
 15253   0003F4                     ADCON1          equ	1012	;# 
 15254   0003F5                     ADCON2          equ	1013	;# 
 15255   0003F6                     ADCON3          equ	1014	;# 
 15256   0003F7                     ADSTAT          equ	1015	;# 
 15257   0003F8                     ADREF           equ	1016	;# 
 15258   0003F9                     ADACT           equ	1017	;# 
 15259   0003FA                     ADCLK           equ	1018	;# 
 15260   0003FB                     ADCTX           equ	1019	;# 
 15261   0003FC                     ADCSEL1         equ	1020	;# 
 15262   0003FD                     ADCSEL2         equ	1021	;# 
 15263   0003FE                     ADCSEL3         equ	1022	;# 
 15264   0003FF                     ADCSEL4         equ	1023	;# 
 15265   000400                     ANSELA          equ	1024	;# 
 15266   000401                     WPUA            equ	1025	;# 
 15267   000402                     ODCONA          equ	1026	;# 
 15268   000403                     SLRCONA         equ	1027	;# 
 15269   000404                     INLVLA          equ	1028	;# 
 15270   000405                     IOCAP           equ	1029	;# 
 15271   000406                     IOCAN           equ	1030	;# 
 15272   000407                     IOCAF           equ	1031	;# 
 15273   000408                     ANSELB          equ	1032	;# 
 15274   000409                     WPUB            equ	1033	;# 
 15275   00040A                     ODCONB          equ	1034	;# 
 15276   00040B                     SLRCONB         equ	1035	;# 
 15277   00040C                     INLVLB          equ	1036	;# 
 15278   00040D                     IOCBP           equ	1037	;# 
 15279   00040E                     IOCBN           equ	1038	;# 
 15280   00040F                     IOCBF           equ	1039	;# 
 15281   000410                     ANSELC          equ	1040	;# 
 15282   000411                     WPUC            equ	1041	;# 
 15283   000412                     ODCONC          equ	1042	;# 
 15284   000413                     SLRCONC         equ	1043	;# 
 15285   000414                     INLVLC          equ	1044	;# 
 15286   000415                     IOCCP           equ	1045	;# 
 15287   000416                     IOCCN           equ	1046	;# 
 15288   000417                     IOCCF           equ	1047	;# 
 15289   000421                     WPUE            equ	1057	;# 
 15290   000424                     INLVLE          equ	1060	;# 
 15291   000425                     IOCEP           equ	1061	;# 
 15292   000426                     IOCEN           equ	1062	;# 
 15293   000427                     IOCEF           equ	1063	;# 
 15294   000440                     NCO1ACC         equ	1088	;# 
 15295   000440                     NCO1ACCL        equ	1088	;# 
 15296   000441                     NCO1ACCH        equ	1089	;# 
 15297   000442                     NCO1ACCU        equ	1090	;# 
 15298   000443                     NCO1INC         equ	1091	;# 
 15299   000443                     NCO1INCL        equ	1091	;# 
 15300   000444                     NCO1INCH        equ	1092	;# 
 15301   000445                     NCO1INCU        equ	1093	;# 
 15302   000446                     NCO1CON         equ	1094	;# 
 15303   000447                     NCO1CLK         equ	1095	;# 
 15304   000448                     NCO2ACC         equ	1096	;# 
 15305   000448                     NCO2ACCL        equ	1096	;# 
 15306   000449                     NCO2ACCH        equ	1097	;# 
 15307   00044A                     NCO2ACCU        equ	1098	;# 
 15308   00044B                     NCO2INC         equ	1099	;# 
 15309   00044B                     NCO2INCL        equ	1099	;# 
 15310   00044C                     NCO2INCH        equ	1100	;# 
 15311   00044D                     NCO2INCU        equ	1101	;# 
 15312   00044E                     NCO2CON         equ	1102	;# 
 15313   00044F                     NCO2CLK         equ	1103	;# 
 15314   000450                     NCO3ACC         equ	1104	;# 
 15315   000450                     NCO3ACCL        equ	1104	;# 
 15316   000451                     NCO3ACCH        equ	1105	;# 
 15317   000452                     NCO3ACCU        equ	1106	;# 
 15318   000453                     NCO3INC         equ	1107	;# 
 15319   000453                     NCO3INCL        equ	1107	;# 
 15320   000454                     NCO3INCH        equ	1108	;# 
 15321   000455                     NCO3INCU        equ	1109	;# 
 15322   000456                     NCO3CON         equ	1110	;# 
 15323   000457                     NCO3CLK         equ	1111	;# 
 15324   000458                     FSCMCON         equ	1112	;# 
 15325   000459                     IVTLOCK         equ	1113	;# 
 15326   00045A                     IVTAD           equ	1114	;# 
 15327   00045A                     IVTADL          equ	1114	;# 
 15328   00045B                     IVTADH          equ	1115	;# 
 15329   00045C                     IVTADU          equ	1116	;# 
 15330   00045D                     IVTBASE         equ	1117	;# 
 15331   00045D                     IVTBASEL        equ	1117	;# 
 15332   00045E                     IVTBASEH        equ	1118	;# 
 15333   00045F                     IVTBASEU        equ	1119	;# 
 15334   000460                     PWM1ERS         equ	1120	;# 
 15335   000461                     PWM1CLK         equ	1121	;# 
 15336   000462                     PWM1LDS         equ	1122	;# 
 15337   000463                     PWM1PR          equ	1123	;# 
 15338   000463                     PWM1PRL         equ	1123	;# 
 15339   000464                     PWM1PRH         equ	1124	;# 
 15340   000465                     PWM1CPRE        equ	1125	;# 
 15341   000466                     PWM1PIPOS       equ	1126	;# 
 15342   000467                     PWM1GIR         equ	1127	;# 
 15343   000468                     PWM1GIE         equ	1128	;# 
 15344   000469                     PWM1CON         equ	1129	;# 
 15345   00046A                     PWM1S1CFG       equ	1130	;# 
 15346   00046B                     PWM1S1P1        equ	1131	;# 
 15347   00046B                     PWM1S1P1L       equ	1131	;# 
 15348   00046C                     PWM1S1P1H       equ	1132	;# 
 15349   00046D                     PWM1S1P2        equ	1133	;# 
 15350   00046D                     PWM1S1P2L       equ	1133	;# 
 15351   00046E                     PWM1S1P2H       equ	1134	;# 
 15352   00046F                     PWM2ERS         equ	1135	;# 
 15353   000470                     PWM2CLK         equ	1136	;# 
 15354   000471                     PWM2LDS         equ	1137	;# 
 15355   000472                     PWM2PR          equ	1138	;# 
 15356   000472                     PWM2PRL         equ	1138	;# 
 15357   000473                     PWM2PRH         equ	1139	;# 
 15358   000474                     PWM2CPRE        equ	1140	;# 
 15359   000475                     PWM2PIPOS       equ	1141	;# 
 15360   000476                     PWM2GIR         equ	1142	;# 
 15361   000477                     PWM2GIE         equ	1143	;# 
 15362   000478                     PWM2CON         equ	1144	;# 
 15363   000479                     PWM2S1CFG       equ	1145	;# 
 15364   00047A                     PWM2S1P1        equ	1146	;# 
 15365   00047A                     PWM2S1P1L       equ	1146	;# 
 15366   00047B                     PWM2S1P1H       equ	1147	;# 
 15367   00047C                     PWM2S1P2        equ	1148	;# 
 15368   00047C                     PWM2S1P2L       equ	1148	;# 
 15369   00047D                     PWM2S1P2H       equ	1149	;# 
 15370   00047E                     PWM3ERS         equ	1150	;# 
 15371   00047F                     PWM3CLK         equ	1151	;# 
 15372   000480                     PWM3LDS         equ	1152	;# 
 15373   000481                     PWM3PR          equ	1153	;# 
 15374   000481                     PWM3PRL         equ	1153	;# 
 15375   000482                     PWM3PRH         equ	1154	;# 
 15376   000483                     PWM3CPRE        equ	1155	;# 
 15377   000484                     PWM3PIPOS       equ	1156	;# 
 15378   000485                     PWM3GIR         equ	1157	;# 
 15379   000486                     PWM3GIE         equ	1158	;# 
 15380   000487                     PWM3CON         equ	1159	;# 
 15381   000488                     PWM3S1CFG       equ	1160	;# 
 15382   000489                     PWM3S1P1        equ	1161	;# 
 15383   000489                     PWM3S1P1L       equ	1161	;# 
 15384   00048A                     PWM3S1P1H       equ	1162	;# 
 15385   00048B                     PWM3S1P2        equ	1163	;# 
 15386   00048B                     PWM3S1P2L       equ	1163	;# 
 15387   00048C                     PWM3S1P2H       equ	1164	;# 
 15388   00048D                     PWM4ERS         equ	1165	;# 
 15389   00048E                     PWM4CLK         equ	1166	;# 
 15390   00048F                     PWM4LDS         equ	1167	;# 
 15391   000490                     PWM4PR          equ	1168	;# 
 15392   000490                     PWM4PRL         equ	1168	;# 
 15393   000491                     PWM4PRH         equ	1169	;# 
 15394   000492                     PWM4CPRE        equ	1170	;# 
 15395   000493                     PWM4PIPOS       equ	1171	;# 
 15396   000494                     PWM4GIR         equ	1172	;# 
 15397   000495                     PWM4GIE         equ	1173	;# 
 15398   000496                     PWM4CON         equ	1174	;# 
 15399   000497                     PWM4S1CFG       equ	1175	;# 
 15400   000498                     PWM4S1P1        equ	1176	;# 
 15401   000498                     PWM4S1P1L       equ	1176	;# 
 15402   000499                     PWM4S1P1H       equ	1177	;# 
 15403   00049A                     PWM4S1P2        equ	1178	;# 
 15404   00049A                     PWM4S1P2L       equ	1178	;# 
 15405   00049B                     PWM4S1P2H       equ	1179	;# 
 15406   00049C                     PWMLOAD         equ	1180	;# 
 15407   00049D                     PWMEN           equ	1181	;# 
 15408   00049E                     PIE0            equ	1182	;# 
 15409   00049F                     PIE1            equ	1183	;# 
 15410   0004A0                     PIE2            equ	1184	;# 
 15411   0004A1                     PIE3            equ	1185	;# 
 15412   0004A2                     PIE4            equ	1186	;# 
 15413   0004A3                     PIE5            equ	1187	;# 
 15414   0004A4                     PIE6            equ	1188	;# 
 15415   0004A5                     PIE7            equ	1189	;# 
 15416   0004A6                     PIE8            equ	1190	;# 
 15417   0004A7                     PIE9            equ	1191	;# 
 15418   0004A8                     PIE10           equ	1192	;# 
 15419   0004A9                     PIE11           equ	1193	;# 
 15420   0004AA                     PIE12           equ	1194	;# 
 15421   0004AB                     PIE13           equ	1195	;# 
 15422   0004AC                     PIE14           equ	1196	;# 
 15423   0004AD                     PIE15           equ	1197	;# 
 15424   0004AE                     PIR0            equ	1198	;# 
 15425   0004AF                     PIR1            equ	1199	;# 
 15426   0004B0                     PIR2            equ	1200	;# 
 15427   0004B1                     PIR3            equ	1201	;# 
 15428   0004B2                     PIR4            equ	1202	;# 
 15429   0004B3                     PIR5            equ	1203	;# 
 15430   0004B4                     PIR6            equ	1204	;# 
 15431   0004B5                     PIR7            equ	1205	;# 
 15432   0004B6                     PIR8            equ	1206	;# 
 15433   0004B7                     PIR9            equ	1207	;# 
 15434   0004B8                     PIR10           equ	1208	;# 
 15435   0004B9                     PIR11           equ	1209	;# 
 15436   0004BA                     PIR12           equ	1210	;# 
 15437   0004BB                     PIR13           equ	1211	;# 
 15438   0004BC                     PIR14           equ	1212	;# 
 15439   0004BD                     PIR15           equ	1213	;# 
 15440   0004BE                     LATA            equ	1214	;# 
 15441   0004BF                     LATB            equ	1215	;# 
 15442   0004C0                     LATC            equ	1216	;# 
 15443   0004C6                     TRISA           equ	1222	;# 
 15444   0004C7                     TRISB           equ	1223	;# 
 15445   0004C8                     TRISC           equ	1224	;# 
 15446   0004CA                     TRISE           equ	1226	;# 
 15447   0004CE                     PORTA           equ	1230	;# 
 15448   0004CF                     PORTB           equ	1231	;# 
 15449   0004D0                     PORTC           equ	1232	;# 
 15450   0004D2                     PORTE           equ	1234	;# 
 15451   0004D6                     INTCON0         equ	1238	;# 
 15452   0004D7                     INTCON1         equ	1239	;# 
 15453   0004D8                     STATUS          equ	1240	;# 
 15454   0004D9                     FSR2            equ	1241	;# 
 15455   0004D9                     FSR2L           equ	1241	;# 
 15456   0004DA                     FSR2H           equ	1242	;# 
 15457   0004DB                     PLUSW2          equ	1243	;# 
 15458   0004DC                     PREINC2         equ	1244	;# 
 15459   0004DD                     POSTDEC2        equ	1245	;# 
 15460   0004DE                     POSTINC2        equ	1246	;# 
 15461   0004DF                     INDF2           equ	1247	;# 
 15462   0004E0                     BSR             equ	1248	;# 
 15463   0004E1                     FSR1            equ	1249	;# 
 15464   0004E1                     FSR1L           equ	1249	;# 
 15465   0004E2                     FSR1H           equ	1250	;# 
 15466   0004E3                     PLUSW1          equ	1251	;# 
 15467   0004E4                     PREINC1         equ	1252	;# 
 15468   0004E5                     POSTDEC1        equ	1253	;# 
 15469   0004E6                     POSTINC1        equ	1254	;# 
 15470   0004E7                     INDF1           equ	1255	;# 
 15471   0004E8                     WREG            equ	1256	;# 
 15472   0004E9                     FSR0            equ	1257	;# 
 15473   0004E9                     FSR0L           equ	1257	;# 
 15474   0004EA                     FSR0H           equ	1258	;# 
 15475   0004EB                     PLUSW0          equ	1259	;# 
 15476   0004EC                     PREINC0         equ	1260	;# 
 15477   0004ED                     POSTDEC0        equ	1261	;# 
 15478   0004EE                     POSTINC0        equ	1262	;# 
 15479   0004EF                     INDF0           equ	1263	;# 
 15480   0004F0                     PCON0           equ	1264	;# 
 15481   0004F1                     PCON1           equ	1265	;# 
 15482   0004F2                     CPUDOZE         equ	1266	;# 
 15483   0004F3                     PROD            equ	1267	;# 
 15484   0004F3                     PRODL           equ	1267	;# 
 15485   0004F4                     PRODH           equ	1268	;# 
 15486   0004F5                     TABLAT          equ	1269	;# 
 15487   0004F6                     TBLPTR          equ	1270	;# 
 15488   0004F6                     TBLPTRL         equ	1270	;# 
 15489   0004F7                     TBLPTRH         equ	1271	;# 
 15490   0004F8                     TBLPTRU         equ	1272	;# 
 15491   0004F9                     PCLAT           equ	1273	;# 
 15492   0004F9                     PCL             equ	1273	;# 
 15493   0004FA                     PCLATH          equ	1274	;# 
 15494   0004FB                     PCLATU          equ	1275	;# 
 15495   0004FC                     STKPTR          equ	1276	;# 
 15496   0004FD                     TOS             equ	1277	;# 
 15497   0004FD                     TOSL            equ	1277	;# 
 15498   0004FE                     TOSH            equ	1278	;# 
 15499   0004FF                     TOSU            equ	1279	;# 
 15500   000038                     BOOTREG         equ	56	;# 
 15501   000039                     CLKRCON         equ	57	;# 
 15502   00003A                     CLKRCLK         equ	58	;# 
 15503   000040                     NVMCON0         equ	64	;# 
 15504   000041                     NVMCON1         equ	65	;# 
 15505   000042                     NVMLOCK         equ	66	;# 
 15506   000043                     NVMADR          equ	67	;# 
 15507   000043                     NVMADRL         equ	67	;# 
 15508   000044                     NVMADRH         equ	68	;# 
 15509   000045                     NVMADRU         equ	69	;# 
 15510   000046                     NVMDAT          equ	70	;# 
 15511   000046                     NVMDATL         equ	70	;# 
 15512   000047                     NVMDATH         equ	71	;# 
 15513   000048                     VREGCON         equ	72	;# 
 15514   000049                     BORCON          equ	73	;# 
 15515   00004A                     HLVDCON0        equ	74	;# 
 15516   00004B                     HLVDCON1        equ	75	;# 
 15517   00004C                     ZCDCON          equ	76	;# 
 15518   000060                     PMD0            equ	96	;# 
 15519   000061                     PMD1            equ	97	;# 
 15520   000062                     PMD2            equ	98	;# 
 15521   000063                     PMD3            equ	99	;# 
 15522   000064                     PMD4            equ	100	;# 
 15523   000065                     PMD5            equ	101	;# 
 15524   000066                     PMD6            equ	102	;# 
 15525   000067                     PMD7            equ	103	;# 
 15526   000068                     PMD8            equ	104	;# 
 15527   00006A                     MD1CON0         equ	106	;# 
 15528   00006B                     MD1CON1         equ	107	;# 
 15529   00006C                     MD1SRC          equ	108	;# 
 15530   00006D                     MD1CARL         equ	109	;# 
 15531   00006E                     MD1CARH         equ	110	;# 
 15532   00006F                     CMOUT           equ	111	;# 
 15533   000070                     CM1CON0         equ	112	;# 
 15534   000071                     CM1CON1         equ	113	;# 
 15535   000072                     CM1NCH          equ	114	;# 
 15536   000073                     CM1PCH          equ	115	;# 
 15537   000074                     CM2CON0         equ	116	;# 
 15538   000075                     CM2CON1         equ	117	;# 
 15539   000076                     CM2NCH          equ	118	;# 
 15540   000077                     CM2PCH          equ	119	;# 
 15541   000078                     WDTCON0         equ	120	;# 
 15542   000079                     WDTCON1         equ	121	;# 
 15543   00007A                     WDTPSL          equ	122	;# 
 15544   00007B                     WDTPSH          equ	123	;# 
 15545   00007C                     WDTTMR          equ	124	;# 
 15546   00007D                     DAC1DAT         equ	125	;# 
 15547   00007D                     DAC1DATL        equ	125	;# 
 15548   00007F                     DAC1CON         equ	127	;# 
 15549   000080                     SPI1RXB         equ	128	;# 
 15550   000081                     SPI1TXB         equ	129	;# 
 15551   000082                     SPI1TCNT        equ	130	;# 
 15552   000082                     SPI1TCNTL       equ	130	;# 
 15553   000083                     SPI1TCNTH       equ	131	;# 
 15554   000084                     SPI1CON0        equ	132	;# 
 15555   000085                     SPI1CON1        equ	133	;# 
 15556   000086                     SPI1CON2        equ	134	;# 
 15557   000087                     SPI1STATUS      equ	135	;# 
 15558   000088                     SPI1TWIDTH      equ	136	;# 
 15559   000089                     SPI1BAUD        equ	137	;# 
 15560   00008A                     SPI1INTF        equ	138	;# 
 15561   00008B                     SPI1INTE        equ	139	;# 
 15562   00008C                     SPI1CLK         equ	140	;# 
 15563   00008D                     SPI2RXB         equ	141	;# 
 15564   00008E                     SPI2TXB         equ	142	;# 
 15565   00008F                     SPI2TCNT        equ	143	;# 
 15566   00008F                     SPI2TCNTL       equ	143	;# 
 15567   000090                     SPI2TCNTH       equ	144	;# 
 15568   000091                     SPI2CON0        equ	145	;# 
 15569   000092                     SPI2CON1        equ	146	;# 
 15570   000093                     SPI2CON2        equ	147	;# 
 15571   000094                     SPI2STATUS      equ	148	;# 
 15572   000095                     SPI2TWIDTH      equ	149	;# 
 15573   000096                     SPI2BAUD        equ	150	;# 
 15574   000097                     SPI2INTF        equ	151	;# 
 15575   000098                     SPI2INTE        equ	152	;# 
 15576   000099                     SPI2CLK         equ	153	;# 
 15577   0000AC                     ACTCON          equ	172	;# 
 15578   0000AD                     OSCCON1         equ	173	;# 
 15579   0000AE                     OSCCON2         equ	174	;# 
 15580   0000AF                     OSCCON3         equ	175	;# 
 15581   0000B0                     OSCTUNE         equ	176	;# 
 15582   0000B1                     OSCFRQ          equ	177	;# 
 15583   0000B1                     OSCFREQ         equ	177	;# 
 15584   0000B2                     OSCSTAT         equ	178	;# 
 15585   0000B2                     OSCSTAT1        equ	178	;# 
 15586   0000B3                     OSCEN           equ	179	;# 
 15587   0000B4                     PRLOCK          equ	180	;# 
 15588   0000B5                     SCANPR          equ	181	;# 
 15589   0000B6                     DMA1PR          equ	182	;# 
 15590   0000B7                     DMA2PR          equ	183	;# 
 15591   0000B8                     DMA3PR          equ	184	;# 
 15592   0000B9                     DMA4PR          equ	185	;# 
 15593   0000BA                     DMA5PR          equ	186	;# 
 15594   0000BB                     DMA6PR          equ	187	;# 
 15595   0000BC                     DMA7PR          equ	188	;# 
 15596   0000BD                     DMA8PR          equ	189	;# 
 15597   0000BE                     MAINPR          equ	190	;# 
 15598   0000BF                     ISRPR           equ	191	;# 
 15599   0000D4                     CLCDATA         equ	212	;# 
 15600   0000D5                     CLCSELECT       equ	213	;# 
 15601   0000D6                     CLCnCON         equ	214	;# 
 15602   0000D7                     CLCnPOL         equ	215	;# 
 15603   0000D8                     CLCnSEL0        equ	216	;# 
 15604   0000D9                     CLCnSEL1        equ	217	;# 
 15605   0000DA                     CLCnSEL2        equ	218	;# 
 15606   0000DB                     CLCnSEL3        equ	219	;# 
 15607   0000DC                     CLCnGLS0        equ	220	;# 
 15608   0000DD                     CLCnGLS1        equ	221	;# 
 15609   0000DE                     CLCnGLS2        equ	222	;# 
 15610   0000DF                     CLCnGLS3        equ	223	;# 
 15611   0000E8                     DMASELECT       equ	232	;# 
 15612   0000E9                     DMAnBUF         equ	233	;# 
 15613   0000EA                     DMAnDCNT        equ	234	;# 
 15614   0000EA                     DMAnDCNTL       equ	234	;# 
 15615   0000EB                     DMAnDCNTH       equ	235	;# 
 15616   0000EC                     DMAnDPTR        equ	236	;# 
 15617   0000EC                     DMAnDPTRL       equ	236	;# 
 15618   0000ED                     DMAnDPTRH       equ	237	;# 
 15619   0000EE                     DMAnDSZ         equ	238	;# 
 15620   0000EE                     DMAnDSZL        equ	238	;# 
 15621   0000EF                     DMAnDSZH        equ	239	;# 
 15622   0000F0                     DMAnDSA         equ	240	;# 
 15623   0000F0                     DMAnDSAL        equ	240	;# 
 15624   0000F1                     DMAnDSAH        equ	241	;# 
 15625   0000F2                     DMAnSCNT        equ	242	;# 
 15626   0000F2                     DMAnSCNTL       equ	242	;# 
 15627   0000F3                     DMAnSCNTH       equ	243	;# 
 15628   0000F4                     DMAnSPTR        equ	244	;# 
 15629   0000F4                     DMAnSPTRL       equ	244	;# 
 15630   0000F5                     DMAnSPTRH       equ	245	;# 
 15631   0000F6                     DMAnSPTRU       equ	246	;# 
 15632   0000F7                     DMAnSSZ         equ	247	;# 
 15633   0000F7                     DMAnSSZL        equ	247	;# 
 15634   0000F8                     DMAnSSZH        equ	248	;# 
 15635   0000F9                     DMAnSSA         equ	249	;# 
 15636   0000F9                     DMAnSSAL        equ	249	;# 
 15637   0000FA                     DMAnSSAH        equ	250	;# 
 15638   0000FB                     DMAnSSAU        equ	251	;# 
 15639   0000FC                     DMAnCON0        equ	252	;# 
 15640   0000FD                     DMAnCON1        equ	253	;# 
 15641   0000FE                     DMAnAIRQ        equ	254	;# 
 15642   0000FF                     DMAnSIRQ        equ	255	;# 
 15643   000100                     C1CONL          equ	256	;# 
 15644   000101                     C1CONH          equ	257	;# 
 15645   000102                     C1CONU          equ	258	;# 
 15646   000103                     C1CONT          equ	259	;# 
 15647   000104                     C1NBTCFGL       equ	260	;# 
 15648   000105                     C1NBTCFGH       equ	261	;# 
 15649   000106                     C1NBTCFGU       equ	262	;# 
 15650   000107                     C1NBTCFGT       equ	263	;# 
 15651   000108                     C1DBTCFGL       equ	264	;# 
 15652   000109                     C1DBTCFGH       equ	265	;# 
 15653   00010A                     C1DBTCFGU       equ	266	;# 
 15654   00010B                     C1DBTCFGT       equ	267	;# 
 15655   00010C                     C1TDCL          equ	268	;# 
 15656   00010D                     C1TDCH          equ	269	;# 
 15657   00010E                     C1TDCU          equ	270	;# 
 15658   000110                     C1TBC           equ	272	;# 
 15659   000110                     C1TBCL          equ	272	;# 
 15660   000111                     C1TBCH          equ	273	;# 
 15661   000112                     C1TBCU          equ	274	;# 
 15662   000113                     C1TBCT          equ	275	;# 
 15663   000114                     C1TSCONL        equ	276	;# 
 15664   000115                     C1TSCONH        equ	277	;# 
 15665   000116                     C1TSCONU        equ	278	;# 
 15666   000117                     C1TSCONT        equ	279	;# 
 15667   000118                     C1VECL          equ	280	;# 
 15668   000119                     C1VECH          equ	281	;# 
 15669   00011A                     C1VECU          equ	282	;# 
 15670   00011B                     C1VECT          equ	283	;# 
 15671   00011C                     C1INTL          equ	284	;# 
 15672   00011D                     C1INTH          equ	285	;# 
 15673   00011E                     C1INTU          equ	286	;# 
 15674   00011F                     C1INTT          equ	287	;# 
 15675   000120                     C1RXIF          equ	288	;# 
 15676   000120                     C1RXIFL         equ	288	;# 
 15677   000121                     C1RXIFH         equ	289	;# 
 15678   000122                     C1RXIFU         equ	290	;# 
 15679   000123                     C1RXIFT         equ	291	;# 
 15680   000124                     C1TXIF          equ	292	;# 
 15681   000124                     C1TXIFL         equ	292	;# 
 15682   000125                     C1TXIFH         equ	293	;# 
 15683   000126                     C1TXIFU         equ	294	;# 
 15684   000127                     C1TXIFT         equ	295	;# 
 15685   000128                     C1RXOVIF        equ	296	;# 
 15686   000128                     C1RXOVIFL       equ	296	;# 
 15687   000129                     C1RXOVIFH       equ	297	;# 
 15688   00012A                     C1RXOVIFU       equ	298	;# 
 15689   00012B                     C1RXOVIFT       equ	299	;# 
 15690   00012C                     C1TXATIF        equ	300	;# 
 15691   00012C                     C1TXATIFL       equ	300	;# 
 15692   00012D                     C1TXATIFH       equ	301	;# 
 15693   00012E                     C1TXATIFU       equ	302	;# 
 15694   00012F                     C1TXATIFT       equ	303	;# 
 15695   000130                     C1TXREQ         equ	304	;# 
 15696   000130                     C1TXREQL        equ	304	;# 
 15697   000131                     C1TXREQH        equ	305	;# 
 15698   000132                     C1TXREQU        equ	306	;# 
 15699   000133                     C1TXREQT        equ	307	;# 
 15700   000134                     C1TRECL         equ	308	;# 
 15701   000135                     C1TRECH         equ	309	;# 
 15702   000136                     C1TRECU         equ	310	;# 
 15703   000137                     C1TRECT         equ	311	;# 
 15704   000138                     C1BDIAG0L       equ	312	;# 
 15705   000139                     C1BDIAG0H       equ	313	;# 
 15706   00013C                     C1BDIAG1L       equ	316	;# 
 15707   00013D                     C1BDIAG1H       equ	317	;# 
 15708   00013E                     C1BDIAG1U       equ	318	;# 
 15709   00013F                     C1BDIAG1T       equ	319	;# 
 15710   000140                     C1TEFCONL       equ	320	;# 
 15711   000141                     C1TEFCONH       equ	321	;# 
 15712   000142                     C1TEFCONU       equ	322	;# 
 15713   000143                     C1TEFCONT       equ	323	;# 
 15714   000144                     C1TEFSTAL       equ	324	;# 
 15715   000145                     C1TEFSTAH       equ	325	;# 
 15716   000146                     C1TEFSTAU       equ	326	;# 
 15717   000147                     C1TEFSTAT       equ	327	;# 
 15718   000148                     C1TEFUA         equ	328	;# 
 15719   000148                     C1TEFUAL        equ	328	;# 
 15720   000149                     C1TEFUAH        equ	329	;# 
 15721   00014A                     C1TEFUAU        equ	330	;# 
 15722   00014B                     C1TEFUAT        equ	331	;# 
 15723   00014C                     C1FIFOBA        equ	332	;# 
 15724   00014C                     C1FIFOBAL       equ	332	;# 
 15725   00014D                     C1FIFOBAH       equ	333	;# 
 15726   00014E                     C1FIFOBAU       equ	334	;# 
 15727   00014F                     C1FIFOBAT       equ	335	;# 
 15728   000150                     C1TXQCONL       equ	336	;# 
 15729   000151                     C1TXQCONH       equ	337	;# 
 15730   000152                     C1TXQCONU       equ	338	;# 
 15731   000153                     C1TXQCONT       equ	339	;# 
 15732   000154                     C1TXQSTAL       equ	340	;# 
 15733   000155                     C1TXQSTAH       equ	341	;# 
 15734   000156                     C1TXQSTAU       equ	342	;# 
 15735   000157                     C1TXQSTAT       equ	343	;# 
 15736   000158                     C1TXQUA         equ	344	;# 
 15737   000158                     C1TXQUAL        equ	344	;# 
 15738   000159                     C1TXQUAH        equ	345	;# 
 15739   00015A                     C1TXQUAU        equ	346	;# 
 15740   00015B                     C1TXQUAT        equ	347	;# 
 15741   00015C                     C1FIFOCON1      equ	348	;# 
 15742   00015C                     C1FIFOCON1L     equ	348	;# 
 15743   00015D                     C1FIFOCON1H     equ	349	;# 
 15744   00015E                     C1FIFOCON1U     equ	350	;# 
 15745   00015F                     C1FIFOCON1T     equ	351	;# 
 15746   000160                     C1FIFOSTA1      equ	352	;# 
 15747   000160                     C1FIFOSTA1L     equ	352	;# 
 15748   000161                     C1FIFOSTA1H     equ	353	;# 
 15749   000162                     C1FIFOSTA1U     equ	354	;# 
 15750   000163                     C1FIFOSTA1T     equ	355	;# 
 15751   000164                     C1FIFOUA1       equ	356	;# 
 15752   000164                     C1FIFOUA1L      equ	356	;# 
 15753   000165                     C1FIFOUA1H      equ	357	;# 
 15754   000166                     C1FIFOUA1U      equ	358	;# 
 15755   000167                     C1FIFOUA1T      equ	359	;# 
 15756   000168                     C1FIFOCON2      equ	360	;# 
 15757   000168                     C1FIFOCON2L     equ	360	;# 
 15758   000169                     C1FIFOCON2H     equ	361	;# 
 15759   00016A                     C1FIFOCON2U     equ	362	;# 
 15760   00016B                     C1FIFOCON2T     equ	363	;# 
 15761   00016C                     C1FIFOSTA2      equ	364	;# 
 15762   00016C                     C1FIFOSTA2L     equ	364	;# 
 15763   00016D                     C1FIFOSTA2H     equ	365	;# 
 15764   00016E                     C1FIFOSTA2U     equ	366	;# 
 15765   00016F                     C1FIFOSTA2T     equ	367	;# 
 15766   000170                     C1FIFOUA2       equ	368	;# 
 15767   000170                     C1FIFOUA2L      equ	368	;# 
 15768   000171                     C1FIFOUA2H      equ	369	;# 
 15769   000172                     C1FIFOUA2U      equ	370	;# 
 15770   000173                     C1FIFOUA2T      equ	371	;# 
 15771   000174                     C1FIFOCON3      equ	372	;# 
 15772   000174                     C1FIFOCON3L     equ	372	;# 
 15773   000175                     C1FIFOCON3H     equ	373	;# 
 15774   000176                     C1FIFOCON3U     equ	374	;# 
 15775   000177                     C1FIFOCON3T     equ	375	;# 
 15776   000178                     C1FIFOSTA3      equ	376	;# 
 15777   000178                     C1FIFOSTA3L     equ	376	;# 
 15778   000179                     C1FIFOSTA3H     equ	377	;# 
 15779   00017A                     C1FIFOSTA3U     equ	378	;# 
 15780   00017B                     C1FIFOSTA3T     equ	379	;# 
 15781   00017C                     C1FIFOUA3       equ	380	;# 
 15782   00017C                     C1FIFOUA3L      equ	380	;# 
 15783   00017D                     C1FIFOUA3H      equ	381	;# 
 15784   00017E                     C1FIFOUA3U      equ	382	;# 
 15785   00017F                     C1FIFOUA3T      equ	383	;# 
 15786   000180                     C1FLTCON0L      equ	384	;# 
 15787   000181                     C1FLTCON0H      equ	385	;# 
 15788   000182                     C1FLTCON0U      equ	386	;# 
 15789   000183                     C1FLTCON0T      equ	387	;# 
 15790   000184                     C1FLTCON1L      equ	388	;# 
 15791   000185                     C1FLTCON1H      equ	389	;# 
 15792   000186                     C1FLTCON1U      equ	390	;# 
 15793   000187                     C1FLTCON1T      equ	391	;# 
 15794   000188                     C1FLTCON2L      equ	392	;# 
 15795   000189                     C1FLTCON2H      equ	393	;# 
 15796   00018A                     C1FLTCON2U      equ	394	;# 
 15797   00018B                     C1FLTCON2T      equ	395	;# 
 15798   00018C                     C1FLTOBJ0       equ	396	;# 
 15799   00018C                     C1FLTOBJ0L      equ	396	;# 
 15800   00018D                     C1FLTOBJ0H      equ	397	;# 
 15801   00018E                     C1FLTOBJ0U      equ	398	;# 
 15802   00018F                     C1FLTOBJ0T      equ	399	;# 
 15803   000190                     C1MASK0         equ	400	;# 
 15804   000190                     C1MASK0L        equ	400	;# 
 15805   000191                     C1MASK0H        equ	401	;# 
 15806   000192                     C1MASK0U        equ	402	;# 
 15807   000193                     C1MASK0T        equ	403	;# 
 15808   000194                     C1FLTOBJ1       equ	404	;# 
 15809   000194                     C1FLTOBJ1L      equ	404	;# 
 15810   000195                     C1FLTOBJ1H      equ	405	;# 
 15811   000196                     C1FLTOBJ1U      equ	406	;# 
 15812   000197                     C1FLTOBJ1T      equ	407	;# 
 15813   000198                     C1MASK1         equ	408	;# 
 15814   000198                     C1MASK1L        equ	408	;# 
 15815   000199                     C1MASK1H        equ	409	;# 
 15816   00019A                     C1MASK1U        equ	410	;# 
 15817   00019B                     C1MASK1T        equ	411	;# 
 15818   00019C                     C1FLTOBJ2       equ	412	;# 
 15819   00019C                     C1FLTOBJ2L      equ	412	;# 
 15820   00019D                     C1FLTOBJ2H      equ	413	;# 
 15821   00019E                     C1FLTOBJ2U      equ	414	;# 
 15822   00019F                     C1FLTOBJ2T      equ	415	;# 
 15823   0001A0                     C1MASK2         equ	416	;# 
 15824   0001A0                     C1MASK2L        equ	416	;# 
 15825   0001A1                     C1MASK2H        equ	417	;# 
 15826   0001A2                     C1MASK2U        equ	418	;# 
 15827   0001A3                     C1MASK2T        equ	419	;# 
 15828   0001A4                     C1FLTOBJ3       equ	420	;# 
 15829   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15830   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15831   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15832   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15833   0001A8                     C1MASK3         equ	424	;# 
 15834   0001A8                     C1MASK3L        equ	424	;# 
 15835   0001A9                     C1MASK3H        equ	425	;# 
 15836   0001AA                     C1MASK3U        equ	426	;# 
 15837   0001AB                     C1MASK3T        equ	427	;# 
 15838   0001AC                     C1FLTOBJ4       equ	428	;# 
 15839   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15840   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15841   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15842   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15843   0001B0                     C1MASK4         equ	432	;# 
 15844   0001B0                     C1MASK4L        equ	432	;# 
 15845   0001B1                     C1MASK4H        equ	433	;# 
 15846   0001B2                     C1MASK4U        equ	434	;# 
 15847   0001B3                     C1MASK4T        equ	435	;# 
 15848   0001B4                     C1FLTOBJ5       equ	436	;# 
 15849   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15850   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15851   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15852   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15853   0001B8                     C1MASK5         equ	440	;# 
 15854   0001B8                     C1MASK5L        equ	440	;# 
 15855   0001B9                     C1MASK5H        equ	441	;# 
 15856   0001BA                     C1MASK5U        equ	442	;# 
 15857   0001BB                     C1MASK5T        equ	443	;# 
 15858   0001BC                     C1FLTOBJ6       equ	444	;# 
 15859   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15860   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15861   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15862   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15863   0001C0                     C1MASK6         equ	448	;# 
 15864   0001C0                     C1MASK6L        equ	448	;# 
 15865   0001C1                     C1MASK6H        equ	449	;# 
 15866   0001C2                     C1MASK6U        equ	450	;# 
 15867   0001C3                     C1MASK6T        equ	451	;# 
 15868   0001C4                     C1FLTOBJ7       equ	452	;# 
 15869   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15870   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15871   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15872   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15873   0001C8                     C1MASK7         equ	456	;# 
 15874   0001C8                     C1MASK7L        equ	456	;# 
 15875   0001C9                     C1MASK7H        equ	457	;# 
 15876   0001CA                     C1MASK7U        equ	458	;# 
 15877   0001CB                     C1MASK7T        equ	459	;# 
 15878   0001CC                     C1FLTOBJ8       equ	460	;# 
 15879   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15880   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15881   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15882   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15883   0001D0                     C1MASK8         equ	464	;# 
 15884   0001D0                     C1MASK8L        equ	464	;# 
 15885   0001D1                     C1MASK8H        equ	465	;# 
 15886   0001D2                     C1MASK8U        equ	466	;# 
 15887   0001D3                     C1MASK8T        equ	467	;# 
 15888   0001D4                     C1FLTOBJ9       equ	468	;# 
 15889   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15890   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15891   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15892   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15893   0001D8                     C1MASK9         equ	472	;# 
 15894   0001D8                     C1MASK9L        equ	472	;# 
 15895   0001D9                     C1MASK9H        equ	473	;# 
 15896   0001DA                     C1MASK9U        equ	474	;# 
 15897   0001DB                     C1MASK9T        equ	475	;# 
 15898   0001DC                     C1FLTOBJ10      equ	476	;# 
 15899   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15900   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15901   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15902   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15903   0001E0                     C1MASK10        equ	480	;# 
 15904   0001E0                     C1MASK10L       equ	480	;# 
 15905   0001E1                     C1MASK10H       equ	481	;# 
 15906   0001E2                     C1MASK10U       equ	482	;# 
 15907   0001E3                     C1MASK10T       equ	483	;# 
 15908   0001E4                     C1FLTOBJ11      equ	484	;# 
 15909   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15910   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15911   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15912   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15913   0001E8                     C1MASK11        equ	488	;# 
 15914   0001E8                     C1MASK11L       equ	488	;# 
 15915   0001E9                     C1MASK11H       equ	489	;# 
 15916   0001EA                     C1MASK11U       equ	490	;# 
 15917   0001EB                     C1MASK11T       equ	491	;# 
 15918   000200                     PPSLOCK         equ	512	;# 
 15919   000201                     RA0PPS          equ	513	;# 
 15920   000202                     RA1PPS          equ	514	;# 
 15921   000203                     RA2PPS          equ	515	;# 
 15922   000204                     RA3PPS          equ	516	;# 
 15923   000205                     RA4PPS          equ	517	;# 
 15924   000206                     RA5PPS          equ	518	;# 
 15925   000207                     RA6PPS          equ	519	;# 
 15926   000208                     RA7PPS          equ	520	;# 
 15927   000209                     RB0PPS          equ	521	;# 
 15928   00020A                     RB1PPS          equ	522	;# 
 15929   00020B                     RB2PPS          equ	523	;# 
 15930   00020C                     RB3PPS          equ	524	;# 
 15931   00020D                     RB4PPS          equ	525	;# 
 15932   00020E                     RB5PPS          equ	526	;# 
 15933   00020F                     RB6PPS          equ	527	;# 
 15934   000210                     RB7PPS          equ	528	;# 
 15935   000211                     RC0PPS          equ	529	;# 
 15936   000212                     RC1PPS          equ	530	;# 
 15937   000213                     RC2PPS          equ	531	;# 
 15938   000214                     RC3PPS          equ	532	;# 
 15939   000215                     RC4PPS          equ	533	;# 
 15940   000216                     RC5PPS          equ	534	;# 
 15941   000217                     RC6PPS          equ	535	;# 
 15942   000218                     RC7PPS          equ	536	;# 
 15943   00023D                     CANRXPPS        equ	573	;# 
 15944   00023E                     INT0PPS         equ	574	;# 
 15945   00023F                     INT1PPS         equ	575	;# 
 15946   000240                     INT2PPS         equ	576	;# 
 15947   000241                     T0CKIPPS        equ	577	;# 
 15948   000242                     T1CKIPPS        equ	578	;# 
 15949   000243                     T1GPPS          equ	579	;# 
 15950   000244                     T3CKIPPS        equ	580	;# 
 15951   000245                     T3GPPS          equ	581	;# 
 15952   000246                     T5CKIPPS        equ	582	;# 
 15953   000247                     T5GPPS          equ	583	;# 
 15954   000248                     T2INPPS         equ	584	;# 
 15955   000249                     T4INPPS         equ	585	;# 
 15956   00024A                     T6INPPS         equ	586	;# 
 15957   00024B                     TUIN0PPS        equ	587	;# 
 15958   00024C                     TUIN1PPS        equ	588	;# 
 15959   00024F                     CCP1PPS         equ	591	;# 
 15960   000250                     CCP2PPS         equ	592	;# 
 15961   000251                     CCP3PPS         equ	593	;# 
 15962   000253                     PWM1ERSPPS      equ	595	;# 
 15963   000254                     PWM2ERSPPS      equ	596	;# 
 15964   000255                     PWM3ERSPPS      equ	597	;# 
 15965   000256                     PWM4ERSPPS      equ	598	;# 
 15966   000257                     PWMIN0PPS       equ	599	;# 
 15967   000258                     PWMIN1PPS       equ	600	;# 
 15968   000259                     SMT1WINPPS      equ	601	;# 
 15969   00025A                     SMT1SIGPPS      equ	602	;# 
 15970   00025B                     CWG1PPS         equ	603	;# 
 15971   00025B                     CWG1INPPS       equ	603	;# 
 15972   00025C                     CWG2PPS         equ	604	;# 
 15973   00025C                     CWG2INPPS       equ	604	;# 
 15974   00025D                     CWG3PPS         equ	605	;# 
 15975   00025D                     CWG3INPPS       equ	605	;# 
 15976   00025E                     MD1CARLPPS      equ	606	;# 
 15977   00025E                     MDCARLPPS       equ	606	;# 
 15978   00025F                     MD1CARHPPS      equ	607	;# 
 15979   00025F                     MDCARHPPS       equ	607	;# 
 15980   000260                     MD1SRCPPS       equ	608	;# 
 15981   000260                     MDSRCPPS        equ	608	;# 
 15982   000261                     CLCIN0PPS       equ	609	;# 
 15983   000262                     CLCIN1PPS       equ	610	;# 
 15984   000263                     CLCIN2PPS       equ	611	;# 
 15985   000264                     CLCIN3PPS       equ	612	;# 
 15986   000265                     CLCIN4PPS       equ	613	;# 
 15987   000266                     CLCIN5PPS       equ	614	;# 
 15988   000267                     CLCIN6PPS       equ	615	;# 
 15989   000268                     CLCIN7PPS       equ	616	;# 
 15990   000269                     ADACTPPS        equ	617	;# 
 15991   00026A                     SPI1SCKPPS      equ	618	;# 
 15992   00026B                     SPI1SDIPPS      equ	619	;# 
 15993   00026C                     SPI1SSPPS       equ	620	;# 
 15994   00026D                     SPI2SCKPPS      equ	621	;# 
 15995   00026E                     SPI2SDIPPS      equ	622	;# 
 15996   00026F                     SPI2SSPPS       equ	623	;# 
 15997   000270                     I2C1SDAPPS      equ	624	;# 
 15998   000271                     I2C1SCLPPS      equ	625	;# 
 15999   000272                     U1RXPPS         equ	626	;# 
 16000   000273                     U1CTSPPS        equ	627	;# 
 16001   000274                     U2RXPPS         equ	628	;# 
 16002   000275                     U2CTSPPS        equ	629	;# 
 16003   000276                     U3RXPPS         equ	630	;# 
 16004   000277                     U3CTSPPS        equ	631	;# 
 16005   000278                     U4RXPPS         equ	632	;# 
 16006   000279                     U4CTSPPS        equ	633	;# 
 16007   00027A                     U5RXPPS         equ	634	;# 
 16008   00027B                     U5CTSPPS        equ	635	;# 
 16009   000286                     RC4I2C          equ	646	;# 
 16010   000287                     RC3I2C          equ	647	;# 
 16011   000288                     RB2I2C          equ	648	;# 
 16012   000289                     RB1I2C          equ	649	;# 
 16013   00028A                     I2C1RXB         equ	650	;# 
 16014   00028B                     I2C1TXB         equ	651	;# 
 16015   00028C                     I2C1CNTL        equ	652	;# 
 16016   00028D                     I2C1CNTH        equ	653	;# 
 16017   00028E                     I2C1ADB0        equ	654	;# 
 16018   00028F                     I2C1ADB1        equ	655	;# 
 16019   000290                     I2C1ADR0        equ	656	;# 
 16020   000291                     I2C1ADR1        equ	657	;# 
 16021   000292                     I2C1ADR2        equ	658	;# 
 16022   000293                     I2C1ADR3        equ	659	;# 
 16023   000294                     I2C1CON0        equ	660	;# 
 16024   000295                     I2C1CON1        equ	661	;# 
 16025   000296                     I2C1CON2        equ	662	;# 
 16026   000297                     I2C1ERR         equ	663	;# 
 16027   000298                     I2C1STAT0       equ	664	;# 
 16028   000299                     I2C1STAT1       equ	665	;# 
 16029   00029A                     I2C1PIR         equ	666	;# 
 16030   00029B                     I2C1PIE         equ	667	;# 
 16031   00029C                     I2C1BTO         equ	668	;# 
 16032   00029D                     I2C1BAUD        equ	669	;# 
 16033   00029E                     I2C1CLK         equ	670	;# 
 16034   00029F                     I2C1BTOC        equ	671	;# 
 16035   0002A1                     U1RXB           equ	673	;# 
 16036   0002A1                     U1RXBL          equ	673	;# 
 16037   0002A2                     U1RXCHK         equ	674	;# 
 16038   0002A3                     U1TXB           equ	675	;# 
 16039   0002A3                     U1TXBL          equ	675	;# 
 16040   0002A4                     U1TXCHK         equ	676	;# 
 16041   0002A5                     U1P1            equ	677	;# 
 16042   0002A5                     U1P1L           equ	677	;# 
 16043   0002A6                     U1P1H           equ	678	;# 
 16044   0002A7                     U1P2            equ	679	;# 
 16045   0002A7                     U1P2L           equ	679	;# 
 16046   0002A8                     U1P2H           equ	680	;# 
 16047   0002A9                     U1P3            equ	681	;# 
 16048   0002A9                     U1P3L           equ	681	;# 
 16049   0002AA                     U1P3H           equ	682	;# 
 16050   0002AB                     U1CON0          equ	683	;# 
 16051   0002AC                     U1CON1          equ	684	;# 
 16052   0002AD                     U1CON2          equ	685	;# 
 16053   0002AE                     U1BRG           equ	686	;# 
 16054   0002AE                     U1BRGL          equ	686	;# 
 16055   0002AF                     U1BRGH          equ	687	;# 
 16056   0002B0                     U1FIFO          equ	688	;# 
 16057   0002B1                     U1UIR           equ	689	;# 
 16058   0002B2                     U1ERRIR         equ	690	;# 
 16059   0002B3                     U1ERRIE         equ	691	;# 
 16060   0002B4                     U2RXB           equ	692	;# 
 16061   0002B4                     U2RXBL          equ	692	;# 
 16062   0002B5                     U2RXCHK         equ	693	;# 
 16063   0002B6                     U2TXB           equ	694	;# 
 16064   0002B6                     U2TXBL          equ	694	;# 
 16065   0002B7                     U2TXCHK         equ	695	;# 
 16066   0002B8                     U2P1            equ	696	;# 
 16067   0002B8                     U2P1L           equ	696	;# 
 16068   0002B9                     U2P1H           equ	697	;# 
 16069   0002BA                     U2P2            equ	698	;# 
 16070   0002BA                     U2P2L           equ	698	;# 
 16071   0002BB                     U2P2H           equ	699	;# 
 16072   0002BC                     U2P3            equ	700	;# 
 16073   0002BC                     U2P3L           equ	700	;# 
 16074   0002BD                     U2P3H           equ	701	;# 
 16075   0002BE                     U2CON0          equ	702	;# 
 16076   0002BF                     U2CON1          equ	703	;# 
 16077   0002C0                     U2CON2          equ	704	;# 
 16078   0002C1                     U2BRG           equ	705	;# 
 16079   0002C1                     U2BRGL          equ	705	;# 
 16080   0002C2                     U2BRGH          equ	706	;# 
 16081   0002C3                     U2FIFO          equ	707	;# 
 16082   0002C4                     U2UIR           equ	708	;# 
 16083   0002C5                     U2ERRIR         equ	709	;# 
 16084   0002C6                     U2ERRIE         equ	710	;# 
 16085   0002C7                     U3RXB           equ	711	;# 
 16086   0002C7                     U3RXBL          equ	711	;# 
 16087   0002C9                     U3TXB           equ	713	;# 
 16088   0002C9                     U3TXBL          equ	713	;# 
 16089   0002CB                     U3P1            equ	715	;# 
 16090   0002CB                     U3P1L           equ	715	;# 
 16091   0002CD                     U3P2            equ	717	;# 
 16092   0002CD                     U3P2L           equ	717	;# 
 16093   0002CF                     U3P3            equ	719	;# 
 16094   0002CF                     U3P3L           equ	719	;# 
 16095   0002D1                     U3CON0          equ	721	;# 
 16096   0002D2                     U3CON1          equ	722	;# 
 16097   0002D3                     U3CON2          equ	723	;# 
 16098   0002D4                     U3BRG           equ	724	;# 
 16099   0002D4                     U3BRGL          equ	724	;# 
 16100   0002D5                     U3BRGH          equ	725	;# 
 16101   0002D6                     U3FIFO          equ	726	;# 
 16102   0002D7                     U3UIR           equ	727	;# 
 16103   0002D8                     U3ERRIR         equ	728	;# 
 16104   0002D9                     U3ERRIE         equ	729	;# 
 16105   0002DA                     U4RXB           equ	730	;# 
 16106   0002DA                     U4RXBL          equ	730	;# 
 16107   0002DC                     U4TXB           equ	732	;# 
 16108   0002DC                     U4TXBL          equ	732	;# 
 16109   0002DE                     U4P1            equ	734	;# 
 16110   0002DE                     U4P1L           equ	734	;# 
 16111   0002E0                     U4P2            equ	736	;# 
 16112   0002E0                     U4P2L           equ	736	;# 
 16113   0002E2                     U4P3            equ	738	;# 
 16114   0002E2                     U4P3L           equ	738	;# 
 16115   0002E4                     U4CON0          equ	740	;# 
 16116   0002E5                     U4CON1          equ	741	;# 
 16117   0002E6                     U4CON2          equ	742	;# 
 16118   0002E7                     U4BRG           equ	743	;# 
 16119   0002E7                     U4BRGL          equ	743	;# 
 16120   0002E8                     U4BRGH          equ	744	;# 
 16121   0002E9                     U4FIFO          equ	745	;# 
 16122   0002EA                     U4UIR           equ	746	;# 
 16123   0002EB                     U4ERRIR         equ	747	;# 
 16124   0002EC                     U4ERRIE         equ	748	;# 
 16125   0002ED                     U5RXB           equ	749	;# 
 16126   0002ED                     U5RXBL          equ	749	;# 
 16127   0002EF                     U5TXB           equ	751	;# 
 16128   0002EF                     U5TXBL          equ	751	;# 
 16129   0002F1                     U5P1            equ	753	;# 
 16130   0002F1                     U5P1L           equ	753	;# 
 16131   0002F3                     U5P2            equ	755	;# 
 16132   0002F3                     U5P2L           equ	755	;# 
 16133   0002F5                     U5P3            equ	757	;# 
 16134   0002F5                     U5P3L           equ	757	;# 
 16135   0002F7                     U5CON0          equ	759	;# 
 16136   0002F8                     U5CON1          equ	760	;# 
 16137   0002F9                     U5CON2          equ	761	;# 
 16138   0002FA                     U5BRG           equ	762	;# 
 16139   0002FA                     U5BRGL          equ	762	;# 
 16140   0002FB                     U5BRGH          equ	763	;# 
 16141   0002FC                     U5FIFO          equ	764	;# 
 16142   0002FD                     U5UIR           equ	765	;# 
 16143   0002FE                     U5ERRIR         equ	766	;# 
 16144   0002FF                     U5ERRIE         equ	767	;# 
 16145   000300                     SMT1TMR         equ	768	;# 
 16146   000300                     SMT1TMRL        equ	768	;# 
 16147   000301                     SMT1TMRH        equ	769	;# 
 16148   000302                     SMT1TMRU        equ	770	;# 
 16149   000303                     SMT1CPR         equ	771	;# 
 16150   000303                     SMT1CPRL        equ	771	;# 
 16151   000304                     SMT1CPRH        equ	772	;# 
 16152   000305                     SMT1CPRU        equ	773	;# 
 16153   000306                     SMT1CPW         equ	774	;# 
 16154   000306                     SMT1CPWL        equ	774	;# 
 16155   000307                     SMT1CPWH        equ	775	;# 
 16156   000308                     SMT1CPWU        equ	776	;# 
 16157   000309                     SMT1PR          equ	777	;# 
 16158   000309                     SMT1PRL         equ	777	;# 
 16159   00030A                     SMT1PRH         equ	778	;# 
 16160   00030B                     SMT1PRU         equ	779	;# 
 16161   00030C                     SMT1CON0        equ	780	;# 
 16162   00030D                     SMT1CON1        equ	781	;# 
 16163   00030E                     SMT1STAT        equ	782	;# 
 16164   00030F                     SMT1CLK         equ	783	;# 
 16165   000310                     SMT1SIG         equ	784	;# 
 16166   000311                     SMT1WIN         equ	785	;# 
 16167   000318                     TMR0L           equ	792	;# 
 16168   000318                     TMR0            equ	792	;# 
 16169   000319                     TMR0H           equ	793	;# 
 16170   000319                     PR0             equ	793	;# 
 16171   00031A                     T0CON0          equ	794	;# 
 16172   00031B                     T0CON1          equ	795	;# 
 16173   00031C                     TMR1            equ	796	;# 
 16174   00031C                     TMR1L           equ	796	;# 
 16175   00031D                     TMR1H           equ	797	;# 
 16176   00031E                     T1CON           equ	798	;# 
 16177   00031E                     TMR1CON         equ	798	;# 
 16178   00031F                     T1GCON          equ	799	;# 
 16179   00031F                     TMR1GCON        equ	799	;# 
 16180   000320                     T1GATE          equ	800	;# 
 16181   000320                     TMR1GATE        equ	800	;# 
 16182   000321                     T1CLK           equ	801	;# 
 16183   000321                     TMR1CLK         equ	801	;# 
 16184   000321                     PR1             equ	801	;# 
 16185   000322                     T2TMR           equ	802	;# 
 16186   000322                     TMR2            equ	802	;# 
 16187   000323                     T2PR            equ	803	;# 
 16188   000323                     PR2             equ	803	;# 
 16189   000324                     T2CON           equ	804	;# 
 16190   000325                     T2HLT           equ	805	;# 
 16191   000326                     T2CLKCON        equ	806	;# 
 16192   000326                     T2CLK           equ	806	;# 
 16193   000327                     T2RST           equ	807	;# 
 16194   000328                     TMR3            equ	808	;# 
 16195   000328                     TMR3L           equ	808	;# 
 16196   000329                     TMR3H           equ	809	;# 
 16197   00032A                     T3CON           equ	810	;# 
 16198   00032A                     TMR3CON         equ	810	;# 
 16199   00032B                     T3GCON          equ	811	;# 
 16200   00032B                     TMR3GCON        equ	811	;# 
 16201   00032C                     T3GATE          equ	812	;# 
 16202   00032C                     TMR3GATE        equ	812	;# 
 16203   00032D                     T3CLK           equ	813	;# 
 16204   00032D                     TMR3CLK         equ	813	;# 
 16205   00032D                     PR3             equ	813	;# 
 16206   00032E                     T4TMR           equ	814	;# 
 16207   00032E                     TMR4            equ	814	;# 
 16208   00032F                     T4PR            equ	815	;# 
 16209   00032F                     PR4             equ	815	;# 
 16210   000330                     T4CON           equ	816	;# 
 16211   000331                     T4HLT           equ	817	;# 
 16212   000332                     T4CLKCON        equ	818	;# 
 16213   000332                     T4CLK           equ	818	;# 
 16214   000333                     T4RST           equ	819	;# 
 16215   000334                     TMR5            equ	820	;# 
 16216   000334                     TMR5L           equ	820	;# 
 16217   000335                     TMR5H           equ	821	;# 
 16218   000336                     T5CON           equ	822	;# 
 16219   000336                     TMR5CON         equ	822	;# 
 16220   000337                     T5GCON          equ	823	;# 
 16221   000337                     TMR5GCON        equ	823	;# 
 16222   000338                     T5GATE          equ	824	;# 
 16223   000338                     TMR5GATE        equ	824	;# 
 16224   000339                     T5CLK           equ	825	;# 
 16225   000339                     TMR5CLK         equ	825	;# 
 16226   000339                     PR5             equ	825	;# 
 16227   00033A                     T6TMR           equ	826	;# 
 16228   00033A                     TMR6            equ	826	;# 
 16229   00033B                     T6PR            equ	827	;# 
 16230   00033B                     PR6             equ	827	;# 
 16231   00033C                     T6CON           equ	828	;# 
 16232   00033D                     T6HLT           equ	829	;# 
 16233   00033E                     T6CLKCON        equ	830	;# 
 16234   00033E                     T6CLK           equ	830	;# 
 16235   00033F                     T6RST           equ	831	;# 
 16236   000340                     CCPR1           equ	832	;# 
 16237   000340                     CCPR1L          equ	832	;# 
 16238   000341                     CCPR1H          equ	833	;# 
 16239   000342                     CCP1CON         equ	834	;# 
 16240   000343                     CCP1CAP         equ	835	;# 
 16241   000344                     CCPR2           equ	836	;# 
 16242   000344                     CCPR2L          equ	836	;# 
 16243   000345                     CCPR2H          equ	837	;# 
 16244   000346                     CCP2CON         equ	838	;# 
 16245   000347                     CCP2CAP         equ	839	;# 
 16246   000348                     CCPR3           equ	840	;# 
 16247   000348                     CCPR3L          equ	840	;# 
 16248   000349                     CCPR3H          equ	841	;# 
 16249   00034A                     CCP3CON         equ	842	;# 
 16250   00034B                     CCP3CAP         equ	843	;# 
 16251   00034C                     CCPTMRS0        equ	844	;# 
 16252   00034F                     CRCDATA         equ	847	;# 
 16253   00034F                     CRCDATAL        equ	847	;# 
 16254   000350                     CRCDATAH        equ	848	;# 
 16255   000351                     CRCDATAU        equ	849	;# 
 16256   000352                     CRCDATAT        equ	850	;# 
 16257   000353                     CRCOUT          equ	851	;# 
 16258   000353                     CRCSHFT         equ	851	;# 
 16259   000353                     CRCXOR          equ	851	;# 
 16260   000353                     CRCOUTL         equ	851	;# 
 16261   000353                     CRCSHFTL        equ	851	;# 
 16262   000353                     CRCSHIFTL       equ	851	;# 
 16263   000353                     CRCXORL         equ	851	;# 
 16264   000354                     CRCOUTH         equ	852	;# 
 16265   000354                     CRCSHFTH        equ	852	;# 
 16266   000354                     CRCSHIFTH       equ	852	;# 
 16267   000354                     CRCXORH         equ	852	;# 
 16268   000355                     CRCOUTU         equ	853	;# 
 16269   000355                     CRCSHFTU        equ	853	;# 
 16270   000355                     CRCSHIFTU       equ	853	;# 
 16271   000355                     CRCXORU         equ	853	;# 
 16272   000356                     CRCOUTT         equ	854	;# 
 16273   000356                     CRCSHFTT        equ	854	;# 
 16274   000356                     CRCSHIFTT       equ	854	;# 
 16275   000356                     CRCXORT         equ	854	;# 
 16276   000357                     CRCCON0         equ	855	;# 
 16277   000358                     CRCCON1         equ	856	;# 
 16278   000359                     CRCCON2         equ	857	;# 
 16279   00035A                     SCANLADR        equ	858	;# 
 16280   00035A                     SCANLADRL       equ	858	;# 
 16281   00035B                     SCANLADRH       equ	859	;# 
 16282   00035C                     SCANLADRU       equ	860	;# 
 16283   00035D                     SCANHADR        equ	861	;# 
 16284   00035D                     SCANHADRL       equ	861	;# 
 16285   00035E                     SCANHADRH       equ	862	;# 
 16286   00035F                     SCANHADRU       equ	863	;# 
 16287   000360                     SCANCON0        equ	864	;# 
 16288   000361                     SCANTRIG        equ	865	;# 
 16289   000362                     IPR0            equ	866	;# 
 16290   000363                     IPR1            equ	867	;# 
 16291   000364                     IPR2            equ	868	;# 
 16292   000365                     IPR3            equ	869	;# 
 16293   000366                     IPR4            equ	870	;# 
 16294   000367                     IPR5            equ	871	;# 
 16295   000368                     IPR6            equ	872	;# 
 16296   000369                     IPR7            equ	873	;# 
 16297   00036A                     IPR8            equ	874	;# 
 16298   00036B                     IPR9            equ	875	;# 
 16299   00036C                     IPR10           equ	876	;# 
 16300   00036D                     IPR11           equ	877	;# 
 16301   00036E                     IPR12           equ	878	;# 
 16302   00036F                     IPR13           equ	879	;# 
 16303   000370                     IPR14           equ	880	;# 
 16304   000371                     IPR15           equ	881	;# 
 16305   000373                     STATUS_CSHAD    equ	883	;# 
 16306   000374                     WREG_CSHAD      equ	884	;# 
 16307   000375                     BSR_CSHAD       equ	885	;# 
 16308   000376                     SHADCON         equ	886	;# 
 16309   000377                     STATUS_SHAD     equ	887	;# 
 16310   000378                     WREG_SHAD       equ	888	;# 
 16311   000379                     BSR_SHAD        equ	889	;# 
 16312   00037A                     PCLATH_SHAD     equ	890	;# 
 16313   00037B                     PCLATU_SHAD     equ	891	;# 
 16314   00037C                     FSR0SH          equ	892	;# 
 16315   00037C                     FSR0L_SHAD      equ	892	;# 
 16316   00037D                     FSR0H_SHAD      equ	893	;# 
 16317   00037E                     FSR1SH          equ	894	;# 
 16318   00037E                     FSR1L_SHAD      equ	894	;# 
 16319   00037F                     FSR1H_SHAD      equ	895	;# 
 16320   000380                     FSR2SH          equ	896	;# 
 16321   000380                     FSR2L_SHAD      equ	896	;# 
 16322   000381                     FSR2H_SHAD      equ	897	;# 
 16323   000382                     PRODSH          equ	898	;# 
 16324   000382                     PRODL_SHAD      equ	898	;# 
 16325   000383                     PRODH_SHAD      equ	899	;# 
 16326   000387                     TU16ACON0       equ	903	;# 
 16327   000388                     TU16ACON1       equ	904	;# 
 16328   000389                     TU16AHLT        equ	905	;# 
 16329   00038A                     TU16APS         equ	906	;# 
 16330   00038B                     TU16ATMR        equ	907	;# 
 16331   00038B                     TU16ACR         equ	907	;# 
 16332   00038B                     TU16ATMRL       equ	907	;# 
 16333   00038B                     TU16ACRL        equ	907	;# 
 16334   00038C                     TU16ATMRH       equ	908	;# 
 16335   00038C                     TU16ACRH        equ	908	;# 
 16336   00038D                     TU16APR         equ	909	;# 
 16337   00038D                     TU16APRL        equ	909	;# 
 16338   00038E                     TU16APRH        equ	910	;# 
 16339   00038F                     TU16ACLK        equ	911	;# 
 16340   000390                     TU16AERS        equ	912	;# 
 16341   000393                     TU16BCON0       equ	915	;# 
 16342   000394                     TU16BCON1       equ	916	;# 
 16343   000395                     TU16BHLT        equ	917	;# 
 16344   000396                     TU16BPS         equ	918	;# 
 16345   000397                     TU16BTMR        equ	919	;# 
 16346   000397                     TU16BCR         equ	919	;# 
 16347   000397                     TU16BTMRL       equ	919	;# 
 16348   000397                     TU16BCRL        equ	919	;# 
 16349   000398                     TU16BTMRH       equ	920	;# 
 16350   000398                     TU16BCRH        equ	920	;# 
 16351   000399                     TU16BPR         equ	921	;# 
 16352   000399                     TU16BPRL        equ	921	;# 
 16353   00039A                     TU16BPRH        equ	922	;# 
 16354   00039B                     TU16BCLK        equ	923	;# 
 16355   00039C                     TU16BERS        equ	924	;# 
 16356   0003BB                     TUCHAIN         equ	955	;# 
 16357   0003BC                     CWG1CLK         equ	956	;# 
 16358   0003BC                     CWG1CLKCON      equ	956	;# 
 16359   0003BD                     CWG1ISM         equ	957	;# 
 16360   0003BE                     CWG1DBR         equ	958	;# 
 16361   0003BF                     CWG1DBF         equ	959	;# 
 16362   0003C0                     CWG1CON0        equ	960	;# 
 16363   0003C1                     CWG1CON1        equ	961	;# 
 16364   0003C2                     CWG1AS0         equ	962	;# 
 16365   0003C3                     CWG1AS1         equ	963	;# 
 16366   0003C4                     CWG1STR         equ	964	;# 
 16367   0003C5                     CWG2CLK         equ	965	;# 
 16368   0003C5                     CWG2CLKCON      equ	965	;# 
 16369   0003C6                     CWG2ISM         equ	966	;# 
 16370   0003C7                     CWG2DBR         equ	967	;# 
 16371   0003C8                     CWG2DBF         equ	968	;# 
 16372   0003C9                     CWG2CON0        equ	969	;# 
 16373   0003CA                     CWG2CON1        equ	970	;# 
 16374   0003CB                     CWG2AS0         equ	971	;# 
 16375   0003CC                     CWG2AS1         equ	972	;# 
 16376   0003CD                     CWG2STR         equ	973	;# 
 16377   0003CE                     CWG3CLK         equ	974	;# 
 16378   0003CE                     CWG3CLKCON      equ	974	;# 
 16379   0003CF                     CWG3ISM         equ	975	;# 
 16380   0003D0                     CWG3DBR         equ	976	;# 
 16381   0003D1                     CWG3DBF         equ	977	;# 
 16382   0003D2                     CWG3CON0        equ	978	;# 
 16383   0003D3                     CWG3CON1        equ	979	;# 
 16384   0003D4                     CWG3AS0         equ	980	;# 
 16385   0003D5                     CWG3AS1         equ	981	;# 
 16386   0003D6                     CWG3STR         equ	982	;# 
 16387   0003D7                     FVRCON          equ	983	;# 
 16388   0003D8                     ADCPCON         equ	984	;# 
 16389   0003D8                     ADCP            equ	984	;# 
 16390   0003D9                     ADLTH           equ	985	;# 
 16391   0003D9                     ADLTHL          equ	985	;# 
 16392   0003DA                     ADLTHH          equ	986	;# 
 16393   0003DB                     ADUTH           equ	987	;# 
 16394   0003DB                     ADUTHL          equ	987	;# 
 16395   0003DC                     ADUTHH          equ	988	;# 
 16396   0003DD                     ADERR           equ	989	;# 
 16397   0003DD                     ADERRL          equ	989	;# 
 16398   0003DE                     ADERRH          equ	990	;# 
 16399   0003DF                     ADSTPT          equ	991	;# 
 16400   0003DF                     ADSTPTL         equ	991	;# 
 16401   0003E0                     ADSTPTH         equ	992	;# 
 16402   0003E1                     ADFLTR          equ	993	;# 
 16403   0003E1                     ADFLTRL         equ	993	;# 
 16404   0003E2                     ADFLTRH         equ	994	;# 
 16405   0003E3                     ADACC           equ	995	;# 
 16406   0003E3                     ADACCL          equ	995	;# 
 16407   0003E4                     ADACCH          equ	996	;# 
 16408   0003E5                     ADACCU          equ	997	;# 
 16409   0003E6                     ADCNT           equ	998	;# 
 16410   0003E7                     ADRPT           equ	999	;# 
 16411   0003E8                     ADPREV          equ	1000	;# 
 16412   0003E8                     ADPREVL         equ	1000	;# 
 16413   0003E9                     ADPREVH         equ	1001	;# 
 16414   0003EA                     ADRES           equ	1002	;# 
 16415   0003EA                     ADRESL          equ	1002	;# 
 16416   0003EB                     ADRESH          equ	1003	;# 
 16417   0003EC                     ADPCH           equ	1004	;# 
 16418   0003EE                     ADACQ           equ	1006	;# 
 16419   0003EE                     ADACQL          equ	1006	;# 
 16420   0003EF                     ADACQH          equ	1007	;# 
 16421   0003F0                     ADCAP           equ	1008	;# 
 16422   0003F1                     ADPRE           equ	1009	;# 
 16423   0003F1                     ADPREL          equ	1009	;# 
 16424   0003F2                     ADPREH          equ	1010	;# 
 16425   0003F3                     ADCON0          equ	1011	;# 
 16426   0003F4                     ADCON1          equ	1012	;# 
 16427   0003F5                     ADCON2          equ	1013	;# 
 16428   0003F6                     ADCON3          equ	1014	;# 
 16429   0003F7                     ADSTAT          equ	1015	;# 
 16430   0003F8                     ADREF           equ	1016	;# 
 16431   0003F9                     ADACT           equ	1017	;# 
 16432   0003FA                     ADCLK           equ	1018	;# 
 16433   0003FB                     ADCTX           equ	1019	;# 
 16434   0003FC                     ADCSEL1         equ	1020	;# 
 16435   0003FD                     ADCSEL2         equ	1021	;# 
 16436   0003FE                     ADCSEL3         equ	1022	;# 
 16437   0003FF                     ADCSEL4         equ	1023	;# 
 16438   000400                     ANSELA          equ	1024	;# 
 16439   000401                     WPUA            equ	1025	;# 
 16440   000402                     ODCONA          equ	1026	;# 
 16441   000403                     SLRCONA         equ	1027	;# 
 16442   000404                     INLVLA          equ	1028	;# 
 16443   000405                     IOCAP           equ	1029	;# 
 16444   000406                     IOCAN           equ	1030	;# 
 16445   000407                     IOCAF           equ	1031	;# 
 16446   000408                     ANSELB          equ	1032	;# 
 16447   000409                     WPUB            equ	1033	;# 
 16448   00040A                     ODCONB          equ	1034	;# 
 16449   00040B                     SLRCONB         equ	1035	;# 
 16450   00040C                     INLVLB          equ	1036	;# 
 16451   00040D                     IOCBP           equ	1037	;# 
 16452   00040E                     IOCBN           equ	1038	;# 
 16453   00040F                     IOCBF           equ	1039	;# 
 16454   000410                     ANSELC          equ	1040	;# 
 16455   000411                     WPUC            equ	1041	;# 
 16456   000412                     ODCONC          equ	1042	;# 
 16457   000413                     SLRCONC         equ	1043	;# 
 16458   000414                     INLVLC          equ	1044	;# 
 16459   000415                     IOCCP           equ	1045	;# 
 16460   000416                     IOCCN           equ	1046	;# 
 16461   000417                     IOCCF           equ	1047	;# 
 16462   000421                     WPUE            equ	1057	;# 
 16463   000424                     INLVLE          equ	1060	;# 
 16464   000425                     IOCEP           equ	1061	;# 
 16465   000426                     IOCEN           equ	1062	;# 
 16466   000427                     IOCEF           equ	1063	;# 
 16467   000440                     NCO1ACC         equ	1088	;# 
 16468   000440                     NCO1ACCL        equ	1088	;# 
 16469   000441                     NCO1ACCH        equ	1089	;# 
 16470   000442                     NCO1ACCU        equ	1090	;# 
 16471   000443                     NCO1INC         equ	1091	;# 
 16472   000443                     NCO1INCL        equ	1091	;# 
 16473   000444                     NCO1INCH        equ	1092	;# 
 16474   000445                     NCO1INCU        equ	1093	;# 
 16475   000446                     NCO1CON         equ	1094	;# 
 16476   000447                     NCO1CLK         equ	1095	;# 
 16477   000448                     NCO2ACC         equ	1096	;# 
 16478   000448                     NCO2ACCL        equ	1096	;# 
 16479   000449                     NCO2ACCH        equ	1097	;# 
 16480   00044A                     NCO2ACCU        equ	1098	;# 
 16481   00044B                     NCO2INC         equ	1099	;# 
 16482   00044B                     NCO2INCL        equ	1099	;# 
 16483   00044C                     NCO2INCH        equ	1100	;# 
 16484   00044D                     NCO2INCU        equ	1101	;# 
 16485   00044E                     NCO2CON         equ	1102	;# 
 16486   00044F                     NCO2CLK         equ	1103	;# 
 16487   000450                     NCO3ACC         equ	1104	;# 
 16488   000450                     NCO3ACCL        equ	1104	;# 
 16489   000451                     NCO3ACCH        equ	1105	;# 
 16490   000452                     NCO3ACCU        equ	1106	;# 
 16491   000453                     NCO3INC         equ	1107	;# 
 16492   000453                     NCO3INCL        equ	1107	;# 
 16493   000454                     NCO3INCH        equ	1108	;# 
 16494   000455                     NCO3INCU        equ	1109	;# 
 16495   000456                     NCO3CON         equ	1110	;# 
 16496   000457                     NCO3CLK         equ	1111	;# 
 16497   000458                     FSCMCON         equ	1112	;# 
 16498   000459                     IVTLOCK         equ	1113	;# 
 16499   00045A                     IVTAD           equ	1114	;# 
 16500   00045A                     IVTADL          equ	1114	;# 
 16501   00045B                     IVTADH          equ	1115	;# 
 16502   00045C                     IVTADU          equ	1116	;# 
 16503   00045D                     IVTBASE         equ	1117	;# 
 16504   00045D                     IVTBASEL        equ	1117	;# 
 16505   00045E                     IVTBASEH        equ	1118	;# 
 16506   00045F                     IVTBASEU        equ	1119	;# 
 16507   000460                     PWM1ERS         equ	1120	;# 
 16508   000461                     PWM1CLK         equ	1121	;# 
 16509   000462                     PWM1LDS         equ	1122	;# 
 16510   000463                     PWM1PR          equ	1123	;# 
 16511   000463                     PWM1PRL         equ	1123	;# 
 16512   000464                     PWM1PRH         equ	1124	;# 
 16513   000465                     PWM1CPRE        equ	1125	;# 
 16514   000466                     PWM1PIPOS       equ	1126	;# 
 16515   000467                     PWM1GIR         equ	1127	;# 
 16516   000468                     PWM1GIE         equ	1128	;# 
 16517   000469                     PWM1CON         equ	1129	;# 
 16518   00046A                     PWM1S1CFG       equ	1130	;# 
 16519   00046B                     PWM1S1P1        equ	1131	;# 
 16520   00046B                     PWM1S1P1L       equ	1131	;# 
 16521   00046C                     PWM1S1P1H       equ	1132	;# 
 16522   00046D                     PWM1S1P2        equ	1133	;# 
 16523   00046D                     PWM1S1P2L       equ	1133	;# 
 16524   00046E                     PWM1S1P2H       equ	1134	;# 
 16525   00046F                     PWM2ERS         equ	1135	;# 
 16526   000470                     PWM2CLK         equ	1136	;# 
 16527   000471                     PWM2LDS         equ	1137	;# 
 16528   000472                     PWM2PR          equ	1138	;# 
 16529   000472                     PWM2PRL         equ	1138	;# 
 16530   000473                     PWM2PRH         equ	1139	;# 
 16531   000474                     PWM2CPRE        equ	1140	;# 
 16532   000475                     PWM2PIPOS       equ	1141	;# 
 16533   000476                     PWM2GIR         equ	1142	;# 
 16534   000477                     PWM2GIE         equ	1143	;# 
 16535   000478                     PWM2CON         equ	1144	;# 
 16536   000479                     PWM2S1CFG       equ	1145	;# 
 16537   00047A                     PWM2S1P1        equ	1146	;# 
 16538   00047A                     PWM2S1P1L       equ	1146	;# 
 16539   00047B                     PWM2S1P1H       equ	1147	;# 
 16540   00047C                     PWM2S1P2        equ	1148	;# 
 16541   00047C                     PWM2S1P2L       equ	1148	;# 
 16542   00047D                     PWM2S1P2H       equ	1149	;# 
 16543   00047E                     PWM3ERS         equ	1150	;# 
 16544   00047F                     PWM3CLK         equ	1151	;# 
 16545   000480                     PWM3LDS         equ	1152	;# 
 16546   000481                     PWM3PR          equ	1153	;# 
 16547   000481                     PWM3PRL         equ	1153	;# 
 16548   000482                     PWM3PRH         equ	1154	;# 
 16549   000483                     PWM3CPRE        equ	1155	;# 
 16550   000484                     PWM3PIPOS       equ	1156	;# 
 16551   000485                     PWM3GIR         equ	1157	;# 
 16552   000486                     PWM3GIE         equ	1158	;# 
 16553   000487                     PWM3CON         equ	1159	;# 
 16554   000488                     PWM3S1CFG       equ	1160	;# 
 16555   000489                     PWM3S1P1        equ	1161	;# 
 16556   000489                     PWM3S1P1L       equ	1161	;# 
 16557   00048A                     PWM3S1P1H       equ	1162	;# 
 16558   00048B                     PWM3S1P2        equ	1163	;# 
 16559   00048B                     PWM3S1P2L       equ	1163	;# 
 16560   00048C                     PWM3S1P2H       equ	1164	;# 
 16561   00048D                     PWM4ERS         equ	1165	;# 
 16562   00048E                     PWM4CLK         equ	1166	;# 
 16563   00048F                     PWM4LDS         equ	1167	;# 
 16564   000490                     PWM4PR          equ	1168	;# 
 16565   000490                     PWM4PRL         equ	1168	;# 
 16566   000491                     PWM4PRH         equ	1169	;# 
 16567   000492                     PWM4CPRE        equ	1170	;# 
 16568   000493                     PWM4PIPOS       equ	1171	;# 
 16569   000494                     PWM4GIR         equ	1172	;# 
 16570   000495                     PWM4GIE         equ	1173	;# 
 16571   000496                     PWM4CON         equ	1174	;# 
 16572   000497                     PWM4S1CFG       equ	1175	;# 
 16573   000498                     PWM4S1P1        equ	1176	;# 
 16574   000498                     PWM4S1P1L       equ	1176	;# 
 16575   000499                     PWM4S1P1H       equ	1177	;# 
 16576   00049A                     PWM4S1P2        equ	1178	;# 
 16577   00049A                     PWM4S1P2L       equ	1178	;# 
 16578   00049B                     PWM4S1P2H       equ	1179	;# 
 16579   00049C                     PWMLOAD         equ	1180	;# 
 16580   00049D                     PWMEN           equ	1181	;# 
 16581   00049E                     PIE0            equ	1182	;# 
 16582   00049F                     PIE1            equ	1183	;# 
 16583   0004A0                     PIE2            equ	1184	;# 
 16584   0004A1                     PIE3            equ	1185	;# 
 16585   0004A2                     PIE4            equ	1186	;# 
 16586   0004A3                     PIE5            equ	1187	;# 
 16587   0004A4                     PIE6            equ	1188	;# 
 16588   0004A5                     PIE7            equ	1189	;# 
 16589   0004A6                     PIE8            equ	1190	;# 
 16590   0004A7                     PIE9            equ	1191	;# 
 16591   0004A8                     PIE10           equ	1192	;# 
 16592   0004A9                     PIE11           equ	1193	;# 
 16593   0004AA                     PIE12           equ	1194	;# 
 16594   0004AB                     PIE13           equ	1195	;# 
 16595   0004AC                     PIE14           equ	1196	;# 
 16596   0004AD                     PIE15           equ	1197	;# 
 16597   0004AE                     PIR0            equ	1198	;# 
 16598   0004AF                     PIR1            equ	1199	;# 
 16599   0004B0                     PIR2            equ	1200	;# 
 16600   0004B1                     PIR3            equ	1201	;# 
 16601   0004B2                     PIR4            equ	1202	;# 
 16602   0004B3                     PIR5            equ	1203	;# 
 16603   0004B4                     PIR6            equ	1204	;# 
 16604   0004B5                     PIR7            equ	1205	;# 
 16605   0004B6                     PIR8            equ	1206	;# 
 16606   0004B7                     PIR9            equ	1207	;# 
 16607   0004B8                     PIR10           equ	1208	;# 
 16608   0004B9                     PIR11           equ	1209	;# 
 16609   0004BA                     PIR12           equ	1210	;# 
 16610   0004BB                     PIR13           equ	1211	;# 
 16611   0004BC                     PIR14           equ	1212	;# 
 16612   0004BD                     PIR15           equ	1213	;# 
 16613   0004BE                     LATA            equ	1214	;# 
 16614   0004BF                     LATB            equ	1215	;# 
 16615   0004C0                     LATC            equ	1216	;# 
 16616   0004C6                     TRISA           equ	1222	;# 
 16617   0004C7                     TRISB           equ	1223	;# 
 16618   0004C8                     TRISC           equ	1224	;# 
 16619   0004CA                     TRISE           equ	1226	;# 
 16620   0004CE                     PORTA           equ	1230	;# 
 16621   0004CF                     PORTB           equ	1231	;# 
 16622   0004D0                     PORTC           equ	1232	;# 
 16623   0004D2                     PORTE           equ	1234	;# 
 16624   0004D6                     INTCON0         equ	1238	;# 
 16625   0004D7                     INTCON1         equ	1239	;# 
 16626   0004D8                     STATUS          equ	1240	;# 
 16627   0004D9                     FSR2            equ	1241	;# 
 16628   0004D9                     FSR2L           equ	1241	;# 
 16629   0004DA                     FSR2H           equ	1242	;# 
 16630   0004DB                     PLUSW2          equ	1243	;# 
 16631   0004DC                     PREINC2         equ	1244	;# 
 16632   0004DD                     POSTDEC2        equ	1245	;# 
 16633   0004DE                     POSTINC2        equ	1246	;# 
 16634   0004DF                     INDF2           equ	1247	;# 
 16635   0004E0                     BSR             equ	1248	;# 
 16636   0004E1                     FSR1            equ	1249	;# 
 16637   0004E1                     FSR1L           equ	1249	;# 
 16638   0004E2                     FSR1H           equ	1250	;# 
 16639   0004E3                     PLUSW1          equ	1251	;# 
 16640   0004E4                     PREINC1         equ	1252	;# 
 16641   0004E5                     POSTDEC1        equ	1253	;# 
 16642   0004E6                     POSTINC1        equ	1254	;# 
 16643   0004E7                     INDF1           equ	1255	;# 
 16644   0004E8                     WREG            equ	1256	;# 
 16645   0004E9                     FSR0            equ	1257	;# 
 16646   0004E9                     FSR0L           equ	1257	;# 
 16647   0004EA                     FSR0H           equ	1258	;# 
 16648   0004EB                     PLUSW0          equ	1259	;# 
 16649   0004EC                     PREINC0         equ	1260	;# 
 16650   0004ED                     POSTDEC0        equ	1261	;# 
 16651   0004EE                     POSTINC0        equ	1262	;# 
 16652   0004EF                     INDF0           equ	1263	;# 
 16653   0004F0                     PCON0           equ	1264	;# 
 16654   0004F1                     PCON1           equ	1265	;# 
 16655   0004F2                     CPUDOZE         equ	1266	;# 
 16656   0004F3                     PROD            equ	1267	;# 
 16657   0004F3                     PRODL           equ	1267	;# 
 16658   0004F4                     PRODH           equ	1268	;# 
 16659   0004F5                     TABLAT          equ	1269	;# 
 16660   0004F6                     TBLPTR          equ	1270	;# 
 16661   0004F6                     TBLPTRL         equ	1270	;# 
 16662   0004F7                     TBLPTRH         equ	1271	;# 
 16663   0004F8                     TBLPTRU         equ	1272	;# 
 16664   0004F9                     PCLAT           equ	1273	;# 
 16665   0004F9                     PCL             equ	1273	;# 
 16666   0004FA                     PCLATH          equ	1274	;# 
 16667   0004FB                     PCLATU          equ	1275	;# 
 16668   0004FC                     STKPTR          equ	1276	;# 
 16669   0004FD                     TOS             equ	1277	;# 
 16670   0004FD                     TOSL            equ	1277	;# 
 16671   0004FE                     TOSH            equ	1278	;# 
 16672   0004FF                     TOSU            equ	1279	;# 
 16673   000038                     BOOTREG         equ	56	;# 
 16674   000039                     CLKRCON         equ	57	;# 
 16675   00003A                     CLKRCLK         equ	58	;# 
 16676   000040                     NVMCON0         equ	64	;# 
 16677   000041                     NVMCON1         equ	65	;# 
 16678   000042                     NVMLOCK         equ	66	;# 
 16679   000043                     NVMADR          equ	67	;# 
 16680   000043                     NVMADRL         equ	67	;# 
 16681   000044                     NVMADRH         equ	68	;# 
 16682   000045                     NVMADRU         equ	69	;# 
 16683   000046                     NVMDAT          equ	70	;# 
 16684   000046                     NVMDATL         equ	70	;# 
 16685   000047                     NVMDATH         equ	71	;# 
 16686   000048                     VREGCON         equ	72	;# 
 16687   000049                     BORCON          equ	73	;# 
 16688   00004A                     HLVDCON0        equ	74	;# 
 16689   00004B                     HLVDCON1        equ	75	;# 
 16690   00004C                     ZCDCON          equ	76	;# 
 16691   000060                     PMD0            equ	96	;# 
 16692   000061                     PMD1            equ	97	;# 
 16693   000062                     PMD2            equ	98	;# 
 16694   000063                     PMD3            equ	99	;# 
 16695   000064                     PMD4            equ	100	;# 
 16696   000065                     PMD5            equ	101	;# 
 16697   000066                     PMD6            equ	102	;# 
 16698   000067                     PMD7            equ	103	;# 
 16699   000068                     PMD8            equ	104	;# 
 16700   00006A                     MD1CON0         equ	106	;# 
 16701   00006B                     MD1CON1         equ	107	;# 
 16702   00006C                     MD1SRC          equ	108	;# 
 16703   00006D                     MD1CARL         equ	109	;# 
 16704   00006E                     MD1CARH         equ	110	;# 
 16705   00006F                     CMOUT           equ	111	;# 
 16706   000070                     CM1CON0         equ	112	;# 
 16707   000071                     CM1CON1         equ	113	;# 
 16708   000072                     CM1NCH          equ	114	;# 
 16709   000073                     CM1PCH          equ	115	;# 
 16710   000074                     CM2CON0         equ	116	;# 
 16711   000075                     CM2CON1         equ	117	;# 
 16712   000076                     CM2NCH          equ	118	;# 
 16713   000077                     CM2PCH          equ	119	;# 
 16714   000078                     WDTCON0         equ	120	;# 
 16715   000079                     WDTCON1         equ	121	;# 
 16716   00007A                     WDTPSL          equ	122	;# 
 16717   00007B                     WDTPSH          equ	123	;# 
 16718   00007C                     WDTTMR          equ	124	;# 
 16719   00007D                     DAC1DAT         equ	125	;# 
 16720   00007D                     DAC1DATL        equ	125	;# 
 16721   00007F                     DAC1CON         equ	127	;# 
 16722   000080                     SPI1RXB         equ	128	;# 
 16723   000081                     SPI1TXB         equ	129	;# 
 16724   000082                     SPI1TCNT        equ	130	;# 
 16725   000082                     SPI1TCNTL       equ	130	;# 
 16726   000083                     SPI1TCNTH       equ	131	;# 
 16727   000084                     SPI1CON0        equ	132	;# 
 16728   000085                     SPI1CON1        equ	133	;# 
 16729   000086                     SPI1CON2        equ	134	;# 
 16730   000087                     SPI1STATUS      equ	135	;# 
 16731   000088                     SPI1TWIDTH      equ	136	;# 
 16732   000089                     SPI1BAUD        equ	137	;# 
 16733   00008A                     SPI1INTF        equ	138	;# 
 16734   00008B                     SPI1INTE        equ	139	;# 
 16735   00008C                     SPI1CLK         equ	140	;# 
 16736   00008D                     SPI2RXB         equ	141	;# 
 16737   00008E                     SPI2TXB         equ	142	;# 
 16738   00008F                     SPI2TCNT        equ	143	;# 
 16739   00008F                     SPI2TCNTL       equ	143	;# 
 16740   000090                     SPI2TCNTH       equ	144	;# 
 16741   000091                     SPI2CON0        equ	145	;# 
 16742   000092                     SPI2CON1        equ	146	;# 
 16743   000093                     SPI2CON2        equ	147	;# 
 16744   000094                     SPI2STATUS      equ	148	;# 
 16745   000095                     SPI2TWIDTH      equ	149	;# 
 16746   000096                     SPI2BAUD        equ	150	;# 
 16747   000097                     SPI2INTF        equ	151	;# 
 16748   000098                     SPI2INTE        equ	152	;# 
 16749   000099                     SPI2CLK         equ	153	;# 
 16750   0000AC                     ACTCON          equ	172	;# 
 16751   0000AD                     OSCCON1         equ	173	;# 
 16752   0000AE                     OSCCON2         equ	174	;# 
 16753   0000AF                     OSCCON3         equ	175	;# 
 16754   0000B0                     OSCTUNE         equ	176	;# 
 16755   0000B1                     OSCFRQ          equ	177	;# 
 16756   0000B1                     OSCFREQ         equ	177	;# 
 16757   0000B2                     OSCSTAT         equ	178	;# 
 16758   0000B2                     OSCSTAT1        equ	178	;# 
 16759   0000B3                     OSCEN           equ	179	;# 
 16760   0000B4                     PRLOCK          equ	180	;# 
 16761   0000B5                     SCANPR          equ	181	;# 
 16762   0000B6                     DMA1PR          equ	182	;# 
 16763   0000B7                     DMA2PR          equ	183	;# 
 16764   0000B8                     DMA3PR          equ	184	;# 
 16765   0000B9                     DMA4PR          equ	185	;# 
 16766   0000BA                     DMA5PR          equ	186	;# 
 16767   0000BB                     DMA6PR          equ	187	;# 
 16768   0000BC                     DMA7PR          equ	188	;# 
 16769   0000BD                     DMA8PR          equ	189	;# 
 16770   0000BE                     MAINPR          equ	190	;# 
 16771   0000BF                     ISRPR           equ	191	;# 
 16772   0000D4                     CLCDATA         equ	212	;# 
 16773   0000D5                     CLCSELECT       equ	213	;# 
 16774   0000D6                     CLCnCON         equ	214	;# 
 16775   0000D7                     CLCnPOL         equ	215	;# 
 16776   0000D8                     CLCnSEL0        equ	216	;# 
 16777   0000D9                     CLCnSEL1        equ	217	;# 
 16778   0000DA                     CLCnSEL2        equ	218	;# 
 16779   0000DB                     CLCnSEL3        equ	219	;# 
 16780   0000DC                     CLCnGLS0        equ	220	;# 
 16781   0000DD                     CLCnGLS1        equ	221	;# 
 16782   0000DE                     CLCnGLS2        equ	222	;# 
 16783   0000DF                     CLCnGLS3        equ	223	;# 
 16784   0000E8                     DMASELECT       equ	232	;# 
 16785   0000E9                     DMAnBUF         equ	233	;# 
 16786   0000EA                     DMAnDCNT        equ	234	;# 
 16787   0000EA                     DMAnDCNTL       equ	234	;# 
 16788   0000EB                     DMAnDCNTH       equ	235	;# 
 16789   0000EC                     DMAnDPTR        equ	236	;# 
 16790   0000EC                     DMAnDPTRL       equ	236	;# 
 16791   0000ED                     DMAnDPTRH       equ	237	;# 
 16792   0000EE                     DMAnDSZ         equ	238	;# 
 16793   0000EE                     DMAnDSZL        equ	238	;# 
 16794   0000EF                     DMAnDSZH        equ	239	;# 
 16795   0000F0                     DMAnDSA         equ	240	;# 
 16796   0000F0                     DMAnDSAL        equ	240	;# 
 16797   0000F1                     DMAnDSAH        equ	241	;# 
 16798   0000F2                     DMAnSCNT        equ	242	;# 
 16799   0000F2                     DMAnSCNTL       equ	242	;# 
 16800   0000F3                     DMAnSCNTH       equ	243	;# 
 16801   0000F4                     DMAnSPTR        equ	244	;# 
 16802   0000F4                     DMAnSPTRL       equ	244	;# 
 16803   0000F5                     DMAnSPTRH       equ	245	;# 
 16804   0000F6                     DMAnSPTRU       equ	246	;# 
 16805   0000F7                     DMAnSSZ         equ	247	;# 
 16806   0000F7                     DMAnSSZL        equ	247	;# 
 16807   0000F8                     DMAnSSZH        equ	248	;# 
 16808   0000F9                     DMAnSSA         equ	249	;# 
 16809   0000F9                     DMAnSSAL        equ	249	;# 
 16810   0000FA                     DMAnSSAH        equ	250	;# 
 16811   0000FB                     DMAnSSAU        equ	251	;# 
 16812   0000FC                     DMAnCON0        equ	252	;# 
 16813   0000FD                     DMAnCON1        equ	253	;# 
 16814   0000FE                     DMAnAIRQ        equ	254	;# 
 16815   0000FF                     DMAnSIRQ        equ	255	;# 
 16816   000100                     C1CONL          equ	256	;# 
 16817   000101                     C1CONH          equ	257	;# 
 16818   000102                     C1CONU          equ	258	;# 
 16819   000103                     C1CONT          equ	259	;# 
 16820   000104                     C1NBTCFGL       equ	260	;# 
 16821   000105                     C1NBTCFGH       equ	261	;# 
 16822   000106                     C1NBTCFGU       equ	262	;# 
 16823   000107                     C1NBTCFGT       equ	263	;# 
 16824   000108                     C1DBTCFGL       equ	264	;# 
 16825   000109                     C1DBTCFGH       equ	265	;# 
 16826   00010A                     C1DBTCFGU       equ	266	;# 
 16827   00010B                     C1DBTCFGT       equ	267	;# 
 16828   00010C                     C1TDCL          equ	268	;# 
 16829   00010D                     C1TDCH          equ	269	;# 
 16830   00010E                     C1TDCU          equ	270	;# 
 16831   000110                     C1TBC           equ	272	;# 
 16832   000110                     C1TBCL          equ	272	;# 
 16833   000111                     C1TBCH          equ	273	;# 
 16834   000112                     C1TBCU          equ	274	;# 
 16835   000113                     C1TBCT          equ	275	;# 
 16836   000114                     C1TSCONL        equ	276	;# 
 16837   000115                     C1TSCONH        equ	277	;# 
 16838   000116                     C1TSCONU        equ	278	;# 
 16839   000117                     C1TSCONT        equ	279	;# 
 16840   000118                     C1VECL          equ	280	;# 
 16841   000119                     C1VECH          equ	281	;# 
 16842   00011A                     C1VECU          equ	282	;# 
 16843   00011B                     C1VECT          equ	283	;# 
 16844   00011C                     C1INTL          equ	284	;# 
 16845   00011D                     C1INTH          equ	285	;# 
 16846   00011E                     C1INTU          equ	286	;# 
 16847   00011F                     C1INTT          equ	287	;# 
 16848   000120                     C1RXIF          equ	288	;# 
 16849   000120                     C1RXIFL         equ	288	;# 
 16850   000121                     C1RXIFH         equ	289	;# 
 16851   000122                     C1RXIFU         equ	290	;# 
 16852   000123                     C1RXIFT         equ	291	;# 
 16853   000124                     C1TXIF          equ	292	;# 
 16854   000124                     C1TXIFL         equ	292	;# 
 16855   000125                     C1TXIFH         equ	293	;# 
 16856   000126                     C1TXIFU         equ	294	;# 
 16857   000127                     C1TXIFT         equ	295	;# 
 16858   000128                     C1RXOVIF        equ	296	;# 
 16859   000128                     C1RXOVIFL       equ	296	;# 
 16860   000129                     C1RXOVIFH       equ	297	;# 
 16861   00012A                     C1RXOVIFU       equ	298	;# 
 16862   00012B                     C1RXOVIFT       equ	299	;# 
 16863   00012C                     C1TXATIF        equ	300	;# 
 16864   00012C                     C1TXATIFL       equ	300	;# 
 16865   00012D                     C1TXATIFH       equ	301	;# 
 16866   00012E                     C1TXATIFU       equ	302	;# 
 16867   00012F                     C1TXATIFT       equ	303	;# 
 16868   000130                     C1TXREQ         equ	304	;# 
 16869   000130                     C1TXREQL        equ	304	;# 
 16870   000131                     C1TXREQH        equ	305	;# 
 16871   000132                     C1TXREQU        equ	306	;# 
 16872   000133                     C1TXREQT        equ	307	;# 
 16873   000134                     C1TRECL         equ	308	;# 
 16874   000135                     C1TRECH         equ	309	;# 
 16875   000136                     C1TRECU         equ	310	;# 
 16876   000137                     C1TRECT         equ	311	;# 
 16877   000138                     C1BDIAG0L       equ	312	;# 
 16878   000139                     C1BDIAG0H       equ	313	;# 
 16879   00013C                     C1BDIAG1L       equ	316	;# 
 16880   00013D                     C1BDIAG1H       equ	317	;# 
 16881   00013E                     C1BDIAG1U       equ	318	;# 
 16882   00013F                     C1BDIAG1T       equ	319	;# 
 16883   000140                     C1TEFCONL       equ	320	;# 
 16884   000141                     C1TEFCONH       equ	321	;# 
 16885   000142                     C1TEFCONU       equ	322	;# 
 16886   000143                     C1TEFCONT       equ	323	;# 
 16887   000144                     C1TEFSTAL       equ	324	;# 
 16888   000145                     C1TEFSTAH       equ	325	;# 
 16889   000146                     C1TEFSTAU       equ	326	;# 
 16890   000147                     C1TEFSTAT       equ	327	;# 
 16891   000148                     C1TEFUA         equ	328	;# 
 16892   000148                     C1TEFUAL        equ	328	;# 
 16893   000149                     C1TEFUAH        equ	329	;# 
 16894   00014A                     C1TEFUAU        equ	330	;# 
 16895   00014B                     C1TEFUAT        equ	331	;# 
 16896   00014C                     C1FIFOBA        equ	332	;# 
 16897   00014C                     C1FIFOBAL       equ	332	;# 
 16898   00014D                     C1FIFOBAH       equ	333	;# 
 16899   00014E                     C1FIFOBAU       equ	334	;# 
 16900   00014F                     C1FIFOBAT       equ	335	;# 
 16901   000150                     C1TXQCONL       equ	336	;# 
 16902   000151                     C1TXQCONH       equ	337	;# 
 16903   000152                     C1TXQCONU       equ	338	;# 
 16904   000153                     C1TXQCONT       equ	339	;# 
 16905   000154                     C1TXQSTAL       equ	340	;# 
 16906   000155                     C1TXQSTAH       equ	341	;# 
 16907   000156                     C1TXQSTAU       equ	342	;# 
 16908   000157                     C1TXQSTAT       equ	343	;# 
 16909   000158                     C1TXQUA         equ	344	;# 
 16910   000158                     C1TXQUAL        equ	344	;# 
 16911   000159                     C1TXQUAH        equ	345	;# 
 16912   00015A                     C1TXQUAU        equ	346	;# 
 16913   00015B                     C1TXQUAT        equ	347	;# 
 16914   00015C                     C1FIFOCON1      equ	348	;# 
 16915   00015C                     C1FIFOCON1L     equ	348	;# 
 16916   00015D                     C1FIFOCON1H     equ	349	;# 
 16917   00015E                     C1FIFOCON1U     equ	350	;# 
 16918   00015F                     C1FIFOCON1T     equ	351	;# 
 16919   000160                     C1FIFOSTA1      equ	352	;# 
 16920   000160                     C1FIFOSTA1L     equ	352	;# 
 16921   000161                     C1FIFOSTA1H     equ	353	;# 
 16922   000162                     C1FIFOSTA1U     equ	354	;# 
 16923   000163                     C1FIFOSTA1T     equ	355	;# 
 16924   000164                     C1FIFOUA1       equ	356	;# 
 16925   000164                     C1FIFOUA1L      equ	356	;# 
 16926   000165                     C1FIFOUA1H      equ	357	;# 
 16927   000166                     C1FIFOUA1U      equ	358	;# 
 16928   000167                     C1FIFOUA1T      equ	359	;# 
 16929   000168                     C1FIFOCON2      equ	360	;# 
 16930   000168                     C1FIFOCON2L     equ	360	;# 
 16931   000169                     C1FIFOCON2H     equ	361	;# 
 16932   00016A                     C1FIFOCON2U     equ	362	;# 
 16933   00016B                     C1FIFOCON2T     equ	363	;# 
 16934   00016C                     C1FIFOSTA2      equ	364	;# 
 16935   00016C                     C1FIFOSTA2L     equ	364	;# 
 16936   00016D                     C1FIFOSTA2H     equ	365	;# 
 16937   00016E                     C1FIFOSTA2U     equ	366	;# 
 16938   00016F                     C1FIFOSTA2T     equ	367	;# 
 16939   000170                     C1FIFOUA2       equ	368	;# 
 16940   000170                     C1FIFOUA2L      equ	368	;# 
 16941   000171                     C1FIFOUA2H      equ	369	;# 
 16942   000172                     C1FIFOUA2U      equ	370	;# 
 16943   000173                     C1FIFOUA2T      equ	371	;# 
 16944   000174                     C1FIFOCON3      equ	372	;# 
 16945   000174                     C1FIFOCON3L     equ	372	;# 
 16946   000175                     C1FIFOCON3H     equ	373	;# 
 16947   000176                     C1FIFOCON3U     equ	374	;# 
 16948   000177                     C1FIFOCON3T     equ	375	;# 
 16949   000178                     C1FIFOSTA3      equ	376	;# 
 16950   000178                     C1FIFOSTA3L     equ	376	;# 
 16951   000179                     C1FIFOSTA3H     equ	377	;# 
 16952   00017A                     C1FIFOSTA3U     equ	378	;# 
 16953   00017B                     C1FIFOSTA3T     equ	379	;# 
 16954   00017C                     C1FIFOUA3       equ	380	;# 
 16955   00017C                     C1FIFOUA3L      equ	380	;# 
 16956   00017D                     C1FIFOUA3H      equ	381	;# 
 16957   00017E                     C1FIFOUA3U      equ	382	;# 
 16958   00017F                     C1FIFOUA3T      equ	383	;# 
 16959   000180                     C1FLTCON0L      equ	384	;# 
 16960   000181                     C1FLTCON0H      equ	385	;# 
 16961   000182                     C1FLTCON0U      equ	386	;# 
 16962   000183                     C1FLTCON0T      equ	387	;# 
 16963   000184                     C1FLTCON1L      equ	388	;# 
 16964   000185                     C1FLTCON1H      equ	389	;# 
 16965   000186                     C1FLTCON1U      equ	390	;# 
 16966   000187                     C1FLTCON1T      equ	391	;# 
 16967   000188                     C1FLTCON2L      equ	392	;# 
 16968   000189                     C1FLTCON2H      equ	393	;# 
 16969   00018A                     C1FLTCON2U      equ	394	;# 
 16970   00018B                     C1FLTCON2T      equ	395	;# 
 16971   00018C                     C1FLTOBJ0       equ	396	;# 
 16972   00018C                     C1FLTOBJ0L      equ	396	;# 
 16973   00018D                     C1FLTOBJ0H      equ	397	;# 
 16974   00018E                     C1FLTOBJ0U      equ	398	;# 
 16975   00018F                     C1FLTOBJ0T      equ	399	;# 
 16976   000190                     C1MASK0         equ	400	;# 
 16977   000190                     C1MASK0L        equ	400	;# 
 16978   000191                     C1MASK0H        equ	401	;# 
 16979   000192                     C1MASK0U        equ	402	;# 
 16980   000193                     C1MASK0T        equ	403	;# 
 16981   000194                     C1FLTOBJ1       equ	404	;# 
 16982   000194                     C1FLTOBJ1L      equ	404	;# 
 16983   000195                     C1FLTOBJ1H      equ	405	;# 
 16984   000196                     C1FLTOBJ1U      equ	406	;# 
 16985   000197                     C1FLTOBJ1T      equ	407	;# 
 16986   000198                     C1MASK1         equ	408	;# 
 16987   000198                     C1MASK1L        equ	408	;# 
 16988   000199                     C1MASK1H        equ	409	;# 
 16989   00019A                     C1MASK1U        equ	410	;# 
 16990   00019B                     C1MASK1T        equ	411	;# 
 16991   00019C                     C1FLTOBJ2       equ	412	;# 
 16992   00019C                     C1FLTOBJ2L      equ	412	;# 
 16993   00019D                     C1FLTOBJ2H      equ	413	;# 
 16994   00019E                     C1FLTOBJ2U      equ	414	;# 
 16995   00019F                     C1FLTOBJ2T      equ	415	;# 
 16996   0001A0                     C1MASK2         equ	416	;# 
 16997   0001A0                     C1MASK2L        equ	416	;# 
 16998   0001A1                     C1MASK2H        equ	417	;# 
 16999   0001A2                     C1MASK2U        equ	418	;# 
 17000   0001A3                     C1MASK2T        equ	419	;# 
 17001   0001A4                     C1FLTOBJ3       equ	420	;# 
 17002   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17003   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17004   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17005   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17006   0001A8                     C1MASK3         equ	424	;# 
 17007   0001A8                     C1MASK3L        equ	424	;# 
 17008   0001A9                     C1MASK3H        equ	425	;# 
 17009   0001AA                     C1MASK3U        equ	426	;# 
 17010   0001AB                     C1MASK3T        equ	427	;# 
 17011   0001AC                     C1FLTOBJ4       equ	428	;# 
 17012   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17013   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17014   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17015   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17016   0001B0                     C1MASK4         equ	432	;# 
 17017   0001B0                     C1MASK4L        equ	432	;# 
 17018   0001B1                     C1MASK4H        equ	433	;# 
 17019   0001B2                     C1MASK4U        equ	434	;# 
 17020   0001B3                     C1MASK4T        equ	435	;# 
 17021   0001B4                     C1FLTOBJ5       equ	436	;# 
 17022   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17023   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17024   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17025   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17026   0001B8                     C1MASK5         equ	440	;# 
 17027   0001B8                     C1MASK5L        equ	440	;# 
 17028   0001B9                     C1MASK5H        equ	441	;# 
 17029   0001BA                     C1MASK5U        equ	442	;# 
 17030   0001BB                     C1MASK5T        equ	443	;# 
 17031   0001BC                     C1FLTOBJ6       equ	444	;# 
 17032   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17033   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17034   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17035   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17036   0001C0                     C1MASK6         equ	448	;# 
 17037   0001C0                     C1MASK6L        equ	448	;# 
 17038   0001C1                     C1MASK6H        equ	449	;# 
 17039   0001C2                     C1MASK6U        equ	450	;# 
 17040   0001C3                     C1MASK6T        equ	451	;# 
 17041   0001C4                     C1FLTOBJ7       equ	452	;# 
 17042   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17043   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17044   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17045   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17046   0001C8                     C1MASK7         equ	456	;# 
 17047   0001C8                     C1MASK7L        equ	456	;# 
 17048   0001C9                     C1MASK7H        equ	457	;# 
 17049   0001CA                     C1MASK7U        equ	458	;# 
 17050   0001CB                     C1MASK7T        equ	459	;# 
 17051   0001CC                     C1FLTOBJ8       equ	460	;# 
 17052   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17053   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17054   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17055   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17056   0001D0                     C1MASK8         equ	464	;# 
 17057   0001D0                     C1MASK8L        equ	464	;# 
 17058   0001D1                     C1MASK8H        equ	465	;# 
 17059   0001D2                     C1MASK8U        equ	466	;# 
 17060   0001D3                     C1MASK8T        equ	467	;# 
 17061   0001D4                     C1FLTOBJ9       equ	468	;# 
 17062   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17063   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17064   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17065   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17066   0001D8                     C1MASK9         equ	472	;# 
 17067   0001D8                     C1MASK9L        equ	472	;# 
 17068   0001D9                     C1MASK9H        equ	473	;# 
 17069   0001DA                     C1MASK9U        equ	474	;# 
 17070   0001DB                     C1MASK9T        equ	475	;# 
 17071   0001DC                     C1FLTOBJ10      equ	476	;# 
 17072   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17073   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17074   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17075   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17076   0001E0                     C1MASK10        equ	480	;# 
 17077   0001E0                     C1MASK10L       equ	480	;# 
 17078   0001E1                     C1MASK10H       equ	481	;# 
 17079   0001E2                     C1MASK10U       equ	482	;# 
 17080   0001E3                     C1MASK10T       equ	483	;# 
 17081   0001E4                     C1FLTOBJ11      equ	484	;# 
 17082   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17083   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17084   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17085   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17086   0001E8                     C1MASK11        equ	488	;# 
 17087   0001E8                     C1MASK11L       equ	488	;# 
 17088   0001E9                     C1MASK11H       equ	489	;# 
 17089   0001EA                     C1MASK11U       equ	490	;# 
 17090   0001EB                     C1MASK11T       equ	491	;# 
 17091   000200                     PPSLOCK         equ	512	;# 
 17092   000201                     RA0PPS          equ	513	;# 
 17093   000202                     RA1PPS          equ	514	;# 
 17094   000203                     RA2PPS          equ	515	;# 
 17095   000204                     RA3PPS          equ	516	;# 
 17096   000205                     RA4PPS          equ	517	;# 
 17097   000206                     RA5PPS          equ	518	;# 
 17098   000207                     RA6PPS          equ	519	;# 
 17099   000208                     RA7PPS          equ	520	;# 
 17100   000209                     RB0PPS          equ	521	;# 
 17101   00020A                     RB1PPS          equ	522	;# 
 17102   00020B                     RB2PPS          equ	523	;# 
 17103   00020C                     RB3PPS          equ	524	;# 
 17104   00020D                     RB4PPS          equ	525	;# 
 17105   00020E                     RB5PPS          equ	526	;# 
 17106   00020F                     RB6PPS          equ	527	;# 
 17107   000210                     RB7PPS          equ	528	;# 
 17108   000211                     RC0PPS          equ	529	;# 
 17109   000212                     RC1PPS          equ	530	;# 
 17110   000213                     RC2PPS          equ	531	;# 
 17111   000214                     RC3PPS          equ	532	;# 
 17112   000215                     RC4PPS          equ	533	;# 
 17113   000216                     RC5PPS          equ	534	;# 
 17114   000217                     RC6PPS          equ	535	;# 
 17115   000218                     RC7PPS          equ	536	;# 
 17116   00023D                     CANRXPPS        equ	573	;# 
 17117   00023E                     INT0PPS         equ	574	;# 
 17118   00023F                     INT1PPS         equ	575	;# 
 17119   000240                     INT2PPS         equ	576	;# 
 17120   000241                     T0CKIPPS        equ	577	;# 
 17121   000242                     T1CKIPPS        equ	578	;# 
 17122   000243                     T1GPPS          equ	579	;# 
 17123   000244                     T3CKIPPS        equ	580	;# 
 17124   000245                     T3GPPS          equ	581	;# 
 17125   000246                     T5CKIPPS        equ	582	;# 
 17126   000247                     T5GPPS          equ	583	;# 
 17127   000248                     T2INPPS         equ	584	;# 
 17128   000249                     T4INPPS         equ	585	;# 
 17129   00024A                     T6INPPS         equ	586	;# 
 17130   00024B                     TUIN0PPS        equ	587	;# 
 17131   00024C                     TUIN1PPS        equ	588	;# 
 17132   00024F                     CCP1PPS         equ	591	;# 
 17133   000250                     CCP2PPS         equ	592	;# 
 17134   000251                     CCP3PPS         equ	593	;# 
 17135   000253                     PWM1ERSPPS      equ	595	;# 
 17136   000254                     PWM2ERSPPS      equ	596	;# 
 17137   000255                     PWM3ERSPPS      equ	597	;# 
 17138   000256                     PWM4ERSPPS      equ	598	;# 
 17139   000257                     PWMIN0PPS       equ	599	;# 
 17140   000258                     PWMIN1PPS       equ	600	;# 
 17141   000259                     SMT1WINPPS      equ	601	;# 
 17142   00025A                     SMT1SIGPPS      equ	602	;# 
 17143   00025B                     CWG1PPS         equ	603	;# 
 17144   00025B                     CWG1INPPS       equ	603	;# 
 17145   00025C                     CWG2PPS         equ	604	;# 
 17146   00025C                     CWG2INPPS       equ	604	;# 
 17147   00025D                     CWG3PPS         equ	605	;# 
 17148   00025D                     CWG3INPPS       equ	605	;# 
 17149   00025E                     MD1CARLPPS      equ	606	;# 
 17150   00025E                     MDCARLPPS       equ	606	;# 
 17151   00025F                     MD1CARHPPS      equ	607	;# 
 17152   00025F                     MDCARHPPS       equ	607	;# 
 17153   000260                     MD1SRCPPS       equ	608	;# 
 17154   000260                     MDSRCPPS        equ	608	;# 
 17155   000261                     CLCIN0PPS       equ	609	;# 
 17156   000262                     CLCIN1PPS       equ	610	;# 
 17157   000263                     CLCIN2PPS       equ	611	;# 
 17158   000264                     CLCIN3PPS       equ	612	;# 
 17159   000265                     CLCIN4PPS       equ	613	;# 
 17160   000266                     CLCIN5PPS       equ	614	;# 
 17161   000267                     CLCIN6PPS       equ	615	;# 
 17162   000268                     CLCIN7PPS       equ	616	;# 
 17163   000269                     ADACTPPS        equ	617	;# 
 17164   00026A                     SPI1SCKPPS      equ	618	;# 
 17165   00026B                     SPI1SDIPPS      equ	619	;# 
 17166   00026C                     SPI1SSPPS       equ	620	;# 
 17167   00026D                     SPI2SCKPPS      equ	621	;# 
 17168   00026E                     SPI2SDIPPS      equ	622	;# 
 17169   00026F                     SPI2SSPPS       equ	623	;# 
 17170   000270                     I2C1SDAPPS      equ	624	;# 
 17171   000271                     I2C1SCLPPS      equ	625	;# 
 17172   000272                     U1RXPPS         equ	626	;# 
 17173   000273                     U1CTSPPS        equ	627	;# 
 17174   000274                     U2RXPPS         equ	628	;# 
 17175   000275                     U2CTSPPS        equ	629	;# 
 17176   000276                     U3RXPPS         equ	630	;# 
 17177   000277                     U3CTSPPS        equ	631	;# 
 17178   000278                     U4RXPPS         equ	632	;# 
 17179   000279                     U4CTSPPS        equ	633	;# 
 17180   00027A                     U5RXPPS         equ	634	;# 
 17181   00027B                     U5CTSPPS        equ	635	;# 
 17182   000286                     RC4I2C          equ	646	;# 
 17183   000287                     RC3I2C          equ	647	;# 
 17184   000288                     RB2I2C          equ	648	;# 
 17185   000289                     RB1I2C          equ	649	;# 
 17186   00028A                     I2C1RXB         equ	650	;# 
 17187   00028B                     I2C1TXB         equ	651	;# 
 17188   00028C                     I2C1CNTL        equ	652	;# 
 17189   00028D                     I2C1CNTH        equ	653	;# 
 17190   00028E                     I2C1ADB0        equ	654	;# 
 17191   00028F                     I2C1ADB1        equ	655	;# 
 17192   000290                     I2C1ADR0        equ	656	;# 
 17193   000291                     I2C1ADR1        equ	657	;# 
 17194   000292                     I2C1ADR2        equ	658	;# 
 17195   000293                     I2C1ADR3        equ	659	;# 
 17196   000294                     I2C1CON0        equ	660	;# 
 17197   000295                     I2C1CON1        equ	661	;# 
 17198   000296                     I2C1CON2        equ	662	;# 
 17199   000297                     I2C1ERR         equ	663	;# 
 17200   000298                     I2C1STAT0       equ	664	;# 
 17201   000299                     I2C1STAT1       equ	665	;# 
 17202   00029A                     I2C1PIR         equ	666	;# 
 17203   00029B                     I2C1PIE         equ	667	;# 
 17204   00029C                     I2C1BTO         equ	668	;# 
 17205   00029D                     I2C1BAUD        equ	669	;# 
 17206   00029E                     I2C1CLK         equ	670	;# 
 17207   00029F                     I2C1BTOC        equ	671	;# 
 17208   0002A1                     U1RXB           equ	673	;# 
 17209   0002A1                     U1RXBL          equ	673	;# 
 17210   0002A2                     U1RXCHK         equ	674	;# 
 17211   0002A3                     U1TXB           equ	675	;# 
 17212   0002A3                     U1TXBL          equ	675	;# 
 17213   0002A4                     U1TXCHK         equ	676	;# 
 17214   0002A5                     U1P1            equ	677	;# 
 17215   0002A5                     U1P1L           equ	677	;# 
 17216   0002A6                     U1P1H           equ	678	;# 
 17217   0002A7                     U1P2            equ	679	;# 
 17218   0002A7                     U1P2L           equ	679	;# 
 17219   0002A8                     U1P2H           equ	680	;# 
 17220   0002A9                     U1P3            equ	681	;# 
 17221   0002A9                     U1P3L           equ	681	;# 
 17222   0002AA                     U1P3H           equ	682	;# 
 17223   0002AB                     U1CON0          equ	683	;# 
 17224   0002AC                     U1CON1          equ	684	;# 
 17225   0002AD                     U1CON2          equ	685	;# 
 17226   0002AE                     U1BRG           equ	686	;# 
 17227   0002AE                     U1BRGL          equ	686	;# 
 17228   0002AF                     U1BRGH          equ	687	;# 
 17229   0002B0                     U1FIFO          equ	688	;# 
 17230   0002B1                     U1UIR           equ	689	;# 
 17231   0002B2                     U1ERRIR         equ	690	;# 
 17232   0002B3                     U1ERRIE         equ	691	;# 
 17233   0002B4                     U2RXB           equ	692	;# 
 17234   0002B4                     U2RXBL          equ	692	;# 
 17235   0002B5                     U2RXCHK         equ	693	;# 
 17236   0002B6                     U2TXB           equ	694	;# 
 17237   0002B6                     U2TXBL          equ	694	;# 
 17238   0002B7                     U2TXCHK         equ	695	;# 
 17239   0002B8                     U2P1            equ	696	;# 
 17240   0002B8                     U2P1L           equ	696	;# 
 17241   0002B9                     U2P1H           equ	697	;# 
 17242   0002BA                     U2P2            equ	698	;# 
 17243   0002BA                     U2P2L           equ	698	;# 
 17244   0002BB                     U2P2H           equ	699	;# 
 17245   0002BC                     U2P3            equ	700	;# 
 17246   0002BC                     U2P3L           equ	700	;# 
 17247   0002BD                     U2P3H           equ	701	;# 
 17248   0002BE                     U2CON0          equ	702	;# 
 17249   0002BF                     U2CON1          equ	703	;# 
 17250   0002C0                     U2CON2          equ	704	;# 
 17251   0002C1                     U2BRG           equ	705	;# 
 17252   0002C1                     U2BRGL          equ	705	;# 
 17253   0002C2                     U2BRGH          equ	706	;# 
 17254   0002C3                     U2FIFO          equ	707	;# 
 17255   0002C4                     U2UIR           equ	708	;# 
 17256   0002C5                     U2ERRIR         equ	709	;# 
 17257   0002C6                     U2ERRIE         equ	710	;# 
 17258   0002C7                     U3RXB           equ	711	;# 
 17259   0002C7                     U3RXBL          equ	711	;# 
 17260   0002C9                     U3TXB           equ	713	;# 
 17261   0002C9                     U3TXBL          equ	713	;# 
 17262   0002CB                     U3P1            equ	715	;# 
 17263   0002CB                     U3P1L           equ	715	;# 
 17264   0002CD                     U3P2            equ	717	;# 
 17265   0002CD                     U3P2L           equ	717	;# 
 17266   0002CF                     U3P3            equ	719	;# 
 17267   0002CF                     U3P3L           equ	719	;# 
 17268   0002D1                     U3CON0          equ	721	;# 
 17269   0002D2                     U3CON1          equ	722	;# 
 17270   0002D3                     U3CON2          equ	723	;# 
 17271   0002D4                     U3BRG           equ	724	;# 
 17272   0002D4                     U3BRGL          equ	724	;# 
 17273   0002D5                     U3BRGH          equ	725	;# 
 17274   0002D6                     U3FIFO          equ	726	;# 
 17275   0002D7                     U3UIR           equ	727	;# 
 17276   0002D8                     U3ERRIR         equ	728	;# 
 17277   0002D9                     U3ERRIE         equ	729	;# 
 17278   0002DA                     U4RXB           equ	730	;# 
 17279   0002DA                     U4RXBL          equ	730	;# 
 17280   0002DC                     U4TXB           equ	732	;# 
 17281   0002DC                     U4TXBL          equ	732	;# 
 17282   0002DE                     U4P1            equ	734	;# 
 17283   0002DE                     U4P1L           equ	734	;# 
 17284   0002E0                     U4P2            equ	736	;# 
 17285   0002E0                     U4P2L           equ	736	;# 
 17286   0002E2                     U4P3            equ	738	;# 
 17287   0002E2                     U4P3L           equ	738	;# 
 17288   0002E4                     U4CON0          equ	740	;# 
 17289   0002E5                     U4CON1          equ	741	;# 
 17290   0002E6                     U4CON2          equ	742	;# 
 17291   0002E7                     U4BRG           equ	743	;# 
 17292   0002E7                     U4BRGL          equ	743	;# 
 17293   0002E8                     U4BRGH          equ	744	;# 
 17294   0002E9                     U4FIFO          equ	745	;# 
 17295   0002EA                     U4UIR           equ	746	;# 
 17296   0002EB                     U4ERRIR         equ	747	;# 
 17297   0002EC                     U4ERRIE         equ	748	;# 
 17298   0002ED                     U5RXB           equ	749	;# 
 17299   0002ED                     U5RXBL          equ	749	;# 
 17300   0002EF                     U5TXB           equ	751	;# 
 17301   0002EF                     U5TXBL          equ	751	;# 
 17302   0002F1                     U5P1            equ	753	;# 
 17303   0002F1                     U5P1L           equ	753	;# 
 17304   0002F3                     U5P2            equ	755	;# 
 17305   0002F3                     U5P2L           equ	755	;# 
 17306   0002F5                     U5P3            equ	757	;# 
 17307   0002F5                     U5P3L           equ	757	;# 
 17308   0002F7                     U5CON0          equ	759	;# 
 17309   0002F8                     U5CON1          equ	760	;# 
 17310   0002F9                     U5CON2          equ	761	;# 
 17311   0002FA                     U5BRG           equ	762	;# 
 17312   0002FA                     U5BRGL          equ	762	;# 
 17313   0002FB                     U5BRGH          equ	763	;# 
 17314   0002FC                     U5FIFO          equ	764	;# 
 17315   0002FD                     U5UIR           equ	765	;# 
 17316   0002FE                     U5ERRIR         equ	766	;# 
 17317   0002FF                     U5ERRIE         equ	767	;# 
 17318   000300                     SMT1TMR         equ	768	;# 
 17319   000300                     SMT1TMRL        equ	768	;# 
 17320   000301                     SMT1TMRH        equ	769	;# 
 17321   000302                     SMT1TMRU        equ	770	;# 
 17322   000303                     SMT1CPR         equ	771	;# 
 17323   000303                     SMT1CPRL        equ	771	;# 
 17324   000304                     SMT1CPRH        equ	772	;# 
 17325   000305                     SMT1CPRU        equ	773	;# 
 17326   000306                     SMT1CPW         equ	774	;# 
 17327   000306                     SMT1CPWL        equ	774	;# 
 17328   000307                     SMT1CPWH        equ	775	;# 
 17329   000308                     SMT1CPWU        equ	776	;# 
 17330   000309                     SMT1PR          equ	777	;# 
 17331   000309                     SMT1PRL         equ	777	;# 
 17332   00030A                     SMT1PRH         equ	778	;# 
 17333   00030B                     SMT1PRU         equ	779	;# 
 17334   00030C                     SMT1CON0        equ	780	;# 
 17335   00030D                     SMT1CON1        equ	781	;# 
 17336   00030E                     SMT1STAT        equ	782	;# 
 17337   00030F                     SMT1CLK         equ	783	;# 
 17338   000310                     SMT1SIG         equ	784	;# 
 17339   000311                     SMT1WIN         equ	785	;# 
 17340   000318                     TMR0L           equ	792	;# 
 17341   000318                     TMR0            equ	792	;# 
 17342   000319                     TMR0H           equ	793	;# 
 17343   000319                     PR0             equ	793	;# 
 17344   00031A                     T0CON0          equ	794	;# 
 17345   00031B                     T0CON1          equ	795	;# 
 17346   00031C                     TMR1            equ	796	;# 
 17347   00031C                     TMR1L           equ	796	;# 
 17348   00031D                     TMR1H           equ	797	;# 
 17349   00031E                     T1CON           equ	798	;# 
 17350   00031E                     TMR1CON         equ	798	;# 
 17351   00031F                     T1GCON          equ	799	;# 
 17352   00031F                     TMR1GCON        equ	799	;# 
 17353   000320                     T1GATE          equ	800	;# 
 17354   000320                     TMR1GATE        equ	800	;# 
 17355   000321                     T1CLK           equ	801	;# 
 17356   000321                     TMR1CLK         equ	801	;# 
 17357   000321                     PR1             equ	801	;# 
 17358   000322                     T2TMR           equ	802	;# 
 17359   000322                     TMR2            equ	802	;# 
 17360   000323                     T2PR            equ	803	;# 
 17361   000323                     PR2             equ	803	;# 
 17362   000324                     T2CON           equ	804	;# 
 17363   000325                     T2HLT           equ	805	;# 
 17364   000326                     T2CLKCON        equ	806	;# 
 17365   000326                     T2CLK           equ	806	;# 
 17366   000327                     T2RST           equ	807	;# 
 17367   000328                     TMR3            equ	808	;# 
 17368   000328                     TMR3L           equ	808	;# 
 17369   000329                     TMR3H           equ	809	;# 
 17370   00032A                     T3CON           equ	810	;# 
 17371   00032A                     TMR3CON         equ	810	;# 
 17372   00032B                     T3GCON          equ	811	;# 
 17373   00032B                     TMR3GCON        equ	811	;# 
 17374   00032C                     T3GATE          equ	812	;# 
 17375   00032C                     TMR3GATE        equ	812	;# 
 17376   00032D                     T3CLK           equ	813	;# 
 17377   00032D                     TMR3CLK         equ	813	;# 
 17378   00032D                     PR3             equ	813	;# 
 17379   00032E                     T4TMR           equ	814	;# 
 17380   00032E                     TMR4            equ	814	;# 
 17381   00032F                     T4PR            equ	815	;# 
 17382   00032F                     PR4             equ	815	;# 
 17383   000330                     T4CON           equ	816	;# 
 17384   000331                     T4HLT           equ	817	;# 
 17385   000332                     T4CLKCON        equ	818	;# 
 17386   000332                     T4CLK           equ	818	;# 
 17387   000333                     T4RST           equ	819	;# 
 17388   000334                     TMR5            equ	820	;# 
 17389   000334                     TMR5L           equ	820	;# 
 17390   000335                     TMR5H           equ	821	;# 
 17391   000336                     T5CON           equ	822	;# 
 17392   000336                     TMR5CON         equ	822	;# 
 17393   000337                     T5GCON          equ	823	;# 
 17394   000337                     TMR5GCON        equ	823	;# 
 17395   000338                     T5GATE          equ	824	;# 
 17396   000338                     TMR5GATE        equ	824	;# 
 17397   000339                     T5CLK           equ	825	;# 
 17398   000339                     TMR5CLK         equ	825	;# 
 17399   000339                     PR5             equ	825	;# 
 17400   00033A                     T6TMR           equ	826	;# 
 17401   00033A                     TMR6            equ	826	;# 
 17402   00033B                     T6PR            equ	827	;# 
 17403   00033B                     PR6             equ	827	;# 
 17404   00033C                     T6CON           equ	828	;# 
 17405   00033D                     T6HLT           equ	829	;# 
 17406   00033E                     T6CLKCON        equ	830	;# 
 17407   00033E                     T6CLK           equ	830	;# 
 17408   00033F                     T6RST           equ	831	;# 
 17409   000340                     CCPR1           equ	832	;# 
 17410   000340                     CCPR1L          equ	832	;# 
 17411   000341                     CCPR1H          equ	833	;# 
 17412   000342                     CCP1CON         equ	834	;# 
 17413   000343                     CCP1CAP         equ	835	;# 
 17414   000344                     CCPR2           equ	836	;# 
 17415   000344                     CCPR2L          equ	836	;# 
 17416   000345                     CCPR2H          equ	837	;# 
 17417   000346                     CCP2CON         equ	838	;# 
 17418   000347                     CCP2CAP         equ	839	;# 
 17419   000348                     CCPR3           equ	840	;# 
 17420   000348                     CCPR3L          equ	840	;# 
 17421   000349                     CCPR3H          equ	841	;# 
 17422   00034A                     CCP3CON         equ	842	;# 
 17423   00034B                     CCP3CAP         equ	843	;# 
 17424   00034C                     CCPTMRS0        equ	844	;# 
 17425   00034F                     CRCDATA         equ	847	;# 
 17426   00034F                     CRCDATAL        equ	847	;# 
 17427   000350                     CRCDATAH        equ	848	;# 
 17428   000351                     CRCDATAU        equ	849	;# 
 17429   000352                     CRCDATAT        equ	850	;# 
 17430   000353                     CRCOUT          equ	851	;# 
 17431   000353                     CRCSHFT         equ	851	;# 
 17432   000353                     CRCXOR          equ	851	;# 
 17433   000353                     CRCOUTL         equ	851	;# 
 17434   000353                     CRCSHFTL        equ	851	;# 
 17435   000353                     CRCSHIFTL       equ	851	;# 
 17436   000353                     CRCXORL         equ	851	;# 
 17437   000354                     CRCOUTH         equ	852	;# 
 17438   000354                     CRCSHFTH        equ	852	;# 
 17439   000354                     CRCSHIFTH       equ	852	;# 
 17440   000354                     CRCXORH         equ	852	;# 
 17441   000355                     CRCOUTU         equ	853	;# 
 17442   000355                     CRCSHFTU        equ	853	;# 
 17443   000355                     CRCSHIFTU       equ	853	;# 
 17444   000355                     CRCXORU         equ	853	;# 
 17445   000356                     CRCOUTT         equ	854	;# 
 17446   000356                     CRCSHFTT        equ	854	;# 
 17447   000356                     CRCSHIFTT       equ	854	;# 
 17448   000356                     CRCXORT         equ	854	;# 
 17449   000357                     CRCCON0         equ	855	;# 
 17450   000358                     CRCCON1         equ	856	;# 
 17451   000359                     CRCCON2         equ	857	;# 
 17452   00035A                     SCANLADR        equ	858	;# 
 17453   00035A                     SCANLADRL       equ	858	;# 
 17454   00035B                     SCANLADRH       equ	859	;# 
 17455   00035C                     SCANLADRU       equ	860	;# 
 17456   00035D                     SCANHADR        equ	861	;# 
 17457   00035D                     SCANHADRL       equ	861	;# 
 17458   00035E                     SCANHADRH       equ	862	;# 
 17459   00035F                     SCANHADRU       equ	863	;# 
 17460   000360                     SCANCON0        equ	864	;# 
 17461   000361                     SCANTRIG        equ	865	;# 
 17462   000362                     IPR0            equ	866	;# 
 17463   000363                     IPR1            equ	867	;# 
 17464   000364                     IPR2            equ	868	;# 
 17465   000365                     IPR3            equ	869	;# 
 17466   000366                     IPR4            equ	870	;# 
 17467   000367                     IPR5            equ	871	;# 
 17468   000368                     IPR6            equ	872	;# 
 17469   000369                     IPR7            equ	873	;# 
 17470   00036A                     IPR8            equ	874	;# 
 17471   00036B                     IPR9            equ	875	;# 
 17472   00036C                     IPR10           equ	876	;# 
 17473   00036D                     IPR11           equ	877	;# 
 17474   00036E                     IPR12           equ	878	;# 
 17475   00036F                     IPR13           equ	879	;# 
 17476   000370                     IPR14           equ	880	;# 
 17477   000371                     IPR15           equ	881	;# 
 17478   000373                     STATUS_CSHAD    equ	883	;# 
 17479   000374                     WREG_CSHAD      equ	884	;# 
 17480   000375                     BSR_CSHAD       equ	885	;# 
 17481   000376                     SHADCON         equ	886	;# 
 17482   000377                     STATUS_SHAD     equ	887	;# 
 17483   000378                     WREG_SHAD       equ	888	;# 
 17484   000379                     BSR_SHAD        equ	889	;# 
 17485   00037A                     PCLATH_SHAD     equ	890	;# 
 17486   00037B                     PCLATU_SHAD     equ	891	;# 
 17487   00037C                     FSR0SH          equ	892	;# 
 17488   00037C                     FSR0L_SHAD      equ	892	;# 
 17489   00037D                     FSR0H_SHAD      equ	893	;# 
 17490   00037E                     FSR1SH          equ	894	;# 
 17491   00037E                     FSR1L_SHAD      equ	894	;# 
 17492   00037F                     FSR1H_SHAD      equ	895	;# 
 17493   000380                     FSR2SH          equ	896	;# 
 17494   000380                     FSR2L_SHAD      equ	896	;# 
 17495   000381                     FSR2H_SHAD      equ	897	;# 
 17496   000382                     PRODSH          equ	898	;# 
 17497   000382                     PRODL_SHAD      equ	898	;# 
 17498   000383                     PRODH_SHAD      equ	899	;# 
 17499   000387                     TU16ACON0       equ	903	;# 
 17500   000388                     TU16ACON1       equ	904	;# 
 17501   000389                     TU16AHLT        equ	905	;# 
 17502   00038A                     TU16APS         equ	906	;# 
 17503   00038B                     TU16ATMR        equ	907	;# 
 17504   00038B                     TU16ACR         equ	907	;# 
 17505   00038B                     TU16ATMRL       equ	907	;# 
 17506   00038B                     TU16ACRL        equ	907	;# 
 17507   00038C                     TU16ATMRH       equ	908	;# 
 17508   00038C                     TU16ACRH        equ	908	;# 
 17509   00038D                     TU16APR         equ	909	;# 
 17510   00038D                     TU16APRL        equ	909	;# 
 17511   00038E                     TU16APRH        equ	910	;# 
 17512   00038F                     TU16ACLK        equ	911	;# 
 17513   000390                     TU16AERS        equ	912	;# 
 17514   000393                     TU16BCON0       equ	915	;# 
 17515   000394                     TU16BCON1       equ	916	;# 
 17516   000395                     TU16BHLT        equ	917	;# 
 17517   000396                     TU16BPS         equ	918	;# 
 17518   000397                     TU16BTMR        equ	919	;# 
 17519   000397                     TU16BCR         equ	919	;# 
 17520   000397                     TU16BTMRL       equ	919	;# 
 17521   000397                     TU16BCRL        equ	919	;# 
 17522   000398                     TU16BTMRH       equ	920	;# 
 17523   000398                     TU16BCRH        equ	920	;# 
 17524   000399                     TU16BPR         equ	921	;# 
 17525   000399                     TU16BPRL        equ	921	;# 
 17526   00039A                     TU16BPRH        equ	922	;# 
 17527   00039B                     TU16BCLK        equ	923	;# 
 17528   00039C                     TU16BERS        equ	924	;# 
 17529   0003BB                     TUCHAIN         equ	955	;# 
 17530   0003BC                     CWG1CLK         equ	956	;# 
 17531   0003BC                     CWG1CLKCON      equ	956	;# 
 17532   0003BD                     CWG1ISM         equ	957	;# 
 17533   0003BE                     CWG1DBR         equ	958	;# 
 17534   0003BF                     CWG1DBF         equ	959	;# 
 17535   0003C0                     CWG1CON0        equ	960	;# 
 17536   0003C1                     CWG1CON1        equ	961	;# 
 17537   0003C2                     CWG1AS0         equ	962	;# 
 17538   0003C3                     CWG1AS1         equ	963	;# 
 17539   0003C4                     CWG1STR         equ	964	;# 
 17540   0003C5                     CWG2CLK         equ	965	;# 
 17541   0003C5                     CWG2CLKCON      equ	965	;# 
 17542   0003C6                     CWG2ISM         equ	966	;# 
 17543   0003C7                     CWG2DBR         equ	967	;# 
 17544   0003C8                     CWG2DBF         equ	968	;# 
 17545   0003C9                     CWG2CON0        equ	969	;# 
 17546   0003CA                     CWG2CON1        equ	970	;# 
 17547   0003CB                     CWG2AS0         equ	971	;# 
 17548   0003CC                     CWG2AS1         equ	972	;# 
 17549   0003CD                     CWG2STR         equ	973	;# 
 17550   0003CE                     CWG3CLK         equ	974	;# 
 17551   0003CE                     CWG3CLKCON      equ	974	;# 
 17552   0003CF                     CWG3ISM         equ	975	;# 
 17553   0003D0                     CWG3DBR         equ	976	;# 
 17554   0003D1                     CWG3DBF         equ	977	;# 
 17555   0003D2                     CWG3CON0        equ	978	;# 
 17556   0003D3                     CWG3CON1        equ	979	;# 
 17557   0003D4                     CWG3AS0         equ	980	;# 
 17558   0003D5                     CWG3AS1         equ	981	;# 
 17559   0003D6                     CWG3STR         equ	982	;# 
 17560   0003D7                     FVRCON          equ	983	;# 
 17561   0003D8                     ADCPCON         equ	984	;# 
 17562   0003D8                     ADCP            equ	984	;# 
 17563   0003D9                     ADLTH           equ	985	;# 
 17564   0003D9                     ADLTHL          equ	985	;# 
 17565   0003DA                     ADLTHH          equ	986	;# 
 17566   0003DB                     ADUTH           equ	987	;# 
 17567   0003DB                     ADUTHL          equ	987	;# 
 17568   0003DC                     ADUTHH          equ	988	;# 
 17569   0003DD                     ADERR           equ	989	;# 
 17570   0003DD                     ADERRL          equ	989	;# 
 17571   0003DE                     ADERRH          equ	990	;# 
 17572   0003DF                     ADSTPT          equ	991	;# 
 17573   0003DF                     ADSTPTL         equ	991	;# 
 17574   0003E0                     ADSTPTH         equ	992	;# 
 17575   0003E1                     ADFLTR          equ	993	;# 
 17576   0003E1                     ADFLTRL         equ	993	;# 
 17577   0003E2                     ADFLTRH         equ	994	;# 
 17578   0003E3                     ADACC           equ	995	;# 
 17579   0003E3                     ADACCL          equ	995	;# 
 17580   0003E4                     ADACCH          equ	996	;# 
 17581   0003E5                     ADACCU          equ	997	;# 
 17582   0003E6                     ADCNT           equ	998	;# 
 17583   0003E7                     ADRPT           equ	999	;# 
 17584   0003E8                     ADPREV          equ	1000	;# 
 17585   0003E8                     ADPREVL         equ	1000	;# 
 17586   0003E9                     ADPREVH         equ	1001	;# 
 17587   0003EA                     ADRES           equ	1002	;# 
 17588   0003EA                     ADRESL          equ	1002	;# 
 17589   0003EB                     ADRESH          equ	1003	;# 
 17590   0003EC                     ADPCH           equ	1004	;# 
 17591   0003EE                     ADACQ           equ	1006	;# 
 17592   0003EE                     ADACQL          equ	1006	;# 
 17593   0003EF                     ADACQH          equ	1007	;# 
 17594   0003F0                     ADCAP           equ	1008	;# 
 17595   0003F1                     ADPRE           equ	1009	;# 
 17596   0003F1                     ADPREL          equ	1009	;# 
 17597   0003F2                     ADPREH          equ	1010	;# 
 17598   0003F3                     ADCON0          equ	1011	;# 
 17599   0003F4                     ADCON1          equ	1012	;# 
 17600   0003F5                     ADCON2          equ	1013	;# 
 17601   0003F6                     ADCON3          equ	1014	;# 
 17602   0003F7                     ADSTAT          equ	1015	;# 
 17603   0003F8                     ADREF           equ	1016	;# 
 17604   0003F9                     ADACT           equ	1017	;# 
 17605   0003FA                     ADCLK           equ	1018	;# 
 17606   0003FB                     ADCTX           equ	1019	;# 
 17607   0003FC                     ADCSEL1         equ	1020	;# 
 17608   0003FD                     ADCSEL2         equ	1021	;# 
 17609   0003FE                     ADCSEL3         equ	1022	;# 
 17610   0003FF                     ADCSEL4         equ	1023	;# 
 17611   000400                     ANSELA          equ	1024	;# 
 17612   000401                     WPUA            equ	1025	;# 
 17613   000402                     ODCONA          equ	1026	;# 
 17614   000403                     SLRCONA         equ	1027	;# 
 17615   000404                     INLVLA          equ	1028	;# 
 17616   000405                     IOCAP           equ	1029	;# 
 17617   000406                     IOCAN           equ	1030	;# 
 17618   000407                     IOCAF           equ	1031	;# 
 17619   000408                     ANSELB          equ	1032	;# 
 17620   000409                     WPUB            equ	1033	;# 
 17621   00040A                     ODCONB          equ	1034	;# 
 17622   00040B                     SLRCONB         equ	1035	;# 
 17623   00040C                     INLVLB          equ	1036	;# 
 17624   00040D                     IOCBP           equ	1037	;# 
 17625   00040E                     IOCBN           equ	1038	;# 
 17626   00040F                     IOCBF           equ	1039	;# 
 17627   000410                     ANSELC          equ	1040	;# 
 17628   000411                     WPUC            equ	1041	;# 
 17629   000412                     ODCONC          equ	1042	;# 
 17630   000413                     SLRCONC         equ	1043	;# 
 17631   000414                     INLVLC          equ	1044	;# 
 17632   000415                     IOCCP           equ	1045	;# 
 17633   000416                     IOCCN           equ	1046	;# 
 17634   000417                     IOCCF           equ	1047	;# 
 17635   000421                     WPUE            equ	1057	;# 
 17636   000424                     INLVLE          equ	1060	;# 
 17637   000425                     IOCEP           equ	1061	;# 
 17638   000426                     IOCEN           equ	1062	;# 
 17639   000427                     IOCEF           equ	1063	;# 
 17640   000440                     NCO1ACC         equ	1088	;# 
 17641   000440                     NCO1ACCL        equ	1088	;# 
 17642   000441                     NCO1ACCH        equ	1089	;# 
 17643   000442                     NCO1ACCU        equ	1090	;# 
 17644   000443                     NCO1INC         equ	1091	;# 
 17645   000443                     NCO1INCL        equ	1091	;# 
 17646   000444                     NCO1INCH        equ	1092	;# 
 17647   000445                     NCO1INCU        equ	1093	;# 
 17648   000446                     NCO1CON         equ	1094	;# 
 17649   000447                     NCO1CLK         equ	1095	;# 
 17650   000448                     NCO2ACC         equ	1096	;# 
 17651   000448                     NCO2ACCL        equ	1096	;# 
 17652   000449                     NCO2ACCH        equ	1097	;# 
 17653   00044A                     NCO2ACCU        equ	1098	;# 
 17654   00044B                     NCO2INC         equ	1099	;# 
 17655   00044B                     NCO2INCL        equ	1099	;# 
 17656   00044C                     NCO2INCH        equ	1100	;# 
 17657   00044D                     NCO2INCU        equ	1101	;# 
 17658   00044E                     NCO2CON         equ	1102	;# 
 17659   00044F                     NCO2CLK         equ	1103	;# 
 17660   000450                     NCO3ACC         equ	1104	;# 
 17661   000450                     NCO3ACCL        equ	1104	;# 
 17662   000451                     NCO3ACCH        equ	1105	;# 
 17663   000452                     NCO3ACCU        equ	1106	;# 
 17664   000453                     NCO3INC         equ	1107	;# 
 17665   000453                     NCO3INCL        equ	1107	;# 
 17666   000454                     NCO3INCH        equ	1108	;# 
 17667   000455                     NCO3INCU        equ	1109	;# 
 17668   000456                     NCO3CON         equ	1110	;# 
 17669   000457                     NCO3CLK         equ	1111	;# 
 17670   000458                     FSCMCON         equ	1112	;# 
 17671   000459                     IVTLOCK         equ	1113	;# 
 17672   00045A                     IVTAD           equ	1114	;# 
 17673   00045A                     IVTADL          equ	1114	;# 
 17674   00045B                     IVTADH          equ	1115	;# 
 17675   00045C                     IVTADU          equ	1116	;# 
 17676   00045D                     IVTBASE         equ	1117	;# 
 17677   00045D                     IVTBASEL        equ	1117	;# 
 17678   00045E                     IVTBASEH        equ	1118	;# 
 17679   00045F                     IVTBASEU        equ	1119	;# 
 17680   000460                     PWM1ERS         equ	1120	;# 
 17681   000461                     PWM1CLK         equ	1121	;# 
 17682   000462                     PWM1LDS         equ	1122	;# 
 17683   000463                     PWM1PR          equ	1123	;# 
 17684   000463                     PWM1PRL         equ	1123	;# 
 17685   000464                     PWM1PRH         equ	1124	;# 
 17686   000465                     PWM1CPRE        equ	1125	;# 
 17687   000466                     PWM1PIPOS       equ	1126	;# 
 17688   000467                     PWM1GIR         equ	1127	;# 
 17689   000468                     PWM1GIE         equ	1128	;# 
 17690   000469                     PWM1CON         equ	1129	;# 
 17691   00046A                     PWM1S1CFG       equ	1130	;# 
 17692   00046B                     PWM1S1P1        equ	1131	;# 
 17693   00046B                     PWM1S1P1L       equ	1131	;# 
 17694   00046C                     PWM1S1P1H       equ	1132	;# 
 17695   00046D                     PWM1S1P2        equ	1133	;# 
 17696   00046D                     PWM1S1P2L       equ	1133	;# 
 17697   00046E                     PWM1S1P2H       equ	1134	;# 
 17698   00046F                     PWM2ERS         equ	1135	;# 
 17699   000470                     PWM2CLK         equ	1136	;# 
 17700   000471                     PWM2LDS         equ	1137	;# 
 17701   000472                     PWM2PR          equ	1138	;# 
 17702   000472                     PWM2PRL         equ	1138	;# 
 17703   000473                     PWM2PRH         equ	1139	;# 
 17704   000474                     PWM2CPRE        equ	1140	;# 
 17705   000475                     PWM2PIPOS       equ	1141	;# 
 17706   000476                     PWM2GIR         equ	1142	;# 
 17707   000477                     PWM2GIE         equ	1143	;# 
 17708   000478                     PWM2CON         equ	1144	;# 
 17709   000479                     PWM2S1CFG       equ	1145	;# 
 17710   00047A                     PWM2S1P1        equ	1146	;# 
 17711   00047A                     PWM2S1P1L       equ	1146	;# 
 17712   00047B                     PWM2S1P1H       equ	1147	;# 
 17713   00047C                     PWM2S1P2        equ	1148	;# 
 17714   00047C                     PWM2S1P2L       equ	1148	;# 
 17715   00047D                     PWM2S1P2H       equ	1149	;# 
 17716   00047E                     PWM3ERS         equ	1150	;# 
 17717   00047F                     PWM3CLK         equ	1151	;# 
 17718   000480                     PWM3LDS         equ	1152	;# 
 17719   000481                     PWM3PR          equ	1153	;# 
 17720   000481                     PWM3PRL         equ	1153	;# 
 17721   000482                     PWM3PRH         equ	1154	;# 
 17722   000483                     PWM3CPRE        equ	1155	;# 
 17723   000484                     PWM3PIPOS       equ	1156	;# 
 17724   000485                     PWM3GIR         equ	1157	;# 
 17725   000486                     PWM3GIE         equ	1158	;# 
 17726   000487                     PWM3CON         equ	1159	;# 
 17727   000488                     PWM3S1CFG       equ	1160	;# 
 17728   000489                     PWM3S1P1        equ	1161	;# 
 17729   000489                     PWM3S1P1L       equ	1161	;# 
 17730   00048A                     PWM3S1P1H       equ	1162	;# 
 17731   00048B                     PWM3S1P2        equ	1163	;# 
 17732   00048B                     PWM3S1P2L       equ	1163	;# 
 17733   00048C                     PWM3S1P2H       equ	1164	;# 
 17734   00048D                     PWM4ERS         equ	1165	;# 
 17735   00048E                     PWM4CLK         equ	1166	;# 
 17736   00048F                     PWM4LDS         equ	1167	;# 
 17737   000490                     PWM4PR          equ	1168	;# 
 17738   000490                     PWM4PRL         equ	1168	;# 
 17739   000491                     PWM4PRH         equ	1169	;# 
 17740   000492                     PWM4CPRE        equ	1170	;# 
 17741   000493                     PWM4PIPOS       equ	1171	;# 
 17742   000494                     PWM4GIR         equ	1172	;# 
 17743   000495                     PWM4GIE         equ	1173	;# 
 17744   000496                     PWM4CON         equ	1174	;# 
 17745   000497                     PWM4S1CFG       equ	1175	;# 
 17746   000498                     PWM4S1P1        equ	1176	;# 
 17747   000498                     PWM4S1P1L       equ	1176	;# 
 17748   000499                     PWM4S1P1H       equ	1177	;# 
 17749   00049A                     PWM4S1P2        equ	1178	;# 
 17750   00049A                     PWM4S1P2L       equ	1178	;# 
 17751   00049B                     PWM4S1P2H       equ	1179	;# 
 17752   00049C                     PWMLOAD         equ	1180	;# 
 17753   00049D                     PWMEN           equ	1181	;# 
 17754   00049E                     PIE0            equ	1182	;# 
 17755   00049F                     PIE1            equ	1183	;# 
 17756   0004A0                     PIE2            equ	1184	;# 
 17757   0004A1                     PIE3            equ	1185	;# 
 17758   0004A2                     PIE4            equ	1186	;# 
 17759   0004A3                     PIE5            equ	1187	;# 
 17760   0004A4                     PIE6            equ	1188	;# 
 17761   0004A5                     PIE7            equ	1189	;# 
 17762   0004A6                     PIE8            equ	1190	;# 
 17763   0004A7                     PIE9            equ	1191	;# 
 17764   0004A8                     PIE10           equ	1192	;# 
 17765   0004A9                     PIE11           equ	1193	;# 
 17766   0004AA                     PIE12           equ	1194	;# 
 17767   0004AB                     PIE13           equ	1195	;# 
 17768   0004AC                     PIE14           equ	1196	;# 
 17769   0004AD                     PIE15           equ	1197	;# 
 17770   0004AE                     PIR0            equ	1198	;# 
 17771   0004AF                     PIR1            equ	1199	;# 
 17772   0004B0                     PIR2            equ	1200	;# 
 17773   0004B1                     PIR3            equ	1201	;# 
 17774   0004B2                     PIR4            equ	1202	;# 
 17775   0004B3                     PIR5            equ	1203	;# 
 17776   0004B4                     PIR6            equ	1204	;# 
 17777   0004B5                     PIR7            equ	1205	;# 
 17778   0004B6                     PIR8            equ	1206	;# 
 17779   0004B7                     PIR9            equ	1207	;# 
 17780   0004B8                     PIR10           equ	1208	;# 
 17781   0004B9                     PIR11           equ	1209	;# 
 17782   0004BA                     PIR12           equ	1210	;# 
 17783   0004BB                     PIR13           equ	1211	;# 
 17784   0004BC                     PIR14           equ	1212	;# 
 17785   0004BD                     PIR15           equ	1213	;# 
 17786   0004BE                     LATA            equ	1214	;# 
 17787   0004BF                     LATB            equ	1215	;# 
 17788   0004C0                     LATC            equ	1216	;# 
 17789   0004C6                     TRISA           equ	1222	;# 
 17790   0004C7                     TRISB           equ	1223	;# 
 17791   0004C8                     TRISC           equ	1224	;# 
 17792   0004CA                     TRISE           equ	1226	;# 
 17793   0004CE                     PORTA           equ	1230	;# 
 17794   0004CF                     PORTB           equ	1231	;# 
 17795   0004D0                     PORTC           equ	1232	;# 
 17796   0004D2                     PORTE           equ	1234	;# 
 17797   0004D6                     INTCON0         equ	1238	;# 
 17798   0004D7                     INTCON1         equ	1239	;# 
 17799   0004D8                     STATUS          equ	1240	;# 
 17800   0004D9                     FSR2            equ	1241	;# 
 17801   0004D9                     FSR2L           equ	1241	;# 
 17802   0004DA                     FSR2H           equ	1242	;# 
 17803   0004DB                     PLUSW2          equ	1243	;# 
 17804   0004DC                     PREINC2         equ	1244	;# 
 17805   0004DD                     POSTDEC2        equ	1245	;# 
 17806   0004DE                     POSTINC2        equ	1246	;# 
 17807   0004DF                     INDF2           equ	1247	;# 
 17808   0004E0                     BSR             equ	1248	;# 
 17809   0004E1                     FSR1            equ	1249	;# 
 17810   0004E1                     FSR1L           equ	1249	;# 
 17811   0004E2                     FSR1H           equ	1250	;# 
 17812   0004E3                     PLUSW1          equ	1251	;# 
 17813   0004E4                     PREINC1         equ	1252	;# 
 17814   0004E5                     POSTDEC1        equ	1253	;# 
 17815   0004E6                     POSTINC1        equ	1254	;# 
 17816   0004E7                     INDF1           equ	1255	;# 
 17817   0004E8                     WREG            equ	1256	;# 
 17818   0004E9                     FSR0            equ	1257	;# 
 17819   0004E9                     FSR0L           equ	1257	;# 
 17820   0004EA                     FSR0H           equ	1258	;# 
 17821   0004EB                     PLUSW0          equ	1259	;# 
 17822   0004EC                     PREINC0         equ	1260	;# 
 17823   0004ED                     POSTDEC0        equ	1261	;# 
 17824   0004EE                     POSTINC0        equ	1262	;# 
 17825   0004EF                     INDF0           equ	1263	;# 
 17826   0004F0                     PCON0           equ	1264	;# 
 17827   0004F1                     PCON1           equ	1265	;# 
 17828   0004F2                     CPUDOZE         equ	1266	;# 
 17829   0004F3                     PROD            equ	1267	;# 
 17830   0004F3                     PRODL           equ	1267	;# 
 17831   0004F4                     PRODH           equ	1268	;# 
 17832   0004F5                     TABLAT          equ	1269	;# 
 17833   0004F6                     TBLPTR          equ	1270	;# 
 17834   0004F6                     TBLPTRL         equ	1270	;# 
 17835   0004F7                     TBLPTRH         equ	1271	;# 
 17836   0004F8                     TBLPTRU         equ	1272	;# 
 17837   0004F9                     PCLAT           equ	1273	;# 
 17838   0004F9                     PCL             equ	1273	;# 
 17839   0004FA                     PCLATH          equ	1274	;# 
 17840   0004FB                     PCLATU          equ	1275	;# 
 17841   0004FC                     STKPTR          equ	1276	;# 
 17842   0004FD                     TOS             equ	1277	;# 
 17843   0004FD                     TOSL            equ	1277	;# 
 17844   0004FE                     TOSH            equ	1278	;# 
 17845   0004FF                     TOSU            equ	1279	;# 
 17846   000038                     BOOTREG         equ	56	;# 
 17847   000039                     CLKRCON         equ	57	;# 
 17848   00003A                     CLKRCLK         equ	58	;# 
 17849   000040                     NVMCON0         equ	64	;# 
 17850   000041                     NVMCON1         equ	65	;# 
 17851   000042                     NVMLOCK         equ	66	;# 
 17852   000043                     NVMADR          equ	67	;# 
 17853   000043                     NVMADRL         equ	67	;# 
 17854   000044                     NVMADRH         equ	68	;# 
 17855   000045                     NVMADRU         equ	69	;# 
 17856   000046                     NVMDAT          equ	70	;# 
 17857   000046                     NVMDATL         equ	70	;# 
 17858   000047                     NVMDATH         equ	71	;# 
 17859   000048                     VREGCON         equ	72	;# 
 17860   000049                     BORCON          equ	73	;# 
 17861   00004A                     HLVDCON0        equ	74	;# 
 17862   00004B                     HLVDCON1        equ	75	;# 
 17863   00004C                     ZCDCON          equ	76	;# 
 17864   000060                     PMD0            equ	96	;# 
 17865   000061                     PMD1            equ	97	;# 
 17866   000062                     PMD2            equ	98	;# 
 17867   000063                     PMD3            equ	99	;# 
 17868   000064                     PMD4            equ	100	;# 
 17869   000065                     PMD5            equ	101	;# 
 17870   000066                     PMD6            equ	102	;# 
 17871   000067                     PMD7            equ	103	;# 
 17872   000068                     PMD8            equ	104	;# 
 17873   00006A                     MD1CON0         equ	106	;# 
 17874   00006B                     MD1CON1         equ	107	;# 
 17875   00006C                     MD1SRC          equ	108	;# 
 17876   00006D                     MD1CARL         equ	109	;# 
 17877   00006E                     MD1CARH         equ	110	;# 
 17878   00006F                     CMOUT           equ	111	;# 
 17879   000070                     CM1CON0         equ	112	;# 
 17880   000071                     CM1CON1         equ	113	;# 
 17881   000072                     CM1NCH          equ	114	;# 
 17882   000073                     CM1PCH          equ	115	;# 
 17883   000074                     CM2CON0         equ	116	;# 
 17884   000075                     CM2CON1         equ	117	;# 
 17885   000076                     CM2NCH          equ	118	;# 
 17886   000077                     CM2PCH          equ	119	;# 
 17887   000078                     WDTCON0         equ	120	;# 
 17888   000079                     WDTCON1         equ	121	;# 
 17889   00007A                     WDTPSL          equ	122	;# 
 17890   00007B                     WDTPSH          equ	123	;# 
 17891   00007C                     WDTTMR          equ	124	;# 
 17892   00007D                     DAC1DAT         equ	125	;# 
 17893   00007D                     DAC1DATL        equ	125	;# 
 17894   00007F                     DAC1CON         equ	127	;# 
 17895   000080                     SPI1RXB         equ	128	;# 
 17896   000081                     SPI1TXB         equ	129	;# 
 17897   000082                     SPI1TCNT        equ	130	;# 
 17898   000082                     SPI1TCNTL       equ	130	;# 
 17899   000083                     SPI1TCNTH       equ	131	;# 
 17900   000084                     SPI1CON0        equ	132	;# 
 17901   000085                     SPI1CON1        equ	133	;# 
 17902   000086                     SPI1CON2        equ	134	;# 
 17903   000087                     SPI1STATUS      equ	135	;# 
 17904   000088                     SPI1TWIDTH      equ	136	;# 
 17905   000089                     SPI1BAUD        equ	137	;# 
 17906   00008A                     SPI1INTF        equ	138	;# 
 17907   00008B                     SPI1INTE        equ	139	;# 
 17908   00008C                     SPI1CLK         equ	140	;# 
 17909   00008D                     SPI2RXB         equ	141	;# 
 17910   00008E                     SPI2TXB         equ	142	;# 
 17911   00008F                     SPI2TCNT        equ	143	;# 
 17912   00008F                     SPI2TCNTL       equ	143	;# 
 17913   000090                     SPI2TCNTH       equ	144	;# 
 17914   000091                     SPI2CON0        equ	145	;# 
 17915   000092                     SPI2CON1        equ	146	;# 
 17916   000093                     SPI2CON2        equ	147	;# 
 17917   000094                     SPI2STATUS      equ	148	;# 
 17918   000095                     SPI2TWIDTH      equ	149	;# 
 17919   000096                     SPI2BAUD        equ	150	;# 
 17920   000097                     SPI2INTF        equ	151	;# 
 17921   000098                     SPI2INTE        equ	152	;# 
 17922   000099                     SPI2CLK         equ	153	;# 
 17923   0000AC                     ACTCON          equ	172	;# 
 17924   0000AD                     OSCCON1         equ	173	;# 
 17925   0000AE                     OSCCON2         equ	174	;# 
 17926   0000AF                     OSCCON3         equ	175	;# 
 17927   0000B0                     OSCTUNE         equ	176	;# 
 17928   0000B1                     OSCFRQ          equ	177	;# 
 17929   0000B1                     OSCFREQ         equ	177	;# 
 17930   0000B2                     OSCSTAT         equ	178	;# 
 17931   0000B2                     OSCSTAT1        equ	178	;# 
 17932   0000B3                     OSCEN           equ	179	;# 
 17933   0000B4                     PRLOCK          equ	180	;# 
 17934   0000B5                     SCANPR          equ	181	;# 
 17935   0000B6                     DMA1PR          equ	182	;# 
 17936   0000B7                     DMA2PR          equ	183	;# 
 17937   0000B8                     DMA3PR          equ	184	;# 
 17938   0000B9                     DMA4PR          equ	185	;# 
 17939   0000BA                     DMA5PR          equ	186	;# 
 17940   0000BB                     DMA6PR          equ	187	;# 
 17941   0000BC                     DMA7PR          equ	188	;# 
 17942   0000BD                     DMA8PR          equ	189	;# 
 17943   0000BE                     MAINPR          equ	190	;# 
 17944   0000BF                     ISRPR           equ	191	;# 
 17945   0000D4                     CLCDATA         equ	212	;# 
 17946   0000D5                     CLCSELECT       equ	213	;# 
 17947   0000D6                     CLCnCON         equ	214	;# 
 17948   0000D7                     CLCnPOL         equ	215	;# 
 17949   0000D8                     CLCnSEL0        equ	216	;# 
 17950   0000D9                     CLCnSEL1        equ	217	;# 
 17951   0000DA                     CLCnSEL2        equ	218	;# 
 17952   0000DB                     CLCnSEL3        equ	219	;# 
 17953   0000DC                     CLCnGLS0        equ	220	;# 
 17954   0000DD                     CLCnGLS1        equ	221	;# 
 17955   0000DE                     CLCnGLS2        equ	222	;# 
 17956   0000DF                     CLCnGLS3        equ	223	;# 
 17957   0000E8                     DMASELECT       equ	232	;# 
 17958   0000E9                     DMAnBUF         equ	233	;# 
 17959   0000EA                     DMAnDCNT        equ	234	;# 
 17960   0000EA                     DMAnDCNTL       equ	234	;# 
 17961   0000EB                     DMAnDCNTH       equ	235	;# 
 17962   0000EC                     DMAnDPTR        equ	236	;# 
 17963   0000EC                     DMAnDPTRL       equ	236	;# 
 17964   0000ED                     DMAnDPTRH       equ	237	;# 
 17965   0000EE                     DMAnDSZ         equ	238	;# 
 17966   0000EE                     DMAnDSZL        equ	238	;# 
 17967   0000EF                     DMAnDSZH        equ	239	;# 
 17968   0000F0                     DMAnDSA         equ	240	;# 
 17969   0000F0                     DMAnDSAL        equ	240	;# 
 17970   0000F1                     DMAnDSAH        equ	241	;# 
 17971   0000F2                     DMAnSCNT        equ	242	;# 
 17972   0000F2                     DMAnSCNTL       equ	242	;# 
 17973   0000F3                     DMAnSCNTH       equ	243	;# 
 17974   0000F4                     DMAnSPTR        equ	244	;# 
 17975   0000F4                     DMAnSPTRL       equ	244	;# 
 17976   0000F5                     DMAnSPTRH       equ	245	;# 
 17977   0000F6                     DMAnSPTRU       equ	246	;# 
 17978   0000F7                     DMAnSSZ         equ	247	;# 
 17979   0000F7                     DMAnSSZL        equ	247	;# 
 17980   0000F8                     DMAnSSZH        equ	248	;# 
 17981   0000F9                     DMAnSSA         equ	249	;# 
 17982   0000F9                     DMAnSSAL        equ	249	;# 
 17983   0000FA                     DMAnSSAH        equ	250	;# 
 17984   0000FB                     DMAnSSAU        equ	251	;# 
 17985   0000FC                     DMAnCON0        equ	252	;# 
 17986   0000FD                     DMAnCON1        equ	253	;# 
 17987   0000FE                     DMAnAIRQ        equ	254	;# 
 17988   0000FF                     DMAnSIRQ        equ	255	;# 
 17989   000100                     C1CONL          equ	256	;# 
 17990   000101                     C1CONH          equ	257	;# 
 17991   000102                     C1CONU          equ	258	;# 
 17992   000103                     C1CONT          equ	259	;# 
 17993   000104                     C1NBTCFGL       equ	260	;# 
 17994   000105                     C1NBTCFGH       equ	261	;# 
 17995   000106                     C1NBTCFGU       equ	262	;# 
 17996   000107                     C1NBTCFGT       equ	263	;# 
 17997   000108                     C1DBTCFGL       equ	264	;# 
 17998   000109                     C1DBTCFGH       equ	265	;# 
 17999   00010A                     C1DBTCFGU       equ	266	;# 
 18000   00010B                     C1DBTCFGT       equ	267	;# 
 18001   00010C                     C1TDCL          equ	268	;# 
 18002   00010D                     C1TDCH          equ	269	;# 
 18003   00010E                     C1TDCU          equ	270	;# 
 18004   000110                     C1TBC           equ	272	;# 
 18005   000110                     C1TBCL          equ	272	;# 
 18006   000111                     C1TBCH          equ	273	;# 
 18007   000112                     C1TBCU          equ	274	;# 
 18008   000113                     C1TBCT          equ	275	;# 
 18009   000114                     C1TSCONL        equ	276	;# 
 18010   000115                     C1TSCONH        equ	277	;# 
 18011   000116                     C1TSCONU        equ	278	;# 
 18012   000117                     C1TSCONT        equ	279	;# 
 18013   000118                     C1VECL          equ	280	;# 
 18014   000119                     C1VECH          equ	281	;# 
 18015   00011A                     C1VECU          equ	282	;# 
 18016   00011B                     C1VECT          equ	283	;# 
 18017   00011C                     C1INTL          equ	284	;# 
 18018   00011D                     C1INTH          equ	285	;# 
 18019   00011E                     C1INTU          equ	286	;# 
 18020   00011F                     C1INTT          equ	287	;# 
 18021   000120                     C1RXIF          equ	288	;# 
 18022   000120                     C1RXIFL         equ	288	;# 
 18023   000121                     C1RXIFH         equ	289	;# 
 18024   000122                     C1RXIFU         equ	290	;# 
 18025   000123                     C1RXIFT         equ	291	;# 
 18026   000124                     C1TXIF          equ	292	;# 
 18027   000124                     C1TXIFL         equ	292	;# 
 18028   000125                     C1TXIFH         equ	293	;# 
 18029   000126                     C1TXIFU         equ	294	;# 
 18030   000127                     C1TXIFT         equ	295	;# 
 18031   000128                     C1RXOVIF        equ	296	;# 
 18032   000128                     C1RXOVIFL       equ	296	;# 
 18033   000129                     C1RXOVIFH       equ	297	;# 
 18034   00012A                     C1RXOVIFU       equ	298	;# 
 18035   00012B                     C1RXOVIFT       equ	299	;# 
 18036   00012C                     C1TXATIF        equ	300	;# 
 18037   00012C                     C1TXATIFL       equ	300	;# 
 18038   00012D                     C1TXATIFH       equ	301	;# 
 18039   00012E                     C1TXATIFU       equ	302	;# 
 18040   00012F                     C1TXATIFT       equ	303	;# 
 18041   000130                     C1TXREQ         equ	304	;# 
 18042   000130                     C1TXREQL        equ	304	;# 
 18043   000131                     C1TXREQH        equ	305	;# 
 18044   000132                     C1TXREQU        equ	306	;# 
 18045   000133                     C1TXREQT        equ	307	;# 
 18046   000134                     C1TRECL         equ	308	;# 
 18047   000135                     C1TRECH         equ	309	;# 
 18048   000136                     C1TRECU         equ	310	;# 
 18049   000137                     C1TRECT         equ	311	;# 
 18050   000138                     C1BDIAG0L       equ	312	;# 
 18051   000139                     C1BDIAG0H       equ	313	;# 
 18052   00013C                     C1BDIAG1L       equ	316	;# 
 18053   00013D                     C1BDIAG1H       equ	317	;# 
 18054   00013E                     C1BDIAG1U       equ	318	;# 
 18055   00013F                     C1BDIAG1T       equ	319	;# 
 18056   000140                     C1TEFCONL       equ	320	;# 
 18057   000141                     C1TEFCONH       equ	321	;# 
 18058   000142                     C1TEFCONU       equ	322	;# 
 18059   000143                     C1TEFCONT       equ	323	;# 
 18060   000144                     C1TEFSTAL       equ	324	;# 
 18061   000145                     C1TEFSTAH       equ	325	;# 
 18062   000146                     C1TEFSTAU       equ	326	;# 
 18063   000147                     C1TEFSTAT       equ	327	;# 
 18064   000148                     C1TEFUA         equ	328	;# 
 18065   000148                     C1TEFUAL        equ	328	;# 
 18066   000149                     C1TEFUAH        equ	329	;# 
 18067   00014A                     C1TEFUAU        equ	330	;# 
 18068   00014B                     C1TEFUAT        equ	331	;# 
 18069   00014C                     C1FIFOBA        equ	332	;# 
 18070   00014C                     C1FIFOBAL       equ	332	;# 
 18071   00014D                     C1FIFOBAH       equ	333	;# 
 18072   00014E                     C1FIFOBAU       equ	334	;# 
 18073   00014F                     C1FIFOBAT       equ	335	;# 
 18074   000150                     C1TXQCONL       equ	336	;# 
 18075   000151                     C1TXQCONH       equ	337	;# 
 18076   000152                     C1TXQCONU       equ	338	;# 
 18077   000153                     C1TXQCONT       equ	339	;# 
 18078   000154                     C1TXQSTAL       equ	340	;# 
 18079   000155                     C1TXQSTAH       equ	341	;# 
 18080   000156                     C1TXQSTAU       equ	342	;# 
 18081   000157                     C1TXQSTAT       equ	343	;# 
 18082   000158                     C1TXQUA         equ	344	;# 
 18083   000158                     C1TXQUAL        equ	344	;# 
 18084   000159                     C1TXQUAH        equ	345	;# 
 18085   00015A                     C1TXQUAU        equ	346	;# 
 18086   00015B                     C1TXQUAT        equ	347	;# 
 18087   00015C                     C1FIFOCON1      equ	348	;# 
 18088   00015C                     C1FIFOCON1L     equ	348	;# 
 18089   00015D                     C1FIFOCON1H     equ	349	;# 
 18090   00015E                     C1FIFOCON1U     equ	350	;# 
 18091   00015F                     C1FIFOCON1T     equ	351	;# 
 18092   000160                     C1FIFOSTA1      equ	352	;# 
 18093   000160                     C1FIFOSTA1L     equ	352	;# 
 18094   000161                     C1FIFOSTA1H     equ	353	;# 
 18095   000162                     C1FIFOSTA1U     equ	354	;# 
 18096   000163                     C1FIFOSTA1T     equ	355	;# 
 18097   000164                     C1FIFOUA1       equ	356	;# 
 18098   000164                     C1FIFOUA1L      equ	356	;# 
 18099   000165                     C1FIFOUA1H      equ	357	;# 
 18100   000166                     C1FIFOUA1U      equ	358	;# 
 18101   000167                     C1FIFOUA1T      equ	359	;# 
 18102   000168                     C1FIFOCON2      equ	360	;# 
 18103   000168                     C1FIFOCON2L     equ	360	;# 
 18104   000169                     C1FIFOCON2H     equ	361	;# 
 18105   00016A                     C1FIFOCON2U     equ	362	;# 
 18106   00016B                     C1FIFOCON2T     equ	363	;# 
 18107   00016C                     C1FIFOSTA2      equ	364	;# 
 18108   00016C                     C1FIFOSTA2L     equ	364	;# 
 18109   00016D                     C1FIFOSTA2H     equ	365	;# 
 18110   00016E                     C1FIFOSTA2U     equ	366	;# 
 18111   00016F                     C1FIFOSTA2T     equ	367	;# 
 18112   000170                     C1FIFOUA2       equ	368	;# 
 18113   000170                     C1FIFOUA2L      equ	368	;# 
 18114   000171                     C1FIFOUA2H      equ	369	;# 
 18115   000172                     C1FIFOUA2U      equ	370	;# 
 18116   000173                     C1FIFOUA2T      equ	371	;# 
 18117   000174                     C1FIFOCON3      equ	372	;# 
 18118   000174                     C1FIFOCON3L     equ	372	;# 
 18119   000175                     C1FIFOCON3H     equ	373	;# 
 18120   000176                     C1FIFOCON3U     equ	374	;# 
 18121   000177                     C1FIFOCON3T     equ	375	;# 
 18122   000178                     C1FIFOSTA3      equ	376	;# 
 18123   000178                     C1FIFOSTA3L     equ	376	;# 
 18124   000179                     C1FIFOSTA3H     equ	377	;# 
 18125   00017A                     C1FIFOSTA3U     equ	378	;# 
 18126   00017B                     C1FIFOSTA3T     equ	379	;# 
 18127   00017C                     C1FIFOUA3       equ	380	;# 
 18128   00017C                     C1FIFOUA3L      equ	380	;# 
 18129   00017D                     C1FIFOUA3H      equ	381	;# 
 18130   00017E                     C1FIFOUA3U      equ	382	;# 
 18131   00017F                     C1FIFOUA3T      equ	383	;# 
 18132   000180                     C1FLTCON0L      equ	384	;# 
 18133   000181                     C1FLTCON0H      equ	385	;# 
 18134   000182                     C1FLTCON0U      equ	386	;# 
 18135   000183                     C1FLTCON0T      equ	387	;# 
 18136   000184                     C1FLTCON1L      equ	388	;# 
 18137   000185                     C1FLTCON1H      equ	389	;# 
 18138   000186                     C1FLTCON1U      equ	390	;# 
 18139   000187                     C1FLTCON1T      equ	391	;# 
 18140   000188                     C1FLTCON2L      equ	392	;# 
 18141   000189                     C1FLTCON2H      equ	393	;# 
 18142   00018A                     C1FLTCON2U      equ	394	;# 
 18143   00018B                     C1FLTCON2T      equ	395	;# 
 18144   00018C                     C1FLTOBJ0       equ	396	;# 
 18145   00018C                     C1FLTOBJ0L      equ	396	;# 
 18146   00018D                     C1FLTOBJ0H      equ	397	;# 
 18147   00018E                     C1FLTOBJ0U      equ	398	;# 
 18148   00018F                     C1FLTOBJ0T      equ	399	;# 
 18149   000190                     C1MASK0         equ	400	;# 
 18150   000190                     C1MASK0L        equ	400	;# 
 18151   000191                     C1MASK0H        equ	401	;# 
 18152   000192                     C1MASK0U        equ	402	;# 
 18153   000193                     C1MASK0T        equ	403	;# 
 18154   000194                     C1FLTOBJ1       equ	404	;# 
 18155   000194                     C1FLTOBJ1L      equ	404	;# 
 18156   000195                     C1FLTOBJ1H      equ	405	;# 
 18157   000196                     C1FLTOBJ1U      equ	406	;# 
 18158   000197                     C1FLTOBJ1T      equ	407	;# 
 18159   000198                     C1MASK1         equ	408	;# 
 18160   000198                     C1MASK1L        equ	408	;# 
 18161   000199                     C1MASK1H        equ	409	;# 
 18162   00019A                     C1MASK1U        equ	410	;# 
 18163   00019B                     C1MASK1T        equ	411	;# 
 18164   00019C                     C1FLTOBJ2       equ	412	;# 
 18165   00019C                     C1FLTOBJ2L      equ	412	;# 
 18166   00019D                     C1FLTOBJ2H      equ	413	;# 
 18167   00019E                     C1FLTOBJ2U      equ	414	;# 
 18168   00019F                     C1FLTOBJ2T      equ	415	;# 
 18169   0001A0                     C1MASK2         equ	416	;# 
 18170   0001A0                     C1MASK2L        equ	416	;# 
 18171   0001A1                     C1MASK2H        equ	417	;# 
 18172   0001A2                     C1MASK2U        equ	418	;# 
 18173   0001A3                     C1MASK2T        equ	419	;# 
 18174   0001A4                     C1FLTOBJ3       equ	420	;# 
 18175   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18176   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18177   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18178   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18179   0001A8                     C1MASK3         equ	424	;# 
 18180   0001A8                     C1MASK3L        equ	424	;# 
 18181   0001A9                     C1MASK3H        equ	425	;# 
 18182   0001AA                     C1MASK3U        equ	426	;# 
 18183   0001AB                     C1MASK3T        equ	427	;# 
 18184   0001AC                     C1FLTOBJ4       equ	428	;# 
 18185   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18186   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18187   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18188   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18189   0001B0                     C1MASK4         equ	432	;# 
 18190   0001B0                     C1MASK4L        equ	432	;# 
 18191   0001B1                     C1MASK4H        equ	433	;# 
 18192   0001B2                     C1MASK4U        equ	434	;# 
 18193   0001B3                     C1MASK4T        equ	435	;# 
 18194   0001B4                     C1FLTOBJ5       equ	436	;# 
 18195   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18196   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18197   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18198   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18199   0001B8                     C1MASK5         equ	440	;# 
 18200   0001B8                     C1MASK5L        equ	440	;# 
 18201   0001B9                     C1MASK5H        equ	441	;# 
 18202   0001BA                     C1MASK5U        equ	442	;# 
 18203   0001BB                     C1MASK5T        equ	443	;# 
 18204   0001BC                     C1FLTOBJ6       equ	444	;# 
 18205   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18206   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18207   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18208   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18209   0001C0                     C1MASK6         equ	448	;# 
 18210   0001C0                     C1MASK6L        equ	448	;# 
 18211   0001C1                     C1MASK6H        equ	449	;# 
 18212   0001C2                     C1MASK6U        equ	450	;# 
 18213   0001C3                     C1MASK6T        equ	451	;# 
 18214   0001C4                     C1FLTOBJ7       equ	452	;# 
 18215   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18216   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18217   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18218   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18219   0001C8                     C1MASK7         equ	456	;# 
 18220   0001C8                     C1MASK7L        equ	456	;# 
 18221   0001C9                     C1MASK7H        equ	457	;# 
 18222   0001CA                     C1MASK7U        equ	458	;# 
 18223   0001CB                     C1MASK7T        equ	459	;# 
 18224   0001CC                     C1FLTOBJ8       equ	460	;# 
 18225   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18226   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18227   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18228   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18229   0001D0                     C1MASK8         equ	464	;# 
 18230   0001D0                     C1MASK8L        equ	464	;# 
 18231   0001D1                     C1MASK8H        equ	465	;# 
 18232   0001D2                     C1MASK8U        equ	466	;# 
 18233   0001D3                     C1MASK8T        equ	467	;# 
 18234   0001D4                     C1FLTOBJ9       equ	468	;# 
 18235   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18236   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18237   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18238   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18239   0001D8                     C1MASK9         equ	472	;# 
 18240   0001D8                     C1MASK9L        equ	472	;# 
 18241   0001D9                     C1MASK9H        equ	473	;# 
 18242   0001DA                     C1MASK9U        equ	474	;# 
 18243   0001DB                     C1MASK9T        equ	475	;# 
 18244   0001DC                     C1FLTOBJ10      equ	476	;# 
 18245   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18246   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18247   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18248   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18249   0001E0                     C1MASK10        equ	480	;# 
 18250   0001E0                     C1MASK10L       equ	480	;# 
 18251   0001E1                     C1MASK10H       equ	481	;# 
 18252   0001E2                     C1MASK10U       equ	482	;# 
 18253   0001E3                     C1MASK10T       equ	483	;# 
 18254   0001E4                     C1FLTOBJ11      equ	484	;# 
 18255   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18256   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18257   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18258   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18259   0001E8                     C1MASK11        equ	488	;# 
 18260   0001E8                     C1MASK11L       equ	488	;# 
 18261   0001E9                     C1MASK11H       equ	489	;# 
 18262   0001EA                     C1MASK11U       equ	490	;# 
 18263   0001EB                     C1MASK11T       equ	491	;# 
 18264   000200                     PPSLOCK         equ	512	;# 
 18265   000201                     RA0PPS          equ	513	;# 
 18266   000202                     RA1PPS          equ	514	;# 
 18267   000203                     RA2PPS          equ	515	;# 
 18268   000204                     RA3PPS          equ	516	;# 
 18269   000205                     RA4PPS          equ	517	;# 
 18270   000206                     RA5PPS          equ	518	;# 
 18271   000207                     RA6PPS          equ	519	;# 
 18272   000208                     RA7PPS          equ	520	;# 
 18273   000209                     RB0PPS          equ	521	;# 
 18274   00020A                     RB1PPS          equ	522	;# 
 18275   00020B                     RB2PPS          equ	523	;# 
 18276   00020C                     RB3PPS          equ	524	;# 
 18277   00020D                     RB4PPS          equ	525	;# 
 18278   00020E                     RB5PPS          equ	526	;# 
 18279   00020F                     RB6PPS          equ	527	;# 
 18280   000210                     RB7PPS          equ	528	;# 
 18281   000211                     RC0PPS          equ	529	;# 
 18282   000212                     RC1PPS          equ	530	;# 
 18283   000213                     RC2PPS          equ	531	;# 
 18284   000214                     RC3PPS          equ	532	;# 
 18285   000215                     RC4PPS          equ	533	;# 
 18286   000216                     RC5PPS          equ	534	;# 
 18287   000217                     RC6PPS          equ	535	;# 
 18288   000218                     RC7PPS          equ	536	;# 
 18289   00023D                     CANRXPPS        equ	573	;# 
 18290   00023E                     INT0PPS         equ	574	;# 
 18291   00023F                     INT1PPS         equ	575	;# 
 18292   000240                     INT2PPS         equ	576	;# 
 18293   000241                     T0CKIPPS        equ	577	;# 
 18294   000242                     T1CKIPPS        equ	578	;# 
 18295   000243                     T1GPPS          equ	579	;# 
 18296   000244                     T3CKIPPS        equ	580	;# 
 18297   000245                     T3GPPS          equ	581	;# 
 18298   000246                     T5CKIPPS        equ	582	;# 
 18299   000247                     T5GPPS          equ	583	;# 
 18300   000248                     T2INPPS         equ	584	;# 
 18301   000249                     T4INPPS         equ	585	;# 
 18302   00024A                     T6INPPS         equ	586	;# 
 18303   00024B                     TUIN0PPS        equ	587	;# 
 18304   00024C                     TUIN1PPS        equ	588	;# 
 18305   00024F                     CCP1PPS         equ	591	;# 
 18306   000250                     CCP2PPS         equ	592	;# 
 18307   000251                     CCP3PPS         equ	593	;# 
 18308   000253                     PWM1ERSPPS      equ	595	;# 
 18309   000254                     PWM2ERSPPS      equ	596	;# 
 18310   000255                     PWM3ERSPPS      equ	597	;# 
 18311   000256                     PWM4ERSPPS      equ	598	;# 
 18312   000257                     PWMIN0PPS       equ	599	;# 
 18313   000258                     PWMIN1PPS       equ	600	;# 
 18314   000259                     SMT1WINPPS      equ	601	;# 
 18315   00025A                     SMT1SIGPPS      equ	602	;# 
 18316   00025B                     CWG1PPS         equ	603	;# 
 18317   00025B                     CWG1INPPS       equ	603	;# 
 18318   00025C                     CWG2PPS         equ	604	;# 
 18319   00025C                     CWG2INPPS       equ	604	;# 
 18320   00025D                     CWG3PPS         equ	605	;# 
 18321   00025D                     CWG3INPPS       equ	605	;# 
 18322   00025E                     MD1CARLPPS      equ	606	;# 
 18323   00025E                     MDCARLPPS       equ	606	;# 
 18324   00025F                     MD1CARHPPS      equ	607	;# 
 18325   00025F                     MDCARHPPS       equ	607	;# 
 18326   000260                     MD1SRCPPS       equ	608	;# 
 18327   000260                     MDSRCPPS        equ	608	;# 
 18328   000261                     CLCIN0PPS       equ	609	;# 
 18329   000262                     CLCIN1PPS       equ	610	;# 
 18330   000263                     CLCIN2PPS       equ	611	;# 
 18331   000264                     CLCIN3PPS       equ	612	;# 
 18332   000265                     CLCIN4PPS       equ	613	;# 
 18333   000266                     CLCIN5PPS       equ	614	;# 
 18334   000267                     CLCIN6PPS       equ	615	;# 
 18335   000268                     CLCIN7PPS       equ	616	;# 
 18336   000269                     ADACTPPS        equ	617	;# 
 18337   00026A                     SPI1SCKPPS      equ	618	;# 
 18338   00026B                     SPI1SDIPPS      equ	619	;# 
 18339   00026C                     SPI1SSPPS       equ	620	;# 
 18340   00026D                     SPI2SCKPPS      equ	621	;# 
 18341   00026E                     SPI2SDIPPS      equ	622	;# 
 18342   00026F                     SPI2SSPPS       equ	623	;# 
 18343   000270                     I2C1SDAPPS      equ	624	;# 
 18344   000271                     I2C1SCLPPS      equ	625	;# 
 18345   000272                     U1RXPPS         equ	626	;# 
 18346   000273                     U1CTSPPS        equ	627	;# 
 18347   000274                     U2RXPPS         equ	628	;# 
 18348   000275                     U2CTSPPS        equ	629	;# 
 18349   000276                     U3RXPPS         equ	630	;# 
 18350   000277                     U3CTSPPS        equ	631	;# 
 18351   000278                     U4RXPPS         equ	632	;# 
 18352   000279                     U4CTSPPS        equ	633	;# 
 18353   00027A                     U5RXPPS         equ	634	;# 
 18354   00027B                     U5CTSPPS        equ	635	;# 
 18355   000286                     RC4I2C          equ	646	;# 
 18356   000287                     RC3I2C          equ	647	;# 
 18357   000288                     RB2I2C          equ	648	;# 
 18358   000289                     RB1I2C          equ	649	;# 
 18359   00028A                     I2C1RXB         equ	650	;# 
 18360   00028B                     I2C1TXB         equ	651	;# 
 18361   00028C                     I2C1CNTL        equ	652	;# 
 18362   00028D                     I2C1CNTH        equ	653	;# 
 18363   00028E                     I2C1ADB0        equ	654	;# 
 18364   00028F                     I2C1ADB1        equ	655	;# 
 18365   000290                     I2C1ADR0        equ	656	;# 
 18366   000291                     I2C1ADR1        equ	657	;# 
 18367   000292                     I2C1ADR2        equ	658	;# 
 18368   000293                     I2C1ADR3        equ	659	;# 
 18369   000294                     I2C1CON0        equ	660	;# 
 18370   000295                     I2C1CON1        equ	661	;# 
 18371   000296                     I2C1CON2        equ	662	;# 
 18372   000297                     I2C1ERR         equ	663	;# 
 18373   000298                     I2C1STAT0       equ	664	;# 
 18374   000299                     I2C1STAT1       equ	665	;# 
 18375   00029A                     I2C1PIR         equ	666	;# 
 18376   00029B                     I2C1PIE         equ	667	;# 
 18377   00029C                     I2C1BTO         equ	668	;# 
 18378   00029D                     I2C1BAUD        equ	669	;# 
 18379   00029E                     I2C1CLK         equ	670	;# 
 18380   00029F                     I2C1BTOC        equ	671	;# 
 18381   0002A1                     U1RXB           equ	673	;# 
 18382   0002A1                     U1RXBL          equ	673	;# 
 18383   0002A2                     U1RXCHK         equ	674	;# 
 18384   0002A3                     U1TXB           equ	675	;# 
 18385   0002A3                     U1TXBL          equ	675	;# 
 18386   0002A4                     U1TXCHK         equ	676	;# 
 18387   0002A5                     U1P1            equ	677	;# 
 18388   0002A5                     U1P1L           equ	677	;# 
 18389   0002A6                     U1P1H           equ	678	;# 
 18390   0002A7                     U1P2            equ	679	;# 
 18391   0002A7                     U1P2L           equ	679	;# 
 18392   0002A8                     U1P2H           equ	680	;# 
 18393   0002A9                     U1P3            equ	681	;# 
 18394   0002A9                     U1P3L           equ	681	;# 
 18395   0002AA                     U1P3H           equ	682	;# 
 18396   0002AB                     U1CON0          equ	683	;# 
 18397   0002AC                     U1CON1          equ	684	;# 
 18398   0002AD                     U1CON2          equ	685	;# 
 18399   0002AE                     U1BRG           equ	686	;# 
 18400   0002AE                     U1BRGL          equ	686	;# 
 18401   0002AF                     U1BRGH          equ	687	;# 
 18402   0002B0                     U1FIFO          equ	688	;# 
 18403   0002B1                     U1UIR           equ	689	;# 
 18404   0002B2                     U1ERRIR         equ	690	;# 
 18405   0002B3                     U1ERRIE         equ	691	;# 
 18406   0002B4                     U2RXB           equ	692	;# 
 18407   0002B4                     U2RXBL          equ	692	;# 
 18408   0002B5                     U2RXCHK         equ	693	;# 
 18409   0002B6                     U2TXB           equ	694	;# 
 18410   0002B6                     U2TXBL          equ	694	;# 
 18411   0002B7                     U2TXCHK         equ	695	;# 
 18412   0002B8                     U2P1            equ	696	;# 
 18413   0002B8                     U2P1L           equ	696	;# 
 18414   0002B9                     U2P1H           equ	697	;# 
 18415   0002BA                     U2P2            equ	698	;# 
 18416   0002BA                     U2P2L           equ	698	;# 
 18417   0002BB                     U2P2H           equ	699	;# 
 18418   0002BC                     U2P3            equ	700	;# 
 18419   0002BC                     U2P3L           equ	700	;# 
 18420   0002BD                     U2P3H           equ	701	;# 
 18421   0002BE                     U2CON0          equ	702	;# 
 18422   0002BF                     U2CON1          equ	703	;# 
 18423   0002C0                     U2CON2          equ	704	;# 
 18424   0002C1                     U2BRG           equ	705	;# 
 18425   0002C1                     U2BRGL          equ	705	;# 
 18426   0002C2                     U2BRGH          equ	706	;# 
 18427   0002C3                     U2FIFO          equ	707	;# 
 18428   0002C4                     U2UIR           equ	708	;# 
 18429   0002C5                     U2ERRIR         equ	709	;# 
 18430   0002C6                     U2ERRIE         equ	710	;# 
 18431   0002C7                     U3RXB           equ	711	;# 
 18432   0002C7                     U3RXBL          equ	711	;# 
 18433   0002C9                     U3TXB           equ	713	;# 
 18434   0002C9                     U3TXBL          equ	713	;# 
 18435   0002CB                     U3P1            equ	715	;# 
 18436   0002CB                     U3P1L           equ	715	;# 
 18437   0002CD                     U3P2            equ	717	;# 
 18438   0002CD                     U3P2L           equ	717	;# 
 18439   0002CF                     U3P3            equ	719	;# 
 18440   0002CF                     U3P3L           equ	719	;# 
 18441   0002D1                     U3CON0          equ	721	;# 
 18442   0002D2                     U3CON1          equ	722	;# 
 18443   0002D3                     U3CON2          equ	723	;# 
 18444   0002D4                     U3BRG           equ	724	;# 
 18445   0002D4                     U3BRGL          equ	724	;# 
 18446   0002D5                     U3BRGH          equ	725	;# 
 18447   0002D6                     U3FIFO          equ	726	;# 
 18448   0002D7                     U3UIR           equ	727	;# 
 18449   0002D8                     U3ERRIR         equ	728	;# 
 18450   0002D9                     U3ERRIE         equ	729	;# 
 18451   0002DA                     U4RXB           equ	730	;# 
 18452   0002DA                     U4RXBL          equ	730	;# 
 18453   0002DC                     U4TXB           equ	732	;# 
 18454   0002DC                     U4TXBL          equ	732	;# 
 18455   0002DE                     U4P1            equ	734	;# 
 18456   0002DE                     U4P1L           equ	734	;# 
 18457   0002E0                     U4P2            equ	736	;# 
 18458   0002E0                     U4P2L           equ	736	;# 
 18459   0002E2                     U4P3            equ	738	;# 
 18460   0002E2                     U4P3L           equ	738	;# 
 18461   0002E4                     U4CON0          equ	740	;# 
 18462   0002E5                     U4CON1          equ	741	;# 
 18463   0002E6                     U4CON2          equ	742	;# 
 18464   0002E7                     U4BRG           equ	743	;# 
 18465   0002E7                     U4BRGL          equ	743	;# 
 18466   0002E8                     U4BRGH          equ	744	;# 
 18467   0002E9                     U4FIFO          equ	745	;# 
 18468   0002EA                     U4UIR           equ	746	;# 
 18469   0002EB                     U4ERRIR         equ	747	;# 
 18470   0002EC                     U4ERRIE         equ	748	;# 
 18471   0002ED                     U5RXB           equ	749	;# 
 18472   0002ED                     U5RXBL          equ	749	;# 
 18473   0002EF                     U5TXB           equ	751	;# 
 18474   0002EF                     U5TXBL          equ	751	;# 
 18475   0002F1                     U5P1            equ	753	;# 
 18476   0002F1                     U5P1L           equ	753	;# 
 18477   0002F3                     U5P2            equ	755	;# 
 18478   0002F3                     U5P2L           equ	755	;# 
 18479   0002F5                     U5P3            equ	757	;# 
 18480   0002F5                     U5P3L           equ	757	;# 
 18481   0002F7                     U5CON0          equ	759	;# 
 18482   0002F8                     U5CON1          equ	760	;# 
 18483   0002F9                     U5CON2          equ	761	;# 
 18484   0002FA                     U5BRG           equ	762	;# 
 18485   0002FA                     U5BRGL          equ	762	;# 
 18486   0002FB                     U5BRGH          equ	763	;# 
 18487   0002FC                     U5FIFO          equ	764	;# 
 18488   0002FD                     U5UIR           equ	765	;# 
 18489   0002FE                     U5ERRIR         equ	766	;# 
 18490   0002FF                     U5ERRIE         equ	767	;# 
 18491   000300                     SMT1TMR         equ	768	;# 
 18492   000300                     SMT1TMRL        equ	768	;# 
 18493   000301                     SMT1TMRH        equ	769	;# 
 18494   000302                     SMT1TMRU        equ	770	;# 
 18495   000303                     SMT1CPR         equ	771	;# 
 18496   000303                     SMT1CPRL        equ	771	;# 
 18497   000304                     SMT1CPRH        equ	772	;# 
 18498   000305                     SMT1CPRU        equ	773	;# 
 18499   000306                     SMT1CPW         equ	774	;# 
 18500   000306                     SMT1CPWL        equ	774	;# 
 18501   000307                     SMT1CPWH        equ	775	;# 
 18502   000308                     SMT1CPWU        equ	776	;# 
 18503   000309                     SMT1PR          equ	777	;# 
 18504   000309                     SMT1PRL         equ	777	;# 
 18505   00030A                     SMT1PRH         equ	778	;# 
 18506   00030B                     SMT1PRU         equ	779	;# 
 18507   00030C                     SMT1CON0        equ	780	;# 
 18508   00030D                     SMT1CON1        equ	781	;# 
 18509   00030E                     SMT1STAT        equ	782	;# 
 18510   00030F                     SMT1CLK         equ	783	;# 
 18511   000310                     SMT1SIG         equ	784	;# 
 18512   000311                     SMT1WIN         equ	785	;# 
 18513   000318                     TMR0L           equ	792	;# 
 18514   000318                     TMR0            equ	792	;# 
 18515   000319                     TMR0H           equ	793	;# 
 18516   000319                     PR0             equ	793	;# 
 18517   00031A                     T0CON0          equ	794	;# 
 18518   00031B                     T0CON1          equ	795	;# 
 18519   00031C                     TMR1            equ	796	;# 
 18520   00031C                     TMR1L           equ	796	;# 
 18521   00031D                     TMR1H           equ	797	;# 
 18522   00031E                     T1CON           equ	798	;# 
 18523   00031E                     TMR1CON         equ	798	;# 
 18524   00031F                     T1GCON          equ	799	;# 
 18525   00031F                     TMR1GCON        equ	799	;# 
 18526   000320                     T1GATE          equ	800	;# 
 18527   000320                     TMR1GATE        equ	800	;# 
 18528   000321                     T1CLK           equ	801	;# 
 18529   000321                     TMR1CLK         equ	801	;# 
 18530   000321                     PR1             equ	801	;# 
 18531   000322                     T2TMR           equ	802	;# 
 18532   000322                     TMR2            equ	802	;# 
 18533   000323                     T2PR            equ	803	;# 
 18534   000323                     PR2             equ	803	;# 
 18535   000324                     T2CON           equ	804	;# 
 18536   000325                     T2HLT           equ	805	;# 
 18537   000326                     T2CLKCON        equ	806	;# 
 18538   000326                     T2CLK           equ	806	;# 
 18539   000327                     T2RST           equ	807	;# 
 18540   000328                     TMR3            equ	808	;# 
 18541   000328                     TMR3L           equ	808	;# 
 18542   000329                     TMR3H           equ	809	;# 
 18543   00032A                     T3CON           equ	810	;# 
 18544   00032A                     TMR3CON         equ	810	;# 
 18545   00032B                     T3GCON          equ	811	;# 
 18546   00032B                     TMR3GCON        equ	811	;# 
 18547   00032C                     T3GATE          equ	812	;# 
 18548   00032C                     TMR3GATE        equ	812	;# 
 18549   00032D                     T3CLK           equ	813	;# 
 18550   00032D                     TMR3CLK         equ	813	;# 
 18551   00032D                     PR3             equ	813	;# 
 18552   00032E                     T4TMR           equ	814	;# 
 18553   00032E                     TMR4            equ	814	;# 
 18554   00032F                     T4PR            equ	815	;# 
 18555   00032F                     PR4             equ	815	;# 
 18556   000330                     T4CON           equ	816	;# 
 18557   000331                     T4HLT           equ	817	;# 
 18558   000332                     T4CLKCON        equ	818	;# 
 18559   000332                     T4CLK           equ	818	;# 
 18560   000333                     T4RST           equ	819	;# 
 18561   000334                     TMR5            equ	820	;# 
 18562   000334                     TMR5L           equ	820	;# 
 18563   000335                     TMR5H           equ	821	;# 
 18564   000336                     T5CON           equ	822	;# 
 18565   000336                     TMR5CON         equ	822	;# 
 18566   000337                     T5GCON          equ	823	;# 
 18567   000337                     TMR5GCON        equ	823	;# 
 18568   000338                     T5GATE          equ	824	;# 
 18569   000338                     TMR5GATE        equ	824	;# 
 18570   000339                     T5CLK           equ	825	;# 
 18571   000339                     TMR5CLK         equ	825	;# 
 18572   000339                     PR5             equ	825	;# 
 18573   00033A                     T6TMR           equ	826	;# 
 18574   00033A                     TMR6            equ	826	;# 
 18575   00033B                     T6PR            equ	827	;# 
 18576   00033B                     PR6             equ	827	;# 
 18577   00033C                     T6CON           equ	828	;# 
 18578   00033D                     T6HLT           equ	829	;# 
 18579   00033E                     T6CLKCON        equ	830	;# 
 18580   00033E                     T6CLK           equ	830	;# 
 18581   00033F                     T6RST           equ	831	;# 
 18582   000340                     CCPR1           equ	832	;# 
 18583   000340                     CCPR1L          equ	832	;# 
 18584   000341                     CCPR1H          equ	833	;# 
 18585   000342                     CCP1CON         equ	834	;# 
 18586   000343                     CCP1CAP         equ	835	;# 
 18587   000344                     CCPR2           equ	836	;# 
 18588   000344                     CCPR2L          equ	836	;# 
 18589   000345                     CCPR2H          equ	837	;# 
 18590   000346                     CCP2CON         equ	838	;# 
 18591   000347                     CCP2CAP         equ	839	;# 
 18592   000348                     CCPR3           equ	840	;# 
 18593   000348                     CCPR3L          equ	840	;# 
 18594   000349                     CCPR3H          equ	841	;# 
 18595   00034A                     CCP3CON         equ	842	;# 
 18596   00034B                     CCP3CAP         equ	843	;# 
 18597   00034C                     CCPTMRS0        equ	844	;# 
 18598   00034F                     CRCDATA         equ	847	;# 
 18599   00034F                     CRCDATAL        equ	847	;# 
 18600   000350                     CRCDATAH        equ	848	;# 
 18601   000351                     CRCDATAU        equ	849	;# 
 18602   000352                     CRCDATAT        equ	850	;# 
 18603   000353                     CRCOUT          equ	851	;# 
 18604   000353                     CRCSHFT         equ	851	;# 
 18605   000353                     CRCXOR          equ	851	;# 
 18606   000353                     CRCOUTL         equ	851	;# 
 18607   000353                     CRCSHFTL        equ	851	;# 
 18608   000353                     CRCSHIFTL       equ	851	;# 
 18609   000353                     CRCXORL         equ	851	;# 
 18610   000354                     CRCOUTH         equ	852	;# 
 18611   000354                     CRCSHFTH        equ	852	;# 
 18612   000354                     CRCSHIFTH       equ	852	;# 
 18613   000354                     CRCXORH         equ	852	;# 
 18614   000355                     CRCOUTU         equ	853	;# 
 18615   000355                     CRCSHFTU        equ	853	;# 
 18616   000355                     CRCSHIFTU       equ	853	;# 
 18617   000355                     CRCXORU         equ	853	;# 
 18618   000356                     CRCOUTT         equ	854	;# 
 18619   000356                     CRCSHFTT        equ	854	;# 
 18620   000356                     CRCSHIFTT       equ	854	;# 
 18621   000356                     CRCXORT         equ	854	;# 
 18622   000357                     CRCCON0         equ	855	;# 
 18623   000358                     CRCCON1         equ	856	;# 
 18624   000359                     CRCCON2         equ	857	;# 
 18625   00035A                     SCANLADR        equ	858	;# 
 18626   00035A                     SCANLADRL       equ	858	;# 
 18627   00035B                     SCANLADRH       equ	859	;# 
 18628   00035C                     SCANLADRU       equ	860	;# 
 18629   00035D                     SCANHADR        equ	861	;# 
 18630   00035D                     SCANHADRL       equ	861	;# 
 18631   00035E                     SCANHADRH       equ	862	;# 
 18632   00035F                     SCANHADRU       equ	863	;# 
 18633   000360                     SCANCON0        equ	864	;# 
 18634   000361                     SCANTRIG        equ	865	;# 
 18635   000362                     IPR0            equ	866	;# 
 18636   000363                     IPR1            equ	867	;# 
 18637   000364                     IPR2            equ	868	;# 
 18638   000365                     IPR3            equ	869	;# 
 18639   000366                     IPR4            equ	870	;# 
 18640   000367                     IPR5            equ	871	;# 
 18641   000368                     IPR6            equ	872	;# 
 18642   000369                     IPR7            equ	873	;# 
 18643   00036A                     IPR8            equ	874	;# 
 18644   00036B                     IPR9            equ	875	;# 
 18645   00036C                     IPR10           equ	876	;# 
 18646   00036D                     IPR11           equ	877	;# 
 18647   00036E                     IPR12           equ	878	;# 
 18648   00036F                     IPR13           equ	879	;# 
 18649   000370                     IPR14           equ	880	;# 
 18650   000371                     IPR15           equ	881	;# 
 18651   000373                     STATUS_CSHAD    equ	883	;# 
 18652   000374                     WREG_CSHAD      equ	884	;# 
 18653   000375                     BSR_CSHAD       equ	885	;# 
 18654   000376                     SHADCON         equ	886	;# 
 18655   000377                     STATUS_SHAD     equ	887	;# 
 18656   000378                     WREG_SHAD       equ	888	;# 
 18657   000379                     BSR_SHAD        equ	889	;# 
 18658   00037A                     PCLATH_SHAD     equ	890	;# 
 18659   00037B                     PCLATU_SHAD     equ	891	;# 
 18660   00037C                     FSR0SH          equ	892	;# 
 18661   00037C                     FSR0L_SHAD      equ	892	;# 
 18662   00037D                     FSR0H_SHAD      equ	893	;# 
 18663   00037E                     FSR1SH          equ	894	;# 
 18664   00037E                     FSR1L_SHAD      equ	894	;# 
 18665   00037F                     FSR1H_SHAD      equ	895	;# 
 18666   000380                     FSR2SH          equ	896	;# 
 18667   000380                     FSR2L_SHAD      equ	896	;# 
 18668   000381                     FSR2H_SHAD      equ	897	;# 
 18669   000382                     PRODSH          equ	898	;# 
 18670   000382                     PRODL_SHAD      equ	898	;# 
 18671   000383                     PRODH_SHAD      equ	899	;# 
 18672   000387                     TU16ACON0       equ	903	;# 
 18673   000388                     TU16ACON1       equ	904	;# 
 18674   000389                     TU16AHLT        equ	905	;# 
 18675   00038A                     TU16APS         equ	906	;# 
 18676   00038B                     TU16ATMR        equ	907	;# 
 18677   00038B                     TU16ACR         equ	907	;# 
 18678   00038B                     TU16ATMRL       equ	907	;# 
 18679   00038B                     TU16ACRL        equ	907	;# 
 18680   00038C                     TU16ATMRH       equ	908	;# 
 18681   00038C                     TU16ACRH        equ	908	;# 
 18682   00038D                     TU16APR         equ	909	;# 
 18683   00038D                     TU16APRL        equ	909	;# 
 18684   00038E                     TU16APRH        equ	910	;# 
 18685   00038F                     TU16ACLK        equ	911	;# 
 18686   000390                     TU16AERS        equ	912	;# 
 18687   000393                     TU16BCON0       equ	915	;# 
 18688   000394                     TU16BCON1       equ	916	;# 
 18689   000395                     TU16BHLT        equ	917	;# 
 18690   000396                     TU16BPS         equ	918	;# 
 18691   000397                     TU16BTMR        equ	919	;# 
 18692   000397                     TU16BCR         equ	919	;# 
 18693   000397                     TU16BTMRL       equ	919	;# 
 18694   000397                     TU16BCRL        equ	919	;# 
 18695   000398                     TU16BTMRH       equ	920	;# 
 18696   000398                     TU16BCRH        equ	920	;# 
 18697   000399                     TU16BPR         equ	921	;# 
 18698   000399                     TU16BPRL        equ	921	;# 
 18699   00039A                     TU16BPRH        equ	922	;# 
 18700   00039B                     TU16BCLK        equ	923	;# 
 18701   00039C                     TU16BERS        equ	924	;# 
 18702   0003BB                     TUCHAIN         equ	955	;# 
 18703   0003BC                     CWG1CLK         equ	956	;# 
 18704   0003BC                     CWG1CLKCON      equ	956	;# 
 18705   0003BD                     CWG1ISM         equ	957	;# 
 18706   0003BE                     CWG1DBR         equ	958	;# 
 18707   0003BF                     CWG1DBF         equ	959	;# 
 18708   0003C0                     CWG1CON0        equ	960	;# 
 18709   0003C1                     CWG1CON1        equ	961	;# 
 18710   0003C2                     CWG1AS0         equ	962	;# 
 18711   0003C3                     CWG1AS1         equ	963	;# 
 18712   0003C4                     CWG1STR         equ	964	;# 
 18713   0003C5                     CWG2CLK         equ	965	;# 
 18714   0003C5                     CWG2CLKCON      equ	965	;# 
 18715   0003C6                     CWG2ISM         equ	966	;# 
 18716   0003C7                     CWG2DBR         equ	967	;# 
 18717   0003C8                     CWG2DBF         equ	968	;# 
 18718   0003C9                     CWG2CON0        equ	969	;# 
 18719   0003CA                     CWG2CON1        equ	970	;# 
 18720   0003CB                     CWG2AS0         equ	971	;# 
 18721   0003CC                     CWG2AS1         equ	972	;# 
 18722   0003CD                     CWG2STR         equ	973	;# 
 18723   0003CE                     CWG3CLK         equ	974	;# 
 18724   0003CE                     CWG3CLKCON      equ	974	;# 
 18725   0003CF                     CWG3ISM         equ	975	;# 
 18726   0003D0                     CWG3DBR         equ	976	;# 
 18727   0003D1                     CWG3DBF         equ	977	;# 
 18728   0003D2                     CWG3CON0        equ	978	;# 
 18729   0003D3                     CWG3CON1        equ	979	;# 
 18730   0003D4                     CWG3AS0         equ	980	;# 
 18731   0003D5                     CWG3AS1         equ	981	;# 
 18732   0003D6                     CWG3STR         equ	982	;# 
 18733   0003D7                     FVRCON          equ	983	;# 
 18734   0003D8                     ADCPCON         equ	984	;# 
 18735   0003D8                     ADCP            equ	984	;# 
 18736   0003D9                     ADLTH           equ	985	;# 
 18737   0003D9                     ADLTHL          equ	985	;# 
 18738   0003DA                     ADLTHH          equ	986	;# 
 18739   0003DB                     ADUTH           equ	987	;# 
 18740   0003DB                     ADUTHL          equ	987	;# 
 18741   0003DC                     ADUTHH          equ	988	;# 
 18742   0003DD                     ADERR           equ	989	;# 
 18743   0003DD                     ADERRL          equ	989	;# 
 18744   0003DE                     ADERRH          equ	990	;# 
 18745   0003DF                     ADSTPT          equ	991	;# 
 18746   0003DF                     ADSTPTL         equ	991	;# 
 18747   0003E0                     ADSTPTH         equ	992	;# 
 18748   0003E1                     ADFLTR          equ	993	;# 
 18749   0003E1                     ADFLTRL         equ	993	;# 
 18750   0003E2                     ADFLTRH         equ	994	;# 
 18751   0003E3                     ADACC           equ	995	;# 
 18752   0003E3                     ADACCL          equ	995	;# 
 18753   0003E4                     ADACCH          equ	996	;# 
 18754   0003E5                     ADACCU          equ	997	;# 
 18755   0003E6                     ADCNT           equ	998	;# 
 18756   0003E7                     ADRPT           equ	999	;# 
 18757   0003E8                     ADPREV          equ	1000	;# 
 18758   0003E8                     ADPREVL         equ	1000	;# 
 18759   0003E9                     ADPREVH         equ	1001	;# 
 18760   0003EA                     ADRES           equ	1002	;# 
 18761   0003EA                     ADRESL          equ	1002	;# 
 18762   0003EB                     ADRESH          equ	1003	;# 
 18763   0003EC                     ADPCH           equ	1004	;# 
 18764   0003EE                     ADACQ           equ	1006	;# 
 18765   0003EE                     ADACQL          equ	1006	;# 
 18766   0003EF                     ADACQH          equ	1007	;# 
 18767   0003F0                     ADCAP           equ	1008	;# 
 18768   0003F1                     ADPRE           equ	1009	;# 
 18769   0003F1                     ADPREL          equ	1009	;# 
 18770   0003F2                     ADPREH          equ	1010	;# 
 18771   0003F3                     ADCON0          equ	1011	;# 
 18772   0003F4                     ADCON1          equ	1012	;# 
 18773   0003F5                     ADCON2          equ	1013	;# 
 18774   0003F6                     ADCON3          equ	1014	;# 
 18775   0003F7                     ADSTAT          equ	1015	;# 
 18776   0003F8                     ADREF           equ	1016	;# 
 18777   0003F9                     ADACT           equ	1017	;# 
 18778   0003FA                     ADCLK           equ	1018	;# 
 18779   0003FB                     ADCTX           equ	1019	;# 
 18780   0003FC                     ADCSEL1         equ	1020	;# 
 18781   0003FD                     ADCSEL2         equ	1021	;# 
 18782   0003FE                     ADCSEL3         equ	1022	;# 
 18783   0003FF                     ADCSEL4         equ	1023	;# 
 18784   000400                     ANSELA          equ	1024	;# 
 18785   000401                     WPUA            equ	1025	;# 
 18786   000402                     ODCONA          equ	1026	;# 
 18787   000403                     SLRCONA         equ	1027	;# 
 18788   000404                     INLVLA          equ	1028	;# 
 18789   000405                     IOCAP           equ	1029	;# 
 18790   000406                     IOCAN           equ	1030	;# 
 18791   000407                     IOCAF           equ	1031	;# 
 18792   000408                     ANSELB          equ	1032	;# 
 18793   000409                     WPUB            equ	1033	;# 
 18794   00040A                     ODCONB          equ	1034	;# 
 18795   00040B                     SLRCONB         equ	1035	;# 
 18796   00040C                     INLVLB          equ	1036	;# 
 18797   00040D                     IOCBP           equ	1037	;# 
 18798   00040E                     IOCBN           equ	1038	;# 
 18799   00040F                     IOCBF           equ	1039	;# 
 18800   000410                     ANSELC          equ	1040	;# 
 18801   000411                     WPUC            equ	1041	;# 
 18802   000412                     ODCONC          equ	1042	;# 
 18803   000413                     SLRCONC         equ	1043	;# 
 18804   000414                     INLVLC          equ	1044	;# 
 18805   000415                     IOCCP           equ	1045	;# 
 18806   000416                     IOCCN           equ	1046	;# 
 18807   000417                     IOCCF           equ	1047	;# 
 18808   000421                     WPUE            equ	1057	;# 
 18809   000424                     INLVLE          equ	1060	;# 
 18810   000425                     IOCEP           equ	1061	;# 
 18811   000426                     IOCEN           equ	1062	;# 
 18812   000427                     IOCEF           equ	1063	;# 
 18813   000440                     NCO1ACC         equ	1088	;# 
 18814   000440                     NCO1ACCL        equ	1088	;# 
 18815   000441                     NCO1ACCH        equ	1089	;# 
 18816   000442                     NCO1ACCU        equ	1090	;# 
 18817   000443                     NCO1INC         equ	1091	;# 
 18818   000443                     NCO1INCL        equ	1091	;# 
 18819   000444                     NCO1INCH        equ	1092	;# 
 18820   000445                     NCO1INCU        equ	1093	;# 
 18821   000446                     NCO1CON         equ	1094	;# 
 18822   000447                     NCO1CLK         equ	1095	;# 
 18823   000448                     NCO2ACC         equ	1096	;# 
 18824   000448                     NCO2ACCL        equ	1096	;# 
 18825   000449                     NCO2ACCH        equ	1097	;# 
 18826   00044A                     NCO2ACCU        equ	1098	;# 
 18827   00044B                     NCO2INC         equ	1099	;# 
 18828   00044B                     NCO2INCL        equ	1099	;# 
 18829   00044C                     NCO2INCH        equ	1100	;# 
 18830   00044D                     NCO2INCU        equ	1101	;# 
 18831   00044E                     NCO2CON         equ	1102	;# 
 18832   00044F                     NCO2CLK         equ	1103	;# 
 18833   000450                     NCO3ACC         equ	1104	;# 
 18834   000450                     NCO3ACCL        equ	1104	;# 
 18835   000451                     NCO3ACCH        equ	1105	;# 
 18836   000452                     NCO3ACCU        equ	1106	;# 
 18837   000453                     NCO3INC         equ	1107	;# 
 18838   000453                     NCO3INCL        equ	1107	;# 
 18839   000454                     NCO3INCH        equ	1108	;# 
 18840   000455                     NCO3INCU        equ	1109	;# 
 18841   000456                     NCO3CON         equ	1110	;# 
 18842   000457                     NCO3CLK         equ	1111	;# 
 18843   000458                     FSCMCON         equ	1112	;# 
 18844   000459                     IVTLOCK         equ	1113	;# 
 18845   00045A                     IVTAD           equ	1114	;# 
 18846   00045A                     IVTADL          equ	1114	;# 
 18847   00045B                     IVTADH          equ	1115	;# 
 18848   00045C                     IVTADU          equ	1116	;# 
 18849   00045D                     IVTBASE         equ	1117	;# 
 18850   00045D                     IVTBASEL        equ	1117	;# 
 18851   00045E                     IVTBASEH        equ	1118	;# 
 18852   00045F                     IVTBASEU        equ	1119	;# 
 18853   000460                     PWM1ERS         equ	1120	;# 
 18854   000461                     PWM1CLK         equ	1121	;# 
 18855   000462                     PWM1LDS         equ	1122	;# 
 18856   000463                     PWM1PR          equ	1123	;# 
 18857   000463                     PWM1PRL         equ	1123	;# 
 18858   000464                     PWM1PRH         equ	1124	;# 
 18859   000465                     PWM1CPRE        equ	1125	;# 
 18860   000466                     PWM1PIPOS       equ	1126	;# 
 18861   000467                     PWM1GIR         equ	1127	;# 
 18862   000468                     PWM1GIE         equ	1128	;# 
 18863   000469                     PWM1CON         equ	1129	;# 
 18864   00046A                     PWM1S1CFG       equ	1130	;# 
 18865   00046B                     PWM1S1P1        equ	1131	;# 
 18866   00046B                     PWM1S1P1L       equ	1131	;# 
 18867   00046C                     PWM1S1P1H       equ	1132	;# 
 18868   00046D                     PWM1S1P2        equ	1133	;# 
 18869   00046D                     PWM1S1P2L       equ	1133	;# 
 18870   00046E                     PWM1S1P2H       equ	1134	;# 
 18871   00046F                     PWM2ERS         equ	1135	;# 
 18872   000470                     PWM2CLK         equ	1136	;# 
 18873   000471                     PWM2LDS         equ	1137	;# 
 18874   000472                     PWM2PR          equ	1138	;# 
 18875   000472                     PWM2PRL         equ	1138	;# 
 18876   000473                     PWM2PRH         equ	1139	;# 
 18877   000474                     PWM2CPRE        equ	1140	;# 
 18878   000475                     PWM2PIPOS       equ	1141	;# 
 18879   000476                     PWM2GIR         equ	1142	;# 
 18880   000477                     PWM2GIE         equ	1143	;# 
 18881   000478                     PWM2CON         equ	1144	;# 
 18882   000479                     PWM2S1CFG       equ	1145	;# 
 18883   00047A                     PWM2S1P1        equ	1146	;# 
 18884   00047A                     PWM2S1P1L       equ	1146	;# 
 18885   00047B                     PWM2S1P1H       equ	1147	;# 
 18886   00047C                     PWM2S1P2        equ	1148	;# 
 18887   00047C                     PWM2S1P2L       equ	1148	;# 
 18888   00047D                     PWM2S1P2H       equ	1149	;# 
 18889   00047E                     PWM3ERS         equ	1150	;# 
 18890   00047F                     PWM3CLK         equ	1151	;# 
 18891   000480                     PWM3LDS         equ	1152	;# 
 18892   000481                     PWM3PR          equ	1153	;# 
 18893   000481                     PWM3PRL         equ	1153	;# 
 18894   000482                     PWM3PRH         equ	1154	;# 
 18895   000483                     PWM3CPRE        equ	1155	;# 
 18896   000484                     PWM3PIPOS       equ	1156	;# 
 18897   000485                     PWM3GIR         equ	1157	;# 
 18898   000486                     PWM3GIE         equ	1158	;# 
 18899   000487                     PWM3CON         equ	1159	;# 
 18900   000488                     PWM3S1CFG       equ	1160	;# 
 18901   000489                     PWM3S1P1        equ	1161	;# 
 18902   000489                     PWM3S1P1L       equ	1161	;# 
 18903   00048A                     PWM3S1P1H       equ	1162	;# 
 18904   00048B                     PWM3S1P2        equ	1163	;# 
 18905   00048B                     PWM3S1P2L       equ	1163	;# 
 18906   00048C                     PWM3S1P2H       equ	1164	;# 
 18907   00048D                     PWM4ERS         equ	1165	;# 
 18908   00048E                     PWM4CLK         equ	1166	;# 
 18909   00048F                     PWM4LDS         equ	1167	;# 
 18910   000490                     PWM4PR          equ	1168	;# 
 18911   000490                     PWM4PRL         equ	1168	;# 
 18912   000491                     PWM4PRH         equ	1169	;# 
 18913   000492                     PWM4CPRE        equ	1170	;# 
 18914   000493                     PWM4PIPOS       equ	1171	;# 
 18915   000494                     PWM4GIR         equ	1172	;# 
 18916   000495                     PWM4GIE         equ	1173	;# 
 18917   000496                     PWM4CON         equ	1174	;# 
 18918   000497                     PWM4S1CFG       equ	1175	;# 
 18919   000498                     PWM4S1P1        equ	1176	;# 
 18920   000498                     PWM4S1P1L       equ	1176	;# 
 18921   000499                     PWM4S1P1H       equ	1177	;# 
 18922   00049A                     PWM4S1P2        equ	1178	;# 
 18923   00049A                     PWM4S1P2L       equ	1178	;# 
 18924   00049B                     PWM4S1P2H       equ	1179	;# 
 18925   00049C                     PWMLOAD         equ	1180	;# 
 18926   00049D                     PWMEN           equ	1181	;# 
 18927   00049E                     PIE0            equ	1182	;# 
 18928   00049F                     PIE1            equ	1183	;# 
 18929   0004A0                     PIE2            equ	1184	;# 
 18930   0004A1                     PIE3            equ	1185	;# 
 18931   0004A2                     PIE4            equ	1186	;# 
 18932   0004A3                     PIE5            equ	1187	;# 
 18933   0004A4                     PIE6            equ	1188	;# 
 18934   0004A5                     PIE7            equ	1189	;# 
 18935   0004A6                     PIE8            equ	1190	;# 
 18936   0004A7                     PIE9            equ	1191	;# 
 18937   0004A8                     PIE10           equ	1192	;# 
 18938   0004A9                     PIE11           equ	1193	;# 
 18939   0004AA                     PIE12           equ	1194	;# 
 18940   0004AB                     PIE13           equ	1195	;# 
 18941   0004AC                     PIE14           equ	1196	;# 
 18942   0004AD                     PIE15           equ	1197	;# 
 18943   0004AE                     PIR0            equ	1198	;# 
 18944   0004AF                     PIR1            equ	1199	;# 
 18945   0004B0                     PIR2            equ	1200	;# 
 18946   0004B1                     PIR3            equ	1201	;# 
 18947   0004B2                     PIR4            equ	1202	;# 
 18948   0004B3                     PIR5            equ	1203	;# 
 18949   0004B4                     PIR6            equ	1204	;# 
 18950   0004B5                     PIR7            equ	1205	;# 
 18951   0004B6                     PIR8            equ	1206	;# 
 18952   0004B7                     PIR9            equ	1207	;# 
 18953   0004B8                     PIR10           equ	1208	;# 
 18954   0004B9                     PIR11           equ	1209	;# 
 18955   0004BA                     PIR12           equ	1210	;# 
 18956   0004BB                     PIR13           equ	1211	;# 
 18957   0004BC                     PIR14           equ	1212	;# 
 18958   0004BD                     PIR15           equ	1213	;# 
 18959   0004BE                     LATA            equ	1214	;# 
 18960   0004BF                     LATB            equ	1215	;# 
 18961   0004C0                     LATC            equ	1216	;# 
 18962   0004C6                     TRISA           equ	1222	;# 
 18963   0004C7                     TRISB           equ	1223	;# 
 18964   0004C8                     TRISC           equ	1224	;# 
 18965   0004CA                     TRISE           equ	1226	;# 
 18966   0004CE                     PORTA           equ	1230	;# 
 18967   0004CF                     PORTB           equ	1231	;# 
 18968   0004D0                     PORTC           equ	1232	;# 
 18969   0004D2                     PORTE           equ	1234	;# 
 18970   0004D6                     INTCON0         equ	1238	;# 
 18971   0004D7                     INTCON1         equ	1239	;# 
 18972   0004D8                     STATUS          equ	1240	;# 
 18973   0004D9                     FSR2            equ	1241	;# 
 18974   0004D9                     FSR2L           equ	1241	;# 
 18975   0004DA                     FSR2H           equ	1242	;# 
 18976   0004DB                     PLUSW2          equ	1243	;# 
 18977   0004DC                     PREINC2         equ	1244	;# 
 18978   0004DD                     POSTDEC2        equ	1245	;# 
 18979   0004DE                     POSTINC2        equ	1246	;# 
 18980   0004DF                     INDF2           equ	1247	;# 
 18981   0004E0                     BSR             equ	1248	;# 
 18982   0004E1                     FSR1            equ	1249	;# 
 18983   0004E1                     FSR1L           equ	1249	;# 
 18984   0004E2                     FSR1H           equ	1250	;# 
 18985   0004E3                     PLUSW1          equ	1251	;# 
 18986   0004E4                     PREINC1         equ	1252	;# 
 18987   0004E5                     POSTDEC1        equ	1253	;# 
 18988   0004E6                     POSTINC1        equ	1254	;# 
 18989   0004E7                     INDF1           equ	1255	;# 
 18990   0004E8                     WREG            equ	1256	;# 
 18991   0004E9                     FSR0            equ	1257	;# 
 18992   0004E9                     FSR0L           equ	1257	;# 
 18993   0004EA                     FSR0H           equ	1258	;# 
 18994   0004EB                     PLUSW0          equ	1259	;# 
 18995   0004EC                     PREINC0         equ	1260	;# 
 18996   0004ED                     POSTDEC0        equ	1261	;# 
 18997   0004EE                     POSTINC0        equ	1262	;# 
 18998   0004EF                     INDF0           equ	1263	;# 
 18999   0004F0                     PCON0           equ	1264	;# 
 19000   0004F1                     PCON1           equ	1265	;# 
 19001   0004F2                     CPUDOZE         equ	1266	;# 
 19002   0004F3                     PROD            equ	1267	;# 
 19003   0004F3                     PRODL           equ	1267	;# 
 19004   0004F4                     PRODH           equ	1268	;# 
 19005   0004F5                     TABLAT          equ	1269	;# 
 19006   0004F6                     TBLPTR          equ	1270	;# 
 19007   0004F6                     TBLPTRL         equ	1270	;# 
 19008   0004F7                     TBLPTRH         equ	1271	;# 
 19009   0004F8                     TBLPTRU         equ	1272	;# 
 19010   0004F9                     PCLAT           equ	1273	;# 
 19011   0004F9                     PCL             equ	1273	;# 
 19012   0004FA                     PCLATH          equ	1274	;# 
 19013   0004FB                     PCLATU          equ	1275	;# 
 19014   0004FC                     STKPTR          equ	1276	;# 
 19015   0004FD                     TOS             equ	1277	;# 
 19016   0004FD                     TOSL            equ	1277	;# 
 19017   0004FE                     TOSH            equ	1278	;# 
 19018   0004FF                     TOSU            equ	1279	;# 
 19019   3803FA                     	org	1018	;# 
 19020   3803FA  FF                 	db	255	;# 
 19021                           
 19022                           	psect	idataBANK5
 19023   008376                     __pidataBANK5:
 19024                           	callstack 0
 19025                           
 19026                           ;initializer for _flashBuffer
 19027   008376  00                 	db	0
 19028   008377  37                 	db	55
 19029                           
 19030                           	psect	mediumconst
 19031   00FE58                     __pmediumconst:
 19032                           	callstack 0
 19033   00FE58  00                 	db	0
 19034   00FE59                     _priorities:
 19035                           	callstack 0
 19036   00FE59  01                 	db	1
 19037   00FE5A  01                 	db	1
 19038   00FE5B  03                 	db	3
 19039   00FE5C  02                 	db	2
 19040   00FE5D  02                 	db	2
 19041   00FE5E  02                 	db	2
 19042   00FE5F  02                 	db	2
 19043   00FE60  03                 	db	3
 19044   00FE61  02                 	db	2
 19045   00FE62  02                 	db	2
 19046   00FE63  03                 	db	3
 19047   00FE64  01                 	db	1
 19048   00FE65  00                 	db	0
 19049   00FE66  00                 	db	0
 19050   00FE67  01                 	db	1
 19051   00FE68  01                 	db	1
 19052   00FE69  01                 	db	1
 19053   00FE6A  01                 	db	1
 19054   00FE6B  01                 	db	1
 19055   00FE6C  01                 	db	1
 19056   00FE6D  01                 	db	1
 19057   00FE6E  01                 	db	1
 19058   00FE6F  01                 	db	1
 19059   00FE70  01                 	db	1
 19060   00FE71  01                 	db	1
 19061   00FE72  01                 	db	1
 19062   00FE73  01                 	db	1
 19063   00FE74  01                 	db	1
 19064   00FE75  01                 	db	1
 19065   00FE76  01                 	db	1
 19066   00FE77  01                 	db	1
 19067   00FE78  01                 	db	1
 19068   00FE79  01                 	db	1
 19069   00FE7A  01                 	db	1
 19070   00FE7B  01                 	db	1
 19071   00FE7C  01                 	db	1
 19072   00FE7D  01                 	db	1
 19073   00FE7E  01                 	db	1
 19074   00FE7F  01                 	db	1
 19075   00FE80  01                 	db	1
 19076   00FE81  01                 	db	1
 19077   00FE82  01                 	db	1
 19078   00FE83  01                 	db	1
 19079   00FE84  01                 	db	1
 19080   00FE85  01                 	db	1
 19081   00FE86  01                 	db	1
 19082   00FE87  01                 	db	1
 19083   00FE88  01                 	db	1
 19084   00FE89  01                 	db	1
 19085   00FE8A  01                 	db	1
 19086   00FE8B  01                 	db	1
 19087   00FE8C  01                 	db	1
 19088   00FE8D  01                 	db	1
 19089   00FE8E  01                 	db	1
 19090   00FE8F  01                 	db	1
 19091   00FE90  01                 	db	1
 19092   00FE91  01                 	db	1
 19093   00FE92  01                 	db	1
 19094   00FE93  01                 	db	1
 19095   00FE94  01                 	db	1
 19096   00FE95  01                 	db	1
 19097   00FE96  01                 	db	1
 19098   00FE97  01                 	db	1
 19099   00FE98  00                 	db	0
 19100   00FE99  01                 	db	1
 19101   00FE9A  01                 	db	1
 19102   00FE9B  01                 	db	1
 19103   00FE9C  01                 	db	1
 19104   00FE9D  01                 	db	1
 19105   00FE9E  01                 	db	1
 19106   00FE9F  01                 	db	1
 19107   00FEA0  01                 	db	1
 19108   00FEA1  01                 	db	1
 19109   00FEA2  00                 	db	0
 19110   00FEA3  01                 	db	1
 19111   00FEA4  01                 	db	1
 19112   00FEA5  00                 	db	0
 19113   00FEA6  00                 	db	0
 19114   00FEA7  00                 	db	0
 19115   00FEA8  00                 	db	0
 19116   00FEA9  00                 	db	0
 19117   00FEAA  00                 	db	0
 19118   00FEAB  00                 	db	0
 19119   00FEAC  00                 	db	0
 19120   00FEAD  00                 	db	0
 19121   00FEAE  00                 	db	0
 19122   00FEAF  00                 	db	0
 19123   00FEB0  00                 	db	0
 19124   00FEB1  00                 	db	0
 19125   00FEB2  00                 	db	0
 19126   00FEB3  00                 	db	0
 19127   00FEB4  00                 	db	0
 19128   00FEB5  00                 	db	0
 19129   00FEB6  01                 	db	1
 19130   00FEB7  01                 	db	1
 19131   00FEB8  01                 	db	1
 19132   00FEB9  01                 	db	1
 19133   00FEBA  01                 	db	1
 19134   00FEBB  03                 	db	3
 19135   00FEBC  01                 	db	1
 19136   00FEBD  01                 	db	1
 19137   00FEBE  01                 	db	1
 19138   00FEBF  01                 	db	1
 19139   00FEC0  01                 	db	1
 19140   00FEC1  01                 	db	1
 19141   00FEC2  01                 	db	1
 19142   00FEC3  01                 	db	1
 19143   00FEC4  00                 	db	0
 19144   00FEC5  00                 	db	0
 19145   00FEC6  00                 	db	0
 19146   00FEC7  00                 	db	0
 19147   00FEC8  00                 	db	0
 19148   00FEC9  00                 	db	0
 19149   00FECA  00                 	db	0
 19150   00FECB  00                 	db	0
 19151   00FECC  01                 	db	1
 19152   00FECD  00                 	db	0
 19153   00FECE  01                 	db	1
 19154   00FECF  01                 	db	1
 19155   00FED0  01                 	db	1
 19156   00FED1  01                 	db	1
 19157   00FED2  01                 	db	1
 19158   00FED3  01                 	db	1
 19159   00FED4  00                 	db	0
 19160   00FED5  01                 	db	1
 19161   00FED6  01                 	db	1
 19162   00FED7  01                 	db	1
 19163   00FED8  01                 	db	1
 19164   00FED9  01                 	db	1
 19165   00FEDA  01                 	db	1
 19166   00FEDB  01                 	db	1
 19167   00FEDC  00                 	db	0
 19168   00FEDD  01                 	db	1
 19169   00FEDE  01                 	db	1
 19170   00FEDF  01                 	db	1
 19171   00FEE0  01                 	db	1
 19172   00FEE1  01                 	db	1
 19173   00FEE2  01                 	db	1
 19174   00FEE3  00                 	db	0
 19175   00FEE4  01                 	db	1
 19176   00FEE5  00                 	db	0
 19177   00FEE6  00                 	db	0
 19178   00FEE7  00                 	db	0
 19179   00FEE8  00                 	db	0
 19180   00FEE9  00                 	db	0
 19181   00FEEA  00                 	db	0
 19182   00FEEB  00                 	db	0
 19183   00FEEC  00                 	db	0
 19184   00FEED  00                 	db	0
 19185   00FEEE  00                 	db	0
 19186   00FEEF  00                 	db	0
 19187   00FEF0  00                 	db	0
 19188   00FEF1  00                 	db	0
 19189   00FEF2  00                 	db	0
 19190   00FEF3  00                 	db	0
 19191   00FEF4  00                 	db	0
 19192   00FEF5  01                 	db	1
 19193   00FEF6  01                 	db	1
 19194   00FEF7  01                 	db	1
 19195   00FEF8  01                 	db	1
 19196   00FEF9  01                 	db	1
 19197   00FEFA  01                 	db	1
 19198   00FEFB  01                 	db	1
 19199   00FEFC  01                 	db	1
 19200   00FEFD  01                 	db	1
 19201   00FEFE  01                 	db	1
 19202   00FEFF  01                 	db	1
 19203   00FF00  00                 	db	0
 19204   00FF01  00                 	db	0
 19205   00FF02  01                 	db	1
 19206   00FF03  01                 	db	1
 19207   00FF04  00                 	db	0
 19208   00FF05  00                 	db	0
 19209   00FF06  00                 	db	0
 19210   00FF07  00                 	db	0
 19211   00FF08  00                 	db	0
 19212   00FF09  00                 	db	0
 19213   00FF0A  00                 	db	0
 19214   00FF0B  00                 	db	0
 19215   00FF0C  01                 	db	1
 19216   00FF0D  00                 	db	0
 19217   00FF0E  00                 	db	0
 19218   00FF0F  01                 	db	1
 19219   00FF10  01                 	db	1
 19220   00FF11  01                 	db	1
 19221   00FF12  00                 	db	0
 19222   00FF13  00                 	db	0
 19223   00FF14  00                 	db	0
 19224   00FF15  01                 	db	1
 19225   00FF16  01                 	db	1
 19226   00FF17  01                 	db	1
 19227   00FF18  01                 	db	1
 19228   00FF19  01                 	db	1
 19229   00FF1A  01                 	db	1
 19230   00FF1B  01                 	db	1
 19231   00FF1C  00                 	db	0
 19232   00FF1D  01                 	db	1
 19233   00FF1E  01                 	db	1
 19234   00FF1F  01                 	db	1
 19235   00FF20  01                 	db	1
 19236   00FF21  01                 	db	1
 19237   00FF22  01                 	db	1
 19238   00FF23  01                 	db	1
 19239   00FF24  01                 	db	1
 19240   00FF25  00                 	db	0
 19241   00FF26  00                 	db	0
 19242   00FF27  00                 	db	0
 19243   00FF28  00                 	db	0
 19244   00FF29  00                 	db	0
 19245   00FF2A  00                 	db	0
 19246   00FF2B  01                 	db	1
 19247   00FF2C  01                 	db	1
 19248   00FF2D  00                 	db	0
 19249   00FF2E  00                 	db	0
 19250   00FF2F  01                 	db	1
 19251   00FF30  01                 	db	1
 19252   00FF31  01                 	db	1
 19253   00FF32  00                 	db	0
 19254   00FF33  00                 	db	0
 19255   00FF34  00                 	db	0
 19256   00FF35  01                 	db	1
 19257   00FF36  01                 	db	1
 19258   00FF37  00                 	db	0
 19259   00FF38  01                 	db	1
 19260   00FF39  01                 	db	1
 19261   00FF3A  01                 	db	1
 19262   00FF3B  00                 	db	0
 19263   00FF3C  00                 	db	0
 19264   00FF3D  01                 	db	1
 19265   00FF3E  00                 	db	0
 19266   00FF3F  01                 	db	1
 19267   00FF40  01                 	db	1
 19268   00FF41  01                 	db	1
 19269   00FF42  01                 	db	1
 19270   00FF43  01                 	db	1
 19271   00FF44  00                 	db	0
 19272   00FF45  00                 	db	0
 19273   00FF46  00                 	db	0
 19274   00FF47  00                 	db	0
 19275   00FF48  00                 	db	0
 19276   00FF49  00                 	db	0
 19277   00FF4A  00                 	db	0
 19278   00FF4B  00                 	db	0
 19279   00FF4C  00                 	db	0
 19280   00FF4D  00                 	db	0
 19281   00FF4E  00                 	db	0
 19282   00FF4F  00                 	db	0
 19283   00FF50  00                 	db	0
 19284   00FF51  00                 	db	0
 19285   00FF52  00                 	db	0
 19286   00FF53  01                 	db	1
 19287   00FF54  00                 	db	0
 19288   00FF55  00                 	db	0
 19289   00FF56  00                 	db	0
 19290   00FF57  00                 	db	0
 19291   00FF58  00                 	db	0
 19292   00FF59                     __end_of_priorities:
 19293                           	callstack 0
 19294   00FF59                     _defaultColours:
 19295                           	callstack 0
 19296   00FF59  00                 	db	0
 19297   00FF5A  00                 	db	0
 19298   00FF5B  00                 	db	0
 19299   00FF5C  07                 	db	7
 19300   00FF5D  07                 	db	7
 19301   00FF5E  07                 	db	7
 19302   00FF5F  07                 	db	7
 19303   00FF60  00                 	db	0
 19304   00FF61  00                 	db	0
 19305   00FF62  00                 	db	0
 19306   00FF63  07                 	db	7
 19307   00FF64  00                 	db	0
 19308   00FF65  00                 	db	0
 19309   00FF66  00                 	db	0
 19310   00FF67  07                 	db	7
 19311   00FF68  3F                 	db	63
 19312   00FF69  1F                 	db	31
 19313   00FF6A  00                 	db	0
 19314   00FF6B  27                 	db	39
 19315   00FF6C  00                 	db	0
 19316   00FF6D  27                 	db	39
 19317   00FF6E  00                 	db	0
 19318   00FF6F  27                 	db	39
 19319   00FF70  27                 	db	39
 19320   00FF71  0F                 	db	15
 19321   00FF72  0F                 	db	15
 19322   00FF73  0F                 	db	15
 19323   00FF74  FF                 	db	255
 19324   00FF75  00                 	db	0
 19325   00FF76  00                 	db	0
 19326   00FF77  00                 	db	0
 19327   00FF78  FF                 	db	255
 19328   00FF79  00                 	db	0
 19329   00FF7A  00                 	db	0
 19330   00FF7B  00                 	db	0
 19331   00FF7C  FF                 	db	255
 19332   00FF7D  FF                 	db	255
 19333   00FF7E  FF                 	db	255
 19334   00FF7F  00                 	db	0
 19335   00FF80  FF                 	db	255
 19336   00FF81  00                 	db	0
 19337   00FF82  FF                 	db	255
 19338   00FF83  00                 	db	0
 19339   00FF84  FF                 	db	255
 19340   00FF85  FF                 	db	255
 19341   00FF86  FF                 	db	255
 19342   00FF87  FF                 	db	255
 19343   00FF88  FF                 	db	255
 19344   00FF89                     __end_of_defaultColours:
 19345                           	callstack 0
 19346   000820                     _paramBlock_absaddr set	2080
 19347   00FF89                     _services:
 19348                           	callstack 0
 19349   00FF89  EB                 	db	low _canService
 19350   00FF8A  FF                 	db	high _canService
 19351   00FF8B  DD                 	db	low _mnsService
 19352   00FF8C  FF                 	db	high _mnsService
 19353   00FF8D  CF                 	db	low _nvService
 19354   00FF8E  FF                 	db	high _nvService
 19355   00FF8F  C1                 	db	low _bootService
 19356   00FF90  FF                 	db	high _bootService
 19357   00FF91  B3                 	db	low _eventTeachService
 19358   00FF92  FF                 	db	high _eventTeachService
 19359   00FF93  A5                 	db	low _eventConsumerService
 19360   00FF94  FF                 	db	high _eventConsumerService
 19361   00FF95                     __end_of_services:
 19362                           	callstack 0
 19363   00FF95                     _bl_version:
 19364                           	callstack 0
 19365   00FF95  42                 	db	66
 19366   00FF96  4C                 	db	76
 19367   00FF97  5F                 	db	95
 19368   00FF98  56                 	db	86
 19369   00FF99  45                 	db	69
 19370   00FF9A  52                 	db	82
 19371   00FF9B  53                 	db	83
 19372   00FF9C  49                 	db	73
 19373   00FF9D  4F                 	db	79
 19374   00FF9E  4E                 	db	78
 19375   00FF9F  3D                 	db	61
 19376   00FFA0                     __end_of_bl_version:
 19377                           	callstack 0
 19378   000848                     _name_absaddr   set	2120
 19379   00FFA0                     _canPri:
 19380                           	callstack 0
 19381   00FFA0  0B                 	db	11
 19382   00FFA1  0A                 	db	10
 19383   00FFA2  09                 	db	9
 19384   00FFA3  08                 	db	8
 19385   00FFA4  00                 	db	0
 19386   00FFA5                     __end_of_canPri:
 19387                           	callstack 0
 19388   00FFA5                     _eventConsumerService:
 19389                           	callstack 0
 19390   00FFA5  06                 	db	6
 19391   00FFA6  02                 	db	2
 19392   00FFA7  00                 	db	0
 19393   00FFA8  00                 	db	0
 19394   00FFA9  DA                 	db	low _consumerPowerUp
 19395   00FFAA  7D                 	db	high _consumerPowerUp
 19396   00FFAB  B8                 	db	low _consumerProcessMessage
 19397   00FFAC  3C                 	db	high _consumerProcessMessage
 19398   00FFAD  00                 	db	0
 19399   00FFAE  00                 	db	0
 19400   00FFAF  54                 	db	low _consumerEsdData
 19401   00FFB0  82                 	db	high _consumerEsdData
 19402   00FFB1  A8                 	db	low _consumerGetDiagnostic
 19403   00FFB2  7F                 	db	high _consumerGetDiagnostic
 19404   00FFB3                     __end_of_eventConsumerService:
 19405                           	callstack 0
 19406   00FFB3                     _eventTeachService:
 19407                           	callstack 0
 19408   00FFB3  04                 	db	4
 19409   00FFB4  01                 	db	1
 19410   00FFB5  50                 	db	low _teachFactoryReset
 19411   00FFB6  83                 	db	high _teachFactoryReset
 19412   00FFB7  62                 	db	low _teachPowerUp
 19413   00FFB8  7D                 	db	high _teachPowerUp
 19414   00FFB9  F8                 	db	low _teachProcessMessage
 19415   00FFBA  16                 	db	high _teachProcessMessage
 19416   00FFBB  00                 	db	0
 19417   00FFBC  00                 	db	0
 19418   00FFBD  18                 	db	low _teachGetESDdata
 19419   00FFBE  7F                 	db	high _teachGetESDdata
 19420   00FFBF  D8                 	db	low _teachGetDiagnostic
 19421   00FFC0  7F                 	db	high _teachGetDiagnostic
 19422   00FFC1                     __end_of_eventTeachService:
 19423                           	callstack 0
 19424   00FFC1                     _bootService:
 19425                           	callstack 0
 19426   00FFC1  0A                 	db	10
 19427   00FFC2  03                 	db	3
 19428   00FFC3  00                 	db	0
 19429   00FFC4  00                 	db	0
 19430   00FFC5  3E                 	db	low _bootPowerUp
 19431   00FFC6  5C                 	db	high _bootPowerUp
 19432   00FFC7  DC                 	db	low _bootProcessMessage
 19433   00FFC8  6B                 	db	high _bootProcessMessage
 19434   00FFC9  00                 	db	0
 19435   00FFCA  00                 	db	0
 19436   00FFCB  AE                 	db	low _bootEsdData
 19437   00FFCC  7E                 	db	high _bootEsdData
 19438   00FFCD  00                 	db	0
 19439   00FFCE  00                 	db	0
 19440   00FFCF                     __end_of_bootService:
 19441                           	callstack 0
 19442   00FFCF                     _nvService:
 19443                           	callstack 0
 19444   00FFCF  02                 	db	2
 19445   00FFD0  02                 	db	2
 19446   00FFD1  22                 	db	low _nvFactoryReset
 19447   00FFD2  7D                 	db	high _nvFactoryReset
 19448   00FFD3  A0                 	db	low _nvPowerUp
 19449   00FFD4  7D                 	db	high _nvPowerUp
 19450   00FFD5  98                 	db	low _nvProcessMessage
 19451   00FFD6  32                 	db	high _nvProcessMessage
 19452   00FFD7  00                 	db	0
 19453   00FFD8  00                 	db	0
 19454   00FFD9  D2                 	db	low _nvGetESDdata
 19455   00FFDA  81                 	db	high _nvGetESDdata
 19456   00FFDB  48                 	db	low _nvGetDiagnostic
 19457   00FFDC  7F                 	db	high _nvGetDiagnostic
 19458   00FFDD                     __end_of_nvService:
 19459                           	callstack 0
 19460   00FFDD                     _mnsService:
 19461                           	callstack 0
 19462   00FFDD  01                 	db	1
 19463   00FFDE  02                 	db	2
 19464   00FFDF  68                 	db	low _mnsFactoryReset
 19465   00FFE0  76                 	db	high _mnsFactoryReset
 19466   00FFE1  58                 	db	low _mnsPowerUp
 19467   00FFE2  4F                 	db	high _mnsPowerUp
 19468   00FFE3  06                 	db	low _mnsProcessMessage
 19469   00FFE4  0A                 	db	high _mnsProcessMessage
 19470   00FFE5  00                 	db	low _mnsPoll
 19471   00FFE6  26                 	db	high _mnsPoll
 19472   00FFE7  00                 	db	0
 19473   00FFE8  00                 	db	0
 19474   00FFE9  78                 	db	low _mnsGetDiagnostic
 19475   00FFEA  7F                 	db	high _mnsGetDiagnostic
 19476   00FFEB                     __end_of_mnsService:
 19477                           	callstack 0
 19478   00FFEB                     _canService:
 19479                           	callstack 0
 19480   00FFEB  03                 	db	3
 19481   00FFEC  02                 	db	2
 19482   00FFED  70                 	db	low _canFactoryReset
 19483   00FFEE  82                 	db	high _canFactoryReset
 19484   00FFEF  8C                 	db	low _canPowerUp
 19485   00FFF0  4C                 	db	high _canPowerUp
 19486   00FFF1  26                 	db	low _canProcessMessage
 19487   00FFF2  5D                 	db	high _canProcessMessage
 19488   00FFF3  4A                 	db	low _canPoll
 19489   00FFF4  83                 	db	high _canPoll
 19490   00FFF5  F4                 	db	low _canEsdData
 19491   00FFF6  81                 	db	high _canEsdData
 19492   00FFF7  36                 	db	low _canGetDiagnostic
 19493   00FFF8  66                 	db	high _canGetDiagnostic
 19494   00FFF9                     __end_of_canService:
 19495                           	callstack 0
 19496   00FFF9                     _canTransport:
 19497                           	callstack 0
 19498   00FFF9  9E                 	db	low _canSendMessage
 19499   00FFFA  2A                 	db	high _canSendMessage
 19500   00FFFB  3E                 	db	low _canReceiveMessage
 19501   00FFFC  42                 	db	high _canReceiveMessage
 19502   00FFFD  02                 	db	low _canWaitForTxQueueToDrain
 19503   00FFFE  83                 	db	high _canWaitForTxQueueToDrain
 19504   00FFFF                     __end_of_canTransport:
 19505                           	callstack 0
 19506   000820                     _paramBlock_absaddr set	2080
 19507   00FFFF  00                 	db	0	; dummy byte at the end
 19508   00FE58                     __smallconst    set	__pmediumconst
 19509   00FE58                     __mediumconst   set	__pmediumconst
 19510   000003                     __activetblptr  equ	3
 19511                           
 19512                           	psect	_paramBlock_text
 19513   000820                     __p_paramBlock_text:
 19514                           	callstack 0
 19515   000820                     _paramBlock:
 19516                           	callstack 0
 19517   000820  A5                 	db	165
 19518   000821  61                 	db	97
 19519   000822  FC                 	db	252
 19520   000823  FF                 	db	255
 19521   000824  FC                 	db	252
 19522   000825  31                 	db	49
 19523   000826  01                 	db	1
 19524   000827  09                 	db	9
 19525   000828  17                 	db	23
 19526   000829  01                 	db	1
 19527   00082A  00                 	db	0
 19528   00082B  08                 	db	8
 19529   00082C  00                 	db	0
 19530   00082D  00                 	db	0
 19531   00082E  00                 	db	0
 19532   00082F  00                 	db	0
 19533   000830  00                 	db	0
 19534   000831  00                 	db	0
 19535   000832  01                 	db	1
 19536   000833  01                 	db	1
 19537   000834  00                 	db	0
 19538   000835  00                 	db	0
 19539   000836  00                 	db	0
 19540   000837  00                 	db	0
 19541   000838  14                 	db	20
 19542   000839  00                 	db	0
 19543   00083A  48                 	db	72
 19544   00083B  08                 	db	8
 19545   00083C  00                 	db	0
 19546   00083D  00                 	db	0
 19547   00083E  BE                 	db	190
 19548   00083F  04                 	db	4
 19549   000840                     __end_of_paramBlock:
 19550                           	callstack 0
 19551   000848                     _name_absaddr   set	2120
 19552                           
 19553                           	psect	_name_text
 19554   000848                     __p_name_text:
 19555                           	callstack 0
 19556   000848                     _name:
 19557                           	callstack 0
 19558   000848  41                 	db	65
 19559   000849  52                 	db	82
 19560   00084A  47                 	db	71
 19561   00084B  42                 	db	66
 19562   00084C  20                 	db	32
 19563   00084D  20                 	db	32
 19564   00084E  20                 	db	32
 19565   00084F  00                 	db	0
 19566   000850                     __end_of_name:
 19567                           	callstack 0
 19568   000043                     _NVMADR         set	67
 19569   0000F9                     _DMAnSSA        set	249
 19570   0000F0                     _DMAnDSA        set	240
 19571   0000EE                     _DMAnDSZ        set	238
 19572   0000F7                     _DMAnSSZ        set	247
 19573   000082                     _SPI1TCNT       set	130
 19574   0000AF                     _OSCCON3bits    set	175
 19575   0000AD                     _OSCCON1bits    set	173
 19576   000042                     _NVMLOCK        set	66
 19577   000046                     _NVMDATL        set	70
 19578   000043                     _NVMADRL        set	67
 19579   000044                     _NVMADRH        set	68
 19580   000045                     _NVMADRU        set	69
 19581   000040                     _NVMCON0bits    set	64
 19582   000041                     _NVMCON1bits    set	65
 19583   00006A                     _MD1CON0bits    set	106
 19584   0000FE                     _DMAnAIRQ       set	254
 19585   0000FF                     _DMAnSIRQ       set	255
 19586   0000FD                     _DMAnCON1bits   set	253
 19587   0000E8                     _DMASELECT      set	232
 19588   00006C                     _MD1SRC         set	108
 19589   00006D                     _MD1CARL        set	109
 19590   00006E                     _MD1CARH        set	110
 19591   00006B                     _MD1CON1        set	107
 19592   00006A                     _MD1CON0        set	106
 19593   0000DF                     _CLCnGLS3       set	223
 19594   0000DE                     _CLCnGLS2       set	222
 19595   0000DD                     _CLCnGLS1       set	221
 19596   0000DC                     _CLCnGLS0       set	220
 19597   0000DB                     _CLCnSEL3       set	219
 19598   0000DA                     _CLCnSEL2       set	218
 19599   0000D9                     _CLCnSEL1       set	217
 19600   0000D8                     _CLCnSEL0       set	216
 19601   0000D7                     _CLCnPOL        set	215
 19602   0000D6                     _CLCnCON        set	214
 19603   0000D5                     _CLCSELECT      set	213
 19604   00008A                     _SPI1INTF       set	138
 19605   000089                     _SPI1BAUDbits   set	137
 19606   00008C                     _SPI1CLKbits    set	140
 19607   000086                     _SPI1CON2bits   set	134
 19608   000085                     _SPI1CON1bits   set	133
 19609   000088                     _SPI1TWIDTHbits set	136
 19610   000084                     _SPI1CON0bits   set	132
 19611   0000FC                     _DMAnCON0bits   set	252
 19612   000081                     _SPI1TXB        set	129
 19613   000158                     _C1TXQUA        set	344
 19614   00017C                     _C1FIFOUA3      set	380
 19615   000170                     _C1FIFOUA2      set	368
 19616   000164                     _C1FIFOUA1      set	356
 19617   00014C                     _C1FIFOBA       set	332
 19618   000102                     _C1CONUbits     set	258
 19619   000103                     _C1CONTbits     set	259
 19620   000175                     _C1FIFOCON3Hbits set	373
 19621   000179                     _C1FIFOSTA3Hbits set	377
 19622   00016D                     _C1FIFOSTA2Hbits set	365
 19623   00016C                     _C1FIFOSTA2Lbits set	364
 19624   000138                     _C1BDIAG0Lbits  set	312
 19625   000139                     _C1BDIAG0Hbits  set	313
 19626   000136                     _C1TRECU        set	310
 19627   000160                     _C1FIFOSTA1Lbits set	352
 19628   00015D                     _C1FIFOCON1Hbits set	349
 19629   00011D                     _C1INTHbits     set	285
 19630   000178                     _C1FIFOSTA3Lbits set	376
 19631   00011F                     _C1INTTbits     set	287
 19632   00011E                     _C1INTUbits     set	286
 19633   000180                     _C1FLTCON0L     set	384
 19634   000193                     _C1MASK0T       set	403
 19635   000192                     _C1MASK0U       set	402
 19636   000191                     _C1MASK0H       set	401
 19637   000190                     _C1MASK0L       set	400
 19638   00018F                     _C1FLTOBJ0T     set	399
 19639   00018E                     _C1FLTOBJ0U     set	398
 19640   00018D                     _C1FLTOBJ0H     set	397
 19641   00018C                     _C1FLTOBJ0L     set	396
 19642   000177                     _C1FIFOCON3T    set	375
 19643   000176                     _C1FIFOCON3U    set	374
 19644   000175                     _C1FIFOCON3H    set	373
 19645   000174                     _C1FIFOCON3L    set	372
 19646   00016B                     _C1FIFOCON2T    set	363
 19647   00016A                     _C1FIFOCON2U    set	362
 19648   000169                     _C1FIFOCON2H    set	361
 19649   000168                     _C1FIFOCON2L    set	360
 19650   00015F                     _C1FIFOCON1T    set	351
 19651   00015E                     _C1FIFOCON1U    set	350
 19652   00015D                     _C1FIFOCON1H    set	349
 19653   00015C                     _C1FIFOCON1L    set	348
 19654   000153                     _C1TXQCONT      set	339
 19655   000152                     _C1TXQCONU      set	338
 19656   000151                     _C1TXQCONH      set	337
 19657   000150                     _C1TXQCONL      set	336
 19658   000107                     _C1NBTCFGT      set	263
 19659   000106                     _C1NBTCFGU      set	262
 19660   000105                     _C1NBTCFGH      set	261
 19661   000104                     _C1NBTCFGL      set	260
 19662   000103                     _C1CONT         set	259
 19663   000102                     _C1CONU         set	258
 19664   000101                     _C1CONH         set	257
 19665   000100                     _C1CONL         set	256
 19666   000101                     _C1CONHbits     set	257
 19667   00023D                     _CANRXPPS       set	573
 19668   00020B                     _RB2PPS         set	523
 19669   000217                     _RC6PPS         set	535
 19670   000216                     _RC5PPS         set	534
 19671   000215                     _RC4PPS         set	533
 19672   000214                     _RC3PPS         set	532
 19673   000213                     _RC2PPS         set	531
 19674   000212                     _RC1PPS         set	530
 19675   000211                     _RC0PPS         set	529
 19676   000318                     _TMR0L          set	792
 19677   000319                     _TMR0H          set	793
 19678   00031A                     _T0CON0bits     set	794
 19679   00031B                     _T0CON1bits     set	795
 19680   000362                     _IPR0bits       set	866
 19681   000367                     _IPR5           set	871
 19682   000330                     _T4CONbits      set	816
 19683   000324                     _T2CONbits      set	804
 19684   00032F                     _T4PR           set	815
 19685   000333                     _T4RST          set	819
 19686   000331                     _T4HLT          set	817
 19687   000332                     _T4CLKCON       set	818
 19688   000330                     _T4CON          set	816
 19689   000323                     _T2PR           set	803
 19690   000327                     _T2RST          set	807
 19691   000325                     _T2HLT          set	805
 19692   000326                     _T2CLKCON       set	806
 19693   000324                     _T2CON          set	804
 19694   001B2F                     _TMR0IP         set	6959
 19695   00250F                     _TMR0IE         set	9487
 19696   00258F                     _TMR0IF         set	9615
 19697   000459                     _IVTLOCKbits    set	1113
 19698   000459                     _IVTLOCK        set	1113
 19699   00045D                     _IVTBASEL       set	1117
 19700   00045E                     _IVTBASEH       set	1118
 19701   00045F                     _IVTBASEU       set	1119
 19702   0004BF                     _LATBbits       set	1215
 19703   0004C6                     _TRISAbits      set	1222
 19704   0004F5                     _TABLAT         set	1269
 19705   0004F6                     _TBLPTRL        set	1270
 19706   0004F7                     _TBLPTRH        set	1271
 19707   0004F8                     _TBLPTRU        set	1272
 19708   0004CE                     _PORTAbits      set	1230
 19709   00049E                     _PIE0bits       set	1182
 19710   0004AE                     _PIR0bits       set	1198
 19711   0004C7                     _TRISBbits      set	1223
 19712   0004C0                     _LATCbits       set	1216
 19713   0004C8                     _TRISC          set	1224
 19714   0004D6                     _INTCON0bits    set	1238
 19715   000410                     _ANSELC         set	1040
 19716   000408                     _ANSELB         set	1032
 19717   000400                     _ANSELA         set	1024
 19718                           
 19719                           ; #config settings
 19720                           
 19721                           	psect	cinit
 19722   0072C8                     __pcinit:
 19723                           	callstack 0
 19724   0072C8                     start_initialization:
 19725                           	callstack 0
 19726   0072C8                     __initialization:
 19727                           	callstack 0
 19728                           
 19729                           ; Initialize objects allocated to BANK5 (2 bytes)
 19730                           ; load TBLPTR registers with __pidataBANK5
 19731   0072C8  0E76               	movlw	low __pidataBANK5
 19732   0072CA  6EF6               	movwf	tblptrl,c
 19733   0072CC  0E83               	movlw	high __pidataBANK5
 19734   0072CE  6EF7               	movwf	tblptrh,c
 19735   0072D0  0E00               	movlw	low (__pidataBANK5 shr (0+16))
 19736   0072D2  6EF8               	movwf	tblptru,c
 19737   0072D4  0009               	tblrd		*+	;fetch initializer
 19738   0072D6  C4F5 F5FD          	movff	tablat,__pdataBANK5
 19739   0072DA  0009               	tblrd		*+	;fetch initializer
 19740   0072DC  C4F5 F5FE          	movff	tablat,__pdataBANK5+1
 19741                           
 19742                           ; Clear objects allocated to BIGRAM (1405 bytes)
 19743   0072E0  EE02  F0FC         	lfsr	0,__pbssBIGRAM
 19744   0072E4  EE11 F17D          	lfsr	1,1405
 19745   0072E8                     clear_0:
 19746   0072E8  6AEE               	clrf	postinc0,c
 19747   0072EA  50E5               	movf	postdec1,w,c
 19748   0072EC  50E1               	movf	fsr1l,w,c
 19749   0072EE  E1FC               	bnz	clear_0
 19750   0072F0  50E2               	movf	fsr1h,w,c
 19751   0072F2  E1FA               	bnz	clear_0
 19752                           
 19753                           ; Clear objects allocated to BANK8 (252 bytes)
 19754   0072F4  EE02  F000         	lfsr	0,__pbssBANK8
 19755   0072F8  0EFC               	movlw	252
 19756   0072FA                     clear_1:
 19757   0072FA  6AEE               	clrf	postinc0,c
 19758   0072FC  06E8               	decf	wreg,f,c
 19759   0072FE  E1FD               	bnz	clear_1
 19760                           
 19761                           ; Clear objects allocated to BANK7 (255 bytes)
 19762   007300  EE01  F300         	lfsr	0,__pbssBANK7
 19763   007304  EE10 F0FF          	lfsr	1,255
 19764   007308                     clear_2:
 19765   007308  6AEE               	clrf	postinc0,c
 19766   00730A  50E5               	movf	postdec1,w,c
 19767   00730C  50E1               	movf	fsr1l,w,c
 19768   00730E  E1FC               	bnz	clear_2
 19769   007310  50E2               	movf	fsr1h,w,c
 19770   007312  E1FA               	bnz	clear_2
 19771                           
 19772                           ; Clear objects allocated to BANK6 (189 bytes)
 19773   007314  EE01  F200         	lfsr	0,__pbssBANK6
 19774   007318  0EBD               	movlw	189
 19775   00731A                     clear_3:
 19776   00731A  6AEE               	clrf	postinc0,c
 19777   00731C  06E8               	decf	wreg,f,c
 19778   00731E  E1FD               	bnz	clear_3
 19779                           
 19780                           ; Clear objects allocated to BANK5 (112 bytes)
 19781   007320  EE01  F160         	lfsr	0,__pbssBANK5
 19782   007324  0E70               	movlw	112
 19783   007326                     clear_4:
 19784   007326  6AEE               	clrf	postinc0,c
 19785   007328  06E8               	decf	wreg,f,c
 19786   00732A  E1FD               	bnz	clear_4
 19787                           
 19788                           ;
 19789                           ; Setup IVTBASE
 19790                           ;
 19791   00045D                     IVTBASEL        equ	1117
 19792   00045E                     IVTBASEH        equ	1118
 19793   00045F                     IVTBASEU        equ	1119
 19794   00732C  0104               	movlb	4
 19795   00732E  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 19796   007330  6F5D               	movwf	93,b
 19797   007332  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 19798   007334  6F5E               	movwf	94,b
 19799   007336  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 19800   007338  6F5F               	movwf	95,b
 19801   00733A                     end_of_initialization:
 19802                           	callstack 0
 19803   00733A                     __end_of__initialization:
 19804                           	callstack 0
 19805   00733A  0100               	movlb	0
 19806   00733C  EFB5  F031         	goto	_main	;jump to C main() function
 19807                           
 19808                           	psect	bssBANK5
 19809   000560                     __pbssBANK5:
 19810                           	callstack 0
 19811   000560                     _timedResponseTime:
 19812                           	callstack 0
 19813   000560                     	ds	4
 19814   000564                     _ledTimer:
 19815                           	callstack 0
 19816   000564                     	ds	4
 19817   000568                     _uptimeTimer:
 19818                           	callstack 0
 19819   000568                     	ds	4
 19820   00056C                     _heartbeatTimer:
 19821                           	callstack 0
 19822   00056C                     	ds	4
 19823   000570                     _pbTimer:
 19824                           	callstack 0
 19825   000570                     	ds	4
 19826   000574                     _enumerationStartTime:
 19827                           	callstack 0
 19828   000574                     	ds	4
 19829   000578                     _subtestTime:
 19830                           	callstack 0
 19831   000578                     	ds	4
 19832   00057C                     _testTime:
 19833                           	callstack 0
 19834   00057C                     	ds	4
 19835   000580                     _flashTime:
 19836                           	callstack 0
 19837   000580                     	ds	4
 19838   000584                     _flashBlock:
 19839                           	callstack 0
 19840   000584                     	ds	3
 19841   000587                     _timedResponseCallback:
 19842                           	callstack 0
 19843   000587                     	ds	2
 19844   000589                     _flashCounter:
 19845                           	callstack 0
 19846   000589                     	ds	2
 19847   00058B                     _ledState:
 19848                           	callstack 0
 19849   00058B                     	ds	2
 19850   00058D                     _previousNN:
 19851                           	callstack 0
 19852   00058D                     	ds	2
 19853   00058F                     _nn:
 19854                           	callstack 0
 19855   00058F                     	ds	2
 19856   000591                     _transport:
 19857                           	callstack 0
 19858   000591                     	ds	2
 19859   000593                     _timedResponseDelay:
 19860                           	callstack 0
 19861   000593                     	ds	1
 19862   000594                     _eeBootFlag:
 19863                           	callstack 0
 19864   000594                     	ds	1
 19865   000595                     _timedResponseStep:
 19866                           	callstack 0
 19867   000595                     	ds	1
 19868   000596                     _timedResponseType:
 19869                           	callstack 0
 19870   000596                     	ds	1
 19871   000597                     _timedResponseAllServicesFlag:
 19872                           	callstack 0
 19873   000597                     	ds	1
 19874   000598                     _timedResponseServiceIndex:
 19875                           	callstack 0
 19876   000598                     	ds	1
 19877   000599                     _timerExtension2:
 19878                           	callstack 0
 19879   000599                     	ds	1
 19880   00059A                     _timerExtension1:
 19881                           	callstack 0
 19882   00059A                     	ds	1
 19883   00059B                     _flashFlags:
 19884                           	callstack 0
 19885   00059B                     	ds	1
 19886   00059C                     _heartbeatSequence:
 19887                           	callstack 0
 19888   00059C                     	ds	1
 19889   00059D                     _pbWasPushed:
 19890                           	callstack 0
 19891   00059D                     	ds	1
 19892   00059E                     _setupModePreviousMode:
 19893                           	callstack 0
 19894   00059E                     	ds	1
 19895   00059F                     _last_mode_flags:
 19896                           	callstack 0
 19897   00059F                     	ds	1
 19898   0005A0                     _last_mode_state:
 19899                           	callstack 0
 19900   0005A0                     	ds	1
 19901   0005A1                     _mode_state:
 19902                           	callstack 0
 19903   0005A1                     	ds	1
 19904   0005A2                     _timedResponseOpcode:
 19905                           	callstack 0
 19906   0005A2                     	ds	1
 19907   0005A3                     _errno:
 19908                           	callstack 0
 19909   0005A3                     	ds	1
 19910   0005A4                     _mode_flags:
 19911                           	callstack 0
 19912   0005A4                     	ds	1
 19913   0005A5                     _enumerationState:
 19914                           	callstack 0
 19915   0005A5                     	ds	1
 19916   0005A6                     _EnumerationState:
 19917                           	callstack 0
 19918   0005A6                     	ds	1
 19919   0005A7                     _canTransmitFailed:
 19920                           	callstack 0
 19921   0005A7                     	ds	1
 19922   0005A8                     _canId:
 19923                           	callstack 0
 19924   0005A8                     	ds	1
 19925   0005A9                     _bootloaderVersion:
 19926                           	callstack 0
 19927   0005A9                     	ds	1
 19928   0005AA                     _bootloaderType:
 19929                           	callstack 0
 19930   0005AA                     	ds	1
 19931   0005AB                     _refreshRequired:
 19932                           	callstack 0
 19933   0005AB                     	ds	1
 19934   0005AC                     _flashState:
 19935                           	callstack 0
 19936   0005AC                     	ds	1
 19937   0005AD                     _mnsDiagnostics:
 19938                           	callstack 0
 19939   0005AD                     	ds	14
 19940   0005BB                     _nvDiagnostics:
 19941                           	callstack 0
 19942   0005BB                     	ds	6
 19943   0005C1                     _consumerDiagnostics:
 19944                           	callstack 0
 19945   0005C1                     	ds	6
 19946   0005C7                     _rxQueue:
 19947                           	callstack 0
 19948   0005C7                     	ds	5
 19949   0005CC                     _teachDiagnostics:
 19950                           	callstack 0
 19951   0005CC                     	ds	4
 19952                           
 19953                           	psect	dataBANK5
 19954   0005FD                     __pdataBANK5:
 19955                           	callstack 0
 19956   0005FD                     _flashBuffer:
 19957                           	callstack 0
 19958   0005FD                     	ds	2
 19959                           
 19960                           	psect	bssBANK6
 19961   000600                     __pbssBANK6:
 19962                           	callstack 0
 19963   000600                     _nvCache:
 19964                           	callstack 0
 19965   000600                     	ds	50
 19966   000632                     _enumerationResults:
 19967                           	callstack 0
 19968   000632                     	ds	16
 19969   000642                     _flashFlushTime:
 19970                           	callstack 0
 19971   000642                     	ds	4
 19972   000646                     _rxBuffers:
 19973                           	callstack 0
 19974   000646                     	ds	72
 19975   00068E                     _canDiagnostics:
 19976                           	callstack 0
 19977   00068E                     	ds	38
 19978   0006B4                     _tmpMessage:
 19979                           	callstack 0
 19980   0006B4                     	ds	9
 19981                           
 19982                           	psect	bssBANK7
 19983   000700                     __pbssBANK7:
 19984                           	callstack 0
 19985   000700                     _ledPaletteIndexes:
 19986                           	callstack 0
 19987   000700                     	ds	255
 19988                           
 19989                           	psect	bssBANK8
 19990   000800                     __pbssBANK8:
 19991                           	callstack 0
 19992   000800                     _evs:
 19993                           	callstack 0
 19994   000800                     	ds	252
 19995                           
 19996                           	psect	bssBIGRAM
 19997   0008FC                     __pbssBIGRAM:
 19998                           	callstack 0
 19999   0008FC                     _eventChains:
 20000                           	callstack 0
 20001   0008FC                     	ds	640
 20002   000B7C                     _leds:
 20003                           	callstack 0
 20004   000B7C                     	ds	765
 20005                           
 20006                           	psect	cstackBANK5
 20007   0005D0                     __pcstackBANK5:
 20008                           	callstack 0
 20009   0005D0                     ??_mnsProcessMessage:
 20010                           
 20011                           ; 1 bytes @ 0x0
 20012   0005D0                     	ds	30
 20013   0005EE                     ??_poll:
 20014                           
 20015                           ; 1 bytes @ 0x1E
 20016   0005EE                     	ds	4
 20017   0005F2                     poll@handled:
 20018                           	callstack 0
 20019                           
 20020                           ; 1 bytes @ 0x22
 20021   0005F2                     	ds	1
 20022   0005F3                     poll@i:
 20023                           	callstack 0
 20024                           
 20025                           ; 1 bytes @ 0x23
 20026   0005F3                     	ds	1
 20027   0005F4                     poll@m:
 20028                           	callstack 0
 20029                           
 20030                           ; 9 bytes @ 0x24
 20031   0005F4                     	ds	9
 20032                           
 20033                           	psect	cstackCOMRAM
 20034   000501                     __pcstackCOMRAM:
 20035                           	callstack 0
 20036   000501                     ?_getNV:
 20037                           	callstack 0
 20038   000501                     ?_getNextWriteMessage:
 20039                           	callstack 0
 20040   000501                     ?_pop:
 20041                           	callstack 0
 20042   000501                     ?___awdiv:
 20043                           	callstack 0
 20044   000501                     ?___awmod:
 20045                           	callstack 0
 20046   000501                     ?_tickGet:
 20047                           	callstack 0
 20048   000501                     ?___lmul:
 20049                           	callstack 0
 20050   000501                     initARGB@ledno:
 20051                           	callstack 0
 20052   000501                     updateLedRange@end_ledno:
 20053                           	callstack 0
 20054   000501                     APP_nvValidate@value:
 20055                           	callstack 0
 20056   000501                     APP_nvValueChanged@value:
 20057                           	callstack 0
 20058   000501                     bootEsdData@id:
 20059                           	callstack 0
 20060   000501                     canEsdData@id:
 20061                           	callstack 0
 20062   000501                     CAN1_OperationModeSet@status:
 20063                           	callstack 0
 20064   000501                     consumerPowerUp@temp:
 20065                           	callstack 0
 20066   000501                     isConsumedEvent@eventIndex:
 20067                           	callstack 0
 20068   000501                     consumerEsdData@index:
 20069                           	callstack 0
 20070   000501                     teachGetESDdata@id:
 20071                           	callstack 0
 20072   000501                     evtIdxToTableIndex@evtIdx:
 20073                           	callstack 0
 20074   000501                     tableIndexToEvtIdx@tableIndex:
 20075                           	callstack 0
 20076   000501                     nvGetESDdata@id:
 20077                           	callstack 0
 20078   000501                     setTimedResponseDelay@delay:
 20079                           	callstack 0
 20080   000501                     _isEvent$5795:
 20081                           	callstack 0
 20082   000501                     APP_preProcessMessage@m:
 20083                           	callstack 0
 20084   000501                     APP_postProcessMessage@m:
 20085                           	callstack 0
 20086   000501                     prepareSelfEnumResponse@txFifoObj:
 20087                           	callstack 0
 20088   000501                     sendRTR@txFifoObj:
 20089                           	callstack 0
 20090   000501                     getNextWriteMessage@q:
 20091                           	callstack 0
 20092   000501                     pop@q:
 20093                           	callstack 0
 20094   000501                     ___awdiv@dividend:
 20095                           	callstack 0
 20096   000501                     ___awmod@dividend:
 20097                           	callstack 0
 20098   000501                     memcpy@d1:
 20099                           	callstack 0
 20100   000501                     EEPROM_Read@index:
 20101                           	callstack 0
 20102   000501                     EEPROM_WriteNoVerify@index:
 20103                           	callstack 0
 20104   000501                     FLASH_Read@address:
 20105                           	callstack 0
 20106   000501                     ___lmul@multiplier:
 20107                           	callstack 0
 20108   000501                     ??_getNumTxBuffersInUse:
 20109   000501                     ??_getNumRxBuffersInUse:
 20110   000501                     ??_have:
 20111   000501                     ??_findServiceIndex:
 20112   000501                     ??_showStatus:
 20113   000501                     ??_eraseFlashBlock:
 20114   000501                     ??_loadFlashBlock:
 20115   000501                     ??_initTicker:
 20116   000501                     
 20117                           ; 1 bytes @ 0x0
 20118   000501                     	ds	1
 20119   000502                     updateLedRange@colourIndexPair:
 20120                           	callstack 0
 20121   000502                     APP_nvValueChanged@oldValue:
 20122                           	callstack 0
 20123   000502                     CAN1_OperationModeSet@requestMode:
 20124                           	callstack 0
 20125   000502                     initTicker@priority:
 20126                           	callstack 0
 20127   000502                     isEvent@opc:
 20128                           	callstack 0
 20129   000502                     
 20130                           ; 1 bytes @ 0x1
 20131   000502                     	ds	1
 20132   000503                     updateLedRange@start_ledno:
 20133                           	callstack 0
 20134   000503                     showStatus@s:
 20135                           	callstack 0
 20136   000503                     initTicker@divider:
 20137                           	callstack 0
 20138   000503                     findServiceIndex@serviceType:
 20139                           	callstack 0
 20140   000503                     have@id:
 20141                           	callstack 0
 20142   000503                     ___awdiv@divisor:
 20143                           	callstack 0
 20144   000503                     ___awmod@divisor:
 20145                           	callstack 0
 20146   000503                     memcpy@s1:
 20147                           	callstack 0
 20148   000503                     ??_getNV:
 20149   000503                     ??_getNextWriteMessage:
 20150   000503                     ??_pop:
 20151   000503                     
 20152                           ; 1 bytes @ 0x2
 20153   000503                     	ds	1
 20154   000504                     updateLedRange@ledno:
 20155                           	callstack 0
 20156   000504                     getNV@index:
 20157                           	callstack 0
 20158   000504                     EEPROM_WriteNoVerify@value:
 20159                           	callstack 0
 20160   000504                     eraseFlashBlock@interruptEnabled:
 20161                           	callstack 0
 20162   000504                     initTicker@i:
 20163                           	callstack 0
 20164   000504                     findServiceIndex@i:
 20165                           	callstack 0
 20166   000504                     have@i:
 20167                           	callstack 0
 20168   000504                     ??_EEPROM_Read:
 20169   000504                     ??_FLASH_Read:
 20170                           
 20171                           ; 1 bytes @ 0x3
 20172   000504                     	ds	1
 20173   000505                     doFlash@order:
 20174                           	callstack 0
 20175   000505                     getParameterFlags@flags:
 20176                           	callstack 0
 20177   000505                     flushFlashBlock@interruptEnabled:
 20178                           	callstack 0
 20179   000505                     tickGet@IntFlag2:
 20180                           	callstack 0
 20181   000505                     startTimedResponse@serviceIndex:
 20182                           	callstack 0
 20183   000505                     ___awdiv@counter:
 20184                           	callstack 0
 20185   000505                     ___awmod@counter:
 20186                           	callstack 0
 20187   000505                     getNumTxBuffersInUse@i16:
 20188                           	callstack 0
 20189   000505                     getNumRxBuffersInUse@i16:
 20190                           	callstack 0
 20191   000505                     memcpy@n:
 20192                           	callstack 0
 20193   000505                     ___lmul@multiplicand:
 20194                           	callstack 0
 20195   000505                     ??_EEPROM_WriteNoVerify:
 20196   000505                     
 20197                           ; 1 bytes @ 0x4
 20198   000505                     	ds	1
 20199   000506                     doFlash@ledno:
 20200                           	callstack 0
 20201   000506                     tickGet@IntFlag1:
 20202                           	callstack 0
 20203   000506                     ___awdiv@sign:
 20204                           	callstack 0
 20205   000506                     ___awmod@sign:
 20206                           	callstack 0
 20207   000506                     startTimedResponse@callback:
 20208                           	callstack 0
 20209   000506                     FLASH_Write@index:
 20210                           	callstack 0
 20211   000506                     ??_getParameter:
 20212                           
 20213                           ; 1 bytes @ 0x5
 20214   000506                     	ds	1
 20215   000507                     ?_readNVM:
 20216                           	callstack 0
 20217   000507                     ?_canGetDiagnostic:
 20218                           	callstack 0
 20219   000507                     ?_consumerGetDiagnostic:
 20220                           	callstack 0
 20221   000507                     ?_teachGetDiagnostic:
 20222                           	callstack 0
 20223   000507                     ?_mnsGetDiagnostic:
 20224                           	callstack 0
 20225   000507                     ?_nvGetDiagnostic:
 20226                           	callstack 0
 20227   000507                     ___awdiv@quotient:
 20228                           	callstack 0
 20229   000507                     memcpy@d:
 20230                           	callstack 0
 20231   000507                     readNVM@index:
 20232                           	callstack 0
 20233   000507                     tickGet@currentTime:
 20234                           	callstack 0
 20235   000507                     
 20236                           ; 1 bytes @ 0x6
 20237   000507                     	ds	1
 20238   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 20239                           	callstack 0
 20240   000508                     startTimedResponse@type:
 20241                           	callstack 0
 20242   000508                     pop@ret:
 20243                           	callstack 0
 20244   000508                     
 20245                           ; 1 bytes @ 0x7
 20246   000508                     	ds	1
 20247   000509                     consumerGetDiagnostic@index:
 20248                           	callstack 0
 20249   000509                     teachGetDiagnostic@index:
 20250                           	callstack 0
 20251   000509                     mnsGetDiagnostic@index:
 20252                           	callstack 0
 20253   000509                     getParameter@idx:
 20254                           	callstack 0
 20255   000509                     nvGetDiagnostic@index:
 20256                           	callstack 0
 20257   000509                     FLASH_Write@value:
 20258                           	callstack 0
 20259   000509                     memcpy@s:
 20260                           	callstack 0
 20261   000509                     EEPROM_Write@index:
 20262                           	callstack 0
 20263   000509                     ___lmul@product:
 20264                           	callstack 0
 20265   000509                     ??_canGetDiagnostic:
 20266   000509                     ??_APP_nvDefault:
 20267   000509                     
 20268                           ; 1 bytes @ 0x8
 20269   000509                     	ds	1
 20270   00050A                     canGetDiagnostic@index:
 20271                           	callstack 0
 20272   00050A                     ??_readNVM:
 20273   00050A                     ??_FLASH_Write:
 20274                           
 20275                           ; 1 bytes @ 0x9
 20276   00050A                     	ds	1
 20277   00050B                     ?___lldiv:
 20278                           	callstack 0
 20279   00050B                     APP_nvDefault@index:
 20280                           	callstack 0
 20281   00050B                     startEnumeration@txWaiting:
 20282                           	callstack 0
 20283   00050B                     memcpy@tmp:
 20284                           	callstack 0
 20285   00050B                     ___lldiv@dividend:
 20286                           	callstack 0
 20287   00050B                     ??_handleSelfEnumeration:
 20288   00050B                     ??_APP_testMode:
 20289   00050B                     ??_loop:
 20290   00050B                     ??_leds_poll:
 20291                           
 20292                           ; 1 bytes @ 0xA
 20293   00050B                     	ds	1
 20294   00050C                     startEnumeration@i:
 20295                           	callstack 0
 20296   00050C                     getNextWriteMessage@wr:
 20297                           	callstack 0
 20298   00050C                     EEPROM_Write@value:
 20299                           	callstack 0
 20300   00050C                     readNVM@type:
 20301                           	callstack 0
 20302                           
 20303                           ; 1 bytes @ 0xB
 20304   00050C                     	ds	1
 20305   00050D                     ?_getEN:
 20306                           	callstack 0
 20307   00050D                     ?_getNN:
 20308                           	callstack 0
 20309   00050D                     ?_getEv:
 20310                           	callstack 0
 20311   00050D                     bootPowerUp@b:
 20312                           	callstack 0
 20313   00050D                     getEv@evNum:
 20314                           	callstack 0
 20315   00050D                     mnsPowerUp@i:
 20316                           	callstack 0
 20317   00050D                     canPowerUp@temp:
 20318                           	callstack 0
 20319   00050D                     canSendMessage@mp:
 20320                           	callstack 0
 20321   00050D                     ??_getEVs:
 20322   00050D                     ??_loadNvCache:
 20323   00050D                     
 20324                           ; 1 bytes @ 0xC
 20325   00050D                     	ds	1
 20326   00050E                     bootPowerUp@found:
 20327                           	callstack 0
 20328   00050E                     mnsPowerUp@temp:
 20329                           	callstack 0
 20330   00050E                     writeNVM@index:
 20331                           	callstack 0
 20332                           
 20333                           ; 3 bytes @ 0xD
 20334   00050E                     	ds	1
 20335   00050F                     APP_testMode@c:
 20336                           	callstack 0
 20337   00050F                     bootPowerUp@i:
 20338                           	callstack 0
 20339   00050F                     handleSelfEnumeration@receivedCanId:
 20340                           	callstack 0
 20341   00050F                     loadNvCache@temp:
 20342                           	callstack 0
 20343   00050F                     ___lldiv@divisor:
 20344                           	callstack 0
 20345   00050F                     ??_canSendMessage:
 20346   00050F                     ??_getEN:
 20347   00050F                     ??_getNN:
 20348   00050F                     ??_getEv:
 20349                           
 20350                           ; 1 bytes @ 0xE
 20351   00050F                     	ds	1
 20352   000510                     APP_testMode@step:
 20353                           	callstack 0
 20354   000510                     canReceiveMessage@m:
 20355                           	callstack 0
 20356   000510                     bootPowerUp@a:
 20357                           	callstack 0
 20358                           
 20359                           ; 3 bytes @ 0xF
 20360   000510                     	ds	1
 20361   000511                     APP_testMode@i:
 20362                           	callstack 0
 20363   000511                     loadNvCache@i:
 20364                           	callstack 0
 20365   000511                     writeNVM@value:
 20366                           	callstack 0
 20367                           
 20368                           ; 1 bytes @ 0x10
 20369   000511                     	ds	1
 20370   000512                     nvPowerUp@i:
 20371                           	callstack 0
 20372   000512                     ??_writeNVM:
 20373   000512                     ??_canReceiveMessage:
 20374   000512                     
 20375                           ; 1 bytes @ 0x11
 20376   000512                     	ds	1
 20377   000513                     canReceiveMessage@incomingCanId:
 20378                           	callstack 0
 20379   000513                     ___lldiv@quotient:
 20380                           	callstack 0
 20381   000513                     
 20382                           ; 1 bytes @ 0x12
 20383   000513                     	ds	1
 20384   000514                     writeNVM@type:
 20385                           	callstack 0
 20386   000514                     canReceiveMessage@mp:
 20387                           	callstack 0
 20388                           
 20389                           ; 2 bytes @ 0x13
 20390   000514                     	ds	1
 20391   000515                     setNewCanId@newCanId:
 20392                           	callstack 0
 20393   000515                     writeEv@evNum:
 20394                           	callstack 0
 20395   000515                     setNV@value:
 20396                           	callstack 0
 20397   000515                     canSendMessage@temp:
 20398                           	callstack 0
 20399   000515                     ??_nvFactoryReset:
 20400                           
 20401                           ; 1 bytes @ 0x14
 20402   000515                     	ds	1
 20403   000516                     writeEv@evVal:
 20404                           	callstack 0
 20405   000516                     canReceiveMessage@temp:
 20406                           	callstack 0
 20407   000516                     getNN@hi:
 20408                           	callstack 0
 20409   000516                     getEN@hi:
 20410                           	callstack 0
 20411   000516                     ??_processEnumeration:
 20412   000516                     ??_setNV:
 20413                           
 20414                           ; 1 bytes @ 0x15
 20415   000516                     	ds	1
 20416   000517                     nvFactoryReset@i:
 20417                           	callstack 0
 20418   000517                     ___lldiv@counter:
 20419                           	callstack 0
 20420   000517                     canSendMessage@m:
 20421                           	callstack 0
 20422   000517                     ??_writeEv:
 20423                           
 20424                           ; 1 bytes @ 0x16
 20425   000517                     	ds	1
 20426   000518                     setNV@oldValue:
 20427                           	callstack 0
 20428   000518                     canReceiveMessage@rxFifoObj:
 20429                           	callstack 0
 20430   000518                     getNN@lo:
 20431                           	callstack 0
 20432   000518                     getEN@lo:
 20433                           	callstack 0
 20434   000518                     ??_pbDownTimer:
 20435   000518                     ??_pbUpTimer:
 20436                           
 20437                           ; 1 bytes @ 0x17
 20438   000518                     	ds	1
 20439   000519                     setNV@index:
 20440                           	callstack 0
 20441   000519                     canSendMessage@txFifoObj:
 20442                           	callstack 0
 20443                           
 20444                           ; 2 bytes @ 0x18
 20445   000519                     	ds	1
 20446   00051A                     processEnumeration@enumResult:
 20447                           	callstack 0
 20448   00051A                     getEVs@tableIndex:
 20449                           	callstack 0
 20450   00051A                     getNN@flags:
 20451                           	callstack 0
 20452   00051A                     getEN@tableIndex:
 20453                           	callstack 0
 20454                           
 20455                           ; 1 bytes @ 0x19
 20456   00051A                     	ds	1
 20457   00051B                     processEnumeration@newCanId:
 20458                           	callstack 0
 20459   00051B                     getEVs@evIdx:
 20460                           	callstack 0
 20461   00051B                     getNN@tableIndex:
 20462                           	callstack 0
 20463   00051B                     sendMessage@len:
 20464                           	callstack 0
 20465                           
 20466                           ; 1 bytes @ 0x1A
 20467   00051B                     	ds	1
 20468   00051C                     processEnumeration@i:
 20469                           	callstack 0
 20470   00051C                     getEv@tableIndex:
 20471                           	callstack 0
 20472   00051C                     pbDownTimer@timeout:
 20473                           	callstack 0
 20474   00051C                     pbUpTimer@timeout:
 20475                           	callstack 0
 20476   00051C                     sendMessage@data1:
 20477                           	callstack 0
 20478   00051C                     APP_processConsumedEvent@m:
 20479                           	callstack 0
 20480   00051C                     getHash@nn:
 20481                           	callstack 0
 20482                           
 20483                           ; 2 bytes @ 0x1B
 20484   00051C                     	ds	1
 20485   00051D                     sendMessage@data2:
 20486                           	callstack 0
 20487   00051D                     
 20488                           ; 1 bytes @ 0x1C
 20489   00051D                     	ds	1
 20490   00051E                     APP_processConsumedEvent@tableIndex:
 20491                           	callstack 0
 20492   00051E                     sendMessage@data3:
 20493                           	callstack 0
 20494   00051E                     getHash@en:
 20495                           	callstack 0
 20496   00051E                     
 20497                           ; 1 bytes @ 0x1D
 20498   00051E                     	ds	1
 20499   00051F                     APP_processConsumedEvent@onOff:
 20500                           	callstack 0
 20501   00051F                     sendMessage@data4:
 20502                           	callstack 0
 20503                           
 20504                           ; 1 bytes @ 0x1E
 20505   00051F                     	ds	1
 20506   000520                     APP_processConsumedEvent@action:
 20507                           	callstack 0
 20508   000520                     sendMessage@data5:
 20509                           	callstack 0
 20510   000520                     ??_getHash:
 20511                           
 20512                           ; 1 bytes @ 0x1F
 20513   000520                     	ds	1
 20514   000521                     APP_processConsumedEvent@start_ledno:
 20515                           	callstack 0
 20516   000521                     getHash@hash:
 20517                           	callstack 0
 20518   000521                     sendMessage@data6:
 20519                           	callstack 0
 20520                           
 20521                           ; 1 bytes @ 0x20
 20522   000521                     	ds	1
 20523   000522                     APP_processConsumedEvent@end_ledno:
 20524                           	callstack 0
 20525   000522                     sendMessage@data7:
 20526                           	callstack 0
 20527   000522                     findEvent@nodeNumber:
 20528                           	callstack 0
 20529   000522                     ??_rebuildHashtable:
 20530                           
 20531                           ; 1 bytes @ 0x21
 20532   000522                     	ds	1
 20533   000523                     APP_processConsumedEvent@colourPixelIndexPair:
 20534                           	callstack 0
 20535   000523                     ??_sendMessage:
 20536                           
 20537                           ; 1 bytes @ 0x22
 20538   000523                     	ds	1
 20539   000524                     APP_processConsumedEvent@ev:
 20540                           	callstack 0
 20541   000524                     writeEv@tableIndex:
 20542                           	callstack 0
 20543   000524                     findEvent@eventNumber:
 20544                           	callstack 0
 20545                           
 20546                           ; 2 bytes @ 0x23
 20547   000524                     	ds	1
 20548   000525                     rebuildHashtable@hash:
 20549                           	callstack 0
 20550   000525                     sendMessage@opc:
 20551                           	callstack 0
 20552                           
 20553                           ; 1 bytes @ 0x24
 20554   000525                     	ds	1
 20555   000526                     rebuildHashtable@tableIndex:
 20556                           	callstack 0
 20557   000526                     sendMessage2@data1:
 20558                           	callstack 0
 20559   000526                     sendMessage3@data1:
 20560                           	callstack 0
 20561   000526                     sendMessage4@data1:
 20562                           	callstack 0
 20563   000526                     sendMessage5@data1:
 20564                           	callstack 0
 20565   000526                     sendMessage6@data1:
 20566                           	callstack 0
 20567   000526                     sendMessage7@data1:
 20568                           	callstack 0
 20569   000526                     ??_findEvent:
 20570                           
 20571                           ; 1 bytes @ 0x25
 20572   000526                     	ds	1
 20573   000527                     rebuildHashtable@chainIdx:
 20574                           	callstack 0
 20575   000527                     sendMessage2@data2:
 20576                           	callstack 0
 20577   000527                     sendMessage3@data2:
 20578                           	callstack 0
 20579   000527                     sendMessage4@data2:
 20580                           	callstack 0
 20581   000527                     sendMessage5@data2:
 20582                           	callstack 0
 20583   000527                     sendMessage6@data2:
 20584                           	callstack 0
 20585   000527                     sendMessage7@data2:
 20586                           	callstack 0
 20587                           
 20588                           ; 1 bytes @ 0x26
 20589   000527                     	ds	1
 20590   000528                     teachPowerUp@i:
 20591                           	callstack 0
 20592   000528                     sendMessage2@opc:
 20593                           	callstack 0
 20594   000528                     sendMessage3@data3:
 20595                           	callstack 0
 20596   000528                     sendMessage4@data3:
 20597                           	callstack 0
 20598   000528                     sendMessage5@data3:
 20599                           	callstack 0
 20600   000528                     sendMessage6@data3:
 20601                           	callstack 0
 20602   000528                     sendMessage7@data3:
 20603                           	callstack 0
 20604   000528                     findEvent@nn:
 20605                           	callstack 0
 20606   000528                     ??_removeTableEntry:
 20607   000528                     
 20608                           ; 1 bytes @ 0x27
 20609   000528                     	ds	1
 20610   000529                     sendMessage3@opc:
 20611                           	callstack 0
 20612   000529                     sendMessage4@data4:
 20613                           	callstack 0
 20614   000529                     sendMessage5@data4:
 20615                           	callstack 0
 20616   000529                     sendMessage6@data4:
 20617                           	callstack 0
 20618   000529                     sendMessage7@data4:
 20619                           	callstack 0
 20620   000529                     ??_powerUp:
 20621                           
 20622                           ; 1 bytes @ 0x28
 20623   000529                     	ds	1
 20624   00052A                     sendMessage4@opc:
 20625                           	callstack 0
 20626   00052A                     sendMessage5@data5:
 20627                           	callstack 0
 20628   00052A                     sendMessage6@data5:
 20629                           	callstack 0
 20630   00052A                     sendMessage7@data5:
 20631                           	callstack 0
 20632   00052A                     doNnevn@eventNumber:
 20633                           	callstack 0
 20634   00052A                     doRqevn@eventNumber:
 20635                           	callstack 0
 20636   00052A                     findEvent@en:
 20637                           	callstack 0
 20638   00052A                     
 20639                           ; 1 bytes @ 0x29
 20640   00052A                     	ds	1
 20641   00052B                     sendMessage5@opc:
 20642                           	callstack 0
 20643   00052B                     sendMessage6@data6:
 20644                           	callstack 0
 20645   00052B                     sendMessage7@data6:
 20646                           	callstack 0
 20647   00052B                     
 20648                           ; 1 bytes @ 0x2A
 20649   00052B                     	ds	1
 20650   00052C                     doNnevn@count:
 20651                           	callstack 0
 20652   00052C                     doRqevn@count:
 20653                           	callstack 0
 20654   00052C                     doReval@evNum:
 20655                           	callstack 0
 20656   00052C                     findEvent@hash:
 20657                           	callstack 0
 20658   00052C                     sendMessage6@opc:
 20659                           	callstack 0
 20660   00052C                     sendMessage7@data7:
 20661                           	callstack 0
 20662   00052C                     doNenrd@nodeNumber:
 20663                           	callstack 0
 20664   00052C                     checkLen@m:
 20665                           	callstack 0
 20666   00052C                     ??_mnsPoll:
 20667                           
 20668                           ; 1 bytes @ 0x2B
 20669   00052C                     	ds	1
 20670   00052D                     doNnevn@i:
 20671                           	callstack 0
 20672   00052D                     doRqevn@i:
 20673                           	callstack 0
 20674   00052D                     doReval@evIndex:
 20675                           	callstack 0
 20676   00052D                     findEvent@chainIdx:
 20677                           	callstack 0
 20678   00052D                     powerUp@i:
 20679                           	callstack 0
 20680   00052D                     sendMessage7@opc:
 20681                           	callstack 0
 20682   00052D                     
 20683                           ; 1 bytes @ 0x2C
 20684   00052D                     	ds	1
 20685   00052E                     doReval@enNum:
 20686                           	callstack 0
 20687   00052E                     findEvent@tableIndex:
 20688                           	callstack 0
 20689   00052E                     mnsTRallDiagnosticsCallback@serviceIndex:
 20690                           	callstack 0
 20691   00052E                     nvTRnvrdCallback@serviceIndex:
 20692                           	callstack 0
 20693   00052E                     checkLen@needed:
 20694                           	callstack 0
 20695   00052E                     doNenrd@eventNumber:
 20696                           	callstack 0
 20697                           
 20698                           ; 2 bytes @ 0x2D
 20699   00052E                     	ds	1
 20700   00052F                     nerdCallback@step:
 20701                           	callstack 0
 20702   00052F                     doReval@tableIndex:
 20703                           	callstack 0
 20704   00052F                     reqevCallback@step:
 20705                           	callstack 0
 20706   00052F                     mnsTRserviceDiscoveryCallback@step:
 20707                           	callstack 0
 20708   00052F                     mnsTRallDiagnosticsCallback@step:
 20709                           	callstack 0
 20710   00052F                     mnsTRrqnpnCallback@step:
 20711                           	callstack 0
 20712   00052F                     nvTRnvrdCallback@step:
 20713                           	callstack 0
 20714   00052F                     checkLen@service:
 20715                           	callstack 0
 20716   00052F                     doReqev@nodeNumber:
 20717                           	callstack 0
 20718   00052F                     addEvent@nodeNumber:
 20719                           	callstack 0
 20720                           
 20721                           ; 2 bytes @ 0x2E
 20722   00052F                     	ds	1
 20723   000530                     doNenrd@index:
 20724                           	callstack 0
 20725   000530                     nerdCallback@nodeNumber:
 20726                           	callstack 0
 20727   000530                     doReval@evVal:
 20728                           	callstack 0
 20729   000530                     nvTRnvrdCallback@valueOrError:
 20730                           	callstack 0
 20731   000530                     ??_reqevCallback:
 20732   000530                     ??_mnsTRallDiagnosticsCallback:
 20733   000530                     ??_mnsTRserviceDiscoveryCallback:
 20734   000530                     
 20735                           ; 1 bytes @ 0x2F
 20736   000530                     	ds	1
 20737   000531                     doNenrd@tableIndex:
 20738                           	callstack 0
 20739   000531                     consumerEventCheckLen@m:
 20740                           	callstack 0
 20741   000531                     teachCheckLen@m:
 20742                           	callstack 0
 20743   000531                     doReqev@eventNumber:
 20744                           	callstack 0
 20745   000531                     addEvent@eventNumber:
 20746                           	callstack 0
 20747                           
 20748                           ; 2 bytes @ 0x30
 20749   000531                     	ds	1
 20750   000532                     nerdCallback@eventNumber:
 20751                           	callstack 0
 20752                           
 20753                           ; 2 bytes @ 0x31
 20754   000532                     	ds	1
 20755   000533                     consumerEventCheckLen@needed:
 20756                           	callstack 0
 20757   000533                     teachCheckLen@needed:
 20758                           	callstack 0
 20759   000533                     doReqev@evNum:
 20760                           	callstack 0
 20761   000533                     addEvent@evNum:
 20762                           	callstack 0
 20763                           
 20764                           ; 1 bytes @ 0x32
 20765   000533                     	ds	1
 20766   000534                     teachCheckLen@learn:
 20767                           	callstack 0
 20768   000534                     removeTableEntry@i:
 20769                           	callstack 0
 20770   000534                     addEvent@evVal:
 20771                           	callstack 0
 20772   000534                     doReqev@evVal:
 20773                           	callstack 0
 20774   000534                     mnsTRallDiagnosticsCallback@d:
 20775                           	callstack 0
 20776   000534                     
 20777                           ; 1 bytes @ 0x33
 20778   000534                     	ds	1
 20779   000535                     reqevCallback@nEv:
 20780                           	callstack 0
 20781   000535                     removeTableEntry@tableIndex:
 20782                           	callstack 0
 20783   000535                     addEvent@forceOwnNN:
 20784                           	callstack 0
 20785   000535                     
 20786                           ; 1 bytes @ 0x34
 20787   000535                     	ds	1
 20788   000536                     clearAllEvents@tableIndex:
 20789                           	callstack 0
 20790   000536                     doReqev@tableIndex:
 20791                           	callstack 0
 20792   000536                     reqevCallback@eventNumber:
 20793                           	callstack 0
 20794   000536                     removeEvent@nodeNumber:
 20795                           	callstack 0
 20796   000536                     ??_addEvent:
 20797                           
 20798                           ; 1 bytes @ 0x35
 20799   000536                     	ds	1
 20800   000537                     ??_factoryReset:
 20801                           
 20802                           ; 1 bytes @ 0x36
 20803   000537                     	ds	1
 20804   000538                     reqevCallback@ev:
 20805                           	callstack 0
 20806   000538                     removeEvent@eventNumber:
 20807                           	callstack 0
 20808                           
 20809                           ; 2 bytes @ 0x37
 20810   000538                     	ds	2
 20811   00053A                     removeEvent@tableIndex:
 20812                           	callstack 0
 20813   00053A                     reqevCallback@nodeNumber:
 20814                           	callstack 0
 20815   00053A                     
 20816                           ; 1 bytes @ 0x39
 20817   00053A                     	ds	1
 20818   00053B                     factoryReset@i:
 20819                           	callstack 0
 20820   00053B                     doEvuln@nodeNumber:
 20821                           	callstack 0
 20822                           
 20823                           ; 2 bytes @ 0x3A
 20824   00053B                     	ds	1
 20825   00053C                     reqevCallback@tableIndex:
 20826                           	callstack 0
 20827   00053C                     checkPowerOnPb@i:
 20828                           	callstack 0
 20829   00053C                     
 20830                           ; 1 bytes @ 0x3B
 20831   00053C                     	ds	1
 20832   00053D                     doEvuln@eventNumber:
 20833                           	callstack 0
 20834   00053D                     ??_pollTimedResponse:
 20835                           
 20836                           ; 1 bytes @ 0x3C
 20837   00053D                     	ds	2
 20838   00053F                     doEvuln@result:
 20839                           	callstack 0
 20840   00053F                     pollTimedResponse@result:
 20841                           	callstack 0
 20842   00053F                     
 20843                           ; 1 bytes @ 0x3E
 20844   00053F                     	ds	4
 20845   000543                     addEvent@en:
 20846                           	callstack 0
 20847                           
 20848                           ; 2 bytes @ 0x42
 20849   000543                     	ds	2
 20850   000545                     addEvent@e:
 20851                           	callstack 0
 20852                           
 20853                           ; 1 bytes @ 0x44
 20854   000545                     	ds	1
 20855   000546                     addEvent@tableIndex:
 20856                           	callstack 0
 20857                           
 20858                           ; 1 bytes @ 0x45
 20859   000546                     	ds	1
 20860   000547                     APP_addEvent@nodeNumber:
 20861                           	callstack 0
 20862                           
 20863                           ; 2 bytes @ 0x46
 20864   000547                     	ds	2
 20865   000549                     APP_addEvent@eventNumber:
 20866                           	callstack 0
 20867                           
 20868                           ; 2 bytes @ 0x48
 20869   000549                     	ds	2
 20870   00054B                     APP_addEvent@evNum:
 20871                           	callstack 0
 20872                           
 20873                           ; 1 bytes @ 0x4A
 20874   00054B                     	ds	1
 20875   00054C                     APP_addEvent@evVal:
 20876                           	callstack 0
 20877                           
 20878                           ; 1 bytes @ 0x4B
 20879   00054C                     	ds	1
 20880   00054D                     APP_addEvent@forceOwnNN:
 20881                           	callstack 0
 20882                           
 20883                           ; 1 bytes @ 0x4C
 20884   00054D                     	ds	1
 20885   00054E                     doEvlrn@nodeNumber:
 20886                           	callstack 0
 20887   00054E                     
 20888                           ; 1 bytes @ 0x4D
 20889   00054E                     	ds	2
 20890   000550                     doEvlrn@eventNumber:
 20891                           	callstack 0
 20892                           
 20893                           ; 2 bytes @ 0x4F
 20894   000550                     	ds	2
 20895   000552                     doEvlrn@evNum:
 20896                           	callstack 0
 20897                           
 20898                           ; 1 bytes @ 0x51
 20899   000552                     	ds	1
 20900   000553                     doEvlrn@evVal:
 20901                           	callstack 0
 20902                           
 20903                           ; 1 bytes @ 0x52
 20904   000553                     	ds	1
 20905   000554                     bootProcessMessage@m:
 20906                           	callstack 0
 20907   000554                     canProcessMessage@m:
 20908                           	callstack 0
 20909   000554                     consumerProcessMessage@m:
 20910                           	callstack 0
 20911   000554                     teachProcessMessage@m:
 20912                           	callstack 0
 20913   000554                     mnsProcessMessage@m:
 20914                           	callstack 0
 20915   000554                     nvProcessMessage@m:
 20916                           	callstack 0
 20917   000554                     
 20918                           ; 1 bytes @ 0x53
 20919   000554                     	ds	2
 20920   000556                     mnsProcessMessage@i:
 20921                           	callstack 0
 20922   000556                     ??_bootProcessMessage:
 20923   000556                     ??_canProcessMessage:
 20924   000556                     ??_consumerProcessMessage:
 20925   000556                     ??_teachProcessMessage:
 20926   000556                     ??_nvProcessMessage:
 20927                           
 20928                           ; 1 bytes @ 0x55
 20929   000556                     	ds	1
 20930   000557                     _mnsProcessMessage$4465:
 20931                           	callstack 0
 20932                           
 20933                           ; 1 bytes @ 0x56
 20934   000557                     	ds	1
 20935   000558                     mnsProcessMessage@d:
 20936                           	callstack 0
 20937   000558                     nvProcessMessage@valueOrError:
 20938                           	callstack 0
 20939                           
 20940                           ; 2 bytes @ 0x57
 20941   000558                     	ds	1
 20942   000559                     consumerProcessMessage@enn:
 20943                           	callstack 0
 20944                           
 20945                           ; 2 bytes @ 0x58
 20946   000559                     	ds	1
 20947   00055A                     mnsProcessMessage@newMode:
 20948                           	callstack 0
 20949                           
 20950                           ; 1 bytes @ 0x59
 20951   00055A                     	ds	1
 20952   00055B                     consumerProcessMessage@ret:
 20953                           	callstack 0
 20954                           
 20955                           ; 1 bytes @ 0x5A
 20956   00055B                     	ds	1
 20957   00055C                     consumerProcessMessage@tableIndex:
 20958                           	callstack 0
 20959                           
 20960                           ; 1 bytes @ 0x5B
 20961   00055C                     	ds	1
 20962   00055D                     main@i:
 20963                           	callstack 0
 20964   00055D                     
 20965                           ; 1 bytes @ 0x5C
 20966   00055D                     	ds	1
 20967   00055E                     main@t1:
 20968                           	callstack 0
 20969                           
 20970                           ; 1 bytes @ 0x5D
 20971   00055E                     	ds	1
 20972   00055F                     main@t2:
 20973                           	callstack 0
 20974                           
 20975                           ; 1 bytes @ 0x5E
 20976   00055F                     	ds	1
 20977                           
 20978 ;;
 20979 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 20980 ;;
 20981 ;; *************** function _main *****************
 20982 ;; Defined at:
 20983 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;		None
 20986 ;; Auto vars:     Size  Location     Type
 20987 ;;  t2              1   94[COMRAM] unsigned char 
 20988 ;;  t1              1   93[COMRAM] unsigned char 
 20989 ;;  i               1   92[COMRAM] unsigned char 
 20990 ;; Return value:  Size  Location     Type
 20991 ;;                  1    wreg      void 
 20992 ;; Registers used:
 20993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20994 ;; Tracked objects:
 20995 ;;		On entry : 0/0
 20996 ;;		On exit  : 0/0
 20997 ;;		Unchanged: 0/0
 20998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21002 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21003 ;;Total ram usage:        3 bytes
 21004 ;; Hardware stack levels required when called: 12
 21005 ;; This function calls:
 21006 ;;		_checkPowerOnPb
 21007 ;;		_factoryReset
 21008 ;;		_initRomOps
 21009 ;;		_loop
 21010 ;;		_poll
 21011 ;;		_powerUp
 21012 ;;		_readNVM
 21013 ;;		_setup
 21014 ;; This function is called by:
 21015 ;;		Startup code after reset
 21016 ;; This function uses a non-reentrant model
 21017 ;;
 21018                           
 21019                           	psect	text0
 21020   00636A                     __ptext0:
 21021                           	callstack 0
 21022   00636A                     _main:
 21023                           	callstack 115
 21024   00636A                     
 21025                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 21026   00636A  0100               	movlb	0	; () banked
 21027   00636C  51AD               	movf	173,w,b	;volatile
 21028   00636E  0B8F               	andlw	-113
 21029   006370  0920               	iorlw	32
 21030   006372  6FAD               	movwf	173,b	;volatile
 21031                           
 21032                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 21033   006374  0EF0               	movlw	-16
 21034   006376  17AD               	andwf	173,f,b	;volatile
 21035   006378                     l2086:
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;../../VLCBlib_PIC/vlcb.c: 1280:     while ( ! OSCCON3bits.ORDY) {
 21039   006378  A9AF               	btfss	175,4,b	;volatile
 21040   00637A  EFC1  F031         	goto	u8651
 21041   00637E  EFC3  F031         	goto	u8650
 21042   006382                     u8651:
 21043   006382  EFBC  F031         	goto	l2086
 21044   006386                     u8650:
 21045   006386                     
 21046                           ; BSR set to: 0
 21047                           ;../../VLCBlib_PIC/vlcb.c: 1289:     for (t1=0; t1<64; t1++) {
 21048   006386  6A5E               	clrf	main@t1^(0+1280),c
 21049   006388                     l2089:
 21050                           
 21051                           ;../../VLCBlib_PIC/vlcb.c: 1290:         for (t2=0; t2<255; t2++) {
 21052   006388  6A5F               	clrf	main@t2^(0+1280),c
 21053   00638A                     l2091:
 21054                           
 21055                           ;../../VLCBlib_PIC/vlcb.c: 1291:             for (i=0; i<255; i++) {
 21056   00638A  6A5D               	clrf	main@i^(0+1280),c
 21057   00638C                     l2093:
 21058                           
 21059                           ;../../VLCBlib_PIC/vlcb.c: 1293:                 (LATBbits.LATB7=0);
 21060   00638C  9EBF               	bcf	191,7,c	;volatile
 21061   00638E                     
 21062                           ;../../VLCBlib_PIC/vlcb.c: 1294:             }
 21063   00638E  2A5D               	incf	main@i^(0+1280),f,c
 21064   006390  285D               	incf	main@i^(0+1280),w,c
 21065   006392  A4D8               	btfss	status,2,c
 21066   006394  EFCE  F031         	goto	u8661
 21067   006398  EFD0  F031         	goto	u8660
 21068   00639C                     u8661:
 21069   00639C  EFC6  F031         	goto	l2093
 21070   0063A0                     u8660:
 21071   0063A0                     
 21072                           ;../../VLCBlib_PIC/vlcb.c: 1295:         }
 21073   0063A0  2A5F               	incf	main@t2^(0+1280),f,c
 21074   0063A2  285F               	incf	main@t2^(0+1280),w,c
 21075   0063A4  A4D8               	btfss	status,2,c
 21076   0063A6  EFD7  F031         	goto	u8671
 21077   0063AA  EFD9  F031         	goto	u8670
 21078   0063AE                     u8671:
 21079   0063AE  EFC5  F031         	goto	l2091
 21080   0063B2                     u8670:
 21081   0063B2                     
 21082                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
 21083   0063B2  2A5E               	incf	main@t1^(0+1280),f,c
 21084   0063B4  0E3F               	movlw	63
 21085   0063B6  645E               	cpfsgt	main@t1^(0+1280),c
 21086   0063B8  EFE0  F031         	goto	u8681
 21087   0063BC  EFE2  F031         	goto	u8680
 21088   0063C0                     u8681:
 21089   0063C0  EFC4  F031         	goto	l2089
 21090   0063C4                     u8680:
 21091   0063C4                     
 21092                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTBASEU = 0x00;
 21093   0063C4  0104               	movlb	4	; () banked
 21094   0063C6  6B5F               	clrf	95,b	;volatile
 21095   0063C8                     
 21096                           ; BSR set to: 4
 21097                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTBASEH = 0x09;
 21098   0063C8  0E09               	movlw	9
 21099   0063CA  6F5E               	movwf	94,b	;volatile
 21100   0063CC                     
 21101                           ; BSR set to: 4
 21102                           ;../../VLCBlib_PIC/vlcb.c: 1308:     IVTBASEL = 0x00;
 21103   0063CC  6B5D               	clrf	93,b	;volatile
 21104                           
 21105                           ;../../VLCBlib_PIC/vlcb.c: 1310:     IVTLOCK = 0x55;
 21106   0063CE  0E55               	movlw	85
 21107   0063D0  6F59               	movwf	89,b	;volatile
 21108                           
 21109                           ;../../VLCBlib_PIC/vlcb.c: 1311:     IVTLOCK = 0xAA;
 21110   0063D2  0EAA               	movlw	170
 21111   0063D4  6F59               	movwf	89,b	;volatile
 21112   0063D6                     
 21113                           ; BSR set to: 4
 21114                           ;../../VLCBlib_PIC/vlcb.c: 1312:     IVTLOCKbits.IVTLOCKED = 0x01;
 21115   0063D6  8159               	bsf	89,0,b	;volatile
 21116   0063D8                     
 21117                           ; BSR set to: 4
 21118                           ;../../VLCBlib_PIC/vlcb.c: 1324:     initRomOps();
 21119   0063D8  EC5F  F041         	call	_initRomOps	;wreg free
 21120   0063DC                     
 21121                           ;../../VLCBlib_PIC/vlcb.c: 1326:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 21122   0063DC  0EFA               	movlw	250
 21123   0063DE  6E07               	movwf	readNVM@index^(0+1280),c
 21124   0063E0  0E03               	movlw	3
 21125   0063E2  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21126   0063E4  0E00               	movlw	0
 21127   0063E6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21128   0063E8  0E00               	movlw	0
 21129   0063EA  EC8D  F03A         	call	_readNVM
 21130   0063EE  0407               	decf	?_readNVM^(0+1280),w,c
 21131   0063F0  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 21132   0063F2  B4D8               	btfsc	status,2,c
 21133   0063F4  EFFE  F031         	goto	u8691
 21134   0063F8  EF00  F032         	goto	u8690
 21135   0063FC                     u8691:
 21136   0063FC  EF02  F032         	goto	l2095
 21137   006400                     u8690:
 21138   006400                     
 21139                           ;../../VLCBlib_PIC/vlcb.c: 1327:         factoryReset();
 21140   006400  EC3A  F02B         	call	_factoryReset	;wreg free
 21141   006404                     l2095:
 21142                           
 21143                           ;../../VLCBlib_PIC/vlcb.c: 1331:     powerUp();
 21144   006404  EC37  F02C         	call	_powerUp	;wreg free
 21145   006408                     
 21146                           ;../../VLCBlib_PIC/vlcb.c: 1334:     {INTCON0bits.GIE = 1;};
 21147   006408  8ED6               	bsf	214,7,c	;volatile
 21148                           
 21149                           ;../../VLCBlib_PIC/vlcb.c: 1335:     checkPowerOnPb();
 21150   00640A  EC6E  F033         	call	_checkPowerOnPb	;wreg free
 21151   00640E                     
 21152                           ;../../VLCBlib_PIC/vlcb.c: 1338:     {INTCON0bits.GIE = 0;};
 21153   00640E  9ED6               	bcf	214,7,c	;volatile
 21154   006410                     
 21155                           ;../../VLCBlib_PIC/vlcb.c: 1339:     setup();
 21156   006410  ECFF  F026         	call	_setup	;wreg free
 21157   006414                     
 21158                           ;../../VLCBlib_PIC/vlcb.c: 1342:     {INTCON0bits.GIE = 1;};
 21159   006414  8ED6               	bsf	214,7,c	;volatile
 21160   006416                     l11174:
 21161                           
 21162                           ;../../VLCBlib_PIC/vlcb.c: 1346:         poll();
 21163   006416  EC63  F017         	call	_poll	;wreg free
 21164   00641A                     
 21165                           ;../../VLCBlib_PIC/vlcb.c: 1347:         loop();
 21166   00641A  ECC2  F03C         	call	_loop	;wreg free
 21167   00641E  EF0B  F032         	goto	l11174
 21168   006422  EF01  F005         	goto	start
 21169   006426                     __end_of_main:
 21170                           	callstack 0
 21171                           
 21172 ;; *************** function _setup *****************
 21173 ;; Defined at:
 21174 ;;		line 212 in file "../main.c"
 21175 ;; Parameters:    Size  Location     Type
 21176 ;;		None
 21177 ;; Auto vars:     Size  Location     Type
 21178 ;;		None
 21179 ;; Return value:  Size  Location     Type
 21180 ;;                  1    wreg      void 
 21181 ;; Registers used:
 21182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21183 ;; Tracked objects:
 21184 ;;		On entry : 0/0
 21185 ;;		On exit  : 0/0
 21186 ;;		Unchanged: 0/0
 21187 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21192 ;;Total ram usage:        0 bytes
 21193 ;; Hardware stack levels used: 1
 21194 ;; Hardware stack levels required when called: 2
 21195 ;; This function calls:
 21196 ;;		_initARGB
 21197 ;;		_setTimedResponseDelay
 21198 ;;		_tickGet
 21199 ;;		_updateLedRange
 21200 ;; This function is called by:
 21201 ;;		_main
 21202 ;; This function uses a non-reentrant model
 21203 ;;
 21204                           
 21205                           	psect	text1
 21206   004DFE                     __ptext1:
 21207                           	callstack 0
 21208   004DFE                     _setup:
 21209                           	callstack 124
 21210   004DFE                     
 21211                           ;../main.c: 214:     transport = &canTransport;
 21212   004DFE  0EF9               	movlw	low _canTransport
 21213   004E00  0105               	movlb	5	; () banked
 21214   004E02  6F91               	movwf	_transport& (0+255),b
 21215   004E04  0EFF               	movlw	high _canTransport
 21216   004E06  6F92               	movwf	(_transport+1)& (0+255),b
 21217   004E08                     
 21218                           ; BSR set to: 5
 21219                           ;../main.c: 219:     setTimedResponseDelay(5);
 21220   004E08  0E05               	movlw	5
 21221   004E0A  EC94  F041         	call	_setTimedResponseDelay
 21222   004E0E                     
 21223                           ;../main.c: 221:     initARGB();
 21224   004E0E  ECF1  F023         	call	_initARGB	;wreg free
 21225   004E12                     
 21226                           ;../main.c: 223:     ANSELA = 0x00;
 21227   004E12  0104               	movlb	4	; () banked
 21228   004E14  6B00               	clrf	0,b	;volatile
 21229   004E16                     
 21230                           ; BSR set to: 4
 21231                           ;../main.c: 224:     ANSELB = 0x00;
 21232   004E16  6B08               	clrf	8,b	;volatile
 21233   004E18                     
 21234                           ; BSR set to: 4
 21235                           ;../main.c: 225:     ANSELC = 0x00;
 21236   004E18  6B10               	clrf	16,b	;volatile
 21237   004E1A                     
 21238                           ; BSR set to: 4
 21239                           ;../main.c: 228:     (INTCON0bits.GIE = 1);
 21240   004E1A  8ED6               	bsf	214,7,c	;volatile
 21241   004E1C                     
 21242                           ; BSR set to: 4
 21243                           ;../main.c: 229:     flashTime.val = tickGet();
 21244   004E1C  EC18  F03A         	call	_tickGet	;wreg free
 21245   004E20  C501  F580         	movff	?_tickGet,_flashTime
 21246   004E24  C502  F581         	movff	?_tickGet+1,_flashTime+1
 21247   004E28  C503  F582         	movff	?_tickGet+2,_flashTime+2
 21248   004E2C  C504  F583         	movff	?_tickGet+3,_flashTime+3
 21249   004E30                     
 21250                           ;../main.c: 231:     updateLedRange(0, 2, (PaletteIndex)(uint8_t)0x00);
 21251   004E30  0E02               	movlw	2
 21252   004E32  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21253   004E34  0E00               	movlw	0
 21254   004E36  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21255   004E38  0E00               	movlw	0
 21256   004E3A  EC6F  F03E         	call	_updateLedRange
 21257   004E3E                     
 21258                           ;../main.c: 232:     updateLedRange(3, 5, (PaletteIndex)(uint8_t)0x11);
 21259   004E3E  0E05               	movlw	5
 21260   004E40  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21261   004E42  0E11               	movlw	17
 21262   004E44  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21263   004E46  0E03               	movlw	3
 21264   004E48  EC6F  F03E         	call	_updateLedRange
 21265   004E4C                     
 21266                           ;../main.c: 233:     updateLedRange(6, 8, (PaletteIndex)(uint8_t)0x88);
 21267   004E4C  0E08               	movlw	8
 21268   004E4E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21269   004E50  0E88               	movlw	136
 21270   004E52  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21271   004E54  0E06               	movlw	6
 21272   004E56  EC6F  F03E         	call	_updateLedRange
 21273   004E5A                     
 21274                           ;../main.c: 234:     updateLedRange(9, 11, (PaletteIndex)(uint8_t)0xFF);
 21275   004E5A  0E0B               	movlw	11
 21276   004E5C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21277   004E5E  0EFF               	movlw	255
 21278   004E60  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21279   004E62  0E09               	movlw	9
 21280   004E64  EC6F  F03E         	call	_updateLedRange
 21281   004E68                     
 21282                           ;../main.c: 235:     updateLedRange(12, 14, (PaletteIndex)(uint8_t)0x22);
 21283   004E68  0E0E               	movlw	14
 21284   004E6A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21285   004E6C  0E22               	movlw	34
 21286   004E6E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21287   004E70  0E0C               	movlw	12
 21288   004E72  EC6F  F03E         	call	_updateLedRange
 21289   004E76                     
 21290                           ;../main.c: 236:     updateLedRange(15, 17, (PaletteIndex)(uint8_t)0x33);
 21291   004E76  0E11               	movlw	17
 21292   004E78  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21293   004E7A  0E33               	movlw	51
 21294   004E7C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21295   004E7E  0E0F               	movlw	15
 21296   004E80  EC6F  F03E         	call	_updateLedRange
 21297   004E84                     
 21298                           ;../main.c: 237:     updateLedRange(18, 20, (PaletteIndex)(uint8_t)0x44);
 21299   004E84  0E14               	movlw	20
 21300   004E86  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21301   004E88  0E44               	movlw	68
 21302   004E8A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21303   004E8C  0E12               	movlw	18
 21304   004E8E  EC6F  F03E         	call	_updateLedRange
 21305   004E92                     
 21306                           ;../main.c: 238:     updateLedRange(21, 23, (PaletteIndex)(uint8_t)0x55);
 21307   004E92  0E17               	movlw	23
 21308   004E94  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21309   004E96  0E55               	movlw	85
 21310   004E98  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21311   004E9A  0E15               	movlw	21
 21312   004E9C  EC6F  F03E         	call	_updateLedRange
 21313   004EA0                     
 21314                           ;../main.c: 239:     updateLedRange(24, 26, (PaletteIndex)(uint8_t)0x66);
 21315   004EA0  0E1A               	movlw	26
 21316   004EA2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21317   004EA4  0E66               	movlw	102
 21318   004EA6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21319   004EA8  0E18               	movlw	24
 21320   004EAA  EC6F  F03E         	call	_updateLedRange
 21321   004EAE                     
 21322                           ;../main.c: 240:     updateLedRange(27, 29, (PaletteIndex)(uint8_t)0x77);
 21323   004EAE  0E1D               	movlw	29
 21324   004EB0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21325   004EB2  0E77               	movlw	119
 21326   004EB4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21327   004EB6  0E1B               	movlw	27
 21328   004EB8  EC6F  F03E         	call	_updateLedRange
 21329   004EBC                     
 21330                           ;../main.c: 241:     updateLedRange(30, 32, (PaletteIndex)(uint8_t)0x99);
 21331   004EBC  0E20               	movlw	32
 21332   004EBE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21333   004EC0  0E99               	movlw	153
 21334   004EC2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21335   004EC4  0E1E               	movlw	30
 21336   004EC6  EC6F  F03E         	call	_updateLedRange
 21337   004ECA                     
 21338                           ;../main.c: 242:     updateLedRange(33, 35, (PaletteIndex)(uint8_t)0xAA);
 21339   004ECA  0E23               	movlw	35
 21340   004ECC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21341   004ECE  0EAA               	movlw	170
 21342   004ED0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21343   004ED2  0E21               	movlw	33
 21344   004ED4  EC6F  F03E         	call	_updateLedRange
 21345   004ED8                     
 21346                           ;../main.c: 243:     updateLedRange(36, 38, (PaletteIndex)(uint8_t)0xBB);
 21347   004ED8  0E26               	movlw	38
 21348   004EDA  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21349   004EDC  0EBB               	movlw	187
 21350   004EDE  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21351   004EE0  0E24               	movlw	36
 21352   004EE2  EC6F  F03E         	call	_updateLedRange
 21353   004EE6                     
 21354                           ;../main.c: 244:     updateLedRange(39, 41, (PaletteIndex)(uint8_t)0xCC);
 21355   004EE6  0E29               	movlw	41
 21356   004EE8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21357   004EEA  0ECC               	movlw	204
 21358   004EEC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21359   004EEE  0E27               	movlw	39
 21360   004EF0  EC6F  F03E         	call	_updateLedRange
 21361   004EF4                     
 21362                           ;../main.c: 245:     updateLedRange(42, 44, (PaletteIndex)(uint8_t)0xDD);
 21363   004EF4  0E2C               	movlw	44
 21364   004EF6  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21365   004EF8  0EDD               	movlw	221
 21366   004EFA  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21367   004EFC  0E2A               	movlw	42
 21368   004EFE  EC6F  F03E         	call	_updateLedRange
 21369   004F02                     
 21370                           ;../main.c: 246:     updateLedRange(45, 47, (PaletteIndex)(uint8_t)0xEE);
 21371   004F02  0E2F               	movlw	47
 21372   004F04  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21373   004F06  0EEE               	movlw	238
 21374   004F08  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21375   004F0A  0E2D               	movlw	45
 21376   004F0C  EC6F  F03E         	call	_updateLedRange
 21377   004F10                     
 21378                           ;../main.c: 247:     updateLedRange(48, 50, (PaletteIndex)(uint8_t)0x28);
 21379   004F10  0E32               	movlw	50
 21380   004F12  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21381   004F14  0E28               	movlw	40
 21382   004F16  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21383   004F18  0E30               	movlw	48
 21384   004F1A  EC6F  F03E         	call	_updateLedRange
 21385   004F1E                     
 21386                           ;../main.c: 248:     updateLedRange(51, 53, (PaletteIndex)(uint8_t)0x40);
 21387   004F1E  0E35               	movlw	53
 21388   004F20  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21389   004F22  0E40               	movlw	64
 21390   004F24  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21391   004F26  0E33               	movlw	51
 21392   004F28  EC6F  F03E         	call	_updateLedRange
 21393   004F2C                     
 21394                           ;../main.c: 249:     updateLedRange(54, 56, (PaletteIndex)(uint8_t)0x23);
 21395   004F2C  0E38               	movlw	56
 21396   004F2E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21397   004F30  0E23               	movlw	35
 21398   004F32  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21399   004F34  0E36               	movlw	54
 21400   004F36  EC6F  F03E         	call	_updateLedRange
 21401   004F3A                     
 21402                           ;../main.c: 250:     updateLedRange(57, 254, (PaletteIndex)(uint8_t)0x11);
 21403   004F3A  0EFE               	movlw	254
 21404   004F3C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21405   004F3E  0E11               	movlw	17
 21406   004F40  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21407   004F42  0E39               	movlw	57
 21408   004F44  EC6F  F03E         	call	_updateLedRange
 21409   004F48                     
 21410                           ;../main.c: 251:     updateLedRange(70, 74, (PaletteIndex)(uint8_t)0x22);
 21411   004F48  0E4A               	movlw	74
 21412   004F4A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21413   004F4C  0E22               	movlw	34
 21414   004F4E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21415   004F50  0E46               	movlw	70
 21416   004F52  EC6F  F03E         	call	_updateLedRange
 21417   004F56  0012               	return		;funcret
 21418   004F58                     __end_of_setup:
 21419                           	callstack 0
 21420                           
 21421 ;; *************** function _setTimedResponseDelay *****************
 21422 ;; Defined at:
 21423 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;  delay           1    wreg     unsigned char 
 21426 ;; Auto vars:     Size  Location     Type
 21427 ;;  delay           1    0[COMRAM] unsigned char 
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1    wreg      void 
 21430 ;; Registers used:
 21431 ;;		wreg
 21432 ;; Tracked objects:
 21433 ;;		On entry : 0/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21441 ;;Total ram usage:        1 bytes
 21442 ;; Hardware stack levels used: 1
 21443 ;; Hardware stack levels required when called: 1
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		_setup
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text2
 21452   008328                     __ptext2:
 21453                           	callstack 0
 21454   008328                     _setTimedResponseDelay:
 21455                           	callstack 124
 21456                           
 21457                           ;incstack = 0
 21458                           ;setTimedResponseDelay@delay stored from wreg
 21459   008328  6E01               	movwf	setTimedResponseDelay@delay^(0+1280),c
 21460   00832A                     
 21461                           ;../../VLCBlib_PIC/vlcb.c: 912:     timedResponseDelay = delay;
 21462   00832A  C501  F593         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 21463   00832E  0012               	return		;funcret
 21464   008330                     __end_of_setTimedResponseDelay:
 21465                           	callstack 0
 21466                           
 21467 ;; *************** function _powerUp *****************
 21468 ;; Defined at:
 21469 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;		None
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;  i               1   44[COMRAM] unsigned char 
 21474 ;;  divider         1    0        unsigned char 
 21475 ;; Return value:  Size  Location     Type
 21476 ;;                  1    wreg      void 
 21477 ;; Registers used:
 21478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21479 ;; Tracked objects:
 21480 ;;		On entry : 0/0
 21481 ;;		On exit  : 0/0
 21482 ;;		Unchanged: 0/0
 21483 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21487 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21488 ;;Total ram usage:        5 bytes
 21489 ;; Hardware stack levels used: 1
 21490 ;; Hardware stack levels required when called: 6
 21491 ;; This function calls:
 21492 ;;		_bootPowerUp
 21493 ;;		_canPowerUp
 21494 ;;		_consumerPowerUp
 21495 ;;		_initTicker
 21496 ;;		_initTimedResponse
 21497 ;;		_leds_powerUp
 21498 ;;		_mnsPowerUp
 21499 ;;		_nvPowerUp
 21500 ;;		_teachPowerUp
 21501 ;; This function is called by:
 21502 ;;		_main
 21503 ;; This function uses a non-reentrant model
 21504 ;;
 21505                           
 21506                           	psect	text3
 21507   00586E                     __ptext3:
 21508                           	callstack 0
 21509   00586E                     _powerUp:
 21510                           	callstack 120
 21511   00586E                     
 21512                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 21513   00586E  0E00               	movlw	0
 21514   005870  EC03  F03C         	call	_initTicker
 21515   005874                     
 21516                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 21517   005874  EC9C  F041         	call	_initTimedResponse	;wreg free
 21518   005878                     
 21519                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 21520   005878  ECB0  F040         	call	_leds_powerUp	;wreg free
 21521   00587C                     
 21522                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 21523   00587C  0E05               	movlw	5
 21524   00587E  0105               	movlb	5	; () banked
 21525   005880  6F93               	movwf	_timedResponseDelay& (0+255),b
 21526   005882                     
 21527                           ; BSR set to: 5
 21528                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<6; i++) {
 21529   005882  6A2D               	clrf	powerUp@i^(0+1280),c
 21530   005884                     l10984:
 21531                           
 21532                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 21533   005884  502D               	movf	powerUp@i^(0+1280),w,c
 21534   005886  0D02               	mullw	2
 21535   005888  0E89               	movlw	low _services
 21536   00588A  24F3               	addwf	243,w,c
 21537   00588C  6EF6               	movwf	tblptrl,c
 21538   00588E  0EFF               	movlw	high _services
 21539   005890  20F4               	addwfc	244,w,c
 21540   005892  6EF7               	movwf	tblptrh,c
 21541   005894                     	if	1	;There are 3 active tblptr bytes
 21542   005894  6AF8               	clrf	tblptru,c
 21543   005896  0E00               	movlw	low (__mediumconst shr (0+16))
 21544   005898  22F8               	addwfc	tblptru,f,c
 21545   00589A                     	endif
 21546   00589A  0009               	tblrd		*+
 21547   00589C  50F5               	movf	tablat,w,c
 21548   00589E  0009               	tblrd		*+
 21549   0058A0  10F5               	iorwf	tablat,w,c
 21550   0058A2  B4D8               	btfsc	status,2,c
 21551   0058A4  EF56  F02C         	goto	u8311
 21552   0058A8  EF58  F02C         	goto	u8310
 21553   0058AC                     u8311:
 21554   0058AC  EFA9  F02C         	goto	l10990
 21555   0058B0                     u8310:
 21556   0058B0  502D               	movf	powerUp@i^(0+1280),w,c
 21557   0058B2  0D02               	mullw	2
 21558   0058B4  0E89               	movlw	low _services
 21559   0058B6  24F3               	addwf	243,w,c
 21560   0058B8  6EF6               	movwf	tblptrl,c
 21561   0058BA  0EFF               	movlw	high _services
 21562   0058BC  20F4               	addwfc	244,w,c
 21563   0058BE  6EF7               	movwf	tblptrh,c
 21564   0058C0                     	if	1	;There are 3 active tblptr bytes
 21565   0058C0  6AF8               	clrf	tblptru,c
 21566   0058C2  0E00               	movlw	low (__mediumconst shr (0+16))
 21567   0058C4  22F8               	addwfc	tblptru,f,c
 21568   0058C6                     	endif
 21569   0058C6  0009               	tblrd		*+
 21570   0058C8  C4F5 F529          	movff	tablat,??_powerUp
 21571   0058CC  0009               	tblrd		*+
 21572   0058CE  C4F5 F52A          	movff	tablat,??_powerUp+1
 21573   0058D2  0E04               	movlw	4
 21574   0058D4  2629               	addwf	??_powerUp^(0+1280),f,c
 21575   0058D6  0E00               	movlw	0
 21576   0058D8  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21577   0058DA  C529  F4F6         	movff	??_powerUp,tblptrl
 21578   0058DE  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21579   0058E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21580   0058E2  6AF8               	clrf	tblptru,c
 21581   0058E4                     	endif
 21582   0058E4                     	if	0	;tblptru may be non-zero
 21583   0058E4                     	endif
 21584   0058E4  0009               	tblrd		*+
 21585   0058E6  50F5               	movf	tablat,w,c
 21586   0058E8  0009               	tblrd		*+
 21587   0058EA  10F5               	iorwf	tablat,w,c
 21588   0058EC  B4D8               	btfsc	status,2,c
 21589   0058EE  EF7B  F02C         	goto	u8321
 21590   0058F2  EF7D  F02C         	goto	u8320
 21591   0058F6                     u8321:
 21592   0058F6  EFA9  F02C         	goto	l10990
 21593   0058FA                     u8320:
 21594   0058FA                     
 21595                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 21596   0058FA  502D               	movf	powerUp@i^(0+1280),w,c
 21597   0058FC  0D02               	mullw	2
 21598   0058FE  0E89               	movlw	low _services
 21599   005900  24F3               	addwf	243,w,c
 21600   005902  6EF6               	movwf	tblptrl,c
 21601   005904  0EFF               	movlw	high _services
 21602   005906  20F4               	addwfc	244,w,c
 21603   005908  6EF7               	movwf	tblptrh,c
 21604   00590A                     	if	1	;There are 3 active tblptr bytes
 21605   00590A  6AF8               	clrf	tblptru,c
 21606   00590C  0E00               	movlw	low (__mediumconst shr (0+16))
 21607   00590E  22F8               	addwfc	tblptru,f,c
 21608   005910                     	endif
 21609   005910  0009               	tblrd		*+
 21610   005912  C4F5 F529          	movff	tablat,??_powerUp
 21611   005916  0009               	tblrd		*+
 21612   005918  C4F5 F52A          	movff	tablat,??_powerUp+1
 21613   00591C  0E04               	movlw	4
 21614   00591E  2629               	addwf	??_powerUp^(0+1280),f,c
 21615   005920  0E00               	movlw	0
 21616   005922  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21617   005924  C529  F4F6         	movff	??_powerUp,tblptrl
 21618   005928  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21619   00592C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21620   00592C  6AF8               	clrf	tblptru,c
 21621   00592E                     	endif
 21622   00592E                     	if	0	;tblptru may be non-zero
 21623   00592E                     	endif
 21624   00592E  0009               	tblrd		*+
 21625   005930  C4F5 F52B          	movff	tablat,??_powerUp+2
 21626   005934  0009               	tblrd		*+
 21627   005936  C4F5 F52C          	movff	tablat,??_powerUp+3
 21628   00593A  D802               	call	u8338
 21629   00593C  EFA9  F02C         	goto	u8339
 21630   005940                     u8338:
 21631   005940  0005               	push	
 21632   005942  6EFA               	movwf	pclath,c
 21633   005944  502B               	movf	(??_powerUp+2)^(0+1280),w,c
 21634   005946  6EFD               	movwf	tosl,c
 21635   005948  502C               	movf	(??_powerUp+3)^(0+1280),w,c
 21636   00594A  6EFE               	movwf	tosh,c
 21637   00594C  6AFF               	clrf	tosu,c
 21638   00594E  50FA               	movf	pclath,w,c
 21639   005950  0012               	return		;indir
 21640   005952                     u8339:
 21641   005952                     l10990:
 21642                           
 21643                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 21644   005952  2A2D               	incf	powerUp@i^(0+1280),f,c
 21645   005954  0E05               	movlw	5
 21646   005956  642D               	cpfsgt	powerUp@i^(0+1280),c
 21647   005958  EFB0  F02C         	goto	u8341
 21648   00595C  EFB2  F02C         	goto	u8340
 21649   005960                     u8341:
 21650   005960  EF42  F02C         	goto	l10984
 21651   005964                     u8340:
 21652   005964  0012               	return		;funcret
 21653   005966                     __end_of_powerUp:
 21654                           	callstack 0
 21655                           
 21656 ;; *************** function _nvPowerUp *****************
 21657 ;; Defined at:
 21658 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;		None
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;  i               1   17[COMRAM] unsigned char 
 21663 ;; Return value:  Size  Location     Type
 21664 ;;                  1    wreg      void 
 21665 ;; Registers used:
 21666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21667 ;; Tracked objects:
 21668 ;;		On entry : 0/0
 21669 ;;		On exit  : 0/0
 21670 ;;		Unchanged: 0/0
 21671 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21676 ;;Total ram usage:        1 bytes
 21677 ;; Hardware stack levels used: 1
 21678 ;; Hardware stack levels required when called: 4
 21679 ;; This function calls:
 21680 ;;		_loadNvCache
 21681 ;; This function is called by:
 21682 ;;		_powerUp
 21683 ;; This function uses a non-reentrant model
 21684 ;;
 21685                           
 21686                           	psect	text4
 21687   007DA0                     __ptext4:
 21688                           	callstack 0
 21689   007DA0                     _nvPowerUp:
 21690                           	callstack 121
 21691   007DA0                     
 21692                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 21693   007DA0  0E01               	movlw	1
 21694   007DA2  6E12               	movwf	nvPowerUp@i^(0+1280),c
 21695   007DA4                     l10634:
 21696                           
 21697                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 21698   007DA4  5012               	movf	nvPowerUp@i^(0+1280),w,c
 21699   007DA6  0D02               	mullw	2
 21700   007DA8  0EBB               	movlw	low _nvDiagnostics
 21701   007DAA  24F3               	addwf	243,w,c
 21702   007DAC  6ED9               	movwf	fsr2l,c
 21703   007DAE  0E05               	movlw	high _nvDiagnostics
 21704   007DB0  20F4               	addwfc	prodh,w,c
 21705   007DB2  6EDA               	movwf	fsr2h,c
 21706   007DB4  6ADE               	clrf	postinc2,c
 21707   007DB6  6ADD               	clrf	postdec2,c
 21708   007DB8                     
 21709                           ;../../VLCBlib_PIC/nv.c: 141:     }
 21710   007DB8  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 21711   007DBA  0E02               	movlw	2
 21712   007DBC  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 21713   007DBE  EFE3  F03E         	goto	u8011
 21714   007DC2  EFE5  F03E         	goto	u8010
 21715   007DC6                     u8011:
 21716   007DC6  EFD2  F03E         	goto	l10634
 21717   007DCA                     u8010:
 21718   007DCA                     
 21719                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 21720   007DCA  0E00               	movlw	0
 21721   007DCC  0105               	movlb	5	; () banked
 21722   007DCE  6FBC               	movwf	(_nvDiagnostics+1)& (0+255),b
 21723   007DD0  0E02               	movlw	2
 21724   007DD2  6FBB               	movwf	_nvDiagnostics& (0+255),b
 21725   007DD4                     
 21726                           ; BSR set to: 5
 21727                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 21728   007DD4  ECD2  F03B         	call	_loadNvCache	;wreg free
 21729   007DD8  0012               	return		;funcret
 21730   007DDA                     __end_of_nvPowerUp:
 21731                           	callstack 0
 21732                           
 21733 ;; *************** function _mnsPowerUp *****************
 21734 ;; Defined at:
 21735 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;		None
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;  temp            2   13[COMRAM] int 
 21740 ;;  i               1   12[COMRAM] unsigned char 
 21741 ;; Return value:  Size  Location     Type
 21742 ;;                  1    wreg      void 
 21743 ;; Registers used:
 21744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21745 ;; Tracked objects:
 21746 ;;		On entry : 0/0
 21747 ;;		On exit  : 0/0
 21748 ;;		Unchanged: 0/0
 21749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21753 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21754 ;;Total ram usage:        3 bytes
 21755 ;; Hardware stack levels used: 1
 21756 ;; Hardware stack levels required when called: 3
 21757 ;; This function calls:
 21758 ;;		_readNVM
 21759 ;;		_setLEDsByMode
 21760 ;;		_tickGet
 21761 ;; This function is called by:
 21762 ;;		_powerUp
 21763 ;; This function uses a non-reentrant model
 21764 ;;
 21765                           
 21766                           	psect	text5
 21767   004F58                     __ptext5:
 21768                           	callstack 0
 21769   004F58                     _mnsPowerUp:
 21770                           	callstack 122
 21771   004F58                     
 21772                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 21773   004F58  0EFD               	movlw	253
 21774   004F5A  6E07               	movwf	readNVM@index^(0+1280),c
 21775   004F5C  0E03               	movlw	3
 21776   004F5E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21777   004F60  0E00               	movlw	0
 21778   004F62  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21779   004F64  0E00               	movlw	0
 21780   004F66  EC8D  F03A         	call	_readNVM
 21781   004F6A  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21782   004F6E  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21783   004F72                     
 21784                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 21785   004F72  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21786   004F74  EFC0  F027         	goto	u7400
 21787   004F78  EFBE  F027         	goto	u7401
 21788   004F7C                     u7401:
 21789   004F7C  EFC5  F027         	goto	l1288
 21790   004F80                     u7400:
 21791   004F80                     l10102:
 21792                           
 21793                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 21794   004F80  0105               	movlb	5	; () banked
 21795   004F82  6B90               	clrf	(_nn+1)& (0+255),b
 21796                           
 21797                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 21798   004F84  6B8F               	clrf	_nn& (0+255),b
 21799                           
 21800                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 21801   004F86  EFDF  F027         	goto	l10110
 21802   004F8A                     l1288:
 21803                           
 21804                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 21805   004F8A  C50E  F590         	movff	mnsPowerUp@temp,_nn+1
 21806   004F8E                     
 21807                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 21808   004F8E  0EFC               	movlw	252
 21809   004F90  6E07               	movwf	readNVM@index^(0+1280),c
 21810   004F92  0E03               	movlw	3
 21811   004F94  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21812   004F96  0E00               	movlw	0
 21813   004F98  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21814   004F9A  0E00               	movlw	0
 21815   004F9C  EC8D  F03A         	call	_readNVM
 21816   004FA0  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21817   004FA4  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21818   004FA8                     
 21819                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 21820   004FA8  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21821   004FAA  EFDB  F027         	goto	u7410
 21822   004FAE  EFD9  F027         	goto	u7411
 21823   004FB2                     u7411:
 21824   004FB2  EFDD  F027         	goto	l1290
 21825   004FB6                     u7410:
 21826   004FB6  EFC0  F027         	goto	l10102
 21827   004FBA                     l1290:
 21828                           
 21829                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 21830   004FBA  C50E  F58F         	movff	mnsPowerUp@temp,_nn
 21831   004FBE                     l10110:
 21832                           
 21833                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 21834   004FBE  0EFB               	movlw	251
 21835   004FC0  6E07               	movwf	readNVM@index^(0+1280),c
 21836   004FC2  0E03               	movlw	3
 21837   004FC4  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21838   004FC6  0E00               	movlw	0
 21839   004FC8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21840   004FCA  0E00               	movlw	0
 21841   004FCC  EC8D  F03A         	call	_readNVM
 21842   004FD0  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21843   004FD4  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21844   004FD8                     
 21845                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 21846   004FD8  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21847   004FDA  EFF3  F027         	goto	u7420
 21848   004FDE  EFF1  F027         	goto	u7421
 21849   004FE2                     u7421:
 21850   004FE2  EFF7  F027         	goto	l1292
 21851   004FE6                     u7420:
 21852   004FE6                     
 21853                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 21854   004FE6  0105               	movlb	5	; () banked
 21855   004FE8  69A1               	setf	_mode_state& (0+255),b
 21856                           
 21857                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 21858   004FEA  EFF9  F027         	goto	l1293
 21859   004FEE                     l1292:
 21860                           
 21861                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 21862   004FEE  C50E  F5A1         	movff	mnsPowerUp@temp,_mode_state
 21863   004FF2                     l1293:
 21864                           
 21865                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 21866   004FF2  C5A1  F59E         	movff	_mode_state,_setupModePreviousMode
 21867   004FF6                     
 21868                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 21869   004FF6  0EF9               	movlw	249
 21870   004FF8  6E07               	movwf	readNVM@index^(0+1280),c
 21871   004FFA  0E03               	movlw	3
 21872   004FFC  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21873   004FFE  0E00               	movlw	0
 21874   005000  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21875   005002  0E00               	movlw	0
 21876   005004  EC8D  F03A         	call	_readNVM
 21877   005008  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21878   00500C  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21879   005010                     
 21880                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 21881   005010  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21882   005012  EF0F  F028         	goto	u7430
 21883   005016  EF0D  F028         	goto	u7431
 21884   00501A                     u7431:
 21885   00501A  EF13  F028         	goto	l1294
 21886   00501E                     u7430:
 21887   00501E                     
 21888                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 21889   00501E  0105               	movlb	5	; () banked
 21890   005020  6BA4               	clrf	_mode_flags& (0+255),b
 21891                           
 21892                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 21893   005022  EF15  F028         	goto	l10122
 21894   005026                     l1294:
 21895                           
 21896                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 21897   005026  C50E  F5A4         	movff	mnsPowerUp@temp,_mode_flags
 21898   00502A                     l10122:
 21899                           
 21900                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 21901   00502A  0105               	movlb	5	; () banked
 21902   00502C  97A4               	bcf	_mode_flags& (0+255),3,b
 21903                           
 21904                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 21905   00502E  87A4               	bsf	_mode_flags& (0+255),3,b
 21906   005030                     
 21907                           ; BSR set to: 5
 21908                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 21909   005030  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 21910   005034                     
 21911                           ; BSR set to: 5
 21912                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 21913   005034  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 21914   005038                     
 21915                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 21916   005038  EC18  F03A         	call	_tickGet	;wreg free
 21917   00503C  C501  F570         	movff	?_tickGet,_pbTimer
 21918   005040  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 21919   005044  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 21920   005048  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 21921   00504C                     
 21922                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 21923   00504C  0105               	movlb	5	; () banked
 21924   00504E  6B9D               	clrf	_pbWasPushed& (0+255),b
 21925   005050                     
 21926                           ; BSR set to: 5
 21927                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 21928   005050  0E01               	movlw	1
 21929   005052  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 21930   005054                     l10138:
 21931                           
 21932                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 21933   005054  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 21934   005056  0D02               	mullw	2
 21935   005058  0EAD               	movlw	low _mnsDiagnostics
 21936   00505A  24F3               	addwf	243,w,c
 21937   00505C  6ED9               	movwf	fsr2l,c
 21938   00505E  0E05               	movlw	high _mnsDiagnostics
 21939   005060  20F4               	addwfc	prodh,w,c
 21940   005062  6EDA               	movwf	fsr2h,c
 21941   005064  6ADE               	clrf	postinc2,c
 21942   005066  6ADD               	clrf	postdec2,c
 21943   005068                     
 21944                           ;../../VLCBlib_PIC/mns.c: 342:     }
 21945   005068  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 21946   00506A  0E06               	movlw	6
 21947   00506C  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 21948   00506E  EF3B  F028         	goto	u7441
 21949   005072  EF3D  F028         	goto	u7440
 21950   005076                     u7441:
 21951   005076  EF2A  F028         	goto	l10138
 21952   00507A                     u7440:
 21953   00507A                     
 21954                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 21955   00507A  0E00               	movlw	0
 21956   00507C  0105               	movlb	5	; () banked
 21957   00507E  6FAE               	movwf	(_mnsDiagnostics+1)& (0+255),b
 21958   005080  0E06               	movlw	6
 21959   005082  6FAD               	movwf	_mnsDiagnostics& (0+255),b
 21960   005084                     
 21961                           ; BSR set to: 5
 21962                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 21963   005084  6B9C               	clrf	_heartbeatSequence& (0+255),b
 21964                           
 21965                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 21966   005086  0E00               	movlw	0
 21967   005088  6F6C               	movwf	_heartbeatTimer& (0+255),b
 21968   00508A  0E00               	movlw	0
 21969   00508C  6F6D               	movwf	(_heartbeatTimer+1)& (0+255),b
 21970   00508E  0E00               	movlw	0
 21971   005090  6F6E               	movwf	(_heartbeatTimer+2)& (0+255),b
 21972   005092  0E00               	movlw	0
 21973   005094  6F6F               	movwf	(_heartbeatTimer+3)& (0+255),b
 21974                           
 21975                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 21976   005096  0E00               	movlw	0
 21977   005098  6F68               	movwf	_uptimeTimer& (0+255),b
 21978   00509A  0E00               	movlw	0
 21979   00509C  6F69               	movwf	(_uptimeTimer+1)& (0+255),b
 21980   00509E  0E00               	movlw	0
 21981   0050A0  6F6A               	movwf	(_uptimeTimer+2)& (0+255),b
 21982   0050A2  0E00               	movlw	0
 21983   0050A4  6F6B               	movwf	(_uptimeTimer+3)& (0+255),b
 21984   0050A6                     
 21985                           ; BSR set to: 5
 21986   0050A6  0012               	return		;funcret
 21987   0050A8                     __end_of_mnsPowerUp:
 21988                           	callstack 0
 21989                           
 21990 ;; *************** function _consumerPowerUp *****************
 21991 ;; Defined at:
 21992 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 21993 ;; Parameters:    Size  Location     Type
 21994 ;;		None
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;  temp            1    0[COMRAM] unsigned char 
 21997 ;; Return value:  Size  Location     Type
 21998 ;;                  1    wreg      void 
 21999 ;; Registers used:
 22000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22001 ;; Tracked objects:
 22002 ;;		On entry : 0/0
 22003 ;;		On exit  : 0/0
 22004 ;;		Unchanged: 0/0
 22005 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22010 ;;Total ram usage:        1 bytes
 22011 ;; Hardware stack levels used: 1
 22012 ;; Hardware stack levels required when called: 1
 22013 ;; This function calls:
 22014 ;;		Nothing
 22015 ;; This function is called by:
 22016 ;;		_powerUp
 22017 ;; This function uses a non-reentrant model
 22018 ;;
 22019                           
 22020                           	psect	text6
 22021   007DDA                     __ptext6:
 22022                           	callstack 0
 22023   007DDA                     _consumerPowerUp:
 22024                           	callstack 124
 22025   007DDA                     
 22026                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 22027   007DDA  0E01               	movlw	1
 22028   007DDC  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 22029   007DDE                     l9712:
 22030                           
 22031                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 22032   007DDE  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 22033   007DE0  0D02               	mullw	2
 22034   007DE2  0EC1               	movlw	low _consumerDiagnostics
 22035   007DE4  24F3               	addwf	243,w,c
 22036   007DE6  6ED9               	movwf	fsr2l,c
 22037   007DE8  0E05               	movlw	high _consumerDiagnostics
 22038   007DEA  20F4               	addwfc	prodh,w,c
 22039   007DEC  6EDA               	movwf	fsr2h,c
 22040   007DEE  6ADE               	clrf	postinc2,c
 22041   007DF0  6ADD               	clrf	postdec2,c
 22042   007DF2                     
 22043                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 22044   007DF2  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 22045   007DF4  0E02               	movlw	2
 22046   007DF6  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 22047   007DF8  EF00  F03F         	goto	u6891
 22048   007DFC  EF02  F03F         	goto	u6890
 22049   007E00                     u6891:
 22050   007E00  EFEF  F03E         	goto	l9712
 22051   007E04                     u6890:
 22052   007E04                     
 22053                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 22054   007E04  0E00               	movlw	0
 22055   007E06  0105               	movlb	5	; () banked
 22056   007E08  6FC2               	movwf	(_consumerDiagnostics+1)& (0+255),b
 22057   007E0A  0E02               	movlw	2
 22058   007E0C  6FC1               	movwf	_consumerDiagnostics& (0+255),b
 22059   007E0E                     
 22060                           ; BSR set to: 5
 22061   007E0E  0012               	return		;funcret
 22062   007E10                     __end_of_consumerPowerUp:
 22063                           	callstack 0
 22064                           
 22065 ;; *************** function _canPowerUp *****************
 22066 ;; Defined at:
 22067 ;;		line 254 in file "../../VLCBlib_PIC/can18_can_2.c"
 22068 ;; Parameters:    Size  Location     Type
 22069 ;;		None
 22070 ;; Auto vars:     Size  Location     Type
 22071 ;;  temp            2   12[COMRAM] int 
 22072 ;;  txFifoObj       2    0        PTR unsigned char 
 22073 ;; Return value:  Size  Location     Type
 22074 ;;                  1    wreg      void 
 22075 ;; Registers used:
 22076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22077 ;; Tracked objects:
 22078 ;;		On entry : 0/0
 22079 ;;		On exit  : 0/0
 22080 ;;		Unchanged: 0/0
 22081 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22086 ;;Total ram usage:        2 bytes
 22087 ;; Hardware stack levels used: 1
 22088 ;; Hardware stack levels required when called: 3
 22089 ;; This function calls:
 22090 ;;		_CAN1_OperationModeSet
 22091 ;;		_prepareSelfEnumResponse
 22092 ;;		_readNVM
 22093 ;;		_tickGet
 22094 ;; This function is called by:
 22095 ;;		_powerUp
 22096 ;; This function uses a non-reentrant model
 22097 ;;
 22098                           
 22099                           	psect	text7
 22100   004C8C                     __ptext7:
 22101                           	callstack 0
 22102   004C8C                     _canPowerUp:
 22103                           	callstack 122
 22104   004C8C                     
 22105                           ;../../VLCBlib_PIC/can18_can_2.c: 255:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          6:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.readIndex =
      +                           0;
 22106   004C8C  0105               	movlb	5	; () banked
 22107   004C8E  6BC9               	clrf	(_rxQueue+2)& (0+255),b
 22108                           
 22109                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.writeIndex = 0;
 22110   004C90  6BCA               	clrf	(_rxQueue+3)& (0+255),b
 22111   004C92                     
 22112                           ; BSR set to: 5
 22113                           ;../../VLCBlib_PIC/can18_can_2.c: 261:     rxQueue.messages = rxBuffers;
 22114   004C92  0E46               	movlw	low _rxBuffers
 22115   004C94  6FC7               	movwf	_rxQueue& (0+255),b
 22116   004C96  0E06               	movlw	high _rxBuffers
 22117   004C98  6FC8               	movwf	(_rxQueue+1)& (0+255),b
 22118   004C9A                     
 22119                           ; BSR set to: 5
 22120                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     rxQueue.size = 8;
 22121   004C9A  0E08               	movlw	8
 22122   004C9C  6FCB               	movwf	(_rxQueue+4)& (0+255),b
 22123   004C9E                     
 22124                           ; BSR set to: 5
 22125                           ;../../VLCBlib_PIC/can18_can_2.c: 264:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 22126   004C9E  0EFE               	movlw	254
 22127   004CA0  6E07               	movwf	readNVM@index^(0+1280),c
 22128   004CA2  0E03               	movlw	3
 22129   004CA4  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22130   004CA6  0E00               	movlw	0
 22131   004CA8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22132   004CAA  0E00               	movlw	0
 22133   004CAC  EC8D  F03A         	call	_readNVM
 22134   004CB0  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 22135   004CB4  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 22136   004CB8                     
 22137                           ;../../VLCBlib_PIC/can18_can_2.c: 265:     if (temp < 0) {
 22138   004CB8  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22139   004CBA  EF63  F026         	goto	u6770
 22140   004CBE  EF61  F026         	goto	u6771
 22141   004CC2                     u6771:
 22142   004CC2  EF67  F026         	goto	l563
 22143   004CC6                     u6770:
 22144   004CC6                     
 22145                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = 0;
 22146   004CC6  0105               	movlb	5	; () banked
 22147   004CC8  6BA8               	clrf	_canId& (0+255),b
 22148                           
 22149                           ;../../VLCBlib_PIC/can18_can_2.c: 268:     } else {
 22150   004CCA  EF69  F026         	goto	l9468
 22151   004CCE                     l563:
 22152                           
 22153                           ;../../VLCBlib_PIC/can18_can_2.c: 269:         canId = (uint8_t)temp;
 22154   004CCE  C50D  F5A8         	movff	canPowerUp@temp,_canId
 22155   004CD2                     l9468:
 22156                           
 22157                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     for (temp=1; temp<18; temp++) {
 22158   004CD2  0E00               	movlw	0
 22159   004CD4  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 22160   004CD6  0E01               	movlw	1
 22161   004CD8  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 22162   004CDA                     l9474:
 22163                           
 22164                           ;../../VLCBlib_PIC/can18_can_2.c: 274:         canDiagnostics[temp].asUint = 0;
 22165   004CDA  90D8               	bcf	status,0,c
 22166   004CDC  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 22167   004CDE  6ED9               	movwf	fsr2l,c
 22168   004CE0  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 22169   004CE2  6EDA               	movwf	fsr2h,c
 22170   004CE4  0E8E               	movlw	low _canDiagnostics
 22171   004CE6  26D9               	addwf	fsr2l,f,c
 22172   004CE8  0E06               	movlw	high _canDiagnostics
 22173   004CEA  22DA               	addwfc	fsr2h,f,c
 22174   004CEC  6ADE               	clrf	postinc2,c
 22175   004CEE  6ADD               	clrf	postdec2,c
 22176   004CF0                     
 22177                           ;../../VLCBlib_PIC/can18_can_2.c: 275:     }
 22178   004CF0  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 22179   004CF2  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 22180   004CF4  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22181   004CF6  EF86  F026         	goto	u6781
 22182   004CFA  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 22183   004CFC  E109               	bnz	u6780
 22184   004CFE  0E12               	movlw	18
 22185   004D00  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 22186   004D02  A0D8               	btfss	status,0,c
 22187   004D04  EF86  F026         	goto	u6781
 22188   004D08  EF88  F026         	goto	u6780
 22189   004D0C                     u6781:
 22190   004D0C  EF6D  F026         	goto	l9474
 22191   004D10                     u6780:
 22192   004D10                     
 22193                           ;../../VLCBlib_PIC/can18_can_2.c: 276:     canDiagnostics[0x00].asUint = 18;
 22194   004D10  0E00               	movlw	0
 22195   004D12  0106               	movlb	6	; () banked
 22196   004D14  6F8F               	movwf	(_canDiagnostics+1)& (0+255),b
 22197   004D16  0E12               	movlw	18
 22198   004D18  6F8E               	movwf	_canDiagnostics& (0+255),b
 22199   004D1A                     
 22200                           ; BSR set to: 6
 22201                           ;../../VLCBlib_PIC/can18_can_2.c: 279:     canTransmitFailed=0;
 22202   004D1A  0105               	movlb	5	; () banked
 22203   004D1C  6BA7               	clrf	_canTransmitFailed& (0+255),b
 22204                           
 22205                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     RB2PPS = 0x46;
 22206   004D1E  0E46               	movlw	70
 22207   004D20  0102               	movlb	2	; () banked
 22208   004D22  6F0B               	movwf	11,b	;volatile
 22209                           
 22210                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     CANRXPPS = 013 ;
 22211   004D24  0E0B               	movlw	11
 22212   004D26  6F3D               	movwf	61,b	;volatile
 22213   004D28                     
 22214                           ; BSR set to: 2
 22215                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     TRISBbits.TRISB2 = 0;
 22216   004D28  94C7               	bcf	199,2,c	;volatile
 22217   004D2A                     
 22218                           ; BSR set to: 2
 22219                           ;../../VLCBlib_PIC/can18_can_2.c: 285:     TRISBbits.TRISB3 = 1;
 22220   004D2A  86C7               	bsf	199,3,c	;volatile
 22221   004D2C                     
 22222                           ; BSR set to: 2
 22223                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     IPR5 = 0;
 22224   004D2C  0103               	movlb	3	; () banked
 22225   004D2E  6B67               	clrf	103,b	;volatile
 22226   004D30                     
 22227                           ; BSR set to: 3
 22228                           ;../../VLCBlib_PIC/can18_can_2.c: 288:     C1CONHbits.ON = 1;
 22229   004D30  0101               	movlb	1	; () banked
 22230   004D32  8F01               	bsf	1,7,b	;volatile
 22231   004D34                     
 22232                           ; BSR set to: 1
 22233                           ;../../VLCBlib_PIC/can18_can_2.c: 291:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 22234   004D34  0E04               	movlw	4
 22235   004D36  EC24  F038         	call	_CAN1_OperationModeSet
 22236   004D3A  0900               	iorlw	0
 22237   004D3C  A4D8               	btfss	status,2,c
 22238   004D3E  EFA3  F026         	goto	u6791
 22239   004D42  EFA5  F026         	goto	u6790
 22240   004D46                     u6791:
 22241   004D46  EFE8  F026         	goto	l9578
 22242   004D4A                     u6790:
 22243   004D4A                     
 22244                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1FIFOBA = 0x3BB0;
 22245   004D4A  0EB0               	movlw	176
 22246   004D4C  0101               	movlb	1	; () banked
 22247   004D4E  6F4C               	movwf	76,b	;volatile
 22248   004D50  0E3B               	movlw	59
 22249   004D52  6F4D               	movwf	77,b	;volatile
 22250   004D54  0E00               	movlw	0
 22251   004D56  6F4E               	movwf	78,b	;volatile
 22252   004D58  0E00               	movlw	0
 22253   004D5A  6F4F               	movwf	79,b	;volatile
 22254   004D5C                     
 22255                           ; BSR set to: 1
 22256                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONL = 0x00;
 22257   004D5C  6B00               	clrf	0,b	;volatile
 22258                           
 22259                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONH = 0x87;
 22260   004D5E  0E87               	movlw	135
 22261   004D60  6F01               	movwf	1,b	;volatile
 22262                           
 22263                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1CONU = 0x10;
 22264   004D62  0E10               	movlw	16
 22265   004D64  6F02               	movwf	2,b	;volatile
 22266                           
 22267                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1CONT = 0x50;
 22268   004D66  0E50               	movlw	80
 22269   004D68  6F03               	movwf	3,b	;volatile
 22270   004D6A                     
 22271                           ; BSR set to: 1
 22272                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGL = 0x00;
 22273   004D6A  6B04               	clrf	4,b	;volatile
 22274                           
 22275                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGH = 0x03;
 22276   004D6C  0E03               	movlw	3
 22277   004D6E  6F05               	movwf	5,b	;volatile
 22278                           
 22279                           ;../../VLCBlib_PIC/can18_can_2.c: 303:         C1NBTCFGU = 0x02;
 22280   004D70  0E02               	movlw	2
 22281   004D72  6F06               	movwf	6,b	;volatile
 22282                           
 22283                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1NBTCFGT = 0x3F;
 22284   004D74  0E3F               	movlw	63
 22285   004D76  6F07               	movwf	7,b	;volatile
 22286                           
 22287                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONL = 0x10;
 22288   004D78  0E10               	movlw	16
 22289   004D7A  6F50               	movwf	80,b	;volatile
 22290                           
 22291                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONH = 0x04;
 22292   004D7C  0E04               	movlw	4
 22293   004D7E  6F51               	movwf	81,b	;volatile
 22294                           
 22295                           ;../../VLCBlib_PIC/can18_can_2.c: 308:         C1TXQCONU = 0x6F;
 22296   004D80  0E6F               	movlw	111
 22297   004D82  6F52               	movwf	82,b	;volatile
 22298   004D84                     
 22299                           ; BSR set to: 1
 22300   004D84  0E03               	movlw	3
 22301   004D86  6F53               	movwf	83,b	;volatile
 22302   004D88                     
 22303                           ; BSR set to: 1
 22304                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1L = 0x80;
 22305   004D88  0E80               	movlw	128
 22306   004D8A  6F5C               	movwf	92,b	;volatile
 22307   004D8C                     
 22308                           ; BSR set to: 1
 22309                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1H = 0x04;
 22310   004D8C  0E04               	movlw	4
 22311   004D8E  6F5D               	movwf	93,b	;volatile
 22312   004D90                     
 22313                           ; BSR set to: 1
 22314                           ;../../VLCBlib_PIC/can18_can_2.c: 316:         C1FIFOCON1U = 0x6F;
 22315   004D90  0E6F               	movlw	111
 22316   004D92  6F5E               	movwf	94,b	;volatile
 22317   004D94                     
 22318                           ; BSR set to: 1
 22319   004D94  6B5F               	clrf	95,b	;volatile
 22320   004D96                     
 22321                           ; BSR set to: 1
 22322                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2L = 0x80;
 22323   004D96  0E80               	movlw	128
 22324   004D98  6F68               	movwf	104,b	;volatile
 22325   004D9A                     
 22326                           ; BSR set to: 1
 22327                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2H = 0x04;
 22328   004D9A  0E04               	movlw	4
 22329   004D9C  6F69               	movwf	105,b	;volatile
 22330   004D9E                     
 22331                           ; BSR set to: 1
 22332                           ;../../VLCBlib_PIC/can18_can_2.c: 324:         C1FIFOCON2U = 0x60;
 22333   004D9E  0E60               	movlw	96
 22334   004DA0  6F6A               	movwf	106,b	;volatile
 22335   004DA2                     
 22336                           ; BSR set to: 1
 22337   004DA2  0E1F               	movlw	31
 22338   004DA4  6F6B               	movwf	107,b	;volatile
 22339   004DA6                     
 22340                           ; BSR set to: 1
 22341                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3L = 0x08;
 22342   004DA6  0E08               	movlw	8
 22343   004DA8  6F74               	movwf	116,b	;volatile
 22344   004DAA                     
 22345                           ; BSR set to: 1
 22346                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3H = 0x04;
 22347   004DAA  0E04               	movlw	4
 22348   004DAC  6F75               	movwf	117,b	;volatile
 22349   004DAE                     
 22350                           ; BSR set to: 1
 22351                           ;../../VLCBlib_PIC/can18_can_2.c: 332:         C1FIFOCON3U = 0x00;
 22352   004DAE  6B76               	clrf	118,b	;volatile
 22353   004DB0                     
 22354                           ; BSR set to: 1
 22355   004DB0  0E1F               	movlw	31
 22356   004DB2  6F77               	movwf	119,b	;volatile
 22357   004DB4                     
 22358                           ; BSR set to: 1
 22359                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0L = 0x00;
 22360   004DB4  6B8C               	clrf	140,b	;volatile
 22361   004DB6                     
 22362                           ; BSR set to: 1
 22363                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0H = 0x00;
 22364   004DB6  6B8D               	clrf	141,b	;volatile
 22365   004DB8                     
 22366                           ; BSR set to: 1
 22367                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1FLTOBJ0U = 0x00;
 22368   004DB8  6B8E               	clrf	142,b	;volatile
 22369   004DBA                     
 22370                           ; BSR set to: 1
 22371                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1FLTOBJ0T = 0x00;
 22372   004DBA  6B8F               	clrf	143,b	;volatile
 22373   004DBC                     
 22374                           ; BSR set to: 1
 22375                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0L = 0x00;
 22376   004DBC  6B90               	clrf	144,b	;volatile
 22377   004DBE                     
 22378                           ; BSR set to: 1
 22379                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0H = 0x00;
 22380   004DBE  6B91               	clrf	145,b	;volatile
 22381   004DC0                     
 22382                           ; BSR set to: 1
 22383                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1MASK0U = 0x00;
 22384   004DC0  6B92               	clrf	146,b	;volatile
 22385   004DC2                     
 22386                           ; BSR set to: 1
 22387                           ;../../VLCBlib_PIC/can18_can_2.c: 345:         C1MASK0T = 0x40;
 22388   004DC2  0E40               	movlw	64
 22389   004DC4  6F93               	movwf	147,b	;volatile
 22390   004DC6                     
 22391                           ; BSR set to: 1
 22392                           ;../../VLCBlib_PIC/can18_can_2.c: 346:         C1FLTCON0L = 0x83;
 22393   004DC6  0E83               	movlw	131
 22394   004DC8  6F80               	movwf	128,b	;volatile
 22395   004DCA                     
 22396                           ; BSR set to: 1
 22397                           ;../../VLCBlib_PIC/can18_can_2.c: 349:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 22398   004DCA  0E06               	movlw	6
 22399   004DCC  EC24  F038         	call	_CAN1_OperationModeSet
 22400   004DD0                     l9578:
 22401                           
 22402                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     prepareSelfEnumResponse();
 22403   004DD0  ECA0  F039         	call	_prepareSelfEnumResponse	;wreg free
 22404   004DD4                     
 22405                           ;../../VLCBlib_PIC/can18_can_2.c: 355:     enumerationState = NO_ENUMERATION;
 22406   004DD4  0105               	movlb	5	; () banked
 22407   004DD6  6BA5               	clrf	_enumerationState& (0+255),b
 22408   004DD8                     
 22409                           ; BSR set to: 5
 22410                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     enumerationStartTime.val = tickGet();
 22411   004DD8  EC18  F03A         	call	_tickGet	;wreg free
 22412   004DDC  C501  F574         	movff	?_tickGet,_enumerationStartTime
 22413   004DE0  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 22414   004DE4  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 22415   004DE8  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 22416   004DEC                     
 22417                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     IPR0bits.CANIP = 0;
 22418   004DEC  0103               	movlb	3	; () banked
 22419   004DEE  9D62               	bcf	98,6,b	;volatile
 22420   004DF0                     
 22421                           ; BSR set to: 3
 22422                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     PIR0bits.CANIF = 0;
 22423   004DF0  9CAE               	bcf	174,6,c	;volatile
 22424   004DF2                     
 22425                           ; BSR set to: 3
 22426                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTUbits.TXIE = 1;
 22427   004DF2  0101               	movlb	1	; () banked
 22428   004DF4  811E               	bsf	30,0,b	;volatile
 22429   004DF6                     
 22430                           ; BSR set to: 1
 22431                           ;../../VLCBlib_PIC/can18_can_2.c: 361:     C1INTTbits.RXOVIE = 1;
 22432   004DF6  871F               	bsf	31,3,b	;volatile
 22433   004DF8                     
 22434                           ; BSR set to: 1
 22435                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     C1INTTbits.IVMIE = 1;
 22436   004DF8  8F1F               	bsf	31,7,b	;volatile
 22437   004DFA                     
 22438                           ; BSR set to: 1
 22439                           ;../../VLCBlib_PIC/can18_can_2.c: 364:     PIE0bits.CANIE = 1;
 22440   004DFA  8C9E               	bsf	158,6,c	;volatile
 22441   004DFC                     
 22442                           ; BSR set to: 1
 22443   004DFC  0012               	return		;funcret
 22444   004DFE                     __end_of_canPowerUp:
 22445                           	callstack 0
 22446                           
 22447 ;; *************** function _bootPowerUp *****************
 22448 ;; Defined at:
 22449 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 22450 ;; Parameters:    Size  Location     Type
 22451 ;;		None
 22452 ;; Auto vars:     Size  Location     Type
 22453 ;;  a               3   15[COMRAM] unsigned um
 22454 ;;  i               1   14[COMRAM] unsigned char 
 22455 ;;  found           1   13[COMRAM] unsigned char 
 22456 ;;  b               1   12[COMRAM] unsigned char 
 22457 ;; Return value:  Size  Location     Type
 22458 ;;                  1    wreg      void 
 22459 ;; Registers used:
 22460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22461 ;; Tracked objects:
 22462 ;;		On entry : 0/0
 22463 ;;		On exit  : 0/0
 22464 ;;		Unchanged: 0/0
 22465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22467 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22470 ;;Total ram usage:        6 bytes
 22471 ;; Hardware stack levels used: 1
 22472 ;; Hardware stack levels required when called: 3
 22473 ;; This function calls:
 22474 ;;		_readNVM
 22475 ;; This function is called by:
 22476 ;;		_powerUp
 22477 ;; This function uses a non-reentrant model
 22478 ;;
 22479                           
 22480                           	psect	text8
 22481   005C3E                     __ptext8:
 22482                           	callstack 0
 22483   005C3E                     _bootPowerUp:
 22484                           	callstack 122
 22485   005C3E                     
 22486                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 22487   005C3E  0105               	movlb	5	; () banked
 22488   005C40  6BAA               	clrf	_bootloaderType& (0+255),b
 22489                           
 22490                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 22491   005C42  6BA9               	clrf	_bootloaderVersion& (0+255),b
 22492   005C44                     
 22493                           ; BSR set to: 5
 22494                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 22495   005C44  0E00               	movlw	0
 22496   005C46  6E10               	movwf	bootPowerUp@a^(0+1280),c
 22497   005C48  0E00               	movlw	0
 22498   005C4A  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 22499   005C4C  0E00               	movlw	0
 22500   005C4E  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 22501   005C50                     l9394:
 22502   005C50                     
 22503                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 22504   005C50  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 22505   005C52                     l9402:
 22506                           
 22507                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 22508   005C52  500F               	movf	bootPowerUp@i^(0+1280),w,c
 22509   005C54  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22510   005C56  6E07               	movwf	readNVM@index^(0+1280),c
 22511   005C58  0E00               	movlw	0
 22512   005C5A  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22513   005C5C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22514   005C5E  0E00               	movlw	0
 22515   005C60  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22516   005C62  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22517   005C64  0E01               	movlw	1
 22518   005C66  EC8D  F03A         	call	_readNVM
 22519   005C6A  5007               	movf	?_readNVM^(0+1280),w,c
 22520   005C6C  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 22521   005C6E                     
 22522                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 22523   005C6E  0E95               	movlw	low _bl_version
 22524   005C70  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 22525   005C72  6EF6               	movwf	tblptrl,c
 22526   005C74  6AF7               	clrf	tblptrh,c
 22527   005C76  0EFF               	movlw	high _bl_version
 22528   005C78  22F7               	addwfc	tblptrh,f,c
 22529   005C7A                     	if	1	;There are 3 active tblptr bytes
 22530   005C7A  6AF8               	clrf	tblptru,c
 22531   005C7C  0E00               	movlw	low (__mediumconst shr (0+16))
 22532   005C7E  22F8               	addwfc	tblptru,f,c
 22533   005C80                     	endif
 22534   005C80  0008               	tblrd		*
 22535   005C82  50F5               	movf	tablat,w,c
 22536   005C84  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 22537   005C86  B4D8               	btfsc	status,2,c
 22538   005C88  EF48  F02E         	goto	u6711
 22539   005C8C  EF4A  F02E         	goto	u6710
 22540   005C90                     u6711:
 22541   005C90  EF4D  F02E         	goto	l9410
 22542   005C94                     u6710:
 22543   005C94                     
 22544                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 22545   005C94  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 22546                           
 22547                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 22548   005C96  EF58  F02E         	goto	l9416
 22549   005C9A                     l9410:
 22550                           
 22551                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 22552   005C9A  0E01               	movlw	1
 22553   005C9C  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 22554   005C9E                     
 22555                           ;../../VLCBlib_PIC/boot.c: 217:         }
 22556   005C9E  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 22557   005CA0  0E0A               	movlw	10
 22558   005CA2  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 22559   005CA4  EF56  F02E         	goto	u6721
 22560   005CA8  EF58  F02E         	goto	u6720
 22561   005CAC                     u6721:
 22562   005CAC  EF29  F02E         	goto	l9402
 22563   005CB0                     u6720:
 22564   005CB0                     l9416:
 22565                           
 22566                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 22567   005CB0  500E               	movf	bootPowerUp@found^(0+1280),w,c
 22568   005CB2  B4D8               	btfsc	status,2,c
 22569   005CB4  EF5E  F02E         	goto	u6731
 22570   005CB8  EF60  F02E         	goto	u6730
 22571   005CBC                     u6731:
 22572   005CBC  EF80  F02E         	goto	l333
 22573   005CC0                     u6730:
 22574   005CC0                     
 22575                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 22576   005CC0  0E0B               	movlw	11
 22577   005CC2  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22578   005CC4  6E07               	movwf	readNVM@index^(0+1280),c
 22579   005CC6  0E00               	movlw	0
 22580   005CC8  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22581   005CCA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22582   005CCC  0E00               	movlw	0
 22583   005CCE  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22584   005CD0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22585   005CD2  0E01               	movlw	1
 22586   005CD4  EC8D  F03A         	call	_readNVM
 22587   005CD8  5007               	movf	?_readNVM^(0+1280),w,c
 22588   005CDA  0105               	movlb	5	; () banked
 22589   005CDC  6FAA               	movwf	_bootloaderType& (0+255),b
 22590                           
 22591                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 22592   005CDE  0E0C               	movlw	12
 22593   005CE0  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22594   005CE2  6E07               	movwf	readNVM@index^(0+1280),c
 22595   005CE4  0E00               	movlw	0
 22596   005CE6  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22597   005CE8  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22598   005CEA  0E00               	movlw	0
 22599   005CEC  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22600   005CEE  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22601   005CF0  0E01               	movlw	1
 22602   005CF2  EC8D  F03A         	call	_readNVM
 22603   005CF6  5007               	movf	?_readNVM^(0+1280),w,c
 22604   005CF8  0105               	movlb	5	; () banked
 22605   005CFA  6FA9               	movwf	_bootloaderVersion& (0+255),b
 22606   005CFC  EF92  F02E         	goto	l334
 22607   005D00                     l333:
 22608                           
 22609                           ;../../VLCBlib_PIC/boot.c: 223:     }
 22610   005D00  0E01               	movlw	1
 22611   005D02  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 22612   005D04  0E00               	movlw	0
 22613   005D06  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 22614   005D08  0E00               	movlw	0
 22615   005D0A  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 22616   005D0C  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 22617   005D0E  E10A               	bnz	u6740
 22618   005D10  2810               	incf	bootPowerUp@a^(0+1280),w,c
 22619   005D12  0E07               	movlw	7
 22620   005D14  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 22621   005D16  A0D8               	btfss	status,0,c
 22622   005D18  EF90  F02E         	goto	u6741
 22623   005D1C  EF92  F02E         	goto	u6740
 22624   005D20                     u6741:
 22625   005D20  EF28  F02E         	goto	l9394
 22626   005D24                     u6740:
 22627   005D24                     l334:
 22628   005D24  0012               	return		;funcret
 22629   005D26                     __end_of_bootPowerUp:
 22630                           	callstack 0
 22631                           
 22632 ;; *************** function _teachPowerUp *****************
 22633 ;; Defined at:
 22634 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 22635 ;; Parameters:    Size  Location     Type
 22636 ;;		None
 22637 ;; Auto vars:     Size  Location     Type
 22638 ;;  i               1   39[COMRAM] unsigned char 
 22639 ;; Return value:  Size  Location     Type
 22640 ;;                  1    wreg      void 
 22641 ;; Registers used:
 22642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22643 ;; Tracked objects:
 22644 ;;		On entry : 0/0
 22645 ;;		On exit  : 0/0
 22646 ;;		Unchanged: 0/0
 22647 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22652 ;;Total ram usage:        1 bytes
 22653 ;; Hardware stack levels used: 1
 22654 ;; Hardware stack levels required when called: 5
 22655 ;; This function calls:
 22656 ;;		_rebuildHashtable
 22657 ;; This function is called by:
 22658 ;;		_powerUp
 22659 ;; This function uses a non-reentrant model
 22660 ;;
 22661                           
 22662                           	psect	text9
 22663   007D62                     __ptext9:
 22664                           	callstack 0
 22665   007D62                     _teachPowerUp:
 22666                           	callstack 120
 22667   007D62                     
 22668                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 22669   007D62  ECB9  F02B         	call	_rebuildHashtable	;wreg free
 22670   007D66                     
 22671                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 22672   007D66  0E01               	movlw	1
 22673   007D68  6E28               	movwf	teachPowerUp@i^(0+1280),c
 22674   007D6A                     l9816:
 22675                           
 22676                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 22677   007D6A  5028               	movf	teachPowerUp@i^(0+1280),w,c
 22678   007D6C  0D02               	mullw	2
 22679   007D6E  0ECC               	movlw	low _teachDiagnostics
 22680   007D70  24F3               	addwf	243,w,c
 22681   007D72  6ED9               	movwf	fsr2l,c
 22682   007D74  0E05               	movlw	high _teachDiagnostics
 22683   007D76  20F4               	addwfc	prodh,w,c
 22684   007D78  6EDA               	movwf	fsr2h,c
 22685   007D7A  6ADE               	clrf	postinc2,c
 22686   007D7C  6ADD               	clrf	postdec2,c
 22687   007D7E                     
 22688                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 22689   007D7E  2A28               	incf	teachPowerUp@i^(0+1280),f,c
 22690   007D80  0E01               	movlw	1
 22691   007D82  6428               	cpfsgt	teachPowerUp@i^(0+1280),c
 22692   007D84  EFC6  F03E         	goto	u7021
 22693   007D88  EFC8  F03E         	goto	u7020
 22694   007D8C                     u7021:
 22695   007D8C  EFB5  F03E         	goto	l9816
 22696   007D90                     u7020:
 22697   007D90                     
 22698                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 22699   007D90  0E00               	movlw	0
 22700   007D92  0105               	movlb	5	; () banked
 22701   007D94  6FCD               	movwf	(_teachDiagnostics+1)& (0+255),b
 22702   007D96  0E01               	movlw	1
 22703   007D98  6FCC               	movwf	_teachDiagnostics& (0+255),b
 22704   007D9A                     
 22705                           ; BSR set to: 5
 22706                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 22707   007D9A  6BA3               	clrf	_errno& (0+255),b
 22708   007D9C                     
 22709                           ; BSR set to: 5
 22710                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 22711   007D9C  91A4               	bcf	_mode_flags& (0+255),0,b
 22712   007D9E                     
 22713                           ; BSR set to: 5
 22714   007D9E  0012               	return		;funcret
 22715   007DA0                     __end_of_teachPowerUp:
 22716                           	callstack 0
 22717                           
 22718 ;; *************** function _loadNvCache *****************
 22719 ;; Defined at:
 22720 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 22721 ;; Parameters:    Size  Location     Type
 22722 ;;		None
 22723 ;; Auto vars:     Size  Location     Type
 22724 ;;  temp            2   14[COMRAM] short 
 22725 ;;  i               1   16[COMRAM] unsigned char 
 22726 ;; Return value:  Size  Location     Type
 22727 ;;                  1    wreg      void 
 22728 ;; Registers used:
 22729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22730 ;; Tracked objects:
 22731 ;;		On entry : 0/0
 22732 ;;		On exit  : 0/0
 22733 ;;		Unchanged: 0/0
 22734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22736 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22738 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22739 ;;Total ram usage:        5 bytes
 22740 ;; Hardware stack levels used: 1
 22741 ;; Hardware stack levels required when called: 3
 22742 ;; This function calls:
 22743 ;;		_readNVM
 22744 ;; This function is called by:
 22745 ;;		_nvPowerUp
 22746 ;; This function uses a non-reentrant model
 22747 ;;
 22748                           
 22749                           	psect	text10
 22750   0077A4                     __ptext10:
 22751                           	callstack 0
 22752   0077A4                     _loadNvCache:
 22753                           	callstack 121
 22754   0077A4                     
 22755                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 49; i++) {
 22756   0077A4  0E01               	movlw	1
 22757   0077A6  6E11               	movwf	loadNvCache@i^(0+1280),c
 22758   0077A8                     l9024:
 22759                           
 22760                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 22761   0077A8  0E00               	movlw	0
 22762   0077AA  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22763   0077AC  6E0D               	movwf	??_loadNvCache^(0+1280),c
 22764   0077AE  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 22765   0077B0  0E02               	movlw	2
 22766   0077B2  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 22767   0077B4  C50D  F507         	movff	??_loadNvCache,readNVM@index
 22768   0077B8  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 22769   0077BC  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 22770   0077BE  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 22771   0077C0  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 22772   0077C2  0E00               	movlw	0
 22773   0077C4  EC8D  F03A         	call	_readNVM
 22774   0077C8  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 22775   0077CC  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 22776   0077D0                     
 22777                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 22778   0077D0  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 22779   0077D2  EFEF  F03B         	goto	u6330
 22780   0077D6  EFED  F03B         	goto	u6331
 22781   0077DA                     u6331:
 22782   0077DA  EFF1  F03B         	goto	l9030
 22783   0077DE                     u6330:
 22784   0077DE  EFF9  F03B         	goto	l9032
 22785   0077E2                     l9030:
 22786                           
 22787                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 22788   0077E2  0E00               	movlw	low _nvCache
 22789   0077E4  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22790   0077E6  6ED9               	movwf	fsr2l,c
 22791   0077E8  6ADA               	clrf	fsr2h,c
 22792   0077EA  0E06               	movlw	high _nvCache
 22793   0077EC  22DA               	addwfc	fsr2h,f,c
 22794   0077EE  C50F  F4DF         	movff	loadNvCache@temp,indf2
 22795   0077F2                     l9032:
 22796                           
 22797                           ;../../VLCBlib_PIC/nv.c: 173:     }
 22798   0077F2  2A11               	incf	loadNvCache@i^(0+1280),f,c
 22799   0077F4  0E31               	movlw	49
 22800   0077F6  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 22801   0077F8  EF00  F03C         	goto	u6341
 22802   0077FC  EF02  F03C         	goto	u6340
 22803   007800                     u6341:
 22804   007800  EFD4  F03B         	goto	l9024
 22805   007804                     u6340:
 22806   007804  0012               	return		;funcret
 22807   007806                     __end_of_loadNvCache:
 22808                           	callstack 0
 22809                           
 22810 ;; *************** function _leds_powerUp *****************
 22811 ;; Defined at:
 22812 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 22813 ;; Parameters:    Size  Location     Type
 22814 ;;		None
 22815 ;; Auto vars:     Size  Location     Type
 22816 ;;		None
 22817 ;; Return value:  Size  Location     Type
 22818 ;;                  1    wreg      void 
 22819 ;; Registers used:
 22820 ;;		wreg, status,2, status,0, cstack
 22821 ;; Tracked objects:
 22822 ;;		On entry : 0/0
 22823 ;;		On exit  : 0/0
 22824 ;;		Unchanged: 0/0
 22825 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22830 ;;Total ram usage:        0 bytes
 22831 ;; Hardware stack levels used: 1
 22832 ;; Hardware stack levels required when called: 2
 22833 ;; This function calls:
 22834 ;;		_tickGet
 22835 ;; This function is called by:
 22836 ;;		_powerUp
 22837 ;; This function uses a non-reentrant model
 22838 ;;
 22839                           
 22840                           	psect	text11
 22841   008160                     __ptext11:
 22842                           	callstack 0
 22843   008160                     _leds_powerUp:
 22844                           	callstack 123
 22845   008160                     
 22846                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
 22847   008160  0104               	movlb	4	; () banked
 22848   008162  6B08               	clrf	8,b	;volatile
 22849   008164  6B00               	clrf	0,b	;volatile
 22850   008166  9EC7               	bcf	199,7,c	;volatile
 22851   008168  9CC7               	bcf	199,6,c	;volatile
 22852   00816A  84C6               	bsf	198,2,c	;volatile
 22853                           
 22854                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 22855   00816C  0105               	movlb	5	; () banked
 22856   00816E  6B89               	clrf	_flashCounter& (0+255),b
 22857                           
 22858                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 22859   008170  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 22860   008172                     
 22861                           ; BSR set to: 5
 22862                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 22863   008172  EC18  F03A         	call	_tickGet	;wreg free
 22864   008176  C501  F564         	movff	?_tickGet,_ledTimer
 22865   00817A  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 22866   00817E  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 22867   008182  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 22868   008186  0012               	return		;funcret
 22869   008188                     __end_of_leds_powerUp:
 22870                           	callstack 0
 22871                           
 22872 ;; *************** function _initTimedResponse *****************
 22873 ;; Defined at:
 22874 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 22875 ;; Parameters:    Size  Location     Type
 22876 ;;		None
 22877 ;; Auto vars:     Size  Location     Type
 22878 ;;		None
 22879 ;; Return value:  Size  Location     Type
 22880 ;;                  1    wreg      void 
 22881 ;; Registers used:
 22882 ;;		None
 22883 ;; Tracked objects:
 22884 ;;		On entry : 0/0
 22885 ;;		On exit  : 0/0
 22886 ;;		Unchanged: 0/0
 22887 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22892 ;;Total ram usage:        0 bytes
 22893 ;; Hardware stack levels used: 1
 22894 ;; Hardware stack levels required when called: 1
 22895 ;; This function calls:
 22896 ;;		Nothing
 22897 ;; This function is called by:
 22898 ;;		_powerUp
 22899 ;; This function uses a non-reentrant model
 22900 ;;
 22901                           
 22902                           	psect	text12
 22903   008338                     __ptext12:
 22904                           	callstack 0
 22905   008338                     _initTimedResponse:
 22906                           	callstack 124
 22907   008338                     
 22908                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 22909   008338  0105               	movlb	5	; () banked
 22910   00833A  6996               	setf	_timedResponseType& (0+255),b
 22911   00833C                     
 22912                           ; BSR set to: 5
 22913   00833C  0012               	return		;funcret
 22914   00833E                     __end_of_initTimedResponse:
 22915                           	callstack 0
 22916                           
 22917 ;; *************** function _initTicker *****************
 22918 ;; Defined at:
 22919 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 22920 ;; Parameters:    Size  Location     Type
 22921 ;;  priority        1    wreg     unsigned char 
 22922 ;; Auto vars:     Size  Location     Type
 22923 ;;  priority        1    1[COMRAM] unsigned char 
 22924 ;;  i               1    3[COMRAM] unsigned char 
 22925 ;;  divider         1    2[COMRAM] unsigned char 
 22926 ;; Return value:  Size  Location     Type
 22927 ;;                  1    wreg      void 
 22928 ;; Registers used:
 22929 ;;		wreg, status,2, status,0
 22930 ;; Tracked objects:
 22931 ;;		On entry : 0/0
 22932 ;;		On exit  : 0/0
 22933 ;;		Unchanged: 0/0
 22934 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22938 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22939 ;;Total ram usage:        4 bytes
 22940 ;; Hardware stack levels used: 1
 22941 ;; Hardware stack levels required when called: 1
 22942 ;; This function calls:
 22943 ;;		Nothing
 22944 ;; This function is called by:
 22945 ;;		_powerUp
 22946 ;; This function uses a non-reentrant model
 22947 ;;
 22948                           
 22949                           	psect	text13
 22950   007806                     __ptext13:
 22951                           	callstack 0
 22952   007806                     _initTicker:
 22953                           	callstack 124
 22954                           
 22955                           ; BSR set to: 5
 22956                           ;incstack = 0
 22957                           ;initTicker@priority stored from wreg
 22958   007806  6E02               	movwf	initTicker@priority^(0+1280),c
 22959   007808                     
 22960                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 22961   007808  6A03               	clrf	initTicker@divider^(0+1280),c
 22962   00780A                     
 22963                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 22964   00780A  0E40               	movlw	64
 22965   00780C  6E04               	movwf	initTicker@i^(0+1280),c
 22966   00780E                     l10794:
 22967                           
 22968                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 22969   00780E  2A03               	incf	initTicker@divider^(0+1280),f,c
 22970   007810  90D8               	bcf	status,0,c
 22971   007812  3204               	rrcf	initTicker@i^(0+1280),f,c
 22972   007814  5004               	movf	initTicker@i^(0+1280),w,c
 22973   007816  A4D8               	btfss	status,2,c
 22974   007818  EF10  F03C         	goto	u8141
 22975   00781C  EF12  F03C         	goto	u8140
 22976   007820                     u8141:
 22977   007820  EF07  F03C         	goto	l10794
 22978   007824                     u8140:
 22979   007824                     
 22980                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 22981   007824  C503  F501         	movff	initTicker@divider,??_initTicker
 22982   007828  0E01               	movlw	1
 22983   00782A  2601               	addwf	??_initTicker^(0+1280),f,c
 22984   00782C  0103               	movlb	3	; () banked
 22985   00782E  511B               	movf	27,w,b	;volatile
 22986   007830  1801               	xorwf	??_initTicker^(0+1280),w,c
 22987   007832  0BF0               	andlw	-16
 22988   007834  1801               	xorwf	??_initTicker^(0+1280),w,c
 22989   007836  6F1B               	movwf	27,b	;volatile
 22990   007838                     
 22991                           ; BSR set to: 3
 22992                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 22993   007838  891A               	bsf	26,4,b	;volatile
 22994   00783A                     
 22995                           ; BSR set to: 3
 22996                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 22997   00783A  511B               	movf	27,w,b	;volatile
 22998   00783C  0B1F               	andlw	-225
 22999   00783E  0940               	iorlw	64
 23000   007840  6F1B               	movwf	27,b	;volatile
 23001   007842                     
 23002                           ; BSR set to: 3
 23003                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 23004   007842  6B19               	clrf	25,b	;volatile
 23005   007844                     
 23006                           ; BSR set to: 3
 23007                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 23008   007844  6B18               	clrf	24,b	;volatile
 23009   007846                     
 23010                           ; BSR set to: 3
 23011                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 23012   007846  B002               	btfsc	initTicker@priority^(0+1280),0,c
 23013   007848  EF28  F03C         	goto	u8151
 23014   00784C  EF2B  F03C         	goto	u8150
 23015   007850                     u8151:
 23016   007850  8F65               	bsf	101,7,b	;volatile
 23017   007852  EF2D  F03C         	goto	u8165
 23018   007856                     u8150:
 23019   007856  0103               	movlb	3	; () banked
 23020   007858  9F65               	bcf	101,7,b	;volatile
 23021   00785A                     u8165:
 23022   00785A                     
 23023                           ; BSR set to: 3
 23024                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 23025   00785A  9EB1               	bcf	1201,7,c	;volatile
 23026   00785C                     
 23027                           ; BSR set to: 3
 23028                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 23029   00785C  8EA1               	bsf	1185,7,c	;volatile
 23030   00785E                     
 23031                           ; BSR set to: 3
 23032                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 23033   00785E  8F1A               	bsf	26,7,b	;volatile
 23034   007860                     
 23035                           ; BSR set to: 3
 23036                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 23037   007860  0105               	movlb	5	; () banked
 23038   007862  6B9A               	clrf	_timerExtension1& (0+255),b	;volatile
 23039   007864                     
 23040                           ; BSR set to: 5
 23041                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 23042   007864  6B99               	clrf	_timerExtension2& (0+255),b	;volatile
 23043   007866                     
 23044                           ; BSR set to: 5
 23045   007866  0012               	return		;funcret
 23046   007868                     __end_of_initTicker:
 23047                           	callstack 0
 23048                           
 23049 ;; *************** function _CAN1_OperationModeSet *****************
 23050 ;; Defined at:
 23051 ;;		line 919 in file "../../VLCBlib_PIC/can18_can_2.c"
 23052 ;; Parameters:    Size  Location     Type
 23053 ;;  requestMode     1    wreg     const enum E23640
 23054 ;; Auto vars:     Size  Location     Type
 23055 ;;  requestMode     1    1[COMRAM] const enum E23640
 23056 ;;  status          1    0[COMRAM] enum E23649
 23057 ;; Return value:  Size  Location     Type
 23058 ;;                  1    wreg      enum E23649
 23059 ;; Registers used:
 23060 ;;		wreg, status,2, status,0, cstack
 23061 ;; Tracked objects:
 23062 ;;		On entry : 0/0
 23063 ;;		On exit  : 0/0
 23064 ;;		Unchanged: 0/0
 23065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23070 ;;Total ram usage:        2 bytes
 23071 ;; Hardware stack levels used: 1
 23072 ;; Hardware stack levels required when called: 2
 23073 ;; This function calls:
 23074 ;;		_CAN1_OperationModeGet
 23075 ;; This function is called by:
 23076 ;;		_canPowerUp
 23077 ;; This function uses a non-reentrant model
 23078 ;;
 23079                           
 23080                           	psect	text14
 23081   007048                     __ptext14:
 23082                           	callstack 0
 23083   007048                     _CAN1_OperationModeSet:
 23084                           	callstack 122
 23085                           
 23086                           ; BSR set to: 5
 23087                           ;incstack = 0
 23088                           ;CAN1_OperationModeSet@requestMode stored from wreg
 23089   007048  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 23090   00704A                     
 23091                           ;../../VLCBlib_PIC/can18_can_2.c: 919: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 920: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 921:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 23092   00704A  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 23093   00704C                     
 23094                           ;../../VLCBlib_PIC/can18_can_2.c: 923:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 23095   00704C  EC8A  F041         	call	_CAN1_OperationModeGet	;wreg free
 23096   007050  0A04               	xorlw	4
 23097   007052  B4D8               	btfsc	status,2,c
 23098   007054  EF2E  F038         	goto	u5811
 23099   007058  EF30  F038         	goto	u5810
 23100   00705C                     u5811:
 23101   00705C  EF41  F038         	goto	l8534
 23102   007060                     u5810:
 23103   007060  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23104   007062  B4D8               	btfsc	status,2,c
 23105   007064  EF36  F038         	goto	u5821
 23106   007068  EF38  F038         	goto	u5820
 23107   00706C                     u5821:
 23108   00706C  EF41  F038         	goto	l8534
 23109   007070                     u5820:
 23110   007070  0E04               	movlw	4
 23111   007072  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23112   007074  A4D8               	btfss	status,2,c
 23113   007076  EF3F  F038         	goto	u5831
 23114   00707A  EF41  F038         	goto	u5830
 23115   00707E                     u5831:
 23116   00707E  EF61  F038         	goto	l8540
 23117   007082                     u5830:
 23118   007082                     l8534:
 23119                           
 23120                           ;../../VLCBlib_PIC/can18_can_2.c: 926:     {;../../VLCBlib_PIC/can18_can_2.c: 927:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 23121   007082  0101               	movlb	1	; () banked
 23122   007084  5103               	movf	3,w,b	;volatile
 23123   007086  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23124   007088  0BF8               	andlw	-8
 23125   00708A  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23126   00708C  6F03               	movwf	3,b	;volatile
 23127                           
 23128                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23129   00708E  EF54  F038         	goto	l8538
 23130   007092                     l747:
 23131                           
 23132                           ; BSR set to: 1
 23133                           ;../../VLCBlib_PIC/can18_can_2.c: 930:         {;../../VLCBlib_PIC/can18_can_2.c: 932:  
      +                                     if (C1INTHbits.SERRIF == 1)
 23134   007092  A91D               	btfss	29,4,b	;volatile
 23135   007094  EF4E  F038         	goto	u5841
 23136   007098  EF50  F038         	goto	u5840
 23137   00709C                     u5841:
 23138   00709C  EF54  F038         	goto	l8538
 23139   0070A0                     u5840:
 23140   0070A0                     
 23141                           ; BSR set to: 1
 23142                           ;../../VLCBlib_PIC/can18_can_2.c: 933:             {;../../VLCBlib_PIC/can18_can_2.c: 93
      +                          4:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 23143   0070A0  0E02               	movlw	2
 23144   0070A2  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23145                           
 23146                           ;../../VLCBlib_PIC/can18_can_2.c: 935:                 break;
 23147   0070A4  EF63  F038         	goto	l750
 23148   0070A8                     l8538:
 23149                           
 23150                           ; BSR set to: 1
 23151                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23152   0070A8  3902               	swapf	2,w,b	;volatile
 23153   0070AA  32E8               	rrcf	wreg,f,c
 23154   0070AC  0B07               	andlw	7
 23155   0070AE  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23156   0070B0  A4D8               	btfss	status,2,c
 23157   0070B2  EF5D  F038         	goto	u5851
 23158   0070B6  EF5F  F038         	goto	u5850
 23159   0070BA                     u5851:
 23160   0070BA  EF49  F038         	goto	l747
 23161   0070BE                     u5850:
 23162   0070BE  EF63  F038         	goto	l750
 23163   0070C2                     l8540:
 23164                           
 23165                           ;../../VLCBlib_PIC/can18_can_2.c: 940:     {;../../VLCBlib_PIC/can18_can_2.c: 941:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 23166   0070C2  0E01               	movlw	1
 23167   0070C4  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23168   0070C6                     l750:
 23169                           
 23170                           ;../../VLCBlib_PIC/can18_can_2.c: 944:     return status;
 23171   0070C6  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 23172   0070C8  0012               	return		;funcret
 23173   0070CA                     __end_of_CAN1_OperationModeSet:
 23174                           	callstack 0
 23175                           
 23176 ;; *************** function _CAN1_OperationModeGet *****************
 23177 ;; Defined at:
 23178 ;;		line 952 in file "../../VLCBlib_PIC/can18_can_2.c"
 23179 ;; Parameters:    Size  Location     Type
 23180 ;;		None
 23181 ;; Auto vars:     Size  Location     Type
 23182 ;;		None
 23183 ;; Return value:  Size  Location     Type
 23184 ;;                  1    wreg      enum E23640
 23185 ;; Registers used:
 23186 ;;		wreg, status,2, status,0
 23187 ;; Tracked objects:
 23188 ;;		On entry : 0/0
 23189 ;;		On exit  : 0/0
 23190 ;;		Unchanged: 0/0
 23191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23196 ;;Total ram usage:        0 bytes
 23197 ;; Hardware stack levels used: 1
 23198 ;; Hardware stack levels required when called: 1
 23199 ;; This function calls:
 23200 ;;		Nothing
 23201 ;; This function is called by:
 23202 ;;		_CAN1_OperationModeSet
 23203 ;; This function uses a non-reentrant model
 23204 ;;
 23205                           
 23206                           	psect	text15
 23207   008314                     __ptext15:
 23208                           	callstack 0
 23209   008314                     _CAN1_OperationModeGet:
 23210                           	callstack 122
 23211   008314                     
 23212                           ;../../VLCBlib_PIC/can18_can_2.c: 954:     return C1CONUbits.OPMOD;
 23213   008314  0101               	movlb	1	; () banked
 23214   008316  3902               	swapf	2,w,b	;volatile
 23215   008318  32E8               	rrcf	wreg,f,c
 23216   00831A  0B07               	andlw	7
 23217   00831C                     
 23218                           ; BSR set to: 1
 23219   00831C  0012               	return		;funcret
 23220   00831E                     __end_of_CAN1_OperationModeGet:
 23221                           	callstack 0
 23222                           
 23223 ;; *************** function _poll *****************
 23224 ;; Defined at:
 23225 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 23226 ;; Parameters:    Size  Location     Type
 23227 ;;		None
 23228 ;; Auto vars:     Size  Location     Type
 23229 ;;  m               9   36[BANK5 ] struct Message
 23230 ;;  i               1   35[BANK5 ] unsigned char 
 23231 ;;  handled         1   34[BANK5 ] enum E23340
 23232 ;; Return value:  Size  Location     Type
 23233 ;;                  1    wreg      void 
 23234 ;; Registers used:
 23235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23236 ;; Tracked objects:
 23237 ;;		On entry : 0/0
 23238 ;;		On exit  : 0/0
 23239 ;;		Unchanged: 0/0
 23240 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23242 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23243 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23244 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23245 ;;Total ram usage:       15 bytes
 23246 ;; Hardware stack levels used: 1
 23247 ;; Hardware stack levels required when called: 11
 23248 ;; This function calls:
 23249 ;;		NULL
 23250 ;;		_APP_postProcessMessage
 23251 ;;		_APP_preProcessMessage
 23252 ;;		___lmul
 23253 ;;		_bootProcessMessage
 23254 ;;		_canPoll
 23255 ;;		_canProcessMessage
 23256 ;;		_canReceiveMessage
 23257 ;;		_consumerProcessMessage
 23258 ;;		_flushFlashBlock
 23259 ;;		_leds_poll
 23260 ;;		_mnsPoll
 23261 ;;		_mnsProcessMessage
 23262 ;;		_nvProcessMessage
 23263 ;;		_pollTimedResponse
 23264 ;;		_showStatus
 23265 ;;		_teachProcessMessage
 23266 ;;		_tickGet
 23267 ;; This function is called by:
 23268 ;;		_main
 23269 ;; This function uses a non-reentrant model
 23270 ;;
 23271                           
 23272                           	psect	text16
 23273   002EC6                     __ptext16:
 23274                           	callstack 0
 23275   002EC6                     _poll:
 23276                           	callstack 115
 23277   002EC6                     
 23278                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 23279   002EC6  EC18  F03A         	call	_tickGet	;wreg free
 23280   002ECA  0105               	movlb	5	; () banked
 23281   002ECC  5160               	movf	_timedResponseTime& (0+255),w,b
 23282   002ECE  5C01               	subwf	?_tickGet^(0+1280),w,c
 23283   002ED0  6FEE               	movwf	??_poll& (0+255),b
 23284   002ED2  5161               	movf	(_timedResponseTime+1)& (0+255),w,b
 23285   002ED4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23286   002ED6  6FEF               	movwf	(??_poll+1)& (0+255),b
 23287   002ED8  5162               	movf	(_timedResponseTime+2)& (0+255),w,b
 23288   002EDA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23289   002EDC  6FF0               	movwf	(??_poll+2)& (0+255),b
 23290   002EDE  5163               	movf	(_timedResponseTime+3)& (0+255),w,b
 23291   002EE0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23292   002EE2  6FF1               	movwf	(??_poll+3)& (0+255),b
 23293   002EE4  5193               	movf	_timedResponseDelay& (0+255),w,b
 23294   002EE6  6E01               	movwf	___lmul@multiplier^(0+1280),c
 23295   002EE8  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 23296   002EEA  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 23297   002EEC  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 23298   002EEE  0E3E               	movlw	62
 23299   002EF0  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 23300   002EF2  0E00               	movlw	0
 23301   002EF4  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 23302   002EF6  0E00               	movlw	0
 23303   002EF8  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 23304   002EFA  0E00               	movlw	0
 23305   002EFC  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 23306   002EFE  EC6A  F03B         	call	___lmul	;wreg free
 23307   002F02  0105               	movlb	5	; () banked
 23308   002F04  51EE               	movf	??_poll& (0+255),w,b
 23309   002F06  5C01               	subwf	?___lmul^(0+1280),w,c
 23310   002F08  51EF               	movf	(??_poll+1)& (0+255),w,b
 23311   002F0A  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 23312   002F0C  51F0               	movf	(??_poll+2)& (0+255),w,b
 23313   002F0E  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 23314   002F10  51F1               	movf	(??_poll+3)& (0+255),w,b
 23315   002F12  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 23316   002F14  B0D8               	btfsc	status,0,c
 23317   002F16  EF8F  F017         	goto	u8421
 23318   002F1A  EF91  F017         	goto	u8420
 23319   002F1E                     u8421:
 23320   002F1E  EF9D  F017         	goto	l11030
 23321   002F22                     u8420:
 23322   002F22                     
 23323                           ; BSR set to: 5
 23324                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 23325   002F22  ECF6  F030         	call	_pollTimedResponse	;wreg free
 23326   002F26                     
 23327                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 23328   002F26  EC18  F03A         	call	_tickGet	;wreg free
 23329   002F2A  C501  F560         	movff	?_tickGet,_timedResponseTime
 23330   002F2E  C502  F561         	movff	?_tickGet+1,_timedResponseTime+1
 23331   002F32  C503  F562         	movff	?_tickGet+2,_timedResponseTime+2
 23332   002F36  C504  F563         	movff	?_tickGet+3,_timedResponseTime+3
 23333   002F3A                     l11030:
 23334                           
 23335                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 23336   002F3A  EC18  F03A         	call	_tickGet	;wreg free
 23337   002F3E  0106               	movlb	6	; () banked
 23338   002F40  5142               	movf	_flashFlushTime& (0+255),w,b
 23339   002F42  5C01               	subwf	?_tickGet^(0+1280),w,c
 23340   002F44  0105               	movlb	5	; () banked
 23341   002F46  6FEE               	movwf	??_poll& (0+255),b
 23342   002F48  0106               	movlb	6	; () banked
 23343   002F4A  5143               	movf	(_flashFlushTime+1)& (0+255),w,b
 23344   002F4C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23345   002F4E  0105               	movlb	5	; () banked
 23346   002F50  6FEF               	movwf	(??_poll+1)& (0+255),b
 23347   002F52  0106               	movlb	6	; () banked
 23348   002F54  5144               	movf	(_flashFlushTime+2)& (0+255),w,b
 23349   002F56  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23350   002F58  0105               	movlb	5	; () banked
 23351   002F5A  6FF0               	movwf	(??_poll+2)& (0+255),b
 23352   002F5C  0106               	movlb	6	; () banked
 23353   002F5E  5145               	movf	(_flashFlushTime+3)& (0+255),w,b
 23354   002F60  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23355   002F62  0105               	movlb	5	; () banked
 23356   002F64  6FF1               	movwf	(??_poll+3)& (0+255),b
 23357   002F66  51F1               	movf	(??_poll+3)& (0+255),w,b
 23358   002F68  11F0               	iorwf	(??_poll+2)& (0+255),w,b
 23359   002F6A  E10B               	bnz	u8430
 23360   002F6C  0E25               	movlw	37
 23361   002F6E  5DEE               	subwf	??_poll& (0+255),w,b
 23362   002F70  0EF4               	movlw	244
 23363   002F72  59EF               	subwfb	(??_poll+1)& (0+255),w,b
 23364   002F74  A0D8               	btfss	status,0,c
 23365   002F76  EFBF  F017         	goto	u8431
 23366   002F7A  EFC1  F017         	goto	u8430
 23367   002F7E                     u8431:
 23368   002F7E  EFCD  F017         	goto	l11036
 23369   002F82                     u8430:
 23370   002F82                     
 23371                           ; BSR set to: 5
 23372                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 23373   002F82  EC05  F035         	call	_flushFlashBlock	;wreg free
 23374   002F86                     
 23375                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 23376   002F86  EC18  F03A         	call	_tickGet	;wreg free
 23377   002F8A  C501  F642         	movff	?_tickGet,_flashFlushTime
 23378   002F8E  C502  F643         	movff	?_tickGet+1,_flashFlushTime+1
 23379   002F92  C503  F644         	movff	?_tickGet+2,_flashFlushTime+2
 23380   002F96  C504  F645         	movff	?_tickGet+3,_flashFlushTime+3
 23381   002F9A                     l11036:
 23382                           
 23383                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<6; i++) {
 23384   002F9A  0105               	movlb	5	; () banked
 23385   002F9C  6BF3               	clrf	poll@i& (0+255),b
 23386   002F9E                     l11042:
 23387                           
 23388                           ; BSR set to: 5
 23389                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 23390   002F9E  51F3               	movf	poll@i& (0+255),w,b
 23391   002FA0  0D02               	mullw	2
 23392   002FA2  0E89               	movlw	low _services
 23393   002FA4  24F3               	addwf	243,w,c
 23394   002FA6  6EF6               	movwf	tblptrl,c
 23395   002FA8  0EFF               	movlw	high _services
 23396   002FAA  20F4               	addwfc	244,w,c
 23397   002FAC  6EF7               	movwf	tblptrh,c
 23398   002FAE                     	if	1	;There are 3 active tblptr bytes
 23399   002FAE  6AF8               	clrf	tblptru,c
 23400   002FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 23401   002FB2  22F8               	addwfc	tblptru,f,c
 23402   002FB4                     	endif
 23403   002FB4  0009               	tblrd		*+
 23404   002FB6  50F5               	movf	tablat,w,c
 23405   002FB8  0009               	tblrd		*+
 23406   002FBA  10F5               	iorwf	tablat,w,c
 23407   002FBC  B4D8               	btfsc	status,2,c
 23408   002FBE  EFE3  F017         	goto	u8441
 23409   002FC2  EFE5  F017         	goto	u8440
 23410   002FC6                     u8441:
 23411   002FC6  EF36  F018         	goto	l11048
 23412   002FCA                     u8440:
 23413   002FCA                     
 23414                           ; BSR set to: 5
 23415   002FCA  51F3               	movf	poll@i& (0+255),w,b
 23416   002FCC  0D02               	mullw	2
 23417   002FCE  0E89               	movlw	low _services
 23418   002FD0  24F3               	addwf	243,w,c
 23419   002FD2  6EF6               	movwf	tblptrl,c
 23420   002FD4  0EFF               	movlw	high _services
 23421   002FD6  20F4               	addwfc	244,w,c
 23422   002FD8  6EF7               	movwf	tblptrh,c
 23423   002FDA                     	if	1	;There are 3 active tblptr bytes
 23424   002FDA  6AF8               	clrf	tblptru,c
 23425   002FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 23426   002FDE  22F8               	addwfc	tblptru,f,c
 23427   002FE0                     	endif
 23428   002FE0  0009               	tblrd		*+
 23429   002FE2  C4F5 F5EE          	movff	tablat,??_poll
 23430   002FE6  0009               	tblrd		*+
 23431   002FE8  C4F5 F5EF          	movff	tablat,??_poll+1
 23432   002FEC  0E08               	movlw	8
 23433   002FEE  27EE               	addwf	??_poll& (0+255),f,b
 23434   002FF0  0E00               	movlw	0
 23435   002FF2  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23436   002FF4  C5EE  F4F6         	movff	??_poll,tblptrl
 23437   002FF8  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23438   002FFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23439   002FFC  6AF8               	clrf	tblptru,c
 23440   002FFE                     	endif
 23441   002FFE                     	if	0	;tblptru may be non-zero
 23442   002FFE                     	endif
 23443   002FFE  0009               	tblrd		*+
 23444   003000  50F5               	movf	tablat,w,c
 23445   003002  0009               	tblrd		*+
 23446   003004  10F5               	iorwf	tablat,w,c
 23447   003006  B4D8               	btfsc	status,2,c
 23448   003008  EF08  F018         	goto	u8451
 23449   00300C  EF0A  F018         	goto	u8450
 23450   003010                     u8451:
 23451   003010  EF36  F018         	goto	l11048
 23452   003014                     u8450:
 23453   003014                     
 23454                           ; BSR set to: 5
 23455                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 23456   003014  51F3               	movf	poll@i& (0+255),w,b
 23457   003016  0D02               	mullw	2
 23458   003018  0E89               	movlw	low _services
 23459   00301A  24F3               	addwf	243,w,c
 23460   00301C  6EF6               	movwf	tblptrl,c
 23461   00301E  0EFF               	movlw	high _services
 23462   003020  20F4               	addwfc	244,w,c
 23463   003022  6EF7               	movwf	tblptrh,c
 23464   003024                     	if	1	;There are 3 active tblptr bytes
 23465   003024  6AF8               	clrf	tblptru,c
 23466   003026  0E00               	movlw	low (__mediumconst shr (0+16))
 23467   003028  22F8               	addwfc	tblptru,f,c
 23468   00302A                     	endif
 23469   00302A  0009               	tblrd		*+
 23470   00302C  C4F5 F5EE          	movff	tablat,??_poll
 23471   003030  0009               	tblrd		*+
 23472   003032  C4F5 F5EF          	movff	tablat,??_poll+1
 23473   003036  0E08               	movlw	8
 23474   003038  27EE               	addwf	??_poll& (0+255),f,b
 23475   00303A  0E00               	movlw	0
 23476   00303C  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23477   00303E  C5EE  F4F6         	movff	??_poll,tblptrl
 23478   003042  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23479   003046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23480   003046  6AF8               	clrf	tblptru,c
 23481   003048                     	endif
 23482   003048                     	if	0	;tblptru may be non-zero
 23483   003048                     	endif
 23484   003048  0009               	tblrd		*+
 23485   00304A  C4F5 F5F0          	movff	tablat,??_poll+2
 23486   00304E  0009               	tblrd		*+
 23487   003050  C4F5 F5F1          	movff	tablat,??_poll+3
 23488   003054  D802               	call	u8468
 23489   003056  EF36  F018         	goto	u8469
 23490   00305A                     u8468:
 23491   00305A  0005               	push	
 23492   00305C  6EFA               	movwf	pclath,c
 23493   00305E  51F0               	movf	(??_poll+2)& (0+255),w,b
 23494   003060  6EFD               	movwf	tosl,c
 23495   003062  51F1               	movf	(??_poll+3)& (0+255),w,b
 23496   003064  6EFE               	movwf	tosh,c
 23497   003066  6AFF               	clrf	tosu,c
 23498   003068  50FA               	movf	pclath,w,c
 23499   00306A  0012               	return		;indir
 23500   00306C                     u8469:
 23501   00306C                     l11048:
 23502                           
 23503                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 23504   00306C  0105               	movlb	5	; () banked
 23505   00306E  2BF3               	incf	poll@i& (0+255),f,b
 23506   003070                     
 23507                           ; BSR set to: 5
 23508   003070  0E05               	movlw	5
 23509   003072  65F3               	cpfsgt	poll@i& (0+255),b
 23510   003074  EF3E  F018         	goto	u8471
 23511   003078  EF40  F018         	goto	u8470
 23512   00307C                     u8471:
 23513   00307C  EFCF  F017         	goto	l11042
 23514   003080                     u8470:
 23515   003080                     
 23516                           ; BSR set to: 5
 23517                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 23518   003080  EC22  F01B         	call	_leds_poll	;wreg free
 23519   003084                     
 23520                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 23521   003084  0105               	movlb	5	; () banked
 23522   003086  6BF2               	clrf	poll@handled& (0+255),b
 23523   003088                     
 23524                           ; BSR set to: 5
 23525                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 23526   003088  5191               	movf	_transport& (0+255),w,b
 23527   00308A  1192               	iorwf	(_transport+1)& (0+255),w,b
 23528   00308C  B4D8               	btfsc	status,2,c
 23529   00308E  EF4B  F018         	goto	u8481
 23530   003092  EF4D  F018         	goto	u8480
 23531   003096                     u8481:
 23532   003096  EF3D  F019         	goto	l11090
 23533   00309A                     u8480:
 23534   00309A                     
 23535                           ; BSR set to: 5
 23536                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 23537   00309A  0E02               	movlw	2
 23538   00309C  2591               	addwf	_transport& (0+255),w,b
 23539   00309E  6FEE               	movwf	??_poll& (0+255),b
 23540   0030A0  0E00               	movlw	0
 23541   0030A2  2192               	addwfc	(_transport+1)& (0+255),w,b
 23542   0030A4  6FEF               	movwf	(??_poll+1)& (0+255),b
 23543   0030A6  C5EE  F4F6         	movff	??_poll,tblptrl
 23544   0030AA  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23545   0030AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23546   0030AE  6AF8               	clrf	tblptru,c
 23547   0030B0                     	endif
 23548   0030B0                     	if	0	;tblptru may be non-zero
 23549   0030B0                     	endif
 23550   0030B0  0009               	tblrd		*+
 23551   0030B2  50F5               	movf	tablat,w,c
 23552   0030B4  0009               	tblrd		*+
 23553   0030B6  10F5               	iorwf	tablat,w,c
 23554   0030B8  B4D8               	btfsc	status,2,c
 23555   0030BA  EF61  F018         	goto	u8491
 23556   0030BE  EF63  F018         	goto	u8490
 23557   0030C2                     u8491:
 23558   0030C2  EF3D  F019         	goto	l11090
 23559   0030C6                     u8490:
 23560   0030C6                     
 23561                           ; BSR set to: 5
 23562                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 23563   0030C6  0EF4               	movlw	low poll@m
 23564   0030C8  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 23565   0030CA  0E05               	movlw	high poll@m
 23566   0030CC  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 23567   0030CE  0E02               	movlw	2
 23568   0030D0  2591               	addwf	_transport& (0+255),w,b
 23569   0030D2  6FEE               	movwf	??_poll& (0+255),b
 23570   0030D4  0E00               	movlw	0
 23571   0030D6  2192               	addwfc	(_transport+1)& (0+255),w,b
 23572   0030D8  6FEF               	movwf	(??_poll+1)& (0+255),b
 23573   0030DA  C5EE  F4F6         	movff	??_poll,tblptrl
 23574   0030DE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23575   0030E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23576   0030E2  6AF8               	clrf	tblptru,c
 23577   0030E4                     	endif
 23578   0030E4                     	if	0	;tblptru may be non-zero
 23579   0030E4                     	endif
 23580   0030E4  0009               	tblrd		*+
 23581   0030E6  C4F5 F5F0          	movff	tablat,??_poll+2
 23582   0030EA  0009               	tblrd		*+
 23583   0030EC  C4F5 F5F1          	movff	tablat,??_poll+3
 23584   0030F0  D802               	call	u8508
 23585   0030F2  EF84  F018         	goto	u8509
 23586   0030F6                     u8508:
 23587   0030F6  0005               	push	
 23588   0030F8  6EFA               	movwf	pclath,c
 23589   0030FA  51F0               	movf	(??_poll+2)& (0+255),w,b
 23590   0030FC  6EFD               	movwf	tosl,c
 23591   0030FE  51F1               	movf	(??_poll+3)& (0+255),w,b
 23592   003100  6EFE               	movwf	tosh,c
 23593   003102  6AFF               	clrf	tosu,c
 23594   003104  50FA               	movf	pclath,w,c
 23595   003106  0012               	return		;indir
 23596   003108                     u8509:
 23597   003108  0900               	iorlw	0
 23598   00310A  B4D8               	btfsc	status,2,c
 23599   00310C  EF8A  F018         	goto	u8511
 23600   003110  EF8C  F018         	goto	u8510
 23601   003114                     u8511:
 23602   003114  EF3D  F019         	goto	l11090
 23603   003118                     u8510:
 23604   003118                     
 23605                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 23606   003118  0105               	movlb	5	; () banked
 23607   00311A  51F4               	movf	poll@m& (0+255),w,b
 23608   00311C  B4D8               	btfsc	status,2,c
 23609   00311E  EF93  F018         	goto	u8521
 23610   003122  EF95  F018         	goto	u8520
 23611   003126                     u8521:
 23612   003126  EF3D  F019         	goto	l11090
 23613   00312A                     u8520:
 23614   00312A                     
 23615                           ; BSR set to: 5
 23616                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 23617   00312A  0E07               	movlw	7
 23618   00312C  EC54  F028         	call	_showStatus
 23619                           
 23620                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 23621   003130  0EF4               	movlw	low poll@m
 23622   003132  6E01               	movwf	APP_preProcessMessage@m^(0+1280),c
 23623   003134  0E05               	movlw	high poll@m
 23624   003136  6E02               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 23625   003138  ECB7  F041         	call	_APP_preProcessMessage	;wreg free
 23626   00313C  0105               	movlb	5	; () banked
 23627   00313E  6FF2               	movwf	poll@handled& (0+255),b
 23628   003140                     
 23629                           ; BSR set to: 5
 23630                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 23631   003140  51F2               	movf	poll@handled& (0+255),w,b
 23632   003142  A4D8               	btfss	status,2,c
 23633   003144  EFA6  F018         	goto	u8531
 23634   003148  EFA8  F018         	goto	u8530
 23635   00314C                     u8531:
 23636   00314C  EF3D  F019         	goto	l11090
 23637   003150                     u8530:
 23638   003150                     
 23639                           ; BSR set to: 5
 23640                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<6; i++) {
 23641   003150  6BF3               	clrf	poll@i& (0+255),b
 23642   003152                     l11074:
 23643                           
 23644                           ; BSR set to: 5
 23645                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 23646   003152  51F3               	movf	poll@i& (0+255),w,b
 23647   003154  0D02               	mullw	2
 23648   003156  0E89               	movlw	low _services
 23649   003158  24F3               	addwf	243,w,c
 23650   00315A  6EF6               	movwf	tblptrl,c
 23651   00315C  0EFF               	movlw	high _services
 23652   00315E  20F4               	addwfc	244,w,c
 23653   003160  6EF7               	movwf	tblptrh,c
 23654   003162                     	if	1	;There are 3 active tblptr bytes
 23655   003162  6AF8               	clrf	tblptru,c
 23656   003164  0E00               	movlw	low (__mediumconst shr (0+16))
 23657   003166  22F8               	addwfc	tblptru,f,c
 23658   003168                     	endif
 23659   003168  0009               	tblrd		*+
 23660   00316A  50F5               	movf	tablat,w,c
 23661   00316C  0009               	tblrd		*+
 23662   00316E  10F5               	iorwf	tablat,w,c
 23663   003170  B4D8               	btfsc	status,2,c
 23664   003172  EFBD  F018         	goto	u8541
 23665   003176  EFBF  F018         	goto	u8540
 23666   00317A                     u8541:
 23667   00317A  EF21  F019         	goto	l11082
 23668   00317E                     u8540:
 23669   00317E                     
 23670                           ; BSR set to: 5
 23671   00317E  51F3               	movf	poll@i& (0+255),w,b
 23672   003180  0D02               	mullw	2
 23673   003182  0E89               	movlw	low _services
 23674   003184  24F3               	addwf	243,w,c
 23675   003186  6EF6               	movwf	tblptrl,c
 23676   003188  0EFF               	movlw	high _services
 23677   00318A  20F4               	addwfc	244,w,c
 23678   00318C  6EF7               	movwf	tblptrh,c
 23679   00318E                     	if	1	;There are 3 active tblptr bytes
 23680   00318E  6AF8               	clrf	tblptru,c
 23681   003190  0E00               	movlw	low (__mediumconst shr (0+16))
 23682   003192  22F8               	addwfc	tblptru,f,c
 23683   003194                     	endif
 23684   003194  0009               	tblrd		*+
 23685   003196  C4F5 F5EE          	movff	tablat,??_poll
 23686   00319A  0009               	tblrd		*+
 23687   00319C  C4F5 F5EF          	movff	tablat,??_poll+1
 23688   0031A0  0E06               	movlw	6
 23689   0031A2  27EE               	addwf	??_poll& (0+255),f,b
 23690   0031A4  0E00               	movlw	0
 23691   0031A6  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23692   0031A8  C5EE  F4F6         	movff	??_poll,tblptrl
 23693   0031AC  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23694   0031B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23695   0031B0  6AF8               	clrf	tblptru,c
 23696   0031B2                     	endif
 23697   0031B2                     	if	0	;tblptru may be non-zero
 23698   0031B2                     	endif
 23699   0031B2  0009               	tblrd		*+
 23700   0031B4  50F5               	movf	tablat,w,c
 23701   0031B6  0009               	tblrd		*+
 23702   0031B8  10F5               	iorwf	tablat,w,c
 23703   0031BA  B4D8               	btfsc	status,2,c
 23704   0031BC  EFE2  F018         	goto	u8551
 23705   0031C0  EFE4  F018         	goto	u8550
 23706   0031C4                     u8551:
 23707   0031C4  EF21  F019         	goto	l11082
 23708   0031C8                     u8550:
 23709   0031C8                     
 23710                           ; BSR set to: 5
 23711                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 23712   0031C8  0EF4               	movlw	low poll@m
 23713   0031CA  6E54               	movwf	nvProcessMessage@m^(0+1280),c
 23714   0031CC  0E05               	movlw	high poll@m
 23715   0031CE  6E55               	movwf	(nvProcessMessage@m+1)^(0+1280),c
 23716   0031D0  51F3               	movf	poll@i& (0+255),w,b
 23717   0031D2  0D02               	mullw	2
 23718   0031D4  0E89               	movlw	low _services
 23719   0031D6  24F3               	addwf	243,w,c
 23720   0031D8  6EF6               	movwf	tblptrl,c
 23721   0031DA  0EFF               	movlw	high _services
 23722   0031DC  20F4               	addwfc	244,w,c
 23723   0031DE  6EF7               	movwf	tblptrh,c
 23724   0031E0                     	if	1	;There are 3 active tblptr bytes
 23725   0031E0  6AF8               	clrf	tblptru,c
 23726   0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23727   0031E4  22F8               	addwfc	tblptru,f,c
 23728   0031E6                     	endif
 23729   0031E6  0009               	tblrd		*+
 23730   0031E8  C4F5 F5EE          	movff	tablat,??_poll
 23731   0031EC  0009               	tblrd		*+
 23732   0031EE  C4F5 F5EF          	movff	tablat,??_poll+1
 23733   0031F2  0E06               	movlw	6
 23734   0031F4  27EE               	addwf	??_poll& (0+255),f,b
 23735   0031F6  0E00               	movlw	0
 23736   0031F8  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23737   0031FA  C5EE  F4F6         	movff	??_poll,tblptrl
 23738   0031FE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23739   003202                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23740   003202  6AF8               	clrf	tblptru,c
 23741   003204                     	endif
 23742   003204                     	if	0	;tblptru may be non-zero
 23743   003204                     	endif
 23744   003204  0009               	tblrd		*+
 23745   003206  C4F5 F5F0          	movff	tablat,??_poll+2
 23746   00320A  0009               	tblrd		*+
 23747   00320C  C4F5 F5F1          	movff	tablat,??_poll+3
 23748   003210  D802               	call	u8568
 23749   003212  EF14  F019         	goto	u8569
 23750   003216                     u8568:
 23751   003216  0005               	push	
 23752   003218  6EFA               	movwf	pclath,c
 23753   00321A  51F0               	movf	(??_poll+2)& (0+255),w,b
 23754   00321C  6EFD               	movwf	tosl,c
 23755   00321E  51F1               	movf	(??_poll+3)& (0+255),w,b
 23756   003220  6EFE               	movwf	tosh,c
 23757   003222  6AFF               	clrf	tosu,c
 23758   003224  50FA               	movf	pclath,w,c
 23759   003226  0012               	return		;indir
 23760   003228                     u8569:
 23761   003228  06E8               	decf	wreg,f,c
 23762   00322A  A4D8               	btfss	status,2,c
 23763   00322C  EF1A  F019         	goto	u8571
 23764   003230  EF1C  F019         	goto	u8570
 23765   003234                     u8571:
 23766   003234  EF21  F019         	goto	l11082
 23767   003238                     u8570:
 23768   003238                     
 23769                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 23770   003238  0E01               	movlw	1
 23771   00323A  0105               	movlb	5	; () banked
 23772   00323C  6FF2               	movwf	poll@handled& (0+255),b
 23773                           
 23774                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 23775   00323E  EF2B  F019         	goto	l11086
 23776   003242                     l11082:
 23777                           
 23778                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 23779   003242  0105               	movlb	5	; () banked
 23780   003244  2BF3               	incf	poll@i& (0+255),f,b
 23781   003246                     
 23782                           ; BSR set to: 5
 23783   003246  0E05               	movlw	5
 23784   003248  65F3               	cpfsgt	poll@i& (0+255),b
 23785   00324A  EF29  F019         	goto	u8581
 23786   00324E  EF2B  F019         	goto	u8580
 23787   003252                     u8581:
 23788   003252  EFA9  F018         	goto	l11074
 23789   003256                     u8580:
 23790   003256                     l11086:
 23791                           
 23792                           ; BSR set to: 5
 23793                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 23794   003256  51F2               	movf	poll@handled& (0+255),w,b
 23795   003258  A4D8               	btfss	status,2,c
 23796   00325A  EF31  F019         	goto	u8591
 23797   00325E  EF33  F019         	goto	u8590
 23798   003262                     u8591:
 23799   003262  EF3D  F019         	goto	l2032
 23800   003266                     u8590:
 23801   003266                     
 23802                           ; BSR set to: 5
 23803                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 23804   003266  0EF4               	movlw	low poll@m
 23805   003268  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 23806   00326A  0E05               	movlw	high poll@m
 23807   00326C  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 23808   00326E  ECB9  F041         	call	_APP_postProcessMessage	;wreg free
 23809   003272  0105               	movlb	5	; () banked
 23810   003274  6FF2               	movwf	poll@handled& (0+255),b
 23811   003276  EF3D  F019         	goto	l11090
 23812   00327A                     l2032:
 23813   00327A                     l11090:
 23814                           
 23815                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 23816   00327A  0105               	movlb	5	; () banked
 23817   00327C  51F2               	movf	poll@handled& (0+255),w,b
 23818   00327E  B4D8               	btfsc	status,2,c
 23819   003280  EF44  F019         	goto	u8601
 23820   003284  EF46  F019         	goto	u8600
 23821   003288                     u8601:
 23822   003288  EF4B  F019         	goto	l2041
 23823   00328C                     u8600:
 23824   00328C                     
 23825                           ; BSR set to: 5
 23826                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 23827   00328C  4BB9               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 23828   00328E  2BBA               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 23829   003290                     
 23830                           ; BSR set to: 5
 23831                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 23832   003290  0E08               	movlw	8
 23833   003292  EC54  F028         	call	_showStatus
 23834   003296                     l2041:
 23835   003296  0012               	return		;funcret
 23836   003298                     __end_of_poll:
 23837                           	callstack 0
 23838                           
 23839 ;; *************** function _nvProcessMessage *****************
 23840 ;; Defined at:
 23841 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 23842 ;; Parameters:    Size  Location     Type
 23843 ;;  m               2   83[COMRAM] PTR struct Message
 23844 ;;		 -> poll@m(9), 
 23845 ;; Auto vars:     Size  Location     Type
 23846 ;;  valueOrError    2   87[COMRAM] short 
 23847 ;; Return value:  Size  Location     Type
 23848 ;;                  1    wreg      enum E23340
 23849 ;; Registers used:
 23850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23851 ;; Tracked objects:
 23852 ;;		On entry : 0/0
 23853 ;;		On exit  : 0/0
 23854 ;;		Unchanged: 0/0
 23855 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23859 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23860 ;;Total ram usage:        6 bytes
 23861 ;; Hardware stack levels used: 1
 23862 ;; Hardware stack levels required when called: 7
 23863 ;; This function calls:
 23864 ;;		_findServiceIndex
 23865 ;;		_getNV
 23866 ;;		_sendMessage2
 23867 ;;		_sendMessage3
 23868 ;;		_sendMessage4
 23869 ;;		_sendMessage5
 23870 ;;		_setNV
 23871 ;;		_startTimedResponse
 23872 ;; This function is called by:
 23873 ;;		_poll
 23874 ;; This function uses a non-reentrant model
 23875 ;;
 23876                           
 23877                           	psect	text17
 23878   003298                     __ptext17:
 23879                           	callstack 0
 23880   003298                     _nvProcessMessage:
 23881                           	callstack 118
 23882   003298                     
 23883                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 23884   003298  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23885   00329C  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23886   0032A0  0E03               	movlw	3
 23887   0032A2  60DF               	cpfslt	indf2,c
 23888   0032A4  EF56  F019         	goto	u8021
 23889   0032A8  EF58  F019         	goto	u8020
 23890   0032AC                     u8021:
 23891   0032AC  EF5B  F019         	goto	l10650
 23892   0032B0                     u8020:
 23893   0032B0                     l10646:
 23894                           
 23895                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 23896   0032B0  0E00               	movlw	0
 23897   0032B2  EF21  F01B         	goto	l1560
 23898   0032B6                     l10650:
 23899                           
 23900                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 23901   0032B6  EE20 F002          	lfsr	2,2
 23902   0032BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23903   0032BC  26D9               	addwf	fsr2l,f,c
 23904   0032BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23905   0032C0  22DA               	addwfc	fsr2h,f,c
 23906   0032C2  50DE               	movf	postinc2,w,c
 23907   0032C4  0105               	movlb	5	; () banked
 23908   0032C6  1990               	xorwf	(_nn+1)& (0+255),w,b
 23909   0032C8  B4D8               	btfsc	status,2,c
 23910   0032CA  EF69  F019         	goto	u8031
 23911   0032CE  EF6B  F019         	goto	u8030
 23912   0032D2                     u8031:
 23913   0032D2  EF6D  F019         	goto	l10656
 23914   0032D6                     u8030:
 23915   0032D6  EF58  F019         	goto	l10646
 23916   0032DA                     l10656:
 23917                           
 23918                           ; BSR set to: 5
 23919                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 23920   0032DA  EE20 F003          	lfsr	2,3
 23921   0032DE  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23922   0032E0  26D9               	addwf	fsr2l,f,c
 23923   0032E2  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23924   0032E4  22DA               	addwfc	fsr2h,f,c
 23925   0032E6  518F               	movf	_nn& (0+255),w,b
 23926   0032E8  18DE               	xorwf	postinc2,w,c
 23927   0032EA  B4D8               	btfsc	status,2,c
 23928   0032EC  EF7A  F019         	goto	u8041
 23929   0032F0  EF7C  F019         	goto	u8040
 23930   0032F4                     u8041:
 23931   0032F4  EF02  F01B         	goto	l10774
 23932   0032F8                     u8040:
 23933   0032F8  EF58  F019         	goto	l10646
 23934   0032FC                     l10662:
 23935                           
 23936                           ; BSR set to: 5
 23937                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 23938   0032FC  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23939   003300  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23940   003304  0E04               	movlw	4
 23941   003306  60DF               	cpfslt	indf2,c
 23942   003308  EF88  F019         	goto	u8051
 23943   00330C  EF8A  F019         	goto	u8050
 23944   003310                     u8051:
 23945   003310  EFA6  F019         	goto	l10672
 23946   003314                     u8050:
 23947   003314                     
 23948                           ; BSR set to: 5
 23949                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 23950   003314  C590  F526         	movff	_nn+1,sendMessage3@data1
 23951   003318  C58F  F527         	movff	_nn,sendMessage3@data2
 23952   00331C  0E01               	movlw	1
 23953   00331E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23954   003320  0E6F               	movlw	111
 23955   003322  EC5C  F040         	call	_sendMessage3
 23956                           
 23957                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23958   003326  C590  F526         	movff	_nn+1,sendMessage5@data1
 23959   00332A  C58F  F527         	movff	_nn,sendMessage5@data2
 23960   00332E  0E71               	movlw	113
 23961   003330  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23962   003332  0E01               	movlw	1
 23963   003334  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23964   003336  0E01               	movlw	1
 23965   003338  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23966   00333A  0EAF               	movlw	175
 23967   00333C  EC9B  F040         	call	_sendMessage5
 23968   003340                     l10666:
 23969                           
 23970                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 23971   003340  0105               	movlb	5	; () banked
 23972   003342  4BBF               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 23973   003344  2BC0               	incf	(_nvDiagnostics+5)& (0+255),f,b
 23974   003346                     l10668:
 23975                           
 23976                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 23977   003346  0E01               	movlw	1
 23978   003348  EF21  F01B         	goto	l1560
 23979   00334C                     l10672:
 23980                           
 23981                           ; BSR set to: 5
 23982                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 23983   00334C  EE20 F004          	lfsr	2,4
 23984   003350  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23985   003352  26D9               	addwf	fsr2l,f,c
 23986   003354  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23987   003356  22DA               	addwfc	fsr2h,f,c
 23988   003358  50DF               	movf	indf2,w,c
 23989   00335A  EC43  F03D         	call	_getNV
 23990   00335E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 23991   003362  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 23992   003366                     
 23993                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 23994   003366  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 23995   003368  EFBA  F019         	goto	u8060
 23996   00336C  EFB8  F019         	goto	u8061
 23997   003370                     u8061:
 23998   003370  EFD4  F019         	goto	l10684
 23999   003374                     u8060:
 24000   003374                     
 24001                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24002   003374  C590  F526         	movff	_nn+1,sendMessage3@data1
 24003   003378  C58F  F527         	movff	_nn,sendMessage3@data2
 24004   00337C  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24005   00337E  0800               	sublw	0
 24006   003380  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24007   003382  0E6F               	movlw	111
 24008   003384  EC5C  F040         	call	_sendMessage3
 24009                           
 24010                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24011   003388  C590  F526         	movff	_nn+1,sendMessage5@data1
 24012   00338C  C58F  F527         	movff	_nn,sendMessage5@data2
 24013   003390  0E71               	movlw	113
 24014   003392  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24015   003394  0E01               	movlw	1
 24016   003396  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24017   003398  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24018   00339A  0800               	sublw	0
 24019   00339C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24020   00339E  0EAF               	movlw	175
 24021   0033A0  EC9B  F040         	call	_sendMessage5
 24022   0033A4  EFA0  F019         	goto	l10666
 24023   0033A8                     l10684:
 24024                           
 24025                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 24026   0033A8  0105               	movlb	5	; () banked
 24027   0033AA  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24028   0033AC  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24029   0033AE                     
 24030                           ; BSR set to: 5
 24031                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24032   0033AE  C590  F526         	movff	_nn+1,sendMessage4@data1
 24033   0033B2  C58F  F527         	movff	_nn,sendMessage4@data2
 24034   0033B6  EE20 F004          	lfsr	2,4
 24035   0033BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24036   0033BC  26D9               	addwf	fsr2l,f,c
 24037   0033BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24038   0033C0  22DA               	addwfc	fsr2h,f,c
 24039   0033C2  50DF               	movf	indf2,w,c
 24040   0033C4  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24041   0033C6  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24042   0033CA  0E97               	movlw	151
 24043   0033CC  EC47  F040         	call	_sendMessage4
 24044   0033D0                     
 24045                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 24046   0033D0  0105               	movlb	5	; () banked
 24047   0033D2  B7A4               	btfsc	_mode_flags& (0+255),3,b
 24048   0033D4  EFEE  F019         	goto	u8071
 24049   0033D8  EFF0  F019         	goto	u8070
 24050   0033DC                     u8071:
 24051   0033DC  EFA3  F019         	goto	l10668
 24052   0033E0                     u8070:
 24053   0033E0                     
 24054                           ; BSR set to: 5
 24055   0033E0  EE20 F004          	lfsr	2,4
 24056   0033E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24057   0033E6  26D9               	addwf	fsr2l,f,c
 24058   0033E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24059   0033EA  22DA               	addwfc	fsr2h,f,c
 24060   0033EC  50DF               	movf	indf2,w,c
 24061   0033EE  A4D8               	btfss	status,2,c
 24062   0033F0  EFFC  F019         	goto	u8081
 24063   0033F4  EFFE  F019         	goto	u8080
 24064   0033F8                     u8081:
 24065   0033F8  EFA3  F019         	goto	l10668
 24066   0033FC                     u8080:
 24067   0033FC                     
 24068                           ; BSR set to: 5
 24069                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 24070   0033FC  0E02               	movlw	2
 24071   0033FE  EC12  F037         	call	_findServiceIndex
 24072   003402  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 24073   003404  0EDC               	movlw	low _nvTRnvrdCallback
 24074   003406  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 24075   003408  0E79               	movlw	high _nvTRnvrdCallback
 24076   00340A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 24077   00340C  0E06               	movlw	6
 24078   00340E  EC94  F03C         	call	_startTimedResponse
 24079   003412  EFA3  F019         	goto	l10668
 24080   003416                     l10698:
 24081                           
 24082                           ; BSR set to: 5
 24083                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 24084   003416  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24085   00341A  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24086   00341E  0E05               	movlw	5
 24087   003420  60DF               	cpfslt	indf2,c
 24088   003422  EF15  F01A         	goto	u8091
 24089   003426  EF17  F01A         	goto	u8090
 24090   00342A                     u8091:
 24091   00342A  EF26  F01A         	goto	l10708
 24092   00342E                     u8090:
 24093   00342E                     
 24094                           ; BSR set to: 5
 24095                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24096   00342E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24097   003432  C58F  F527         	movff	_nn,sendMessage5@data2
 24098   003436  0E96               	movlw	150
 24099   003438  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24100   00343A  0E01               	movlw	1
 24101   00343C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24102   00343E  0E01               	movlw	1
 24103   003440  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24104   003442  0EAF               	movlw	175
 24105   003444  EC9B  F040         	call	_sendMessage5
 24106   003448  EFA0  F019         	goto	l10666
 24107   00344C                     l10708:
 24108                           
 24109                           ; BSR set to: 5
 24110                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24111   00344C  EE20 F005          	lfsr	2,5
 24112   003450  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24113   003452  26D9               	addwf	fsr2l,f,c
 24114   003454  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24115   003456  22DA               	addwfc	fsr2h,f,c
 24116   003458  50DF               	movf	indf2,w,c
 24117   00345A  6E15               	movwf	setNV@value^(0+1280),c
 24118   00345C  EE20 F004          	lfsr	2,4
 24119   003460  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24120   003462  26D9               	addwf	fsr2l,f,c
 24121   003464  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24122   003466  22DA               	addwfc	fsr2h,f,c
 24123   003468  50DF               	movf	indf2,w,c
 24124   00346A  ECCB  F036         	call	_setNV
 24125   00346E  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24126   003470  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24127   003472  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24128   003474  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24129   003476                     
 24130                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 24131   003476  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24132   003478  EF46  F01A         	goto	u8101
 24133   00347C  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24134   00347E  E108               	bnz	u8100
 24135   003480  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24136   003482  A0D8               	btfss	status,0,c
 24137   003484  EF46  F01A         	goto	u8101
 24138   003488  EF48  F01A         	goto	u8100
 24139   00348C                     u8101:
 24140   00348C  EF53  F01A         	goto	l10720
 24141   003490                     u8100:
 24142   003490                     
 24143                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24144   003490  C590  F526         	movff	_nn+1,sendMessage3@data1
 24145   003494  C58F  F527         	movff	_nn,sendMessage3@data2
 24146   003498  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24147   00349C  0E6F               	movlw	111
 24148   00349E  EC5C  F040         	call	_sendMessage3
 24149   0034A2  EFA0  F019         	goto	l10666
 24150   0034A6                     l10720:
 24151                           
 24152                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 24153   0034A6  C590  F526         	movff	_nn+1,sendMessage2@data1
 24154   0034AA  C58F  F527         	movff	_nn,sendMessage2@data2
 24155   0034AE  0E59               	movlw	89
 24156   0034B0  EC71  F040         	call	_sendMessage2
 24157                           
 24158                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 24159   0034B4  C590  F526         	movff	_nn+1,sendMessage5@data1
 24160   0034B8  C58F  F527         	movff	_nn,sendMessage5@data2
 24161   0034BC  0E96               	movlw	150
 24162   0034BE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24163   0034C0  0E01               	movlw	1
 24164   0034C2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24165   0034C4  0E00               	movlw	0
 24166   0034C6  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24167   0034C8  0EAF               	movlw	175
 24168   0034CA  EC9B  F040         	call	_sendMessage5
 24169   0034CE  EFA3  F019         	goto	l10668
 24170   0034D2                     l10726:
 24171                           
 24172                           ; BSR set to: 5
 24173                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 24174   0034D2  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24175   0034D6  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24176   0034DA  0E05               	movlw	5
 24177   0034DC  60DF               	cpfslt	indf2,c
 24178   0034DE  EF73  F01A         	goto	u8111
 24179   0034E2  EF75  F01A         	goto	u8110
 24180   0034E6                     u8111:
 24181   0034E6  EF84  F01A         	goto	l10736
 24182   0034EA                     u8110:
 24183   0034EA                     
 24184                           ; BSR set to: 5
 24185                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24186   0034EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 24187   0034EE  C58F  F527         	movff	_nn,sendMessage5@data2
 24188   0034F2  0E8E               	movlw	142
 24189   0034F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24190   0034F6  0E01               	movlw	1
 24191   0034F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24192   0034FA  0E01               	movlw	1
 24193   0034FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24194   0034FE  0EAF               	movlw	175
 24195   003500  EC9B  F040         	call	_sendMessage5
 24196   003504  EFA0  F019         	goto	l10666
 24197   003508                     l10736:
 24198                           
 24199                           ; BSR set to: 5
 24200                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24201   003508  EE20 F005          	lfsr	2,5
 24202   00350C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24203   00350E  26D9               	addwf	fsr2l,f,c
 24204   003510  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24205   003512  22DA               	addwfc	fsr2h,f,c
 24206   003514  50DF               	movf	indf2,w,c
 24207   003516  6E15               	movwf	setNV@value^(0+1280),c
 24208   003518  EE20 F004          	lfsr	2,4
 24209   00351C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24210   00351E  26D9               	addwf	fsr2l,f,c
 24211   003520  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24212   003522  22DA               	addwfc	fsr2h,f,c
 24213   003524  50DF               	movf	indf2,w,c
 24214   003526  ECCB  F036         	call	_setNV
 24215   00352A  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24216   00352C  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24217   00352E  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24218   003530  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24219   003532                     
 24220                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 24221   003532  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24222   003534  EFA4  F01A         	goto	u8121
 24223   003538  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24224   00353A  E108               	bnz	u8120
 24225   00353C  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24226   00353E  A0D8               	btfss	status,0,c
 24227   003540  EFA4  F01A         	goto	u8121
 24228   003544  EFA6  F01A         	goto	u8120
 24229   003548                     u8121:
 24230   003548  EFBE  F01A         	goto	l10748
 24231   00354C                     u8120:
 24232   00354C                     
 24233                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24234   00354C  C590  F526         	movff	_nn+1,sendMessage3@data1
 24235   003550  C58F  F527         	movff	_nn,sendMessage3@data2
 24236   003554  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24237   003558  0E6F               	movlw	111
 24238   00355A  EC5C  F040         	call	_sendMessage3
 24239                           
 24240                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 24241   00355E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24242   003562  C58F  F527         	movff	_nn,sendMessage5@data2
 24243   003566  0E8E               	movlw	142
 24244   003568  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24245   00356A  0E01               	movlw	1
 24246   00356C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24247   00356E  C558  F52A         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 24248   003572  0EAF               	movlw	175
 24249   003574  EC9B  F040         	call	_sendMessage5
 24250   003578  EFA0  F019         	goto	l10666
 24251   00357C                     l10748:
 24252                           
 24253                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 24254   00357C  EE20 F004          	lfsr	2,4
 24255   003580  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24256   003582  26D9               	addwf	fsr2l,f,c
 24257   003584  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24258   003586  22DA               	addwfc	fsr2h,f,c
 24259   003588  50DF               	movf	indf2,w,c
 24260   00358A  EC43  F03D         	call	_getNV
 24261   00358E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 24262   003592  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 24263   003596                     
 24264                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 24265   003596  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24266   003598  EFD2  F01A         	goto	u8130
 24267   00359C  EFD0  F01A         	goto	u8131
 24268   0035A0                     u8131:
 24269   0035A0  EFEC  F01A         	goto	l10760
 24270   0035A4                     u8130:
 24271   0035A4                     
 24272                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24273   0035A4  C590  F526         	movff	_nn+1,sendMessage3@data1
 24274   0035A8  C58F  F527         	movff	_nn,sendMessage3@data2
 24275   0035AC  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24276   0035AE  0800               	sublw	0
 24277   0035B0  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24278   0035B2  0E6F               	movlw	111
 24279   0035B4  EC5C  F040         	call	_sendMessage3
 24280                           
 24281                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24282   0035B8  C590  F526         	movff	_nn+1,sendMessage5@data1
 24283   0035BC  C58F  F527         	movff	_nn,sendMessage5@data2
 24284   0035C0  0E8E               	movlw	142
 24285   0035C2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24286   0035C4  0E01               	movlw	1
 24287   0035C6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24288   0035C8  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24289   0035CA  0800               	sublw	0
 24290   0035CC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24291   0035CE  0EAF               	movlw	175
 24292   0035D0  EC9B  F040         	call	_sendMessage5
 24293   0035D4  EFA0  F019         	goto	l10666
 24294   0035D8                     l10760:
 24295                           
 24296                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24297   0035D8  C590  F526         	movff	_nn+1,sendMessage4@data1
 24298   0035DC  C58F  F527         	movff	_nn,sendMessage4@data2
 24299   0035E0  EE20 F004          	lfsr	2,4
 24300   0035E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24301   0035E6  26D9               	addwf	fsr2l,f,c
 24302   0035E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24303   0035EA  22DA               	addwfc	fsr2h,f,c
 24304   0035EC  50DF               	movf	indf2,w,c
 24305   0035EE  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24306   0035F0  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24307   0035F4  0E97               	movlw	151
 24308   0035F6  EC47  F040         	call	_sendMessage4
 24309   0035FA                     
 24310                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 24311   0035FA  0105               	movlb	5	; () banked
 24312   0035FC  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24313   0035FE  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24314   003600  EFA3  F019         	goto	l10668
 24315   003604                     l10774:
 24316                           
 24317                           ; BSR set to: 5
 24318   003604  EE20 F001          	lfsr	2,1
 24319   003608  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24320   00360A  26D9               	addwf	fsr2l,f,c
 24321   00360C  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24322   00360E  22DA               	addwfc	fsr2h,f,c
 24323   003610  50DF               	movf	indf2,w,c
 24324   003612  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24325   003614  6A57               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 24326                           
 24327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24328                           ; Switch size 1, requested type "simple"
 24329                           ; Number of cases is 1, Range of values is 0 to 0
 24330                           ; switch strategies available:
 24331                           ; Name         Instructions Cycles
 24332                           ; simple_byte            4     3 (average)
 24333                           ;	Chosen strategy is simple_byte
 24334   003616  5057               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 24335   003618  0A00               	xorlw	0	; case 0
 24336   00361A  B4D8               	btfsc	status,2,c
 24337   00361C  EF12  F01B         	goto	l11658
 24338   003620  EF58  F019         	goto	l10646
 24339   003624                     l11658:
 24340                           
 24341                           ; BSR set to: 5
 24342                           ; Switch size 1, requested type "simple"
 24343                           ; Number of cases is 3, Range of values is 113 to 150
 24344                           ; switch strategies available:
 24345                           ; Name         Instructions Cycles
 24346                           ; simple_byte           10     6 (average)
 24347                           ;	Chosen strategy is simple_byte
 24348   003624  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24349   003626  0A71               	xorlw	113	; case 113
 24350   003628  B4D8               	btfsc	status,2,c
 24351   00362A  EF7E  F019         	goto	l10662
 24352   00362E  0AFF               	xorlw	255	; case 142
 24353   003630  B4D8               	btfsc	status,2,c
 24354   003632  EF69  F01A         	goto	l10726
 24355   003636  0A18               	xorlw	24	; case 150
 24356   003638  B4D8               	btfsc	status,2,c
 24357   00363A  EF0B  F01A         	goto	l10698
 24358   00363E  EF58  F019         	goto	l10646
 24359   003642                     l1560:
 24360   003642  0012               	return		;funcret
 24361   003644                     __end_of_nvProcessMessage:
 24362                           	callstack 0
 24363                           
 24364 ;; *************** function _mnsProcessMessage *****************
 24365 ;; Defined at:
 24366 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;  m               2   83[COMRAM] PTR struct Message
 24369 ;;		 -> poll@m(9), 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;  d               2   87[COMRAM] PTR struct DiagnosticVal
 24372 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 24373 ;;		 -> canDiagnostics(38), NULL(0), 
 24374 ;;  newMode         1   89[COMRAM] unsigned char 
 24375 ;;  i               1   85[COMRAM] unsigned char 
 24376 ;;  flags           1    0        unsigned char 
 24377 ;; Return value:  Size  Location     Type
 24378 ;;                  1    wreg      enum E23340
 24379 ;; Registers used:
 24380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24381 ;; Tracked objects:
 24382 ;;		On entry : 0/0
 24383 ;;		On exit  : 0/0
 24384 ;;		Unchanged: 0/0
 24385 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24387 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24388 ;;      Temps:          0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24389 ;;      Totals:         7      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24390 ;;Total ram usage:       37 bytes
 24391 ;; Hardware stack levels used: 1
 24392 ;; Hardware stack levels required when called: 6
 24393 ;; This function calls:
 24394 ;;		NULL
 24395 ;;		_bootEsdData
 24396 ;;		_canEsdData
 24397 ;;		_canGetDiagnostic
 24398 ;;		_canWaitForTxQueueToDrain
 24399 ;;		_consumerEsdData
 24400 ;;		_consumerGetDiagnostic
 24401 ;;		_findServiceIndex
 24402 ;;		_getParameter
 24403 ;;		_getParameterFlags
 24404 ;;		_mnsGetDiagnostic
 24405 ;;		_nvGetDiagnostic
 24406 ;;		_nvGetESDdata
 24407 ;;		_rebuildHashtable
 24408 ;;		_sendMessage2
 24409 ;;		_sendMessage3
 24410 ;;		_sendMessage4
 24411 ;;		_sendMessage5
 24412 ;;		_sendMessage6
 24413 ;;		_sendMessage7
 24414 ;;		_setLEDsByMode
 24415 ;;		_startTimedResponse
 24416 ;;		_teachGetDiagnostic
 24417 ;;		_teachGetESDdata
 24418 ;;		_writeNVM
 24419 ;; This function is called by:
 24420 ;;		_poll
 24421 ;; This function uses a non-reentrant model
 24422 ;;
 24423                           
 24424                           	psect	text18
 24425   000A06                     __ptext18:
 24426                           	callstack 0
 24427   000A06                     _mnsProcessMessage:
 24428                           	callstack 119
 24429   000A06                     
 24430                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 24431   000A06  0105               	movlb	5	; () banked
 24432   000A08  51A1               	movf	_mode_state& (0+255),w,b
 24433   000A0A  A4D8               	btfss	status,2,c
 24434   000A0C  EF0A  F005         	goto	u7451
 24435   000A10  EF0C  F005         	goto	u7450
 24436   000A14                     u7451:
 24437   000A14  EF62  F006         	goto	l10252
 24438   000A18                     u7450:
 24439   000A18  EFCA  F005         	goto	l10196
 24440   000A1C                     l10152:
 24441                           
 24442                           ; BSR set to: 5
 24443                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 24444   000A1C  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24445   000A20  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24446   000A24  0E03               	movlw	3
 24447   000A26  60DF               	cpfslt	indf2,c
 24448   000A28  EF18  F005         	goto	u7461
 24449   000A2C  EF1A  F005         	goto	u7460
 24450   000A30                     u7461:
 24451   000A30  EF29  F005         	goto	l10156
 24452   000A34                     u7460:
 24453   000A34                     
 24454                           ; BSR set to: 5
 24455                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24456   000A34  C590  F526         	movff	_nn+1,sendMessage5@data1
 24457   000A38  C58F  F527         	movff	_nn,sendMessage5@data2
 24458   000A3C  0E42               	movlw	66
 24459   000A3E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24460   000A40  0E01               	movlw	1
 24461   000A42  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24462   000A44  0E01               	movlw	1
 24463   000A46  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24464   000A48  0EAF               	movlw	175
 24465   000A4A  EC9B  F040         	call	_sendMessage5
 24466                           
 24467                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 24468   000A4E  EF60  F005         	goto	l10172
 24469   000A52                     l10156:
 24470                           
 24471                           ; BSR set to: 5
 24472                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 24473   000A52  EE20 F002          	lfsr	2,2
 24474   000A56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24475   000A58  26D9               	addwf	fsr2l,f,c
 24476   000A5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24477   000A5C  22DA               	addwfc	fsr2h,f,c
 24478   000A5E  50DF               	movf	indf2,w,c
 24479   000A60  6F90               	movwf	(_nn+1)& (0+255),b
 24480                           
 24481                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 24482   000A62  EE20 F003          	lfsr	2,3
 24483   000A66  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24484   000A68  26D9               	addwf	fsr2l,f,c
 24485   000A6A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24486   000A6C  22DA               	addwfc	fsr2h,f,c
 24487   000A6E  50DF               	movf	indf2,w,c
 24488   000A70  6F8F               	movwf	_nn& (0+255),b
 24489   000A72                     
 24490                           ; BSR set to: 5
 24491                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 24492   000A72  0EFD               	movlw	253
 24493   000A74  6E0E               	movwf	writeNVM@index^(0+1280),c
 24494   000A76  0E03               	movlw	3
 24495   000A78  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24496   000A7A  0E00               	movlw	0
 24497   000A7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24498   000A7E  C590  F511         	movff	_nn+1,writeNVM@value
 24499   000A82  0E00               	movlw	0
 24500   000A84  EC34  F03C         	call	_writeNVM
 24501   000A88                     
 24502                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 24503   000A88  0EFC               	movlw	252
 24504   000A8A  6E0E               	movwf	writeNVM@index^(0+1280),c
 24505   000A8C  0E03               	movlw	3
 24506   000A8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24507   000A90  0E00               	movlw	0
 24508   000A92  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24509   000A94  C58F  F511         	movff	_nn,writeNVM@value
 24510   000A98  0E00               	movlw	0
 24511   000A9A  EC34  F03C         	call	_writeNVM
 24512   000A9E                     
 24513                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 24514   000A9E  0E01               	movlw	1
 24515   000AA0  0105               	movlb	5	; () banked
 24516   000AA2  6FA1               	movwf	_mode_state& (0+255),b
 24517   000AA4                     
 24518                           ; BSR set to: 5
 24519                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 24520   000AA4  ECB9  F02B         	call	_rebuildHashtable	;wreg free
 24521   000AA8                     
 24522                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 24523   000AA8  C590  F526         	movff	_nn+1,sendMessage2@data1
 24524   000AAC  C58F  F527         	movff	_nn,sendMessage2@data2
 24525   000AB0  0E52               	movlw	82
 24526   000AB2  EC71  F040         	call	_sendMessage2
 24527   000AB6                     
 24528                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 24529   000AB6  0105               	movlb	5	; () banked
 24530   000AB8  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 24531   000ABA  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 24532   000ABC                     l10170:
 24533                           
 24534                           ; BSR set to: 5
 24535                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 24536   000ABC  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 24537   000AC0                     l10172:
 24538                           
 24539                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 24540   000AC0  0E01               	movlw	1
 24541   000AC2  EF7B  F00B         	goto	l1306
 24542   000AC6                     l10176:
 24543                           
 24544                           ; BSR set to: 5
 24545                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 24546   000AC6  0EA5               	movlw	165
 24547   000AC8  6E26               	movwf	sendMessage7@data1^(0+1280),c
 24548   000ACA  0E61               	movlw	97
 24549   000ACC  6E27               	movwf	sendMessage7@data2^(0+1280),c
 24550   000ACE  0EFC               	movlw	252
 24551   000AD0  6E28               	movwf	sendMessage7@data3^(0+1280),c
 24552   000AD2  0EFF               	movlw	255
 24553   000AD4  6E29               	movwf	sendMessage7@data4^(0+1280),c
 24554   000AD6  0EFC               	movlw	252
 24555   000AD8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 24556   000ADA  0E31               	movlw	49
 24557   000ADC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 24558   000ADE  0E01               	movlw	1
 24559   000AE0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 24560   000AE2  0EEF               	movlw	239
 24561   000AE4  EC86  F040         	call	_sendMessage7
 24562   000AE8  EF60  F005         	goto	l10172
 24563   000AEC                     l10182:
 24564                           
 24565                           ; BSR set to: 5
 24566                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 24567   000AEC  0E48               	movlw	72
 24568   000AEE  6EF6               	movwf	tblptrl,c
 24569   000AF0                     	if	1	;There is more than 1 active tblptr byte
 24570   000AF0  0E08               	movlw	8
 24571   000AF2  6EF7               	movwf	tblptrh,c
 24572   000AF4                     	endif
 24573   000AF4                     	if	1	;There are 3 active tblptr bytes
 24574   000AF4  0E00               	movlw	0
 24575   000AF6  6EF8               	movwf	tblptru,c
 24576   000AF8                     	endif
 24577   000AF8  0008               	tblrd		*
 24578   000AFA  C4F5 F526          	movff	tablat,sendMessage7@data1
 24579   000AFE  0E49               	movlw	73
 24580   000B00  6EF6               	movwf	tblptrl,c
 24581   000B02  0E08               	movlw	8
 24582   000B04  6EF7               	movwf	tblptrh,c
 24583   000B06  0E00               	movlw	0
 24584   000B08  6EF8               	movwf	tblptru,c
 24585   000B0A  0008               	tblrd		*
 24586   000B0C  C4F5 F527          	movff	tablat,sendMessage7@data2
 24587   000B10  0E4A               	movlw	74
 24588   000B12  6EF6               	movwf	tblptrl,c
 24589   000B14  0E08               	movlw	8
 24590   000B16  6EF7               	movwf	tblptrh,c
 24591   000B18  0E00               	movlw	0
 24592   000B1A  6EF8               	movwf	tblptru,c
 24593   000B1C  0008               	tblrd		*
 24594   000B1E  C4F5 F528          	movff	tablat,sendMessage7@data3
 24595   000B22  0E4B               	movlw	75
 24596   000B24  6EF6               	movwf	tblptrl,c
 24597   000B26  0E08               	movlw	8
 24598   000B28  6EF7               	movwf	tblptrh,c
 24599   000B2A  0E00               	movlw	0
 24600   000B2C  6EF8               	movwf	tblptru,c
 24601   000B2E  0008               	tblrd		*
 24602   000B30  C4F5 F529          	movff	tablat,sendMessage7@data4
 24603   000B34  0E4C               	movlw	76
 24604   000B36  6EF6               	movwf	tblptrl,c
 24605   000B38  0E08               	movlw	8
 24606   000B3A  6EF7               	movwf	tblptrh,c
 24607   000B3C  0E00               	movlw	0
 24608   000B3E  6EF8               	movwf	tblptru,c
 24609   000B40  0008               	tblrd		*
 24610   000B42  C4F5 F52A          	movff	tablat,sendMessage7@data5
 24611   000B46  0E4D               	movlw	77
 24612   000B48  6EF6               	movwf	tblptrl,c
 24613   000B4A  0E08               	movlw	8
 24614   000B4C  6EF7               	movwf	tblptrh,c
 24615   000B4E  0E00               	movlw	0
 24616   000B50  6EF8               	movwf	tblptru,c
 24617   000B52  0008               	tblrd		*
 24618   000B54  C4F5 F52B          	movff	tablat,sendMessage7@data6
 24619   000B58  0E4E               	movlw	78
 24620   000B5A  6EF6               	movwf	tblptrl,c
 24621   000B5C  0E08               	movlw	8
 24622   000B5E  6EF7               	movwf	tblptrh,c
 24623   000B60  0E00               	movlw	0
 24624   000B62  6EF8               	movwf	tblptru,c
 24625   000B64  0008               	tblrd		*
 24626   000B66  C4F5 F52C          	movff	tablat,sendMessage7@data7
 24627   000B6A  0EE2               	movlw	226
 24628   000B6C  EC86  F040         	call	_sendMessage7
 24629   000B70  EF60  F005         	goto	l10172
 24630   000B74                     l10188:
 24631                           
 24632                           ; BSR set to: 5
 24633                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_VLCB, getParameterFlags());
 24634   000B74  0E00               	movlw	0
 24635   000B76  6E26               	movwf	sendMessage5@data1^(0+1280),c
 24636   000B78  0E00               	movlw	0
 24637   000B7A  6E27               	movwf	sendMessage5@data2^(0+1280),c
 24638   000B7C  0EA5               	movlw	165
 24639   000B7E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24640   000B80  0EFC               	movlw	252
 24641   000B82  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24642   000B84  EC9E  F037         	call	_getParameterFlags	;wreg free
 24643   000B88  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24644   000B8A  0EB6               	movlw	182
 24645   000B8C  EC9B  F040         	call	_sendMessage5
 24646   000B90  EF60  F005         	goto	l10172
 24647   000B94                     l10196:
 24648                           
 24649                           ; BSR set to: 5
 24650   000B94  EE20 F001          	lfsr	2,1
 24651   000B98  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24652   000B9A  26D9               	addwf	fsr2l,f,c
 24653   000B9C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24654   000B9E  22DA               	addwfc	fsr2h,f,c
 24655   000BA0  50DF               	movf	indf2,w,c
 24656   000BA2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24657   000BA4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24658                           
 24659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24660                           ; Switch size 1, requested type "simple"
 24661                           ; Number of cases is 1, Range of values is 0 to 0
 24662                           ; switch strategies available:
 24663                           ; Name         Instructions Cycles
 24664                           ; simple_byte            4     3 (average)
 24665                           ;	Chosen strategy is simple_byte
 24666   000BA6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24667   000BA8  0A00               	xorlw	0	; case 0
 24668   000BAA  B4D8               	btfsc	status,2,c
 24669   000BAC  EFDA  F005         	goto	l11660
 24670   000BB0  EFED  F005         	goto	l10198
 24671   000BB4                     l11660:
 24672                           
 24673                           ; BSR set to: 5
 24674                           ; Switch size 1, requested type "simple"
 24675                           ; Number of cases is 4, Range of values is 13 to 66
 24676                           ; switch strategies available:
 24677                           ; Name         Instructions Cycles
 24678                           ; simple_byte           13     7 (average)
 24679                           ;	Chosen strategy is simple_byte
 24680   000BB4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24681   000BB6  0A0D               	xorlw	13	; case 13
 24682   000BB8  B4D8               	btfsc	status,2,c
 24683   000BBA  EFBA  F005         	goto	l10188
 24684   000BBE  0A1D               	xorlw	29	; case 16
 24685   000BC0  B4D8               	btfsc	status,2,c
 24686   000BC2  EF63  F005         	goto	l10176
 24687   000BC6  0A01               	xorlw	1	; case 17
 24688   000BC8  B4D8               	btfsc	status,2,c
 24689   000BCA  EF76  F005         	goto	l10182
 24690   000BCE  0A53               	xorlw	83	; case 66
 24691   000BD0  B4D8               	btfsc	status,2,c
 24692   000BD2  EF0E  F005         	goto	l10152
 24693   000BD6  EFED  F005         	goto	l10198
 24694   000BDA                     l10198:
 24695                           
 24696                           ; BSR set to: 5
 24697                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 24698   000BDA  0E00               	movlw	0
 24699   000BDC  EF7B  F00B         	goto	l1306
 24700   000BE0                     l10202:
 24701                           
 24702                           ; BSR set to: 5
 24703                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_VLCB, getParameterFlags());
 24704   000BE0  C590  F526         	movff	_nn+1,sendMessage5@data1
 24705   000BE4  C58F  F527         	movff	_nn,sendMessage5@data2
 24706   000BE8  0EA5               	movlw	165
 24707   000BEA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24708   000BEC  0EFC               	movlw	252
 24709   000BEE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24710   000BF0  EC9E  F037         	call	_getParameterFlags	;wreg free
 24711   000BF4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24712   000BF6  0EB6               	movlw	182
 24713   000BF8  EC9B  F040         	call	_sendMessage5
 24714   000BFC  EF60  F005         	goto	l10172
 24715   000C00                     l10208:
 24716                           
 24717                           ; BSR set to: 5
 24718                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 24719   000C00  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24720   000C04  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24721   000C08  0E04               	movlw	4
 24722   000C0A  60DF               	cpfslt	indf2,c
 24723   000C0C  EF0A  F006         	goto	u7471
 24724   000C10  EF0C  F006         	goto	u7470
 24725   000C14                     u7471:
 24726   000C14  EF1B  F006         	goto	l10216
 24727   000C18                     u7470:
 24728   000C18                     
 24729                           ; BSR set to: 5
 24730                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24731   000C18  C590  F526         	movff	_nn+1,sendMessage5@data1
 24732   000C1C  C58F  F527         	movff	_nn,sendMessage5@data2
 24733   000C20  0E76               	movlw	118
 24734   000C22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24735   000C24  0E01               	movlw	1
 24736   000C26  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24737   000C28  0E01               	movlw	1
 24738   000C2A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24739   000C2C  0EAF               	movlw	175
 24740   000C2E  EC9B  F040         	call	_sendMessage5
 24741   000C32  EF60  F005         	goto	l10172
 24742   000C36                     l10216:
 24743                           
 24744                           ; BSR set to: 5
 24745                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 24746   000C36  EE20 F002          	lfsr	2,2
 24747   000C3A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24748   000C3C  26D9               	addwf	fsr2l,f,c
 24749   000C3E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24750   000C40  22DA               	addwfc	fsr2h,f,c
 24751   000C42  50DF               	movf	indf2,w,c
 24752   000C44  A4D8               	btfss	status,2,c
 24753   000C46  EF27  F006         	goto	u7481
 24754   000C4A  EF29  F006         	goto	u7480
 24755   000C4E                     u7481:
 24756   000C4E  EF7D  F006         	goto	l10254
 24757   000C52                     u7480:
 24758   000C52                     
 24759                           ; BSR set to: 5
 24760   000C52  EE20 F003          	lfsr	2,3
 24761   000C56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24762   000C58  26D9               	addwf	fsr2l,f,c
 24763   000C5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24764   000C5C  22DA               	addwfc	fsr2h,f,c
 24765   000C5E  50DF               	movf	indf2,w,c
 24766   000C60  A4D8               	btfss	status,2,c
 24767   000C62  EF35  F006         	goto	u7491
 24768   000C66  EF37  F006         	goto	u7490
 24769   000C6A                     u7491:
 24770   000C6A  EF7D  F006         	goto	l10254
 24771   000C6E                     u7490:
 24772   000C6E                     
 24773                           ; BSR set to: 5
 24774                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 24775   000C6E  EE20 F004          	lfsr	2,4
 24776   000C72  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24777   000C74  26D9               	addwf	fsr2l,f,c
 24778   000C76  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24779   000C78  22DA               	addwfc	fsr2h,f,c
 24780   000C7A  50DF               	movf	indf2,w,c
 24781   000C7C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 24782                           
 24783                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 24784   000C7E  EF4D  F006         	goto	l10248
 24785   000C82                     l10222:
 24786                           
 24787                           ; BSR set to: 5
 24788                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 24789   000C82  85A4               	bsf	_mode_flags& (0+255),2,b
 24790   000C84  EF60  F005         	goto	l10172
 24791   000C88                     l10228:
 24792                           
 24793                           ; BSR set to: 5
 24794                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 24795   000C88  95A4               	bcf	_mode_flags& (0+255),2,b
 24796   000C8A  EF60  F005         	goto	l10172
 24797   000C8E                     l10234:
 24798                           
 24799                           ; BSR set to: 5
 24800                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 24801   000C8E  87A4               	bsf	_mode_flags& (0+255),3,b
 24802   000C90  EF60  F005         	goto	l10172
 24803   000C94                     l10240:
 24804                           
 24805                           ; BSR set to: 5
 24806                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 24807   000C94  97A4               	bcf	_mode_flags& (0+255),3,b
 24808   000C96  EF60  F005         	goto	l10172
 24809   000C9A                     l10248:
 24810                           
 24811                           ; BSR set to: 5
 24812   000C9A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 24813                           
 24814                           ; Switch size 1, requested type "simple"
 24815                           ; Number of cases is 4, Range of values is 12 to 17
 24816                           ; switch strategies available:
 24817                           ; Name         Instructions Cycles
 24818                           ; simple_byte           13     7 (average)
 24819                           ;	Chosen strategy is simple_byte
 24820   000C9C  0A0C               	xorlw	12	; case 12
 24821   000C9E  B4D8               	btfsc	status,2,c
 24822   000CA0  EF41  F006         	goto	l10222
 24823   000CA4  0A01               	xorlw	1	; case 13
 24824   000CA6  B4D8               	btfsc	status,2,c
 24825   000CA8  EF44  F006         	goto	l10228
 24826   000CAC  0A1D               	xorlw	29	; case 16
 24827   000CAE  B4D8               	btfsc	status,2,c
 24828   000CB0  EF47  F006         	goto	l10234
 24829   000CB4  0A01               	xorlw	1	; case 17
 24830   000CB6  B4D8               	btfsc	status,2,c
 24831   000CB8  EF4A  F006         	goto	l10240
 24832   000CBC  EF60  F006         	goto	l1316
 24833   000CC0                     l1316:
 24834                           
 24835                           ; BSR set to: 5
 24836                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 24837   000CC0  EF7D  F006         	goto	l10254
 24838   000CC4                     l10252:
 24839                           
 24840                           ; BSR set to: 5
 24841   000CC4  EE20 F001          	lfsr	2,1
 24842   000CC8  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24843   000CCA  26D9               	addwf	fsr2l,f,c
 24844   000CCC  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24845   000CCE  22DA               	addwfc	fsr2h,f,c
 24846   000CD0  50DF               	movf	indf2,w,c
 24847   000CD2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24848   000CD4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24849                           
 24850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24851                           ; Switch size 1, requested type "simple"
 24852                           ; Number of cases is 1, Range of values is 0 to 0
 24853                           ; switch strategies available:
 24854                           ; Name         Instructions Cycles
 24855                           ; simple_byte            4     3 (average)
 24856                           ;	Chosen strategy is simple_byte
 24857   000CD6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24858   000CD8  0A00               	xorlw	0	; case 0
 24859   000CDA  B4D8               	btfsc	status,2,c
 24860   000CDC  EF72  F006         	goto	l11662
 24861   000CE0  EF7D  F006         	goto	l10254
 24862   000CE4                     l11662:
 24863                           
 24864                           ; BSR set to: 5
 24865                           ; Switch size 1, requested type "simple"
 24866                           ; Number of cases is 2, Range of values is 13 to 118
 24867                           ; switch strategies available:
 24868                           ; Name         Instructions Cycles
 24869                           ; simple_byte            7     4 (average)
 24870                           ;	Chosen strategy is simple_byte
 24871   000CE4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24872   000CE6  0A0D               	xorlw	13	; case 13
 24873   000CE8  B4D8               	btfsc	status,2,c
 24874   000CEA  EFF0  F005         	goto	l10202
 24875   000CEE  0A7B               	xorlw	123	; case 118
 24876   000CF0  B4D8               	btfsc	status,2,c
 24877   000CF2  EF00  F006         	goto	l10208
 24878   000CF6  EF7D  F006         	goto	l10254
 24879   000CFA                     l10254:
 24880                           
 24881                           ; BSR set to: 5
 24882                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 24883   000CFA  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24884   000CFE  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24885   000D02  0E03               	movlw	3
 24886   000D04  60DF               	cpfslt	indf2,c
 24887   000D06  EF87  F006         	goto	u7501
 24888   000D0A  EF89  F006         	goto	u7500
 24889   000D0E                     u7501:
 24890   000D0E  EF8B  F006         	goto	l10260
 24891   000D12                     u7500:
 24892   000D12  EFED  F005         	goto	l10198
 24893   000D16                     l10260:
 24894                           
 24895                           ; BSR set to: 5
 24896                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 24897   000D16  EE20 F002          	lfsr	2,2
 24898   000D1A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24899   000D1C  26D9               	addwf	fsr2l,f,c
 24900   000D1E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24901   000D20  22DA               	addwfc	fsr2h,f,c
 24902   000D22  50DE               	movf	postinc2,w,c
 24903   000D24  1990               	xorwf	(_nn+1)& (0+255),w,b
 24904   000D26  B4D8               	btfsc	status,2,c
 24905   000D28  EF98  F006         	goto	u7511
 24906   000D2C  EF9A  F006         	goto	u7510
 24907   000D30                     u7511:
 24908   000D30  EF9C  F006         	goto	l10266
 24909   000D34                     u7510:
 24910   000D34  EFED  F005         	goto	l10198
 24911   000D38                     l10266:
 24912                           
 24913                           ; BSR set to: 5
 24914                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 24915   000D38  EE20 F003          	lfsr	2,3
 24916   000D3C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24917   000D3E  26D9               	addwf	fsr2l,f,c
 24918   000D40  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24919   000D42  22DA               	addwfc	fsr2h,f,c
 24920   000D44  518F               	movf	_nn& (0+255),w,b
 24921   000D46  18DE               	xorwf	postinc2,w,c
 24922   000D48  B4D8               	btfsc	status,2,c
 24923   000D4A  EFA9  F006         	goto	u7521
 24924   000D4E  EFAB  F006         	goto	u7520
 24925   000D52                     u7521:
 24926   000D52  EF50  F00B         	goto	l10476
 24927   000D56                     u7520:
 24928   000D56  EFED  F005         	goto	l10198
 24929   000D5A                     l10272:
 24930                           
 24931                           ; BSR set to: 5
 24932                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 24933   000D5A  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24934   000D5E  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24935   000D62  0E04               	movlw	4
 24936   000D64  60DF               	cpfslt	indf2,c
 24937   000D66  EFB7  F006         	goto	u7531
 24938   000D6A  EFB9  F006         	goto	u7530
 24939   000D6E                     u7531:
 24940   000D6E  EFC8  F006         	goto	l10280
 24941   000D72                     u7530:
 24942   000D72                     
 24943                           ; BSR set to: 5
 24944                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24945   000D72  C590  F526         	movff	_nn+1,sendMessage5@data1
 24946   000D76  C58F  F527         	movff	_nn,sendMessage5@data2
 24947   000D7A  0E73               	movlw	115
 24948   000D7C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24949   000D7E  0E01               	movlw	1
 24950   000D80  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24951   000D82  0E01               	movlw	1
 24952   000D84  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24953   000D86  0EAF               	movlw	175
 24954   000D88  EC9B  F040         	call	_sendMessage5
 24955   000D8C  EF60  F005         	goto	l10172
 24956   000D90                     l10280:
 24957                           
 24958                           ; BSR set to: 5
 24959                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 24960   000D90  EE20 F004          	lfsr	2,4
 24961   000D94  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24962   000D96  26D9               	addwf	fsr2l,f,c
 24963   000D98  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24964   000D9A  22DA               	addwfc	fsr2h,f,c
 24965   000D9C  0E14               	movlw	20
 24966   000D9E  64DF               	cpfsgt	indf2,c
 24967   000DA0  EFD4  F006         	goto	u7541
 24968   000DA4  EFD6  F006         	goto	u7540
 24969   000DA8                     u7541:
 24970   000DA8  EFEE  F006         	goto	l10288
 24971   000DAC                     u7540:
 24972   000DAC                     
 24973                           ; BSR set to: 5
 24974                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 24975   000DAC  C590  F526         	movff	_nn+1,sendMessage3@data1
 24976   000DB0  C58F  F527         	movff	_nn,sendMessage3@data2
 24977   000DB4  0E09               	movlw	9
 24978   000DB6  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24979   000DB8  0E6F               	movlw	111
 24980   000DBA  EC5C  F040         	call	_sendMessage3
 24981                           
 24982                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 24983   000DBE  C590  F526         	movff	_nn+1,sendMessage5@data1
 24984   000DC2  C58F  F527         	movff	_nn,sendMessage5@data2
 24985   000DC6  0E73               	movlw	115
 24986   000DC8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24987   000DCA  0E01               	movlw	1
 24988   000DCC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24989   000DCE  0E09               	movlw	9
 24990   000DD0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24991   000DD2  0EAF               	movlw	175
 24992   000DD4  EC9B  F040         	call	_sendMessage5
 24993   000DD8  EF60  F005         	goto	l10172
 24994   000DDC                     l10288:
 24995                           
 24996                           ; BSR set to: 5
 24997                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 24998   000DDC  EE20 F004          	lfsr	2,4
 24999   000DE0  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25000   000DE2  26D9               	addwf	fsr2l,f,c
 25001   000DE4  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25002   000DE6  22DA               	addwfc	fsr2h,f,c
 25003   000DE8  50DF               	movf	indf2,w,c
 25004   000DEA  ECCC  F024         	call	_getParameter
 25005   000DEE  6E56               	movwf	mnsProcessMessage@i^(0+1280),c
 25006   000DF0                     
 25007                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 25008   000DF0  C590  F526         	movff	_nn+1,sendMessage4@data1
 25009   000DF4  C58F  F527         	movff	_nn,sendMessage4@data2
 25010   000DF8  EE20 F004          	lfsr	2,4
 25011   000DFC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25012   000DFE  26D9               	addwf	fsr2l,f,c
 25013   000E00  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25014   000E02  22DA               	addwfc	fsr2h,f,c
 25015   000E04  50DF               	movf	indf2,w,c
 25016   000E06  6E28               	movwf	sendMessage4@data3^(0+1280),c
 25017   000E08  C556  F529         	movff	mnsProcessMessage@i,sendMessage4@data4
 25018   000E0C  0E9B               	movlw	155
 25019   000E0E  EC47  F040         	call	_sendMessage4
 25020   000E12                     
 25021                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 25022   000E12  0105               	movlb	5	; () banked
 25023   000E14  B7A4               	btfsc	_mode_flags& (0+255),3,b
 25024   000E16  EF0F  F007         	goto	u7551
 25025   000E1A  EF11  F007         	goto	u7550
 25026   000E1E                     u7551:
 25027   000E1E  EF60  F005         	goto	l10172
 25028   000E22                     u7550:
 25029   000E22                     
 25030                           ; BSR set to: 5
 25031   000E22  EE20 F004          	lfsr	2,4
 25032   000E26  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25033   000E28  26D9               	addwf	fsr2l,f,c
 25034   000E2A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25035   000E2C  22DA               	addwfc	fsr2h,f,c
 25036   000E2E  50DF               	movf	indf2,w,c
 25037   000E30  A4D8               	btfss	status,2,c
 25038   000E32  EF1D  F007         	goto	u7561
 25039   000E36  EF1F  F007         	goto	u7560
 25040   000E3A                     u7561:
 25041   000E3A  EF60  F005         	goto	l10172
 25042   000E3E                     u7560:
 25043   000E3E                     
 25044                           ; BSR set to: 5
 25045                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 25046   000E3E  0E01               	movlw	1
 25047   000E40  EC12  F037         	call	_findServiceIndex
 25048   000E44  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25049   000E46  0E7A               	movlw	low _mnsTRrqnpnCallback
 25050   000E48  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25051   000E4A  0E7E               	movlw	high _mnsTRrqnpnCallback
 25052   000E4C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25053   000E4E  0E07               	movlw	7
 25054   000E50  EC94  F03C         	call	_startTimedResponse
 25055   000E54  EF60  F005         	goto	l10172
 25056   000E58                     l1334:
 25057                           
 25058                           ; BSR set to: 5
 25059                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 25060   000E58  C58F  F58D         	movff	_nn,_previousNN
 25061   000E5C  C590  F58E         	movff	_nn+1,_previousNN+1
 25062   000E60                     
 25063                           ; BSR set to: 5
 25064                           ;../../VLCBlib_PIC/mns.c: 480:             writeNVM(EEPROM_NVM_TYPE, 0x3FA, 0xFF);
 25065   000E60  0EFA               	movlw	250
 25066   000E62  6E0E               	movwf	writeNVM@index^(0+1280),c
 25067   000E64  0E03               	movlw	3
 25068   000E66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25069   000E68  0E00               	movlw	0
 25070   000E6A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25071   000E6C  0EFF               	movlw	255
 25072   000E6E  6E11               	movwf	writeNVM@value^(0+1280),c
 25073   000E70  0E00               	movlw	0
 25074   000E72  EC34  F03C         	call	_writeNVM
 25075   000E76                     
 25076                           ;../../VLCBlib_PIC/mns.c: 481:             if (previousNN.word != 0) {
 25077   000E76  0105               	movlb	5	; () banked
 25078   000E78  518D               	movf	_previousNN& (0+255),w,b
 25079   000E7A  118E               	iorwf	(_previousNN+1)& (0+255),w,b
 25080   000E7C  B4D8               	btfsc	status,2,c
 25081   000E7E  EF43  F007         	goto	u7571
 25082   000E82  EF45  F007         	goto	u7570
 25083   000E86                     u7571:
 25084   000E86  EF6A  F007         	goto	l1335
 25085   000E8A                     u7570:
 25086   000E8A                     
 25087                           ; BSR set to: 5
 25088                           ;../../VLCBlib_PIC/mns.c: 482:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 25089   000E8A  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 25090   000E8E  C58D  F527         	movff	_previousNN,sendMessage2@data2
 25091   000E92  0E51               	movlw	81
 25092   000E94  EC71  F040         	call	_sendMessage2
 25093   000E98                     
 25094                           ;../../VLCBlib_PIC/mns.c: 483:                 transport->waitForTxQueueToDrain();
 25095   000E98  0E04               	movlw	4
 25096   000E9A  0105               	movlb	5	; () banked
 25097   000E9C  2591               	addwf	_transport& (0+255),w,b
 25098   000E9E  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25099   000EA0  0E00               	movlw	0
 25100   000EA2  2192               	addwfc	(_transport+1)& (0+255),w,b
 25101   000EA4  6FD1               	movwf	(??_mnsProcessMessage+1)& (0+255),b
 25102   000EA6  C5D0  F4F6         	movff	??_mnsProcessMessage,tblptrl
 25103   000EAA  C5D1  F4F7         	movff	??_mnsProcessMessage+1,tblptrh
 25104   000EAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25105   000EAE  6AF8               	clrf	tblptru,c
 25106   000EB0                     	endif
 25107   000EB0                     	if	0	;tblptru may be non-zero
 25108   000EB0                     	endif
 25109   000EB0  0009               	tblrd		*+
 25110   000EB2  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+2
 25111   000EB6  0009               	tblrd		*+
 25112   000EB8  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+3
 25113   000EBC  D802               	call	u7588
 25114   000EBE  EF6A  F007         	goto	u7589
 25115   000EC2                     u7588:
 25116   000EC2  0005               	push	
 25117   000EC4  6EFA               	movwf	pclath,c
 25118   000EC6  51D2               	movf	(??_mnsProcessMessage+2)& (0+255),w,b
 25119   000EC8  6EFD               	movwf	tosl,c
 25120   000ECA  51D3               	movf	(??_mnsProcessMessage+3)& (0+255),w,b
 25121   000ECC  6EFE               	movwf	tosh,c
 25122   000ECE  6AFF               	clrf	tosu,c
 25123   000ED0  50FA               	movf	pclath,w,c
 25124   000ED2  0012               	return		;indir
 25125   000ED4                     u7589:
 25126   000ED4                     l1335:
 25127   000ED4  00FF               	reset		;# 
 25128   000ED6                     l10310:
 25129                           
 25130                           ;../../VLCBlib_PIC/mns.c: 488:             if (m->len < 5) {
 25131   000ED6  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25132   000EDA  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25133   000EDE  0E05               	movlw	5
 25134   000EE0  60DF               	cpfslt	indf2,c
 25135   000EE2  EF75  F007         	goto	u7591
 25136   000EE6  EF77  F007         	goto	u7590
 25137   000EEA                     u7591:
 25138   000EEA  EF86  F007         	goto	l10318
 25139   000EEE                     u7590:
 25140   000EEE                     
 25141                           ;../../VLCBlib_PIC/mns.c: 489:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25142   000EEE  C590  F526         	movff	_nn+1,sendMessage5@data1
 25143   000EF2  C58F  F527         	movff	_nn,sendMessage5@data2
 25144   000EF6  0E87               	movlw	135
 25145   000EF8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25146   000EFA  0E01               	movlw	1
 25147   000EFC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25148   000EFE  0E01               	movlw	1
 25149   000F00  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25150   000F02  0EAF               	movlw	175
 25151   000F04  EC9B  F040         	call	_sendMessage5
 25152   000F08  EF60  F005         	goto	l10172
 25153   000F0C                     l10318:
 25154                           
 25155                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->bytes[2] == 0) {
 25156   000F0C  EE20 F004          	lfsr	2,4
 25157   000F10  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25158   000F12  26D9               	addwf	fsr2l,f,c
 25159   000F14  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25160   000F16  22DA               	addwfc	fsr2h,f,c
 25161   000F18  50DF               	movf	indf2,w,c
 25162   000F1A  A4D8               	btfss	status,2,c
 25163   000F1C  EF92  F007         	goto	u7601
 25164   000F20  EF94  F007         	goto	u7600
 25165   000F24                     u7601:
 25166   000F24  EF9F  F007         	goto	l10322
 25167   000F28                     u7600:
 25168   000F28                     
 25169                           ;../../VLCBlib_PIC/mns.c: 494:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 25170   000F28  0E00               	movlw	0
 25171   000F2A  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25172   000F2C  0E48               	movlw	low _mnsTRallDiagnosticsCallback
 25173   000F2E  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25174   000F30  0E54               	movlw	high _mnsTRallDiagnosticsCallback
 25175   000F32  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25176   000F34  0E04               	movlw	4
 25177   000F36  EC94  F03C         	call	_startTimedResponse
 25178                           
 25179                           ;../../VLCBlib_PIC/mns.c: 495:             } else {
 25180   000F3A  EF60  F005         	goto	l10172
 25181   000F3E                     l10322:
 25182                           
 25183                           ;../../VLCBlib_PIC/mns.c: 497:                 if (m->bytes[2] > 6) {
 25184   000F3E  EE20 F004          	lfsr	2,4
 25185   000F42  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25186   000F44  26D9               	addwf	fsr2l,f,c
 25187   000F46  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25188   000F48  22DA               	addwfc	fsr2h,f,c
 25189   000F4A  0E06               	movlw	6
 25190   000F4C  64DF               	cpfsgt	indf2,c
 25191   000F4E  EFAB  F007         	goto	u7611
 25192   000F52  EFAD  F007         	goto	u7610
 25193   000F56                     u7611:
 25194   000F56  EFBC  F007         	goto	l10330
 25195   000F5A                     u7610:
 25196   000F5A                     
 25197                           ;../../VLCBlib_PIC/mns.c: 498:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 25198   000F5A  C590  F526         	movff	_nn+1,sendMessage5@data1
 25199   000F5E  C58F  F527         	movff	_nn,sendMessage5@data2
 25200   000F62  0E87               	movlw	135
 25201   000F64  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25202   000F66  0E01               	movlw	1
 25203   000F68  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25204   000F6A  0EFC               	movlw	252
 25205   000F6C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25206   000F6E  0EAF               	movlw	175
 25207   000F70  EC9B  F040         	call	_sendMessage5
 25208   000F74  EF60  F005         	goto	l10172
 25209   000F78                     l10330:
 25210                           
 25211                           ;../../VLCBlib_PIC/mns.c: 501:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 25212   000F78  EE20 F004          	lfsr	2,4
 25213   000F7C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25214   000F7E  26D9               	addwf	fsr2l,f,c
 25215   000F80  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25216   000F82  22DA               	addwfc	fsr2h,f,c
 25217   000F84  50DF               	movf	indf2,w,c
 25218   000F86  0105               	movlb	5	; () banked
 25219   000F88  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25220   000F8A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25221   000F8C  90D8               	bcf	status,0,c
 25222   000F8E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25223   000F90  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25224   000F92  0EFE               	movlw	254
 25225   000F94  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25226   000F96  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25227   000F98  0EFF               	movlw	255
 25228   000F9A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25229   000F9C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25230   000F9E  0E89               	movlw	low _services
 25231   000FA0  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25232   000FA2  6EF6               	movwf	tblptrl,c
 25233   000FA4  0EFF               	movlw	high _services
 25234   000FA6  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25235   000FA8  6EF7               	movwf	tblptrh,c
 25236   000FAA                     	if	1	;There are 3 active tblptr bytes
 25237   000FAA  6AF8               	clrf	tblptru,c
 25238   000FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 25239   000FAE  22F8               	addwfc	tblptru,f,c
 25240   000FB0                     	endif
 25241   000FB0  0009               	tblrd		*+
 25242   000FB2  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25243   000FB6  0009               	tblrd		*+
 25244   000FB8  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25245   000FBC  0E0C               	movlw	12
 25246   000FBE  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25247   000FC0  0E00               	movlw	0
 25248   000FC2  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25249   000FC4  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25250   000FC8  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25251   000FCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25252   000FCC  6AF8               	clrf	tblptru,c
 25253   000FCE                     	endif
 25254   000FCE                     	if	0	;tblptru may be non-zero
 25255   000FCE                     	endif
 25256   000FCE  0009               	tblrd		*+
 25257   000FD0  50F5               	movf	tablat,w,c
 25258   000FD2  0009               	tblrd		*+
 25259   000FD4  10F5               	iorwf	tablat,w,c
 25260   000FD6  A4D8               	btfss	status,2,c
 25261   000FD8  EFF0  F007         	goto	u7621
 25262   000FDC  EFF2  F007         	goto	u7620
 25263   000FE0                     u7621:
 25264   000FE0  EF05  F008         	goto	l10334
 25265   000FE4                     u7620:
 25266   000FE4                     
 25267                           ; BSR set to: 5
 25268                           ;../../VLCBlib_PIC/mns.c: 503:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 25269   000FE4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25270   000FE8  C58F  F527         	movff	_nn,sendMessage5@data2
 25271   000FEC  0E87               	movlw	135
 25272   000FEE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25273   000FF0  EE20 F004          	lfsr	2,4
 25274   000FF4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25275   000FF6  26D9               	addwf	fsr2l,f,c
 25276   000FF8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25277   000FFA  22DA               	addwfc	fsr2h,f,c
 25278   000FFC  50DF               	movf	indf2,w,c
 25279   000FFE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25280   001000  0E00               	movlw	0
 25281   001002  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25282   001004  0EC7               	movlw	199
 25283   001006  EC9B  F040         	call	_sendMessage5
 25284   00100A                     l10334:
 25285                           
 25286                           ;../../VLCBlib_PIC/mns.c: 505:                 if (m->bytes[3] == 0) {
 25287   00100A  EE20 F005          	lfsr	2,5
 25288   00100E  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25289   001010  26D9               	addwf	fsr2l,f,c
 25290   001012  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25291   001014  22DA               	addwfc	fsr2h,f,c
 25292   001016  50DF               	movf	indf2,w,c
 25293   001018  A4D8               	btfss	status,2,c
 25294   00101A  EF11  F008         	goto	u7631
 25295   00101E  EF13  F008         	goto	u7630
 25296   001022                     u7631:
 25297   001022  EF24  F008         	goto	l10344
 25298   001026                     u7630:
 25299   001026                     
 25300                           ;../../VLCBlib_PIC/mns.c: 507:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 25301   001026  EE20 F004          	lfsr	2,4
 25302   00102A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25303   00102C  26D9               	addwf	fsr2l,f,c
 25304   00102E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25305   001030  22DA               	addwfc	fsr2h,f,c
 25306   001032  50DF               	movf	indf2,w,c
 25307   001034  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25308   001036  0E48               	movlw	low _mnsTRallDiagnosticsCallback
 25309   001038  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25310   00103A  0E54               	movlw	high _mnsTRallDiagnosticsCallback
 25311   00103C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25312   00103E  0E04               	movlw	4
 25313   001040  EC94  F03C         	call	_startTimedResponse
 25314   001044  EF60  F005         	goto	l10172
 25315   001048                     l10344:
 25316                           
 25317                           ;../../VLCBlib_PIC/mns.c: 510:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 25318   001048  EE20 F004          	lfsr	2,4
 25319   00104C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25320   00104E  26D9               	addwf	fsr2l,f,c
 25321   001050  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25322   001052  22DA               	addwfc	fsr2h,f,c
 25323   001054  50DF               	movf	indf2,w,c
 25324   001056  0105               	movlb	5	; () banked
 25325   001058  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25326   00105A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25327   00105C  90D8               	bcf	status,0,c
 25328   00105E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25329   001060  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25330   001062  0EFE               	movlw	254
 25331   001064  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25332   001066  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25333   001068  0EFF               	movlw	255
 25334   00106A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25335   00106C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25336   00106E  0E89               	movlw	low _services
 25337   001070  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25338   001072  6EF6               	movwf	tblptrl,c
 25339   001074  0EFF               	movlw	high _services
 25340   001076  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25341   001078  6EF7               	movwf	tblptrh,c
 25342   00107A                     	if	1	;There are 3 active tblptr bytes
 25343   00107A  6AF8               	clrf	tblptru,c
 25344   00107C  0E00               	movlw	low (__mediumconst shr (0+16))
 25345   00107E  22F8               	addwfc	tblptru,f,c
 25346   001080                     	endif
 25347   001080  0009               	tblrd		*+
 25348   001082  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25349   001086  0009               	tblrd		*+
 25350   001088  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25351   00108C  0E0C               	movlw	12
 25352   00108E  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25353   001090  0E00               	movlw	0
 25354   001092  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25355   001094  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25356   001098  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25357   00109C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25358   00109C  6AF8               	clrf	tblptru,c
 25359   00109E                     	endif
 25360   00109E                     	if	0	;tblptru may be non-zero
 25361   00109E                     	endif
 25362   00109E  0009               	tblrd		*+
 25363   0010A0  C4F5 F5D6          	movff	tablat,??_mnsProcessMessage+6
 25364   0010A4  0009               	tblrd		*+
 25365   0010A6  C4F5 F5D7          	movff	tablat,??_mnsProcessMessage+7
 25366   0010AA  D802               	call	u7648
 25367   0010AC  EF68  F008         	goto	u7649
 25368   0010B0                     u7648:
 25369   0010B0  0005               	push	
 25370   0010B2  6EFA               	movwf	pclath,c
 25371   0010B4  51D6               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 25372   0010B6  6EFD               	movwf	tosl,c
 25373   0010B8  51D7               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 25374   0010BA  6EFE               	movwf	tosh,c
 25375   0010BC  6AFF               	clrf	tosu,c
 25376   0010BE  50FA               	movf	pclath,w,c
 25377   0010C0  EE20 F005          	lfsr	2,5
 25378   0010C4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25379   0010C6  26D9               	addwf	fsr2l,f,c
 25380   0010C8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25381   0010CA  22DA               	addwfc	fsr2h,f,c
 25382   0010CC  50DF               	movf	indf2,w,c
 25383   0010CE  0012               	return		;indir
 25384   0010D0                     u7649:
 25385   0010D0  C507  F558         	movff	?_nvGetDiagnostic,mnsProcessMessage@d
 25386   0010D4  C508  F559         	movff	?_nvGetDiagnostic+1,mnsProcessMessage@d+1
 25387   0010D8                     
 25388                           ;../../VLCBlib_PIC/mns.c: 511:                     if (d == ((void*)0)) {
 25389   0010D8  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25390   0010DA  1059               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25391   0010DC  A4D8               	btfss	status,2,c
 25392   0010DE  EF73  F008         	goto	u7651
 25393   0010E2  EF75  F008         	goto	u7650
 25394   0010E6                     u7651:
 25395   0010E6  EF84  F008         	goto	l10350
 25396   0010EA                     u7650:
 25397   0010EA                     
 25398                           ;../../VLCBlib_PIC/mns.c: 513:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 25399   0010EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 25400   0010EE  C58F  F527         	movff	_nn,sendMessage5@data2
 25401   0010F2  0E87               	movlw	135
 25402   0010F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25403   0010F6  0E01               	movlw	1
 25404   0010F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25405   0010FA  0EFD               	movlw	253
 25406   0010FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25407   0010FE  0EAF               	movlw	175
 25408   001100  EC9B  F040         	call	_sendMessage5
 25409                           
 25410                           ;../../VLCBlib_PIC/mns.c: 514:                     } else {
 25411   001104  EF60  F005         	goto	l10172
 25412   001108                     l10350:
 25413                           
 25414                           ;../../VLCBlib_PIC/mns.c: 516:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 25415   001108  C590  F526         	movff	_nn+1,sendMessage6@data1
 25416   00110C  C58F  F527         	movff	_nn,sendMessage6@data2
 25417   001110  EE20 F004          	lfsr	2,4
 25418   001114  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25419   001116  26D9               	addwf	fsr2l,f,c
 25420   001118  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25421   00111A  22DA               	addwfc	fsr2h,f,c
 25422   00111C  50DF               	movf	indf2,w,c
 25423   00111E  6E28               	movwf	sendMessage6@data3^(0+1280),c
 25424   001120  EE20 F005          	lfsr	2,5
 25425   001124  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25426   001126  26D9               	addwf	fsr2l,f,c
 25427   001128  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25428   00112A  22DA               	addwfc	fsr2h,f,c
 25429   00112C  50DF               	movf	indf2,w,c
 25430   00112E  6E29               	movwf	sendMessage6@data4^(0+1280),c
 25431   001130  EE20 F001          	lfsr	2,1
 25432   001134  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25433   001136  26D9               	addwf	fsr2l,f,c
 25434   001138  5059               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25435   00113A  22DA               	addwfc	fsr2h,f,c
 25436   00113C  50DF               	movf	indf2,w,c
 25437   00113E  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 25438   001140  C558  F4D9         	movff	mnsProcessMessage@d,fsr2l
 25439   001144  C559  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 25440   001148  50DF               	movf	indf2,w,c
 25441   00114A  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 25442   00114C  0EC7               	movlw	199
 25443   00114E  EC32  F040         	call	_sendMessage6
 25444   001152  EF60  F005         	goto	l10172
 25445   001156                     l10356:
 25446                           
 25447                           ; BSR set to: 5
 25448                           ;../../VLCBlib_PIC/mns.c: 524:             if (m->len < 4) {
 25449   001156  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25450   00115A  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25451   00115E  0E04               	movlw	4
 25452   001160  60DF               	cpfslt	indf2,c
 25453   001162  EFB5  F008         	goto	u7661
 25454   001166  EFB7  F008         	goto	u7660
 25455   00116A                     u7661:
 25456   00116A  EFC6  F008         	goto	l10364
 25457   00116E                     u7660:
 25458   00116E                     
 25459                           ; BSR set to: 5
 25460                           ;../../VLCBlib_PIC/mns.c: 525:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25461   00116E  C590  F526         	movff	_nn+1,sendMessage5@data1
 25462   001172  C58F  F527         	movff	_nn,sendMessage5@data2
 25463   001176  0E78               	movlw	120
 25464   001178  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25465   00117A  0E01               	movlw	1
 25466   00117C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25467   00117E  0E01               	movlw	1
 25468   001180  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25469   001182  0EAF               	movlw	175
 25470   001184  EC9B  F040         	call	_sendMessage5
 25471   001188  EF60  F005         	goto	l10172
 25472   00118C                     l10364:
 25473                           
 25474                           ; BSR set to: 5
 25475                           ;../../VLCBlib_PIC/mns.c: 528:             if (m->bytes[2] == 0) {
 25476   00118C  EE20 F004          	lfsr	2,4
 25477   001190  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25478   001192  26D9               	addwf	fsr2l,f,c
 25479   001194  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25480   001196  22DA               	addwfc	fsr2h,f,c
 25481   001198  50DF               	movf	indf2,w,c
 25482   00119A  A4D8               	btfss	status,2,c
 25483   00119C  EFD2  F008         	goto	u7671
 25484   0011A0  EFD4  F008         	goto	u7670
 25485   0011A4                     u7671:
 25486   0011A4  EFEC  F008         	goto	l10370
 25487   0011A8                     u7670:
 25488   0011A8                     
 25489                           ; BSR set to: 5
 25490                           ;../../VLCBlib_PIC/mns.c: 530:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 6);
 25491   0011A8  C590  F526         	movff	_nn+1,sendMessage5@data1
 25492   0011AC  C58F  F527         	movff	_nn,sendMessage5@data2
 25493   0011B0  0E00               	movlw	0
 25494   0011B2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25495   0011B4  0E00               	movlw	0
 25496   0011B6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25497   0011B8  0E06               	movlw	6
 25498   0011BA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25499   0011BC  0EAC               	movlw	172
 25500   0011BE  EC9B  F040         	call	_sendMessage5
 25501   0011C2                     
 25502                           ;../../VLCBlib_PIC/mns.c: 532:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 25503   0011C2  0E01               	movlw	1
 25504   0011C4  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25505   0011C6  0E44               	movlw	low _mnsTRserviceDiscoveryCallback
 25506   0011C8  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25507   0011CA  0E6B               	movlw	high _mnsTRserviceDiscoveryCallback
 25508   0011CC  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25509   0011CE  0E03               	movlw	3
 25510   0011D0  EC94  F03C         	call	_startTimedResponse
 25511                           
 25512                           ;../../VLCBlib_PIC/mns.c: 533:             } else if (m->bytes[2] > 6) {
 25513   0011D4  EF60  F005         	goto	l10172
 25514   0011D8                     l10370:
 25515                           
 25516                           ; BSR set to: 5
 25517   0011D8  EE20 F004          	lfsr	2,4
 25518   0011DC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25519   0011DE  26D9               	addwf	fsr2l,f,c
 25520   0011E0  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25521   0011E2  22DA               	addwfc	fsr2h,f,c
 25522   0011E4  0E06               	movlw	6
 25523   0011E6  64DF               	cpfsgt	indf2,c
 25524   0011E8  EFF8  F008         	goto	u7681
 25525   0011EC  EFFA  F008         	goto	u7680
 25526   0011F0                     u7681:
 25527   0011F0  EF09  F009         	goto	l10380
 25528   0011F4                     u7680:
 25529   0011F4                     
 25530                           ; BSR set to: 5
 25531                           ;../../VLCBlib_PIC/mns.c: 534:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 25532   0011F4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25533   0011F8  C58F  F527         	movff	_nn,sendMessage5@data2
 25534   0011FC  0E78               	movlw	120
 25535   0011FE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25536   001200  0E01               	movlw	1
 25537   001202  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25538   001204  0EFC               	movlw	252
 25539   001206  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25540   001208  0EAF               	movlw	175
 25541   00120A  EC9B  F040         	call	_sendMessage5
 25542   00120E  EF60  F005         	goto	l10172
 25543   001212                     l10380:
 25544                           
 25545                           ; BSR set to: 5
 25546                           ;../../VLCBlib_PIC/mns.c: 538:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 25547   001212  EE20 F004          	lfsr	2,4
 25548   001216  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25549   001218  26D9               	addwf	fsr2l,f,c
 25550   00121A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25551   00121C  22DA               	addwfc	fsr2h,f,c
 25552   00121E  50DF               	movf	indf2,w,c
 25553   001220  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25554   001222  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25555   001224  90D8               	bcf	status,0,c
 25556   001226  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25557   001228  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25558   00122A  0EFE               	movlw	254
 25559   00122C  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25560   00122E  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25561   001230  0EFF               	movlw	255
 25562   001232  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25563   001234  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25564   001236  0E89               	movlw	low _services
 25565   001238  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25566   00123A  6EF6               	movwf	tblptrl,c
 25567   00123C  0EFF               	movlw	high _services
 25568   00123E  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25569   001240  6EF7               	movwf	tblptrh,c
 25570   001242                     	if	1	;There are 3 active tblptr bytes
 25571   001242  6AF8               	clrf	tblptru,c
 25572   001244  0E00               	movlw	low (__mediumconst shr (0+16))
 25573   001246  22F8               	addwfc	tblptru,f,c
 25574   001248                     	endif
 25575   001248  0009               	tblrd		*+
 25576   00124A  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25577   00124E  0009               	tblrd		*+
 25578   001250  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25579   001254  0E0A               	movlw	10
 25580   001256  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25581   001258  0E00               	movlw	0
 25582   00125A  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25583   00125C  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25584   001260  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25585   001264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25586   001264  6AF8               	clrf	tblptru,c
 25587   001266                     	endif
 25588   001266                     	if	0	;tblptru may be non-zero
 25589   001266                     	endif
 25590   001266  0009               	tblrd		*+
 25591   001268  50F5               	movf	tablat,w,c
 25592   00126A  0009               	tblrd		*+
 25593   00126C  10F5               	iorwf	tablat,w,c
 25594   00126E  A4D8               	btfss	status,2,c
 25595   001270  EF3C  F009         	goto	u7691
 25596   001274  EF3E  F009         	goto	u7690
 25597   001278                     u7691:
 25598   001278  EF7E  F009         	goto	l10384
 25599   00127C                     u7690:
 25600   00127C                     
 25601                           ; BSR set to: 5
 25602                           ;../../VLCBlib_PIC/mns.c: 539:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 25603   00127C  C590  F526         	movff	_nn+1,sendMessage7@data1
 25604   001280  C58F  F527         	movff	_nn,sendMessage7@data2
 25605   001284  EE20 F004          	lfsr	2,4
 25606   001288  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25607   00128A  26D9               	addwf	fsr2l,f,c
 25608   00128C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25609   00128E  22DA               	addwfc	fsr2h,f,c
 25610   001290  50DF               	movf	indf2,w,c
 25611   001292  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25612   001294  EE20 F004          	lfsr	2,4
 25613   001298  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25614   00129A  26D9               	addwf	fsr2l,f,c
 25615   00129C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25616   00129E  22DA               	addwfc	fsr2h,f,c
 25617   0012A0  50DF               	movf	indf2,w,c
 25618   0012A2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25619   0012A4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25620   0012A6  90D8               	bcf	status,0,c
 25621   0012A8  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25622   0012AA  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25623   0012AC  0EFE               	movlw	254
 25624   0012AE  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25625   0012B0  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25626   0012B2  0EFF               	movlw	255
 25627   0012B4  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25628   0012B6  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25629   0012B8  0E89               	movlw	low _services
 25630   0012BA  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25631   0012BC  6EF6               	movwf	tblptrl,c
 25632   0012BE  0EFF               	movlw	high _services
 25633   0012C0  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25634   0012C2  6EF7               	movwf	tblptrh,c
 25635   0012C4                     	if	1	;There are 3 active tblptr bytes
 25636   0012C4  6AF8               	clrf	tblptru,c
 25637   0012C6  0E00               	movlw	low (__mediumconst shr (0+16))
 25638   0012C8  22F8               	addwfc	tblptru,f,c
 25639   0012CA                     	endif
 25640   0012CA  0009               	tblrd		*+
 25641   0012CC  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25642   0012D0  0009               	tblrd		*+
 25643   0012D2  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25644   0012D6  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25645   0012DA  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25646   0012DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25647   0012DE  6AF8               	clrf	tblptru,c
 25648   0012E0                     	endif
 25649   0012E0                     	if	0	;tblptru may be non-zero
 25650   0012E0                     	endif
 25651   0012E0  0008               	tblrd		*
 25652   0012E2  C4F5 F529          	movff	tablat,sendMessage7@data4
 25653   0012E6  0E00               	movlw	0
 25654   0012E8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25655   0012EA  0E00               	movlw	0
 25656   0012EC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25657   0012EE  0E00               	movlw	0
 25658   0012F0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25659   0012F2  0EE7               	movlw	231
 25660   0012F4  EC86  F040         	call	_sendMessage7
 25661                           
 25662                           ;../../VLCBlib_PIC/mns.c: 540:                 } else {
 25663   0012F8  EF60  F005         	goto	l10172
 25664   0012FC                     l10384:
 25665                           
 25666                           ; BSR set to: 5
 25667                           ;../../VLCBlib_PIC/mns.c: 541:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 25668   0012FC  C590  F526         	movff	_nn+1,sendMessage7@data1
 25669   001300  C58F  F527         	movff	_nn,sendMessage7@data2
 25670   001304  EE20 F004          	lfsr	2,4
 25671   001308  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25672   00130A  26D9               	addwf	fsr2l,f,c
 25673   00130C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25674   00130E  22DA               	addwfc	fsr2h,f,c
 25675   001310  50DF               	movf	indf2,w,c
 25676   001312  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25677   001314  EE20 F004          	lfsr	2,4
 25678   001318  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25679   00131A  26D9               	addwf	fsr2l,f,c
 25680   00131C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25681   00131E  22DA               	addwfc	fsr2h,f,c
 25682   001320  50DF               	movf	indf2,w,c
 25683   001322  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25684   001324  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25685   001326  90D8               	bcf	status,0,c
 25686   001328  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25687   00132A  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25688   00132C  0EFE               	movlw	254
 25689   00132E  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25690   001330  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25691   001332  0EFF               	movlw	255
 25692   001334  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25693   001336  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25694   001338  0E89               	movlw	low _services
 25695   00133A  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25696   00133C  6EF6               	movwf	tblptrl,c
 25697   00133E  0EFF               	movlw	high _services
 25698   001340  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25699   001342  6EF7               	movwf	tblptrh,c
 25700   001344                     	if	1	;There are 3 active tblptr bytes
 25701   001344  6AF8               	clrf	tblptru,c
 25702   001346  0E00               	movlw	low (__mediumconst shr (0+16))
 25703   001348  22F8               	addwfc	tblptru,f,c
 25704   00134A                     	endif
 25705   00134A  0009               	tblrd		*+
 25706   00134C  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25707   001350  0009               	tblrd		*+
 25708   001352  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25709   001356  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25710   00135A  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25711   00135E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25712   00135E  6AF8               	clrf	tblptru,c
 25713   001360                     	endif
 25714   001360                     	if	0	;tblptru may be non-zero
 25715   001360                     	endif
 25716   001360  0008               	tblrd		*
 25717   001362  C4F5 F529          	movff	tablat,sendMessage7@data4
 25718   001366  EE20 F004          	lfsr	2,4
 25719   00136A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25720   00136C  26D9               	addwf	fsr2l,f,c
 25721   00136E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25722   001370  22DA               	addwfc	fsr2h,f,c
 25723   001372  50DF               	movf	indf2,w,c
 25724   001374  6FD6               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 25725   001376  6BD7               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 25726   001378  90D8               	bcf	status,0,c
 25727   00137A  37D6               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 25728   00137C  37D7               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 25729   00137E  0EFE               	movlw	254
 25730   001380  25D6               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 25731   001382  6FD8               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 25732   001384  0EFF               	movlw	255
 25733   001386  21D7               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 25734   001388  6FD9               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 25735   00138A  0E89               	movlw	low _services
 25736   00138C  25D8               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 25737   00138E  6EF6               	movwf	tblptrl,c
 25738   001390  0EFF               	movlw	high _services
 25739   001392  21D9               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 25740   001394  6EF7               	movwf	tblptrh,c
 25741   001396                     	if	1	;There are 3 active tblptr bytes
 25742   001396  6AF8               	clrf	tblptru,c
 25743   001398  0E00               	movlw	low (__mediumconst shr (0+16))
 25744   00139A  22F8               	addwfc	tblptru,f,c
 25745   00139C                     	endif
 25746   00139C  0009               	tblrd		*+
 25747   00139E  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+10
 25748   0013A2  0009               	tblrd		*+
 25749   0013A4  C4F5 F5DB          	movff	tablat,??_mnsProcessMessage+11
 25750   0013A8  0E0A               	movlw	10
 25751   0013AA  27DA               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 25752   0013AC  0E00               	movlw	0
 25753   0013AE  23DB               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 25754   0013B0  C5DA  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 25755   0013B4  C5DB  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 25756   0013B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25757   0013B8  6AF8               	clrf	tblptru,c
 25758   0013BA                     	endif
 25759   0013BA                     	if	0	;tblptru may be non-zero
 25760   0013BA                     	endif
 25761   0013BA  0009               	tblrd		*+
 25762   0013BC  C4F5 F5DC          	movff	tablat,??_mnsProcessMessage+12
 25763   0013C0  0009               	tblrd		*+
 25764   0013C2  C4F5 F5DD          	movff	tablat,??_mnsProcessMessage+13
 25765   0013C6  D802               	call	u7708
 25766   0013C8  EFF0  F009         	goto	u7709
 25767   0013CC                     u7708:
 25768   0013CC  0005               	push	
 25769   0013CE  6EFA               	movwf	pclath,c
 25770   0013D0  51DC               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 25771   0013D2  6EFD               	movwf	tosl,c
 25772   0013D4  51DD               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 25773   0013D6  6EFE               	movwf	tosh,c
 25774   0013D8  6AFF               	clrf	tosu,c
 25775   0013DA  50FA               	movf	pclath,w,c
 25776   0013DC  0E01               	movlw	1
 25777   0013DE  0012               	return		;indir
 25778   0013E0                     u7709:
 25779   0013E0  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25780   0013E2  EE20 F004          	lfsr	2,4
 25781   0013E6  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25782   0013E8  26D9               	addwf	fsr2l,f,c
 25783   0013EA  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25784   0013EC  22DA               	addwfc	fsr2h,f,c
 25785   0013EE  50DF               	movf	indf2,w,c
 25786   0013F0  0105               	movlb	5	; () banked
 25787   0013F2  6FDE               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 25788   0013F4  6BDF               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 25789   0013F6  90D8               	bcf	status,0,c
 25790   0013F8  37DE               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 25791   0013FA  37DF               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 25792   0013FC  0EFE               	movlw	254
 25793   0013FE  25DE               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 25794   001400  6FE0               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 25795   001402  0EFF               	movlw	255
 25796   001404  21DF               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 25797   001406  6FE1               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 25798   001408  0E89               	movlw	low _services
 25799   00140A  25E0               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 25800   00140C  6EF6               	movwf	tblptrl,c
 25801   00140E  0EFF               	movlw	high _services
 25802   001410  21E1               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 25803   001412  6EF7               	movwf	tblptrh,c
 25804   001414                     	if	1	;There are 3 active tblptr bytes
 25805   001414  6AF8               	clrf	tblptru,c
 25806   001416  0E00               	movlw	low (__mediumconst shr (0+16))
 25807   001418  22F8               	addwfc	tblptru,f,c
 25808   00141A                     	endif
 25809   00141A  0009               	tblrd		*+
 25810   00141C  C4F5 F5E2          	movff	tablat,??_mnsProcessMessage+18
 25811   001420  0009               	tblrd		*+
 25812   001422  C4F5 F5E3          	movff	tablat,??_mnsProcessMessage+19
 25813   001426  0E0A               	movlw	10
 25814   001428  27E2               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 25815   00142A  0E00               	movlw	0
 25816   00142C  23E3               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 25817   00142E  C5E2  F4F6         	movff	??_mnsProcessMessage+18,tblptrl
 25818   001432  C5E3  F4F7         	movff	??_mnsProcessMessage+19,tblptrh
 25819   001436                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25820   001436  6AF8               	clrf	tblptru,c
 25821   001438                     	endif
 25822   001438                     	if	0	;tblptru may be non-zero
 25823   001438                     	endif
 25824   001438  0009               	tblrd		*+
 25825   00143A  C4F5 F5E4          	movff	tablat,??_mnsProcessMessage+20
 25826   00143E  0009               	tblrd		*+
 25827   001440  C4F5 F5E5          	movff	tablat,??_mnsProcessMessage+21
 25828   001444  D802               	call	u7718
 25829   001446  EF2F  F00A         	goto	u7719
 25830   00144A                     u7718:
 25831   00144A  0005               	push	
 25832   00144C  6EFA               	movwf	pclath,c
 25833   00144E  51E4               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 25834   001450  6EFD               	movwf	tosl,c
 25835   001452  51E5               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 25836   001454  6EFE               	movwf	tosh,c
 25837   001456  6AFF               	clrf	tosu,c
 25838   001458  50FA               	movf	pclath,w,c
 25839   00145A  0E02               	movlw	2
 25840   00145C  0012               	return		;indir
 25841   00145E                     u7719:
 25842   00145E  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25843   001460  EE20 F004          	lfsr	2,4
 25844   001464  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25845   001466  26D9               	addwf	fsr2l,f,c
 25846   001468  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25847   00146A  22DA               	addwfc	fsr2h,f,c
 25848   00146C  50DF               	movf	indf2,w,c
 25849   00146E  0105               	movlb	5	; () banked
 25850   001470  6FE6               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 25851   001472  6BE7               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 25852   001474  90D8               	bcf	status,0,c
 25853   001476  37E6               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 25854   001478  37E7               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 25855   00147A  0EFE               	movlw	254
 25856   00147C  25E6               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 25857   00147E  6FE8               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 25858   001480  0EFF               	movlw	255
 25859   001482  21E7               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 25860   001484  6FE9               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 25861   001486  0E89               	movlw	low _services
 25862   001488  25E8               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 25863   00148A  6EF6               	movwf	tblptrl,c
 25864   00148C  0EFF               	movlw	high _services
 25865   00148E  21E9               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 25866   001490  6EF7               	movwf	tblptrh,c
 25867   001492                     	if	1	;There are 3 active tblptr bytes
 25868   001492  6AF8               	clrf	tblptru,c
 25869   001494  0E00               	movlw	low (__mediumconst shr (0+16))
 25870   001496  22F8               	addwfc	tblptru,f,c
 25871   001498                     	endif
 25872   001498  0009               	tblrd		*+
 25873   00149A  C4F5 F5EA          	movff	tablat,??_mnsProcessMessage+26
 25874   00149E  0009               	tblrd		*+
 25875   0014A0  C4F5 F5EB          	movff	tablat,??_mnsProcessMessage+27
 25876   0014A4  0E0A               	movlw	10
 25877   0014A6  27EA               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 25878   0014A8  0E00               	movlw	0
 25879   0014AA  23EB               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 25880   0014AC  C5EA  F4F6         	movff	??_mnsProcessMessage+26,tblptrl
 25881   0014B0  C5EB  F4F7         	movff	??_mnsProcessMessage+27,tblptrh
 25882   0014B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25883   0014B4  6AF8               	clrf	tblptru,c
 25884   0014B6                     	endif
 25885   0014B6                     	if	0	;tblptru may be non-zero
 25886   0014B6                     	endif
 25887   0014B6  0009               	tblrd		*+
 25888   0014B8  C4F5 F5EC          	movff	tablat,??_mnsProcessMessage+28
 25889   0014BC  0009               	tblrd		*+
 25890   0014BE  C4F5 F5ED          	movff	tablat,??_mnsProcessMessage+29
 25891   0014C2  D802               	call	u7728
 25892   0014C4  EF6E  F00A         	goto	u7729
 25893   0014C8                     u7728:
 25894   0014C8  0005               	push	
 25895   0014CA  6EFA               	movwf	pclath,c
 25896   0014CC  51EC               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 25897   0014CE  6EFD               	movwf	tosl,c
 25898   0014D0  51ED               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 25899   0014D2  6EFE               	movwf	tosh,c
 25900   0014D4  6AFF               	clrf	tosu,c
 25901   0014D6  50FA               	movf	pclath,w,c
 25902   0014D8  0E03               	movlw	3
 25903   0014DA  0012               	return		;indir
 25904   0014DC                     u7729:
 25905   0014DC  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25906   0014DE  0EE7               	movlw	231
 25907   0014E0  EC86  F040         	call	_sendMessage7
 25908   0014E4  EF60  F005         	goto	l10172
 25909   0014E8                     l10390:
 25910                           
 25911                           ; BSR set to: 5
 25912                           ;../../VLCBlib_PIC/mns.c: 551:             if (m->len < 4) {
 25913   0014E8  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25914   0014EC  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25915   0014F0  0E04               	movlw	4
 25916   0014F2  60DF               	cpfslt	indf2,c
 25917   0014F4  EF7E  F00A         	goto	u7731
 25918   0014F8  EF80  F00A         	goto	u7730
 25919   0014FC                     u7731:
 25920   0014FC  EF8F  F00A         	goto	l10398
 25921   001500                     u7730:
 25922   001500                     
 25923                           ; BSR set to: 5
 25924                           ;../../VLCBlib_PIC/mns.c: 552:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25925   001500  C590  F526         	movff	_nn+1,sendMessage5@data1
 25926   001504  C58F  F527         	movff	_nn,sendMessage5@data2
 25927   001508  0E76               	movlw	118
 25928   00150A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25929   00150C  0E01               	movlw	1
 25930   00150E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25931   001510  0E01               	movlw	1
 25932   001512  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25933   001514  0EAF               	movlw	175
 25934   001516  EC9B  F040         	call	_sendMessage5
 25935   00151A  EF60  F005         	goto	l10172
 25936   00151E                     l10398:
 25937                           
 25938                           ; BSR set to: 5
 25939                           ;../../VLCBlib_PIC/mns.c: 555:             newMode = m->bytes[2];
 25940   00151E  EE20 F004          	lfsr	2,4
 25941   001522  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25942   001524  26D9               	addwf	fsr2l,f,c
 25943   001526  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25944   001528  22DA               	addwfc	fsr2h,f,c
 25945   00152A  50DF               	movf	indf2,w,c
 25946   00152C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 25947   00152E                     
 25948                           ; BSR set to: 5
 25949                           ;../../VLCBlib_PIC/mns.c: 556:             previousNN.word = nn.word;
 25950   00152E  C58F  F58D         	movff	_nn,_previousNN
 25951   001532  C590  F58E         	movff	_nn+1,_previousNN+1
 25952                           
 25953                           ;../../VLCBlib_PIC/mns.c: 558:             switch (newMode) {
 25954   001536  EF32  F00B         	goto	l10464
 25955   00153A                     l10402:
 25956                           
 25957                           ; BSR set to: 5
 25958                           ;../../VLCBlib_PIC/mns.c: 561:                     if (mode_state == MODE_NORMAL) {
 25959   00153A  05A1               	decf	_mode_state& (0+255),w,b
 25960   00153C  A4D8               	btfss	status,2,c
 25961   00153E  EFA3  F00A         	goto	u7741
 25962   001542  EFA5  F00A         	goto	u7740
 25963   001546                     u7741:
 25964   001546  EFED  F005         	goto	l10198
 25965   00154A                     u7740:
 25966   00154A                     
 25967                           ; BSR set to: 5
 25968                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 25969   00154A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25970   00154C  B4D8               	btfsc	status,2,c
 25971   00154E  EFAB  F00A         	goto	u7751
 25972   001552  EFAD  F00A         	goto	u7750
 25973   001556                     u7751:
 25974   001556  EFB1  F00A         	goto	l10408
 25975   00155A                     u7750:
 25976   00155A                     
 25977                           ; BSR set to: 5
 25978   00155A  0E51               	movlw	81
 25979   00155C  6E57               	movwf	_mnsProcessMessage$4465^(0+1280),c
 25980   00155E  EFB3  F00A         	goto	l10410
 25981   001562                     l10408:
 25982                           
 25983                           ; BSR set to: 5
 25984   001562  0E50               	movlw	80
 25985   001564  6E57               	movwf	_mnsProcessMessage$4465^(0+1280),c
 25986   001566                     l10410:
 25987                           
 25988                           ; BSR set to: 5
 25989   001566  C590  F526         	movff	_nn+1,sendMessage2@data1
 25990   00156A  C58F  F527         	movff	_nn,sendMessage2@data2
 25991   00156E  5057               	movf	_mnsProcessMessage$4465^(0+1280),w,c
 25992   001570  EC71  F040         	call	_sendMessage2
 25993   001574                     
 25994                           ;../../VLCBlib_PIC/mns.c: 563:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25995   001574  C590  F526         	movff	_nn+1,sendMessage5@data1
 25996   001578  C58F  F527         	movff	_nn,sendMessage5@data2
 25997   00157C  0E76               	movlw	118
 25998   00157E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25999   001580  0E01               	movlw	1
 26000   001582  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26001   001584  0E00               	movlw	0
 26002   001586  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26003   001588  0EAF               	movlw	175
 26004   00158A  EC9B  F040         	call	_sendMessage5
 26005   00158E                     
 26006                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 26007   00158E  0105               	movlb	5	; () banked
 26008   001590  6B90               	clrf	(_nn+1)& (0+255),b
 26009   001592  6B8F               	clrf	_nn& (0+255),b
 26010   001594                     
 26011                           ; BSR set to: 5
 26012                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 26013   001594  0EFD               	movlw	253
 26014   001596  6E0E               	movwf	writeNVM@index^(0+1280),c
 26015   001598  0E03               	movlw	3
 26016   00159A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26017   00159C  0E00               	movlw	0
 26018   00159E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26019   0015A0  C590  F511         	movff	_nn+1,writeNVM@value
 26020   0015A4  0E00               	movlw	0
 26021   0015A6  EC34  F03C         	call	_writeNVM
 26022   0015AA                     
 26023                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 26024   0015AA  0EFC               	movlw	252
 26025   0015AC  6E0E               	movwf	writeNVM@index^(0+1280),c
 26026   0015AE  0E03               	movlw	3
 26027   0015B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26028   0015B2  0E00               	movlw	0
 26029   0015B4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26030   0015B6  C58F  F511         	movff	_nn,writeNVM@value
 26031   0015BA  0E00               	movlw	0
 26032   0015BC  EC34  F03C         	call	_writeNVM
 26033                           
 26034                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 26035   0015C0  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 26036   0015C2  B4D8               	btfsc	status,2,c
 26037   0015C4  EFE6  F00A         	goto	u7761
 26038   0015C8  EFE8  F00A         	goto	u7760
 26039   0015CC                     u7761:
 26040   0015CC  EFEC  F00A         	goto	l1365
 26041   0015D0                     u7760:
 26042   0015D0  0105               	movlb	5	; () banked
 26043   0015D2  69A1               	setf	_mode_state& (0+255),b
 26044   0015D4  EFEE  F00A         	goto	l10422
 26045   0015D8                     l1365:
 26046   0015D8  0105               	movlb	5	; () banked
 26047   0015DA  6BA1               	clrf	_mode_state& (0+255),b
 26048   0015DC                     l10422:
 26049                           
 26050                           ; BSR set to: 5
 26051                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 26052   0015DC  0E01               	movlw	1
 26053   0015DE  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 26054   0015E0  EF5E  F005         	goto	l10170
 26055   0015E4                     l10430:
 26056                           
 26057                           ; BSR set to: 5
 26058                           ;../../VLCBlib_PIC/mns.c: 576:                     mode_flags |= 4;
 26059   0015E4  85A4               	bsf	_mode_flags& (0+255),2,b
 26060   0015E6                     
 26061                           ; BSR set to: 5
 26062                           ;../../VLCBlib_PIC/mns.c: 577:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26063   0015E6  C590  F526         	movff	_nn+1,sendMessage5@data1
 26064   0015EA  C58F  F527         	movff	_nn,sendMessage5@data2
 26065   0015EE  0E76               	movlw	118
 26066   0015F0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26067   0015F2  0E01               	movlw	1
 26068   0015F4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26069   0015F6  0E00               	movlw	0
 26070   0015F8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26071   0015FA  0EAF               	movlw	175
 26072   0015FC  EC9B  F040         	call	_sendMessage5
 26073   001600  EF60  F005         	goto	l10172
 26074   001604                     l10438:
 26075                           
 26076                           ; BSR set to: 5
 26077                           ;../../VLCBlib_PIC/mns.c: 580:                     mode_flags &= ~4;
 26078   001604  95A4               	bcf	_mode_flags& (0+255),2,b
 26079   001606                     
 26080                           ; BSR set to: 5
 26081                           ;../../VLCBlib_PIC/mns.c: 581:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26082   001606  C590  F526         	movff	_nn+1,sendMessage5@data1
 26083   00160A  C58F  F527         	movff	_nn,sendMessage5@data2
 26084   00160E  0E76               	movlw	118
 26085   001610  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26086   001612  0E01               	movlw	1
 26087   001614  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26088   001616  0E00               	movlw	0
 26089   001618  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26090   00161A  0EAF               	movlw	175
 26091   00161C  EC9B  F040         	call	_sendMessage5
 26092   001620  EF60  F005         	goto	l10172
 26093   001624                     l10446:
 26094                           
 26095                           ; BSR set to: 5
 26096                           ;../../VLCBlib_PIC/mns.c: 584:                     mode_flags |= 8;
 26097   001624  87A4               	bsf	_mode_flags& (0+255),3,b
 26098   001626                     
 26099                           ; BSR set to: 5
 26100                           ;../../VLCBlib_PIC/mns.c: 585:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26101   001626  C590  F526         	movff	_nn+1,sendMessage5@data1
 26102   00162A  C58F  F527         	movff	_nn,sendMessage5@data2
 26103   00162E  0E76               	movlw	118
 26104   001630  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26105   001632  0E01               	movlw	1
 26106   001634  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26107   001636  0E00               	movlw	0
 26108   001638  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26109   00163A  0EAF               	movlw	175
 26110   00163C  EC9B  F040         	call	_sendMessage5
 26111   001640  EF60  F005         	goto	l10172
 26112   001644                     l10454:
 26113                           
 26114                           ; BSR set to: 5
 26115                           ;../../VLCBlib_PIC/mns.c: 588:                     mode_flags &= ~8;
 26116   001644  97A4               	bcf	_mode_flags& (0+255),3,b
 26117   001646                     
 26118                           ; BSR set to: 5
 26119                           ;../../VLCBlib_PIC/mns.c: 589:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26120   001646  C590  F526         	movff	_nn+1,sendMessage5@data1
 26121   00164A  C58F  F527         	movff	_nn,sendMessage5@data2
 26122   00164E  0E76               	movlw	118
 26123   001650  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26124   001652  0E01               	movlw	1
 26125   001654  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26126   001656  0E00               	movlw	0
 26127   001658  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26128   00165A  0EAF               	movlw	175
 26129   00165C  EC9B  F040         	call	_sendMessage5
 26130   001660  EF60  F005         	goto	l10172
 26131   001664                     l10464:
 26132                           
 26133                           ; BSR set to: 5
 26134   001664  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 26135                           
 26136                           ; Switch size 1, requested type "simple"
 26137                           ; Number of cases is 6, Range of values is 0 to 255
 26138                           ; switch strategies available:
 26139                           ; Name         Instructions Cycles
 26140                           ; simple_byte           19    10 (average)
 26141                           ;	Chosen strategy is simple_byte
 26142   001666  0A00               	xorlw	0	; case 0
 26143   001668  B4D8               	btfsc	status,2,c
 26144   00166A  EF9D  F00A         	goto	l10402
 26145   00166E  0A0C               	xorlw	12	; case 12
 26146   001670  B4D8               	btfsc	status,2,c
 26147   001672  EFF2  F00A         	goto	l10430
 26148   001676  0A01               	xorlw	1	; case 13
 26149   001678  B4D8               	btfsc	status,2,c
 26150   00167A  EF02  F00B         	goto	l10438
 26151   00167E  0A1D               	xorlw	29	; case 16
 26152   001680  B4D8               	btfsc	status,2,c
 26153   001682  EF12  F00B         	goto	l10446
 26154   001686  0A01               	xorlw	1	; case 17
 26155   001688  B4D8               	btfsc	status,2,c
 26156   00168A  EF22  F00B         	goto	l10454
 26157   00168E  0AEE               	xorlw	238	; case 255
 26158   001690  B4D8               	btfsc	status,2,c
 26159   001692  EF9D  F00A         	goto	l10402
 26160   001696  EFED  F005         	goto	l10198
 26161   00169A                     l1374:
 26162                           
 26163                           ; BSR set to: 5
 26164   00169A  00FF               	reset		;# 
 26165   00169C  EF60  F005         	goto	l10172
 26166   0016A0                     l10476:
 26167                           
 26168                           ; BSR set to: 5
 26169   0016A0  EE20 F001          	lfsr	2,1
 26170   0016A4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 26171   0016A6  26D9               	addwf	fsr2l,f,c
 26172   0016A8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 26173   0016AA  22DA               	addwfc	fsr2h,f,c
 26174   0016AC  50DF               	movf	indf2,w,c
 26175   0016AE  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 26176   0016B0  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 26177                           
 26178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26179                           ; Switch size 1, requested type "simple"
 26180                           ; Number of cases is 1, Range of values is 0 to 0
 26181                           ; switch strategies available:
 26182                           ; Name         Instructions Cycles
 26183                           ; simple_byte            4     3 (average)
 26184                           ;	Chosen strategy is simple_byte
 26185   0016B2  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 26186   0016B4  0A00               	xorlw	0	; case 0
 26187   0016B6  B4D8               	btfsc	status,2,c
 26188   0016B8  EF60  F00B         	goto	l11664
 26189   0016BC  EFED  F005         	goto	l10198
 26190   0016C0                     l11664:
 26191                           
 26192                           ; BSR set to: 5
 26193                           ; Switch size 1, requested type "simple"
 26194                           ; Number of cases is 6, Range of values is 79 to 135
 26195                           ; switch strategies available:
 26196                           ; Name         Instructions Cycles
 26197                           ; simple_byte           19    10 (average)
 26198                           ;	Chosen strategy is simple_byte
 26199   0016C0  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 26200   0016C2  0A4F               	xorlw	79	; case 79
 26201   0016C4  B4D8               	btfsc	status,2,c
 26202   0016C6  EF2C  F007         	goto	l1334
 26203   0016CA  0A11               	xorlw	17	; case 94
 26204   0016CC  B4D8               	btfsc	status,2,c
 26205   0016CE  EF4D  F00B         	goto	l1374
 26206   0016D2  0A2D               	xorlw	45	; case 115
 26207   0016D4  B4D8               	btfsc	status,2,c
 26208   0016D6  EFAD  F006         	goto	l10272
 26209   0016DA  0A05               	xorlw	5	; case 118
 26210   0016DC  B4D8               	btfsc	status,2,c
 26211   0016DE  EF74  F00A         	goto	l10390
 26212   0016E2  0A0E               	xorlw	14	; case 120
 26213   0016E4  B4D8               	btfsc	status,2,c
 26214   0016E6  EFAB  F008         	goto	l10356
 26215   0016EA  0AFF               	xorlw	255	; case 135
 26216   0016EC  B4D8               	btfsc	status,2,c
 26217   0016EE  EF6B  F007         	goto	l10310
 26218   0016F2  EFED  F005         	goto	l10198
 26219   0016F6                     l1306:
 26220   0016F6  0012               	return		;funcret
 26221   0016F8                     __end_of_mnsProcessMessage:
 26222                           	callstack 0
 26223                           
 26224 ;; *************** function _consumerProcessMessage *****************
 26225 ;; Defined at:
 26226 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 26227 ;; Parameters:    Size  Location     Type
 26228 ;;  m               2   83[COMRAM] PTR struct Message
 26229 ;;		 -> poll@m(9), 
 26230 ;; Auto vars:     Size  Location     Type
 26231 ;;  enn             2   88[COMRAM] unsigned short 
 26232 ;;  tableIndex      1   91[COMRAM] unsigned char 
 26233 ;;  ret             1   90[COMRAM] enum E23340
 26234 ;; Return value:  Size  Location     Type
 26235 ;;                  1    wreg      enum E23340
 26236 ;; Registers used:
 26237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26238 ;; Tracked objects:
 26239 ;;		On entry : 0/0
 26240 ;;		On exit  : 0/0
 26241 ;;		Unchanged: 0/0
 26242 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26245 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26246 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26247 ;;Total ram usage:        9 bytes
 26248 ;; Hardware stack levels used: 1
 26249 ;; Hardware stack levels required when called: 8
 26250 ;; This function calls:
 26251 ;;		_APP_processConsumedEvent
 26252 ;;		_consumerEventCheckLen
 26253 ;;		_findEvent
 26254 ;;		_isConsumedEvent
 26255 ;;		_sendMessage7
 26256 ;; This function is called by:
 26257 ;;		_poll
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text19
 26262   003CB8                     __ptext19:
 26263                           	callstack 0
 26264   003CB8                     _consumerProcessMessage:
 26265                           	callstack 117
 26266   003CB8                     
 26267                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 26268   003CB8  EE20 F001          	lfsr	2,1
 26269   003CBC  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26270   003CBE  26D9               	addwf	fsr2l,f,c
 26271   003CC0  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26272   003CC2  22DA               	addwfc	fsr2h,f,c
 26273   003CC4  0E76               	movlw	118
 26274   003CC6  18DE               	xorwf	postinc2,w,c
 26275   003CC8  A4D8               	btfss	status,2,c
 26276   003CCA  EF69  F01E         	goto	u6901
 26277   003CCE  EF6B  F01E         	goto	u6900
 26278   003CD2                     u6901:
 26279   003CD2  EFC4  F01E         	goto	l9754
 26280   003CD6                     u6900:
 26281   003CD6                     
 26282                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 26283   003CD6  C554  F531         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 26284   003CDA  C555  F532         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 26285   003CDE  0E04               	movlw	4
 26286   003CE0  6E33               	movwf	consumerEventCheckLen@needed^(0+1280),c
 26287   003CE2  EC6B  F041         	call	_consumerEventCheckLen	;wreg free
 26288   003CE6  06E8               	decf	wreg,f,c
 26289   003CE8  A4D8               	btfss	status,2,c
 26290   003CEA  EF79  F01E         	goto	u6911
 26291   003CEE  EF7B  F01E         	goto	u6910
 26292   003CF2                     u6911:
 26293   003CF2  EF7E  F01E         	goto	l9728
 26294   003CF6                     u6910:
 26295   003CF6                     l9724:
 26296   003CF6  0E01               	movlw	1
 26297   003CF8  EFCE  F01F         	goto	l794
 26298   003CFC                     l9728:
 26299                           
 26300                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 26301   003CFC  EE20 F002          	lfsr	2,2
 26302   003D00  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26303   003D02  26D9               	addwf	fsr2l,f,c
 26304   003D04  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26305   003D06  22DA               	addwfc	fsr2h,f,c
 26306   003D08  50DE               	movf	postinc2,w,c
 26307   003D0A  0105               	movlb	5	; () banked
 26308   003D0C  1990               	xorwf	(_nn+1)& (0+255),w,b
 26309   003D0E  A4D8               	btfss	status,2,c
 26310   003D10  EF8C  F01E         	goto	u6921
 26311   003D14  EF8E  F01E         	goto	u6920
 26312   003D18                     u6921:
 26313   003D18  EFC1  F01E         	goto	l9750
 26314   003D1C                     u6920:
 26315   003D1C                     
 26316                           ; BSR set to: 5
 26317   003D1C  EE20 F003          	lfsr	2,3
 26318   003D20  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26319   003D22  26D9               	addwf	fsr2l,f,c
 26320   003D24  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26321   003D26  22DA               	addwfc	fsr2h,f,c
 26322   003D28  518F               	movf	_nn& (0+255),w,b
 26323   003D2A  18DE               	xorwf	postinc2,w,c
 26324   003D2C  A4D8               	btfss	status,2,c
 26325   003D2E  EF9B  F01E         	goto	u6931
 26326   003D32  EF9D  F01E         	goto	u6930
 26327   003D36                     u6931:
 26328   003D36  EFC1  F01E         	goto	l9750
 26329   003D3A                     u6930:
 26330   003D3A                     
 26331                           ; BSR set to: 5
 26332                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 26333   003D3A  EE20 F004          	lfsr	2,4
 26334   003D3E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26335   003D40  26D9               	addwf	fsr2l,f,c
 26336   003D42  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26337   003D44  22DA               	addwfc	fsr2h,f,c
 26338   003D46  0E0A               	movlw	10
 26339   003D48  18DE               	xorwf	postinc2,w,c
 26340   003D4A  A4D8               	btfss	status,2,c
 26341   003D4C  EFAA  F01E         	goto	u6941
 26342   003D50  EFAC  F01E         	goto	u6940
 26343   003D54                     u6941:
 26344   003D54  EFAF  F01E         	goto	l9742
 26345   003D58                     u6940:
 26346   003D58                     
 26347                           ; BSR set to: 5
 26348                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 26349   003D58  83A4               	bsf	_mode_flags& (0+255),1,b
 26350   003D5A  EF7B  F01E         	goto	l9724
 26351   003D5E                     l9742:
 26352                           
 26353                           ; BSR set to: 5
 26354   003D5E  EE20 F004          	lfsr	2,4
 26355   003D62  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26356   003D64  26D9               	addwf	fsr2l,f,c
 26357   003D66  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26358   003D68  22DA               	addwfc	fsr2h,f,c
 26359   003D6A  0E0B               	movlw	11
 26360   003D6C  18DE               	xorwf	postinc2,w,c
 26361   003D6E  A4D8               	btfss	status,2,c
 26362   003D70  EFBC  F01E         	goto	u6951
 26363   003D74  EFBE  F01E         	goto	u6950
 26364   003D78                     u6951:
 26365   003D78  EFC1  F01E         	goto	l9750
 26366   003D7C                     u6950:
 26367   003D7C                     
 26368                           ; BSR set to: 5
 26369                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 26370   003D7C  93A4               	bcf	_mode_flags& (0+255),1,b
 26371   003D7E  EF7B  F01E         	goto	l9724
 26372   003D82                     l9750:
 26373                           
 26374                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 26375   003D82  0E00               	movlw	0
 26376   003D84  EFCE  F01F         	goto	l794
 26377   003D88                     l9754:
 26378                           
 26379                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 26380   003D88  C554  F4D9         	movff	consumerProcessMessage@m,fsr2l
 26381   003D8C  C555  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 26382   003D90  0E05               	movlw	5
 26383   003D92  60DF               	cpfslt	indf2,c
 26384   003D94  EFCE  F01E         	goto	u6961
 26385   003D98  EFD0  F01E         	goto	u6960
 26386   003D9C                     u6961:
 26387   003D9C  EFD2  F01E         	goto	l9760
 26388   003DA0                     u6960:
 26389   003DA0  EFC1  F01E         	goto	l9750
 26390   003DA4                     l9760:
 26391                           
 26392                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 26393   003DA4  EE20 F003          	lfsr	2,3
 26394   003DA8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26395   003DAA  26D9               	addwf	fsr2l,f,c
 26396   003DAC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26397   003DAE  22DA               	addwfc	fsr2h,f,c
 26398   003DB0  50DF               	movf	indf2,w,c
 26399   003DB2  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26400   003DB4  EE20 F002          	lfsr	2,2
 26401   003DB8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26402   003DBA  26D9               	addwf	fsr2l,f,c
 26403   003DBC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26404   003DBE  22DA               	addwfc	fsr2h,f,c
 26405   003DC0  50DF               	movf	indf2,w,c
 26406   003DC2  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26407   003DC4  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26408   003DC6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26409   003DC8  C557  F55A         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 26410                           
 26411                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 26412   003DCC  EFF0  F01E         	goto	l9772
 26413   003DD0                     l803:
 26414   003DD0                     l9762:
 26415                           
 26416                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 26417   003DD0  0E00               	movlw	0
 26418   003DD2  6E5A               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 26419   003DD4  0E00               	movlw	0
 26420   003DD6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26421   003DD8  EF43  F01F         	goto	l9774
 26422   003DDC                     l808:
 26423                           
 26424                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 26425   003DDC  EF43  F01F         	goto	l9774
 26426   003DE0                     l9772:
 26427   003DE0  EE20 F001          	lfsr	2,1
 26428   003DE4  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26429   003DE6  26D9               	addwf	fsr2l,f,c
 26430   003DE8  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26431   003DEA  22DA               	addwfc	fsr2h,f,c
 26432   003DEC  50DF               	movf	indf2,w,c
 26433   003DEE  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26434   003DF0  6A57               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 26435                           
 26436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26437                           ; Switch size 1, requested type "simple"
 26438                           ; Number of cases is 1, Range of values is 0 to 0
 26439                           ; switch strategies available:
 26440                           ; Name         Instructions Cycles
 26441                           ; simple_byte            4     3 (average)
 26442                           ;	Chosen strategy is simple_byte
 26443   003DF2  5057               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 26444   003DF4  0A00               	xorlw	0	; case 0
 26445   003DF6  B4D8               	btfsc	status,2,c
 26446   003DF8  EF00  F01F         	goto	l11666
 26447   003DFC  EFC1  F01E         	goto	l9750
 26448   003E00                     l11666:
 26449                           
 26450                           ; Switch size 1, requested type "simple"
 26451                           ; Number of cases is 16, Range of values is 144 to 249
 26452                           ; switch strategies available:
 26453                           ; Name         Instructions Cycles
 26454                           ; simple_byte           49    25 (average)
 26455                           ;	Chosen strategy is simple_byte
 26456   003E00  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26457   003E02  0A90               	xorlw	144	; case 144
 26458   003E04  B4D8               	btfsc	status,2,c
 26459   003E06  EFEE  F01E         	goto	l808
 26460   003E0A  0A01               	xorlw	1	; case 145
 26461   003E0C  B4D8               	btfsc	status,2,c
 26462   003E0E  EFEE  F01E         	goto	l808
 26463   003E12  0A09               	xorlw	9	; case 152
 26464   003E14  B4D8               	btfsc	status,2,c
 26465   003E16  EFE8  F01E         	goto	l803
 26466   003E1A  0A01               	xorlw	1	; case 153
 26467   003E1C  B4D8               	btfsc	status,2,c
 26468   003E1E  EFE8  F01E         	goto	l803
 26469   003E22  0A29               	xorlw	41	; case 176
 26470   003E24  B4D8               	btfsc	status,2,c
 26471   003E26  EF43  F01F         	goto	l9774
 26472   003E2A  0A01               	xorlw	1	; case 177
 26473   003E2C  B4D8               	btfsc	status,2,c
 26474   003E2E  EF43  F01F         	goto	l9774
 26475   003E32  0A09               	xorlw	9	; case 184
 26476   003E34  B4D8               	btfsc	status,2,c
 26477   003E36  EFE8  F01E         	goto	l9762
 26478   003E3A  0A01               	xorlw	1	; case 185
 26479   003E3C  B4D8               	btfsc	status,2,c
 26480   003E3E  EFE8  F01E         	goto	l9762
 26481   003E42  0A69               	xorlw	105	; case 208
 26482   003E44  B4D8               	btfsc	status,2,c
 26483   003E46  EF43  F01F         	goto	l9774
 26484   003E4A  0A01               	xorlw	1	; case 209
 26485   003E4C  B4D8               	btfsc	status,2,c
 26486   003E4E  EF43  F01F         	goto	l9774
 26487   003E52  0A09               	xorlw	9	; case 216
 26488   003E54  B4D8               	btfsc	status,2,c
 26489   003E56  EFE8  F01E         	goto	l9762
 26490   003E5A  0A01               	xorlw	1	; case 217
 26491   003E5C  B4D8               	btfsc	status,2,c
 26492   003E5E  EFE8  F01E         	goto	l9762
 26493   003E62  0A29               	xorlw	41	; case 240
 26494   003E64  B4D8               	btfsc	status,2,c
 26495   003E66  EF43  F01F         	goto	l9774
 26496   003E6A  0A01               	xorlw	1	; case 241
 26497   003E6C  B4D8               	btfsc	status,2,c
 26498   003E6E  EF43  F01F         	goto	l9774
 26499   003E72  0A09               	xorlw	9	; case 248
 26500   003E74  B4D8               	btfsc	status,2,c
 26501   003E76  EFE8  F01E         	goto	l9762
 26502   003E7A  0A01               	xorlw	1	; case 249
 26503   003E7C  B4D8               	btfsc	status,2,c
 26504   003E7E  EFE8  F01E         	goto	l9762
 26505   003E82  EFC1  F01E         	goto	l9750
 26506   003E86                     l9774:
 26507                           
 26508                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 26509   003E86  C559  F522         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 26510   003E8A  C55A  F523         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 26511   003E8E  EE20 F005          	lfsr	2,5
 26512   003E92  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26513   003E94  26D9               	addwf	fsr2l,f,c
 26514   003E96  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26515   003E98  22DA               	addwfc	fsr2h,f,c
 26516   003E9A  50DF               	movf	indf2,w,c
 26517   003E9C  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26518   003E9E  EE20 F004          	lfsr	2,4
 26519   003EA2  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26520   003EA4  26D9               	addwf	fsr2l,f,c
 26521   003EA6  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26522   003EA8  22DA               	addwfc	fsr2h,f,c
 26523   003EAA  50DF               	movf	indf2,w,c
 26524   003EAC  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26525   003EAE  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26526   003EB0  6E24               	movwf	findEvent@eventNumber^(0+1280),c
 26527   003EB2  C557  F525         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 26528   003EB6  EC13  F032         	call	_findEvent	;wreg free
 26529   003EBA  6E5C               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 26530   003EBC                     
 26531                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 26532   003EBC  285C               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26533   003EBE  A4D8               	btfss	status,2,c
 26534   003EC0  EF64  F01F         	goto	u6971
 26535   003EC4  EF66  F01F         	goto	u6970
 26536   003EC8                     u6971:
 26537   003EC8  EF68  F01F         	goto	l9782
 26538   003ECC                     u6970:
 26539   003ECC  EFC1  F01E         	goto	l9750
 26540   003ED0                     l9782:
 26541                           
 26542                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 26543   003ED0  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26544   003ED2  EC8F  F041         	call	_isConsumedEvent
 26545   003ED6  0900               	iorlw	0
 26546   003ED8  A4D8               	btfss	status,2,c
 26547   003EDA  EF71  F01F         	goto	u6981
 26548   003EDE  EF73  F01F         	goto	u6980
 26549   003EE2                     u6981:
 26550   003EE2  EF75  F01F         	goto	l820
 26551   003EE6                     u6980:
 26552   003EE6  EFC1  F01E         	goto	l9750
 26553   003EEA                     l820:
 26554                           
 26555                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 26556   003EEA  0105               	movlb	5	; () banked
 26557   003EEC  A3A4               	btfss	_mode_flags& (0+255),1,b
 26558   003EEE  EF7B  F01F         	goto	u6991
 26559   003EF2  EF7D  F01F         	goto	u6990
 26560   003EF6                     u6991:
 26561   003EF6  EFBA  F01F         	goto	l9794
 26562   003EFA                     u6990:
 26563   003EFA                     
 26564                           ; BSR set to: 5
 26565   003EFA  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26566   003EFC  EC8F  F041         	call	_isConsumedEvent
 26567   003F00  0900               	iorlw	0
 26568   003F02  B4D8               	btfsc	status,2,c
 26569   003F04  EF86  F01F         	goto	u7001
 26570   003F08  EF88  F01F         	goto	u7000
 26571   003F0C                     u7001:
 26572   003F0C  EFBA  F01F         	goto	l9794
 26573   003F10                     u7000:
 26574   003F10                     
 26575                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 26576   003F10  C590  F526         	movff	_nn+1,sendMessage7@data1
 26577   003F14  C58F  F527         	movff	_nn,sendMessage7@data2
 26578   003F18  EE20 F001          	lfsr	2,1
 26579   003F1C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26580   003F1E  26D9               	addwf	fsr2l,f,c
 26581   003F20  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26582   003F22  22DA               	addwfc	fsr2h,f,c
 26583   003F24  50DF               	movf	indf2,w,c
 26584   003F26  6E28               	movwf	sendMessage7@data3^(0+1280),c
 26585   003F28  EE20 F002          	lfsr	2,2
 26586   003F2C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26587   003F2E  26D9               	addwf	fsr2l,f,c
 26588   003F30  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26589   003F32  22DA               	addwfc	fsr2h,f,c
 26590   003F34  50DF               	movf	indf2,w,c
 26591   003F36  6E29               	movwf	sendMessage7@data4^(0+1280),c
 26592   003F38  EE20 F003          	lfsr	2,3
 26593   003F3C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26594   003F3E  26D9               	addwf	fsr2l,f,c
 26595   003F40  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26596   003F42  22DA               	addwfc	fsr2h,f,c
 26597   003F44  50DF               	movf	indf2,w,c
 26598   003F46  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 26599   003F48  EE20 F004          	lfsr	2,4
 26600   003F4C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26601   003F4E  26D9               	addwf	fsr2l,f,c
 26602   003F50  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26603   003F52  22DA               	addwfc	fsr2h,f,c
 26604   003F54  50DF               	movf	indf2,w,c
 26605   003F56  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 26606   003F58  EE20 F005          	lfsr	2,5
 26607   003F5C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26608   003F5E  26D9               	addwf	fsr2l,f,c
 26609   003F60  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26610   003F62  22DA               	addwfc	fsr2h,f,c
 26611   003F64  50DF               	movf	indf2,w,c
 26612   003F66  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 26613   003F68  0EE6               	movlw	230
 26614   003F6A  EC86  F040         	call	_sendMessage7
 26615   003F6E                     
 26616                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 26617   003F6E  0105               	movlb	5	; () banked
 26618   003F70  4BC5               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 26619   003F72  2BC6               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 26620   003F74                     l9794:
 26621                           
 26622                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 26623   003F74  C554  F51C         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 26624   003F78  C555  F51D         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 26625   003F7C  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26626   003F7E  EC2F  F02D         	call	_APP_processConsumedEvent
 26627   003F82  6E5B               	movwf	consumerProcessMessage@ret^(0+1280),c
 26628   003F84                     
 26629                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 26630   003F84  045B               	decf	consumerProcessMessage@ret^(0+1280),w,c
 26631   003F86  A4D8               	btfss	status,2,c
 26632   003F88  EFC8  F01F         	goto	u7011
 26633   003F8C  EFCA  F01F         	goto	u7010
 26634   003F90                     u7011:
 26635   003F90  EFCD  F01F         	goto	l9800
 26636   003F94                     u7010:
 26637   003F94                     
 26638                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 26639   003F94  0105               	movlb	5	; () banked
 26640   003F96  4BC3               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 26641   003F98  2BC4               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 26642   003F9A                     l9800:
 26643                           
 26644                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 26645   003F9A  505B               	movf	consumerProcessMessage@ret^(0+1280),w,c
 26646   003F9C                     l794:
 26647   003F9C  0012               	return		;funcret
 26648   003F9E                     __end_of_consumerProcessMessage:
 26649                           	callstack 0
 26650                           
 26651 ;; *************** function _canProcessMessage *****************
 26652 ;; Defined at:
 26653 ;;		line 411 in file "../../VLCBlib_PIC/can18_can_2.c"
 26654 ;; Parameters:    Size  Location     Type
 26655 ;;  m               2   83[COMRAM] PTR struct Message
 26656 ;;		 -> poll@m(9), 
 26657 ;; Auto vars:     Size  Location     Type
 26658 ;;		None
 26659 ;; Return value:  Size  Location     Type
 26660 ;;                  1    wreg      enum E23507
 26661 ;; Registers used:
 26662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26663 ;; Tracked objects:
 26664 ;;		On entry : 0/0
 26665 ;;		On exit  : 0/0
 26666 ;;		Unchanged: 0/0
 26667 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26672 ;;Total ram usage:        4 bytes
 26673 ;; Hardware stack levels used: 1
 26674 ;; Hardware stack levels required when called: 6
 26675 ;; This function calls:
 26676 ;;		_sendMessage5
 26677 ;; This function is called by:
 26678 ;;		_poll
 26679 ;; This function uses a non-reentrant model
 26680 ;;
 26681                           
 26682                           	psect	text20
 26683   005D26                     __ptext20:
 26684                           	callstack 0
 26685   005D26                     _canProcessMessage:
 26686                           	callstack 119
 26687   005D26                     
 26688                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->len < 3) return NOT_PROCESSED;
 26689   005D26  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26690   005D2A  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26691   005D2E  0E03               	movlw	3
 26692   005D30  60DF               	cpfslt	indf2,c
 26693   005D32  EF9D  F02E         	goto	u6801
 26694   005D36  EF9F  F02E         	goto	u6800
 26695   005D3A                     u6801:
 26696   005D3A  EFA2  F02E         	goto	l9602
 26697   005D3E                     u6800:
 26698   005D3E                     l9598:
 26699   005D3E  0E00               	movlw	0
 26700   005D40  EFFE  F02E         	goto	l617
 26701   005D44                     l9602:
 26702                           
 26703                           ;../../VLCBlib_PIC/can18_can_2.c: 414:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 26704   005D44  EE20 F002          	lfsr	2,2
 26705   005D48  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26706   005D4A  26D9               	addwf	fsr2l,f,c
 26707   005D4C  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26708   005D4E  22DA               	addwfc	fsr2h,f,c
 26709   005D50  50DE               	movf	postinc2,w,c
 26710   005D52  0105               	movlb	5	; () banked
 26711   005D54  1990               	xorwf	(_nn+1)& (0+255),w,b
 26712   005D56  B4D8               	btfsc	status,2,c
 26713   005D58  EFB0  F02E         	goto	u6811
 26714   005D5C  EFB2  F02E         	goto	u6810
 26715   005D60                     u6811:
 26716   005D60  EFB4  F02E         	goto	l9608
 26717   005D64                     u6810:
 26718   005D64  EF9F  F02E         	goto	l9598
 26719   005D68                     l9608:
 26720                           
 26721                           ; BSR set to: 5
 26722                           ;../../VLCBlib_PIC/can18_can_2.c: 415:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 26723   005D68  EE20 F003          	lfsr	2,3
 26724   005D6C  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26725   005D6E  26D9               	addwf	fsr2l,f,c
 26726   005D70  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26727   005D72  22DA               	addwfc	fsr2h,f,c
 26728   005D74  518F               	movf	_nn& (0+255),w,b
 26729   005D76  18DE               	xorwf	postinc2,w,c
 26730   005D78  B4D8               	btfsc	status,2,c
 26731   005D7A  EFC1  F02E         	goto	u6821
 26732   005D7E  EFC3  F02E         	goto	u6820
 26733   005D82                     u6821:
 26734   005D82  EFE3  F02E         	goto	l9632
 26735   005D86                     u6820:
 26736   005D86  EF9F  F02E         	goto	l9598
 26737   005D8A                     l9614:
 26738                           
 26739                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             return PROCESSED;
 26740   005D8A  0E01               	movlw	1
 26741   005D8C  EFFE  F02E         	goto	l617
 26742   005D90                     l9618:
 26743                           
 26744                           ; BSR set to: 5
 26745                           ;../../VLCBlib_PIC/can18_can_2.c: 423:             if (m->len < 4) {
 26746   005D90  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26747   005D94  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26748   005D98  0E04               	movlw	4
 26749   005D9A  60DF               	cpfslt	indf2,c
 26750   005D9C  EFD2  F02E         	goto	u6831
 26751   005DA0  EFD4  F02E         	goto	u6830
 26752   005DA4                     u6831:
 26753   005DA4  EFC5  F02E         	goto	l9614
 26754   005DA8                     u6830:
 26755   005DA8                     
 26756                           ; BSR set to: 5
 26757                           ;../../VLCBlib_PIC/can18_can_2.c: 425:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 26758   005DA8  C590  F526         	movff	_nn+1,sendMessage5@data1
 26759   005DAC  C58F  F527         	movff	_nn,sendMessage5@data2
 26760   005DB0  0E75               	movlw	117
 26761   005DB2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26762   005DB4  0E01               	movlw	1
 26763   005DB6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26764   005DB8  0E01               	movlw	1
 26765   005DBA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26766   005DBC  0EAF               	movlw	175
 26767   005DBE  EC9B  F040         	call	_sendMessage5
 26768   005DC2  EFC5  F02E         	goto	l9614
 26769   005DC6                     l9632:
 26770                           
 26771                           ; BSR set to: 5
 26772   005DC6  EE20 F001          	lfsr	2,1
 26773   005DCA  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26774   005DCC  26D9               	addwf	fsr2l,f,c
 26775   005DCE  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26776   005DD0  22DA               	addwfc	fsr2h,f,c
 26777   005DD2  50DF               	movf	indf2,w,c
 26778   005DD4  6E56               	movwf	??_canProcessMessage^(0+1280),c
 26779   005DD6  6A57               	clrf	(??_canProcessMessage+1)^(0+1280),c
 26780                           
 26781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26782                           ; Switch size 1, requested type "simple"
 26783                           ; Number of cases is 1, Range of values is 0 to 0
 26784                           ; switch strategies available:
 26785                           ; Name         Instructions Cycles
 26786                           ; simple_byte            4     3 (average)
 26787                           ;	Chosen strategy is simple_byte
 26788   005DD8  5057               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 26789   005DDA  0A00               	xorlw	0	; case 0
 26790   005DDC  B4D8               	btfsc	status,2,c
 26791   005DDE  EFF3  F02E         	goto	l11668
 26792   005DE2  EF9F  F02E         	goto	l9598
 26793   005DE6                     l11668:
 26794                           
 26795                           ; BSR set to: 5
 26796                           ; Switch size 1, requested type "simple"
 26797                           ; Number of cases is 2, Range of values is 93 to 117
 26798                           ; switch strategies available:
 26799                           ; Name         Instructions Cycles
 26800                           ; simple_byte            7     4 (average)
 26801                           ;	Chosen strategy is simple_byte
 26802   005DE6  5056               	movf	??_canProcessMessage^(0+1280),w,c
 26803   005DE8  0A5D               	xorlw	93	; case 93
 26804   005DEA  B4D8               	btfsc	status,2,c
 26805   005DEC  EFC5  F02E         	goto	l9614
 26806   005DF0  0A28               	xorlw	40	; case 117
 26807   005DF2  B4D8               	btfsc	status,2,c
 26808   005DF4  EFC8  F02E         	goto	l9618
 26809   005DF8  EF9F  F02E         	goto	l9598
 26810   005DFC                     l617:
 26811   005DFC  0012               	return		;funcret
 26812   005DFE                     __end_of_canProcessMessage:
 26813                           	callstack 0
 26814                           
 26815 ;; *************** function _bootProcessMessage *****************
 26816 ;; Defined at:
 26817 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 26818 ;; Parameters:    Size  Location     Type
 26819 ;;  m               2   83[COMRAM] PTR struct Message
 26820 ;;		 -> poll@m(9), 
 26821 ;; Auto vars:     Size  Location     Type
 26822 ;;		None
 26823 ;; Return value:  Size  Location     Type
 26824 ;;                  1    wreg      enum E23340
 26825 ;; Registers used:
 26826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26827 ;; Tracked objects:
 26828 ;;		On entry : 0/0
 26829 ;;		On exit  : 0/0
 26830 ;;		Unchanged: 0/0
 26831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26836 ;;Total ram usage:        4 bytes
 26837 ;; Hardware stack levels used: 1
 26838 ;; Hardware stack levels required when called: 6
 26839 ;; This function calls:
 26840 ;;		_writeNVM
 26841 ;; This function is called by:
 26842 ;;		_poll
 26843 ;; This function uses a non-reentrant model
 26844 ;;
 26845                           
 26846                           	psect	text21
 26847   006BDC                     __ptext21:
 26848                           	callstack 0
 26849   006BDC                     _bootProcessMessage:
 26850                           	callstack 119
 26851   006BDC                     
 26852                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 26853   006BDC  EE20 F002          	lfsr	2,2
 26854   006BE0  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26855   006BE2  26D9               	addwf	fsr2l,f,c
 26856   006BE4  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26857   006BE6  22DA               	addwfc	fsr2h,f,c
 26858   006BE8  50DE               	movf	postinc2,w,c
 26859   006BEA  0105               	movlb	5	; () banked
 26860   006BEC  1990               	xorwf	(_nn+1)& (0+255),w,b
 26861   006BEE  B4D8               	btfsc	status,2,c
 26862   006BF0  EFFC  F035         	goto	u6751
 26863   006BF4  EFFE  F035         	goto	u6750
 26864   006BF8                     u6751:
 26865   006BF8  EF01  F036         	goto	l9430
 26866   006BFC                     u6750:
 26867   006BFC                     l9426:
 26868                           
 26869                           ; BSR set to: 5
 26870   006BFC  0E00               	movlw	0
 26871   006BFE  EF38  F036         	goto	l338
 26872   006C02                     l9430:
 26873                           
 26874                           ; BSR set to: 5
 26875                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 26876   006C02  EE20 F003          	lfsr	2,3
 26877   006C06  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26878   006C08  26D9               	addwf	fsr2l,f,c
 26879   006C0A  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26880   006C0C  22DA               	addwfc	fsr2h,f,c
 26881   006C0E  518F               	movf	_nn& (0+255),w,b
 26882   006C10  18DE               	xorwf	postinc2,w,c
 26883   006C12  B4D8               	btfsc	status,2,c
 26884   006C14  EF0E  F036         	goto	u6761
 26885   006C18  EF10  F036         	goto	u6760
 26886   006C1C                     u6761:
 26887   006C1C  EF21  F036         	goto	l9448
 26888   006C20                     u6760:
 26889   006C20  EFFE  F035         	goto	l9426
 26890   006C24                     l9436:
 26891                           
 26892                           ; BSR set to: 5
 26893                           ;../../VLCBlib_PIC/boot.c: 239:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 26894   006C24  0EFF               	movlw	255
 26895   006C26  6E0E               	movwf	writeNVM@index^(0+1280),c
 26896   006C28  0E03               	movlw	3
 26897   006C2A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26898   006C2C  0E00               	movlw	0
 26899   006C2E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26900   006C30  0EFF               	movlw	255
 26901   006C32  6E11               	movwf	writeNVM@value^(0+1280),c
 26902   006C34  0E00               	movlw	0
 26903   006C36  EC34  F03C         	call	_writeNVM
 26904   006C3A  00FF               	reset		;# 
 26905   006C3C                     
 26906                           ;../../VLCBlib_PIC/boot.c: 241:             return PROCESSED;
 26907   006C3C  0E01               	movlw	1
 26908   006C3E  EF38  F036         	goto	l338
 26909   006C42                     l9448:
 26910                           
 26911                           ; BSR set to: 5
 26912   006C42  EE20 F001          	lfsr	2,1
 26913   006C46  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26914   006C48  26D9               	addwf	fsr2l,f,c
 26915   006C4A  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26916   006C4C  22DA               	addwfc	fsr2h,f,c
 26917   006C4E  50DF               	movf	indf2,w,c
 26918   006C50  6E56               	movwf	??_bootProcessMessage^(0+1280),c
 26919   006C52  6A57               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 26920                           
 26921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26922                           ; Switch size 1, requested type "simple"
 26923                           ; Number of cases is 1, Range of values is 0 to 0
 26924                           ; switch strategies available:
 26925                           ; Name         Instructions Cycles
 26926                           ; simple_byte            4     3 (average)
 26927                           ;	Chosen strategy is simple_byte
 26928   006C54  5057               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 26929   006C56  0A00               	xorlw	0	; case 0
 26930   006C58  B4D8               	btfsc	status,2,c
 26931   006C5A  EF31  F036         	goto	l11670
 26932   006C5E  EFFE  F035         	goto	l9426
 26933   006C62                     l11670:
 26934                           
 26935                           ; BSR set to: 5
 26936                           ; Switch size 1, requested type "simple"
 26937                           ; Number of cases is 1, Range of values is 92 to 92
 26938                           ; switch strategies available:
 26939                           ; Name         Instructions Cycles
 26940                           ; simple_byte            4     3 (average)
 26941                           ;	Chosen strategy is simple_byte
 26942   006C62  5056               	movf	??_bootProcessMessage^(0+1280),w,c
 26943   006C64  0A5C               	xorlw	92	; case 92
 26944   006C66  B4D8               	btfsc	status,2,c
 26945   006C68  EF12  F036         	goto	l9436
 26946   006C6C  EFFE  F035         	goto	l9426
 26947   006C70                     l338:
 26948   006C70  0012               	return		;funcret
 26949   006C72                     __end_of_bootProcessMessage:
 26950                           	callstack 0
 26951                           
 26952 ;; *************** function _teachProcessMessage *****************
 26953 ;; Defined at:
 26954 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 26955 ;; Parameters:    Size  Location     Type
 26956 ;;  m               2   83[COMRAM] PTR struct Message
 26957 ;;		 -> poll@m(9), 
 26958 ;; Auto vars:     Size  Location     Type
 26959 ;;		None
 26960 ;; Return value:  Size  Location     Type
 26961 ;;                  1    wreg      enum E23340
 26962 ;; Registers used:
 26963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26964 ;; Tracked objects:
 26965 ;;		On entry : 0/0
 26966 ;;		On exit  : 0/0
 26967 ;;		Unchanged: 0/0
 26968 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26971 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26972 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26973 ;;Total ram usage:        8 bytes
 26974 ;; Hardware stack levels used: 1
 26975 ;; Hardware stack levels required when called: 10
 26976 ;; This function calls:
 26977 ;;		_doEvlrn
 26978 ;;		_doEvuln
 26979 ;;		_doNenrd
 26980 ;;		_doNerd
 26981 ;;		_doNnclr
 26982 ;;		_doNnevn
 26983 ;;		_doReqev
 26984 ;;		_doReval
 26985 ;;		_doRqevn
 26986 ;;		_sendMessage3
 26987 ;;		_sendMessage5
 26988 ;;		_teachCheckLen
 26989 ;; This function is called by:
 26990 ;;		_poll
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text22
 26995   0016F8                     __ptext22:
 26996                           	callstack 0
 26997   0016F8                     _teachProcessMessage:
 26998                           	callstack 115
 26999   0016F8                     
 27000                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 27001   0016F8  EF20  F00F         	goto	l10088
 27002   0016FC                     l9830:
 27003                           
 27004                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27005   0016FC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27006   001700  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27007   001704  0E03               	movlw	3
 27008   001706  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27009   001708  0E00               	movlw	0
 27010   00170A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27011   00170C  EC65  F038         	call	_teachCheckLen	;wreg free
 27012   001710  06E8               	decf	wreg,f,c
 27013   001712  A4D8               	btfss	status,2,c
 27014   001714  EF8E  F00B         	goto	u7031
 27015   001718  EF90  F00B         	goto	u7030
 27016   00171C                     u7031:
 27017   00171C  EF93  F00B         	goto	l9836
 27018   001720                     u7030:
 27019   001720                     l9832:
 27020   001720  0E01               	movlw	1
 27021   001722  EF67  F00F         	goto	l951
 27022   001726                     l9836:
 27023                           
 27024                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 27025   001726  EE20 F002          	lfsr	2,2
 27026   00172A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27027   00172C  26D9               	addwf	fsr2l,f,c
 27028   00172E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27029   001730  22DA               	addwfc	fsr2h,f,c
 27030   001732  50DE               	movf	postinc2,w,c
 27031   001734  0105               	movlb	5	; () banked
 27032   001736  1990               	xorwf	(_nn+1)& (0+255),w,b
 27033   001738  A4D8               	btfss	status,2,c
 27034   00173A  EFA1  F00B         	goto	u7041
 27035   00173E  EFA3  F00B         	goto	u7040
 27036   001742                     u7041:
 27037   001742  EFB5  F00B         	goto	l9842
 27038   001746                     u7040:
 27039   001746                     
 27040                           ; BSR set to: 5
 27041   001746  EE20 F003          	lfsr	2,3
 27042   00174A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27043   00174C  26D9               	addwf	fsr2l,f,c
 27044   00174E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27045   001750  22DA               	addwfc	fsr2h,f,c
 27046   001752  518F               	movf	_nn& (0+255),w,b
 27047   001754  18DE               	xorwf	postinc2,w,c
 27048   001756  A4D8               	btfss	status,2,c
 27049   001758  EFB0  F00B         	goto	u7051
 27050   00175C  EFB2  F00B         	goto	u7050
 27051   001760                     u7051:
 27052   001760  EFB5  F00B         	goto	l9842
 27053   001764                     u7050:
 27054   001764                     l9840:
 27055                           
 27056                           ; BSR set to: 5
 27057                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 27058   001764  81A4               	bsf	_mode_flags& (0+255),0,b
 27059                           
 27060                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 27061   001766  EF90  F00B         	goto	l9832
 27062   00176A                     l9842:
 27063                           
 27064                           ; BSR set to: 5
 27065                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 27066   00176A  91A4               	bcf	_mode_flags& (0+255),0,b
 27067   00176C  EF90  F00B         	goto	l9832
 27068   001770                     l9848:
 27069                           
 27070                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27071   001770  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27072   001774  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27073   001778  0E04               	movlw	4
 27074   00177A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27075   00177C  0E00               	movlw	0
 27076   00177E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27077   001780  EC65  F038         	call	_teachCheckLen	;wreg free
 27078   001784  06E8               	decf	wreg,f,c
 27079   001786  A4D8               	btfss	status,2,c
 27080   001788  EFC8  F00B         	goto	u7061
 27081   00178C  EFCA  F00B         	goto	u7060
 27082   001790                     u7061:
 27083   001790  EFCC  F00B         	goto	l9854
 27084   001794                     u7060:
 27085   001794  EF90  F00B         	goto	l9832
 27086   001798                     l9854:
 27087                           
 27088                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 27089   001798  EE20 F002          	lfsr	2,2
 27090   00179C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27091   00179E  26D9               	addwf	fsr2l,f,c
 27092   0017A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27093   0017A2  22DA               	addwfc	fsr2h,f,c
 27094   0017A4  50DE               	movf	postinc2,w,c
 27095   0017A6  0105               	movlb	5	; () banked
 27096   0017A8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27097   0017AA  A4D8               	btfss	status,2,c
 27098   0017AC  EFDA  F00B         	goto	u7071
 27099   0017B0  EFDC  F00B         	goto	u7070
 27100   0017B4                     u7071:
 27101   0017B4  EF0D  F00C         	goto	l9876
 27102   0017B8                     u7070:
 27103   0017B8                     
 27104                           ; BSR set to: 5
 27105   0017B8  EE20 F003          	lfsr	2,3
 27106   0017BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27107   0017BE  26D9               	addwf	fsr2l,f,c
 27108   0017C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27109   0017C2  22DA               	addwfc	fsr2h,f,c
 27110   0017C4  518F               	movf	_nn& (0+255),w,b
 27111   0017C6  18DE               	xorwf	postinc2,w,c
 27112   0017C8  A4D8               	btfss	status,2,c
 27113   0017CA  EFE9  F00B         	goto	u7081
 27114   0017CE  EFEB  F00B         	goto	u7080
 27115   0017D2                     u7081:
 27116   0017D2  EF0D  F00C         	goto	l9876
 27117   0017D6                     u7080:
 27118   0017D6                     
 27119                           ; BSR set to: 5
 27120                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 27121   0017D6  EE20 F004          	lfsr	2,4
 27122   0017DA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27123   0017DC  26D9               	addwf	fsr2l,f,c
 27124   0017DE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27125   0017E0  22DA               	addwfc	fsr2h,f,c
 27126   0017E2  0E08               	movlw	8
 27127   0017E4  18DE               	xorwf	postinc2,w,c
 27128   0017E6  A4D8               	btfss	status,2,c
 27129   0017E8  EFF8  F00B         	goto	u7091
 27130   0017EC  EFFA  F00B         	goto	u7090
 27131   0017F0                     u7091:
 27132   0017F0  EFFC  F00B         	goto	l9868
 27133   0017F4                     u7090:
 27134   0017F4  EFB2  F00B         	goto	l9840
 27135   0017F8                     l9868:
 27136                           
 27137                           ; BSR set to: 5
 27138   0017F8  EE20 F004          	lfsr	2,4
 27139   0017FC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27140   0017FE  26D9               	addwf	fsr2l,f,c
 27141   001800  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27142   001802  22DA               	addwfc	fsr2h,f,c
 27143   001804  0E09               	movlw	9
 27144   001806  18DE               	xorwf	postinc2,w,c
 27145   001808  A4D8               	btfss	status,2,c
 27146   00180A  EF09  F00C         	goto	u7101
 27147   00180E  EF0B  F00C         	goto	u7100
 27148   001812                     u7101:
 27149   001812  EF0E  F00C         	goto	l9878
 27150   001816                     u7100:
 27151   001816  EFB5  F00B         	goto	l9842
 27152   00181A                     l9876:
 27153                           
 27154                           ; BSR set to: 5
 27155                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 27156   00181A  91A4               	bcf	_mode_flags& (0+255),0,b
 27157   00181C                     l9878:
 27158                           
 27159                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 27160   00181C  0E00               	movlw	0
 27161   00181E  EF67  F00F         	goto	l951
 27162   001822                     l9882:
 27163                           
 27164                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 27165   001822  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27166   001826  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27167   00182A  0E07               	movlw	7
 27168   00182C  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27169   00182E  0E01               	movlw	1
 27170   001830  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27171   001832  EC65  F038         	call	_teachCheckLen	;wreg free
 27172   001836  06E8               	decf	wreg,f,c
 27173   001838  A4D8               	btfss	status,2,c
 27174   00183A  EF21  F00C         	goto	u7111
 27175   00183E  EF23  F00C         	goto	u7110
 27176   001842                     u7111:
 27177   001842  EF2E  F00C         	goto	l962
 27178   001846                     u7110:
 27179   001846                     
 27180                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 27181   001846  C590  F526         	movff	_nn+1,sendMessage3@data1
 27182   00184A  C58F  F527         	movff	_nn,sendMessage3@data2
 27183   00184E  0E01               	movlw	1
 27184   001850  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27185   001852  0E6F               	movlw	111
 27186   001854  EC5C  F040         	call	_sendMessage3
 27187   001858  EF90  F00B         	goto	l9832
 27188   00185C                     l962:
 27189                           
 27190                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27191   00185C  0105               	movlb	5	; () banked
 27192   00185E  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27193   001860  EF34  F00C         	goto	u7121
 27194   001864  EF36  F00C         	goto	u7120
 27195   001868                     u7121:
 27196   001868  EF38  F00C         	goto	l9894
 27197   00186C                     u7120:
 27198   00186C  EF90  F00B         	goto	l9832
 27199   001870                     l9894:
 27200                           
 27201                           ; BSR set to: 5
 27202                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 27203   001870  EE20 F003          	lfsr	2,3
 27204   001874  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27205   001876  26D9               	addwf	fsr2l,f,c
 27206   001878  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27207   00187A  22DA               	addwfc	fsr2h,f,c
 27208   00187C  50DF               	movf	indf2,w,c
 27209   00187E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27210   001880  EE20 F002          	lfsr	2,2
 27211   001884  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27212   001886  26D9               	addwf	fsr2l,f,c
 27213   001888  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27214   00188A  22DA               	addwfc	fsr2h,f,c
 27215   00188C  50DF               	movf	indf2,w,c
 27216   00188E  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27217   001890  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27218   001892  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27219   001894  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27220   001898  EE20 F005          	lfsr	2,5
 27221   00189C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27222   00189E  26D9               	addwf	fsr2l,f,c
 27223   0018A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27224   0018A2  22DA               	addwfc	fsr2h,f,c
 27225   0018A4  50DF               	movf	indf2,w,c
 27226   0018A6  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27227   0018A8  EE20 F004          	lfsr	2,4
 27228   0018AC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27229   0018AE  26D9               	addwf	fsr2l,f,c
 27230   0018B0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27231   0018B2  22DA               	addwfc	fsr2h,f,c
 27232   0018B4  50DF               	movf	indf2,w,c
 27233   0018B6  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27234   0018B8  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27235   0018BA  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27236   0018BC  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27237   0018C0  EE20 F006          	lfsr	2,6
 27238   0018C4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27239   0018C6  26D9               	addwf	fsr2l,f,c
 27240   0018C8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27241   0018CA  22DA               	addwfc	fsr2h,f,c
 27242   0018CC  50DF               	movf	indf2,w,c
 27243   0018CE  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27244   0018D0  EE20 F007          	lfsr	2,7
 27245   0018D4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27246   0018D6  26D9               	addwf	fsr2l,f,c
 27247   0018D8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27248   0018DA  22DA               	addwfc	fsr2h,f,c
 27249   0018DC  50DF               	movf	indf2,w,c
 27250   0018DE  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27251   0018E0  EC6A  F02F         	call	_doEvlrn	;wreg free
 27252   0018E4  EF90  F00B         	goto	l9832
 27253   0018E8                     l9900:
 27254                           
 27255                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 27256   0018E8  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27257   0018EC  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27258   0018F0  0E05               	movlw	5
 27259   0018F2  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27260   0018F4  0E01               	movlw	1
 27261   0018F6  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27262   0018F8  EC65  F038         	call	_teachCheckLen	;wreg free
 27263   0018FC  06E8               	decf	wreg,f,c
 27264   0018FE  A4D8               	btfss	status,2,c
 27265   001900  EF84  F00C         	goto	u7131
 27266   001904  EF86  F00C         	goto	u7130
 27267   001908                     u7131:
 27268   001908  EF88  F00C         	goto	l965
 27269   00190C                     u7130:
 27270   00190C  EF90  F00B         	goto	l9832
 27271   001910                     l965:
 27272                           
 27273                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27274   001910  0105               	movlb	5	; () banked
 27275   001912  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27276   001914  EF8E  F00C         	goto	u7141
 27277   001918  EF90  F00C         	goto	u7140
 27278   00191C                     u7141:
 27279   00191C  EF92  F00C         	goto	l9910
 27280   001920                     u7140:
 27281   001920  EF90  F00B         	goto	l9832
 27282   001924                     l9910:
 27283                           
 27284                           ; BSR set to: 5
 27285                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 27286   001924  EE20 F003          	lfsr	2,3
 27287   001928  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27288   00192A  26D9               	addwf	fsr2l,f,c
 27289   00192C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27290   00192E  22DA               	addwfc	fsr2h,f,c
 27291   001930  50DF               	movf	indf2,w,c
 27292   001932  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27293   001934  EE20 F002          	lfsr	2,2
 27294   001938  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27295   00193A  26D9               	addwf	fsr2l,f,c
 27296   00193C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27297   00193E  22DA               	addwfc	fsr2h,f,c
 27298   001940  50DF               	movf	indf2,w,c
 27299   001942  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27300   001944  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27301   001946  6E3B               	movwf	doEvuln@nodeNumber^(0+1280),c
 27302   001948  C557  F53C         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 27303   00194C  EE20 F005          	lfsr	2,5
 27304   001950  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27305   001952  26D9               	addwf	fsr2l,f,c
 27306   001954  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27307   001956  22DA               	addwfc	fsr2h,f,c
 27308   001958  50DF               	movf	indf2,w,c
 27309   00195A  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27310   00195C  EE20 F004          	lfsr	2,4
 27311   001960  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27312   001962  26D9               	addwf	fsr2l,f,c
 27313   001964  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27314   001966  22DA               	addwfc	fsr2h,f,c
 27315   001968  50DF               	movf	indf2,w,c
 27316   00196A  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27317   00196C  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27318   00196E  6E3D               	movwf	doEvuln@eventNumber^(0+1280),c
 27319   001970  C55A  F53E         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 27320   001974  ECE7  F038         	call	_doEvuln	;wreg free
 27321   001978  EF90  F00B         	goto	l9832
 27322   00197C                     l9916:
 27323                           
 27324                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 27325   00197C  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27326   001980  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27327   001984  0E06               	movlw	6
 27328   001986  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27329   001988  0E01               	movlw	1
 27330   00198A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27331   00198C  EC65  F038         	call	_teachCheckLen	;wreg free
 27332   001990  06E8               	decf	wreg,f,c
 27333   001992  A4D8               	btfss	status,2,c
 27334   001994  EFCE  F00C         	goto	u7151
 27335   001998  EFD0  F00C         	goto	u7150
 27336   00199C                     u7151:
 27337   00199C  EFD2  F00C         	goto	l968
 27338   0019A0                     u7150:
 27339   0019A0  EF90  F00B         	goto	l9832
 27340   0019A4                     l968:
 27341                           
 27342                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27343   0019A4  0105               	movlb	5	; () banked
 27344   0019A6  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27345   0019A8  EFD8  F00C         	goto	u7161
 27346   0019AC  EFDA  F00C         	goto	u7160
 27347   0019B0                     u7161:
 27348   0019B0  EFDC  F00C         	goto	l9926
 27349   0019B4                     u7160:
 27350   0019B4  EF90  F00B         	goto	l9832
 27351   0019B8                     l9926:
 27352                           
 27353                           ; BSR set to: 5
 27354                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 27355   0019B8  EE20 F003          	lfsr	2,3
 27356   0019BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27357   0019BE  26D9               	addwf	fsr2l,f,c
 27358   0019C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27359   0019C2  22DA               	addwfc	fsr2h,f,c
 27360   0019C4  50DF               	movf	indf2,w,c
 27361   0019C6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27362   0019C8  EE20 F002          	lfsr	2,2
 27363   0019CC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27364   0019CE  26D9               	addwf	fsr2l,f,c
 27365   0019D0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27366   0019D2  22DA               	addwfc	fsr2h,f,c
 27367   0019D4  50DF               	movf	indf2,w,c
 27368   0019D6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27369   0019D8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27370   0019DA  6E2F               	movwf	doReqev@nodeNumber^(0+1280),c
 27371   0019DC  C557  F530         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 27372   0019E0  EE20 F005          	lfsr	2,5
 27373   0019E4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27374   0019E6  26D9               	addwf	fsr2l,f,c
 27375   0019E8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27376   0019EA  22DA               	addwfc	fsr2h,f,c
 27377   0019EC  50DF               	movf	indf2,w,c
 27378   0019EE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27379   0019F0  EE20 F004          	lfsr	2,4
 27380   0019F4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27381   0019F6  26D9               	addwf	fsr2l,f,c
 27382   0019F8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27383   0019FA  22DA               	addwfc	fsr2h,f,c
 27384   0019FC  50DF               	movf	indf2,w,c
 27385   0019FE  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27386   001A00  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27387   001A02  6E31               	movwf	doReqev@eventNumber^(0+1280),c
 27388   001A04  C55A  F532         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 27389   001A08  EE20 F006          	lfsr	2,6
 27390   001A0C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27391   001A0E  26D9               	addwf	fsr2l,f,c
 27392   001A10  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27393   001A12  22DA               	addwfc	fsr2h,f,c
 27394   001A14  50DF               	movf	indf2,w,c
 27395   001A16  6E33               	movwf	doReqev@evNum^(0+1280),c
 27396   001A18  EC8C  F025         	call	_doReqev	;wreg free
 27397   001A1C  EF90  F00B         	goto	l9832
 27398   001A20                     l9932:
 27399                           
 27400                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27401   001A20  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27402   001A24  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27403   001A28  0E03               	movlw	3
 27404   001A2A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27405   001A2C  0E00               	movlw	0
 27406   001A2E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27407   001A30  EC65  F038         	call	_teachCheckLen	;wreg free
 27408   001A34  06E8               	decf	wreg,f,c
 27409   001A36  A4D8               	btfss	status,2,c
 27410   001A38  EF20  F00D         	goto	u7171
 27411   001A3C  EF22  F00D         	goto	u7170
 27412   001A40                     u7171:
 27413   001A40  EF24  F00D         	goto	l9938
 27414   001A44                     u7170:
 27415   001A44  EF90  F00B         	goto	l9832
 27416   001A48                     l9938:
 27417                           
 27418                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27419   001A48  EE20 F002          	lfsr	2,2
 27420   001A4C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27421   001A4E  26D9               	addwf	fsr2l,f,c
 27422   001A50  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27423   001A52  22DA               	addwfc	fsr2h,f,c
 27424   001A54  50DE               	movf	postinc2,w,c
 27425   001A56  0105               	movlb	5	; () banked
 27426   001A58  1990               	xorwf	(_nn+1)& (0+255),w,b
 27427   001A5A  A4D8               	btfss	status,2,c
 27428   001A5C  EF32  F00D         	goto	u7181
 27429   001A60  EF34  F00D         	goto	u7180
 27430   001A64                     u7181:
 27431   001A64  EF90  F00B         	goto	l9832
 27432   001A68                     u7180:
 27433   001A68                     
 27434                           ; BSR set to: 5
 27435   001A68  EE20 F003          	lfsr	2,3
 27436   001A6C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27437   001A6E  26D9               	addwf	fsr2l,f,c
 27438   001A70  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27439   001A72  22DA               	addwfc	fsr2h,f,c
 27440   001A74  518F               	movf	_nn& (0+255),w,b
 27441   001A76  18DE               	xorwf	postinc2,w,c
 27442   001A78  B4D8               	btfsc	status,2,c
 27443   001A7A  EF41  F00D         	goto	u7191
 27444   001A7E  EF43  F00D         	goto	u7190
 27445   001A82                     u7191:
 27446   001A82  EFB5  F00B         	goto	l9842
 27447   001A86                     u7190:
 27448   001A86  EF90  F00B         	goto	l9832
 27449   001A8A                     l9952:
 27450                           
 27451                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 27452   001A8A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27453   001A8E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27454   001A92  0E03               	movlw	3
 27455   001A94  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27456   001A96  0E01               	movlw	1
 27457   001A98  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27458   001A9A  EC65  F038         	call	_teachCheckLen	;wreg free
 27459   001A9E  06E8               	decf	wreg,f,c
 27460   001AA0  A4D8               	btfss	status,2,c
 27461   001AA2  EF55  F00D         	goto	u7201
 27462   001AA6  EF57  F00D         	goto	u7200
 27463   001AAA                     u7201:
 27464   001AAA  EF59  F00D         	goto	l9958
 27465   001AAE                     u7200:
 27466   001AAE  EF90  F00B         	goto	l9832
 27467   001AB2                     l9958:
 27468                           
 27469                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27470   001AB2  EE20 F002          	lfsr	2,2
 27471   001AB6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27472   001AB8  26D9               	addwf	fsr2l,f,c
 27473   001ABA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27474   001ABC  22DA               	addwfc	fsr2h,f,c
 27475   001ABE  50DE               	movf	postinc2,w,c
 27476   001AC0  0105               	movlb	5	; () banked
 27477   001AC2  1990               	xorwf	(_nn+1)& (0+255),w,b
 27478   001AC4  A4D8               	btfss	status,2,c
 27479   001AC6  EF67  F00D         	goto	u7211
 27480   001ACA  EF69  F00D         	goto	u7210
 27481   001ACE                     u7211:
 27482   001ACE  EF90  F00B         	goto	l9832
 27483   001AD2                     u7210:
 27484   001AD2                     
 27485                           ; BSR set to: 5
 27486   001AD2  EE20 F003          	lfsr	2,3
 27487   001AD6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27488   001AD8  26D9               	addwf	fsr2l,f,c
 27489   001ADA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27490   001ADC  22DA               	addwfc	fsr2h,f,c
 27491   001ADE  518F               	movf	_nn& (0+255),w,b
 27492   001AE0  18DE               	xorwf	postinc2,w,c
 27493   001AE2  B4D8               	btfsc	status,2,c
 27494   001AE4  EF76  F00D         	goto	u7221
 27495   001AE8  EF78  F00D         	goto	u7220
 27496   001AEC                     u7221:
 27497   001AEC  EF7A  F00D         	goto	l977
 27498   001AF0                     u7220:
 27499   001AF0  EF90  F00B         	goto	l9832
 27500   001AF4                     l977:
 27501                           
 27502                           ; BSR set to: 5
 27503                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 27504   001AF4  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27505   001AF6  EF7F  F00D         	goto	u7231
 27506   001AFA  EF81  F00D         	goto	u7230
 27507   001AFE                     u7231:
 27508   001AFE  EF99  F00D         	goto	l9972
 27509   001B02                     u7230:
 27510   001B02                     
 27511                           ; BSR set to: 5
 27512                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 27513   001B02  C590  F526         	movff	_nn+1,sendMessage3@data1
 27514   001B06  C58F  F527         	movff	_nn,sendMessage3@data2
 27515   001B0A  0E02               	movlw	2
 27516   001B0C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27517   001B0E  0E6F               	movlw	111
 27518   001B10  EC5C  F040         	call	_sendMessage3
 27519                           
 27520                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 27521   001B14  C590  F526         	movff	_nn+1,sendMessage5@data1
 27522   001B18  C58F  F527         	movff	_nn,sendMessage5@data2
 27523   001B1C  0E55               	movlw	85
 27524   001B1E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27525   001B20  0E04               	movlw	4
 27526   001B22  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27527   001B24  0E02               	movlw	2
 27528   001B26  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27529   001B28  0EAF               	movlw	175
 27530   001B2A  EC9B  F040         	call	_sendMessage5
 27531   001B2E  EF90  F00B         	goto	l9832
 27532   001B32                     l9972:
 27533                           
 27534                           ; BSR set to: 5
 27535                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 27536   001B32  EC04  F040         	call	_doNnclr	;wreg free
 27537                           
 27538                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 27539   001B36  EF0E  F00C         	goto	l9878
 27540   001B3A                     l9974:
 27541                           
 27542                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27543   001B3A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27544   001B3E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27545   001B42  0E03               	movlw	3
 27546   001B44  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27547   001B46  0E00               	movlw	0
 27548   001B48  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27549   001B4A  EC65  F038         	call	_teachCheckLen	;wreg free
 27550   001B4E  06E8               	decf	wreg,f,c
 27551   001B50  A4D8               	btfss	status,2,c
 27552   001B52  EFAD  F00D         	goto	u7241
 27553   001B56  EFAF  F00D         	goto	u7240
 27554   001B5A                     u7241:
 27555   001B5A  EFB1  F00D         	goto	l9980
 27556   001B5E                     u7240:
 27557   001B5E  EF90  F00B         	goto	l9832
 27558   001B62                     l9980:
 27559                           
 27560                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27561   001B62  EE20 F002          	lfsr	2,2
 27562   001B66  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27563   001B68  26D9               	addwf	fsr2l,f,c
 27564   001B6A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27565   001B6C  22DA               	addwfc	fsr2h,f,c
 27566   001B6E  50DE               	movf	postinc2,w,c
 27567   001B70  0105               	movlb	5	; () banked
 27568   001B72  1990               	xorwf	(_nn+1)& (0+255),w,b
 27569   001B74  A4D8               	btfss	status,2,c
 27570   001B76  EFBF  F00D         	goto	u7251
 27571   001B7A  EFC1  F00D         	goto	u7250
 27572   001B7E                     u7251:
 27573   001B7E  EF90  F00B         	goto	l9832
 27574   001B82                     u7250:
 27575   001B82                     
 27576                           ; BSR set to: 5
 27577   001B82  EE20 F003          	lfsr	2,3
 27578   001B86  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27579   001B88  26D9               	addwf	fsr2l,f,c
 27580   001B8A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27581   001B8C  22DA               	addwfc	fsr2h,f,c
 27582   001B8E  518F               	movf	_nn& (0+255),w,b
 27583   001B90  18DE               	xorwf	postinc2,w,c
 27584   001B92  B4D8               	btfsc	status,2,c
 27585   001B94  EFCE  F00D         	goto	u7261
 27586   001B98  EFD0  F00D         	goto	u7260
 27587   001B9C                     u7261:
 27588   001B9C  EFD2  F00D         	goto	l9988
 27589   001BA0                     u7260:
 27590   001BA0  EF90  F00B         	goto	l9832
 27591   001BA4                     l9988:
 27592                           
 27593                           ; BSR set to: 5
 27594                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 27595   001BA4  EC53  F041         	call	_doNerd	;wreg free
 27596   001BA8  EF90  F00B         	goto	l9832
 27597   001BAC                     l9994:
 27598                           
 27599                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27600   001BAC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27601   001BB0  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27602   001BB4  0E03               	movlw	3
 27603   001BB6  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27604   001BB8  0E00               	movlw	0
 27605   001BBA  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27606   001BBC  EC65  F038         	call	_teachCheckLen	;wreg free
 27607   001BC0  06E8               	decf	wreg,f,c
 27608   001BC2  A4D8               	btfss	status,2,c
 27609   001BC4  EFE6  F00D         	goto	u7271
 27610   001BC8  EFE8  F00D         	goto	u7270
 27611   001BCC                     u7271:
 27612   001BCC  EFEA  F00D         	goto	l10000
 27613   001BD0                     u7270:
 27614   001BD0  EF90  F00B         	goto	l9832
 27615   001BD4                     l10000:
 27616                           
 27617                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27618   001BD4  EE20 F002          	lfsr	2,2
 27619   001BD8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27620   001BDA  26D9               	addwf	fsr2l,f,c
 27621   001BDC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27622   001BDE  22DA               	addwfc	fsr2h,f,c
 27623   001BE0  50DE               	movf	postinc2,w,c
 27624   001BE2  0105               	movlb	5	; () banked
 27625   001BE4  1990               	xorwf	(_nn+1)& (0+255),w,b
 27626   001BE6  A4D8               	btfss	status,2,c
 27627   001BE8  EFF8  F00D         	goto	u7281
 27628   001BEC  EFFA  F00D         	goto	u7280
 27629   001BF0                     u7281:
 27630   001BF0  EF90  F00B         	goto	l9832
 27631   001BF4                     u7280:
 27632   001BF4                     
 27633                           ; BSR set to: 5
 27634   001BF4  EE20 F003          	lfsr	2,3
 27635   001BF8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27636   001BFA  26D9               	addwf	fsr2l,f,c
 27637   001BFC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27638   001BFE  22DA               	addwfc	fsr2h,f,c
 27639   001C00  518F               	movf	_nn& (0+255),w,b
 27640   001C02  18DE               	xorwf	postinc2,w,c
 27641   001C04  B4D8               	btfsc	status,2,c
 27642   001C06  EF07  F00E         	goto	u7291
 27643   001C0A  EF09  F00E         	goto	u7290
 27644   001C0E                     u7291:
 27645   001C0E  EF0B  F00E         	goto	l10008
 27646   001C12                     u7290:
 27647   001C12  EF90  F00B         	goto	l9832
 27648   001C16                     l10008:
 27649                           
 27650                           ; BSR set to: 5
 27651                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 27652   001C16  ECE1  F03D         	call	_doNnevn	;wreg free
 27653   001C1A  EF90  F00B         	goto	l9832
 27654   001C1E                     l10014:
 27655                           
 27656                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27657   001C1E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27658   001C22  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27659   001C26  0E03               	movlw	3
 27660   001C28  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27661   001C2A  0E00               	movlw	0
 27662   001C2C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27663   001C2E  EC65  F038         	call	_teachCheckLen	;wreg free
 27664   001C32  06E8               	decf	wreg,f,c
 27665   001C34  A4D8               	btfss	status,2,c
 27666   001C36  EF1F  F00E         	goto	u7301
 27667   001C3A  EF21  F00E         	goto	u7300
 27668   001C3E                     u7301:
 27669   001C3E  EF23  F00E         	goto	l10020
 27670   001C42                     u7300:
 27671   001C42  EF90  F00B         	goto	l9832
 27672   001C46                     l10020:
 27673                           
 27674                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27675   001C46  EE20 F002          	lfsr	2,2
 27676   001C4A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27677   001C4C  26D9               	addwf	fsr2l,f,c
 27678   001C4E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27679   001C50  22DA               	addwfc	fsr2h,f,c
 27680   001C52  50DE               	movf	postinc2,w,c
 27681   001C54  0105               	movlb	5	; () banked
 27682   001C56  1990               	xorwf	(_nn+1)& (0+255),w,b
 27683   001C58  A4D8               	btfss	status,2,c
 27684   001C5A  EF31  F00E         	goto	u7311
 27685   001C5E  EF33  F00E         	goto	u7310
 27686   001C62                     u7311:
 27687   001C62  EF90  F00B         	goto	l9832
 27688   001C66                     u7310:
 27689   001C66                     
 27690                           ; BSR set to: 5
 27691   001C66  EE20 F003          	lfsr	2,3
 27692   001C6A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27693   001C6C  26D9               	addwf	fsr2l,f,c
 27694   001C6E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27695   001C70  22DA               	addwfc	fsr2h,f,c
 27696   001C72  518F               	movf	_nn& (0+255),w,b
 27697   001C74  18DE               	xorwf	postinc2,w,c
 27698   001C76  B4D8               	btfsc	status,2,c
 27699   001C78  EF40  F00E         	goto	u7321
 27700   001C7C  EF42  F00E         	goto	u7320
 27701   001C80                     u7321:
 27702   001C80  EF44  F00E         	goto	l10028
 27703   001C84                     u7320:
 27704   001C84  EF90  F00B         	goto	l9832
 27705   001C88                     l10028:
 27706                           
 27707                           ; BSR set to: 5
 27708                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 27709   001C88  ECBB  F03D         	call	_doRqevn	;wreg free
 27710   001C8C  EF90  F00B         	goto	l9832
 27711   001C90                     l10034:
 27712                           
 27713                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27714   001C90  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27715   001C94  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27716   001C98  0E04               	movlw	4
 27717   001C9A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27718   001C9C  0E00               	movlw	0
 27719   001C9E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27720   001CA0  EC65  F038         	call	_teachCheckLen	;wreg free
 27721   001CA4  06E8               	decf	wreg,f,c
 27722   001CA6  A4D8               	btfss	status,2,c
 27723   001CA8  EF58  F00E         	goto	u7331
 27724   001CAC  EF5A  F00E         	goto	u7330
 27725   001CB0                     u7331:
 27726   001CB0  EF5C  F00E         	goto	l10040
 27727   001CB4                     u7330:
 27728   001CB4  EF90  F00B         	goto	l9832
 27729   001CB8                     l10040:
 27730                           
 27731                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27732   001CB8  EE20 F002          	lfsr	2,2
 27733   001CBC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27734   001CBE  26D9               	addwf	fsr2l,f,c
 27735   001CC0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27736   001CC2  22DA               	addwfc	fsr2h,f,c
 27737   001CC4  50DE               	movf	postinc2,w,c
 27738   001CC6  0105               	movlb	5	; () banked
 27739   001CC8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27740   001CCA  A4D8               	btfss	status,2,c
 27741   001CCC  EF6A  F00E         	goto	u7341
 27742   001CD0  EF6C  F00E         	goto	u7340
 27743   001CD4                     u7341:
 27744   001CD4  EF90  F00B         	goto	l9832
 27745   001CD8                     u7340:
 27746   001CD8                     
 27747                           ; BSR set to: 5
 27748   001CD8  EE20 F003          	lfsr	2,3
 27749   001CDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27750   001CDE  26D9               	addwf	fsr2l,f,c
 27751   001CE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27752   001CE2  22DA               	addwfc	fsr2h,f,c
 27753   001CE4  518F               	movf	_nn& (0+255),w,b
 27754   001CE6  18DE               	xorwf	postinc2,w,c
 27755   001CE8  B4D8               	btfsc	status,2,c
 27756   001CEA  EF79  F00E         	goto	u7351
 27757   001CEE  EF7B  F00E         	goto	u7350
 27758   001CF2                     u7351:
 27759   001CF2  EF7D  F00E         	goto	l10048
 27760   001CF6                     u7350:
 27761   001CF6  EF90  F00B         	goto	l9832
 27762   001CFA                     l10048:
 27763                           
 27764                           ; BSR set to: 5
 27765                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 27766   001CFA  EE20 F004          	lfsr	2,4
 27767   001CFE  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27768   001D00  26D9               	addwf	fsr2l,f,c
 27769   001D02  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27770   001D04  22DA               	addwfc	fsr2h,f,c
 27771   001D06  50DF               	movf	indf2,w,c
 27772   001D08  ECA6  F038         	call	_doNenrd
 27773   001D0C  EF90  F00B         	goto	l9832
 27774   001D10                     l10054:
 27775                           
 27776                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 27777   001D10  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27778   001D14  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27779   001D18  0E05               	movlw	5
 27780   001D1A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27781   001D1C  0E00               	movlw	0
 27782   001D1E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27783   001D20  EC65  F038         	call	_teachCheckLen	;wreg free
 27784   001D24  06E8               	decf	wreg,f,c
 27785   001D26  A4D8               	btfss	status,2,c
 27786   001D28  EF98  F00E         	goto	u7361
 27787   001D2C  EF9A  F00E         	goto	u7360
 27788   001D30                     u7361:
 27789   001D30  EF9C  F00E         	goto	l10060
 27790   001D34                     u7360:
 27791   001D34  EF90  F00B         	goto	l9832
 27792   001D38                     l10060:
 27793                           
 27794                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27795   001D38  EE20 F002          	lfsr	2,2
 27796   001D3C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27797   001D3E  26D9               	addwf	fsr2l,f,c
 27798   001D40  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27799   001D42  22DA               	addwfc	fsr2h,f,c
 27800   001D44  50DE               	movf	postinc2,w,c
 27801   001D46  0105               	movlb	5	; () banked
 27802   001D48  1990               	xorwf	(_nn+1)& (0+255),w,b
 27803   001D4A  A4D8               	btfss	status,2,c
 27804   001D4C  EFAA  F00E         	goto	u7371
 27805   001D50  EFAC  F00E         	goto	u7370
 27806   001D54                     u7371:
 27807   001D54  EF90  F00B         	goto	l9832
 27808   001D58                     u7370:
 27809   001D58                     
 27810                           ; BSR set to: 5
 27811   001D58  EE20 F003          	lfsr	2,3
 27812   001D5C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27813   001D5E  26D9               	addwf	fsr2l,f,c
 27814   001D60  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27815   001D62  22DA               	addwfc	fsr2h,f,c
 27816   001D64  518F               	movf	_nn& (0+255),w,b
 27817   001D66  18DE               	xorwf	postinc2,w,c
 27818   001D68  B4D8               	btfsc	status,2,c
 27819   001D6A  EFB9  F00E         	goto	u7381
 27820   001D6E  EFBB  F00E         	goto	u7380
 27821   001D72                     u7381:
 27822   001D72  EFBD  F00E         	goto	l10068
 27823   001D76                     u7380:
 27824   001D76  EF90  F00B         	goto	l9832
 27825   001D7A                     l10068:
 27826                           
 27827                           ; BSR set to: 5
 27828                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 27829   001D7A  EE20 F005          	lfsr	2,5
 27830   001D7E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27831   001D80  26D9               	addwf	fsr2l,f,c
 27832   001D82  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27833   001D84  22DA               	addwfc	fsr2h,f,c
 27834   001D86  50DF               	movf	indf2,w,c
 27835   001D88  6E2C               	movwf	doReval@evNum^(0+1280),c
 27836   001D8A  EE20 F004          	lfsr	2,4
 27837   001D8E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27838   001D90  26D9               	addwf	fsr2l,f,c
 27839   001D92  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27840   001D94  22DA               	addwfc	fsr2h,f,c
 27841   001D96  50DF               	movf	indf2,w,c
 27842   001D98  ECAA  F02D         	call	_doReval
 27843   001D9C  EF90  F00B         	goto	l9832
 27844   001DA0                     l10074:
 27845                           
 27846                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 27847   001DA0  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27848   001DA4  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27849   001DA8  0E08               	movlw	8
 27850   001DAA  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27851   001DAC  0E01               	movlw	1
 27852   001DAE  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27853   001DB0  EC65  F038         	call	_teachCheckLen	;wreg free
 27854   001DB4  06E8               	decf	wreg,f,c
 27855   001DB6  A4D8               	btfss	status,2,c
 27856   001DB8  EFE0  F00E         	goto	u7391
 27857   001DBC  EFE2  F00E         	goto	u7390
 27858   001DC0                     u7391:
 27859   001DC0  EFE4  F00E         	goto	l10080
 27860   001DC4                     u7390:
 27861   001DC4  EF90  F00B         	goto	l9832
 27862   001DC8                     l10080:
 27863                           
 27864                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 27865   001DC8  EE20 F003          	lfsr	2,3
 27866   001DCC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27867   001DCE  26D9               	addwf	fsr2l,f,c
 27868   001DD0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27869   001DD2  22DA               	addwfc	fsr2h,f,c
 27870   001DD4  50DF               	movf	indf2,w,c
 27871   001DD6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27872   001DD8  EE20 F002          	lfsr	2,2
 27873   001DDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27874   001DDE  26D9               	addwf	fsr2l,f,c
 27875   001DE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27876   001DE2  22DA               	addwfc	fsr2h,f,c
 27877   001DE4  50DF               	movf	indf2,w,c
 27878   001DE6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27879   001DE8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27880   001DEA  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27881   001DEC  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27882   001DF0  EE20 F005          	lfsr	2,5
 27883   001DF4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27884   001DF6  26D9               	addwf	fsr2l,f,c
 27885   001DF8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27886   001DFA  22DA               	addwfc	fsr2h,f,c
 27887   001DFC  50DF               	movf	indf2,w,c
 27888   001DFE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27889   001E00  EE20 F004          	lfsr	2,4
 27890   001E04  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27891   001E06  26D9               	addwf	fsr2l,f,c
 27892   001E08  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27893   001E0A  22DA               	addwfc	fsr2h,f,c
 27894   001E0C  50DF               	movf	indf2,w,c
 27895   001E0E  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27896   001E10  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27897   001E12  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27898   001E14  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27899   001E18  EE20 F007          	lfsr	2,7
 27900   001E1C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27901   001E1E  26D9               	addwf	fsr2l,f,c
 27902   001E20  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27903   001E22  22DA               	addwfc	fsr2h,f,c
 27904   001E24  50DF               	movf	indf2,w,c
 27905   001E26  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27906   001E28  EE20 F008          	lfsr	2,8
 27907   001E2C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27908   001E2E  26D9               	addwf	fsr2l,f,c
 27909   001E30  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27910   001E32  22DA               	addwfc	fsr2h,f,c
 27911   001E34  50DF               	movf	indf2,w,c
 27912   001E36  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27913   001E38  EC6A  F02F         	call	_doEvlrn	;wreg free
 27914   001E3C  EF90  F00B         	goto	l9832
 27915   001E40                     l10088:
 27916   001E40  EE20 F001          	lfsr	2,1
 27917   001E44  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27918   001E46  26D9               	addwf	fsr2l,f,c
 27919   001E48  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27920   001E4A  22DA               	addwfc	fsr2h,f,c
 27921   001E4C  50DF               	movf	indf2,w,c
 27922   001E4E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27923   001E50  6A57               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 27924                           
 27925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27926                           ; Switch size 1, requested type "simple"
 27927                           ; Number of cases is 1, Range of values is 0 to 0
 27928                           ; switch strategies available:
 27929                           ; Name         Instructions Cycles
 27930                           ; simple_byte            4     3 (average)
 27931                           ;	Chosen strategy is simple_byte
 27932   001E52  5057               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 27933   001E54  0A00               	xorlw	0	; case 0
 27934   001E56  B4D8               	btfsc	status,2,c
 27935   001E58  EF30  F00F         	goto	l11672
 27936   001E5C  EF0E  F00C         	goto	l9878
 27937   001E60                     l11672:
 27938                           
 27939                           ; Switch size 1, requested type "simple"
 27940                           ; Number of cases is 13, Range of values is 83 to 245
 27941                           ; switch strategies available:
 27942                           ; Name         Instructions Cycles
 27943                           ; simple_byte           40    21 (average)
 27944                           ;	Chosen strategy is simple_byte
 27945   001E60  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27946   001E62  0A53               	xorlw	83	; case 83
 27947   001E64  B4D8               	btfsc	status,2,c
 27948   001E66  EF7E  F00B         	goto	l9830
 27949   001E6A  0A07               	xorlw	7	; case 84
 27950   001E6C  B4D8               	btfsc	status,2,c
 27951   001E6E  EF10  F00D         	goto	l9932
 27952   001E72  0A01               	xorlw	1	; case 85
 27953   001E74  B4D8               	btfsc	status,2,c
 27954   001E76  EF45  F00D         	goto	l9952
 27955   001E7A  0A03               	xorlw	3	; case 86
 27956   001E7C  B4D8               	btfsc	status,2,c
 27957   001E7E  EFD6  F00D         	goto	l9994
 27958   001E82  0A01               	xorlw	1	; case 87
 27959   001E84  B4D8               	btfsc	status,2,c
 27960   001E86  EF9D  F00D         	goto	l9974
 27961   001E8A  0A0F               	xorlw	15	; case 88
 27962   001E8C  B4D8               	btfsc	status,2,c
 27963   001E8E  EF0F  F00E         	goto	l10014
 27964   001E92  0A2A               	xorlw	42	; case 114
 27965   001E94  B4D8               	btfsc	status,2,c
 27966   001E96  EF48  F00E         	goto	l10034
 27967   001E9A  0A04               	xorlw	4	; case 118
 27968   001E9C  B4D8               	btfsc	status,2,c
 27969   001E9E  EFB8  F00B         	goto	l9848
 27970   001EA2  0AE3               	xorlw	227	; case 149
 27971   001EA4  B4D8               	btfsc	status,2,c
 27972   001EA6  EF74  F00C         	goto	l9900
 27973   001EAA  0A09               	xorlw	9	; case 156
 27974   001EAC  B4D8               	btfsc	status,2,c
 27975   001EAE  EF88  F00E         	goto	l10054
 27976   001EB2  0A2E               	xorlw	46	; case 178
 27977   001EB4  B4D8               	btfsc	status,2,c
 27978   001EB6  EFBE  F00C         	goto	l9916
 27979   001EBA  0A60               	xorlw	96	; case 210
 27980   001EBC  B4D8               	btfsc	status,2,c
 27981   001EBE  EF11  F00C         	goto	l9882
 27982   001EC2  0A27               	xorlw	39	; case 245
 27983   001EC4  B4D8               	btfsc	status,2,c
 27984   001EC6  EFD0  F00E         	goto	l10074
 27985   001ECA  EF0E  F00C         	goto	l9878
 27986   001ECE                     l951:
 27987   001ECE  0012               	return		;funcret
 27988   001ED0                     __end_of_teachProcessMessage:
 27989                           	callstack 0
 27990                           
 27991 ;; *************** function _teachCheckLen *****************
 27992 ;; Defined at:
 27993 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27994 ;; Parameters:    Size  Location     Type
 27995 ;;  m               2   48[COMRAM] PTR struct Message
 27996 ;;		 -> poll@m(9), 
 27997 ;;  needed          1   50[COMRAM] unsigned char 
 27998 ;;  learn           1   51[COMRAM] unsigned char 
 27999 ;; Auto vars:     Size  Location     Type
 28000 ;;		None
 28001 ;; Return value:  Size  Location     Type
 28002 ;;                  1    wreg      enum E23340
 28003 ;; Registers used:
 28004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28005 ;; Tracked objects:
 28006 ;;		On entry : 0/0
 28007 ;;		On exit  : 0/0
 28008 ;;		Unchanged: 0/0
 28009 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28014 ;;Total ram usage:        5 bytes
 28015 ;; Hardware stack levels used: 1
 28016 ;; Hardware stack levels required when called: 7
 28017 ;; This function calls:
 28018 ;;		_checkLen
 28019 ;;		_sendMessage5
 28020 ;; This function is called by:
 28021 ;;		_teachProcessMessage
 28022 ;; This function uses a non-reentrant model
 28023 ;;
 28024                           
 28025                           	psect	text23
 28026   0070CA                     __ptext23:
 28027                           	callstack 0
 28028   0070CA                     _teachCheckLen:
 28029                           	callstack 117
 28030   0070CA                     
 28031                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 28032   0070CA  5034               	movf	teachCheckLen@learn^(0+1280),w,c
 28033   0070CC  B4D8               	btfsc	status,2,c
 28034   0070CE  EF6B  F038         	goto	u6021
 28035   0070D2  EF6D  F038         	goto	u6020
 28036   0070D6                     u6021:
 28037   0070D6  EF9B  F038         	goto	l8722
 28038   0070DA                     u6020:
 28039   0070DA                     
 28040                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 28041   0070DA  C531  F4D9         	movff	teachCheckLen@m,fsr2l
 28042   0070DE  C532  F4DA         	movff	teachCheckLen@m+1,fsr2h
 28043   0070E2  5033               	movf	teachCheckLen@needed^(0+1280),w,c
 28044   0070E4  5CDE               	subwf	postinc2,w,c
 28045   0070E6  B0D8               	btfsc	status,0,c
 28046   0070E8  EF78  F038         	goto	u6031
 28047   0070EC  EF7A  F038         	goto	u6030
 28048   0070F0                     u6031:
 28049   0070F0  EF98  F038         	goto	l8718
 28050   0070F4                     u6030:
 28051   0070F4                     
 28052                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 28053   0070F4  0105               	movlb	5	; () banked
 28054   0070F6  A1A4               	btfss	_mode_flags& (0+255),0,b
 28055   0070F8  EF80  F038         	goto	u6041
 28056   0070FC  EF82  F038         	goto	u6040
 28057   007100                     u6041:
 28058   007100  EF95  F038         	goto	l8714
 28059   007104                     u6040:
 28060   007104                     
 28061                           ; BSR set to: 5
 28062                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 28063   007104  C590  F526         	movff	_nn+1,sendMessage5@data1
 28064   007108  C58F  F527         	movff	_nn,sendMessage5@data2
 28065   00710C  EE20 F001          	lfsr	2,1
 28066   007110  5031               	movf	teachCheckLen@m^(0+1280),w,c
 28067   007112  26D9               	addwf	fsr2l,f,c
 28068   007114  5032               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 28069   007116  22DA               	addwfc	fsr2h,f,c
 28070   007118  50DF               	movf	indf2,w,c
 28071   00711A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28072   00711C  0E04               	movlw	4
 28073   00711E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28074   007120  0E01               	movlw	1
 28075   007122  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28076   007124  0EAF               	movlw	175
 28077   007126  EC9B  F040         	call	_sendMessage5
 28078   00712A                     l8714:
 28079                           
 28080                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 28081   00712A  0E01               	movlw	1
 28082   00712C  EFA5  F038         	goto	l1015
 28083   007130                     l8718:
 28084                           
 28085                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 28086   007130  0E00               	movlw	0
 28087   007132  EFA5  F038         	goto	l1015
 28088   007136                     l8722:
 28089                           
 28090                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 28091   007136  C531  F52C         	movff	teachCheckLen@m,checkLen@m
 28092   00713A  C532  F52D         	movff	teachCheckLen@m+1,checkLen@m+1
 28093   00713E  C533  F52E         	movff	teachCheckLen@needed,checkLen@needed
 28094   007142  0E04               	movlw	4
 28095   007144  6E2F               	movwf	checkLen@service^(0+1280),c
 28096   007146  EC66  F034         	call	_checkLen	;wreg free
 28097   00714A                     l1015:
 28098   00714A  0012               	return		;funcret
 28099   00714C                     __end_of_teachCheckLen:
 28100                           	callstack 0
 28101                           
 28102 ;; *************** function _doRqevn *****************
 28103 ;; Defined at:
 28104 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28105 ;; Parameters:    Size  Location     Type
 28106 ;;		None
 28107 ;; Auto vars:     Size  Location     Type
 28108 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28109 ;;  i               1   44[COMRAM] unsigned char 
 28110 ;;  count           1   43[COMRAM] unsigned char 
 28111 ;; Return value:  Size  Location     Type
 28112 ;;                  1    wreg      void 
 28113 ;; Registers used:
 28114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28115 ;; Tracked objects:
 28116 ;;		On entry : 0/0
 28117 ;;		On exit  : 0/0
 28118 ;;		Unchanged: 0/0
 28119 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28123 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28124 ;;Total ram usage:        4 bytes
 28125 ;; Hardware stack levels used: 1
 28126 ;; Hardware stack levels required when called: 6
 28127 ;; This function calls:
 28128 ;;		_getEN
 28129 ;;		_sendMessage3
 28130 ;; This function is called by:
 28131 ;;		_teachProcessMessage
 28132 ;; This function uses a non-reentrant model
 28133 ;;
 28134                           
 28135                           	psect	text24
 28136   007B76                     __ptext24:
 28137                           	callstack 0
 28138   007B76                     _doRqevn:
 28139                           	callstack 118
 28140   007B76                     
 28141                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 28142   007B76  6A2C               	clrf	doRqevn@count^(0+1280),c
 28143                           
 28144                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<255; i++) {
 28145   007B78  6A2D               	clrf	doRqevn@i^(0+1280),c
 28146   007B7A                     l8830:
 28147                           
 28148                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 28149   007B7A  502D               	movf	doRqevn@i^(0+1280),w,c
 28150   007B7C  ECC1  F033         	call	_getEN
 28151   007B80  C50D  F52A         	movff	?_getEN,doRqevn@eventNumber
 28152   007B84  C50E  F52B         	movff	?_getEN+1,doRqevn@eventNumber+1
 28153   007B88                     
 28154                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 28155   007B88  502A               	movf	doRqevn@eventNumber^(0+1280),w,c
 28156   007B8A  102B               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 28157   007B8C  B4D8               	btfsc	status,2,c
 28158   007B8E  EFCB  F03D         	goto	u6151
 28159   007B92  EFCD  F03D         	goto	u6150
 28160   007B96                     u6151:
 28161   007B96  EFCE  F03D         	goto	l1055
 28162   007B9A                     u6150:
 28163   007B9A                     
 28164                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 28165   007B9A  2A2C               	incf	doRqevn@count^(0+1280),f,c
 28166   007B9C                     l1055:
 28167                           
 28168                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 28169   007B9C  2A2D               	incf	doRqevn@i^(0+1280),f,c
 28170   007B9E  282D               	incf	doRqevn@i^(0+1280),w,c
 28171   007BA0  A4D8               	btfss	status,2,c
 28172   007BA2  EFD5  F03D         	goto	u6161
 28173   007BA6  EFD7  F03D         	goto	u6160
 28174   007BAA                     u6161:
 28175   007BAA  EFBD  F03D         	goto	l8830
 28176   007BAE                     u6160:
 28177   007BAE                     
 28178                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28179   007BAE  C590  F526         	movff	_nn+1,sendMessage3@data1
 28180   007BB2  C58F  F527         	movff	_nn,sendMessage3@data2
 28181   007BB6  C52C  F528         	movff	doRqevn@count,sendMessage3@data3
 28182   007BBA  0E74               	movlw	116
 28183   007BBC  EC5C  F040         	call	_sendMessage3
 28184   007BC0  0012               	return		;funcret
 28185   007BC2                     __end_of_doRqevn:
 28186                           	callstack 0
 28187                           
 28188 ;; *************** function _doReval *****************
 28189 ;; Defined at:
 28190 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28191 ;; Parameters:    Size  Location     Type
 28192 ;;  enNum           1    wreg     unsigned char 
 28193 ;;  evNum           1   43[COMRAM] unsigned char 
 28194 ;; Auto vars:     Size  Location     Type
 28195 ;;  enNum           1   45[COMRAM] unsigned char 
 28196 ;;  evVal           2   47[COMRAM] int 
 28197 ;;  tableIndex      1   46[COMRAM] unsigned char 
 28198 ;;  evIndex         1   44[COMRAM] unsigned char 
 28199 ;; Return value:  Size  Location     Type
 28200 ;;                  1    wreg      void 
 28201 ;; Registers used:
 28202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28203 ;; Tracked objects:
 28204 ;;		On entry : 0/0
 28205 ;;		On exit  : 0/0
 28206 ;;		Unchanged: 0/0
 28207 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28208 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28209 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28212 ;;Total ram usage:        6 bytes
 28213 ;; Hardware stack levels used: 1
 28214 ;; Hardware stack levels required when called: 6
 28215 ;; This function calls:
 28216 ;;		_evtIdxToTableIndex
 28217 ;;		_findServiceIndex
 28218 ;;		_getEv
 28219 ;;		_sendMessage3
 28220 ;;		_sendMessage5
 28221 ;;		_startTimedResponse
 28222 ;; This function is called by:
 28223 ;;		_teachProcessMessage
 28224 ;; This function uses a non-reentrant model
 28225 ;;
 28226                           
 28227                           	psect	text25
 28228   005B54                     __ptext25:
 28229                           	callstack 0
 28230   005B54                     _doReval:
 28231                           	callstack 118
 28232                           
 28233                           ;incstack = 0
 28234                           ;doReval@enNum stored from wreg
 28235   005B54  6E2E               	movwf	doReval@enNum^(0+1280),c
 28236   005B56                     
 28237                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 28238   005B56  502E               	movf	doReval@enNum^(0+1280),w,c
 28239   005B58  EC9F  F041         	call	_evtIdxToTableIndex
 28240   005B5C  6E2F               	movwf	doReval@tableIndex^(0+1280),c
 28241   005B5E                     
 28242                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 255) {
 28243   005B5E  282F               	incf	doReval@tableIndex^(0+1280),w,c
 28244   005B60  A4D8               	btfss	status,2,c
 28245   005B62  EFB5  F02D         	goto	u6181
 28246   005B66  EFB7  F02D         	goto	u6180
 28247   005B6A                     u6181:
 28248   005B6A  EFC2  F02D         	goto	l8860
 28249   005B6E                     u6180:
 28250   005B6E                     
 28251                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28252   005B6E  C590  F526         	movff	_nn+1,sendMessage3@data1
 28253   005B72  C58F  F527         	movff	_nn,sendMessage3@data2
 28254   005B76  0E06               	movlw	6
 28255   005B78  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28256   005B7A  0E6F               	movlw	111
 28257   005B7C  EC5C  F040         	call	_sendMessage3
 28258   005B80  EF1E  F02E         	goto	l1068
 28259   005B84                     l8860:
 28260                           
 28261                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 28262   005B84  042C               	decf	doReval@evNum^(0+1280),w,c
 28263   005B86  6E2D               	movwf	doReval@evIndex^(0+1280),c
 28264   005B88                     
 28265                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 28266   005B88  502C               	movf	doReval@evNum^(0+1280),w,c
 28267   005B8A  A4D8               	btfss	status,2,c
 28268   005B8C  EFCA  F02D         	goto	u6191
 28269   005B90  EFCC  F02D         	goto	u6190
 28270   005B94                     u6191:
 28271   005B94  EFE7  F02D         	goto	l8872
 28272   005B98                     u6190:
 28273   005B98                     
 28274                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 248;
 28275   005B98  0E00               	movlw	0
 28276   005B9A  6E31               	movwf	(doReval@evVal+1)^(0+1280),c
 28277   005B9C  0EF8               	movlw	248
 28278   005B9E  6E30               	movwf	doReval@evVal^(0+1280),c
 28279   005BA0                     
 28280                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 28281   005BA0  0105               	movlb	5	; () banked
 28282   005BA2  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28283   005BA4  EFD6  F02D         	goto	u6201
 28284   005BA8  EFD8  F02D         	goto	u6200
 28285   005BAC                     u6201:
 28286   005BAC  EFF0  F02D         	goto	l8874
 28287   005BB0                     u6200:
 28288   005BB0                     
 28289                           ; BSR set to: 5
 28290                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 28291   005BB0  0EB5               	movlw	181
 28292   005BB2  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28293   005BB4                     
 28294                           ; BSR set to: 5
 28295                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28296   005BB4  0E04               	movlw	4
 28297   005BB6  EC12  F037         	call	_findServiceIndex
 28298   005BBA  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28299   005BBC  0EFE               	movlw	low _reqevCallback
 28300   005BBE  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28301   005BC0  0E5D               	movlw	high _reqevCallback
 28302   005BC2  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28303   005BC4  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28304   005BC6  EC94  F03C         	call	_startTimedResponse
 28305   005BCA  EFF0  F02D         	goto	l8874
 28306   005BCE                     l8872:
 28307                           
 28308                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 28309   005BCE  C52D  F50D         	movff	doReval@evIndex,getEv@evNum
 28310   005BD2  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28311   005BD4  ECB6  F034         	call	_getEv
 28312   005BD8  C50D  F530         	movff	?_getEv,doReval@evVal
 28313   005BDC  C50E  F531         	movff	?_getEv+1,doReval@evVal+1
 28314   005BE0                     l8874:
 28315                           
 28316                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 28317   005BE0  BE31               	btfsc	(doReval@evVal+1)^(0+1280),7,c
 28318   005BE2  EFF7  F02D         	goto	u6210
 28319   005BE6  EFF5  F02D         	goto	u6211
 28320   005BEA                     u6211:
 28321   005BEA  EF11  F02E         	goto	l8880
 28322   005BEE                     u6210:
 28323   005BEE                     
 28324                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28325   005BEE  C590  F526         	movff	_nn+1,sendMessage3@data1
 28326   005BF2  C58F  F527         	movff	_nn,sendMessage3@data2
 28327   005BF6  5030               	movf	doReval@evVal^(0+1280),w,c
 28328   005BF8  0800               	sublw	0
 28329   005BFA  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28330   005BFC  0E6F               	movlw	111
 28331   005BFE  EC5C  F040         	call	_sendMessage3
 28332                           
 28333                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28334   005C02  C590  F526         	movff	_nn+1,sendMessage5@data1
 28335   005C06  C58F  F527         	movff	_nn,sendMessage5@data2
 28336   005C0A  0E9C               	movlw	156
 28337   005C0C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28338   005C0E  0E04               	movlw	4
 28339   005C10  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28340   005C12  5030               	movf	doReval@evVal^(0+1280),w,c
 28341   005C14  0800               	sublw	0
 28342   005C16  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28343   005C18  0EAF               	movlw	175
 28344   005C1A  EC9B  F040         	call	_sendMessage5
 28345   005C1E  EF1E  F02E         	goto	l1068
 28346   005C22                     l8880:
 28347                           
 28348                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 28349   005C22  C590  F526         	movff	_nn+1,sendMessage5@data1
 28350   005C26  C58F  F527         	movff	_nn,sendMessage5@data2
 28351   005C2A  C52E  F528         	movff	doReval@enNum,sendMessage5@data3
 28352   005C2E  C52C  F529         	movff	doReval@evNum,sendMessage5@data4
 28353   005C32  C530  F52A         	movff	doReval@evVal,sendMessage5@data5
 28354   005C36  0EB5               	movlw	181
 28355   005C38  EC9B  F040         	call	_sendMessage5
 28356   005C3C                     l1068:
 28357   005C3C  0012               	return		;funcret
 28358   005C3E                     __end_of_doReval:
 28359                           	callstack 0
 28360                           
 28361 ;; *************** function _doReqev *****************
 28362 ;; Defined at:
 28363 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28364 ;; Parameters:    Size  Location     Type
 28365 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 28366 ;;  eventNumber     2   48[COMRAM] unsigned short 
 28367 ;;  evNum           1   50[COMRAM] unsigned char 
 28368 ;; Auto vars:     Size  Location     Type
 28369 ;;  evVal           2   51[COMRAM] short 
 28370 ;;  tableIndex      1   53[COMRAM] unsigned char 
 28371 ;; Return value:  Size  Location     Type
 28372 ;;                  1    wreg      void 
 28373 ;; Registers used:
 28374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28375 ;; Tracked objects:
 28376 ;;		On entry : 0/0
 28377 ;;		On exit  : 0/0
 28378 ;;		Unchanged: 0/0
 28379 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28380 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28381 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28384 ;;Total ram usage:        8 bytes
 28385 ;; Hardware stack levels used: 1
 28386 ;; Hardware stack levels required when called: 6
 28387 ;; This function calls:
 28388 ;;		_findEvent
 28389 ;;		_findServiceIndex
 28390 ;;		_getEv
 28391 ;;		_numEv
 28392 ;;		_sendMessage3
 28393 ;;		_sendMessage5
 28394 ;;		_sendMessage6
 28395 ;;		_startTimedResponse
 28396 ;; This function is called by:
 28397 ;;		_teachProcessMessage
 28398 ;; This function uses a non-reentrant model
 28399 ;;
 28400                           
 28401                           	psect	text26
 28402   004B18                     __ptext26:
 28403                           	callstack 0
 28404   004B18                     _doReqev:
 28405                           	callstack 118
 28406   004B18                     
 28407                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 28408   004B18  C52F  F522         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 28409   004B1C  C530  F523         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 28410   004B20  C531  F524         	movff	doReqev@eventNumber,findEvent@eventNumber
 28411   004B24  C532  F525         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 28412   004B28  EC13  F032         	call	_findEvent	;wreg free
 28413   004B2C  6E36               	movwf	doReqev@tableIndex^(0+1280),c
 28414   004B2E                     
 28415                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 28416   004B2E  2836               	incf	doReqev@tableIndex^(0+1280),w,c
 28417   004B30  A4D8               	btfss	status,2,c
 28418   004B32  EF9D  F025         	goto	u6081
 28419   004B36  EF9F  F025         	goto	u6080
 28420   004B3A                     u6081:
 28421   004B3A  EFB7  F025         	goto	l8768
 28422   004B3E                     u6080:
 28423   004B3E                     
 28424                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 28425   004B3E  C590  F526         	movff	_nn+1,sendMessage3@data1
 28426   004B42  C58F  F527         	movff	_nn,sendMessage3@data2
 28427   004B46  0E07               	movlw	7
 28428   004B48  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28429   004B4A  0E6F               	movlw	111
 28430   004B4C  EC5C  F040         	call	_sendMessage3
 28431                           
 28432                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 28433   004B50  C590  F526         	movff	_nn+1,sendMessage5@data1
 28434   004B54  C58F  F527         	movff	_nn,sendMessage5@data2
 28435   004B58  0EB2               	movlw	178
 28436   004B5A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28437   004B5C  0E04               	movlw	4
 28438   004B5E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28439   004B60  0E07               	movlw	7
 28440   004B62  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28441   004B64  0EAF               	movlw	175
 28442   004B66  EC9B  F040         	call	_sendMessage5
 28443   004B6A  EF45  F026         	goto	l1080
 28444   004B6E                     l8768:
 28445                           
 28446                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 252) {
 28447   004B6E  0EFC               	movlw	252
 28448   004B70  6433               	cpfsgt	doReqev@evNum^(0+1280),c
 28449   004B72  EFBD  F025         	goto	u6091
 28450   004B76  EFBF  F025         	goto	u6090
 28451   004B7A                     u6091:
 28452   004B7A  EFD7  F025         	goto	l8774
 28453   004B7E                     u6090:
 28454   004B7E                     
 28455                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28456   004B7E  C590  F526         	movff	_nn+1,sendMessage3@data1
 28457   004B82  C58F  F527         	movff	_nn,sendMessage3@data2
 28458   004B86  0E06               	movlw	6
 28459   004B88  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28460   004B8A  0E6F               	movlw	111
 28461   004B8C  EC5C  F040         	call	_sendMessage3
 28462                           
 28463                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 28464   004B90  C590  F526         	movff	_nn+1,sendMessage5@data1
 28465   004B94  C58F  F527         	movff	_nn,sendMessage5@data2
 28466   004B98  0EB2               	movlw	178
 28467   004B9A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28468   004B9C  0E04               	movlw	4
 28469   004B9E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28470   004BA0  0E06               	movlw	6
 28471   004BA2  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28472   004BA4  0EAF               	movlw	175
 28473   004BA6  EC9B  F040         	call	_sendMessage5
 28474   004BAA  EF45  F026         	goto	l1080
 28475   004BAE                     l8774:
 28476                           
 28477                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 28478   004BAE  5033               	movf	doReqev@evNum^(0+1280),w,c
 28479   004BB0  A4D8               	btfss	status,2,c
 28480   004BB2  EFDD  F025         	goto	u6101
 28481   004BB6  EFDF  F025         	goto	u6100
 28482   004BBA                     u6101:
 28483   004BBA  EF0C  F026         	goto	l8788
 28484   004BBE                     u6100:
 28485   004BBE                     
 28486                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 248;
 28487   004BBE  0E00               	movlw	0
 28488   004BC0  6E35               	movwf	(doReqev@evVal+1)^(0+1280),c
 28489   004BC2  0EF8               	movlw	248
 28490   004BC4  6E34               	movwf	doReqev@evVal^(0+1280),c
 28491   004BC6                     
 28492                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 28493   004BC6  0105               	movlb	5	; () banked
 28494   004BC8  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28495   004BCA  EFE9  F025         	goto	u6111
 28496   004BCE  EFEB  F025         	goto	u6110
 28497   004BD2                     u6111:
 28498   004BD2  EF15  F026         	goto	l8790
 28499   004BD6                     u6110:
 28500   004BD6                     
 28501                           ; BSR set to: 5
 28502                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 28503   004BD6  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28504   004BD8  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28505   004BDA  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28506   004BDE  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28507   004BE0  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28508   004BE2  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28509   004BE6  0E00               	movlw	0
 28510   004BE8  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 28511   004BEA  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28512   004BEC  ECB1  F041         	call	_numEv
 28513   004BF0  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 28514   004BF2  0ED3               	movlw	211
 28515   004BF4  EC32  F040         	call	_sendMessage6
 28516   004BF8                     
 28517                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 28518   004BF8  0ED3               	movlw	211
 28519   004BFA  0105               	movlb	5	; () banked
 28520   004BFC  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28521   004BFE                     
 28522                           ; BSR set to: 5
 28523                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28524   004BFE  0E04               	movlw	4
 28525   004C00  EC12  F037         	call	_findServiceIndex
 28526   004C04  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28527   004C06  0EFE               	movlw	low _reqevCallback
 28528   004C08  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28529   004C0A  0E5D               	movlw	high _reqevCallback
 28530   004C0C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28531   004C0E  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28532   004C10  EC94  F03C         	call	_startTimedResponse
 28533   004C14  EF45  F026         	goto	l1080
 28534   004C18                     l8788:
 28535                           
 28536                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 28537   004C18  0433               	decf	doReqev@evNum^(0+1280),w,c
 28538   004C1A  6E0D               	movwf	getEv@evNum^(0+1280),c
 28539   004C1C  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28540   004C1E  ECB6  F034         	call	_getEv
 28541   004C22  C50D  F534         	movff	?_getEv,doReqev@evVal
 28542   004C26  C50E  F535         	movff	?_getEv+1,doReqev@evVal+1
 28543   004C2A                     l8790:
 28544                           
 28545                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 28546   004C2A  BE35               	btfsc	(doReqev@evVal+1)^(0+1280),7,c
 28547   004C2C  EF1C  F026         	goto	u6120
 28548   004C30  EF1A  F026         	goto	u6121
 28549   004C34                     u6121:
 28550   004C34  EF36  F026         	goto	l8796
 28551   004C38                     u6120:
 28552   004C38                     
 28553                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28554   004C38  C590  F526         	movff	_nn+1,sendMessage3@data1
 28555   004C3C  C58F  F527         	movff	_nn,sendMessage3@data2
 28556   004C40  5034               	movf	doReqev@evVal^(0+1280),w,c
 28557   004C42  0800               	sublw	0
 28558   004C44  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28559   004C46  0E6F               	movlw	111
 28560   004C48  EC5C  F040         	call	_sendMessage3
 28561                           
 28562                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28563   004C4C  C590  F526         	movff	_nn+1,sendMessage5@data1
 28564   004C50  C58F  F527         	movff	_nn,sendMessage5@data2
 28565   004C54  0EB2               	movlw	178
 28566   004C56  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28567   004C58  0E04               	movlw	4
 28568   004C5A  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28569   004C5C  5034               	movf	doReqev@evVal^(0+1280),w,c
 28570   004C5E  0800               	sublw	0
 28571   004C60  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28572   004C62  0EAF               	movlw	175
 28573   004C64  EC9B  F040         	call	_sendMessage5
 28574   004C68  EF45  F026         	goto	l1080
 28575   004C6C                     l8796:
 28576                           
 28577                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 28578   004C6C  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28579   004C6E  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28580   004C70  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28581   004C74  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28582   004C76  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28583   004C78  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28584   004C7C  C533  F52A         	movff	doReqev@evNum,sendMessage6@data5
 28585   004C80  C534  F52B         	movff	doReqev@evVal,sendMessage6@data6
 28586   004C84  0ED3               	movlw	211
 28587   004C86  EC32  F040         	call	_sendMessage6
 28588   004C8A                     l1080:
 28589   004C8A  0012               	return		;funcret
 28590   004C8C                     __end_of_doReqev:
 28591                           	callstack 0
 28592                           
 28593 ;; *************** function _doNnevn *****************
 28594 ;; Defined at:
 28595 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28596 ;; Parameters:    Size  Location     Type
 28597 ;;		None
 28598 ;; Auto vars:     Size  Location     Type
 28599 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28600 ;;  i               1   44[COMRAM] unsigned char 
 28601 ;;  count           1   43[COMRAM] unsigned char 
 28602 ;; Return value:  Size  Location     Type
 28603 ;;                  1    wreg      void 
 28604 ;; Registers used:
 28605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28606 ;; Tracked objects:
 28607 ;;		On entry : 0/0
 28608 ;;		On exit  : 0/0
 28609 ;;		Unchanged: 0/0
 28610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28612 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28615 ;;Total ram usage:        4 bytes
 28616 ;; Hardware stack levels used: 1
 28617 ;; Hardware stack levels required when called: 6
 28618 ;; This function calls:
 28619 ;;		_getEN
 28620 ;;		_sendMessage3
 28621 ;; This function is called by:
 28622 ;;		_teachProcessMessage
 28623 ;; This function uses a non-reentrant model
 28624 ;;
 28625                           
 28626                           	psect	text27
 28627   007BC2                     __ptext27:
 28628                           	callstack 0
 28629   007BC2                     _doNnevn:
 28630                           	callstack 118
 28631   007BC2                     
 28632                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 28633   007BC2  6A2C               	clrf	doNnevn@count^(0+1280),c
 28634                           
 28635                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<255; i++) {
 28636   007BC4  6A2D               	clrf	doNnevn@i^(0+1280),c
 28637   007BC6                     l8814:
 28638                           
 28639                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 28640   007BC6  502D               	movf	doNnevn@i^(0+1280),w,c
 28641   007BC8  ECC1  F033         	call	_getEN
 28642   007BCC  C50D  F52A         	movff	?_getEN,doNnevn@eventNumber
 28643   007BD0  C50E  F52B         	movff	?_getEN+1,doNnevn@eventNumber+1
 28644   007BD4                     
 28645                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 28646   007BD4  502A               	movf	doNnevn@eventNumber^(0+1280),w,c
 28647   007BD6  102B               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 28648   007BD8  A4D8               	btfss	status,2,c
 28649   007BDA  EFF1  F03D         	goto	u6131
 28650   007BDE  EFF3  F03D         	goto	u6130
 28651   007BE2                     u6131:
 28652   007BE2  EFF4  F03D         	goto	l1037
 28653   007BE6                     u6130:
 28654   007BE6                     
 28655                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 28656   007BE6  2A2C               	incf	doNnevn@count^(0+1280),f,c
 28657   007BE8                     l1037:
 28658                           
 28659                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 28660   007BE8  2A2D               	incf	doNnevn@i^(0+1280),f,c
 28661   007BEA  282D               	incf	doNnevn@i^(0+1280),w,c
 28662   007BEC  A4D8               	btfss	status,2,c
 28663   007BEE  EFFB  F03D         	goto	u6141
 28664   007BF2  EFFD  F03D         	goto	u6140
 28665   007BF6                     u6141:
 28666   007BF6  EFE3  F03D         	goto	l8814
 28667   007BFA                     u6140:
 28668   007BFA                     
 28669                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28670   007BFA  C590  F526         	movff	_nn+1,sendMessage3@data1
 28671   007BFE  C58F  F527         	movff	_nn,sendMessage3@data2
 28672   007C02  C52C  F528         	movff	doNnevn@count,sendMessage3@data3
 28673   007C06  0E70               	movlw	112
 28674   007C08  EC5C  F040         	call	_sendMessage3
 28675   007C0C  0012               	return		;funcret
 28676   007C0E                     __end_of_doNnevn:
 28677                           	callstack 0
 28678                           
 28679 ;; *************** function _doNnclr *****************
 28680 ;; Defined at:
 28681 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28682 ;; Parameters:    Size  Location     Type
 28683 ;;		None
 28684 ;; Auto vars:     Size  Location     Type
 28685 ;;		None
 28686 ;; Return value:  Size  Location     Type
 28687 ;;                  1    wreg      void 
 28688 ;; Registers used:
 28689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28690 ;; Tracked objects:
 28691 ;;		On entry : 0/0
 28692 ;;		On exit  : 0/0
 28693 ;;		Unchanged: 0/0
 28694 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28699 ;;Total ram usage:        0 bytes
 28700 ;; Hardware stack levels used: 1
 28701 ;; Hardware stack levels required when called: 8
 28702 ;; This function calls:
 28703 ;;		_clearAllEvents
 28704 ;;		_sendMessage2
 28705 ;;		_sendMessage5
 28706 ;; This function is called by:
 28707 ;;		_teachProcessMessage
 28708 ;; This function uses a non-reentrant model
 28709 ;;
 28710                           
 28711                           	psect	text28
 28712   008008                     __ptext28:
 28713                           	callstack 0
 28714   008008                     _doNnclr:
 28715                           	callstack 116
 28716   008008                     
 28717                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 28718   008008  EC0B  F041         	call	_clearAllEvents	;wreg free
 28719   00800C                     
 28720                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28721   00800C  C590  F526         	movff	_nn+1,sendMessage2@data1
 28722   008010  C58F  F527         	movff	_nn,sendMessage2@data2
 28723   008014  0E59               	movlw	89
 28724   008016  EC71  F040         	call	_sendMessage2
 28725   00801A                     
 28726                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28727   00801A  C590  F526         	movff	_nn+1,sendMessage5@data1
 28728   00801E  C58F  F527         	movff	_nn,sendMessage5@data2
 28729   008022  0E55               	movlw	85
 28730   008024  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28731   008026  0E04               	movlw	4
 28732   008028  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28733   00802A  0E00               	movlw	0
 28734   00802C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28735   00802E  0EAF               	movlw	175
 28736   008030  EC9B  F040         	call	_sendMessage5
 28737   008034  0012               	return		;funcret
 28738   008036                     __end_of_doNnclr:
 28739                           	callstack 0
 28740                           
 28741 ;; *************** function _doNerd *****************
 28742 ;; Defined at:
 28743 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28744 ;; Parameters:    Size  Location     Type
 28745 ;;		None
 28746 ;; Auto vars:     Size  Location     Type
 28747 ;;		None
 28748 ;; Return value:  Size  Location     Type
 28749 ;;                  1    wreg      void 
 28750 ;; Registers used:
 28751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28752 ;; Tracked objects:
 28753 ;;		On entry : 0/0
 28754 ;;		On exit  : 0/0
 28755 ;;		Unchanged: 0/0
 28756 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28761 ;;Total ram usage:        0 bytes
 28762 ;; Hardware stack levels used: 1
 28763 ;; Hardware stack levels required when called: 2
 28764 ;; This function calls:
 28765 ;;		_findServiceIndex
 28766 ;;		_startTimedResponse
 28767 ;; This function is called by:
 28768 ;;		_teachProcessMessage
 28769 ;; This function uses a non-reentrant model
 28770 ;;
 28771                           
 28772                           	psect	text29
 28773   0082A6                     __ptext29:
 28774                           	callstack 0
 28775   0082A6                     _doNerd:
 28776                           	callstack 122
 28777   0082A6                     
 28778                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 28779   0082A6  0E04               	movlw	4
 28780   0082A8  EC12  F037         	call	_findServiceIndex
 28781   0082AC  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28782   0082AE  0E8E               	movlw	low _nerdCallback
 28783   0082B0  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28784   0082B2  0E75               	movlw	high _nerdCallback
 28785   0082B4  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28786   0082B6  0E02               	movlw	2
 28787   0082B8  EC94  F03C         	call	_startTimedResponse
 28788   0082BC  0012               	return		;funcret
 28789   0082BE                     __end_of_doNerd:
 28790                           	callstack 0
 28791                           
 28792 ;; *************** function _doNenrd *****************
 28793 ;; Defined at:
 28794 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28795 ;; Parameters:    Size  Location     Type
 28796 ;;  index           1    wreg     unsigned char 
 28797 ;; Auto vars:     Size  Location     Type
 28798 ;;  index           1   47[COMRAM] unsigned char 
 28799 ;;  eventNumber     2   45[COMRAM] unsigned short 
 28800 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 28801 ;;  tableIndex      1   48[COMRAM] unsigned char 
 28802 ;; Return value:  Size  Location     Type
 28803 ;;                  1    wreg      void 
 28804 ;; Registers used:
 28805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28806 ;; Tracked objects:
 28807 ;;		On entry : 0/0
 28808 ;;		On exit  : 0/0
 28809 ;;		Unchanged: 0/0
 28810 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28812 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28815 ;;Total ram usage:        6 bytes
 28816 ;; Hardware stack levels used: 1
 28817 ;; Hardware stack levels required when called: 6
 28818 ;; This function calls:
 28819 ;;		_evtIdxToTableIndex
 28820 ;;		_getEN
 28821 ;;		_getNN
 28822 ;;		_sendMessage3
 28823 ;;		_sendMessage5
 28824 ;; This function is called by:
 28825 ;;		_teachProcessMessage
 28826 ;; This function uses a non-reentrant model
 28827 ;;
 28828                           
 28829                           	psect	text30
 28830   00714C                     __ptext30:
 28831                           	callstack 0
 28832   00714C                     _doNenrd:
 28833                           	callstack 118
 28834                           
 28835                           ;incstack = 0
 28836                           ;doNenrd@index stored from wreg
 28837   00714C  6E30               	movwf	doNenrd@index^(0+1280),c
 28838   00714E                     
 28839                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 28840   00714E  5030               	movf	doNenrd@index^(0+1280),w,c
 28841   007150  EC9F  F041         	call	_evtIdxToTableIndex
 28842   007154  6E31               	movwf	doNenrd@tableIndex^(0+1280),c
 28843   007156                     
 28844                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 255) {
 28845   007156  2831               	incf	doNenrd@tableIndex^(0+1280),w,c
 28846   007158  A4D8               	btfss	status,2,c
 28847   00715A  EFB1  F038         	goto	u6171
 28848   00715E  EFB3  F038         	goto	u6170
 28849   007162                     u6171:
 28850   007162  EFCB  F038         	goto	l8848
 28851   007166                     u6170:
 28852   007166                     
 28853                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 28854   007166  C590  F526         	movff	_nn+1,sendMessage3@data1
 28855   00716A  C58F  F527         	movff	_nn,sendMessage3@data2
 28856   00716E  0E08               	movlw	8
 28857   007170  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28858   007172  0E6F               	movlw	111
 28859   007174  EC5C  F040         	call	_sendMessage3
 28860                           
 28861                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 28862   007178  C590  F526         	movff	_nn+1,sendMessage5@data1
 28863   00717C  C58F  F527         	movff	_nn,sendMessage5@data2
 28864   007180  0E72               	movlw	114
 28865   007182  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28866   007184  0E04               	movlw	4
 28867   007186  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28868   007188  0E08               	movlw	8
 28869   00718A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28870   00718C  0EAF               	movlw	175
 28871   00718E  EC9B  F040         	call	_sendMessage5
 28872   007192  EFE6  F038         	goto	l1050
 28873   007196                     l8848:
 28874                           
 28875                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 28876   007196  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28877   007198  EC93  F029         	call	_getNN
 28878   00719C  C50D  F52C         	movff	?_getNN,doNenrd@nodeNumber
 28879   0071A0  C50E  F52D         	movff	?_getNN+1,doNenrd@nodeNumber+1
 28880                           
 28881                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 28882   0071A4  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28883   0071A6  ECC1  F033         	call	_getEN
 28884   0071AA  C50D  F52E         	movff	?_getEN,doNenrd@eventNumber
 28885   0071AE  C50E  F52F         	movff	?_getEN+1,doNenrd@eventNumber+1
 28886   0071B2                     
 28887                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 28888   0071B2  502D               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 28889   0071B4  6E26               	movwf	sendMessage5@data1^(0+1280),c
 28890   0071B6  C52C  F527         	movff	doNenrd@nodeNumber,sendMessage5@data2
 28891   0071BA  502F               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 28892   0071BC  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28893   0071BE  C52E  F529         	movff	doNenrd@eventNumber,sendMessage5@data4
 28894   0071C2  C530  F52A         	movff	doNenrd@index,sendMessage5@data5
 28895   0071C6  0EF2               	movlw	242
 28896   0071C8  EC9B  F040         	call	_sendMessage5
 28897   0071CC                     l1050:
 28898   0071CC  0012               	return		;funcret
 28899   0071CE                     __end_of_doNenrd:
 28900                           	callstack 0
 28901                           
 28902 ;; *************** function _evtIdxToTableIndex *****************
 28903 ;; Defined at:
 28904 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28905 ;; Parameters:    Size  Location     Type
 28906 ;;  evtIdx          1    wreg     unsigned char 
 28907 ;; Auto vars:     Size  Location     Type
 28908 ;;  evtIdx          1    0[COMRAM] unsigned char 
 28909 ;; Return value:  Size  Location     Type
 28910 ;;                  1    wreg      unsigned char 
 28911 ;; Registers used:
 28912 ;;		wreg, status,2, status,0
 28913 ;; Tracked objects:
 28914 ;;		On entry : 0/0
 28915 ;;		On exit  : 0/0
 28916 ;;		Unchanged: 0/0
 28917 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28922 ;;Total ram usage:        1 bytes
 28923 ;; Hardware stack levels used: 1
 28924 ;; Hardware stack levels required when called: 1
 28925 ;; This function calls:
 28926 ;;		Nothing
 28927 ;; This function is called by:
 28928 ;;		_doNenrd
 28929 ;;		_doReval
 28930 ;; This function uses a non-reentrant model
 28931 ;;
 28932                           
 28933                           	psect	text31
 28934   00833E                     __ptext31:
 28935                           	callstack 0
 28936   00833E                     _evtIdxToTableIndex:
 28937                           	callstack 122
 28938                           
 28939                           ;incstack = 0
 28940                           ;evtIdxToTableIndex@evtIdx stored from wreg
 28941   00833E  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 28942   008340                     
 28943                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 28944   008340  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 28945   008342  0012               	return		;funcret
 28946   008344                     __end_of_evtIdxToTableIndex:
 28947                           	callstack 0
 28948                           
 28949 ;; *************** function _doEvuln *****************
 28950 ;; Defined at:
 28951 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28952 ;; Parameters:    Size  Location     Type
 28953 ;;  nodeNumber      2   58[COMRAM] unsigned short 
 28954 ;;  eventNumber     2   60[COMRAM] unsigned short 
 28955 ;; Auto vars:     Size  Location     Type
 28956 ;;  result          1   62[COMRAM] unsigned char 
 28957 ;; Return value:  Size  Location     Type
 28958 ;;                  1    wreg      void 
 28959 ;; Registers used:
 28960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28961 ;; Tracked objects:
 28962 ;;		On entry : 0/0
 28963 ;;		On exit  : 0/0
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28969 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28970 ;;Total ram usage:        5 bytes
 28971 ;; Hardware stack levels used: 1
 28972 ;; Hardware stack levels required when called: 8
 28973 ;; This function calls:
 28974 ;;		_removeEvent
 28975 ;;		_sendMessage2
 28976 ;;		_sendMessage3
 28977 ;;		_sendMessage5
 28978 ;; This function is called by:
 28979 ;;		_teachProcessMessage
 28980 ;; This function uses a non-reentrant model
 28981 ;;
 28982                           
 28983                           	psect	text32
 28984   0071CE                     __ptext32:
 28985                           	callstack 0
 28986   0071CE                     _doEvuln:
 28987                           	callstack 116
 28988   0071CE                     
 28989                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 28990   0071CE  C53B  F536         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 28991   0071D2  C53C  F537         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 28992   0071D6  C53D  F538         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 28993   0071DA  C53E  F539         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 28994   0071DE  EC23  F03F         	call	_removeEvent	;wreg free
 28995   0071E2  6E3F               	movwf	doEvuln@result^(0+1280),c
 28996   0071E4                     
 28997                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 28998   0071E4  503F               	movf	doEvuln@result^(0+1280),w,c
 28999   0071E6  B4D8               	btfsc	status,2,c
 29000   0071E8  EFF8  F038         	goto	u6071
 29001   0071EC  EFFA  F038         	goto	u6070
 29002   0071F0                     u6071:
 29003   0071F0  EF12  F039         	goto	l8758
 29004   0071F4                     u6070:
 29005   0071F4                     
 29006                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 29007   0071F4  C590  F526         	movff	_nn+1,sendMessage3@data1
 29008   0071F8  C58F  F527         	movff	_nn,sendMessage3@data2
 29009   0071FC  C53F  F528         	movff	doEvuln@result,sendMessage3@data3
 29010   007200  0E6F               	movlw	111
 29011   007202  EC5C  F040         	call	_sendMessage3
 29012                           
 29013                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 29014   007206  C590  F526         	movff	_nn+1,sendMessage5@data1
 29015   00720A  C58F  F527         	movff	_nn,sendMessage5@data2
 29016   00720E  0E95               	movlw	149
 29017   007210  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29018   007212  0E04               	movlw	4
 29019   007214  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29020   007216  C53F  F52A         	movff	doEvuln@result,sendMessage5@data5
 29021   00721A  0EAF               	movlw	175
 29022   00721C  EC9B  F040         	call	_sendMessage5
 29023   007220  EF26  F039         	goto	l1076
 29024   007224                     l8758:
 29025                           
 29026                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29027   007224  C590  F526         	movff	_nn+1,sendMessage2@data1
 29028   007228  C58F  F527         	movff	_nn,sendMessage2@data2
 29029   00722C  0E59               	movlw	89
 29030   00722E  EC71  F040         	call	_sendMessage2
 29031                           
 29032                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29033   007232  C590  F526         	movff	_nn+1,sendMessage5@data1
 29034   007236  C58F  F527         	movff	_nn,sendMessage5@data2
 29035   00723A  0E95               	movlw	149
 29036   00723C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29037   00723E  0E04               	movlw	4
 29038   007240  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29039   007242  0E00               	movlw	0
 29040   007244  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29041   007246  0EAF               	movlw	175
 29042   007248  EC9B  F040         	call	_sendMessage5
 29043   00724C                     l1076:
 29044   00724C  0012               	return		;funcret
 29045   00724E                     __end_of_doEvuln:
 29046                           	callstack 0
 29047                           
 29048 ;; *************** function _removeEvent *****************
 29049 ;; Defined at:
 29050 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29051 ;; Parameters:    Size  Location     Type
 29052 ;;  nodeNumber      2   53[COMRAM] unsigned short 
 29053 ;;  eventNumber     2   55[COMRAM] unsigned short 
 29054 ;; Auto vars:     Size  Location     Type
 29055 ;;  tableIndex      1   57[COMRAM] unsigned char 
 29056 ;; Return value:  Size  Location     Type
 29057 ;;                  1    wreg      unsigned char 
 29058 ;; Registers used:
 29059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29060 ;; Tracked objects:
 29061 ;;		On entry : 0/0
 29062 ;;		On exit  : 0/0
 29063 ;;		Unchanged: 0/0
 29064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29068 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29069 ;;Total ram usage:        5 bytes
 29070 ;; Hardware stack levels used: 1
 29071 ;; Hardware stack levels required when called: 7
 29072 ;; This function calls:
 29073 ;;		_findEvent
 29074 ;;		_removeTableEntry
 29075 ;; This function is called by:
 29076 ;;		_doEvuln
 29077 ;; This function uses a non-reentrant model
 29078 ;;
 29079                           
 29080                           	psect	text33
 29081   007E46                     __ptext33:
 29082                           	callstack 0
 29083   007E46                     _removeEvent:
 29084                           	callstack 116
 29085   007E46                     
 29086                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 29087   007E46  C536  F522         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 29088   007E4A  C537  F523         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 29089   007E4E  C538  F524         	movff	removeEvent@eventNumber,findEvent@eventNumber
 29090   007E52  C539  F525         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 29091   007E56  EC13  F032         	call	_findEvent	;wreg free
 29092   007E5A  6E3A               	movwf	removeEvent@tableIndex^(0+1280),c
 29093   007E5C                     
 29094                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 29095   007E5C  283A               	incf	removeEvent@tableIndex^(0+1280),w,c
 29096   007E5E  A4D8               	btfss	status,2,c
 29097   007E60  EF34  F03F         	goto	u5631
 29098   007E64  EF36  F03F         	goto	u5630
 29099   007E68                     u5631:
 29100   007E68  EF39  F03F         	goto	l8212
 29101   007E6C                     u5630:
 29102   007E6C  0E07               	movlw	7
 29103   007E6E  EF3C  F03F         	goto	l1096
 29104   007E72                     l8212:
 29105                           
 29106                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 29107   007E72  503A               	movf	removeEvent@tableIndex^(0+1280),w,c
 29108   007E74  EC1A  F022         	call	_removeTableEntry
 29109   007E78                     l1096:
 29110   007E78  0012               	return		;funcret
 29111   007E7A                     __end_of_removeEvent:
 29112                           	callstack 0
 29113                           
 29114 ;; *************** function _doEvlrn *****************
 29115 ;; Defined at:
 29116 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29117 ;; Parameters:    Size  Location     Type
 29118 ;;  nodeNumber      2   77[COMRAM] unsigned short 
 29119 ;;  eventNumber     2   79[COMRAM] unsigned short 
 29120 ;;  evNum           1   81[COMRAM] unsigned char 
 29121 ;;  evVal           1   82[COMRAM] unsigned char 
 29122 ;; Auto vars:     Size  Location     Type
 29123 ;;		None
 29124 ;; Return value:  Size  Location     Type
 29125 ;;                  1    wreg      void 
 29126 ;; Registers used:
 29127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29128 ;; Tracked objects:
 29129 ;;		On entry : 0/0
 29130 ;;		On exit  : 0/0
 29131 ;;		Unchanged: 0/0
 29132 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29133 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29137 ;;Total ram usage:        6 bytes
 29138 ;; Hardware stack levels used: 1
 29139 ;; Hardware stack levels required when called: 9
 29140 ;; This function calls:
 29141 ;;		_APP_addEvent
 29142 ;;		_sendMessage2
 29143 ;;		_sendMessage3
 29144 ;;		_sendMessage5
 29145 ;; This function is called by:
 29146 ;;		_teachProcessMessage
 29147 ;; This function uses a non-reentrant model
 29148 ;;
 29149                           
 29150                           	psect	text34
 29151   005ED4                     __ptext34:
 29152                           	callstack 0
 29153   005ED4                     _doEvlrn:
 29154                           	callstack 115
 29155   005ED4                     
 29156                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 29157   005ED4  0652               	decf	doEvlrn@evNum^(0+1280),f,c
 29158   005ED6                     
 29159                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 252) {
 29160   005ED6  0EFB               	movlw	251
 29161   005ED8  6452               	cpfsgt	doEvlrn@evNum^(0+1280),c
 29162   005EDA  EF71  F02F         	goto	u6051
 29163   005EDE  EF73  F02F         	goto	u6050
 29164   005EE2                     u6051:
 29165   005EE2  EF8B  F02F         	goto	l8734
 29166   005EE6                     u6050:
 29167   005EE6                     
 29168                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 29169   005EE6  C590  F526         	movff	_nn+1,sendMessage3@data1
 29170   005EEA  C58F  F527         	movff	_nn,sendMessage3@data2
 29171   005EEE  0E06               	movlw	6
 29172   005EF0  6E28               	movwf	sendMessage3@data3^(0+1280),c
 29173   005EF2  0E6F               	movlw	111
 29174   005EF4  EC5C  F040         	call	_sendMessage3
 29175                           
 29176                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 29177   005EF8  C590  F526         	movff	_nn+1,sendMessage5@data1
 29178   005EFC  C58F  F527         	movff	_nn,sendMessage5@data2
 29179   005F00  0ED2               	movlw	210
 29180   005F02  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29181   005F04  0E04               	movlw	4
 29182   005F06  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29183   005F08  0E06               	movlw	6
 29184   005F0A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29185   005F0C  0EAF               	movlw	175
 29186   005F0E  EC9B  F040         	call	_sendMessage5
 29187   005F12  EFD2  F02F         	goto	l1063
 29188   005F16                     l8734:
 29189                           
 29190                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 29191   005F16  C54E  F547         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 29192   005F1A  C54F  F548         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 29193   005F1E  C550  F549         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 29194   005F22  C551  F54A         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 29195   005F26  C552  F54B         	movff	doEvlrn@evNum,APP_addEvent@evNum
 29196   005F2A  C553  F54C         	movff	doEvlrn@evVal,APP_addEvent@evVal
 29197   005F2E  0E00               	movlw	0
 29198   005F30  6E4D               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 29199   005F32  ECD8  F040         	call	_APP_addEvent	;wreg free
 29200   005F36                     
 29201                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 29202   005F36  0105               	movlb	5	; () banked
 29203   005F38  51A3               	movf	_errno& (0+255),w,b
 29204   005F3A  B4D8               	btfsc	status,2,c
 29205   005F3C  EFA2  F02F         	goto	u6061
 29206   005F40  EFA4  F02F         	goto	u6060
 29207   005F44                     u6061:
 29208   005F44  EFBC  F02F         	goto	l8742
 29209   005F48                     u6060:
 29210   005F48                     
 29211                           ; BSR set to: 5
 29212                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 29213   005F48  C590  F526         	movff	_nn+1,sendMessage3@data1
 29214   005F4C  C58F  F527         	movff	_nn,sendMessage3@data2
 29215   005F50  C5A3  F528         	movff	_errno,sendMessage3@data3
 29216   005F54  0E6F               	movlw	111
 29217   005F56  EC5C  F040         	call	_sendMessage3
 29218                           
 29219                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 29220   005F5A  C590  F526         	movff	_nn+1,sendMessage5@data1
 29221   005F5E  C58F  F527         	movff	_nn,sendMessage5@data2
 29222   005F62  0ED2               	movlw	210
 29223   005F64  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29224   005F66  0E04               	movlw	4
 29225   005F68  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29226   005F6A  C5A3  F52A         	movff	_errno,sendMessage5@data5
 29227   005F6E  0EAF               	movlw	175
 29228   005F70  EC9B  F040         	call	_sendMessage5
 29229   005F74  EFD2  F02F         	goto	l1063
 29230   005F78                     l8742:
 29231                           
 29232                           ; BSR set to: 5
 29233                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 29234   005F78  4BCE               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 29235   005F7A  2BCF               	incf	(_teachDiagnostics+3)& (0+255),f,b
 29236   005F7C                     
 29237                           ; BSR set to: 5
 29238                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29239   005F7C  C590  F526         	movff	_nn+1,sendMessage2@data1
 29240   005F80  C58F  F527         	movff	_nn,sendMessage2@data2
 29241   005F84  0E59               	movlw	89
 29242   005F86  EC71  F040         	call	_sendMessage2
 29243   005F8A                     
 29244                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29245   005F8A  C590  F526         	movff	_nn+1,sendMessage5@data1
 29246   005F8E  C58F  F527         	movff	_nn,sendMessage5@data2
 29247   005F92  0ED2               	movlw	210
 29248   005F94  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29249   005F96  0E04               	movlw	4
 29250   005F98  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29251   005F9A  0E00               	movlw	0
 29252   005F9C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29253   005F9E  0EAF               	movlw	175
 29254   005FA0  EC9B  F040         	call	_sendMessage5
 29255   005FA4                     l1063:
 29256   005FA4  0012               	return		;funcret
 29257   005FA6                     __end_of_doEvlrn:
 29258                           	callstack 0
 29259                           
 29260 ;; *************** function _APP_addEvent *****************
 29261 ;; Defined at:
 29262 ;;		line 93 in file "../canargb_events.c"
 29263 ;; Parameters:    Size  Location     Type
 29264 ;;  nodeNumber      2   70[COMRAM] unsigned short 
 29265 ;;  eventNumber     2   72[COMRAM] unsigned short 
 29266 ;;  evNum           1   74[COMRAM] unsigned char 
 29267 ;;  evVal           1   75[COMRAM] unsigned char 
 29268 ;;  forceOwnNN      1   76[COMRAM] enum E23257
 29269 ;; Auto vars:     Size  Location     Type
 29270 ;;		None
 29271 ;; Return value:  Size  Location     Type
 29272 ;;                  1    wreg      unsigned char 
 29273 ;; Registers used:
 29274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29275 ;; Tracked objects:
 29276 ;;		On entry : 0/0
 29277 ;;		On exit  : 0/0
 29278 ;;		Unchanged: 0/0
 29279 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29280 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29283 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29284 ;;Total ram usage:        7 bytes
 29285 ;; Hardware stack levels used: 1
 29286 ;; Hardware stack levels required when called: 8
 29287 ;; This function calls:
 29288 ;;		_addEvent
 29289 ;; This function is called by:
 29290 ;;		_doEvlrn
 29291 ;; This function uses a non-reentrant model
 29292 ;;
 29293                           
 29294                           	psect	text35
 29295   0081B0                     __ptext35:
 29296                           	callstack 0
 29297   0081B0                     _APP_addEvent:
 29298                           	callstack 115
 29299   0081B0                     
 29300                           ;../canargb_events.c: 94:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 29301   0081B0  C547  F52F         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 29302   0081B4  C548  F530         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 29303   0081B8  C549  F531         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 29304   0081BC  C54A  F532         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 29305   0081C0  C54B  F533         	movff	APP_addEvent@evNum,addEvent@evNum
 29306   0081C4  C54C  F534         	movff	APP_addEvent@evVal,addEvent@evVal
 29307   0081C8  C54D  F535         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 29308   0081CC  ECE8  F01C         	call	_addEvent	;wreg free
 29309   0081D0  0012               	return		;funcret
 29310   0081D2                     __end_of_APP_addEvent:
 29311                           	callstack 0
 29312                           
 29313 ;; *************** function _addEvent *****************
 29314 ;; Defined at:
 29315 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29316 ;; Parameters:    Size  Location     Type
 29317 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 29318 ;;  eventNumber     2   48[COMRAM] unsigned short 
 29319 ;;  evNum           1   50[COMRAM] unsigned char 
 29320 ;;  evVal           1   51[COMRAM] unsigned char 
 29321 ;;  forceOwnNN      1   52[COMRAM] enum E23307
 29322 ;; Auto vars:     Size  Location     Type
 29323 ;;  e               1   68[COMRAM] unsigned char 
 29324 ;;  en              2   66[COMRAM] unsigned short 
 29325 ;;  tableIndex      1   69[COMRAM] unsigned char 
 29326 ;; Return value:  Size  Location     Type
 29327 ;;                  1    wreg      unsigned char 
 29328 ;; Registers used:
 29329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29330 ;; Tracked objects:
 29331 ;;		On entry : 0/0
 29332 ;;		On exit  : 0/0
 29333 ;;		Unchanged: 0/0
 29334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29335 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29337 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29338 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29339 ;;Total ram usage:       24 bytes
 29340 ;; Hardware stack levels used: 1
 29341 ;; Hardware stack levels required when called: 7
 29342 ;; This function calls:
 29343 ;;		_findEvent
 29344 ;;		_flushFlashBlock
 29345 ;;		_getEN
 29346 ;;		_rebuildHashtable
 29347 ;;		_writeEv
 29348 ;;		_writeNVM
 29349 ;; This function is called by:
 29350 ;;		_APP_addEvent
 29351 ;; This function uses a non-reentrant model
 29352 ;;
 29353                           
 29354                           	psect	text36
 29355   0039D0                     __ptext36:
 29356                           	callstack 0
 29357   0039D0                     _addEvent:
 29358                           	callstack 115
 29359   0039D0                     
 29360                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 29361   0039D0  C52F  F522         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 29362   0039D4  C530  F523         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 29363   0039D8  C531  F524         	movff	addEvent@eventNumber,findEvent@eventNumber
 29364   0039DC  C532  F525         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 29365   0039E0  EC13  F032         	call	_findEvent	;wreg free
 29366   0039E4  6E46               	movwf	addEvent@tableIndex^(0+1280),c
 29367   0039E6                     
 29368                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 29369   0039E6  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29370   0039E8  A4D8               	btfss	status,2,c
 29371   0039EA  EFF9  F01C         	goto	u5121
 29372   0039EE  EFFB  F01C         	goto	u5120
 29373   0039F2                     u5121:
 29374   0039F2  EF42  F01E         	goto	l7826
 29375   0039F6                     u5120:
 29376   0039F6                     
 29377                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 29378   0039F6  0E04               	movlw	4
 29379   0039F8  0105               	movlb	5	; () banked
 29380   0039FA  6FA3               	movwf	_errno& (0+255),b
 29381   0039FC                     
 29382                           ; BSR set to: 5
 29383                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<255;
      +                           tableIndex++) {
 29384   0039FC  6A46               	clrf	addEvent@tableIndex^(0+1280),c
 29385   0039FE                     l7788:
 29386   0039FE  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29387   003A00  A4D8               	btfss	status,2,c
 29388   003A02  EF05  F01D         	goto	u5131
 29389   003A06  EF07  F01D         	goto	u5130
 29390   003A0A                     u5131:
 29391   003A0A  EF09  F01D         	goto	l7792
 29392   003A0E                     u5130:
 29393   003A0E  EF36  F01E         	goto	l7820
 29394   003A12                     l7792:
 29395                           
 29396                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 29397   003A12  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29398   003A14  ECC1  F033         	call	_getEN
 29399   003A18  C50D  F543         	movff	?_getEN,addEvent@en
 29400   003A1C  C50E  F544         	movff	?_getEN+1,addEvent@en+1
 29401   003A20                     
 29402                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 29403   003A20  5043               	movf	addEvent@en^(0+1280),w,c
 29404   003A22  1044               	iorwf	(addEvent@en+1)^(0+1280),w,c
 29405   003A24  A4D8               	btfss	status,2,c
 29406   003A26  EF17  F01D         	goto	u5141
 29407   003A2A  EF19  F01D         	goto	u5140
 29408   003A2E                     u5141:
 29409   003A2E  EF33  F01E         	goto	l7816
 29410   003A32                     u5140:
 29411   003A32                     
 29412                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof
      +                          (Event) + 1 + 252)*tableIndex+1, nodeNumber&0xFF);
 29413   003A32  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29414   003A34  6E36               	movwf	??_addEvent^(0+1280),c
 29415   003A36  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29416   003A38  0E01               	movlw	1
 29417   003A3A  0236               	mulwf	??_addEvent^(0+1280),c
 29418   003A3C  C4F3 F538          	movff	prodl,??_addEvent+2
 29419   003A40  C4F4 F539          	movff	prodh,??_addEvent+3
 29420   003A44  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29421   003A46  50F3               	movf	prodl,w,c
 29422   003A48  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29423   003A4A  0E01               	movlw	1
 29424   003A4C  0236               	mulwf	??_addEvent^(0+1280),c
 29425   003A4E  50F3               	movf	prodl,w,c
 29426   003A50  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29427   003A52  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29428   003A56  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29429   003A5A  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29430   003A5C  0E01               	movlw	1
 29431   003A5E  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29432   003A60  6E0E               	movwf	writeNVM@index^(0+1280),c
 29433   003A62  0E00               	movlw	0
 29434   003A64  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29435   003A66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29436   003A68  0E01               	movlw	1
 29437   003A6A  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29438   003A6C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29439   003A6E  C52F  F511         	movff	addEvent@nodeNumber,writeNVM@value
 29440   003A72  0E01               	movlw	1
 29441   003A74  EC34  F03C         	call	_writeNVM
 29442                           
 29443                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0, nodeNumber>>8);
 29444   003A78  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29445   003A7A  6E36               	movwf	??_addEvent^(0+1280),c
 29446   003A7C  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29447   003A7E  0E01               	movlw	1
 29448   003A80  0236               	mulwf	??_addEvent^(0+1280),c
 29449   003A82  C4F3 F538          	movff	prodl,??_addEvent+2
 29450   003A86  C4F4 F539          	movff	prodh,??_addEvent+3
 29451   003A8A  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29452   003A8C  50F3               	movf	prodl,w,c
 29453   003A8E  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29454   003A90  0E01               	movlw	1
 29455   003A92  0236               	mulwf	??_addEvent^(0+1280),c
 29456   003A94  50F3               	movf	prodl,w,c
 29457   003A96  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29458   003A98  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29459   003A9C  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29460   003AA0  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29461   003AA2  0E00               	movlw	0
 29462   003AA4  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29463   003AA6  6E0E               	movwf	writeNVM@index^(0+1280),c
 29464   003AA8  0E00               	movlw	0
 29465   003AAA  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29466   003AAC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29467   003AAE  0E01               	movlw	1
 29468   003AB0  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29469   003AB2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29470   003AB4  5030               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 29471   003AB6  6E11               	movwf	writeNVM@value^(0+1280),c
 29472   003AB8  0E01               	movlw	1
 29473   003ABA  EC34  F03C         	call	_writeNVM
 29474                           
 29475                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3, eventNumber&0xFF);
 29476   003ABE  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29477   003AC0  6E36               	movwf	??_addEvent^(0+1280),c
 29478   003AC2  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29479   003AC4  0E01               	movlw	1
 29480   003AC6  0236               	mulwf	??_addEvent^(0+1280),c
 29481   003AC8  C4F3 F538          	movff	prodl,??_addEvent+2
 29482   003ACC  C4F4 F539          	movff	prodh,??_addEvent+3
 29483   003AD0  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29484   003AD2  50F3               	movf	prodl,w,c
 29485   003AD4  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29486   003AD6  0E01               	movlw	1
 29487   003AD8  0236               	mulwf	??_addEvent^(0+1280),c
 29488   003ADA  50F3               	movf	prodl,w,c
 29489   003ADC  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29490   003ADE  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29491   003AE2  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29492   003AE6  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29493   003AE8  0E03               	movlw	3
 29494   003AEA  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29495   003AEC  6E0E               	movwf	writeNVM@index^(0+1280),c
 29496   003AEE  0E00               	movlw	0
 29497   003AF0  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29498   003AF2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29499   003AF4  0E01               	movlw	1
 29500   003AF6  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29501   003AF8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29502   003AFA  C531  F511         	movff	addEvent@eventNumber,writeNVM@value
 29503   003AFE  0E01               	movlw	1
 29504   003B00  EC34  F03C         	call	_writeNVM
 29505                           
 29506                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2, eventNumber>>8);
 29507   003B04  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29508   003B06  6E36               	movwf	??_addEvent^(0+1280),c
 29509   003B08  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29510   003B0A  0E01               	movlw	1
 29511   003B0C  0236               	mulwf	??_addEvent^(0+1280),c
 29512   003B0E  C4F3 F538          	movff	prodl,??_addEvent+2
 29513   003B12  C4F4 F539          	movff	prodh,??_addEvent+3
 29514   003B16  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29515   003B18  50F3               	movf	prodl,w,c
 29516   003B1A  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29517   003B1C  0E01               	movlw	1
 29518   003B1E  0236               	mulwf	??_addEvent^(0+1280),c
 29519   003B20  50F3               	movf	prodl,w,c
 29520   003B22  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29521   003B24  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29522   003B28  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29523   003B2C  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29524   003B2E  0E02               	movlw	2
 29525   003B30  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29526   003B32  6E0E               	movwf	writeNVM@index^(0+1280),c
 29527   003B34  0E00               	movlw	0
 29528   003B36  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29529   003B38  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29530   003B3A  0E01               	movlw	1
 29531   003B3C  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29532   003B3E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29533   003B40  5032               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 29534   003B42  6E11               	movwf	writeNVM@value^(0+1280),c
 29535   003B44  0E01               	movlw	1
 29536   003B46  EC34  F03C         	call	_writeNVM
 29537   003B4A                     
 29538                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 29539   003B4A  5035               	movf	addEvent@forceOwnNN^(0+1280),w,c
 29540   003B4C  B4D8               	btfsc	status,2,c
 29541   003B4E  EFAB  F01D         	goto	u5151
 29542   003B52  EFAD  F01D         	goto	u5150
 29543   003B56                     u5151:
 29544   003B56  EFD2  F01D         	goto	l7802
 29545   003B5A                     u5150:
 29546   003B5A                     
 29547                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 1);
 29548   003B5A  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29549   003B5C  6E36               	movwf	??_addEvent^(0+1280),c
 29550   003B5E  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29551   003B60  0E01               	movlw	1
 29552   003B62  0236               	mulwf	??_addEvent^(0+1280),c
 29553   003B64  C4F3 F538          	movff	prodl,??_addEvent+2
 29554   003B68  C4F4 F539          	movff	prodh,??_addEvent+3
 29555   003B6C  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29556   003B6E  50F3               	movf	prodl,w,c
 29557   003B70  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29558   003B72  0E01               	movlw	1
 29559   003B74  0236               	mulwf	??_addEvent^(0+1280),c
 29560   003B76  50F3               	movf	prodl,w,c
 29561   003B78  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29562   003B7A  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29563   003B7E  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29564   003B82  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29565   003B84  0E04               	movlw	4
 29566   003B86  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29567   003B88  6E0E               	movwf	writeNVM@index^(0+1280),c
 29568   003B8A  0E00               	movlw	0
 29569   003B8C  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29570   003B8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29571   003B90  0E01               	movlw	1
 29572   003B92  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29573   003B94  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29574   003B96  0E01               	movlw	1
 29575   003B98  6E11               	movwf	writeNVM@value^(0+1280),c
 29576   003B9A  0E01               	movlw	1
 29577   003B9C  EC34  F03C         	call	_writeNVM
 29578                           
 29579                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 29580   003BA0  EFF5  F01D         	goto	l7804
 29581   003BA4                     l7802:
 29582                           
 29583                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 0);
 29584   003BA4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29585   003BA6  6E36               	movwf	??_addEvent^(0+1280),c
 29586   003BA8  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29587   003BAA  0E01               	movlw	1
 29588   003BAC  0236               	mulwf	??_addEvent^(0+1280),c
 29589   003BAE  C4F3 F538          	movff	prodl,??_addEvent+2
 29590   003BB2  C4F4 F539          	movff	prodh,??_addEvent+3
 29591   003BB6  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29592   003BB8  50F3               	movf	prodl,w,c
 29593   003BBA  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29594   003BBC  0E01               	movlw	1
 29595   003BBE  0236               	mulwf	??_addEvent^(0+1280),c
 29596   003BC0  50F3               	movf	prodl,w,c
 29597   003BC2  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29598   003BC4  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29599   003BC8  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29600   003BCC  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29601   003BCE  0E04               	movlw	4
 29602   003BD0  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29603   003BD2  6E0E               	movwf	writeNVM@index^(0+1280),c
 29604   003BD4  0E00               	movlw	0
 29605   003BD6  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29606   003BD8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29607   003BDA  0E01               	movlw	1
 29608   003BDC  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29609   003BDE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29610   003BE0  0E00               	movlw	0
 29611   003BE2  6E11               	movwf	writeNVM@value^(0+1280),c
 29612   003BE4  0E01               	movlw	1
 29613   003BE6  EC34  F03C         	call	_writeNVM
 29614   003BEA                     l7804:
 29615                           
 29616                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 248; e++) 
      +                          {
 29617   003BEA  6A45               	clrf	addEvent@e^(0+1280),c
 29618   003BEC                     l7810:
 29619                           
 29620                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +e, 0);
 29621   003BEC  5045               	movf	addEvent@e^(0+1280),w,c
 29622   003BEE  6E36               	movwf	??_addEvent^(0+1280),c
 29623   003BF0  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29624   003BF2  6A38               	clrf	(??_addEvent+2)^(0+1280),c
 29625   003BF4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29626   003BF6  6E39               	movwf	(??_addEvent+3)^(0+1280),c
 29627   003BF8  6A3A               	clrf	(??_addEvent+4)^(0+1280),c
 29628   003BFA  0E01               	movlw	1
 29629   003BFC  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29630   003BFE  C4F3 F53B          	movff	prodl,??_addEvent+5
 29631   003C02  C4F4 F53C          	movff	prodh,??_addEvent+6
 29632   003C06  023A               	mulwf	(??_addEvent+4)^(0+1280),c
 29633   003C08  50F3               	movf	prodl,w,c
 29634   003C0A  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29635   003C0C  0E01               	movlw	1
 29636   003C0E  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29637   003C10  50F3               	movf	prodl,w,c
 29638   003C12  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29639   003C14  C53B  F53D         	movff	??_addEvent+5,??_addEvent+7
 29640   003C18  C53C  F53E         	movff	??_addEvent+6,??_addEvent+8
 29641   003C1C  6A3F               	clrf	(??_addEvent+9)^(0+1280),c
 29642   003C1E  5036               	movf	??_addEvent^(0+1280),w,c
 29643   003C20  243D               	addwf	(??_addEvent+7)^(0+1280),w,c
 29644   003C22  6E40               	movwf	(??_addEvent+10)^(0+1280),c
 29645   003C24  5037               	movf	(??_addEvent+1)^(0+1280),w,c
 29646   003C26  203E               	addwfc	(??_addEvent+8)^(0+1280),w,c
 29647   003C28  6E41               	movwf	(??_addEvent+11)^(0+1280),c
 29648   003C2A  5038               	movf	(??_addEvent+2)^(0+1280),w,c
 29649   003C2C  203F               	addwfc	(??_addEvent+9)^(0+1280),w,c
 29650   003C2E  6E42               	movwf	(??_addEvent+12)^(0+1280),c
 29651   003C30  0E05               	movlw	5
 29652   003C32  2440               	addwf	(??_addEvent+10)^(0+1280),w,c
 29653   003C34  6E0E               	movwf	writeNVM@index^(0+1280),c
 29654   003C36  0E00               	movlw	0
 29655   003C38  2041               	addwfc	(??_addEvent+11)^(0+1280),w,c
 29656   003C3A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29657   003C3C  0E01               	movlw	1
 29658   003C3E  2042               	addwfc	(??_addEvent+12)^(0+1280),w,c
 29659   003C40  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29660   003C42  0E00               	movlw	0
 29661   003C44  6E11               	movwf	writeNVM@value^(0+1280),c
 29662   003C46  0E01               	movlw	1
 29663   003C48  EC34  F03C         	call	_writeNVM
 29664   003C4C                     
 29665                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 29666   003C4C  2A45               	incf	addEvent@e^(0+1280),f,c
 29667   003C4E  0EF7               	movlw	247
 29668   003C50  6445               	cpfsgt	addEvent@e^(0+1280),c
 29669   003C52  EF2D  F01E         	goto	u5161
 29670   003C56  EF2F  F01E         	goto	u5160
 29671   003C5A                     u5161:
 29672   003C5A  EFF6  F01D         	goto	l7810
 29673   003C5E                     u5160:
 29674   003C5E                     
 29675                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 29676   003C5E  0105               	movlb	5	; () banked
 29677   003C60  6BA3               	clrf	_errno& (0+255),b
 29678                           
 29679                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 29680   003C62  EF36  F01E         	goto	l7820
 29681   003C66                     l7816:
 29682                           
 29683                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 29684   003C66  2A46               	incf	addEvent@tableIndex^(0+1280),f,c
 29685   003C68  EFFF  F01C         	goto	l7788
 29686   003C6C                     l7820:
 29687                           
 29688                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 29689   003C6C  0105               	movlb	5	; () banked
 29690   003C6E  51A3               	movf	_errno& (0+255),w,b
 29691   003C70  B4D8               	btfsc	status,2,c
 29692   003C72  EF3D  F01E         	goto	u5171
 29693   003C76  EF3F  F01E         	goto	u5170
 29694   003C7A                     u5171:
 29695   003C7A  EF42  F01E         	goto	l7826
 29696   003C7E                     u5170:
 29697   003C7E                     l7822:
 29698                           
 29699                           ; BSR set to: 5
 29700                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 29701   003C7E  0EFF               	movlw	255
 29702   003C80  EF5B  F01E         	goto	l1113
 29703   003C84                     l7826:
 29704                           
 29705                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 29706   003C84  C533  F515         	movff	addEvent@evNum,writeEv@evNum
 29707   003C88  C534  F516         	movff	addEvent@evVal,writeEv@evVal
 29708   003C8C  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29709   003C8E  EC39  F036         	call	_writeEv
 29710   003C92  0900               	iorlw	0
 29711   003C94  B4D8               	btfsc	status,2,c
 29712   003C96  EF4F  F01E         	goto	u5181
 29713   003C9A  EF51  F01E         	goto	u5180
 29714   003C9E                     u5181:
 29715   003C9E  EF56  F01E         	goto	l7834
 29716   003CA2                     u5180:
 29717   003CA2                     
 29718                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 29719   003CA2  0E06               	movlw	6
 29720   003CA4  0105               	movlb	5	; () banked
 29721   003CA6  6FA3               	movwf	_errno& (0+255),b
 29722   003CA8  EF3F  F01E         	goto	l7822
 29723   003CAC                     l7834:
 29724                           
 29725                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 29726   003CAC  EC05  F035         	call	_flushFlashBlock	;wreg free
 29727   003CB0                     
 29728                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 29729   003CB0  ECB9  F02B         	call	_rebuildHashtable	;wreg free
 29730   003CB4                     
 29731                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 29732   003CB4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29733   003CB6                     l1113:
 29734   003CB6  0012               	return		;funcret
 29735   003CB8                     __end_of_addEvent:
 29736                           	callstack 0
 29737                           
 29738 ;; *************** function _writeEv *****************
 29739 ;; Defined at:
 29740 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29741 ;; Parameters:    Size  Location     Type
 29742 ;;  tableIndex      1    wreg     unsigned char 
 29743 ;;  evNum           1   20[COMRAM] unsigned char 
 29744 ;;  evVal           1   21[COMRAM] unsigned char 
 29745 ;; Auto vars:     Size  Location     Type
 29746 ;;  tableIndex      1   35[COMRAM] unsigned char 
 29747 ;; Return value:  Size  Location     Type
 29748 ;;                  1    wreg      unsigned char 
 29749 ;; Registers used:
 29750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29751 ;; Tracked objects:
 29752 ;;		On entry : 0/0
 29753 ;;		On exit  : 0/0
 29754 ;;		Unchanged: 0/0
 29755 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29758 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29759 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29760 ;;Total ram usage:       16 bytes
 29761 ;; Hardware stack levels used: 1
 29762 ;; Hardware stack levels required when called: 6
 29763 ;; This function calls:
 29764 ;;		_writeNVM
 29765 ;; This function is called by:
 29766 ;;		_addEvent
 29767 ;; This function uses a non-reentrant model
 29768 ;;
 29769                           
 29770                           	psect	text37
 29771   006C72                     __ptext37:
 29772                           	callstack 0
 29773   006C72                     _writeEv:
 29774                           	callstack 115
 29775                           
 29776                           ;incstack = 0
 29777                           ;writeEv@tableIndex stored from wreg
 29778   006C72  6E24               	movwf	writeEv@tableIndex^(0+1280),c
 29779   006C74                     
 29780                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 252) {
 29781   006C74  0EFB               	movlw	251
 29782   006C76  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 29783   006C78  EF40  F036         	goto	u5061
 29784   006C7C  EF42  F036         	goto	u5060
 29785   006C80                     u5061:
 29786   006C80  EF45  F036         	goto	l7730
 29787   006C84                     u5060:
 29788   006C84                     
 29789                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 29790   006C84  0E06               	movlw	6
 29791   006C86  EF81  F036         	goto	l1125
 29792   006C8A                     l7730:
 29793                           
 29794                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 255) {
 29795   006C8A  2824               	incf	writeEv@tableIndex^(0+1280),w,c
 29796   006C8C  A4D8               	btfss	status,2,c
 29797   006C8E  EF4B  F036         	goto	u5071
 29798   006C92  EF4D  F036         	goto	u5070
 29799   006C96                     u5071:
 29800   006C96  EF50  F036         	goto	l7736
 29801   006C9A                     u5070:
 29802   006C9A                     
 29803                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 29804   006C9A  0E08               	movlw	8
 29805   006C9C  EF81  F036         	goto	l1125
 29806   006CA0                     l7736:
 29807                           
 29808                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex+5 +evNum, evVal);
 29809   006CA0  5015               	movf	writeEv@evNum^(0+1280),w,c
 29810   006CA2  6E17               	movwf	??_writeEv^(0+1280),c
 29811   006CA4  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 29812   006CA6  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 29813   006CA8  5024               	movf	writeEv@tableIndex^(0+1280),w,c
 29814   006CAA  6E1A               	movwf	(??_writeEv+3)^(0+1280),c
 29815   006CAC  6A1B               	clrf	(??_writeEv+4)^(0+1280),c
 29816   006CAE  0E01               	movlw	1
 29817   006CB0  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29818   006CB2  C4F3 F51C          	movff	prodl,??_writeEv+5
 29819   006CB6  C4F4 F51D          	movff	prodh,??_writeEv+6
 29820   006CBA  021B               	mulwf	(??_writeEv+4)^(0+1280),c
 29821   006CBC  50F3               	movf	prodl,w,c
 29822   006CBE  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29823   006CC0  0E01               	movlw	1
 29824   006CC2  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29825   006CC4  50F3               	movf	prodl,w,c
 29826   006CC6  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29827   006CC8  C51C  F51E         	movff	??_writeEv+5,??_writeEv+7
 29828   006CCC  C51D  F51F         	movff	??_writeEv+6,??_writeEv+8
 29829   006CD0  6A20               	clrf	(??_writeEv+9)^(0+1280),c
 29830   006CD2  5017               	movf	??_writeEv^(0+1280),w,c
 29831   006CD4  241E               	addwf	(??_writeEv+7)^(0+1280),w,c
 29832   006CD6  6E21               	movwf	(??_writeEv+10)^(0+1280),c
 29833   006CD8  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 29834   006CDA  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 29835   006CDC  6E22               	movwf	(??_writeEv+11)^(0+1280),c
 29836   006CDE  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 29837   006CE0  2020               	addwfc	(??_writeEv+9)^(0+1280),w,c
 29838   006CE2  6E23               	movwf	(??_writeEv+12)^(0+1280),c
 29839   006CE4  0E05               	movlw	5
 29840   006CE6  2421               	addwf	(??_writeEv+10)^(0+1280),w,c
 29841   006CE8  6E0E               	movwf	writeNVM@index^(0+1280),c
 29842   006CEA  0E00               	movlw	0
 29843   006CEC  2022               	addwfc	(??_writeEv+11)^(0+1280),w,c
 29844   006CEE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29845   006CF0  0E01               	movlw	1
 29846   006CF2  2023               	addwfc	(??_writeEv+12)^(0+1280),w,c
 29847   006CF4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29848   006CF6  C516  F511         	movff	writeEv@evVal,writeNVM@value
 29849   006CFA  0E01               	movlw	1
 29850   006CFC  EC34  F03C         	call	_writeNVM
 29851   006D00                     
 29852                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 29853   006D00  0E00               	movlw	0
 29854   006D02                     l1125:
 29855   006D02  0012               	return		;funcret
 29856   006D04                     __end_of_writeEv:
 29857                           	callstack 0
 29858                           
 29859 ;; *************** function _pollTimedResponse *****************
 29860 ;; Defined at:
 29861 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 29862 ;; Parameters:    Size  Location     Type
 29863 ;;		None
 29864 ;; Auto vars:     Size  Location     Type
 29865 ;;  result          1   62[COMRAM] enum E23467
 29866 ;; Return value:  Size  Location     Type
 29867 ;;                  1    wreg      void 
 29868 ;; Registers used:
 29869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29870 ;; Tracked objects:
 29871 ;;		On entry : 0/0
 29872 ;;		On exit  : 0/0
 29873 ;;		Unchanged: 0/0
 29874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29879 ;;Total ram usage:        3 bytes
 29880 ;; Hardware stack levels used: 1
 29881 ;; Hardware stack levels required when called: 7
 29882 ;; This function calls:
 29883 ;;		NULL
 29884 ;;		_mnsTRallDiagnosticsCallback
 29885 ;;		_mnsTRrqnpnCallback
 29886 ;;		_mnsTRserviceDiscoveryCallback
 29887 ;;		_nerdCallback
 29888 ;;		_nvTRnvrdCallback
 29889 ;;		_reqevCallback
 29890 ;; This function is called by:
 29891 ;;		_poll
 29892 ;; This function uses a non-reentrant model
 29893 ;;
 29894                           
 29895                           	psect	text38
 29896   0061EC                     __ptext38:
 29897                           	callstack 0
 29898   0061EC                     _pollTimedResponse:
 29899                           	callstack 118
 29900   0061EC                     
 29901                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 29902   0061EC  0105               	movlb	5	; () banked
 29903   0061EE  2996               	incf	_timedResponseType& (0+255),w,b
 29904   0061F0  A4D8               	btfss	status,2,c
 29905   0061F2  EFFD  F030         	goto	u8171
 29906   0061F6  EFFF  F030         	goto	u8170
 29907   0061FA                     u8171:
 29908   0061FA  EF01  F031         	goto	l10828
 29909   0061FE                     u8170:
 29910   0061FE  EF55  F031         	goto	l1874
 29911   006202                     l10828:
 29912                           
 29913                           ; BSR set to: 5
 29914                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 29915   006202  5187               	movf	_timedResponseCallback& (0+255),w,b
 29916   006204  1188               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 29917   006206  A4D8               	btfss	status,2,c
 29918   006208  EF08  F031         	goto	u8181
 29919   00620C  EF0A  F031         	goto	u8180
 29920   006210                     u8181:
 29921   006210  EF0D  F031         	goto	l10832
 29922   006214                     u8180:
 29923   006214                     l10830:
 29924                           
 29925                           ; BSR set to: 5
 29926                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 29927   006214  6996               	setf	_timedResponseType& (0+255),b
 29928                           
 29929                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 29930   006216  EF55  F031         	goto	l1874
 29931   00621A                     l10832:
 29932                           
 29933                           ; BSR set to: 5
 29934                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 29935   00621A  D802               	call	u8198
 29936   00621C  EF1E  F031         	goto	u8199
 29937   006220                     u8198:
 29938   006220  0005               	push	
 29939   006222  6EFA               	movwf	pclath,c
 29940   006224  5187               	movf	_timedResponseCallback& (0+255),w,b
 29941   006226  6EFD               	movwf	tosl,c
 29942   006228  5188               	movf	(_timedResponseCallback+1)& (0+255),w,b
 29943   00622A  6EFE               	movwf	tosh,c
 29944   00622C  6AFF               	clrf	tosu,c
 29945   00622E  50FA               	movf	pclath,w,c
 29946   006230  C598  F52E         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 29947   006234  C595  F52F         	movff	_timedResponseStep,nvTRnvrdCallback@step
 29948   006238  5196               	movf	_timedResponseType& (0+255),w,b
 29949   00623A  0012               	return		;indir
 29950   00623C                     u8199:
 29951   00623C  6E3F               	movwf	pollTimedResponse@result^(0+1280),c
 29952                           
 29953                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 29954   00623E  EF3C  F031         	goto	l10846
 29955   006242                     l10834:
 29956                           
 29957                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 29958   006242  0105               	movlb	5	; () banked
 29959   006244  5197               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 29960   006246  B4D8               	btfsc	status,2,c
 29961   006248  EF28  F031         	goto	u8201
 29962   00624C  EF2A  F031         	goto	u8200
 29963   006250                     u8201:
 29964   006250  EF0A  F031         	goto	l10830
 29965   006254                     u8200:
 29966   006254                     
 29967                           ; BSR set to: 5
 29968                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 29969   006254  2B98               	incf	_timedResponseServiceIndex& (0+255),f,b
 29970   006256                     
 29971                           ; BSR set to: 5
 29972                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 6) {
 29973   006256  0E05               	movlw	5
 29974   006258  6598               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 29975   00625A  EF31  F031         	goto	u8211
 29976   00625E  EF33  F031         	goto	u8210
 29977   006262                     u8211:
 29978   006262  EF35  F031         	goto	l1879
 29979   006266                     u8210:
 29980   006266  EF0A  F031         	goto	l10830
 29981   00626A                     l1879:
 29982                           
 29983                           ; BSR set to: 5
 29984                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 29985   00626A  6B95               	clrf	_timedResponseStep& (0+255),b
 29986   00626C  EF55  F031         	goto	l1874
 29987   006270                     l10842:
 29988                           
 29989                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 29990   006270  0105               	movlb	5	; () banked
 29991   006272  2B95               	incf	_timedResponseStep& (0+255),f,b
 29992                           
 29993                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 29994   006274  EF55  F031         	goto	l1874
 29995   006278                     l10846:
 29996   006278  503F               	movf	pollTimedResponse@result^(0+1280),w,c
 29997   00627A  6E3D               	movwf	??_pollTimedResponse^(0+1280),c
 29998   00627C  6A3E               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 29999                           
 30000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30001                           ; Switch size 1, requested type "simple"
 30002                           ; Number of cases is 1, Range of values is 0 to 0
 30003                           ; switch strategies available:
 30004                           ; Name         Instructions Cycles
 30005                           ; simple_byte            4     3 (average)
 30006                           ;	Chosen strategy is simple_byte
 30007   00627E  503E               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 30008   006280  0A00               	xorlw	0	; case 0
 30009   006282  B4D8               	btfsc	status,2,c
 30010   006284  EF46  F031         	goto	l11674
 30011   006288  EF55  F031         	goto	l1874
 30012   00628C                     l11674:
 30013                           
 30014                           ; Switch size 1, requested type "simple"
 30015                           ; Number of cases is 3, Range of values is 0 to 2
 30016                           ; switch strategies available:
 30017                           ; Name         Instructions Cycles
 30018                           ; simple_byte           10     6 (average)
 30019                           ;	Chosen strategy is simple_byte
 30020   00628C  503D               	movf	??_pollTimedResponse^(0+1280),w,c
 30021   00628E  0A00               	xorlw	0	; case 0
 30022   006290  B4D8               	btfsc	status,2,c
 30023   006292  EF21  F031         	goto	l10834
 30024   006296  0A01               	xorlw	1	; case 1
 30025   006298  B4D8               	btfsc	status,2,c
 30026   00629A  EF55  F031         	goto	l1874
 30027   00629E  0A03               	xorlw	3	; case 2
 30028   0062A0  B4D8               	btfsc	status,2,c
 30029   0062A2  EF38  F031         	goto	l10842
 30030   0062A6  EF55  F031         	goto	l1874
 30031   0062AA                     l1874:
 30032   0062AA  0012               	return		;funcret
 30033   0062AC                     __end_of_pollTimedResponse:
 30034                           	callstack 0
 30035                           
 30036 ;; *************** function _nvTRnvrdCallback *****************
 30037 ;; Defined at:
 30038 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 30039 ;; Parameters:    Size  Location     Type
 30040 ;;  type            1    wreg     unsigned char 
 30041 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30042 ;;  step            1   46[COMRAM] unsigned char 
 30043 ;; Auto vars:     Size  Location     Type
 30044 ;;  type            1    0[COMRAM] unsigned char 
 30045 ;;  valueOrError    2   47[COMRAM] short 
 30046 ;; Return value:  Size  Location     Type
 30047 ;;                  1    wreg      enum E23491
 30048 ;; Registers used:
 30049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30050 ;; Tracked objects:
 30051 ;;		On entry : 0/0
 30052 ;;		On exit  : 0/0
 30053 ;;		Unchanged: 0/0
 30054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30059 ;;Total ram usage:        4 bytes
 30060 ;; Hardware stack levels used: 1
 30061 ;; Hardware stack levels required when called: 6
 30062 ;; This function calls:
 30063 ;;		_getNV
 30064 ;;		_sendMessage4
 30065 ;; This function is called by:
 30066 ;;		_nvProcessMessage
 30067 ;;		_pollTimedResponse
 30068 ;; This function uses a non-reentrant model
 30069 ;;
 30070                           
 30071                           	psect	text39
 30072   0079DC                     __ptext39:
 30073                           	callstack 0
 30074   0079DC                     _nvTRnvrdCallback:
 30075                           	callstack 118
 30076   0079DC                     
 30077                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 49) {
 30078   0079DC  0E31               	movlw	49
 30079   0079DE  642F               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 30080   0079E0  EFF4  F03C         	goto	u6371
 30081   0079E4  EFF6  F03C         	goto	u6370
 30082   0079E8                     u6371:
 30083   0079E8  EFF9  F03C         	goto	l9078
 30084   0079EC                     u6370:
 30085   0079EC                     l9074:
 30086                           
 30087                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 30088   0079EC  0E00               	movlw	0
 30089   0079EE  EF18  F03D         	goto	l1587
 30090   0079F2                     l9078:
 30091                           
 30092                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 30093   0079F2  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30094   0079F4  EC43  F03D         	call	_getNV
 30095   0079F8  C501  F530         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 30096   0079FC  C502  F531         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 30097   007A00                     
 30098                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 30099   007A00  BE31               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 30100   007A02  EF07  F03D         	goto	u6380
 30101   007A06  EF05  F03D         	goto	u6381
 30102   007A0A                     u6381:
 30103   007A0A  EF09  F03D         	goto	l9086
 30104   007A0E                     u6380:
 30105   007A0E  EFF6  F03C         	goto	l9074
 30106   007A12                     l9086:
 30107                           
 30108                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 30109   007A12  C590  F526         	movff	_nn+1,sendMessage4@data1
 30110   007A16  C58F  F527         	movff	_nn,sendMessage4@data2
 30111   007A1A  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30112   007A1C  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30113   007A1E  C530  F529         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 30114   007A22  0E97               	movlw	151
 30115   007A24  EC47  F040         	call	_sendMessage4
 30116   007A28                     
 30117                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 30118   007A28  0105               	movlb	5	; () banked
 30119   007A2A  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 30120   007A2C  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 30121   007A2E                     
 30122                           ; BSR set to: 5
 30123                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 30124   007A2E  0E02               	movlw	2
 30125   007A30                     l1587:
 30126   007A30  0012               	return		;funcret
 30127   007A32                     __end_of_nvTRnvrdCallback:
 30128                           	callstack 0
 30129                           
 30130 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 30131 ;; Defined at:
 30132 ;;		line 901 in file "../../VLCBlib_PIC/mns.c"
 30133 ;; Parameters:    Size  Location     Type
 30134 ;;  type            1    wreg     unsigned char 
 30135 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30136 ;;  step            1   46[COMRAM] unsigned char 
 30137 ;; Auto vars:     Size  Location     Type
 30138 ;;  type            1    0[COMRAM] unsigned char 
 30139 ;; Return value:  Size  Location     Type
 30140 ;;                  1    wreg      enum E23474
 30141 ;; Registers used:
 30142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30143 ;; Tracked objects:
 30144 ;;		On entry : 0/0
 30145 ;;		On exit  : 0/0
 30146 ;;		Unchanged: 0/0
 30147 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30150 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30151 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30152 ;;Total ram usage:        6 bytes
 30153 ;; Hardware stack levels used: 1
 30154 ;; Hardware stack levels required when called: 6
 30155 ;; This function calls:
 30156 ;;		_sendMessage5
 30157 ;; This function is called by:
 30158 ;;		_mnsProcessMessage
 30159 ;;		_pollTimedResponse
 30160 ;; This function uses a non-reentrant model
 30161 ;;
 30162                           
 30163                           	psect	text40
 30164   006B44                     __ptext40:
 30165                           	callstack 0
 30166   006B44                     _mnsTRserviceDiscoveryCallback:
 30167                           	callstack 118
 30168   006B44                     
 30169                           ;../../VLCBlib_PIC/mns.c: 902:     if (step >= 6) {
 30170   006B44  0E05               	movlw	5
 30171   006B46  642F               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 30172   006B48  EFA8  F035         	goto	u6271
 30173   006B4C  EFAA  F035         	goto	u6270
 30174   006B50                     u6271:
 30175   006B50  EFAD  F035         	goto	l8966
 30176   006B54                     u6270:
 30177   006B54                     
 30178                           ;../../VLCBlib_PIC/mns.c: 903:         return TIMED_RESPONSE_RESULT_FINISHED;
 30179   006B54  0E00               	movlw	0
 30180   006B56  EFED  F035         	goto	l1467
 30181   006B5A                     l8966:
 30182                           
 30183                           ;../../VLCBlib_PIC/mns.c: 906:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 30184   006B5A  C590  F526         	movff	_nn+1,sendMessage5@data1
 30185   006B5E  C58F  F527         	movff	_nn,sendMessage5@data2
 30186   006B62  282F               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30187   006B64  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30188   006B66  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30189   006B68  0D02               	mullw	2
 30190   006B6A  0E89               	movlw	low _services
 30191   006B6C  24F3               	addwf	243,w,c
 30192   006B6E  6EF6               	movwf	tblptrl,c
 30193   006B70  0EFF               	movlw	high _services
 30194   006B72  20F4               	addwfc	244,w,c
 30195   006B74  6EF7               	movwf	tblptrh,c
 30196   006B76                     	if	1	;There are 3 active tblptr bytes
 30197   006B76  6AF8               	clrf	tblptru,c
 30198   006B78  0E00               	movlw	low (__mediumconst shr (0+16))
 30199   006B7A  22F8               	addwfc	tblptru,f,c
 30200   006B7C                     	endif
 30201   006B7C  0009               	tblrd		*+
 30202   006B7E  C4F5 F530          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 30203   006B82  0009               	tblrd		*+
 30204   006B84  C4F5 F531          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 30205   006B88  C530  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 30206   006B8C  C531  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 30207   006B90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30208   006B90  6AF8               	clrf	tblptru,c
 30209   006B92                     	endif
 30210   006B92                     	if	0	;tblptru may be non-zero
 30211   006B92                     	endif
 30212   006B92  0008               	tblrd		*
 30213   006B94  C4F5 F529          	movff	tablat,sendMessage5@data4
 30214   006B98  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30215   006B9A  0D02               	mullw	2
 30216   006B9C  0E89               	movlw	low _services
 30217   006B9E  24F3               	addwf	243,w,c
 30218   006BA0  6EF6               	movwf	tblptrl,c
 30219   006BA2  0EFF               	movlw	high _services
 30220   006BA4  20F4               	addwfc	244,w,c
 30221   006BA6  6EF7               	movwf	tblptrh,c
 30222   006BA8                     	if	1	;There are 3 active tblptr bytes
 30223   006BA8  6AF8               	clrf	tblptru,c
 30224   006BAA  0E00               	movlw	low (__mediumconst shr (0+16))
 30225   006BAC  22F8               	addwfc	tblptru,f,c
 30226   006BAE                     	endif
 30227   006BAE  0009               	tblrd		*+
 30228   006BB0  C4F5 F532          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 30229   006BB4  0009               	tblrd		*+
 30230   006BB6  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 30231   006BBA  0E01               	movlw	1
 30232   006BBC  2632               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 30233   006BBE  0E00               	movlw	0
 30234   006BC0  2233               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 30235   006BC2  C532  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 30236   006BC6  C533  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 30237   006BCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30238   006BCA  6AF8               	clrf	tblptru,c
 30239   006BCC                     	endif
 30240   006BCC                     	if	0	;tblptru may be non-zero
 30241   006BCC                     	endif
 30242   006BCC  0008               	tblrd		*
 30243   006BCE  C4F5 F52A          	movff	tablat,sendMessage5@data5
 30244   006BD2  0EAC               	movlw	172
 30245   006BD4  EC9B  F040         	call	_sendMessage5
 30246   006BD8                     
 30247                           ;../../VLCBlib_PIC/mns.c: 908:     return TIMED_RESPONSE_RESULT_NEXT;
 30248   006BD8  0E02               	movlw	2
 30249   006BDA                     l1467:
 30250   006BDA  0012               	return		;funcret
 30251   006BDC                     __end_of_mnsTRserviceDiscoveryCallback:
 30252                           	callstack 0
 30253                           
 30254 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 30255 ;; Defined at:
 30256 ;;		line 920 in file "../../VLCBlib_PIC/mns.c"
 30257 ;; Parameters:    Size  Location     Type
 30258 ;;  type            1    wreg     unsigned char 
 30259 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30260 ;;  step            1   46[COMRAM] unsigned char 
 30261 ;; Auto vars:     Size  Location     Type
 30262 ;;  type            1    0[COMRAM] unsigned char 
 30263 ;;  d               2   51[COMRAM] PTR struct DiagnosticVal
 30264 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 30265 ;;		 -> canDiagnostics(38), NULL(0), 
 30266 ;; Return value:  Size  Location     Type
 30267 ;;                  1    wreg      enum E23474
 30268 ;; Registers used:
 30269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30270 ;; Tracked objects:
 30271 ;;		On entry : 0/0
 30272 ;;		On exit  : 0/0
 30273 ;;		Unchanged: 0/0
 30274 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30278 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30279 ;;Total ram usage:        8 bytes
 30280 ;; Hardware stack levels used: 1
 30281 ;; Hardware stack levels required when called: 6
 30282 ;; This function calls:
 30283 ;;		NULL
 30284 ;;		_canGetDiagnostic
 30285 ;;		_consumerGetDiagnostic
 30286 ;;		_mnsGetDiagnostic
 30287 ;;		_nvGetDiagnostic
 30288 ;;		_sendMessage6
 30289 ;;		_teachGetDiagnostic
 30290 ;; This function is called by:
 30291 ;;		_mnsProcessMessage
 30292 ;;		_pollTimedResponse
 30293 ;; This function uses a non-reentrant model
 30294 ;;
 30295                           
 30296                           	psect	text41
 30297   005448                     __ptext41:
 30298                           	callstack 0
 30299   005448                     _mnsTRallDiagnosticsCallback:
 30300                           	callstack 118
 30301   005448                     
 30302                           ;../../VLCBlib_PIC/mns.c: 921:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 30303   005448  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30304   00544A  0D02               	mullw	2
 30305   00544C  0E89               	movlw	low _services
 30306   00544E  24F3               	addwf	243,w,c
 30307   005450  6EF6               	movwf	tblptrl,c
 30308   005452  0EFF               	movlw	high _services
 30309   005454  20F4               	addwfc	244,w,c
 30310   005456  6EF7               	movwf	tblptrh,c
 30311   005458                     	if	1	;There are 3 active tblptr bytes
 30312   005458  6AF8               	clrf	tblptru,c
 30313   00545A  0E00               	movlw	low (__mediumconst shr (0+16))
 30314   00545C  22F8               	addwfc	tblptru,f,c
 30315   00545E                     	endif
 30316   00545E  0009               	tblrd		*+
 30317   005460  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30318   005464  0009               	tblrd		*+
 30319   005466  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30320   00546A  0E0C               	movlw	12
 30321   00546C  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30322   00546E  0E00               	movlw	0
 30323   005470  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30324   005472  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30325   005476  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30326   00547A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30327   00547A  6AF8               	clrf	tblptru,c
 30328   00547C                     	endif
 30329   00547C                     	if	0	;tblptru may be non-zero
 30330   00547C                     	endif
 30331   00547C  0009               	tblrd		*+
 30332   00547E  50F5               	movf	tablat,w,c
 30333   005480  0009               	tblrd		*+
 30334   005482  10F5               	iorwf	tablat,w,c
 30335   005484  A4D8               	btfss	status,2,c
 30336   005486  EF47  F02A         	goto	u6281
 30337   00548A  EF49  F02A         	goto	u6280
 30338   00548E                     u6281:
 30339   00548E  EF5B  F02A         	goto	l8980
 30340   005492                     u6280:
 30341   005492                     
 30342                           ;../../VLCBlib_PIC/mns.c: 922:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 30343   005492  C590  F526         	movff	_nn+1,sendMessage6@data1
 30344   005496  C58F  F527         	movff	_nn,sendMessage6@data2
 30345   00549A  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30346   00549C  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30347   00549E  0E00               	movlw	0
 30348   0054A0  6E29               	movwf	sendMessage6@data4^(0+1280),c
 30349   0054A2  0E00               	movlw	0
 30350   0054A4  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30351   0054A6  0E00               	movlw	0
 30352   0054A8  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30353   0054AA  0EC7               	movlw	199
 30354   0054AC  EC32  F040         	call	_sendMessage6
 30355   0054B0                     l8976:
 30356                           
 30357                           ;../../VLCBlib_PIC/mns.c: 923:         return TIMED_RESPONSE_RESULT_FINISHED;
 30358   0054B0  0E00               	movlw	0
 30359   0054B2  EFB1  F02A         	goto	l1471
 30360   0054B6                     l8980:
 30361                           
 30362                           ;../../VLCBlib_PIC/mns.c: 925:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 30363   0054B6  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30364   0054B8  0D02               	mullw	2
 30365   0054BA  0E89               	movlw	low _services
 30366   0054BC  24F3               	addwf	243,w,c
 30367   0054BE  6EF6               	movwf	tblptrl,c
 30368   0054C0  0EFF               	movlw	high _services
 30369   0054C2  20F4               	addwfc	244,w,c
 30370   0054C4  6EF7               	movwf	tblptrh,c
 30371   0054C6                     	if	1	;There are 3 active tblptr bytes
 30372   0054C6  6AF8               	clrf	tblptru,c
 30373   0054C8  0E00               	movlw	low (__mediumconst shr (0+16))
 30374   0054CA  22F8               	addwfc	tblptru,f,c
 30375   0054CC                     	endif
 30376   0054CC  0009               	tblrd		*+
 30377   0054CE  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30378   0054D2  0009               	tblrd		*+
 30379   0054D4  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30380   0054D8  0E0C               	movlw	12
 30381   0054DA  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30382   0054DC  0E00               	movlw	0
 30383   0054DE  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30384   0054E0  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30385   0054E4  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30386   0054E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30387   0054E8  6AF8               	clrf	tblptru,c
 30388   0054EA                     	endif
 30389   0054EA                     	if	0	;tblptru may be non-zero
 30390   0054EA                     	endif
 30391   0054EA  0009               	tblrd		*+
 30392   0054EC  C4F5 F532          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 30393   0054F0  0009               	tblrd		*+
 30394   0054F2  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 30395   0054F6  D802               	call	u6298
 30396   0054F8  EF88  F02A         	goto	u6299
 30397   0054FC                     u6298:
 30398   0054FC  0005               	push	
 30399   0054FE  6EFA               	movwf	pclath,c
 30400   005500  5032               	movf	(??_mnsTRallDiagnosticsCallback+2)^(0+1280),w,c
 30401   005502  6EFD               	movwf	tosl,c
 30402   005504  5033               	movf	(??_mnsTRallDiagnosticsCallback+3)^(0+1280),w,c
 30403   005506  6EFE               	movwf	tosh,c
 30404   005508  6AFF               	clrf	tosu,c
 30405   00550A  50FA               	movf	pclath,w,c
 30406   00550C  502F               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 30407   00550E  0012               	return		;indir
 30408   005510                     u6299:
 30409   005510  C507  F534         	movff	?_nvGetDiagnostic,mnsTRallDiagnosticsCallback@d
 30410   005514  C508  F535         	movff	?_nvGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 30411   005518                     
 30412                           ;../../VLCBlib_PIC/mns.c: 926:     if (d == ((void*)0)) {
 30413   005518  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30414   00551A  1035               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30415   00551C  A4D8               	btfss	status,2,c
 30416   00551E  EF93  F02A         	goto	u6301
 30417   005522  EF95  F02A         	goto	u6300
 30418   005526                     u6301:
 30419   005526  EF97  F02A         	goto	l8988
 30420   00552A                     u6300:
 30421   00552A  EF58  F02A         	goto	l8976
 30422   00552E                     l8988:
 30423                           
 30424                           ;../../VLCBlib_PIC/mns.c: 931:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 30425   00552E  C590  F526         	movff	_nn+1,sendMessage6@data1
 30426   005532  C58F  F527         	movff	_nn,sendMessage6@data2
 30427   005536  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30428   005538  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30429   00553A  C52F  F529         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 30430   00553E  EE20 F001          	lfsr	2,1
 30431   005542  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30432   005544  26D9               	addwf	fsr2l,f,c
 30433   005546  5035               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30434   005548  22DA               	addwfc	fsr2h,f,c
 30435   00554A  50DF               	movf	indf2,w,c
 30436   00554C  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30437   00554E  C534  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 30438   005552  C535  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 30439   005556  50DF               	movf	indf2,w,c
 30440   005558  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30441   00555A  0EC7               	movlw	199
 30442   00555C  EC32  F040         	call	_sendMessage6
 30443   005560                     
 30444                           ;../../VLCBlib_PIC/mns.c: 932:     return TIMED_RESPONSE_RESULT_NEXT;
 30445   005560  0E02               	movlw	2
 30446   005562                     l1471:
 30447   005562  0012               	return		;funcret
 30448   005564                     __end_of_mnsTRallDiagnosticsCallback:
 30449                           	callstack 0
 30450                           
 30451 ;; *************** function _mnsTRrqnpnCallback *****************
 30452 ;; Defined at:
 30453 ;;		line 943 in file "../../VLCBlib_PIC/mns.c"
 30454 ;; Parameters:    Size  Location     Type
 30455 ;;  type            1    wreg     unsigned char 
 30456 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30457 ;;  step            1   46[COMRAM] unsigned char 
 30458 ;; Auto vars:     Size  Location     Type
 30459 ;;  type            1    0[COMRAM] unsigned char 
 30460 ;; Return value:  Size  Location     Type
 30461 ;;                  1    wreg      enum E23474
 30462 ;; Registers used:
 30463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30464 ;; Tracked objects:
 30465 ;;		On entry : 0/0
 30466 ;;		On exit  : 0/0
 30467 ;;		Unchanged: 0/0
 30468 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30473 ;;Total ram usage:        2 bytes
 30474 ;; Hardware stack levels used: 1
 30475 ;; Hardware stack levels required when called: 6
 30476 ;; This function calls:
 30477 ;;		_getParameter
 30478 ;;		_sendMessage4
 30479 ;; This function is called by:
 30480 ;;		_mnsProcessMessage
 30481 ;;		_pollTimedResponse
 30482 ;; This function uses a non-reentrant model
 30483 ;;
 30484                           
 30485                           	psect	text42
 30486   007E7A                     __ptext42:
 30487                           	callstack 0
 30488   007E7A                     _mnsTRrqnpnCallback:
 30489                           	callstack 118
 30490   007E7A                     
 30491                           ;../../VLCBlib_PIC/mns.c: 944:     if (step >= 20) {
 30492   007E7A  0E13               	movlw	19
 30493   007E7C  642F               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 30494   007E7E  EF43  F03F         	goto	u6311
 30495   007E82  EF45  F03F         	goto	u6310
 30496   007E86                     u6311:
 30497   007E86  EF48  F03F         	goto	l9000
 30498   007E8A                     u6310:
 30499   007E8A                     
 30500                           ;../../VLCBlib_PIC/mns.c: 945:         return TIMED_RESPONSE_RESULT_FINISHED;
 30501   007E8A  0E00               	movlw	0
 30502   007E8C  EF56  F03F         	goto	l1476
 30503   007E90                     l9000:
 30504                           
 30505                           ;../../VLCBlib_PIC/mns.c: 947:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 30506   007E90  C590  F526         	movff	_nn+1,sendMessage4@data1
 30507   007E94  C58F  F527         	movff	_nn,sendMessage4@data2
 30508   007E98  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30509   007E9A  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30510   007E9C  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30511   007E9E  ECCC  F024         	call	_getParameter
 30512   007EA2  6E29               	movwf	sendMessage4@data4^(0+1280),c
 30513   007EA4  0E9B               	movlw	155
 30514   007EA6  EC47  F040         	call	_sendMessage4
 30515   007EAA                     
 30516                           ;../../VLCBlib_PIC/mns.c: 948:     return TIMED_RESPONSE_RESULT_NEXT;
 30517   007EAA  0E02               	movlw	2
 30518   007EAC                     l1476:
 30519   007EAC  0012               	return		;funcret
 30520   007EAE                     __end_of_mnsTRrqnpnCallback:
 30521                           	callstack 0
 30522                           
 30523 ;; *************** function _nerdCallback *****************
 30524 ;; Defined at:
 30525 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30526 ;; Parameters:    Size  Location     Type
 30527 ;;  type            1    wreg     unsigned char 
 30528 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30529 ;;  step            1   46[COMRAM] unsigned char 
 30530 ;; Auto vars:     Size  Location     Type
 30531 ;;  type            1    0[COMRAM] unsigned char 
 30532 ;;  eventNumber     2   49[COMRAM] struct Word
 30533 ;;  nodeNumber      2   47[COMRAM] struct Word
 30534 ;; Return value:  Size  Location     Type
 30535 ;;                  1    wreg      enum E23474
 30536 ;; Registers used:
 30537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30538 ;; Tracked objects:
 30539 ;;		On entry : 0/0
 30540 ;;		On exit  : 0/0
 30541 ;;		Unchanged: 0/0
 30542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30547 ;;Total ram usage:        6 bytes
 30548 ;; Hardware stack levels used: 1
 30549 ;; Hardware stack levels required when called: 6
 30550 ;; This function calls:
 30551 ;;		_getEN
 30552 ;;		_getNN
 30553 ;;		_sendMessage7
 30554 ;;		_tableIndexToEvtIdx
 30555 ;; This function is called by:
 30556 ;;		_doNerd
 30557 ;;		_pollTimedResponse
 30558 ;; This function uses a non-reentrant model
 30559 ;;
 30560                           
 30561                           	psect	text43
 30562   00758E                     __ptext43:
 30563                           	callstack 0
 30564   00758E                     _nerdCallback:
 30565                           	callstack 118
 30566   00758E                     
 30567                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 255) {
 30568   00758E  282F               	incf	nerdCallback@step^(0+1280),w,c
 30569   007590  A4D8               	btfss	status,2,c
 30570   007592  EFCD  F03A         	goto	u6221
 30571   007596  EFCF  F03A         	goto	u6220
 30572   00759A                     u6221:
 30573   00759A  EFD2  F03A         	goto	l8906
 30574   00759E                     u6220:
 30575   00759E                     
 30576                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30577   00759E  0E00               	movlw	0
 30578   0075A0  EFFD  F03A         	goto	l1045
 30579   0075A4                     l8906:
 30580                           
 30581                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 30582   0075A4  502F               	movf	nerdCallback@step^(0+1280),w,c
 30583   0075A6  ECC1  F033         	call	_getEN
 30584   0075AA  C50D  F532         	movff	?_getEN,nerdCallback@eventNumber
 30585   0075AE  C50E  F533         	movff	?_getEN+1,nerdCallback@eventNumber+1
 30586   0075B2                     
 30587                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 30588   0075B2  5032               	movf	nerdCallback@eventNumber^(0+1280),w,c
 30589   0075B4  1033               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 30590   0075B6  B4D8               	btfsc	status,2,c
 30591   0075B8  EFE0  F03A         	goto	u6231
 30592   0075BC  EFE2  F03A         	goto	u6230
 30593   0075C0                     u6231:
 30594   0075C0  EFFC  F03A         	goto	l8914
 30595   0075C4                     u6230:
 30596   0075C4                     
 30597                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 30598   0075C4  502F               	movf	nerdCallback@step^(0+1280),w,c
 30599   0075C6  EC93  F029         	call	_getNN
 30600   0075CA  C50D  F530         	movff	?_getNN,nerdCallback@nodeNumber
 30601   0075CE  C50E  F531         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 30602   0075D2                     
 30603                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 30604   0075D2  C590  F526         	movff	_nn+1,sendMessage7@data1
 30605   0075D6  C58F  F527         	movff	_nn,sendMessage7@data2
 30606   0075DA  C531  F528         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 30607   0075DE  C530  F529         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 30608   0075E2  C533  F52A         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 30609   0075E6  C532  F52B         	movff	nerdCallback@eventNumber,sendMessage7@data6
 30610   0075EA  502F               	movf	nerdCallback@step^(0+1280),w,c
 30611   0075EC  ECA2  F041         	call	_tableIndexToEvtIdx
 30612   0075F0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 30613   0075F2  0EF2               	movlw	242
 30614   0075F4  EC86  F040         	call	_sendMessage7
 30615   0075F8                     l8914:
 30616                           
 30617                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 30618   0075F8  0E02               	movlw	2
 30619   0075FA                     l1045:
 30620   0075FA  0012               	return		;funcret
 30621   0075FC                     __end_of_nerdCallback:
 30622                           	callstack 0
 30623                           
 30624 ;; *************** function _reqevCallback *****************
 30625 ;; Defined at:
 30626 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30627 ;; Parameters:    Size  Location     Type
 30628 ;;  tableIndex      1    wreg     unsigned char 
 30629 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30630 ;;  step            1   46[COMRAM] unsigned char 
 30631 ;; Auto vars:     Size  Location     Type
 30632 ;;  tableIndex      1   59[COMRAM] unsigned char 
 30633 ;;  nodeNumber      2   57[COMRAM] struct Word
 30634 ;;  ev              2   55[COMRAM] short 
 30635 ;;  eventNumber     2   53[COMRAM] struct Word
 30636 ;;  nEv             1   52[COMRAM] unsigned char 
 30637 ;; Return value:  Size  Location     Type
 30638 ;;                  1    wreg      enum E23474
 30639 ;; Registers used:
 30640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30641 ;; Tracked objects:
 30642 ;;		On entry : 0/0
 30643 ;;		On exit  : 0/0
 30644 ;;		Unchanged: 0/0
 30645 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30647 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30648 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30649 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30650 ;;Total ram usage:       15 bytes
 30651 ;; Hardware stack levels used: 1
 30652 ;; Hardware stack levels required when called: 6
 30653 ;; This function calls:
 30654 ;;		_getEN
 30655 ;;		_getEv
 30656 ;;		_getNN
 30657 ;;		_numEv
 30658 ;;		_sendMessage5
 30659 ;;		_sendMessage6
 30660 ;;		_tableIndexToEvtIdx
 30661 ;; This function is called by:
 30662 ;;		_doReval
 30663 ;;		_doReqev
 30664 ;;		_pollTimedResponse
 30665 ;; This function uses a non-reentrant model
 30666 ;;
 30667                           
 30668                           	psect	text44
 30669   005DFE                     __ptext44:
 30670                           	callstack 0
 30671   005DFE                     _reqevCallback:
 30672                           	callstack 118
 30673                           
 30674                           ;incstack = 0
 30675                           ;reqevCallback@tableIndex stored from wreg
 30676   005DFE  6E3C               	movwf	reqevCallback@tableIndex^(0+1280),c
 30677   005E00                     
 30678                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 30679   005E00  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30680   005E02  ECB1  F041         	call	_numEv
 30681   005E06  6E35               	movwf	reqevCallback@nEv^(0+1280),c
 30682   005E08                     
 30683                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 30684   005E08  502F               	movf	reqevCallback@step^(0+1280),w,c
 30685   005E0A  6E30               	movwf	??_reqevCallback^(0+1280),c
 30686   005E0C  6A31               	clrf	(??_reqevCallback+1)^(0+1280),c
 30687   005E0E  0E01               	movlw	1
 30688   005E10  2630               	addwf	??_reqevCallback^(0+1280),f,c
 30689   005E12  0E00               	movlw	0
 30690   005E14  2231               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 30691   005E16  5035               	movf	reqevCallback@nEv^(0+1280),w,c
 30692   005E18  6E32               	movwf	(??_reqevCallback+2)^(0+1280),c
 30693   005E1A  6A33               	clrf	(??_reqevCallback+3)^(0+1280),c
 30694   005E1C  5030               	movf	??_reqevCallback^(0+1280),w,c
 30695   005E1E  5C32               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 30696   005E20  5033               	movf	(??_reqevCallback+3)^(0+1280),w,c
 30697   005E22  0A80               	xorlw	128
 30698   005E24  6E34               	movwf	(??_reqevCallback+4)^(0+1280),c
 30699   005E26  5031               	movf	(??_reqevCallback+1)^(0+1280),w,c
 30700   005E28  0A80               	xorlw	128
 30701   005E2A  5834               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 30702   005E2C  B0D8               	btfsc	status,0,c
 30703   005E2E  EF1B  F02F         	goto	u6241
 30704   005E32  EF1D  F02F         	goto	u6240
 30705   005E36                     u6241:
 30706   005E36  EF20  F02F         	goto	l8926
 30707   005E3A                     u6240:
 30708   005E3A                     
 30709                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30710   005E3A  0E00               	movlw	0
 30711   005E3C  EF69  F02F         	goto	l1089
 30712   005E40                     l8926:
 30713                           
 30714                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 30715   005E40  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30716   005E42  EC93  F029         	call	_getNN
 30717   005E46  C50D  F53A         	movff	?_getNN,reqevCallback@nodeNumber
 30718   005E4A  C50E  F53B         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 30719                           
 30720                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 30721   005E4E  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30722   005E50  ECC1  F033         	call	_getEN
 30723   005E54  C50D  F536         	movff	?_getEN,reqevCallback@eventNumber
 30724   005E58  C50E  F537         	movff	?_getEN+1,reqevCallback@eventNumber+1
 30725                           
 30726                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 30727   005E5C  C52F  F50D         	movff	reqevCallback@step,getEv@evNum
 30728   005E60  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30729   005E62  ECB6  F034         	call	_getEv
 30730   005E66  C50D  F538         	movff	?_getEv,reqevCallback@ev
 30731   005E6A  C50E  F539         	movff	?_getEv+1,reqevCallback@ev+1
 30732   005E6E                     
 30733                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 30734   005E6E  BE39               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 30735   005E70  EF3C  F02F         	goto	u6251
 30736   005E74  EF3E  F02F         	goto	u6250
 30737   005E78                     u6251:
 30738   005E78  EF68  F02F         	goto	l8936
 30739   005E7C                     u6250:
 30740   005E7C                     
 30741                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 30742   005E7C  0ED3               	movlw	211
 30743   005E7E  0105               	movlb	5	; () banked
 30744   005E80  19A2               	xorwf	_timedResponseOpcode& (0+255),w,b
 30745   005E82  A4D8               	btfss	status,2,c
 30746   005E84  EF46  F02F         	goto	u6261
 30747   005E88  EF48  F02F         	goto	u6260
 30748   005E8C                     u6261:
 30749   005E8C  EF59  F02F         	goto	l8934
 30750   005E90                     u6260:
 30751   005E90                     
 30752                           ; BSR set to: 5
 30753                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 30754   005E90  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 30755   005E94  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 30756   005E98  C537  F528         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 30757   005E9C  C536  F529         	movff	reqevCallback@eventNumber,sendMessage6@data4
 30758   005EA0  282F               	incf	reqevCallback@step^(0+1280),w,c
 30759   005EA2  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30760   005EA4  C538  F52B         	movff	reqevCallback@ev,sendMessage6@data6
 30761   005EA8  0ED3               	movlw	211
 30762   005EAA  EC32  F040         	call	_sendMessage6
 30763                           
 30764                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 30765   005EAE  EF68  F02F         	goto	l8936
 30766   005EB2                     l8934:
 30767                           
 30768                           ; BSR set to: 5
 30769                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 30770   005EB2  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 30771   005EB6  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 30772   005EBA  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30773   005EBC  ECA2  F041         	call	_tableIndexToEvtIdx
 30774   005EC0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30775   005EC2  282F               	incf	reqevCallback@step^(0+1280),w,c
 30776   005EC4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 30777   005EC6  C538  F52A         	movff	reqevCallback@ev,sendMessage5@data5
 30778   005ECA  0EB5               	movlw	181
 30779   005ECC  EC9B  F040         	call	_sendMessage5
 30780   005ED0                     l8936:
 30781                           
 30782                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 30783   005ED0  0E02               	movlw	2
 30784   005ED2                     l1089:
 30785   005ED2  0012               	return		;funcret
 30786   005ED4                     __end_of_reqevCallback:
 30787                           	callstack 0
 30788                           
 30789 ;; *************** function _numEv *****************
 30790 ;; Defined at:
 30791 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30792 ;; Parameters:    Size  Location     Type
 30793 ;;  tableIndex      1    wreg     unsigned char 
 30794 ;; Auto vars:     Size  Location     Type
 30795 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30796 ;; Return value:  Size  Location     Type
 30797 ;;                  1    wreg      unsigned char 
 30798 ;; Registers used:
 30799 ;;		wreg
 30800 ;; Tracked objects:
 30801 ;;		On entry : 0/0
 30802 ;;		On exit  : 0/0
 30803 ;;		Unchanged: 0/0
 30804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30809 ;;Total ram usage:        0 bytes
 30810 ;; Hardware stack levels used: 1
 30811 ;; Hardware stack levels required when called: 1
 30812 ;; This function calls:
 30813 ;;		Nothing
 30814 ;; This function is called by:
 30815 ;;		_doReqev
 30816 ;;		_reqevCallback
 30817 ;; This function uses a non-reentrant model
 30818 ;;
 30819                           
 30820                           	psect	text45
 30821   008362                     __ptext45:
 30822                           	callstack 0
 30823   008362                     _numEv:
 30824                           	callstack 122
 30825   008362                     
 30826                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 252;
 30827   008362  0EFC               	movlw	252
 30828   008364  0012               	return		;funcret
 30829   008366                     __end_of_numEv:
 30830                           	callstack 0
 30831                           
 30832 ;; *************** function _getEv *****************
 30833 ;; Defined at:
 30834 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30835 ;; Parameters:    Size  Location     Type
 30836 ;;  tableIndex      1    wreg     unsigned char 
 30837 ;;  evNum           1   12[COMRAM] unsigned char 
 30838 ;; Auto vars:     Size  Location     Type
 30839 ;;  tableIndex      1   27[COMRAM] unsigned char 
 30840 ;; Return value:  Size  Location     Type
 30841 ;;                  2   12[COMRAM] short 
 30842 ;; Registers used:
 30843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30844 ;; Tracked objects:
 30845 ;;		On entry : 0/0
 30846 ;;		On exit  : 0/0
 30847 ;;		Unchanged: 0/0
 30848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30851 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30852 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30853 ;;Total ram usage:       16 bytes
 30854 ;; Hardware stack levels used: 1
 30855 ;; Hardware stack levels required when called: 3
 30856 ;; This function calls:
 30857 ;;		_readNVM
 30858 ;; This function is called by:
 30859 ;;		_doReval
 30860 ;;		_doReqev
 30861 ;;		_reqevCallback
 30862 ;; This function uses a non-reentrant model
 30863 ;;
 30864                           
 30865                           	psect	text46
 30866   00696C                     __ptext46:
 30867                           	callstack 0
 30868   00696C                     _getEv:
 30869                           	callstack 120
 30870                           
 30871                           ;incstack = 0
 30872                           ;getEv@tableIndex stored from wreg
 30873   00696C  6E1C               	movwf	getEv@tableIndex^(0+1280),c
 30874   00696E                     
 30875                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 255) {
 30876   00696E  281C               	incf	getEv@tableIndex^(0+1280),w,c
 30877   006970  A4D8               	btfss	status,2,c
 30878   006972  EFBD  F034         	goto	u5611
 30879   006976  EFBF  F034         	goto	u5610
 30880   00697A                     u5611:
 30881   00697A  EFC5  F034         	goto	l8194
 30882   00697E                     u5610:
 30883   00697E                     
 30884                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 30885   00697E  0E00               	movlw	0
 30886   006980  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30887   006982  0E08               	movlw	8
 30888   006984  6E0D               	movwf	?_getEv^(0+1280),c
 30889   006986  EF04  F035         	goto	l1130
 30890   00698A                     l8194:
 30891                           
 30892                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 252) {
 30893   00698A  0EFB               	movlw	251
 30894   00698C  640D               	cpfsgt	getEv@evNum^(0+1280),c
 30895   00698E  EFCB  F034         	goto	u5621
 30896   006992  EFCD  F034         	goto	u5620
 30897   006996                     u5621:
 30898   006996  EFD3  F034         	goto	l8200
 30899   00699A                     u5620:
 30900   00699A                     
 30901                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 30902   00699A  0EFF               	movlw	255
 30903   00699C  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30904   00699E  0EFA               	movlw	250
 30905   0069A0  6E0D               	movwf	?_getEv^(0+1280),c
 30906   0069A2  EF04  F035         	goto	l1130
 30907   0069A6                     l8200:
 30908                           
 30909                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evNum);
 30910   0069A6  500D               	movf	getEv@evNum^(0+1280),w,c
 30911   0069A8  6E0F               	movwf	??_getEv^(0+1280),c
 30912   0069AA  6A10               	clrf	(??_getEv+1)^(0+1280),c
 30913   0069AC  6A11               	clrf	(??_getEv+2)^(0+1280),c
 30914   0069AE  501C               	movf	getEv@tableIndex^(0+1280),w,c
 30915   0069B0  6E12               	movwf	(??_getEv+3)^(0+1280),c
 30916   0069B2  6A13               	clrf	(??_getEv+4)^(0+1280),c
 30917   0069B4  0E01               	movlw	1
 30918   0069B6  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30919   0069B8  C4F3 F514          	movff	prodl,??_getEv+5
 30920   0069BC  C4F4 F515          	movff	prodh,??_getEv+6
 30921   0069C0  0213               	mulwf	(??_getEv+4)^(0+1280),c
 30922   0069C2  50F3               	movf	prodl,w,c
 30923   0069C4  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30924   0069C6  0E01               	movlw	1
 30925   0069C8  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30926   0069CA  50F3               	movf	prodl,w,c
 30927   0069CC  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30928   0069CE  C514  F516         	movff	??_getEv+5,??_getEv+7
 30929   0069D2  C515  F517         	movff	??_getEv+6,??_getEv+8
 30930   0069D6  6A18               	clrf	(??_getEv+9)^(0+1280),c
 30931   0069D8  500F               	movf	??_getEv^(0+1280),w,c
 30932   0069DA  2416               	addwf	(??_getEv+7)^(0+1280),w,c
 30933   0069DC  6E19               	movwf	(??_getEv+10)^(0+1280),c
 30934   0069DE  5010               	movf	(??_getEv+1)^(0+1280),w,c
 30935   0069E0  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 30936   0069E2  6E1A               	movwf	(??_getEv+11)^(0+1280),c
 30937   0069E4  5011               	movf	(??_getEv+2)^(0+1280),w,c
 30938   0069E6  2018               	addwfc	(??_getEv+9)^(0+1280),w,c
 30939   0069E8  6E1B               	movwf	(??_getEv+12)^(0+1280),c
 30940   0069EA  0E05               	movlw	5
 30941   0069EC  2419               	addwf	(??_getEv+10)^(0+1280),w,c
 30942   0069EE  6E07               	movwf	readNVM@index^(0+1280),c
 30943   0069F0  0E00               	movlw	0
 30944   0069F2  201A               	addwfc	(??_getEv+11)^(0+1280),w,c
 30945   0069F4  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 30946   0069F6  0E01               	movlw	1
 30947   0069F8  201B               	addwfc	(??_getEv+12)^(0+1280),w,c
 30948   0069FA  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 30949   0069FC  0E01               	movlw	1
 30950   0069FE  EC8D  F03A         	call	_readNVM
 30951   006A02  5007               	movf	?_readNVM^(0+1280),w,c
 30952   006A04  6E0D               	movwf	?_getEv^(0+1280),c
 30953   006A06  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 30954   006A08                     l1130:
 30955   006A08  0012               	return		;funcret
 30956   006A0A                     __end_of_getEv:
 30957                           	callstack 0
 30958                           
 30959 ;; *************** function _tableIndexToEvtIdx *****************
 30960 ;; Defined at:
 30961 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30962 ;; Parameters:    Size  Location     Type
 30963 ;;  tableIndex      1    wreg     unsigned char 
 30964 ;; Auto vars:     Size  Location     Type
 30965 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30966 ;; Return value:  Size  Location     Type
 30967 ;;                  1    wreg      unsigned char 
 30968 ;; Registers used:
 30969 ;;		wreg, status,2, status,0
 30970 ;; Tracked objects:
 30971 ;;		On entry : 0/0
 30972 ;;		On exit  : 0/0
 30973 ;;		Unchanged: 0/0
 30974 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30979 ;;Total ram usage:        1 bytes
 30980 ;; Hardware stack levels used: 1
 30981 ;; Hardware stack levels required when called: 1
 30982 ;; This function calls:
 30983 ;;		Nothing
 30984 ;; This function is called by:
 30985 ;;		_nerdCallback
 30986 ;;		_reqevCallback
 30987 ;; This function uses a non-reentrant model
 30988 ;;
 30989                           
 30990                           	psect	text47
 30991   008344                     __ptext47:
 30992                           	callstack 0
 30993   008344                     _tableIndexToEvtIdx:
 30994                           	callstack 122
 30995                           
 30996                           ;incstack = 0
 30997                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 30998   008344  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 30999   008346                     
 31000                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 31001   008346  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 31002   008348  0012               	return		;funcret
 31003   00834A                     __end_of_tableIndexToEvtIdx:
 31004                           	callstack 0
 31005                           
 31006 ;; *************** function _setNV *****************
 31007 ;; Defined at:
 31008 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 31009 ;; Parameters:    Size  Location     Type
 31010 ;;  index           1    wreg     unsigned char 
 31011 ;;  value           1   20[COMRAM] unsigned char 
 31012 ;; Auto vars:     Size  Location     Type
 31013 ;;  index           1   24[COMRAM] unsigned char 
 31014 ;;  oldValue        1   23[COMRAM] unsigned char 
 31015 ;; Return value:  Size  Location     Type
 31016 ;;                  1    wreg      unsigned char 
 31017 ;; Registers used:
 31018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31019 ;; Tracked objects:
 31020 ;;		On entry : 0/0
 31021 ;;		On exit  : 0/0
 31022 ;;		Unchanged: 0/0
 31023 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31027 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31028 ;;Total ram usage:        5 bytes
 31029 ;; Hardware stack levels used: 1
 31030 ;; Hardware stack levels required when called: 6
 31031 ;; This function calls:
 31032 ;;		_APP_nvValidate
 31033 ;;		_APP_nvValueChanged
 31034 ;;		_writeNVM
 31035 ;; This function is called by:
 31036 ;;		_nvProcessMessage
 31037 ;; This function uses a non-reentrant model
 31038 ;;
 31039                           
 31040                           	psect	text48
 31041   006D96                     __ptext48:
 31042                           	callstack 0
 31043   006D96                     _setNV:
 31044                           	callstack 118
 31045                           
 31046                           ;incstack = 0
 31047                           ;setNV@index stored from wreg
 31048   006D96  6E19               	movwf	setNV@index^(0+1280),c
 31049   006D98                     
 31050                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 49) return CMDERR_INV_NV_IDX;
 31051   006D98  0E31               	movlw	49
 31052   006D9A  6419               	cpfsgt	setNV@index^(0+1280),c
 31053   006D9C  EFD2  F036         	goto	u6351
 31054   006DA0  EFD4  F036         	goto	u6350
 31055   006DA4                     u6351:
 31056   006DA4  EFD7  F036         	goto	l9042
 31057   006DA8                     u6350:
 31058   006DA8  0E0A               	movlw	10
 31059   006DAA  EF11  F037         	goto	l1555
 31060   006DAE                     l9042:
 31061                           
 31062                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 31063   006DAE  C515  F501         	movff	setNV@value,APP_nvValidate@value
 31064   006DB2  5019               	movf	setNV@index^(0+1280),w,c
 31065   006DB4  ECB3  F041         	call	_APP_nvValidate
 31066   006DB8  0900               	iorlw	0
 31067   006DBA  A4D8               	btfss	status,2,c
 31068   006DBC  EFE2  F036         	goto	u6361
 31069   006DC0  EFE4  F036         	goto	u6360
 31070   006DC4                     u6361:
 31071   006DC4  EFE7  F036         	goto	l9048
 31072   006DC8                     u6360:
 31073   006DC8  0E0C               	movlw	12
 31074   006DCA  EF11  F037         	goto	l1555
 31075   006DCE                     l9048:
 31076                           
 31077                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 31078   006DCE  0E00               	movlw	low _nvCache
 31079   006DD0  2419               	addwf	setNV@index^(0+1280),w,c
 31080   006DD2  6ED9               	movwf	fsr2l,c
 31081   006DD4  6ADA               	clrf	fsr2h,c
 31082   006DD6  0E06               	movlw	high _nvCache
 31083   006DD8  22DA               	addwfc	fsr2h,f,c
 31084   006DDA  50DF               	movf	indf2,w,c
 31085   006DDC  6E18               	movwf	setNV@oldValue^(0+1280),c
 31086                           
 31087                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 31088   006DDE  0E00               	movlw	low _nvCache
 31089   006DE0  2419               	addwf	setNV@index^(0+1280),w,c
 31090   006DE2  6ED9               	movwf	fsr2l,c
 31091   006DE4  6ADA               	clrf	fsr2h,c
 31092   006DE6  0E06               	movlw	high _nvCache
 31093   006DE8  22DA               	addwfc	fsr2h,f,c
 31094   006DEA  C515  F4DF         	movff	setNV@value,indf2
 31095   006DEE                     
 31096                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 31097   006DEE  0E00               	movlw	0
 31098   006DF0  2419               	addwf	setNV@index^(0+1280),w,c
 31099   006DF2  6E16               	movwf	??_setNV^(0+1280),c
 31100   006DF4  6A17               	clrf	(??_setNV+1)^(0+1280),c
 31101   006DF6  0E02               	movlw	2
 31102   006DF8  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 31103   006DFA  C516  F50E         	movff	??_setNV,writeNVM@index
 31104   006DFE  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 31105   006E02  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 31106   006E04  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 31107   006E06  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 31108   006E08  C515  F511         	movff	setNV@value,writeNVM@value
 31109   006E0C  0E00               	movlw	0
 31110   006E0E  EC34  F03C         	call	_writeNVM
 31111   006E12                     
 31112                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 31113   006E12  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 31114   006E16  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 31115   006E1A  5019               	movf	setNV@index^(0+1280),w,c
 31116   006E1C  ECBC  F041         	call	_APP_nvValueChanged
 31117   006E20                     
 31118                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 31119   006E20  0E00               	movlw	0
 31120   006E22                     l1555:
 31121   006E22  0012               	return		;funcret
 31122   006E24                     __end_of_setNV:
 31123                           	callstack 0
 31124                           
 31125 ;; *************** function _APP_nvValueChanged *****************
 31126 ;; Defined at:
 31127 ;;		line 100 in file "../canargb_nvs.c"
 31128 ;; Parameters:    Size  Location     Type
 31129 ;;  index           1    wreg     unsigned char 
 31130 ;;  value           1    0[COMRAM] unsigned char 
 31131 ;;  oldValue        1    1[COMRAM] unsigned char 
 31132 ;; Auto vars:     Size  Location     Type
 31133 ;;  index           1    0[COMRAM] unsigned char 
 31134 ;; Return value:  Size  Location     Type
 31135 ;;                  1    wreg      void 
 31136 ;; Registers used:
 31137 ;;		wreg
 31138 ;; Tracked objects:
 31139 ;;		On entry : 0/0
 31140 ;;		On exit  : 0/0
 31141 ;;		Unchanged: 0/0
 31142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31147 ;;Total ram usage:        2 bytes
 31148 ;; Hardware stack levels used: 1
 31149 ;; Hardware stack levels required when called: 1
 31150 ;; This function calls:
 31151 ;;		Nothing
 31152 ;; This function is called by:
 31153 ;;		_setNV
 31154 ;; This function uses a non-reentrant model
 31155 ;;
 31156                           
 31157                           	psect	text49
 31158   008378                     __ptext49:
 31159                           	callstack 0
 31160   008378                     _APP_nvValueChanged:
 31161                           	callstack 122
 31162   008378  0012               	return		;funcret
 31163   00837A                     __end_of_APP_nvValueChanged:
 31164                           	callstack 0
 31165                           
 31166 ;; *************** function _APP_nvValidate *****************
 31167 ;; Defined at:
 31168 ;;		line 92 in file "../canargb_nvs.c"
 31169 ;; Parameters:    Size  Location     Type
 31170 ;;  index           1    wreg     unsigned char 
 31171 ;;  value           1    0[COMRAM] unsigned char 
 31172 ;; Auto vars:     Size  Location     Type
 31173 ;;  index           1    0[COMRAM] unsigned char 
 31174 ;; Return value:  Size  Location     Type
 31175 ;;                  1    wreg      enum E23468
 31176 ;; Registers used:
 31177 ;;		wreg
 31178 ;; Tracked objects:
 31179 ;;		On entry : 0/0
 31180 ;;		On exit  : 0/0
 31181 ;;		Unchanged: 0/0
 31182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31187 ;;Total ram usage:        1 bytes
 31188 ;; Hardware stack levels used: 1
 31189 ;; Hardware stack levels required when called: 1
 31190 ;; This function calls:
 31191 ;;		Nothing
 31192 ;; This function is called by:
 31193 ;;		_setNV
 31194 ;; This function uses a non-reentrant model
 31195 ;;
 31196                           
 31197                           	psect	text50
 31198   008366                     __ptext50:
 31199                           	callstack 0
 31200   008366                     _APP_nvValidate:
 31201                           	callstack 122
 31202   008366                     
 31203                           ;../canargb_nvs.c: 93:     return VALID;
 31204   008366  0E01               	movlw	1
 31205   008368  0012               	return		;funcret
 31206   00836A                     __end_of_APP_nvValidate:
 31207                           	callstack 0
 31208                           
 31209 ;; *************** function _nvGetESDdata *****************
 31210 ;; Defined at:
 31211 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 31212 ;; Parameters:    Size  Location     Type
 31213 ;;  id              1    wreg     unsigned char 
 31214 ;; Auto vars:     Size  Location     Type
 31215 ;;  id              1    0[COMRAM] unsigned char 
 31216 ;; Return value:  Size  Location     Type
 31217 ;;                  1    wreg      unsigned char 
 31218 ;; Registers used:
 31219 ;;		wreg, status,2, status,0
 31220 ;; Tracked objects:
 31221 ;;		On entry : 0/0
 31222 ;;		On exit  : 0/0
 31223 ;;		Unchanged: 0/0
 31224 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31229 ;;Total ram usage:        1 bytes
 31230 ;; Hardware stack levels used: 1
 31231 ;; Hardware stack levels required when called: 1
 31232 ;; This function calls:
 31233 ;;		Nothing
 31234 ;; This function is called by:
 31235 ;;		_mnsProcessMessage
 31236 ;; This function uses a non-reentrant model
 31237 ;;
 31238                           
 31239                           	psect	text51
 31240   0081D2                     __ptext51:
 31241                           	callstack 0
 31242   0081D2                     _nvGetESDdata:
 31243                           	callstack 123
 31244                           
 31245                           ;incstack = 0
 31246                           ;nvGetESDdata@id stored from wreg
 31247   0081D2  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 31248   0081D4                     
 31249                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 31250   0081D4  EFF2  F040         	goto	l9070
 31251   0081D8                     l9060:
 31252   0081D8  0E31               	movlw	49
 31253   0081DA  EFF9  F040         	goto	l1581
 31254   0081DE                     l9064:
 31255   0081DE  0E00               	movlw	0
 31256   0081E0  EFF9  F040         	goto	l1581
 31257   0081E4                     l9070:
 31258   0081E4  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 31259                           
 31260                           ; Switch size 1, requested type "simple"
 31261                           ; Number of cases is 1, Range of values is 1 to 1
 31262                           ; switch strategies available:
 31263                           ; Name         Instructions Cycles
 31264                           ; simple_byte            4     3 (average)
 31265                           ;	Chosen strategy is simple_byte
 31266   0081E6  0A01               	xorlw	1	; case 1
 31267   0081E8  B4D8               	btfsc	status,2,c
 31268   0081EA  EFEC  F040         	goto	l9060
 31269   0081EE  EFEF  F040         	goto	l9064
 31270   0081F2                     l1581:
 31271   0081F2  0012               	return		;funcret
 31272   0081F4                     __end_of_nvGetESDdata:
 31273                           	callstack 0
 31274                           
 31275 ;; *************** function _consumerEsdData *****************
 31276 ;; Defined at:
 31277 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31278 ;; Parameters:    Size  Location     Type
 31279 ;;  index           1    wreg     unsigned char 
 31280 ;; Auto vars:     Size  Location     Type
 31281 ;;  index           1    0[COMRAM] unsigned char 
 31282 ;; Return value:  Size  Location     Type
 31283 ;;                  1    wreg      unsigned char 
 31284 ;; Registers used:
 31285 ;;		wreg, status,2, status,0
 31286 ;; Tracked objects:
 31287 ;;		On entry : 0/0
 31288 ;;		On exit  : 0/0
 31289 ;;		Unchanged: 0/0
 31290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31295 ;;Total ram usage:        1 bytes
 31296 ;; Hardware stack levels used: 1
 31297 ;; Hardware stack levels required when called: 1
 31298 ;; This function calls:
 31299 ;;		Nothing
 31300 ;; This function is called by:
 31301 ;;		_mnsProcessMessage
 31302 ;; This function uses a non-reentrant model
 31303 ;;
 31304                           
 31305                           	psect	text52
 31306   008254                     __ptext52:
 31307                           	callstack 0
 31308   008254                     _consumerEsdData:
 31309                           	callstack 123
 31310                           
 31311                           ;incstack = 0
 31312                           ;consumerEsdData@index stored from wreg
 31313   008254  6E01               	movwf	consumerEsdData@index^(0+1280),c
 31314   008256                     
 31315                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 31316   008256  EF30  F041         	goto	l8702
 31317   00825A                     l8692:
 31318                           
 31319                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 31320   00825A  0E00               	movlw	0
 31321   00825C  EF37  F041         	goto	l834
 31322   008260                     l8702:
 31323   008260  5001               	movf	consumerEsdData@index^(0+1280),w,c
 31324                           
 31325                           ; Switch size 1, requested type "simple"
 31326                           ; Number of cases is 1, Range of values is 0 to 0
 31327                           ; switch strategies available:
 31328                           ; Name         Instructions Cycles
 31329                           ; simple_byte            4     3 (average)
 31330                           ;	Chosen strategy is simple_byte
 31331   008262  0A00               	xorlw	0	; case 0
 31332   008264  B4D8               	btfsc	status,2,c
 31333   008266  EF2D  F041         	goto	l8692
 31334   00826A  EF2D  F041         	goto	l8692
 31335   00826E                     l834:
 31336   00826E  0012               	return		;funcret
 31337   008270                     __end_of_consumerEsdData:
 31338                           	callstack 0
 31339                           
 31340 ;; *************** function _canEsdData *****************
 31341 ;; Defined at:
 31342 ;;		line 468 in file "../../VLCBlib_PIC/can18_can_2.c"
 31343 ;; Parameters:    Size  Location     Type
 31344 ;;  id              1    wreg     unsigned char 
 31345 ;; Auto vars:     Size  Location     Type
 31346 ;;  id              1    0[COMRAM] unsigned char 
 31347 ;; Return value:  Size  Location     Type
 31348 ;;                  1    wreg      unsigned char 
 31349 ;; Registers used:
 31350 ;;		wreg, status,2, status,0
 31351 ;; Tracked objects:
 31352 ;;		On entry : 0/0
 31353 ;;		On exit  : 0/0
 31354 ;;		Unchanged: 0/0
 31355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31360 ;;Total ram usage:        1 bytes
 31361 ;; Hardware stack levels used: 1
 31362 ;; Hardware stack levels required when called: 1
 31363 ;; This function calls:
 31364 ;;		Nothing
 31365 ;; This function is called by:
 31366 ;;		_mnsProcessMessage
 31367 ;; This function uses a non-reentrant model
 31368 ;;
 31369                           
 31370                           	psect	text53
 31371   0081F4                     __ptext53:
 31372                           	callstack 0
 31373   0081F4                     _canEsdData:
 31374                           	callstack 123
 31375                           
 31376                           ;incstack = 0
 31377                           ;canEsdData@id stored from wreg
 31378   0081F4  6E01               	movwf	canEsdData@id^(0+1280),c
 31379   0081F6                     
 31380                           ;../../VLCBlib_PIC/can18_can_2.c: 469:     switch(id) {
 31381   0081F6  EF03  F041         	goto	l8626
 31382   0081FA                     l8616:
 31383                           
 31384                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return CAN_HW_PIC_CAN_2_0;
 31385   0081FA  0E02               	movlw	2
 31386   0081FC  EF0A  F041         	goto	l633
 31387   008200                     l8620:
 31388                           
 31389                           ;../../VLCBlib_PIC/can18_can_2.c: 473:             return 0;
 31390   008200  0E00               	movlw	0
 31391   008202  EF0A  F041         	goto	l633
 31392   008206                     l8626:
 31393   008206  5001               	movf	canEsdData@id^(0+1280),w,c
 31394                           
 31395                           ; Switch size 1, requested type "simple"
 31396                           ; Number of cases is 1, Range of values is 1 to 1
 31397                           ; switch strategies available:
 31398                           ; Name         Instructions Cycles
 31399                           ; simple_byte            4     3 (average)
 31400                           ;	Chosen strategy is simple_byte
 31401   008208  0A01               	xorlw	1	; case 1
 31402   00820A  B4D8               	btfsc	status,2,c
 31403   00820C  EFFD  F040         	goto	l8616
 31404   008210  EF00  F041         	goto	l8620
 31405   008214                     l633:
 31406   008214  0012               	return		;funcret
 31407   008216                     __end_of_canEsdData:
 31408                           	callstack 0
 31409                           
 31410 ;; *************** function _bootEsdData *****************
 31411 ;; Defined at:
 31412 ;;		line 252 in file "../../VLCBlib_PIC/boot.c"
 31413 ;; Parameters:    Size  Location     Type
 31414 ;;  id              1    wreg     unsigned char 
 31415 ;; Auto vars:     Size  Location     Type
 31416 ;;  id              1    0[COMRAM] unsigned char 
 31417 ;; Return value:  Size  Location     Type
 31418 ;;                  1    wreg      unsigned char 
 31419 ;; Registers used:
 31420 ;;		wreg, status,2, status,0
 31421 ;; Tracked objects:
 31422 ;;		On entry : 0/0
 31423 ;;		On exit  : 0/0
 31424 ;;		Unchanged: 0/0
 31425 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31430 ;;Total ram usage:        1 bytes
 31431 ;; Hardware stack levels used: 1
 31432 ;; Hardware stack levels required when called: 1
 31433 ;; This function calls:
 31434 ;;		Nothing
 31435 ;; This function is called by:
 31436 ;;		_mnsProcessMessage
 31437 ;; This function uses a non-reentrant model
 31438 ;;
 31439                           
 31440                           	psect	text54
 31441   007EAE                     __ptext54:
 31442                           	callstack 0
 31443   007EAE                     _bootEsdData:
 31444                           	callstack 123
 31445                           
 31446                           ;incstack = 0
 31447                           ;bootEsdData@id stored from wreg
 31448   007EAE  6E01               	movwf	bootEsdData@id^(0+1280),c
 31449   007EB0                     
 31450                           ;../../VLCBlib_PIC/boot.c: 253:     switch (id) {
 31451   007EB0  EF65  F03F         	goto	l8520
 31452   007EB4                     l347:
 31453                           
 31454                           ;../../VLCBlib_PIC/boot.c: 256:             return bootloaderType;
 31455   007EB4  0105               	movlb	5	; () banked
 31456   007EB6  51AA               	movf	_bootloaderType& (0+255),w,b
 31457   007EB8  EF70  F03F         	goto	l348
 31458   007EBC                     l349:
 31459                           
 31460                           ;../../VLCBlib_PIC/boot.c: 259:             return bootloaderVersion;
 31461   007EBC  0105               	movlb	5	; () banked
 31462   007EBE  51A9               	movf	_bootloaderVersion& (0+255),w,b
 31463   007EC0  EF70  F03F         	goto	l348
 31464   007EC4                     l8514:
 31465                           
 31466                           ;../../VLCBlib_PIC/boot.c: 261:             return 0;
 31467   007EC4  0E00               	movlw	0
 31468   007EC6  EF70  F03F         	goto	l348
 31469   007ECA                     l8520:
 31470   007ECA  5001               	movf	bootEsdData@id^(0+1280),w,c
 31471                           
 31472                           ; Switch size 1, requested type "simple"
 31473                           ; Number of cases is 2, Range of values is 1 to 2
 31474                           ; switch strategies available:
 31475                           ; Name         Instructions Cycles
 31476                           ; simple_byte            7     4 (average)
 31477                           ;	Chosen strategy is simple_byte
 31478   007ECC  0A01               	xorlw	1	; case 1
 31479   007ECE  B4D8               	btfsc	status,2,c
 31480   007ED0  EF5A  F03F         	goto	l347
 31481   007ED4  0A03               	xorlw	3	; case 2
 31482   007ED6  B4D8               	btfsc	status,2,c
 31483   007ED8  EF5E  F03F         	goto	l349
 31484   007EDC  EF62  F03F         	goto	l8514
 31485   007EE0                     l348:
 31486   007EE0  0012               	return		;funcret
 31487   007EE2                     __end_of_bootEsdData:
 31488                           	callstack 0
 31489                           
 31490 ;; *************** function _teachGetESDdata *****************
 31491 ;; Defined at:
 31492 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31493 ;; Parameters:    Size  Location     Type
 31494 ;;  id              1    wreg     unsigned char 
 31495 ;; Auto vars:     Size  Location     Type
 31496 ;;  id              1    0[COMRAM] unsigned char 
 31497 ;; Return value:  Size  Location     Type
 31498 ;;                  1    wreg      unsigned char 
 31499 ;; Registers used:
 31500 ;;		wreg, status,2, status,0
 31501 ;; Tracked objects:
 31502 ;;		On entry : 0/0
 31503 ;;		On exit  : 0/0
 31504 ;;		Unchanged: 0/0
 31505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31510 ;;Total ram usage:        1 bytes
 31511 ;; Hardware stack levels used: 1
 31512 ;; Hardware stack levels required when called: 1
 31513 ;; This function calls:
 31514 ;;		Nothing
 31515 ;; This function is called by:
 31516 ;;		_mnsProcessMessage
 31517 ;; This function uses a non-reentrant model
 31518 ;;
 31519                           
 31520                           	psect	text55
 31521   007F18                     __ptext55:
 31522                           	callstack 0
 31523   007F18                     _teachGetESDdata:
 31524                           	callstack 123
 31525                           
 31526                           ;incstack = 0
 31527                           ;teachGetESDdata@id stored from wreg
 31528   007F18  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 31529   007F1A                     
 31530                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 31531   007F1A  EF98  F03F         	goto	l8898
 31532   007F1E                     l8884:
 31533   007F1E  0EFF               	movlw	255
 31534   007F20  EFA3  F03F         	goto	l1020
 31535   007F24                     l8888:
 31536   007F24  0EFC               	movlw	252
 31537   007F26  EFA3  F03F         	goto	l1020
 31538   007F2A                     l8892:
 31539   007F2A  0E00               	movlw	0
 31540   007F2C  EFA3  F03F         	goto	l1020
 31541   007F30                     l8898:
 31542   007F30  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 31543                           
 31544                           ; Switch size 1, requested type "simple"
 31545                           ; Number of cases is 2, Range of values is 1 to 2
 31546                           ; switch strategies available:
 31547                           ; Name         Instructions Cycles
 31548                           ; simple_byte            7     4 (average)
 31549                           ;	Chosen strategy is simple_byte
 31550   007F32  0A01               	xorlw	1	; case 1
 31551   007F34  B4D8               	btfsc	status,2,c
 31552   007F36  EF8F  F03F         	goto	l8884
 31553   007F3A  0A03               	xorlw	3	; case 2
 31554   007F3C  B4D8               	btfsc	status,2,c
 31555   007F3E  EF92  F03F         	goto	l8888
 31556   007F42  EF95  F03F         	goto	l8892
 31557   007F46                     l1020:
 31558   007F46  0012               	return		;funcret
 31559   007F48                     __end_of_teachGetESDdata:
 31560                           	callstack 0
 31561                           
 31562 ;; *************** function _nvGetDiagnostic *****************
 31563 ;; Defined at:
 31564 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 31565 ;; Parameters:    Size  Location     Type
 31566 ;;  index           1    wreg     unsigned char 
 31567 ;; Auto vars:     Size  Location     Type
 31568 ;;  index           1    8[COMRAM] unsigned char 
 31569 ;; Return value:  Size  Location     Type
 31570 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31571 ;; Registers used:
 31572 ;;		wreg, status,2, status,0, prodl, prodh
 31573 ;; Tracked objects:
 31574 ;;		On entry : 0/0
 31575 ;;		On exit  : 0/0
 31576 ;;		Unchanged: 0/0
 31577 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31581 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31582 ;;Total ram usage:        3 bytes
 31583 ;; Hardware stack levels used: 1
 31584 ;; Hardware stack levels required when called: 1
 31585 ;; This function calls:
 31586 ;;		Nothing
 31587 ;; This function is called by:
 31588 ;;		_mnsTRallDiagnosticsCallback
 31589 ;;		_mnsProcessMessage
 31590 ;; This function uses a non-reentrant model
 31591 ;;
 31592                           
 31593                           	psect	text56
 31594   007F48                     __ptext56:
 31595                           	callstack 0
 31596   007F48                     _nvGetDiagnostic:
 31597                           	callstack 122
 31598                           
 31599                           ;incstack = 0
 31600                           ;nvGetDiagnostic@index stored from wreg
 31601   007F48  6E09               	movwf	nvGetDiagnostic@index^(0+1280),c
 31602   007F4A                     
 31603                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 31604   007F4A  0E02               	movlw	2
 31605   007F4C  6409               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 31606   007F4E  EFAB  F03F         	goto	u5711
 31607   007F52  EFAD  F03F         	goto	u5710
 31608   007F56                     u5711:
 31609   007F56  EFB3  F03F         	goto	l8378
 31610   007F5A                     u5710:
 31611   007F5A                     
 31612                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 31613   007F5A  0E00               	movlw	0
 31614   007F5C  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31615   007F5E  0E00               	movlw	0
 31616   007F60  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31617   007F62  EFBB  F03F         	goto	l1536
 31618   007F66                     l8378:
 31619                           
 31620                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 31621   007F66  5009               	movf	nvGetDiagnostic@index^(0+1280),w,c
 31622   007F68  0D02               	mullw	2
 31623   007F6A  0EBB               	movlw	low _nvDiagnostics
 31624   007F6C  24F3               	addwf	243,w,c
 31625   007F6E  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31626   007F70  0E05               	movlw	high _nvDiagnostics
 31627   007F72  20F4               	addwfc	prodh,w,c
 31628   007F74  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31629   007F76                     l1536:
 31630   007F76  0012               	return		;funcret
 31631   007F78                     __end_of_nvGetDiagnostic:
 31632                           	callstack 0
 31633                           
 31634 ;; *************** function _mnsGetDiagnostic *****************
 31635 ;; Defined at:
 31636 ;;		line 807 in file "../../VLCBlib_PIC/mns.c"
 31637 ;; Parameters:    Size  Location     Type
 31638 ;;  index           1    wreg     unsigned char 
 31639 ;; Auto vars:     Size  Location     Type
 31640 ;;  index           1    8[COMRAM] unsigned char 
 31641 ;; Return value:  Size  Location     Type
 31642 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31643 ;; Registers used:
 31644 ;;		wreg, status,2, status,0, prodl, prodh
 31645 ;; Tracked objects:
 31646 ;;		On entry : 0/0
 31647 ;;		On exit  : 0/0
 31648 ;;		Unchanged: 0/0
 31649 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31654 ;;Total ram usage:        3 bytes
 31655 ;; Hardware stack levels used: 1
 31656 ;; Hardware stack levels required when called: 1
 31657 ;; This function calls:
 31658 ;;		Nothing
 31659 ;; This function is called by:
 31660 ;;		_mnsTRallDiagnosticsCallback
 31661 ;;		_mnsProcessMessage
 31662 ;; This function uses a non-reentrant model
 31663 ;;
 31664                           
 31665                           	psect	text57
 31666   007F78                     __ptext57:
 31667                           	callstack 0
 31668   007F78                     _mnsGetDiagnostic:
 31669                           	callstack 122
 31670                           
 31671                           ;incstack = 0
 31672                           ;mnsGetDiagnostic@index stored from wreg
 31673   007F78  6E09               	movwf	mnsGetDiagnostic@index^(0+1280),c
 31674   007F7A                     
 31675                           ;../../VLCBlib_PIC/mns.c: 808:     if (index > 6) {
 31676   007F7A  0E06               	movlw	6
 31677   007F7C  6409               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 31678   007F7E  EFC3  F03F         	goto	u5661
 31679   007F82  EFC5  F03F         	goto	u5660
 31680   007F86                     u5661:
 31681   007F86  EFCB  F03F         	goto	l8330
 31682   007F8A                     u5660:
 31683   007F8A                     
 31684                           ;../../VLCBlib_PIC/mns.c: 809:         return ((void*)0);
 31685   007F8A  0E00               	movlw	0
 31686   007F8C  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31687   007F8E  0E00               	movlw	0
 31688   007F90  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31689   007F92  EFD3  F03F         	goto	l1426
 31690   007F96                     l8330:
 31691                           
 31692                           ;../../VLCBlib_PIC/mns.c: 811:     return &(mnsDiagnostics[index]);
 31693   007F96  5009               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 31694   007F98  0D02               	mullw	2
 31695   007F9A  0EAD               	movlw	low _mnsDiagnostics
 31696   007F9C  24F3               	addwf	243,w,c
 31697   007F9E  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31698   007FA0  0E05               	movlw	high _mnsDiagnostics
 31699   007FA2  20F4               	addwfc	prodh,w,c
 31700   007FA4  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31701   007FA6                     l1426:
 31702   007FA6  0012               	return		;funcret
 31703   007FA8                     __end_of_mnsGetDiagnostic:
 31704                           	callstack 0
 31705                           
 31706 ;; *************** function _consumerGetDiagnostic *****************
 31707 ;; Defined at:
 31708 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31709 ;; Parameters:    Size  Location     Type
 31710 ;;  index           1    wreg     unsigned char 
 31711 ;; Auto vars:     Size  Location     Type
 31712 ;;  index           1    8[COMRAM] unsigned char 
 31713 ;; Return value:  Size  Location     Type
 31714 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31715 ;; Registers used:
 31716 ;;		wreg, status,2, status,0, prodl, prodh
 31717 ;; Tracked objects:
 31718 ;;		On entry : 0/0
 31719 ;;		On exit  : 0/0
 31720 ;;		Unchanged: 0/0
 31721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31725 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31726 ;;Total ram usage:        3 bytes
 31727 ;; Hardware stack levels used: 1
 31728 ;; Hardware stack levels required when called: 1
 31729 ;; This function calls:
 31730 ;;		Nothing
 31731 ;; This function is called by:
 31732 ;;		_mnsTRallDiagnosticsCallback
 31733 ;;		_mnsProcessMessage
 31734 ;; This function uses a non-reentrant model
 31735 ;;
 31736                           
 31737                           	psect	text58
 31738   007FA8                     __ptext58:
 31739                           	callstack 0
 31740   007FA8                     _consumerGetDiagnostic:
 31741                           	callstack 122
 31742                           
 31743                           ;incstack = 0
 31744                           ;consumerGetDiagnostic@index stored from wreg
 31745   007FA8  6E09               	movwf	consumerGetDiagnostic@index^(0+1280),c
 31746   007FAA                     
 31747                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 31748   007FAA  0E02               	movlw	2
 31749   007FAC  6409               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 31750   007FAE  EFDB  F03F         	goto	u5491
 31751   007FB2  EFDD  F03F         	goto	u5490
 31752   007FB6                     u5491:
 31753   007FB6  EFE3  F03F         	goto	l8106
 31754   007FBA                     u5490:
 31755   007FBA                     
 31756                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 31757   007FBA  0E00               	movlw	0
 31758   007FBC  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31759   007FBE  0E00               	movlw	0
 31760   007FC0  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31761   007FC2  EFEB  F03F         	goto	l829
 31762   007FC6                     l8106:
 31763                           
 31764                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 31765   007FC6  5009               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 31766   007FC8  0D02               	mullw	2
 31767   007FCA  0EC1               	movlw	low _consumerDiagnostics
 31768   007FCC  24F3               	addwf	243,w,c
 31769   007FCE  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31770   007FD0  0E05               	movlw	high _consumerDiagnostics
 31771   007FD2  20F4               	addwfc	prodh,w,c
 31772   007FD4  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31773   007FD6                     l829:
 31774   007FD6  0012               	return		;funcret
 31775   007FD8                     __end_of_consumerGetDiagnostic:
 31776                           	callstack 0
 31777                           
 31778 ;; *************** function _canGetDiagnostic *****************
 31779 ;; Defined at:
 31780 ;;		line 500 in file "../../VLCBlib_PIC/can18_can_2.c"
 31781 ;; Parameters:    Size  Location     Type
 31782 ;;  index           1    wreg     unsigned char 
 31783 ;; Auto vars:     Size  Location     Type
 31784 ;;  index           1    9[COMRAM] unsigned char 
 31785 ;;  i16             2    0        short 
 31786 ;; Return value:  Size  Location     Type
 31787 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31788 ;; Registers used:
 31789 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31790 ;; Tracked objects:
 31791 ;;		On entry : 0/0
 31792 ;;		On exit  : 0/0
 31793 ;;		Unchanged: 0/0
 31794 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31799 ;;Total ram usage:        4 bytes
 31800 ;; Hardware stack levels used: 1
 31801 ;; Hardware stack levels required when called: 2
 31802 ;; This function calls:
 31803 ;;		_getNumRxBuffersInUse
 31804 ;;		_getNumTxBuffersInUse
 31805 ;; This function is called by:
 31806 ;;		_mnsTRallDiagnosticsCallback
 31807 ;;		_mnsProcessMessage
 31808 ;; This function uses a non-reentrant model
 31809 ;;
 31810                           
 31811                           	psect	text59
 31812   006636                     __ptext59:
 31813                           	callstack 0
 31814   006636                     _canGetDiagnostic:
 31815                           	callstack 121
 31816                           
 31817                           ;incstack = 0
 31818                           ;canGetDiagnostic@index stored from wreg
 31819   006636  6E0A               	movwf	canGetDiagnostic@index^(0+1280),c
 31820   006638                     
 31821                           ;../../VLCBlib_PIC/can18_can_2.c: 501:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           503:     if (index > 18) {
 31822   006638  0E12               	movlw	18
 31823   00663A  640A               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 31824   00663C  EF22  F033         	goto	u5461
 31825   006640  EF24  F033         	goto	u5460
 31826   006644                     u5461:
 31827   006644  EF4E  F033         	goto	l8074
 31828   006648                     u5460:
 31829   006648                     
 31830                           ;../../VLCBlib_PIC/can18_can_2.c: 504:         return ((void*)0);
 31831   006648  0E00               	movlw	0
 31832   00664A  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31833   00664C  0E00               	movlw	0
 31834   00664E  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31835   006650  EF6D  F033         	goto	l639
 31836   006654                     l641:
 31837                           
 31838                           ;../../VLCBlib_PIC/can18_can_2.c: 508:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 31839   006654  C136 F694          	movff	310,_canDiagnostics+6	;volatile
 31840   006658  0106               	movlb	6	; () banked
 31841   00665A  6B95               	clrf	(_canDiagnostics+7)& (0+255),b
 31842                           
 31843                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             break;
 31844   00665C  EF65  F033         	goto	l8076
 31845   006660                     l8068:
 31846                           
 31847                           ;../../VLCBlib_PIC/can18_can_2.c: 511:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 31848   006660  EC27  F039         	call	_getNumTxBuffersInUse	;wreg free
 31849   006664  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31850   006666  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31851   006668  0106               	movlb	6	; () banked
 31852   00666A  6F96               	movwf	(_canDiagnostics+8)& (0+255),b
 31853   00666C  6B97               	clrf	(_canDiagnostics+9)& (0+255),b
 31854                           
 31855                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             break;
 31856   00666E  EF65  F033         	goto	l8076
 31857   006672                     l8070:
 31858                           
 31859                           ;../../VLCBlib_PIC/can18_can_2.c: 514:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 31860   006672  EC53  F03A         	call	_getNumRxBuffersInUse	;wreg free
 31861   006676  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31862   006678  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31863   00667A  0106               	movlb	6	; () banked
 31864   00667C  6F9C               	movwf	(_canDiagnostics+14)& (0+255),b
 31865   00667E  6B9D               	clrf	(_canDiagnostics+15)& (0+255),b
 31866                           
 31867                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             break;
 31868   006680  EF65  F033         	goto	l8076
 31869   006684                     l645:
 31870                           
 31871                           ;../../VLCBlib_PIC/can18_can_2.c: 517:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 31872   006684  C139 F692          	movff	313,_canDiagnostics+4	;volatile
 31873   006688  0106               	movlb	6	; () banked
 31874   00668A  6B93               	clrf	(_canDiagnostics+5)& (0+255),b
 31875                           
 31876                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             break;
 31877   00668C  EF65  F033         	goto	l8076
 31878   006690                     l646:
 31879                           
 31880                           ;../../VLCBlib_PIC/can18_can_2.c: 520:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 31881   006690  C138 F690          	movff	312,_canDiagnostics+2	;volatile
 31882   006694  0106               	movlb	6	; () banked
 31883   006696  6B91               	clrf	(_canDiagnostics+3)& (0+255),b
 31884                           
 31885                           ;../../VLCBlib_PIC/can18_can_2.c: 521:             break;
 31886   006698  EF65  F033         	goto	l8076
 31887   00669C                     l8074:
 31888   00669C  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31889                           
 31890                           ; Switch size 1, requested type "simple"
 31891                           ; Number of cases is 5, Range of values is 1 to 7
 31892                           ; switch strategies available:
 31893                           ; Name         Instructions Cycles
 31894                           ; simple_byte           16     9 (average)
 31895                           ;	Chosen strategy is simple_byte
 31896   00669E  0A01               	xorlw	1	; case 1
 31897   0066A0  B4D8               	btfsc	status,2,c
 31898   0066A2  EF48  F033         	goto	l646
 31899   0066A6  0A03               	xorlw	3	; case 2
 31900   0066A8  B4D8               	btfsc	status,2,c
 31901   0066AA  EF42  F033         	goto	l645
 31902   0066AE  0A01               	xorlw	1	; case 3
 31903   0066B0  B4D8               	btfsc	status,2,c
 31904   0066B2  EF2A  F033         	goto	l641
 31905   0066B6  0A07               	xorlw	7	; case 4
 31906   0066B8  B4D8               	btfsc	status,2,c
 31907   0066BA  EF30  F033         	goto	l8068
 31908   0066BE  0A03               	xorlw	3	; case 7
 31909   0066C0  B4D8               	btfsc	status,2,c
 31910   0066C2  EF39  F033         	goto	l8070
 31911   0066C6  EF65  F033         	goto	l8076
 31912   0066CA                     l8076:
 31913                           
 31914                           ;../../VLCBlib_PIC/can18_can_2.c: 524:     return &(canDiagnostics[index]);
 31915   0066CA  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31916   0066CC  0D02               	mullw	2
 31917   0066CE  0E8E               	movlw	low _canDiagnostics
 31918   0066D0  24F3               	addwf	243,w,c
 31919   0066D2  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31920   0066D4  0E06               	movlw	high _canDiagnostics
 31921   0066D6  20F4               	addwfc	prodh,w,c
 31922   0066D8  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31923   0066DA                     l639:
 31924   0066DA  0012               	return		;funcret
 31925   0066DC                     __end_of_canGetDiagnostic:
 31926                           	callstack 0
 31927                           
 31928 ;; *************** function _teachGetDiagnostic *****************
 31929 ;; Defined at:
 31930 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31931 ;; Parameters:    Size  Location     Type
 31932 ;;  index           1    wreg     unsigned char 
 31933 ;; Auto vars:     Size  Location     Type
 31934 ;;  index           1    8[COMRAM] unsigned char 
 31935 ;; Return value:  Size  Location     Type
 31936 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31937 ;; Registers used:
 31938 ;;		wreg, status,2, status,0, prodl, prodh
 31939 ;; Tracked objects:
 31940 ;;		On entry : 0/0
 31941 ;;		On exit  : 0/0
 31942 ;;		Unchanged: 0/0
 31943 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31947 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31948 ;;Total ram usage:        3 bytes
 31949 ;; Hardware stack levels used: 1
 31950 ;; Hardware stack levels required when called: 1
 31951 ;; This function calls:
 31952 ;;		Nothing
 31953 ;; This function is called by:
 31954 ;;		_mnsTRallDiagnosticsCallback
 31955 ;;		_mnsProcessMessage
 31956 ;; This function uses a non-reentrant model
 31957 ;;
 31958                           
 31959                           	psect	text60
 31960   007FD8                     __ptext60:
 31961                           	callstack 0
 31962   007FD8                     _teachGetDiagnostic:
 31963                           	callstack 122
 31964                           
 31965                           ;incstack = 0
 31966                           ;teachGetDiagnostic@index stored from wreg
 31967   007FD8  6E09               	movwf	teachGetDiagnostic@index^(0+1280),c
 31968   007FDA                     
 31969                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 31970   007FDA  0E01               	movlw	1
 31971   007FDC  6409               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 31972   007FDE  EFF3  F03F         	goto	u5541
 31973   007FE2  EFF5  F03F         	goto	u5540
 31974   007FE6                     u5541:
 31975   007FE6  EFFB  F03F         	goto	l8136
 31976   007FEA                     u5540:
 31977   007FEA                     
 31978                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 31979   007FEA  0E00               	movlw	0
 31980   007FEC  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31981   007FEE  0E00               	movlw	0
 31982   007FF0  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31983   007FF2  EF03  F040         	goto	l1027
 31984   007FF6                     l8136:
 31985                           
 31986                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 31987   007FF6  5009               	movf	teachGetDiagnostic@index^(0+1280),w,c
 31988   007FF8  0D02               	mullw	2
 31989   007FFA  0ECC               	movlw	low _teachDiagnostics
 31990   007FFC  24F3               	addwf	243,w,c
 31991   007FFE  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31992   008000  0E05               	movlw	high _teachDiagnostics
 31993   008002  20F4               	addwfc	prodh,w,c
 31994   008004  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31995   008006                     l1027:
 31996   008006  0012               	return		;funcret
 31997   008008                     __end_of_teachGetDiagnostic:
 31998                           	callstack 0
 31999                           
 32000 ;; *************** function _startTimedResponse *****************
 32001 ;; Defined at:
 32002 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 32003 ;; Parameters:    Size  Location     Type
 32004 ;;  type            1    wreg     unsigned char 
 32005 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 32006 ;;  callback        2    5[COMRAM] PTR FTN(unsigned char ,u
 32007 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 32008 ;;		 -> reqevCallback(1), nerdCallback(1), 
 32009 ;; Auto vars:     Size  Location     Type
 32010 ;;  type            1    7[COMRAM] unsigned char 
 32011 ;; Return value:  Size  Location     Type
 32012 ;;                  1    wreg      void 
 32013 ;; Registers used:
 32014 ;;		wreg, status,2, status,0
 32015 ;; Tracked objects:
 32016 ;;		On entry : 0/0
 32017 ;;		On exit  : 0/0
 32018 ;;		Unchanged: 0/0
 32019 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32024 ;;Total ram usage:        4 bytes
 32025 ;; Hardware stack levels used: 1
 32026 ;; Hardware stack levels required when called: 1
 32027 ;; This function calls:
 32028 ;;		Nothing
 32029 ;; This function is called by:
 32030 ;;		_doNerd
 32031 ;;		_doReval
 32032 ;;		_doReqev
 32033 ;;		_mnsProcessMessage
 32034 ;;		_nvProcessMessage
 32035 ;; This function uses a non-reentrant model
 32036 ;;
 32037                           
 32038                           	psect	text61
 32039   007928                     __ptext61:
 32040                           	callstack 0
 32041   007928                     _startTimedResponse:
 32042                           	callstack 122
 32043                           
 32044                           ;incstack = 0
 32045                           ;startTimedResponse@type stored from wreg
 32046   007928  6E08               	movwf	startTimedResponse@type^(0+1280),c
 32047   00792A                     
 32048                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 32049   00792A  C508  F596         	movff	startTimedResponse@type,_timedResponseType
 32050   00792E                     
 32051                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 32052   00792E  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 32053   007930  A4D8               	btfss	status,2,c
 32054   007932  EF9D  F03C         	goto	u5581
 32055   007936  EF9F  F03C         	goto	u5580
 32056   00793A                     u5581:
 32057   00793A  EFA5  F03C         	goto	l1865
 32058   00793E                     u5580:
 32059   00793E                     
 32060                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 32061   00793E  0E01               	movlw	1
 32062   007940  0105               	movlb	5	; () banked
 32063   007942  6F97               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32064   007944                     
 32065                           ; BSR set to: 5
 32066                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 32067   007944  6B98               	clrf	_timedResponseServiceIndex& (0+255),b
 32068                           
 32069                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 32070   007946  EFBC  F03C         	goto	l8176
 32071   00794A                     l1865:
 32072                           
 32073                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 32074   00794A  0105               	movlb	5	; () banked
 32075   00794C  6B97               	clrf	_timedResponseAllServicesFlag& (0+255),b
 32076   00794E                     
 32077                           ; BSR set to: 5
 32078                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 6)) {
 32079   00794E  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 32080   007950  B4D8               	btfsc	status,2,c
 32081   007952  EFAD  F03C         	goto	u5591
 32082   007956  EFAF  F03C         	goto	u5590
 32083   00795A                     u5591:
 32084   00795A  EFB7  F03C         	goto	l1869
 32085   00795E                     u5590:
 32086   00795E                     
 32087                           ; BSR set to: 5
 32088   00795E  0E06               	movlw	6
 32089   007960  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 32090   007962  EFB5  F03C         	goto	u5601
 32091   007966  EFB7  F03C         	goto	u5600
 32092   00796A                     u5601:
 32093   00796A  EFBA  F03C         	goto	l8174
 32094   00796E                     u5600:
 32095   00796E                     l1869:
 32096                           
 32097                           ; BSR set to: 5
 32098                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 32099   00796E  6996               	setf	_timedResponseType& (0+255),b
 32100                           
 32101                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 32102   007970  EFC1  F03C         	goto	l1870
 32103   007974                     l8174:
 32104                           
 32105                           ; BSR set to: 5
 32106                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 32107   007974  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 32108   007976  6F98               	movwf	_timedResponseServiceIndex& (0+255),b
 32109   007978                     l8176:
 32110                           
 32111                           ; BSR set to: 5
 32112                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 32113   007978  6B95               	clrf	_timedResponseStep& (0+255),b
 32114                           
 32115                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 32116   00797A  C506  F587         	movff	startTimedResponse@callback,_timedResponseCallback
 32117   00797E  C507  F588         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 32118   007982                     l1870:
 32119                           
 32120                           ; BSR set to: 5
 32121   007982  0012               	return		;funcret
 32122   007984                     __end_of_startTimedResponse:
 32123                           	callstack 0
 32124                           
 32125 ;; *************** function _sendMessage6 *****************
 32126 ;; Defined at:
 32127 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 32128 ;; Parameters:    Size  Location     Type
 32129 ;;  opc             1    wreg     enum E22928
 32130 ;;  data1           1   37[COMRAM] unsigned char 
 32131 ;;  data2           1   38[COMRAM] unsigned char 
 32132 ;;  data3           1   39[COMRAM] unsigned char 
 32133 ;;  data4           1   40[COMRAM] unsigned char 
 32134 ;;  data5           1   41[COMRAM] unsigned char 
 32135 ;;  data6           1   42[COMRAM] unsigned char 
 32136 ;; Auto vars:     Size  Location     Type
 32137 ;;  opc             1   43[COMRAM] enum E22928
 32138 ;; Return value:  Size  Location     Type
 32139 ;;                  1    wreg      void 
 32140 ;; Registers used:
 32141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32142 ;; Tracked objects:
 32143 ;;		On entry : 0/0
 32144 ;;		On exit  : 0/0
 32145 ;;		Unchanged: 0/0
 32146 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32147 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32151 ;;Total ram usage:        7 bytes
 32152 ;; Hardware stack levels used: 1
 32153 ;; Hardware stack levels required when called: 5
 32154 ;; This function calls:
 32155 ;;		_sendMessage
 32156 ;; This function is called by:
 32157 ;;		_doReqev
 32158 ;;		_reqevCallback
 32159 ;;		_mnsProcessMessage
 32160 ;;		_mnsTRallDiagnosticsCallback
 32161 ;; This function uses a non-reentrant model
 32162 ;;
 32163                           
 32164                           	psect	text62
 32165   008064                     __ptext62:
 32166                           	callstack 0
 32167   008064                     _sendMessage6:
 32168                           	callstack 118
 32169                           
 32170                           ; BSR set to: 5
 32171                           ;incstack = 0
 32172                           ;sendMessage6@opc stored from wreg
 32173   008064  6E2C               	movwf	sendMessage6@opc^(0+1280),c
 32174   008066                     
 32175                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 32176   008066  0E07               	movlw	7
 32177   008068  6E1B               	movwf	sendMessage@len^(0+1280),c
 32178   00806A  C526  F51C         	movff	sendMessage6@data1,sendMessage@data1
 32179   00806E  C527  F51D         	movff	sendMessage6@data2,sendMessage@data2
 32180   008072  C528  F51E         	movff	sendMessage6@data3,sendMessage@data3
 32181   008076  C529  F51F         	movff	sendMessage6@data4,sendMessage@data4
 32182   00807A  C52A  F520         	movff	sendMessage6@data5,sendMessage@data5
 32183   00807E  C52B  F521         	movff	sendMessage6@data6,sendMessage@data6
 32184   008082  0E00               	movlw	0
 32185   008084  6E22               	movwf	sendMessage@data7^(0+1280),c
 32186   008086  502C               	movf	sendMessage6@opc^(0+1280),w,c
 32187   008088  EC82  F036         	call	_sendMessage
 32188   00808C  0012               	return		;funcret
 32189   00808E                     __end_of_sendMessage6:
 32190                           	callstack 0
 32191                           
 32192 ;; *************** function _sendMessage4 *****************
 32193 ;; Defined at:
 32194 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 32195 ;; Parameters:    Size  Location     Type
 32196 ;;  opc             1    wreg     enum E22928
 32197 ;;  data1           1   37[COMRAM] unsigned char 
 32198 ;;  data2           1   38[COMRAM] unsigned char 
 32199 ;;  data3           1   39[COMRAM] unsigned char 
 32200 ;;  data4           1   40[COMRAM] unsigned char 
 32201 ;; Auto vars:     Size  Location     Type
 32202 ;;  opc             1   41[COMRAM] enum E22928
 32203 ;; Return value:  Size  Location     Type
 32204 ;;                  1    wreg      void 
 32205 ;; Registers used:
 32206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32207 ;; Tracked objects:
 32208 ;;		On entry : 0/0
 32209 ;;		On exit  : 0/0
 32210 ;;		Unchanged: 0/0
 32211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32215 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32216 ;;Total ram usage:        5 bytes
 32217 ;; Hardware stack levels used: 1
 32218 ;; Hardware stack levels required when called: 5
 32219 ;; This function calls:
 32220 ;;		_sendMessage
 32221 ;; This function is called by:
 32222 ;;		_mnsProcessMessage
 32223 ;;		_mnsTRrqnpnCallback
 32224 ;;		_nvProcessMessage
 32225 ;;		_nvTRnvrdCallback
 32226 ;; This function uses a non-reentrant model
 32227 ;;
 32228                           
 32229                           	psect	text63
 32230   00808E                     __ptext63:
 32231                           	callstack 0
 32232   00808E                     _sendMessage4:
 32233                           	callstack 118
 32234                           
 32235                           ;incstack = 0
 32236                           ;sendMessage4@opc stored from wreg
 32237   00808E  6E2A               	movwf	sendMessage4@opc^(0+1280),c
 32238   008090                     
 32239                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32240   008090  0E05               	movlw	5
 32241   008092  6E1B               	movwf	sendMessage@len^(0+1280),c
 32242   008094  C526  F51C         	movff	sendMessage4@data1,sendMessage@data1
 32243   008098  C527  F51D         	movff	sendMessage4@data2,sendMessage@data2
 32244   00809C  C528  F51E         	movff	sendMessage4@data3,sendMessage@data3
 32245   0080A0  C529  F51F         	movff	sendMessage4@data4,sendMessage@data4
 32246   0080A4  0E00               	movlw	0
 32247   0080A6  6E20               	movwf	sendMessage@data5^(0+1280),c
 32248   0080A8  0E00               	movlw	0
 32249   0080AA  6E21               	movwf	sendMessage@data6^(0+1280),c
 32250   0080AC  0E00               	movlw	0
 32251   0080AE  6E22               	movwf	sendMessage@data7^(0+1280),c
 32252   0080B0  502A               	movf	sendMessage4@opc^(0+1280),w,c
 32253   0080B2  EC82  F036         	call	_sendMessage
 32254   0080B6  0012               	return		;funcret
 32255   0080B8                     __end_of_sendMessage4:
 32256                           	callstack 0
 32257                           
 32258 ;; *************** function _sendMessage3 *****************
 32259 ;; Defined at:
 32260 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 32261 ;; Parameters:    Size  Location     Type
 32262 ;;  opc             1    wreg     enum E22928
 32263 ;;  data1           1   37[COMRAM] unsigned char 
 32264 ;;  data2           1   38[COMRAM] unsigned char 
 32265 ;;  data3           1   39[COMRAM] unsigned char 
 32266 ;; Auto vars:     Size  Location     Type
 32267 ;;  opc             1   40[COMRAM] enum E22928
 32268 ;; Return value:  Size  Location     Type
 32269 ;;                  1    wreg      void 
 32270 ;; Registers used:
 32271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32272 ;; Tracked objects:
 32273 ;;		On entry : 0/0
 32274 ;;		On exit  : 0/0
 32275 ;;		Unchanged: 0/0
 32276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32281 ;;Total ram usage:        4 bytes
 32282 ;; Hardware stack levels used: 1
 32283 ;; Hardware stack levels required when called: 5
 32284 ;; This function calls:
 32285 ;;		_sendMessage
 32286 ;; This function is called by:
 32287 ;;		_teachProcessMessage
 32288 ;;		_doNnevn
 32289 ;;		_doNenrd
 32290 ;;		_doRqevn
 32291 ;;		_doEvlrn
 32292 ;;		_doReval
 32293 ;;		_doEvuln
 32294 ;;		_doReqev
 32295 ;;		_mnsProcessMessage
 32296 ;;		_nvProcessMessage
 32297 ;; This function uses a non-reentrant model
 32298 ;;
 32299                           
 32300                           	psect	text64
 32301   0080B8                     __ptext64:
 32302                           	callstack 0
 32303   0080B8                     _sendMessage3:
 32304                           	callstack 119
 32305                           
 32306                           ;incstack = 0
 32307                           ;sendMessage3@opc stored from wreg
 32308   0080B8  6E29               	movwf	sendMessage3@opc^(0+1280),c
 32309   0080BA                     
 32310                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 32311   0080BA  0E04               	movlw	4
 32312   0080BC  6E1B               	movwf	sendMessage@len^(0+1280),c
 32313   0080BE  C526  F51C         	movff	sendMessage3@data1,sendMessage@data1
 32314   0080C2  C527  F51D         	movff	sendMessage3@data2,sendMessage@data2
 32315   0080C6  C528  F51E         	movff	sendMessage3@data3,sendMessage@data3
 32316   0080CA  0E00               	movlw	0
 32317   0080CC  6E1F               	movwf	sendMessage@data4^(0+1280),c
 32318   0080CE  0E00               	movlw	0
 32319   0080D0  6E20               	movwf	sendMessage@data5^(0+1280),c
 32320   0080D2  0E00               	movlw	0
 32321   0080D4  6E21               	movwf	sendMessage@data6^(0+1280),c
 32322   0080D6  0E00               	movlw	0
 32323   0080D8  6E22               	movwf	sendMessage@data7^(0+1280),c
 32324   0080DA  5029               	movf	sendMessage3@opc^(0+1280),w,c
 32325   0080DC  EC82  F036         	call	_sendMessage
 32326   0080E0  0012               	return		;funcret
 32327   0080E2                     __end_of_sendMessage3:
 32328                           	callstack 0
 32329                           
 32330 ;; *************** function _getParameter *****************
 32331 ;; Defined at:
 32332 ;;		line 838 in file "../../VLCBlib_PIC/mns.c"
 32333 ;; Parameters:    Size  Location     Type
 32334 ;;  idx             1    wreg     unsigned char 
 32335 ;; Auto vars:     Size  Location     Type
 32336 ;;  idx             1    8[COMRAM] unsigned char 
 32337 ;;  i               1    0        unsigned char 
 32338 ;; Return value:  Size  Location     Type
 32339 ;;                  1    wreg      unsigned char 
 32340 ;; Registers used:
 32341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32342 ;; Tracked objects:
 32343 ;;		On entry : 0/0
 32344 ;;		On exit  : 0/0
 32345 ;;		Unchanged: 0/0
 32346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32351 ;;Total ram usage:        4 bytes
 32352 ;; Hardware stack levels used: 1
 32353 ;; Hardware stack levels required when called: 3
 32354 ;; This function calls:
 32355 ;;		_getParameterFlags
 32356 ;;		_have
 32357 ;; This function is called by:
 32358 ;;		_mnsProcessMessage
 32359 ;;		_mnsTRrqnpnCallback
 32360 ;; This function uses a non-reentrant model
 32361 ;;
 32362                           
 32363                           	psect	text65
 32364   004998                     __ptext65:
 32365                           	callstack 0
 32366   004998                     _getParameter:
 32367                           	callstack 120
 32368                           
 32369                           ;incstack = 0
 32370                           ;getParameter@idx stored from wreg
 32371   004998  6E09               	movwf	getParameter@idx^(0+1280),c
 32372   00499A                     
 32373                           ;../../VLCBlib_PIC/mns.c: 839:     uint8_t i;;../../VLCBlib_PIC/mns.c: 840:     switch(i
      +                          dx) {
 32374   00499A  EF34  F025         	goto	l8320
 32375   00499E                     l8224:
 32376                           
 32377                           ;../../VLCBlib_PIC/mns.c: 842:         return 20;
 32378   00499E  0E14               	movlw	20
 32379   0049A0  EF8B  F025         	goto	l1440
 32380   0049A4                     l8228:
 32381                           
 32382                           ;../../VLCBlib_PIC/mns.c: 844:         return MANU_MERG;
 32383   0049A4  0EA5               	movlw	165
 32384   0049A6  EF8B  F025         	goto	l1440
 32385   0049AA                     l8232:
 32386                           
 32387                           ;../../VLCBlib_PIC/mns.c: 846:         return 'a';
 32388   0049AA  0E61               	movlw	97
 32389   0049AC  EF8B  F025         	goto	l1440
 32390   0049B0                     l8236:
 32391                           
 32392                           ;../../VLCBlib_PIC/mns.c: 848:         return MTYP_VLCB;
 32393   0049B0  0EFC               	movlw	252
 32394   0049B2  EF8B  F025         	goto	l1440
 32395   0049B6                     l8240:
 32396                           
 32397                           ;../../VLCBlib_PIC/mns.c: 850:         return 255;
 32398   0049B6  0EFF               	movlw	255
 32399   0049B8  EF8B  F025         	goto	l1440
 32400   0049BC                     l8248:
 32401                           
 32402                           ;../../VLCBlib_PIC/mns.c: 854:         return 49;
 32403   0049BC  0E31               	movlw	49
 32404   0049BE  EF8B  F025         	goto	l1440
 32405   0049C2                     l8252:
 32406                           
 32407                           ;../../VLCBlib_PIC/mns.c: 856:         return 1;
 32408   0049C2  0E01               	movlw	1
 32409   0049C4  EF8B  F025         	goto	l1440
 32410   0049C8                     l8256:
 32411                           
 32412                           ;../../VLCBlib_PIC/mns.c: 858:         return getParameterFlags();
 32413   0049C8  EC9E  F037         	call	_getParameterFlags	;wreg free
 32414   0049CC  EF8B  F025         	goto	l1440
 32415   0049D0                     l8260:
 32416                           
 32417                           ;../../VLCBlib_PIC/mns.c: 860:         return P18F27Q83;
 32418   0049D0  0E17               	movlw	23
 32419   0049D2  EF8B  F025         	goto	l1440
 32420   0049D6                     l8264:
 32421                           
 32422                           ;../../VLCBlib_PIC/mns.c: 862:         if (have(SERVICE_ID_CAN)) {
 32423   0049D6  0E03               	movlw	3
 32424   0049D8  EC58  F037         	call	_have
 32425   0049DC  0900               	iorlw	0
 32426   0049DE  B4D8               	btfsc	status,2,c
 32427   0049E0  EFF4  F024         	goto	u5641
 32428   0049E4  EFF6  F024         	goto	u5640
 32429   0049E8                     u5641:
 32430   0049E8  EFF8  F024         	goto	l8270
 32431   0049EC                     u5640:
 32432   0049EC  EFE1  F024         	goto	l8252
 32433   0049F0                     l8270:
 32434                           
 32435                           ;../../VLCBlib_PIC/mns.c: 865:         return 0;
 32436   0049F0  0E00               	movlw	0
 32437   0049F2  EF8B  F025         	goto	l1440
 32438   0049F6                     l8278:
 32439                           
 32440                           ;../../VLCBlib_PIC/mns.c: 869:         return 0x08;
 32441   0049F6  0E08               	movlw	8
 32442   0049F8  EF8B  F025         	goto	l1440
 32443   0049FC                     l8290:
 32444                           
 32445                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFC;
 32446   0049FC  0EFC               	movlw	252
 32447   0049FE  6EF6               	movwf	tblptrl,c
 32448   004A00                     	if	1	;There is more than 1 active tblptr byte
 32449   004A00  0EFF               	movlw	255
 32450   004A02  6EF7               	movwf	tblptrh,c
 32451   004A04                     	endif
 32452   004A04                     	if	1	;There are 3 active tblptr bytes
 32453   004A04  0E00               	movlw	0
 32454   004A06  6EF8               	movwf	tblptru,c
 32455   004A08                     	endif
 32456   004A08  0008               	tblrd		*
 32457   004A0A  50F5               	movf	tablat,w,c
 32458   004A0C  EF8B  F025         	goto	l1440
 32459   004A10                     l8294:
 32460                           
 32461                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFD;
 32462   004A10  0EFD               	movlw	253
 32463   004A12  6EF6               	movwf	tblptrl,c
 32464   004A14                     	if	1	;There is more than 1 active tblptr byte
 32465   004A14  0EFF               	movlw	255
 32466   004A16  6EF7               	movwf	tblptrh,c
 32467   004A18                     	endif
 32468   004A18                     	if	1	;There are 3 active tblptr bytes
 32469   004A18  0E00               	movlw	0
 32470   004A1A  6EF8               	movwf	tblptru,c
 32471   004A1C                     	endif
 32472   004A1C  0008               	tblrd		*
 32473   004A1E  50F5               	movf	tablat,w,c
 32474   004A20  EF8B  F025         	goto	l1440
 32475   004A24                     l8298:
 32476                           
 32477                           ;../../VLCBlib_PIC/mns.c: 881:         return *(const uint8_t*)0x3FFFFE;
 32478   004A24  0EFE               	movlw	254
 32479   004A26  6EF6               	movwf	tblptrl,c
 32480   004A28                     	if	1	;There is more than 1 active tblptr byte
 32481   004A28  0EFF               	movlw	255
 32482   004A2A  6EF7               	movwf	tblptrh,c
 32483   004A2C                     	endif
 32484   004A2C                     	if	1	;There are 3 active tblptr bytes
 32485   004A2C  0E00               	movlw	0
 32486   004A2E  6EF8               	movwf	tblptru,c
 32487   004A30                     	endif
 32488   004A30  0008               	tblrd		*
 32489   004A32  50F5               	movf	tablat,w,c
 32490   004A34  EF8B  F025         	goto	l1440
 32491   004A38                     l8302:
 32492                           
 32493                           ;../../VLCBlib_PIC/mns.c: 883:         return *(const uint8_t*)0x3FFFFF;
 32494   004A38  0EFF               	movlw	255
 32495   004A3A  6E06               	movwf	??_getParameter^(0+1280),c
 32496   004A3C  0EFF               	movlw	255
 32497   004A3E  6E07               	movwf	(??_getParameter+1)^(0+1280),c
 32498   004A40  0E00               	movlw	0
 32499   004A42  6E08               	movwf	(??_getParameter+2)^(0+1280),c
 32500   004A44  C506  F4F6         	movff	??_getParameter,tblptrl
 32501   004A48  C507  F4F7         	movff	??_getParameter+1,tblptrh
 32502   004A4C  5008               	movf	(??_getParameter+2)^(0+1280),w,c
 32503   004A4E  BEE8               	btfsc	wreg,7,c
 32504   004A50  D004               	bra	u5657
 32505   004A52  6EF8               	movwf	tblptru,c
 32506   004A54  0008               	tblrd		*
 32507   004A56  50F5               	movf	tablat,w,c
 32508   004A58  D005               	bra	u5650
 32509   004A5A                     u5657:
 32510   004A5A  C4F6 F4E1          	movff	tblptrl,fsr1l
 32511   004A5E  C4F7 F4E2          	movff	tblptrh,fsr1h
 32512   004A62  50E7               	movf	indf1,w,c
 32513   004A64                     u5650:
 32514   004A64  EF8B  F025         	goto	l1440
 32515   004A68                     l8320:
 32516   004A68  5009               	movf	getParameter@idx^(0+1280),w,c
 32517                           
 32518                           ; Switch size 1, requested type "simple"
 32519                           ; Number of cases is 21, Range of values is 0 to 20
 32520                           ; switch strategies available:
 32521                           ; Name         Instructions Cycles
 32522                           ; simple_byte           64    33 (average)
 32523                           ;	Chosen strategy is simple_byte
 32524   004A6A  0A00               	xorlw	0	; case 0
 32525   004A6C  B4D8               	btfsc	status,2,c
 32526   004A6E  EFCF  F024         	goto	l8224
 32527   004A72  0A01               	xorlw	1	; case 1
 32528   004A74  B4D8               	btfsc	status,2,c
 32529   004A76  EFD2  F024         	goto	l8228
 32530   004A7A  0A03               	xorlw	3	; case 2
 32531   004A7C  B4D8               	btfsc	status,2,c
 32532   004A7E  EFD5  F024         	goto	l8232
 32533   004A82  0A01               	xorlw	1	; case 3
 32534   004A84  B4D8               	btfsc	status,2,c
 32535   004A86  EFD8  F024         	goto	l8236
 32536   004A8A  0A07               	xorlw	7	; case 4
 32537   004A8C  B4D8               	btfsc	status,2,c
 32538   004A8E  EFDB  F024         	goto	l8240
 32539   004A92  0A01               	xorlw	1	; case 5
 32540   004A94  B4D8               	btfsc	status,2,c
 32541   004A96  EFD8  F024         	goto	l8236
 32542   004A9A  0A03               	xorlw	3	; case 6
 32543   004A9C  B4D8               	btfsc	status,2,c
 32544   004A9E  EFDE  F024         	goto	l8248
 32545   004AA2  0A01               	xorlw	1	; case 7
 32546   004AA4  B4D8               	btfsc	status,2,c
 32547   004AA6  EFE1  F024         	goto	l8252
 32548   004AAA  0A0F               	xorlw	15	; case 8
 32549   004AAC  B4D8               	btfsc	status,2,c
 32550   004AAE  EFE4  F024         	goto	l8256
 32551   004AB2  0A01               	xorlw	1	; case 9
 32552   004AB4  B4D8               	btfsc	status,2,c
 32553   004AB6  EFE8  F024         	goto	l8260
 32554   004ABA  0A03               	xorlw	3	; case 10
 32555   004ABC  B4D8               	btfsc	status,2,c
 32556   004ABE  EFEB  F024         	goto	l8264
 32557   004AC2  0A01               	xorlw	1	; case 11
 32558   004AC4  B4D8               	btfsc	status,2,c
 32559   004AC6  EFF8  F024         	goto	l8270
 32560   004ACA  0A07               	xorlw	7	; case 12
 32561   004ACC  B4D8               	btfsc	status,2,c
 32562   004ACE  EFFB  F024         	goto	l8278
 32563   004AD2  0A01               	xorlw	1	; case 13
 32564   004AD4  B4D8               	btfsc	status,2,c
 32565   004AD6  EFF8  F024         	goto	l8270
 32566   004ADA  0A03               	xorlw	3	; case 14
 32567   004ADC  B4D8               	btfsc	status,2,c
 32568   004ADE  EFF8  F024         	goto	l8270
 32569   004AE2  0A01               	xorlw	1	; case 15
 32570   004AE4  B4D8               	btfsc	status,2,c
 32571   004AE6  EFFE  F024         	goto	l8290
 32572   004AEA  0A1F               	xorlw	31	; case 16
 32573   004AEC  B4D8               	btfsc	status,2,c
 32574   004AEE  EF08  F025         	goto	l8294
 32575   004AF2  0A01               	xorlw	1	; case 17
 32576   004AF4  B4D8               	btfsc	status,2,c
 32577   004AF6  EF12  F025         	goto	l8298
 32578   004AFA  0A03               	xorlw	3	; case 18
 32579   004AFC  B4D8               	btfsc	status,2,c
 32580   004AFE  EF1C  F025         	goto	l8302
 32581   004B02  0A01               	xorlw	1	; case 19
 32582   004B04  B4D8               	btfsc	status,2,c
 32583   004B06  EFE1  F024         	goto	l8252
 32584   004B0A  0A07               	xorlw	7	; case 20
 32585   004B0C  B4D8               	btfsc	status,2,c
 32586   004B0E  EFE1  F024         	goto	l8252
 32587   004B12  EFF8  F024         	goto	l8270
 32588   004B16                     l1440:
 32589   004B16  0012               	return		;funcret
 32590   004B18                     __end_of_getParameter:
 32591                           	callstack 0
 32592                           
 32593 ;; *************** function _getParameterFlags *****************
 32594 ;; Defined at:
 32595 ;;		line 609 in file "../../VLCBlib_PIC/mns.c"
 32596 ;; Parameters:    Size  Location     Type
 32597 ;;		None
 32598 ;; Auto vars:     Size  Location     Type
 32599 ;;  flags           1    4[COMRAM] unsigned char 
 32600 ;; Return value:  Size  Location     Type
 32601 ;;                  1    wreg      unsigned char 
 32602 ;; Registers used:
 32603 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32604 ;; Tracked objects:
 32605 ;;		On entry : 0/0
 32606 ;;		On exit  : 0/0
 32607 ;;		Unchanged: 0/0
 32608 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32613 ;;Total ram usage:        1 bytes
 32614 ;; Hardware stack levels used: 1
 32615 ;; Hardware stack levels required when called: 2
 32616 ;; This function calls:
 32617 ;;		_have
 32618 ;; This function is called by:
 32619 ;;		_mnsProcessMessage
 32620 ;;		_getParameter
 32621 ;; This function uses a non-reentrant model
 32622 ;;
 32623                           
 32624                           	psect	text66
 32625   006F3C                     __ptext66:
 32626                           	callstack 0
 32627   006F3C                     _getParameterFlags:
 32628                           	callstack 120
 32629   006F3C                     
 32630                           ;../../VLCBlib_PIC/mns.c: 610:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 611:     flag
      +                          s = 0;
 32631   006F3C  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 32632   006F3E                     
 32633                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_CONSUMER)) {
 32634   006F3E  0E06               	movlw	6
 32635   006F40  EC58  F037         	call	_have
 32636   006F44  0900               	iorlw	0
 32637   006F46  B4D8               	btfsc	status,2,c
 32638   006F48  EFA8  F037         	goto	u5201
 32639   006F4C  EFAA  F037         	goto	u5200
 32640   006F50                     u5201:
 32641   006F50  EFAB  F037         	goto	l7858
 32642   006F54                     u5200:
 32643   006F54                     
 32644                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 1;
 32645   006F54  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 32646   006F56                     l7858:
 32647                           
 32648                           ;../../VLCBlib_PIC/mns.c: 615:     if (have(SERVICE_ID_PRODUCER)) {
 32649   006F56  0E05               	movlw	5
 32650   006F58  EC58  F037         	call	_have
 32651   006F5C  0900               	iorlw	0
 32652   006F5E  B4D8               	btfsc	status,2,c
 32653   006F60  EFB4  F037         	goto	u5211
 32654   006F64  EFB6  F037         	goto	u5210
 32655   006F68                     u5211:
 32656   006F68  EFB7  F037         	goto	l7862
 32657   006F6C                     u5210:
 32658   006F6C                     
 32659                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 2;
 32660   006F6C  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 32661   006F6E                     l7862:
 32662                           
 32663                           ;../../VLCBlib_PIC/mns.c: 618:     if (flags == (2 | 1)) flags |= 16;
 32664   006F6E  0E03               	movlw	3
 32665   006F70  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 32666   006F72  A4D8               	btfss	status,2,c
 32667   006F74  EFBE  F037         	goto	u5221
 32668   006F78  EFC0  F037         	goto	u5220
 32669   006F7C                     u5221:
 32670   006F7C  EFC1  F037         	goto	l7866
 32671   006F80                     u5220:
 32672   006F80  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 32673   006F82                     l7866:
 32674                           
 32675                           ;../../VLCBlib_PIC/mns.c: 619:     if (have(SERVICE_ID_BOOT)) {
 32676   006F82  0E0A               	movlw	10
 32677   006F84  EC58  F037         	call	_have
 32678   006F88  0900               	iorlw	0
 32679   006F8A  B4D8               	btfsc	status,2,c
 32680   006F8C  EFCA  F037         	goto	u5231
 32681   006F90  EFCC  F037         	goto	u5230
 32682   006F94                     u5231:
 32683   006F94  EFCD  F037         	goto	l7870
 32684   006F98                     u5230:
 32685   006F98                     
 32686                           ;../../VLCBlib_PIC/mns.c: 620:         flags |= 8;
 32687   006F98  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 32688   006F9A                     l7870:
 32689                           
 32690                           ;../../VLCBlib_PIC/mns.c: 622:     if (mode_flags & 1) {
 32691   006F9A  0105               	movlb	5	; () banked
 32692   006F9C  A1A4               	btfss	_mode_flags& (0+255),0,b
 32693   006F9E  EFD3  F037         	goto	u5241
 32694   006FA2  EFD5  F037         	goto	u5240
 32695   006FA6                     u5241:
 32696   006FA6  EFD6  F037         	goto	l7874
 32697   006FAA                     u5240:
 32698   006FAA                     
 32699                           ; BSR set to: 5
 32700                           ;../../VLCBlib_PIC/mns.c: 623:         flags |= 32;
 32701   006FAA  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 32702   006FAC                     l7874:
 32703                           
 32704                           ; BSR set to: 5
 32705                           ;../../VLCBlib_PIC/mns.c: 625:     if (mode_state == MODE_NORMAL) {
 32706   006FAC  05A1               	decf	_mode_state& (0+255),w,b
 32707   006FAE  A4D8               	btfss	status,2,c
 32708   006FB0  EFDC  F037         	goto	u5251
 32709   006FB4  EFDE  F037         	goto	u5250
 32710   006FB8                     u5251:
 32711   006FB8  EFDF  F037         	goto	l1384
 32712   006FBC                     u5250:
 32713   006FBC                     
 32714                           ; BSR set to: 5
 32715                           ;../../VLCBlib_PIC/mns.c: 626:         flags |= 4;
 32716   006FBC  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 32717   006FBE                     l1384:
 32718                           
 32719                           ; BSR set to: 5
 32720                           ;../../VLCBlib_PIC/mns.c: 629:     flags |= 64;
 32721   006FBE  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 32722   006FC0                     
 32723                           ; BSR set to: 5
 32724                           ;../../VLCBlib_PIC/mns.c: 631:     return flags;
 32725   006FC0  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 32726   006FC2                     
 32727                           ; BSR set to: 5
 32728   006FC2  0012               	return		;funcret
 32729   006FC4                     __end_of_getParameterFlags:
 32730                           	callstack 0
 32731                           
 32732 ;; *************** function _findServiceIndex *****************
 32733 ;; Defined at:
 32734 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 32735 ;; Parameters:    Size  Location     Type
 32736 ;;  serviceType     1    wreg     unsigned char 
 32737 ;; Auto vars:     Size  Location     Type
 32738 ;;  serviceType     1    2[COMRAM] unsigned char 
 32739 ;;  i               1    3[COMRAM] unsigned char 
 32740 ;; Return value:  Size  Location     Type
 32741 ;;                  1    wreg      unsigned char 
 32742 ;; Registers used:
 32743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32744 ;; Tracked objects:
 32745 ;;		On entry : 0/0
 32746 ;;		On exit  : 0/0
 32747 ;;		Unchanged: 0/0
 32748 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32753 ;;Total ram usage:        4 bytes
 32754 ;; Hardware stack levels used: 1
 32755 ;; Hardware stack levels required when called: 1
 32756 ;; This function calls:
 32757 ;;		Nothing
 32758 ;; This function is called by:
 32759 ;;		_doNerd
 32760 ;;		_doReval
 32761 ;;		_doReqev
 32762 ;;		_mnsProcessMessage
 32763 ;;		_nvProcessMessage
 32764 ;; This function uses a non-reentrant model
 32765 ;;
 32766                           
 32767                           	psect	text67
 32768   006E24                     __ptext67:
 32769                           	callstack 0
 32770   006E24                     _findServiceIndex:
 32771                           	callstack 122
 32772                           
 32773                           ; BSR set to: 5
 32774                           ;incstack = 0
 32775                           ;findServiceIndex@serviceType stored from wreg
 32776   006E24  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 32777   006E26                     
 32778                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<6; i++) {
 32779   006E26  6A04               	clrf	findServiceIndex@i^(0+1280),c
 32780   006E28                     l8146:
 32781                           
 32782                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32783   006E28  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32784   006E2A  0D02               	mullw	2
 32785   006E2C  0E89               	movlw	low _services
 32786   006E2E  24F3               	addwf	243,w,c
 32787   006E30  6EF6               	movwf	tblptrl,c
 32788   006E32  0EFF               	movlw	high _services
 32789   006E34  20F4               	addwfc	244,w,c
 32790   006E36  6EF7               	movwf	tblptrh,c
 32791   006E38                     	if	1	;There are 3 active tblptr bytes
 32792   006E38  6AF8               	clrf	tblptru,c
 32793   006E3A  0E00               	movlw	low (__mediumconst shr (0+16))
 32794   006E3C  22F8               	addwfc	tblptru,f,c
 32795   006E3E                     	endif
 32796   006E3E  0009               	tblrd		*+
 32797   006E40  50F5               	movf	tablat,w,c
 32798   006E42  0009               	tblrd		*+
 32799   006E44  10F5               	iorwf	tablat,w,c
 32800   006E46  B4D8               	btfsc	status,2,c
 32801   006E48  EF28  F037         	goto	u5551
 32802   006E4C  EF2A  F037         	goto	u5550
 32803   006E50                     u5551:
 32804   006E50  EF4D  F037         	goto	l8154
 32805   006E54                     u5550:
 32806   006E54  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32807   006E56  0D02               	mullw	2
 32808   006E58  0E89               	movlw	low _services
 32809   006E5A  24F3               	addwf	243,w,c
 32810   006E5C  6EF6               	movwf	tblptrl,c
 32811   006E5E  0EFF               	movlw	high _services
 32812   006E60  20F4               	addwfc	244,w,c
 32813   006E62  6EF7               	movwf	tblptrh,c
 32814   006E64                     	if	1	;There are 3 active tblptr bytes
 32815   006E64  6AF8               	clrf	tblptru,c
 32816   006E66  0E00               	movlw	low (__mediumconst shr (0+16))
 32817   006E68  22F8               	addwfc	tblptru,f,c
 32818   006E6A                     	endif
 32819   006E6A  0009               	tblrd		*+
 32820   006E6C  C4F5 F501          	movff	tablat,??_findServiceIndex
 32821   006E70  0009               	tblrd		*+
 32822   006E72  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 32823   006E76  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 32824   006E7A  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 32825   006E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32826   006E7E  6AF8               	clrf	tblptru,c
 32827   006E80                     	endif
 32828   006E80                     	if	0	;tblptru may be non-zero
 32829   006E80                     	endif
 32830   006E80  0008               	tblrd		*
 32831   006E82  50F5               	movf	tablat,w,c
 32832   006E84  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 32833   006E86  A4D8               	btfss	status,2,c
 32834   006E88  EF48  F037         	goto	u5561
 32835   006E8C  EF4A  F037         	goto	u5560
 32836   006E90                     u5561:
 32837   006E90  EF4D  F037         	goto	l8154
 32838   006E94                     u5560:
 32839   006E94                     
 32840                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 32841   006E94  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32842   006E96  EF57  F037         	goto	l1976
 32843   006E9A                     l8154:
 32844                           
 32845                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 32846   006E9A  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 32847   006E9C  0E05               	movlw	5
 32848   006E9E  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 32849   006EA0  EF54  F037         	goto	u5571
 32850   006EA4  EF56  F037         	goto	u5570
 32851   006EA8                     u5571:
 32852   006EA8  EF14  F037         	goto	l8146
 32853   006EAC                     u5570:
 32854   006EAC                     
 32855                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 32856   006EAC  0EFF               	movlw	255
 32857   006EAE                     l1976:
 32858   006EAE  0012               	return		;funcret
 32859   006EB0                     __end_of_findServiceIndex:
 32860                           	callstack 0
 32861                           
 32862 ;; *************** function _canWaitForTxQueueToDrain *****************
 32863 ;; Defined at:
 32864 ;;		line 671 in file "../../VLCBlib_PIC/can18_can_2.c"
 32865 ;; Parameters:    Size  Location     Type
 32866 ;;		None
 32867 ;; Auto vars:     Size  Location     Type
 32868 ;;		None
 32869 ;; Return value:  Size  Location     Type
 32870 ;;                  1    wreg      void 
 32871 ;; Registers used:
 32872 ;;		None
 32873 ;; Tracked objects:
 32874 ;;		On entry : 0/0
 32875 ;;		On exit  : 0/0
 32876 ;;		Unchanged: 0/0
 32877 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32882 ;;Total ram usage:        0 bytes
 32883 ;; Hardware stack levels used: 1
 32884 ;; Hardware stack levels required when called: 1
 32885 ;; This function calls:
 32886 ;;		Nothing
 32887 ;; This function is called by:
 32888 ;;		_mnsProcessMessage
 32889 ;; This function uses a non-reentrant model
 32890 ;;
 32891                           
 32892                           	psect	text68
 32893   008302                     __ptext68:
 32894                           	callstack 0
 32895   008302                     _canWaitForTxQueueToDrain:
 32896                           	callstack 123
 32897   008302                     l675:
 32898                           
 32899                           ;../../VLCBlib_PIC/can18_can_2.c: 672:     while (C1FIFOCON2H & 0x2) {
 32900   008302  0101               	movlb	1	; () banked
 32901   008304  B369               	btfsc	105,1,b	;volatile
 32902   008306  EF87  F041         	goto	u5961
 32903   00830A  EF89  F041         	goto	u5960
 32904   00830E                     u5961:
 32905   00830E  EF81  F041         	goto	l675
 32906   008312                     u5960:
 32907   008312                     
 32908                           ; BSR set to: 1
 32909   008312  0012               	return		;funcret
 32910   008314                     __end_of_canWaitForTxQueueToDrain:
 32911                           	callstack 0
 32912                           
 32913 ;; *************** function _canPoll *****************
 32914 ;; Defined at:
 32915 ;;		line 443 in file "../../VLCBlib_PIC/can18_can_2.c"
 32916 ;; Parameters:    Size  Location     Type
 32917 ;;		None
 32918 ;; Auto vars:     Size  Location     Type
 32919 ;;  t8              1    0        unsigned char 
 32920 ;; Return value:  Size  Location     Type
 32921 ;;                  1    wreg      void 
 32922 ;; Registers used:
 32923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32924 ;; Tracked objects:
 32925 ;;		On entry : 0/0
 32926 ;;		On exit  : 0/0
 32927 ;;		Unchanged: 0/0
 32928 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32933 ;;Total ram usage:        0 bytes
 32934 ;; Hardware stack levels used: 1
 32935 ;; Hardware stack levels required when called: 8
 32936 ;; This function calls:
 32937 ;;		_processEnumeration
 32938 ;; This function is called by:
 32939 ;;		_poll
 32940 ;; This function uses a non-reentrant model
 32941 ;;
 32942                           
 32943                           	psect	text69
 32944   00834A                     __ptext69:
 32945                           	callstack 0
 32946   00834A                     _canPoll:
 32947                           	callstack 117
 32948   00834A                     
 32949                           ;../../VLCBlib_PIC/can18_can_2.c: 444:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          446:     processEnumeration();
 32950   00834A  EC0F  F023         	call	_processEnumeration	;wreg free
 32951   00834E  0012               	return		;funcret
 32952   008350                     __end_of_canPoll:
 32953                           	callstack 0
 32954                           
 32955 ;; *************** function _mnsPoll *****************
 32956 ;; Defined at:
 32957 ;;		line 650 in file "../../VLCBlib_PIC/mns.c"
 32958 ;; Parameters:    Size  Location     Type
 32959 ;;		None
 32960 ;; Auto vars:     Size  Location     Type
 32961 ;;		None
 32962 ;; Return value:  Size  Location     Type
 32963 ;;                  1    wreg      void 
 32964 ;; Registers used:
 32965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32966 ;; Tracked objects:
 32967 ;;		On entry : 0/0
 32968 ;;		On exit  : 0/0
 32969 ;;		Unchanged: 0/0
 32970 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32975 ;;Total ram usage:        4 bytes
 32976 ;; Hardware stack levels used: 1
 32977 ;; Hardware stack levels required when called: 6
 32978 ;; This function calls:
 32979 ;;		_sendMessage2
 32980 ;;		_sendMessage5
 32981 ;;		_setLEDsByMode
 32982 ;;		_tickGet
 32983 ;;		_writeNVM
 32984 ;; This function is called by:
 32985 ;;		_poll
 32986 ;; This function uses a non-reentrant model
 32987 ;;
 32988                           
 32989                           	psect	text70
 32990   002600                     __ptext70:
 32991                           	callstack 0
 32992   002600                     _mnsPoll:
 32993                           	callstack 119
 32994   002600                     
 32995                           ;../../VLCBlib_PIC/mns.c: 653:     if (mode_state == MODE_NORMAL) {
 32996   002600  0105               	movlb	5	; () banked
 32997   002602  05A1               	decf	_mode_state& (0+255),w,b
 32998   002604  A4D8               	btfss	status,2,c
 32999   002606  EF07  F013         	goto	u7771
 33000   00260A  EF09  F013         	goto	u7770
 33001   00260E                     u7771:
 33002   00260E  EF51  F013         	goto	l10522
 33003   002612                     u7770:
 33004   002612                     
 33005                           ; BSR set to: 5
 33006                           ;../../VLCBlib_PIC/mns.c: 654:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 33007   002612  EC18  F03A         	call	_tickGet	;wreg free
 33008   002616  0105               	movlb	5	; () banked
 33009   002618  516C               	movf	_heartbeatTimer& (0+255),w,b
 33010   00261A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33011   00261C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33012   00261E  516D               	movf	(_heartbeatTimer+1)& (0+255),w,b
 33013   002620  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33014   002622  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33015   002624  516E               	movf	(_heartbeatTimer+2)& (0+255),w,b
 33016   002626  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33017   002628  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33018   00262A  516F               	movf	(_heartbeatTimer+3)& (0+255),w,b
 33019   00262C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33020   00262E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33021   002630  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33022   002632  E10D               	bnz	u7780
 33023   002634  0EB5               	movlw	181
 33024   002636  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33025   002638  0EC4               	movlw	196
 33026   00263A  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33027   00263C  0E04               	movlw	4
 33028   00263E  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33029   002640  A0D8               	btfss	status,0,c
 33030   002642  EF25  F013         	goto	u7781
 33031   002646  EF27  F013         	goto	u7780
 33032   00264A                     u7781:
 33033   00264A  EF51  F013         	goto	l10522
 33034   00264E                     u7780:
 33035   00264E                     
 33036                           ; BSR set to: 5
 33037                           ;../../VLCBlib_PIC/mns.c: 655:             if (mode_flags & 4) {
 33038   00264E  A5A4               	btfss	_mode_flags& (0+255),2,b
 33039   002650  EF2C  F013         	goto	u7791
 33040   002654  EF2E  F013         	goto	u7790
 33041   002658                     u7791:
 33042   002658  EF3D  F013         	goto	l10516
 33043   00265C                     u7790:
 33044   00265C                     
 33045                           ; BSR set to: 5
 33046                           ;../../VLCBlib_PIC/mns.c: 656:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 33047   00265C  C590  F526         	movff	_nn+1,sendMessage5@data1
 33048   002660  C58F  F527         	movff	_nn,sendMessage5@data2
 33049   002664  C59C  F528         	movff	_heartbeatSequence,sendMessage5@data3
 33050   002668  C5AF  F529         	movff	_mnsDiagnostics+2,sendMessage5@data4
 33051   00266C  0E00               	movlw	0
 33052   00266E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 33053   002670  0EAB               	movlw	171
 33054   002672  EC9B  F040         	call	_sendMessage5
 33055   002676  0105               	movlb	5	; () banked
 33056   002678  2B9C               	incf	_heartbeatSequence& (0+255),f,b
 33057   00267A                     l10516:
 33058                           
 33059                           ; BSR set to: 5
 33060                           ;../../VLCBlib_PIC/mns.c: 658:             heartbeatTimer.val = tickGet();
 33061   00267A  EC18  F03A         	call	_tickGet	;wreg free
 33062   00267E  C501  F56C         	movff	?_tickGet,_heartbeatTimer
 33063   002682  C502  F56D         	movff	?_tickGet+1,_heartbeatTimer+1
 33064   002686  C503  F56E         	movff	?_tickGet+2,_heartbeatTimer+2
 33065   00268A  C504  F56F         	movff	?_tickGet+3,_heartbeatTimer+3
 33066   00268E                     
 33067                           ;../../VLCBlib_PIC/mns.c: 659:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 33068   00268E  0105               	movlb	5	; () banked
 33069   002690  51AF               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 33070   002692  B4D8               	btfsc	status,2,c
 33071   002694  EF4E  F013         	goto	u7801
 33072   002698  EF50  F013         	goto	u7800
 33073   00269C                     u7801:
 33074   00269C  EF51  F013         	goto	l10522
 33075   0026A0                     u7800:
 33076   0026A0                     
 33077                           ; BSR set to: 5
 33078                           ;../../VLCBlib_PIC/mns.c: 660:                 mnsDiagnostics[0x01].asBytes.lo--;
 33079   0026A0  07AF               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 33080   0026A2                     l10522:
 33081                           
 33082                           ; BSR set to: 5
 33083                           ;../../VLCBlib_PIC/mns.c: 667:     if (mode_flags != last_mode_flags) {
 33084   0026A2  519F               	movf	_last_mode_flags& (0+255),w,b
 33085   0026A4  19A4               	xorwf	_mode_flags& (0+255),w,b
 33086   0026A6  B4D8               	btfsc	status,2,c
 33087   0026A8  EF58  F013         	goto	u7811
 33088   0026AC  EF5A  F013         	goto	u7810
 33089   0026B0                     u7811:
 33090   0026B0  EF67  F013         	goto	l10528
 33091   0026B4                     u7810:
 33092   0026B4                     
 33093                           ; BSR set to: 5
 33094                           ;../../VLCBlib_PIC/mns.c: 668:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 33095   0026B4  0EF9               	movlw	249
 33096   0026B6  6E0E               	movwf	writeNVM@index^(0+1280),c
 33097   0026B8  0E03               	movlw	3
 33098   0026BA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33099   0026BC  0E00               	movlw	0
 33100   0026BE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33101   0026C0  C5A4  F511         	movff	_mode_flags,writeNVM@value
 33102   0026C4  0E00               	movlw	0
 33103   0026C6  EC34  F03C         	call	_writeNVM
 33104   0026CA                     
 33105                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_flags = mode_flags;
 33106   0026CA  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 33107   0026CE                     l10528:
 33108                           
 33109                           ;../../VLCBlib_PIC/mns.c: 671:     if (mode_state != last_mode_state) {
 33110   0026CE  0105               	movlb	5	; () banked
 33111   0026D0  51A0               	movf	_last_mode_state& (0+255),w,b
 33112   0026D2  19A1               	xorwf	_mode_state& (0+255),w,b
 33113   0026D4  B4D8               	btfsc	status,2,c
 33114   0026D6  EF6F  F013         	goto	u7821
 33115   0026DA  EF71  F013         	goto	u7820
 33116   0026DE                     u7821:
 33117   0026DE  EF8E  F013         	goto	l10538
 33118   0026E2                     u7820:
 33119   0026E2                     
 33120                           ; BSR set to: 5
 33121                           ;../../VLCBlib_PIC/mns.c: 673:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 33122   0026E2  29A1               	incf	_mode_state& (0+255),w,b
 33123   0026E4  B4D8               	btfsc	status,2,c
 33124   0026E6  EF77  F013         	goto	u7831
 33125   0026EA  EF79  F013         	goto	u7830
 33126   0026EE                     u7831:
 33127   0026EE  EF81  F013         	goto	l10534
 33128   0026F2                     u7830:
 33129   0026F2                     
 33130                           ; BSR set to: 5
 33131   0026F2  05A1               	decf	_mode_state& (0+255),w,b
 33132   0026F4  A4D8               	btfss	status,2,c
 33133   0026F6  EF7F  F013         	goto	u7841
 33134   0026FA  EF81  F013         	goto	u7840
 33135   0026FE                     u7841:
 33136   0026FE  EF8C  F013         	goto	l10536
 33137   002702                     u7840:
 33138   002702                     l10534:
 33139                           
 33140                           ; BSR set to: 5
 33141                           ;../../VLCBlib_PIC/mns.c: 674:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 33142   002702  0EFB               	movlw	251
 33143   002704  6E0E               	movwf	writeNVM@index^(0+1280),c
 33144   002706  0E03               	movlw	3
 33145   002708  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33146   00270A  0E00               	movlw	0
 33147   00270C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33148   00270E  C5A1  F511         	movff	_mode_state,writeNVM@value
 33149   002712  0E00               	movlw	0
 33150   002714  EC34  F03C         	call	_writeNVM
 33151   002718                     l10536:
 33152                           
 33153                           ;../../VLCBlib_PIC/mns.c: 676:         last_mode_state = mode_state;
 33154   002718  C5A1  F5A0         	movff	_mode_state,_last_mode_state
 33155   00271C                     l10538:
 33156                           
 33157                           ;../../VLCBlib_PIC/mns.c: 680:     if ((tickGet() - uptimeTimer.val) > 62500) {
 33158   00271C  EC18  F03A         	call	_tickGet	;wreg free
 33159   002720  0105               	movlb	5	; () banked
 33160   002722  5168               	movf	_uptimeTimer& (0+255),w,b
 33161   002724  5C01               	subwf	?_tickGet^(0+1280),w,c
 33162   002726  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33163   002728  5169               	movf	(_uptimeTimer+1)& (0+255),w,b
 33164   00272A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33165   00272C  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33166   00272E  516A               	movf	(_uptimeTimer+2)& (0+255),w,b
 33167   002730  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33168   002732  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33169   002734  516B               	movf	(_uptimeTimer+3)& (0+255),w,b
 33170   002736  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33171   002738  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33172   00273A  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33173   00273C  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33174   00273E  E10B               	bnz	u7850
 33175   002740  0E25               	movlw	37
 33176   002742  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33177   002744  0EF4               	movlw	244
 33178   002746  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33179   002748  A0D8               	btfss	status,0,c
 33180   00274A  EFA9  F013         	goto	u7851
 33181   00274E  EFAB  F013         	goto	u7850
 33182   002752                     u7851:
 33183   002752  EF3F  F015         	goto	l10626
 33184   002756                     u7850:
 33185   002756                     
 33186                           ; BSR set to: 5
 33187                           ;../../VLCBlib_PIC/mns.c: 681:         uptimeTimer.val = tickGet();
 33188   002756  EC18  F03A         	call	_tickGet	;wreg free
 33189   00275A  C501  F568         	movff	?_tickGet,_uptimeTimer
 33190   00275E  C502  F569         	movff	?_tickGet+1,_uptimeTimer+1
 33191   002762  C503  F56A         	movff	?_tickGet+2,_uptimeTimer+2
 33192   002766  C504  F56B         	movff	?_tickGet+3,_uptimeTimer+3
 33193   00276A                     
 33194                           ;../../VLCBlib_PIC/mns.c: 682:         mnsDiagnostics[0x03].asUint++;
 33195   00276A  0105               	movlb	5	; () banked
 33196   00276C  4BB3               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 33197   00276E  2BB4               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 33198   002770                     
 33199                           ; BSR set to: 5
 33200                           ;../../VLCBlib_PIC/mns.c: 683:         if (mnsDiagnostics[0x03].asUint == 0) {
 33201   002770  51B3               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 33202   002772  11B4               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 33203   002774  A4D8               	btfss	status,2,c
 33204   002776  EFBF  F013         	goto	u7861
 33205   00277A  EFC1  F013         	goto	u7860
 33206   00277E                     u7861:
 33207   00277E  EF3F  F015         	goto	l10626
 33208   002782                     u7860:
 33209   002782                     
 33210                           ; BSR set to: 5
 33211                           ;../../VLCBlib_PIC/mns.c: 684:             mnsDiagnostics[0x02].asUint++;
 33212   002782  4BB1               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 33213   002784  2BB2               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 33214   002786  EF3F  F015         	goto	l10626
 33215   00278A                     l1404:
 33216                           
 33217                           ; BSR set to: 5
 33218                           ;../../VLCBlib_PIC/mns.c: 693:             if ((!(PORTAbits.RA2)) == 0) {
 33219   00278A  A4CE               	btfss	206,2,c	;volatile
 33220   00278C  EFCA  F013         	goto	u7871
 33221   002790  EFCC  F013         	goto	u7870
 33222   002794                     u7871:
 33223   002794  EFD8  F013         	goto	l10550
 33224   002798                     u7870:
 33225   002798                     l10548:
 33226                           
 33227                           ;../../VLCBlib_PIC/mns.c: 695:                 pbTimer.val = tickGet();
 33228   002798  EC18  F03A         	call	_tickGet	;wreg free
 33229   00279C  C501  F570         	movff	?_tickGet,_pbTimer
 33230   0027A0  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33231   0027A4  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33232   0027A8  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33233                           
 33234                           ;../../VLCBlib_PIC/mns.c: 696:             } else {
 33235   0027AC  EF4E  F015         	goto	l1422
 33236   0027B0                     l10550:
 33237                           
 33238                           ; BSR set to: 5
 33239                           ;../../VLCBlib_PIC/mns.c: 698:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33240   0027B0  EC18  F03A         	call	_tickGet	;wreg free
 33241   0027B4  0105               	movlb	5	; () banked
 33242   0027B6  5170               	movf	_pbTimer& (0+255),w,b
 33243   0027B8  5C01               	subwf	?_tickGet^(0+1280),w,c
 33244   0027BA  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33245   0027BC  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33246   0027BE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33247   0027C0  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33248   0027C2  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33249   0027C4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33250   0027C6  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33251   0027C8  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33252   0027CA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33253   0027CC  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33254   0027CE  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33255   0027D0  E10D               	bnz	u7880
 33256   0027D2  0E91               	movlw	145
 33257   0027D4  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33258   0027D6  0ED0               	movlw	208
 33259   0027D8  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33260   0027DA  0E03               	movlw	3
 33261   0027DC  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33262   0027DE  A0D8               	btfss	status,0,c
 33263   0027E0  EFF4  F013         	goto	u7881
 33264   0027E4  EFF6  F013         	goto	u7880
 33265   0027E8                     u7881:
 33266   0027E8  EF4E  F015         	goto	l1422
 33267   0027EC                     u7880:
 33268   0027EC                     
 33269                           ; BSR set to: 5
 33270                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = 0xFD;
 33271   0027EC  0EFD               	movlw	253
 33272   0027EE  6FA1               	movwf	_mode_state& (0+255),b
 33273   0027F0                     
 33274                           ; BSR set to: 5
 33275                           ;../../VLCBlib_PIC/mns.c: 701:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 33276   0027F0  699E               	setf	_setupModePreviousMode& (0+255),b
 33277   0027F2                     
 33278                           ; BSR set to: 5
 33279                           ;../../VLCBlib_PIC/mns.c: 702:                     setLEDsByMode();
 33280   0027F2  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 33281   0027F6  EF4E  F015         	goto	l1422
 33282   0027FA                     l1409:
 33283                           
 33284                           ; BSR set to: 5
 33285                           ;../../VLCBlib_PIC/mns.c: 707:             if ((!(PORTAbits.RA2)) == 0) {
 33286   0027FA  A4CE               	btfss	206,2,c	;volatile
 33287   0027FC  EF02  F014         	goto	u7891
 33288   002800  EF04  F014         	goto	u7890
 33289   002804                     u7891:
 33290   002804  EFCC  F013         	goto	l10548
 33291   002808                     u7890:
 33292   002808                     
 33293                           ; BSR set to: 5
 33294                           ;../../VLCBlib_PIC/mns.c: 711:                 mode_state = MODE_SETUP;
 33295   002808  6BA1               	clrf	_mode_state& (0+255),b
 33296                           
 33297                           ;../../VLCBlib_PIC/mns.c: 712:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 33298   00280A  699E               	setf	_setupModePreviousMode& (0+255),b
 33299   00280C                     
 33300                           ; BSR set to: 5
 33301                           ;../../VLCBlib_PIC/mns.c: 713:                 pbTimer.val = tickGet();
 33302   00280C  EC18  F03A         	call	_tickGet	;wreg free
 33303   002810  C501  F570         	movff	?_tickGet,_pbTimer
 33304   002814  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33305   002818  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33306   00281C  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33307   002820                     
 33308                           ;../../VLCBlib_PIC/mns.c: 715:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 33309   002820  C590  F526         	movff	_nn+1,sendMessage2@data1
 33310   002824  C58F  F527         	movff	_nn,sendMessage2@data2
 33311   002828  0E50               	movlw	80
 33312   00282A  EC71  F040         	call	_sendMessage2
 33313   00282E                     
 33314                           ;../../VLCBlib_PIC/mns.c: 716:                 setLEDsByMode();
 33315   00282E  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 33316   002832  EFCC  F013         	goto	l10548
 33317   002836                     l1411:
 33318                           
 33319                           ; BSR set to: 5
 33320                           ;../../VLCBlib_PIC/mns.c: 721:             if ((!(PORTAbits.RA2)) == 0) {
 33321   002836  A4CE               	btfss	206,2,c	;volatile
 33322   002838  EF20  F014         	goto	u7901
 33323   00283C  EF22  F014         	goto	u7900
 33324   002840                     u7901:
 33325   002840  EFA6  F014         	goto	l10592
 33326   002844                     u7900:
 33327   002844                     
 33328                           ; BSR set to: 5
 33329                           ;../../VLCBlib_PIC/mns.c: 724:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33330   002844  EC18  F03A         	call	_tickGet	;wreg free
 33331   002848  0105               	movlb	5	; () banked
 33332   00284A  5170               	movf	_pbTimer& (0+255),w,b
 33333   00284C  5C01               	subwf	?_tickGet^(0+1280),w,c
 33334   00284E  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33335   002850  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33336   002852  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33337   002854  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33338   002856  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33339   002858  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33340   00285A  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33341   00285C  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33342   00285E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33343   002860  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33344   002862  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33345   002864  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33346   002866  E10B               	bnz	u7910
 33347   002868  0E6B               	movlw	107
 33348   00286A  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33349   00286C  0E18               	movlw	24
 33350   00286E  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33351   002870  A0D8               	btfss	status,0,c
 33352   002872  EF3D  F014         	goto	u7911
 33353   002876  EF3F  F014         	goto	u7910
 33354   00287A                     u7911:
 33355   00287A  EF77  F014         	goto	l10584
 33356   00287E                     u7910:
 33357   00287E                     
 33358                           ; BSR set to: 5
 33359   00287E  EC18  F03A         	call	_tickGet	;wreg free
 33360   002882  0105               	movlb	5	; () banked
 33361   002884  5170               	movf	_pbTimer& (0+255),w,b
 33362   002886  5C01               	subwf	?_tickGet^(0+1280),w,c
 33363   002888  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33364   00288A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33365   00288C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33366   00288E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33367   002890  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33368   002892  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33369   002894  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33370   002896  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33371   002898  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33372   00289A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33373   00289C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33374   00289E  E10B               	bnz	u7921
 33375   0028A0  0E48               	movlw	72
 33376   0028A2  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33377   0028A4  0EE8               	movlw	232
 33378   0028A6  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33379   0028A8  0E01               	movlw	1
 33380   0028AA  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33381   0028AC  B0D8               	btfsc	status,0,c
 33382   0028AE  EF5B  F014         	goto	u7921
 33383   0028B2  EF5D  F014         	goto	u7920
 33384   0028B6                     u7921:
 33385   0028B6  EF77  F014         	goto	l10584
 33386   0028BA                     u7920:
 33387   0028BA                     
 33388                           ; BSR set to: 5
 33389                           ;../../VLCBlib_PIC/mns.c: 726:                     mode_state = setupModePreviousMode;
 33390   0028BA  C59E  F5A1         	movff	_setupModePreviousMode,_mode_state
 33391   0028BE                     
 33392                           ; BSR set to: 5
 33393                           ;../../VLCBlib_PIC/mns.c: 727:                     if (mode_state == MODE_NORMAL) {
 33394   0028BE  05A1               	decf	_mode_state& (0+255),w,b
 33395   0028C0  A4D8               	btfss	status,2,c
 33396   0028C2  EF65  F014         	goto	u7931
 33397   0028C6  EF67  F014         	goto	u7930
 33398   0028CA                     u7931:
 33399   0028CA  EF75  F014         	goto	l10582
 33400   0028CE                     u7930:
 33401   0028CE                     
 33402                           ; BSR set to: 5
 33403                           ;../../VLCBlib_PIC/mns.c: 729:                         nn.word = previousNN.word;
 33404   0028CE  C58D  F58F         	movff	_previousNN,_nn
 33405   0028D2  C58E  F590         	movff	_previousNN+1,_nn+1
 33406   0028D6                     
 33407                           ; BSR set to: 5
 33408                           ;../../VLCBlib_PIC/mns.c: 730:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 33409   0028D6  C590  F526         	movff	_nn+1,sendMessage2@data1
 33410   0028DA  C58F  F527         	movff	_nn,sendMessage2@data2
 33411   0028DE  0E52               	movlw	82
 33412   0028E0  EC71  F040         	call	_sendMessage2
 33413   0028E4                     
 33414                           ;../../VLCBlib_PIC/mns.c: 732:                         mnsDiagnostics[0x05].asUint++;
 33415   0028E4  0105               	movlb	5	; () banked
 33416   0028E6  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 33417   0028E8  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 33418   0028EA                     l10582:
 33419                           
 33420                           ; BSR set to: 5
 33421                           ;../../VLCBlib_PIC/mns.c: 735:                     setLEDsByMode();
 33422   0028EA  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 33423   0028EE                     l10584:
 33424                           
 33425                           ;../../VLCBlib_PIC/mns.c: 737:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33426   0028EE  EC18  F03A         	call	_tickGet	;wreg free
 33427   0028F2  0105               	movlb	5	; () banked
 33428   0028F4  5170               	movf	_pbTimer& (0+255),w,b
 33429   0028F6  5C01               	subwf	?_tickGet^(0+1280),w,c
 33430   0028F8  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33431   0028FA  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33432   0028FC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33433   0028FE  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33434   002900  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33435   002902  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33436   002904  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33437   002906  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33438   002908  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33439   00290A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33440   00290C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33441   00290E  E10D               	bnz	u7940
 33442   002910  0E91               	movlw	145
 33443   002912  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33444   002914  0ED0               	movlw	208
 33445   002916  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33446   002918  0E03               	movlw	3
 33447   00291A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33448   00291C  A0D8               	btfss	status,0,c
 33449   00291E  EF93  F014         	goto	u7941
 33450   002922  EF95  F014         	goto	u7940
 33451   002926                     u7941:
 33452   002926  EF98  F014         	goto	l1415
 33453   00292A                     u7940:
 33454   00292A                     
 33455                           ; BSR set to: 5
 33456                           ;../../VLCBlib_PIC/mns.c: 738:                     mode_state = MODE_UNINITIALISED;
 33457   00292A  69A1               	setf	_mode_state& (0+255),b
 33458   00292C                     l10588:
 33459                           
 33460                           ;../../VLCBlib_PIC/mns.c: 739:                     setLEDsByMode();
 33461   00292C  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 33462   002930                     l1415:
 33463                           
 33464                           ;../../VLCBlib_PIC/mns.c: 741:                 pbTimer.val = tickGet();
 33465   002930  EC18  F03A         	call	_tickGet	;wreg free
 33466   002934  C501  F570         	movff	?_tickGet,_pbTimer
 33467   002938  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33468   00293C  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33469   002940  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33470   002944                     
 33471                           ;../../VLCBlib_PIC/mns.c: 742:                 pbWasPushed = FALSE;
 33472   002944  0105               	movlb	5	; () banked
 33473   002946  6B9D               	clrf	_pbWasPushed& (0+255),b
 33474                           
 33475                           ;../../VLCBlib_PIC/mns.c: 743:             } else {
 33476   002948  EF4E  F015         	goto	l1422
 33477   00294C                     l10592:
 33478                           
 33479                           ; BSR set to: 5
 33480                           ;../../VLCBlib_PIC/mns.c: 744:                 pbWasPushed = TRUE;
 33481   00294C  0E01               	movlw	1
 33482   00294E  6F9D               	movwf	_pbWasPushed& (0+255),b
 33483   002950  EF4E  F015         	goto	l1422
 33484   002954                     l1417:
 33485                           
 33486                           ; BSR set to: 5
 33487                           ;../../VLCBlib_PIC/mns.c: 749:             if ((!(PORTAbits.RA2)) == 0) {
 33488   002954  A4CE               	btfss	206,2,c	;volatile
 33489   002956  EFAF  F014         	goto	u7951
 33490   00295A  EFB1  F014         	goto	u7950
 33491   00295E                     u7951:
 33492   00295E  EFA6  F014         	goto	l10592
 33493   002962                     u7950:
 33494   002962                     
 33495                           ; BSR set to: 5
 33496                           ;../../VLCBlib_PIC/mns.c: 751:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33497   002962  519D               	movf	_pbWasPushed& (0+255),w,b
 33498   002964  B4D8               	btfsc	status,2,c
 33499   002966  EFB7  F014         	goto	u7961
 33500   00296A  EFB9  F014         	goto	u7960
 33501   00296E                     u7961:
 33502   00296E  EF06  F015         	goto	l10608
 33503   002972                     u7960:
 33504   002972                     
 33505                           ; BSR set to: 5
 33506   002972  EC18  F03A         	call	_tickGet	;wreg free
 33507   002976  0105               	movlb	5	; () banked
 33508   002978  5170               	movf	_pbTimer& (0+255),w,b
 33509   00297A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33510   00297C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33511   00297E  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33512   002980  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33513   002982  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33514   002984  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33515   002986  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33516   002988  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33517   00298A  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33518   00298C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33519   00298E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33520   002990  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33521   002992  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33522   002994  E10B               	bnz	u7970
 33523   002996  0E6B               	movlw	107
 33524   002998  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33525   00299A  0E18               	movlw	24
 33526   00299C  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33527   00299E  A0D8               	btfss	status,0,c
 33528   0029A0  EFD4  F014         	goto	u7971
 33529   0029A4  EFD6  F014         	goto	u7970
 33530   0029A8                     u7971:
 33531   0029A8  EF06  F015         	goto	l10608
 33532   0029AC                     u7970:
 33533   0029AC                     
 33534                           ; BSR set to: 5
 33535   0029AC  EC18  F03A         	call	_tickGet	;wreg free
 33536   0029B0  0105               	movlb	5	; () banked
 33537   0029B2  5170               	movf	_pbTimer& (0+255),w,b
 33538   0029B4  5C01               	subwf	?_tickGet^(0+1280),w,c
 33539   0029B6  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33540   0029B8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33541   0029BA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33542   0029BC  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33543   0029BE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33544   0029C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33545   0029C2  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33546   0029C4  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33547   0029C6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33548   0029C8  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33549   0029CA  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33550   0029CC  E10B               	bnz	u7981
 33551   0029CE  0E48               	movlw	72
 33552   0029D0  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33553   0029D2  0EE8               	movlw	232
 33554   0029D4  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33555   0029D6  0E01               	movlw	1
 33556   0029D8  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33557   0029DA  B0D8               	btfsc	status,0,c
 33558   0029DC  EFF2  F014         	goto	u7981
 33559   0029E0  EFF4  F014         	goto	u7980
 33560   0029E4                     u7981:
 33561   0029E4  EF06  F015         	goto	l10608
 33562   0029E8                     u7980:
 33563   0029E8                     
 33564                           ; BSR set to: 5
 33565                           ;../../VLCBlib_PIC/mns.c: 753:                     previousNN.word = nn.word;
 33566   0029E8  C58F  F58D         	movff	_nn,_previousNN
 33567   0029EC  C590  F58E         	movff	_nn+1,_previousNN+1
 33568                           
 33569                           ;../../VLCBlib_PIC/mns.c: 754:                     nn.bytes.lo = nn.bytes.hi = 0;
 33570   0029F0  6B90               	clrf	(_nn+1)& (0+255),b
 33571   0029F2  6B8F               	clrf	_nn& (0+255),b
 33572                           
 33573                           ;../../VLCBlib_PIC/mns.c: 756:                     mode_state = MODE_SETUP;
 33574   0029F4  6BA1               	clrf	_mode_state& (0+255),b
 33575   0029F6                     
 33576                           ; BSR set to: 5
 33577                           ;../../VLCBlib_PIC/mns.c: 757:                     setupModePreviousMode = MODE_NORMAL;
 33578   0029F6  0E01               	movlw	1
 33579   0029F8  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33580   0029FA                     
 33581                           ; BSR set to: 5
 33582                           ;../../VLCBlib_PIC/mns.c: 759:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 33583   0029FA  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33584   0029FE  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33585   002A02  0E50               	movlw	80
 33586   002A04  EC71  F040         	call	_sendMessage2
 33587   002A08                     
 33588                           ;../../VLCBlib_PIC/mns.c: 760:                     setLEDsByMode();
 33589   002A08  EC2B  F03E         	call	_setLEDsByMode	;wreg free
 33590   002A0C                     l10608:
 33591                           
 33592                           ;../../VLCBlib_PIC/mns.c: 762:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 33593   002A0C  0105               	movlb	5	; () banked
 33594   002A0E  519D               	movf	_pbWasPushed& (0+255),w,b
 33595   002A10  B4D8               	btfsc	status,2,c
 33596   002A12  EF0D  F015         	goto	u7991
 33597   002A16  EF0F  F015         	goto	u7990
 33598   002A1A                     u7991:
 33599   002A1A  EF98  F014         	goto	l1415
 33600   002A1E                     u7990:
 33601   002A1E                     
 33602                           ; BSR set to: 5
 33603   002A1E  EC18  F03A         	call	_tickGet	;wreg free
 33604   002A22  0105               	movlb	5	; () banked
 33605   002A24  5170               	movf	_pbTimer& (0+255),w,b
 33606   002A26  5C01               	subwf	?_tickGet^(0+1280),w,c
 33607   002A28  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33608   002A2A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33609   002A2C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33610   002A2E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33611   002A30  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33612   002A32  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33613   002A34  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33614   002A36  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33615   002A38  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33616   002A3A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33617   002A3C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33618   002A3E  E10D               	bnz	u8000
 33619   002A40  0E90               	movlw	144
 33620   002A42  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33621   002A44  0ED0               	movlw	208
 33622   002A46  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33623   002A48  0E03               	movlw	3
 33624   002A4A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33625   002A4C  A0D8               	btfss	status,0,c
 33626   002A4E  EF2B  F015         	goto	u8001
 33627   002A52  EF2D  F015         	goto	u8000
 33628   002A56                     u8001:
 33629   002A56  EF98  F014         	goto	l1415
 33630   002A5A                     u8000:
 33631   002A5A                     
 33632                           ; BSR set to: 5
 33633                           ;../../VLCBlib_PIC/mns.c: 764:                     previousNN.word = nn.word;
 33634   002A5A  C58F  F58D         	movff	_nn,_previousNN
 33635   002A5E  C590  F58E         	movff	_nn+1,_previousNN+1
 33636                           
 33637                           ;../../VLCBlib_PIC/mns.c: 765:                     nn.bytes.lo = nn.bytes.hi = 0;
 33638   002A62  6B90               	clrf	(_nn+1)& (0+255),b
 33639   002A64  6B8F               	clrf	_nn& (0+255),b
 33640                           
 33641                           ;../../VLCBlib_PIC/mns.c: 767:                     mode_state = MODE_UNINITIALISED;
 33642   002A66  69A1               	setf	_mode_state& (0+255),b
 33643   002A68                     
 33644                           ; BSR set to: 5
 33645                           ;../../VLCBlib_PIC/mns.c: 768:                     setupModePreviousMode = MODE_NORMAL;
 33646   002A68  0E01               	movlw	1
 33647   002A6A  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33648   002A6C                     
 33649                           ; BSR set to: 5
 33650                           ;../../VLCBlib_PIC/mns.c: 770:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 33651   002A6C  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33652   002A70  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33653   002A74  0E51               	movlw	81
 33654   002A76  EC71  F040         	call	_sendMessage2
 33655   002A7A  EF96  F014         	goto	l10588
 33656   002A7E                     l10626:
 33657                           
 33658                           ; BSR set to: 5
 33659   002A7E  51A1               	movf	_mode_state& (0+255),w,b
 33660                           
 33661                           ; Switch size 1, requested type "simple"
 33662                           ; Number of cases is 3, Range of values is 0 to 255
 33663                           ; switch strategies available:
 33664                           ; Name         Instructions Cycles
 33665                           ; simple_byte           10     6 (average)
 33666                           ;	Chosen strategy is simple_byte
 33667   002A80  0A00               	xorlw	0	; case 0
 33668   002A82  B4D8               	btfsc	status,2,c
 33669   002A84  EF1B  F014         	goto	l1411
 33670   002A88  0AFD               	xorlw	253	; case 253
 33671   002A8A  B4D8               	btfsc	status,2,c
 33672   002A8C  EFFD  F013         	goto	l1409
 33673   002A90  0A02               	xorlw	2	; case 255
 33674   002A92  B4D8               	btfsc	status,2,c
 33675   002A94  EFC5  F013         	goto	l1404
 33676   002A98  EFAA  F014         	goto	l1417
 33677   002A9C                     l1422:
 33678   002A9C  0012               	return		;funcret
 33679   002A9E                     __end_of_mnsPoll:
 33680                           	callstack 0
 33681                           
 33682 ;; *************** function _setLEDsByMode *****************
 33683 ;; Defined at:
 33684 ;;		line 818 in file "../../VLCBlib_PIC/mns.c"
 33685 ;; Parameters:    Size  Location     Type
 33686 ;;		None
 33687 ;; Auto vars:     Size  Location     Type
 33688 ;;		None
 33689 ;; Return value:  Size  Location     Type
 33690 ;;                  1    wreg      void 
 33691 ;; Registers used:
 33692 ;;		wreg, status,2, status,0, cstack
 33693 ;; Tracked objects:
 33694 ;;		On entry : 0/0
 33695 ;;		On exit  : 0/0
 33696 ;;		Unchanged: 0/0
 33697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33702 ;;Total ram usage:        0 bytes
 33703 ;; Hardware stack levels used: 1
 33704 ;; Hardware stack levels required when called: 2
 33705 ;; This function calls:
 33706 ;;		_showStatus
 33707 ;; This function is called by:
 33708 ;;		_mnsPowerUp
 33709 ;;		_mnsProcessMessage
 33710 ;;		_mnsPoll
 33711 ;; This function uses a non-reentrant model
 33712 ;;
 33713                           
 33714                           	psect	text71
 33715   007C56                     __ptext71:
 33716                           	callstack 0
 33717   007C56                     _setLEDsByMode:
 33718                           	callstack 122
 33719   007C56                     
 33720                           ;../../VLCBlib_PIC/mns.c: 819:        switch (mode_state) {
 33721   007C56  EF3C  F03E         	goto	l8958
 33722   007C5A                     l8950:
 33723                           
 33724                           ; BSR set to: 5
 33725                           ;../../VLCBlib_PIC/mns.c: 821:             showStatus(STATUS_UNINITIALISED);
 33726   007C5A  0E01               	movlw	1
 33727   007C5C  EC54  F028         	call	_showStatus
 33728                           
 33729                           ;../../VLCBlib_PIC/mns.c: 822:             break;
 33730   007C60  EF4C  F03E         	goto	l1435
 33731   007C64                     l8952:
 33732                           
 33733                           ; BSR set to: 5
 33734                           ;../../VLCBlib_PIC/mns.c: 825:             showStatus(STATUS_SETUP);
 33735   007C64  0E02               	movlw	2
 33736   007C66  EC54  F028         	call	_showStatus
 33737                           
 33738                           ;../../VLCBlib_PIC/mns.c: 826:             break;
 33739   007C6A  EF4C  F03E         	goto	l1435
 33740   007C6E                     l8954:
 33741                           
 33742                           ; BSR set to: 5
 33743                           ;../../VLCBlib_PIC/mns.c: 828:             showStatus(STATUS_NORMAL);
 33744   007C6E  0E03               	movlw	3
 33745   007C70  EC54  F028         	call	_showStatus
 33746                           
 33747                           ;../../VLCBlib_PIC/mns.c: 829:             break;
 33748   007C74  EF4C  F03E         	goto	l1435
 33749   007C78                     l8958:
 33750   007C78  0105               	movlb	5	; () banked
 33751   007C7A  51A1               	movf	_mode_state& (0+255),w,b
 33752                           
 33753                           ; Switch size 1, requested type "simple"
 33754                           ; Number of cases is 3, Range of values is 0 to 255
 33755                           ; switch strategies available:
 33756                           ; Name         Instructions Cycles
 33757                           ; simple_byte           10     6 (average)
 33758                           ;	Chosen strategy is simple_byte
 33759   007C7C  0A00               	xorlw	0	; case 0
 33760   007C7E  B4D8               	btfsc	status,2,c
 33761   007C80  EF32  F03E         	goto	l8952
 33762   007C84  0AFD               	xorlw	253	; case 253
 33763   007C86  B4D8               	btfsc	status,2,c
 33764   007C88  EF32  F03E         	goto	l8952
 33765   007C8C  0A02               	xorlw	2	; case 255
 33766   007C8E  B4D8               	btfsc	status,2,c
 33767   007C90  EF2D  F03E         	goto	l8950
 33768   007C94  EF37  F03E         	goto	l8954
 33769   007C98                     l1435:
 33770   007C98  0012               	return		;funcret
 33771   007C9A                     __end_of_setLEDsByMode:
 33772                           	callstack 0
 33773                           
 33774 ;; *************** function _sendMessage2 *****************
 33775 ;; Defined at:
 33776 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 33777 ;; Parameters:    Size  Location     Type
 33778 ;;  opc             1    wreg     enum E22928
 33779 ;;  data1           1   37[COMRAM] unsigned char 
 33780 ;;  data2           1   38[COMRAM] unsigned char 
 33781 ;; Auto vars:     Size  Location     Type
 33782 ;;  opc             1   39[COMRAM] enum E22928
 33783 ;; Return value:  Size  Location     Type
 33784 ;;                  1    wreg      void 
 33785 ;; Registers used:
 33786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33787 ;; Tracked objects:
 33788 ;;		On entry : 0/0
 33789 ;;		On exit  : 0/0
 33790 ;;		Unchanged: 0/0
 33791 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33796 ;;Total ram usage:        3 bytes
 33797 ;; Hardware stack levels used: 1
 33798 ;; Hardware stack levels required when called: 5
 33799 ;; This function calls:
 33800 ;;		_sendMessage
 33801 ;; This function is called by:
 33802 ;;		_doNnclr
 33803 ;;		_doEvlrn
 33804 ;;		_doEvuln
 33805 ;;		_mnsProcessMessage
 33806 ;;		_mnsPoll
 33807 ;;		_nvProcessMessage
 33808 ;; This function uses a non-reentrant model
 33809 ;;
 33810                           
 33811                           	psect	text72
 33812   0080E2                     __ptext72:
 33813                           	callstack 0
 33814   0080E2                     _sendMessage2:
 33815                           	callstack 118
 33816                           
 33817                           ;incstack = 0
 33818                           ;sendMessage2@opc stored from wreg
 33819   0080E2  6E28               	movwf	sendMessage2@opc^(0+1280),c
 33820   0080E4                     
 33821                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 33822   0080E4  0E03               	movlw	3
 33823   0080E6  6E1B               	movwf	sendMessage@len^(0+1280),c
 33824   0080E8  C526  F51C         	movff	sendMessage2@data1,sendMessage@data1
 33825   0080EC  C527  F51D         	movff	sendMessage2@data2,sendMessage@data2
 33826   0080F0  0E00               	movlw	0
 33827   0080F2  6E1E               	movwf	sendMessage@data3^(0+1280),c
 33828   0080F4  0E00               	movlw	0
 33829   0080F6  6E1F               	movwf	sendMessage@data4^(0+1280),c
 33830   0080F8  0E00               	movlw	0
 33831   0080FA  6E20               	movwf	sendMessage@data5^(0+1280),c
 33832   0080FC  0E00               	movlw	0
 33833   0080FE  6E21               	movwf	sendMessage@data6^(0+1280),c
 33834   008100  0E00               	movlw	0
 33835   008102  6E22               	movwf	sendMessage@data7^(0+1280),c
 33836   008104  5028               	movf	sendMessage2@opc^(0+1280),w,c
 33837   008106  EC82  F036         	call	_sendMessage
 33838   00810A  0012               	return		;funcret
 33839   00810C                     __end_of_sendMessage2:
 33840                           	callstack 0
 33841                           
 33842 ;; *************** function _sendMessage7 *****************
 33843 ;; Defined at:
 33844 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 33845 ;; Parameters:    Size  Location     Type
 33846 ;;  opc             1    wreg     enum E22928
 33847 ;;  data1           1   37[COMRAM] unsigned char 
 33848 ;;  data2           1   38[COMRAM] unsigned char 
 33849 ;;  data3           1   39[COMRAM] unsigned char 
 33850 ;;  data4           1   40[COMRAM] unsigned char 
 33851 ;;  data5           1   41[COMRAM] unsigned char 
 33852 ;;  data6           1   42[COMRAM] unsigned char 
 33853 ;;  data7           1   43[COMRAM] unsigned char 
 33854 ;; Auto vars:     Size  Location     Type
 33855 ;;  opc             1   44[COMRAM] enum E22928
 33856 ;; Return value:  Size  Location     Type
 33857 ;;                  1    wreg      void 
 33858 ;; Registers used:
 33859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33860 ;; Tracked objects:
 33861 ;;		On entry : 0/0
 33862 ;;		On exit  : 0/0
 33863 ;;		Unchanged: 0/0
 33864 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33865 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33868 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33869 ;;Total ram usage:        8 bytes
 33870 ;; Hardware stack levels used: 1
 33871 ;; Hardware stack levels required when called: 5
 33872 ;; This function calls:
 33873 ;;		_sendMessage
 33874 ;; This function is called by:
 33875 ;;		_consumerProcessMessage
 33876 ;;		_nerdCallback
 33877 ;;		_mnsProcessMessage
 33878 ;; This function uses a non-reentrant model
 33879 ;;
 33880                           
 33881                           	psect	text73
 33882   00810C                     __ptext73:
 33883                           	callstack 0
 33884   00810C                     _sendMessage7:
 33885                           	callstack 118
 33886                           
 33887                           ;incstack = 0
 33888                           ;sendMessage7@opc stored from wreg
 33889   00810C  6E2D               	movwf	sendMessage7@opc^(0+1280),c
 33890   00810E                     
 33891                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 33892   00810E  0E08               	movlw	8
 33893   008110  6E1B               	movwf	sendMessage@len^(0+1280),c
 33894   008112  C526  F51C         	movff	sendMessage7@data1,sendMessage@data1
 33895   008116  C527  F51D         	movff	sendMessage7@data2,sendMessage@data2
 33896   00811A  C528  F51E         	movff	sendMessage7@data3,sendMessage@data3
 33897   00811E  C529  F51F         	movff	sendMessage7@data4,sendMessage@data4
 33898   008122  C52A  F520         	movff	sendMessage7@data5,sendMessage@data5
 33899   008126  C52B  F521         	movff	sendMessage7@data6,sendMessage@data6
 33900   00812A  C52C  F522         	movff	sendMessage7@data7,sendMessage@data7
 33901   00812E  502D               	movf	sendMessage7@opc^(0+1280),w,c
 33902   008130  EC82  F036         	call	_sendMessage
 33903   008134  0012               	return		;funcret
 33904   008136                     __end_of_sendMessage7:
 33905                           	callstack 0
 33906                           
 33907 ;; *************** function _isConsumedEvent *****************
 33908 ;; Defined at:
 33909 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 33910 ;; Parameters:    Size  Location     Type
 33911 ;;  eventIndex      1    wreg     unsigned char 
 33912 ;; Auto vars:     Size  Location     Type
 33913 ;;  eventIndex      1    0[COMRAM] unsigned char 
 33914 ;; Return value:  Size  Location     Type
 33915 ;;                  1    wreg      unsigned char 
 33916 ;; Registers used:
 33917 ;;		wreg, status,2, cstack
 33918 ;; Tracked objects:
 33919 ;;		On entry : 0/0
 33920 ;;		On exit  : 0/0
 33921 ;;		Unchanged: 0/0
 33922 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33927 ;;Total ram usage:        1 bytes
 33928 ;; Hardware stack levels used: 1
 33929 ;; Hardware stack levels required when called: 2
 33930 ;; This function calls:
 33931 ;;		_APP_isConsumedEvent
 33932 ;; This function is called by:
 33933 ;;		_consumerProcessMessage
 33934 ;; This function uses a non-reentrant model
 33935 ;;
 33936                           
 33937                           	psect	text74
 33938   00831E                     __ptext74:
 33939                           	callstack 0
 33940   00831E                     _isConsumedEvent:
 33941                           	callstack 122
 33942                           
 33943                           ;incstack = 0
 33944                           ;isConsumedEvent@eventIndex stored from wreg
 33945   00831E  6E01               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 33946   008320                     
 33947                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 33948   008320  5001               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 33949   008322  ECB5  F041         	call	_APP_isConsumedEvent
 33950   008326  0012               	return		;funcret
 33951   008328                     __end_of_isConsumedEvent:
 33952                           	callstack 0
 33953                           
 33954 ;; *************** function _APP_isConsumedEvent *****************
 33955 ;; Defined at:
 33956 ;;		line 64 in file "../canargb_events.c"
 33957 ;; Parameters:    Size  Location     Type
 33958 ;;  tableIndex      1    wreg     unsigned char 
 33959 ;; Auto vars:     Size  Location     Type
 33960 ;;  tableIndex      1    0[COMRAM] unsigned char 
 33961 ;; Return value:  Size  Location     Type
 33962 ;;                  1    wreg      unsigned char 
 33963 ;; Registers used:
 33964 ;;		wreg
 33965 ;; Tracked objects:
 33966 ;;		On entry : 0/0
 33967 ;;		On exit  : 0/0
 33968 ;;		Unchanged: 0/0
 33969 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33974 ;;Total ram usage:        0 bytes
 33975 ;; Hardware stack levels used: 1
 33976 ;; Hardware stack levels required when called: 1
 33977 ;; This function calls:
 33978 ;;		Nothing
 33979 ;; This function is called by:
 33980 ;;		_isConsumedEvent
 33981 ;; This function uses a non-reentrant model
 33982 ;;
 33983                           
 33984                           	psect	text75
 33985   00836A                     __ptext75:
 33986                           	callstack 0
 33987   00836A                     _APP_isConsumedEvent:
 33988                           	callstack 122
 33989   00836A                     
 33990                           ;../canargb_events.c: 65:     return TRUE;
 33991   00836A  0E01               	movlw	1
 33992   00836C  0012               	return		;funcret
 33993   00836E                     __end_of_APP_isConsumedEvent:
 33994                           	callstack 0
 33995                           
 33996 ;; *************** function _findEvent *****************
 33997 ;; Defined at:
 33998 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 33999 ;; Parameters:    Size  Location     Type
 34000 ;;  nodeNumber      2   33[COMRAM] unsigned short 
 34001 ;;  eventNumber     2   35[COMRAM] unsigned short 
 34002 ;; Auto vars:     Size  Location     Type
 34003 ;;  en              2   41[COMRAM] unsigned short 
 34004 ;;  nn              2   39[COMRAM] unsigned short 
 34005 ;;  tableIndex      1   45[COMRAM] unsigned char 
 34006 ;;  chainIdx        1   44[COMRAM] unsigned char 
 34007 ;;  hash            1   43[COMRAM] unsigned char 
 34008 ;; Return value:  Size  Location     Type
 34009 ;;                  1    wreg      unsigned char 
 34010 ;; Registers used:
 34011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34012 ;; Tracked objects:
 34013 ;;		On entry : 0/0
 34014 ;;		On exit  : 0/0
 34015 ;;		Unchanged: 0/0
 34016 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34018 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34020 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34021 ;;Total ram usage:       13 bytes
 34022 ;; Hardware stack levels used: 1
 34023 ;; Hardware stack levels required when called: 4
 34024 ;; This function calls:
 34025 ;;		_getEN
 34026 ;;		_getHash
 34027 ;;		_getNN
 34028 ;; This function is called by:
 34029 ;;		_consumerProcessMessage
 34030 ;;		_doReqev
 34031 ;;		_removeEvent
 34032 ;;		_addEvent
 34033 ;; This function uses a non-reentrant model
 34034 ;;
 34035                           
 34036                           	psect	text76
 34037   006426                     __ptext76:
 34038                           	callstack 0
 34039   006426                     _findEvent:
 34040                           	callstack 119
 34041   006426                     
 34042                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 34043   006426  C522  F51C         	movff	findEvent@nodeNumber,getHash@nn
 34044   00642A  C523  F51D         	movff	findEvent@nodeNumber+1,getHash@nn+1
 34045   00642E  C524  F51E         	movff	findEvent@eventNumber,getHash@en
 34046   006432  C525  F51F         	movff	findEvent@eventNumber+1,getHash@en+1
 34047   006436  EC1B  F041         	call	_getHash	;wreg free
 34048   00643A  6E2C               	movwf	findEvent@hash^(0+1280),c
 34049   00643C                     
 34050                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 34051   00643C  6A2D               	clrf	findEvent@chainIdx^(0+1280),c
 34052   00643E                     l7676:
 34053                           
 34054                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 34055   00643E  502C               	movf	findEvent@hash^(0+1280),w,c
 34056   006440  0D14               	mullw	20
 34057   006442  0EFC               	movlw	low _eventChains
 34058   006444  24F3               	addwf	243,w,c
 34059   006446  6E26               	movwf	??_findEvent^(0+1280),c
 34060   006448  0E08               	movlw	high _eventChains
 34061   00644A  20F4               	addwfc	prodh,w,c
 34062   00644C  6E27               	movwf	(??_findEvent+1)^(0+1280),c
 34063   00644E  502D               	movf	findEvent@chainIdx^(0+1280),w,c
 34064   006450  2426               	addwf	??_findEvent^(0+1280),w,c
 34065   006452  6ED9               	movwf	fsr2l,c
 34066   006454  0E00               	movlw	0
 34067   006456  2027               	addwfc	(??_findEvent+1)^(0+1280),w,c
 34068   006458  6EDA               	movwf	fsr2h,c
 34069   00645A  50DF               	movf	indf2,w,c
 34070   00645C  6E2E               	movwf	findEvent@tableIndex^(0+1280),c
 34071   00645E                     
 34072                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 34073   00645E  282E               	incf	findEvent@tableIndex^(0+1280),w,c
 34074   006460  A4D8               	btfss	status,2,c
 34075   006462  EF35  F032         	goto	u5011
 34076   006466  EF37  F032         	goto	u5010
 34077   00646A                     u5011:
 34078   00646A  EF3A  F032         	goto	l7684
 34079   00646E                     u5010:
 34080   00646E                     l7680:
 34081   00646E  0EFF               	movlw	255
 34082   006470  EF6E  F032         	goto	l1120
 34083   006474                     l7684:
 34084                           
 34085                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 34086   006474  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34087   006476  EC93  F029         	call	_getNN
 34088   00647A  C50D  F528         	movff	?_getNN,findEvent@nn
 34089   00647E  C50E  F529         	movff	?_getNN+1,findEvent@nn+1
 34090                           
 34091                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 34092   006482  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34093   006484  ECC1  F033         	call	_getEN
 34094   006488  C50D  F52A         	movff	?_getEN,findEvent@en
 34095   00648C  C50E  F52B         	movff	?_getEN+1,findEvent@en+1
 34096   006490                     
 34097                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 34098   006490  5022               	movf	findEvent@nodeNumber^(0+1280),w,c
 34099   006492  1828               	xorwf	findEvent@nn^(0+1280),w,c
 34100   006494  E107               	bnz	u5021
 34101   006496  5023               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 34102   006498  1829               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 34103   00649A  A4D8               	btfss	status,2,c
 34104   00649C  EF52  F032         	goto	u5021
 34105   0064A0  EF54  F032         	goto	u5020
 34106   0064A4                     u5021:
 34107   0064A4  EF63  F032         	goto	l7694
 34108   0064A8                     u5020:
 34109   0064A8  5024               	movf	findEvent@eventNumber^(0+1280),w,c
 34110   0064AA  182A               	xorwf	findEvent@en^(0+1280),w,c
 34111   0064AC  E107               	bnz	u5031
 34112   0064AE  5025               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 34113   0064B0  182B               	xorwf	(findEvent@en+1)^(0+1280),w,c
 34114   0064B2  A4D8               	btfss	status,2,c
 34115   0064B4  EF5E  F032         	goto	u5031
 34116   0064B8  EF60  F032         	goto	u5030
 34117   0064BC                     u5031:
 34118   0064BC  EF63  F032         	goto	l7694
 34119   0064C0                     u5030:
 34120   0064C0                     
 34121                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 34122   0064C0  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34123   0064C2  EF6E  F032         	goto	l1120
 34124   0064C6                     l7694:
 34125                           
 34126                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 34127   0064C6  2A2D               	incf	findEvent@chainIdx^(0+1280),f,c
 34128   0064C8  0E13               	movlw	19
 34129   0064CA  642D               	cpfsgt	findEvent@chainIdx^(0+1280),c
 34130   0064CC  EF6A  F032         	goto	u5041
 34131   0064D0  EF6C  F032         	goto	u5040
 34132   0064D4                     u5041:
 34133   0064D4  EF1F  F032         	goto	l7676
 34134   0064D8                     u5040:
 34135   0064D8  EF37  F032         	goto	l7680
 34136   0064DC                     l1120:
 34137   0064DC  0012               	return		;funcret
 34138   0064DE                     __end_of_findEvent:
 34139                           	callstack 0
 34140                           
 34141 ;; *************** function _consumerEventCheckLen *****************
 34142 ;; Defined at:
 34143 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 34144 ;; Parameters:    Size  Location     Type
 34145 ;;  m               2   48[COMRAM] PTR struct Message
 34146 ;;		 -> poll@m(9), 
 34147 ;;  needed          1   50[COMRAM] unsigned char 
 34148 ;; Auto vars:     Size  Location     Type
 34149 ;;		None
 34150 ;; Return value:  Size  Location     Type
 34151 ;;                  1    wreg      enum E23340
 34152 ;; Registers used:
 34153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34154 ;; Tracked objects:
 34155 ;;		On entry : 0/0
 34156 ;;		On exit  : 0/0
 34157 ;;		Unchanged: 0/0
 34158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34159 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34162 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34163 ;;Total ram usage:        3 bytes
 34164 ;; Hardware stack levels used: 1
 34165 ;; Hardware stack levels required when called: 7
 34166 ;; This function calls:
 34167 ;;		_checkLen
 34168 ;; This function is called by:
 34169 ;;		_consumerProcessMessage
 34170 ;; This function uses a non-reentrant model
 34171 ;;
 34172                           
 34173                           	psect	text77
 34174   0082D6                     __ptext77:
 34175                           	callstack 0
 34176   0082D6                     _consumerEventCheckLen:
 34177                           	callstack 117
 34178   0082D6                     
 34179                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 34180   0082D6  C531  F52C         	movff	consumerEventCheckLen@m,checkLen@m
 34181   0082DA  C532  F52D         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 34182   0082DE  C533  F52E         	movff	consumerEventCheckLen@needed,checkLen@needed
 34183   0082E2  0E06               	movlw	6
 34184   0082E4  6E2F               	movwf	checkLen@service^(0+1280),c
 34185   0082E6  EC66  F034         	call	_checkLen	;wreg free
 34186   0082EA  0012               	return		;funcret
 34187   0082EC                     __end_of_consumerEventCheckLen:
 34188                           	callstack 0
 34189                           
 34190 ;; *************** function _checkLen *****************
 34191 ;; Defined at:
 34192 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 34193 ;; Parameters:    Size  Location     Type
 34194 ;;  m               2   43[COMRAM] PTR struct Message
 34195 ;;		 -> poll@m(9), 
 34196 ;;  needed          1   45[COMRAM] unsigned char 
 34197 ;;  service         1   46[COMRAM] unsigned char 
 34198 ;; Auto vars:     Size  Location     Type
 34199 ;;		None
 34200 ;; Return value:  Size  Location     Type
 34201 ;;                  1    wreg      enum E23340
 34202 ;; Registers used:
 34203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34204 ;; Tracked objects:
 34205 ;;		On entry : 0/0
 34206 ;;		On exit  : 0/0
 34207 ;;		Unchanged: 0/0
 34208 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34212 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34213 ;;Total ram usage:        5 bytes
 34214 ;; Hardware stack levels used: 1
 34215 ;; Hardware stack levels required when called: 6
 34216 ;; This function calls:
 34217 ;;		_sendMessage5
 34218 ;; This function is called by:
 34219 ;;		_consumerEventCheckLen
 34220 ;;		_teachCheckLen
 34221 ;; This function uses a non-reentrant model
 34222 ;;
 34223                           
 34224                           	psect	text78
 34225   0068CC                     __ptext78:
 34226                           	callstack 0
 34227   0068CC                     _checkLen:
 34228                           	callstack 117
 34229   0068CC                     
 34230                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 34231   0068CC  C52C  F4D9         	movff	checkLen@m,fsr2l
 34232   0068D0  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34233   0068D4  502E               	movf	checkLen@needed^(0+1280),w,c
 34234   0068D6  5CDE               	subwf	postinc2,w,c
 34235   0068D8  B0D8               	btfsc	status,0,c
 34236   0068DA  EF71  F034         	goto	u5501
 34237   0068DE  EF73  F034         	goto	u5500
 34238   0068E2                     u5501:
 34239   0068E2  EFB4  F034         	goto	l8124
 34240   0068E6                     u5500:
 34241   0068E6                     
 34242                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 34243   0068E6  C52C  F4D9         	movff	checkLen@m,fsr2l
 34244   0068EA  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34245   0068EE  0E02               	movlw	2
 34246   0068F0  64DF               	cpfsgt	indf2,c
 34247   0068F2  EF7D  F034         	goto	u5511
 34248   0068F6  EF7F  F034         	goto	u5510
 34249   0068FA                     u5511:
 34250   0068FA  EFB1  F034         	goto	l8120
 34251   0068FE                     u5510:
 34252   0068FE                     
 34253                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 34254   0068FE  EE20 F002          	lfsr	2,2
 34255   006902  502C               	movf	checkLen@m^(0+1280),w,c
 34256   006904  26D9               	addwf	fsr2l,f,c
 34257   006906  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34258   006908  22DA               	addwfc	fsr2h,f,c
 34259   00690A  50DE               	movf	postinc2,w,c
 34260   00690C  0105               	movlb	5	; () banked
 34261   00690E  1990               	xorwf	(_nn+1)& (0+255),w,b
 34262   006910  A4D8               	btfss	status,2,c
 34263   006912  EF8D  F034         	goto	u5521
 34264   006916  EF8F  F034         	goto	u5520
 34265   00691A                     u5521:
 34266   00691A  EFB1  F034         	goto	l8120
 34267   00691E                     u5520:
 34268   00691E                     
 34269                           ; BSR set to: 5
 34270   00691E  EE20 F003          	lfsr	2,3
 34271   006922  502C               	movf	checkLen@m^(0+1280),w,c
 34272   006924  26D9               	addwf	fsr2l,f,c
 34273   006926  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34274   006928  22DA               	addwfc	fsr2h,f,c
 34275   00692A  518F               	movf	_nn& (0+255),w,b
 34276   00692C  18DE               	xorwf	postinc2,w,c
 34277   00692E  A4D8               	btfss	status,2,c
 34278   006930  EF9C  F034         	goto	u5531
 34279   006934  EF9E  F034         	goto	u5530
 34280   006938                     u5531:
 34281   006938  EFB1  F034         	goto	l8120
 34282   00693C                     u5530:
 34283   00693C                     
 34284                           ; BSR set to: 5
 34285                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 34286   00693C  C590  F526         	movff	_nn+1,sendMessage5@data1
 34287   006940  C58F  F527         	movff	_nn,sendMessage5@data2
 34288   006944  EE20 F001          	lfsr	2,1
 34289   006948  502C               	movf	checkLen@m^(0+1280),w,c
 34290   00694A  26D9               	addwf	fsr2l,f,c
 34291   00694C  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34292   00694E  22DA               	addwfc	fsr2h,f,c
 34293   006950  50DF               	movf	indf2,w,c
 34294   006952  6E28               	movwf	sendMessage5@data3^(0+1280),c
 34295   006954  C52F  F529         	movff	checkLen@service,sendMessage5@data4
 34296   006958  0E01               	movlw	1
 34297   00695A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 34298   00695C  0EAF               	movlw	175
 34299   00695E  EC9B  F040         	call	_sendMessage5
 34300   006962                     l8120:
 34301                           
 34302                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 34303   006962  0E01               	movlw	1
 34304   006964  EFB5  F034         	goto	l2047
 34305   006968                     l8124:
 34306                           
 34307                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 34308   006968  0E00               	movlw	0
 34309   00696A                     l2047:
 34310   00696A  0012               	return		;funcret
 34311   00696C                     __end_of_checkLen:
 34312                           	callstack 0
 34313                           
 34314 ;; *************** function _APP_processConsumedEvent *****************
 34315 ;; Defined at:
 34316 ;;		line 105 in file "../canargb_events.c"
 34317 ;; Parameters:    Size  Location     Type
 34318 ;;  tableIndex      1    wreg     unsigned char 
 34319 ;;  m               2   27[COMRAM] PTR struct Message
 34320 ;;		 -> poll@m(9), 
 34321 ;; Auto vars:     Size  Location     Type
 34322 ;;  tableIndex      1   29[COMRAM] unsigned char 
 34323 ;;  colourPixelI    1   34[COMRAM] struct PaletteIndex
 34324 ;;  end_ledno       1   33[COMRAM] unsigned char 
 34325 ;;  start_ledno     1   32[COMRAM] unsigned char 
 34326 ;;  action          1   31[COMRAM] unsigned char 
 34327 ;;  ev              1   35[COMRAM] unsigned char 
 34328 ;;  onOff           1   30[COMRAM] unsigned char 
 34329 ;; Return value:  Size  Location     Type
 34330 ;;                  1    wreg      enum E23290
 34331 ;; Registers used:
 34332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34333 ;; Tracked objects:
 34334 ;;		On entry : 0/0
 34335 ;;		On exit  : 0/0
 34336 ;;		Unchanged: 0/0
 34337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34339 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34341 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34342 ;;Total ram usage:        9 bytes
 34343 ;; Hardware stack levels used: 1
 34344 ;; Hardware stack levels required when called: 4
 34345 ;; This function calls:
 34346 ;;		_getEVs
 34347 ;;		_updateLedRange
 34348 ;;		_updateRGB
 34349 ;; This function is called by:
 34350 ;;		_consumerProcessMessage
 34351 ;; This function uses a non-reentrant model
 34352 ;;
 34353                           
 34354                           	psect	text79
 34355   005A5E                     __ptext79:
 34356                           	callstack 0
 34357   005A5E                     _APP_processConsumedEvent:
 34358                           	callstack 120
 34359                           
 34360                           ;incstack = 0
 34361                           ;APP_processConsumedEvent@tableIndex stored from wreg
 34362   005A5E  6E1E               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 34363   005A60                     
 34364                           ;../canargb_events.c: 106:     uint8_t ev;;../canargb_events.c: 107:     uint8_t onOff;;
      +                          ../canargb_events.c: 109:     onOff = !(m->opc & 1);
 34365   005A60  EE20 F001          	lfsr	2,1
 34366   005A64  501C               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 34367   005A66  26D9               	addwf	fsr2l,f,c
 34368   005A68  501D               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 34369   005A6A  22DA               	addwfc	fsr2h,f,c
 34370   005A6C  A0DF               	btfss	indf2,0,c
 34371   005A6E  EF3B  F02D         	goto	u5731
 34372   005A72  EF3E  F02D         	goto	u5730
 34373   005A76                     u5731:
 34374   005A76  0E01               	movlw	1
 34375   005A78  EF3F  F02D         	goto	u5740
 34376   005A7C                     u5730:
 34377   005A7C  0E00               	movlw	0
 34378   005A7E                     u5740:
 34379   005A7E  6E1F               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 34380   005A80                     
 34381                           ;../canargb_events.c: 110:     if (getEVs(tableIndex)) {
 34382   005A80  501E               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 34383   005A82  EC54  F035         	call	_getEVs
 34384   005A86  0900               	iorlw	0
 34385   005A88  B4D8               	btfsc	status,2,c
 34386   005A8A  EF49  F02D         	goto	u5751
 34387   005A8E  EF4B  F02D         	goto	u5750
 34388   005A92                     u5751:
 34389   005A92  EF4E  F02D         	goto	l115
 34390   005A96                     u5750:
 34391   005A96                     l8480:
 34392                           
 34393                           ;../canargb_events.c: 112:         return PROCESSED;
 34394   005A96  0E01               	movlw	1
 34395   005A98  EFA9  F02D         	goto	l116
 34396   005A9C                     l115:
 34397                           
 34398                           ;../canargb_events.c: 115:     for(ev=0; ev<248; ev+=4) {
 34399   005A9C  6A24               	clrf	APP_processConsumedEvent@ev^(0+1280),c
 34400   005A9E                     l8488:
 34401                           
 34402                           ;../canargb_events.c: 116:         uint8_t action;;../canargb_events.c: 117:         uin
      +                          t8_t start_ledno;;../canargb_events.c: 118:         uint8_t end_ledno;;../canargb_events
      +                          .c: 119:         PaletteIndex colourPixelIndexPair;;../canargb_events.c: 121:         ac
      +                          tion = evs[ev];
 34403   005A9E  0E00               	movlw	low _evs
 34404   005AA0  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34405   005AA2  6ED9               	movwf	fsr2l,c
 34406   005AA4  6ADA               	clrf	fsr2h,c
 34407   005AA6  0E08               	movlw	high _evs
 34408   005AA8  22DA               	addwfc	fsr2h,f,c
 34409   005AAA  50DF               	movf	indf2,w,c
 34410   005AAC  6E20               	movwf	APP_processConsumedEvent@action^(0+1280),c
 34411                           
 34412                           ;../canargb_events.c: 122:         start_ledno = evs[ev+1];
 34413   005AAE  0E01               	movlw	low (_evs+1)
 34414   005AB0  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34415   005AB2  6ED9               	movwf	fsr2l,c
 34416   005AB4  6ADA               	clrf	fsr2h,c
 34417   005AB6  0E08               	movlw	high (_evs+1)
 34418   005AB8  22DA               	addwfc	fsr2h,f,c
 34419   005ABA  50DF               	movf	indf2,w,c
 34420   005ABC  6E21               	movwf	APP_processConsumedEvent@start_ledno^(0+1280),c
 34421                           
 34422                           ;../canargb_events.c: 123:         end_ledno = evs[ev+2];
 34423   005ABE  0E02               	movlw	low (_evs+2)
 34424   005AC0  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34425   005AC2  6ED9               	movwf	fsr2l,c
 34426   005AC4  6ADA               	clrf	fsr2h,c
 34427   005AC6  0E08               	movlw	high (_evs+2)
 34428   005AC8  22DA               	addwfc	fsr2h,f,c
 34429   005ACA  50DF               	movf	indf2,w,c
 34430   005ACC  6E22               	movwf	APP_processConsumedEvent@end_ledno^(0+1280),c
 34431                           
 34432                           ;../canargb_events.c: 124:         colourPixelIndexPair.asByte = evs[ev+3];
 34433   005ACE  0E03               	movlw	low (_evs+3)
 34434   005AD0  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34435   005AD2  6ED9               	movwf	fsr2l,c
 34436   005AD4  6ADA               	clrf	fsr2h,c
 34437   005AD6  0E08               	movlw	high (_evs+3)
 34438   005AD8  22DA               	addwfc	fsr2h,f,c
 34439   005ADA  50DF               	movf	indf2,w,c
 34440   005ADC  6E23               	movwf	APP_processConsumedEvent@colourPixelIndexPair^(0+1280),c
 34441   005ADE                     
 34442                           ;../canargb_events.c: 126:         if (onOff && (action & 0x01)) {
 34443   005ADE  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34444   005AE0  B4D8               	btfsc	status,2,c
 34445   005AE2  EF75  F02D         	goto	u5761
 34446   005AE6  EF77  F02D         	goto	u5760
 34447   005AEA                     u5761:
 34448   005AEA  EF85  F02D         	goto	l8496
 34449   005AEE                     u5760:
 34450   005AEE  A020               	btfss	APP_processConsumedEvent@action^(0+1280),0,c
 34451   005AF0  EF7C  F02D         	goto	u5771
 34452   005AF4  EF7E  F02D         	goto	u5770
 34453   005AF8                     u5771:
 34454   005AF8  EF85  F02D         	goto	l8496
 34455   005AFC                     u5770:
 34456   005AFC                     
 34457                           ;../canargb_events.c: 127:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34458   005AFC  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34459   005B00  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34460   005B04  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34461   005B06  EC6F  F03E         	call	_updateLedRange
 34462   005B0A                     l8496:
 34463                           
 34464                           ;../canargb_events.c: 129:         if (!onOff && (action & 0x02)) {
 34465   005B0A  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34466   005B0C  A4D8               	btfss	status,2,c
 34467   005B0E  EF8B  F02D         	goto	u5781
 34468   005B12  EF8D  F02D         	goto	u5780
 34469   005B16                     u5781:
 34470   005B16  EF9B  F02D         	goto	l8502
 34471   005B1A                     u5780:
 34472   005B1A  A220               	btfss	APP_processConsumedEvent@action^(0+1280),1,c
 34473   005B1C  EF92  F02D         	goto	u5791
 34474   005B20  EF94  F02D         	goto	u5790
 34475   005B24                     u5791:
 34476   005B24  EF9B  F02D         	goto	l8502
 34477   005B28                     u5790:
 34478   005B28                     
 34479                           ;../canargb_events.c: 130:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34480   005B28  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34481   005B2C  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34482   005B30  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34483   005B32  EC6F  F03E         	call	_updateLedRange
 34484   005B36                     l8502:
 34485                           
 34486                           ;../canargb_events.c: 132:     }
 34487   005B36  0E04               	movlw	4
 34488   005B38  2624               	addwf	APP_processConsumedEvent@ev^(0+1280),f,c
 34489   005B3A  0EF7               	movlw	247
 34490   005B3C  6424               	cpfsgt	APP_processConsumedEvent@ev^(0+1280),c
 34491   005B3E  EFA3  F02D         	goto	u5801
 34492   005B42  EFA5  F02D         	goto	u5800
 34493   005B46                     u5801:
 34494   005B46  EF4F  F02D         	goto	l8488
 34495   005B4A                     u5800:
 34496   005B4A                     
 34497                           ;../canargb_events.c: 133:     updateRGB();
 34498   005B4A  EC98  F041         	call	_updateRGB	;wreg free
 34499   005B4E  EF4B  F02D         	goto	l8480
 34500   005B52                     l116:
 34501   005B52  0012               	return		;funcret
 34502   005B54                     __end_of_APP_processConsumedEvent:
 34503                           	callstack 0
 34504                           
 34505 ;; *************** function _updateRGB *****************
 34506 ;; Defined at:
 34507 ;;		line 274 in file "../canargb_leds.c"
 34508 ;; Parameters:    Size  Location     Type
 34509 ;;		None
 34510 ;; Auto vars:     Size  Location     Type
 34511 ;;		None
 34512 ;; Return value:  Size  Location     Type
 34513 ;;                  1    wreg      void 
 34514 ;; Registers used:
 34515 ;;		wreg, status,2
 34516 ;; Tracked objects:
 34517 ;;		On entry : 0/0
 34518 ;;		On exit  : 0/0
 34519 ;;		Unchanged: 0/0
 34520 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34525 ;;Total ram usage:        0 bytes
 34526 ;; Hardware stack levels used: 1
 34527 ;; Hardware stack levels required when called: 1
 34528 ;; This function calls:
 34529 ;;		Nothing
 34530 ;; This function is called by:
 34531 ;;		_APP_processConsumedEvent
 34532 ;; This function uses a non-reentrant model
 34533 ;;
 34534                           
 34535                           	psect	text80
 34536   008330                     __ptext80:
 34537                           	callstack 0
 34538   008330                     _updateRGB:
 34539                           	callstack 122
 34540   008330                     
 34541                           ;../canargb_leds.c: 275:     refreshRequired = 1;
 34542   008330  0E01               	movlw	1
 34543   008332  0105               	movlb	5	; () banked
 34544   008334  6FAB               	movwf	_refreshRequired& (0+255),b
 34545   008336                     
 34546                           ; BSR set to: 5
 34547   008336  0012               	return		;funcret
 34548   008338                     __end_of_updateRGB:
 34549                           	callstack 0
 34550                           
 34551 ;; *************** function _getEVs *****************
 34552 ;; Defined at:
 34553 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 34554 ;; Parameters:    Size  Location     Type
 34555 ;;  tableIndex      1    wreg     unsigned char 
 34556 ;; Auto vars:     Size  Location     Type
 34557 ;;  tableIndex      1   25[COMRAM] unsigned char 
 34558 ;;  evIdx           1   26[COMRAM] unsigned char 
 34559 ;; Return value:  Size  Location     Type
 34560 ;;                  1    wreg      unsigned char 
 34561 ;; Registers used:
 34562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34563 ;; Tracked objects:
 34564 ;;		On entry : 0/0
 34565 ;;		On exit  : 0/0
 34566 ;;		Unchanged: 0/0
 34567 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34570 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34571 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34572 ;;Total ram usage:       15 bytes
 34573 ;; Hardware stack levels used: 1
 34574 ;; Hardware stack levels required when called: 3
 34575 ;; This function calls:
 34576 ;;		_readNVM
 34577 ;; This function is called by:
 34578 ;;		_APP_processConsumedEvent
 34579 ;; This function uses a non-reentrant model
 34580 ;;
 34581                           
 34582                           	psect	text81
 34583   006AA8                     __ptext81:
 34584                           	callstack 0
 34585   006AA8                     _getEVs:
 34586                           	callstack 120
 34587                           
 34588                           ; BSR set to: 5
 34589                           ;incstack = 0
 34590                           ;getEVs@tableIndex stored from wreg
 34591   006AA8  6E1A               	movwf	getEVs@tableIndex^(0+1280),c
 34592   006AAA                     
 34593                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 255) {
 34594   006AAA  281A               	incf	getEVs@tableIndex^(0+1280),w,c
 34595   006AAC  A4D8               	btfss	status,2,c
 34596   006AAE  EF5B  F035         	goto	u5401
 34597   006AB2  EF5D  F035         	goto	u5400
 34598   006AB6                     u5401:
 34599   006AB6  EF60  F035         	goto	l1139
 34600   006ABA                     u5400:
 34601   006ABA                     
 34602                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 34603   006ABA  0E08               	movlw	8
 34604   006ABC  EFA1  F035         	goto	l1140
 34605   006AC0                     l1139:
 34606                           
 34607                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 252; evIdx++) {
 34608   006AC0  6A1B               	clrf	getEVs@evIdx^(0+1280),c
 34609   006AC2                     l7994:
 34610                           
 34611                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evIdx);
 34612   006AC2  501B               	movf	getEVs@evIdx^(0+1280),w,c
 34613   006AC4  6E0D               	movwf	??_getEVs^(0+1280),c
 34614   006AC6  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 34615   006AC8  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 34616   006ACA  501A               	movf	getEVs@tableIndex^(0+1280),w,c
 34617   006ACC  6E10               	movwf	(??_getEVs+3)^(0+1280),c
 34618   006ACE  6A11               	clrf	(??_getEVs+4)^(0+1280),c
 34619   006AD0  0E01               	movlw	1
 34620   006AD2  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34621   006AD4  C4F3 F512          	movff	prodl,??_getEVs+5
 34622   006AD8  C4F4 F513          	movff	prodh,??_getEVs+6
 34623   006ADC  0211               	mulwf	(??_getEVs+4)^(0+1280),c
 34624   006ADE  50F3               	movf	prodl,w,c
 34625   006AE0  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34626   006AE2  0E01               	movlw	1
 34627   006AE4  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34628   006AE6  50F3               	movf	prodl,w,c
 34629   006AE8  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34630   006AEA  C512  F514         	movff	??_getEVs+5,??_getEVs+7
 34631   006AEE  C513  F515         	movff	??_getEVs+6,??_getEVs+8
 34632   006AF2  6A16               	clrf	(??_getEVs+9)^(0+1280),c
 34633   006AF4  500D               	movf	??_getEVs^(0+1280),w,c
 34634   006AF6  2414               	addwf	(??_getEVs+7)^(0+1280),w,c
 34635   006AF8  6E17               	movwf	(??_getEVs+10)^(0+1280),c
 34636   006AFA  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 34637   006AFC  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 34638   006AFE  6E18               	movwf	(??_getEVs+11)^(0+1280),c
 34639   006B00  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 34640   006B02  2016               	addwfc	(??_getEVs+9)^(0+1280),w,c
 34641   006B04  6E19               	movwf	(??_getEVs+12)^(0+1280),c
 34642   006B06  0E05               	movlw	5
 34643   006B08  2417               	addwf	(??_getEVs+10)^(0+1280),w,c
 34644   006B0A  6E07               	movwf	readNVM@index^(0+1280),c
 34645   006B0C  0E00               	movlw	0
 34646   006B0E  2018               	addwfc	(??_getEVs+11)^(0+1280),w,c
 34647   006B10  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 34648   006B12  0E01               	movlw	1
 34649   006B14  2019               	addwfc	(??_getEVs+12)^(0+1280),w,c
 34650   006B16  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 34651   006B18  0E01               	movlw	1
 34652   006B1A  EC8D  F03A         	call	_readNVM
 34653   006B1E  0E00               	movlw	low _evs
 34654   006B20  241B               	addwf	getEVs@evIdx^(0+1280),w,c
 34655   006B22  6ED9               	movwf	fsr2l,c
 34656   006B24  6ADA               	clrf	fsr2h,c
 34657   006B26  0E08               	movlw	high _evs
 34658   006B28  22DA               	addwfc	fsr2h,f,c
 34659   006B2A  C507  F4DF         	movff	?_readNVM,indf2
 34660   006B2E                     
 34661                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 34662   006B2E  2A1B               	incf	getEVs@evIdx^(0+1280),f,c
 34663   006B30  0EFB               	movlw	251
 34664   006B32  641B               	cpfsgt	getEVs@evIdx^(0+1280),c
 34665   006B34  EF9E  F035         	goto	u5411
 34666   006B38  EFA0  F035         	goto	u5410
 34667   006B3C                     u5411:
 34668   006B3C  EF61  F035         	goto	l7994
 34669   006B40                     u5410:
 34670   006B40                     
 34671                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 34672   006B40  0E00               	movlw	0
 34673   006B42                     l1140:
 34674   006B42  0012               	return		;funcret
 34675   006B44                     __end_of_getEVs:
 34676                           	callstack 0
 34677                           
 34678 ;; *************** function _canReceiveMessage *****************
 34679 ;; Defined at:
 34680 ;;		line 700 in file "../../VLCBlib_PIC/can18_can_2.c"
 34681 ;; Parameters:    Size  Location     Type
 34682 ;;  m               2   15[COMRAM] PTR struct Message
 34683 ;;		 -> poll@m(9), 
 34684 ;; Auto vars:     Size  Location     Type
 34685 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 34686 ;;		 -> RAM(16383), 
 34687 ;;  temp            2   21[COMRAM] unsigned short 
 34688 ;;  mp              2   19[COMRAM] PTR struct Message
 34689 ;;		 -> rxBuffers(72), NULL(0), 
 34690 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 34691 ;; Return value:  Size  Location     Type
 34692 ;;                  1    wreg      enum E23614
 34693 ;; Registers used:
 34694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34695 ;; Tracked objects:
 34696 ;;		On entry : 0/0
 34697 ;;		On exit  : 0/0
 34698 ;;		Unchanged: 0/0
 34699 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34701 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34703 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34704 ;;Total ram usage:       10 bytes
 34705 ;; Hardware stack levels used: 1
 34706 ;; Hardware stack levels required when called: 3
 34707 ;; This function calls:
 34708 ;;		_getNumRxBuffersInUse
 34709 ;;		_handleSelfEnumeration
 34710 ;;		_memcpy
 34711 ;;		_pop
 34712 ;; This function is called by:
 34713 ;;		_poll
 34714 ;; This function uses a non-reentrant model
 34715 ;;
 34716                           
 34717                           	psect	text82
 34718   00423E                     __ptext82:
 34719                           	callstack 0
 34720   00423E                     _canReceiveMessage:
 34721                           	callstack 122
 34722   00423E                     
 34723                           ;../../VLCBlib_PIC/can18_can_2.c: 701:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 702:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 703:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 705:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 709:     mp = pop(&rxQueue);
 34724   00423E  0EC7               	movlw	low _rxQueue
 34725   004240  6E01               	movwf	pop@q^(0+1280),c
 34726   004242  0E05               	movlw	high _rxQueue
 34727   004244  6E02               	movwf	(pop@q+1)^(0+1280),c
 34728   004246  EC56  F031         	call	_pop	;wreg free
 34729   00424A  C501  F514         	movff	?_pop,canReceiveMessage@mp
 34730   00424E  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 34731   004252                     
 34732                           ;../../VLCBlib_PIC/can18_can_2.c: 710:     if (mp != ((void*)0)) {
 34733   004252  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 34734   004254  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 34735   004256  B4D8               	btfsc	status,2,c
 34736   004258  EF30  F021         	goto	u6841
 34737   00425C  EF32  F021         	goto	u6840
 34738   004260                     u6841:
 34739   004260  EF43  F021         	goto	l684
 34740   004264                     u6840:
 34741   004264                     
 34742                           ;../../VLCBlib_PIC/can18_can_2.c: 711:         memcpy(m, mp, sizeof(Message));
 34743   004264  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 34744   004268  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 34745   00426C  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 34746   004270  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 34747   004274  0E00               	movlw	0
 34748   004276  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 34749   004278  0E09               	movlw	9
 34750   00427A  6E05               	movwf	memcpy@n^(0+1280),c
 34751   00427C  EC6C  F03D         	call	_memcpy	;wreg free
 34752   004280                     l9654:
 34753                           
 34754                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         return RECEIVED;
 34755   004280  0E01               	movlw	1
 34756   004282  EF19  F022         	goto	l685
 34757   004286                     l684:
 34758                           
 34759                           ;../../VLCBlib_PIC/can18_can_2.c: 714:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 34760   004286  0101               	movlb	1	; () banked
 34761   004288  B178               	btfsc	120,0,b	;volatile
 34762   00428A  EF49  F021         	goto	u6851
 34763   00428E  EF4B  F021         	goto	u6850
 34764   004292                     u6851:
 34765   004292  EF4E  F021         	goto	l9664
 34766   004296                     u6850:
 34767   004296                     l9660:
 34768                           
 34769                           ; BSR set to: 1
 34770                           ;../../VLCBlib_PIC/can18_can_2.c: 716:             return NOT_RECEIVED;
 34771   004296  0E00               	movlw	0
 34772   004298  EF19  F022         	goto	l685
 34773   00429C                     l9664:
 34774                           
 34775                           ; BSR set to: 1
 34776                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         temp = getNumRxBuffersInUse();
 34777   00429C  EC53  F03A         	call	_getNumRxBuffersInUse	;wreg free
 34778   0042A0  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 34779   0042A2  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 34780   0042A4  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 34781   0042A6  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 34782   0042A8                     
 34783                           ;../../VLCBlib_PIC/can18_can_2.c: 721:         if (temp > canDiagnostics[0x12].asUint) {
 34784   0042A8  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 34785   0042AA  0106               	movlb	6	; () banked
 34786   0042AC  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 34787   0042AE  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 34788   0042B0  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 34789   0042B2  B0D8               	btfsc	status,0,c
 34790   0042B4  EF5E  F021         	goto	u6861
 34791   0042B8  EF60  F021         	goto	u6860
 34792   0042BC                     u6861:
 34793   0042BC  EF64  F021         	goto	l9670
 34794   0042C0                     u6860:
 34795   0042C0                     
 34796                           ; BSR set to: 6
 34797                           ;../../VLCBlib_PIC/can18_can_2.c: 722:             canDiagnostics[0x12].asUint = temp;
 34798   0042C0  C516  F6B2         	movff	canReceiveMessage@temp,_canDiagnostics+36
 34799   0042C4  C517  F6B3         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 34800   0042C8                     l9670:
 34801                           
 34802                           ; BSR set to: 6
 34803                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 34804   0042C8  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 34805   0042CC  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 34806   0042D0                     
 34807                           ; BSR set to: 6
 34808                           ;../../VLCBlib_PIC/can18_can_2.c: 727:         incomingCanId = rxFifoObj[0] & 0x7F;
 34809   0042D0  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 34810   0042D4  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 34811   0042D8  50DF               	movf	indf2,w,c
 34812   0042DA  0B7F               	andlw	127
 34813   0042DC  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 34814   0042DE                     
 34815                           ; BSR set to: 6
 34816                           ;../../VLCBlib_PIC/can18_can_2.c: 728:         handleSelfEnumeration(incomingCanId);
 34817   0042DE  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 34818   0042E0  ECC6  F032         	call	_handleSelfEnumeration
 34819   0042E4                     
 34820                           ;../../VLCBlib_PIC/can18_can_2.c: 731:         canDiagnostics[0x09].asUint++;
 34821   0042E4  0106               	movlb	6	; () banked
 34822   0042E6  4BA0               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 34823   0042E8  2BA1               	incf	(_canDiagnostics+19)& (0+255),f,b
 34824   0042EA                     
 34825                           ; BSR set to: 6
 34826                           ;../../VLCBlib_PIC/can18_can_2.c: 734:         if (rxFifoObj[4] & 0x20) {
 34827   0042EA  EE20 F004          	lfsr	2,4
 34828   0042EE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34829   0042F0  26D9               	addwf	fsr2l,f,c
 34830   0042F2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34831   0042F4  22DA               	addwfc	fsr2h,f,c
 34832   0042F6  AADF               	btfss	indf2,5,c
 34833   0042F8  EF80  F021         	goto	u6871
 34834   0042FC  EF82  F021         	goto	u6870
 34835   004300                     u6871:
 34836   004300  EF88  F021         	goto	l9688
 34837   004304                     u6870:
 34838   004304                     
 34839                           ; BSR set to: 6
 34840                           ;../../VLCBlib_PIC/can18_can_2.c: 736:             C1FIFOCON1H |= (0x2 | 0x1);
 34841   004304  0E03               	movlw	3
 34842   004306  0101               	movlb	1	; () banked
 34843   004308  135D               	iorwf	93,f,b	;volatile
 34844   00430A                     
 34845                           ; BSR set to: 1
 34846                           ;../../VLCBlib_PIC/can18_can_2.c: 737:             C1FIFOCON3Hbits.UINC = 1;
 34847   00430A  8175               	bsf	117,0,b	;volatile
 34848   00430C  EF4B  F021         	goto	l9660
 34849   004310                     l9688:
 34850                           
 34851                           ; BSR set to: 6
 34852                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->len = (rxFifoObj[4] & 0x0F);
 34853   004310  EE20 F004          	lfsr	2,4
 34854   004314  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34855   004316  26D9               	addwf	fsr2l,f,c
 34856   004318  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34857   00431A  22DA               	addwfc	fsr2h,f,c
 34858   00431C  50DF               	movf	indf2,w,c
 34859   00431E  0B0F               	andlw	15
 34860   004320  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34861   004324  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34862   004328  6EDF               	movwf	indf2,c
 34863   00432A                     
 34864                           ; BSR set to: 6
 34865                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         if (m->len == 0) {
 34866   00432A  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34867   00432E  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34868   004332  50DF               	movf	indf2,w,c
 34869   004334  A4D8               	btfss	status,2,c
 34870   004336  EF9F  F021         	goto	u6881
 34871   00433A  EFA1  F021         	goto	u6880
 34872   00433E                     u6881:
 34873   00433E  EFA5  F021         	goto	l9698
 34874   004342                     u6880:
 34875   004342                     
 34876                           ; BSR set to: 6
 34877                           ;../../VLCBlib_PIC/can18_can_2.c: 743:             C1FIFOCON3Hbits.UINC = 1;
 34878   004342  0101               	movlb	1	; () banked
 34879   004344  8175               	bsf	117,0,b	;volatile
 34880   004346  EF4B  F021         	goto	l9660
 34881   00434A                     l9698:
 34882                           
 34883                           ; BSR set to: 6
 34884                           ;../../VLCBlib_PIC/can18_can_2.c: 746:         m->opc = rxFifoObj[8];
 34885   00434A  EE20 F008          	lfsr	2,8
 34886   00434E  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34887   004350  26D9               	addwf	fsr2l,f,c
 34888   004352  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34889   004354  22DA               	addwfc	fsr2h,f,c
 34890   004356  EE10 F001          	lfsr	1,1
 34891   00435A  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34892   00435C  26E1               	addwf	fsr1l,f,c
 34893   00435E  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34894   004360  22E2               	addwfc	fsr1h,f,c
 34895   004362  C4DF F4E7          	movff	indf2,indf1
 34896                           
 34897                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         m->bytes[0] = rxFifoObj[9];
 34898   004366  EE20 F009          	lfsr	2,9
 34899   00436A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34900   00436C  26D9               	addwf	fsr2l,f,c
 34901   00436E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34902   004370  22DA               	addwfc	fsr2h,f,c
 34903   004372  EE10 F002          	lfsr	1,2
 34904   004376  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34905   004378  26E1               	addwf	fsr1l,f,c
 34906   00437A  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34907   00437C  22E2               	addwfc	fsr1h,f,c
 34908   00437E  C4DF F4E7          	movff	indf2,indf1
 34909                           
 34910                           ;../../VLCBlib_PIC/can18_can_2.c: 748:         m->bytes[1] = rxFifoObj[10];
 34911   004382  EE20 F00A          	lfsr	2,10
 34912   004386  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34913   004388  26D9               	addwf	fsr2l,f,c
 34914   00438A  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34915   00438C  22DA               	addwfc	fsr2h,f,c
 34916   00438E  EE10 F003          	lfsr	1,3
 34917   004392  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34918   004394  26E1               	addwf	fsr1l,f,c
 34919   004396  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34920   004398  22E2               	addwfc	fsr1h,f,c
 34921   00439A  C4DF F4E7          	movff	indf2,indf1
 34922                           
 34923                           ;../../VLCBlib_PIC/can18_can_2.c: 749:         m->bytes[2] = rxFifoObj[11];
 34924   00439E  EE20 F00B          	lfsr	2,11
 34925   0043A2  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34926   0043A4  26D9               	addwf	fsr2l,f,c
 34927   0043A6  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34928   0043A8  22DA               	addwfc	fsr2h,f,c
 34929   0043AA  EE10 F004          	lfsr	1,4
 34930   0043AE  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34931   0043B0  26E1               	addwf	fsr1l,f,c
 34932   0043B2  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34933   0043B4  22E2               	addwfc	fsr1h,f,c
 34934   0043B6  C4DF F4E7          	movff	indf2,indf1
 34935                           
 34936                           ;../../VLCBlib_PIC/can18_can_2.c: 750:         m->bytes[3] = rxFifoObj[12];
 34937   0043BA  EE20 F00C          	lfsr	2,12
 34938   0043BE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34939   0043C0  26D9               	addwf	fsr2l,f,c
 34940   0043C2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34941   0043C4  22DA               	addwfc	fsr2h,f,c
 34942   0043C6  EE10 F005          	lfsr	1,5
 34943   0043CA  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34944   0043CC  26E1               	addwf	fsr1l,f,c
 34945   0043CE  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34946   0043D0  22E2               	addwfc	fsr1h,f,c
 34947   0043D2  C4DF F4E7          	movff	indf2,indf1
 34948                           
 34949                           ;../../VLCBlib_PIC/can18_can_2.c: 751:         m->bytes[4] = rxFifoObj[13];
 34950   0043D6  EE20 F00D          	lfsr	2,13
 34951   0043DA  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34952   0043DC  26D9               	addwf	fsr2l,f,c
 34953   0043DE  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34954   0043E0  22DA               	addwfc	fsr2h,f,c
 34955   0043E2  EE10 F006          	lfsr	1,6
 34956   0043E6  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34957   0043E8  26E1               	addwf	fsr1l,f,c
 34958   0043EA  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34959   0043EC  22E2               	addwfc	fsr1h,f,c
 34960   0043EE  C4DF F4E7          	movff	indf2,indf1
 34961                           
 34962                           ;../../VLCBlib_PIC/can18_can_2.c: 752:         m->bytes[5] = rxFifoObj[14];
 34963   0043F2  EE20 F00E          	lfsr	2,14
 34964   0043F6  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34965   0043F8  26D9               	addwf	fsr2l,f,c
 34966   0043FA  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34967   0043FC  22DA               	addwfc	fsr2h,f,c
 34968   0043FE  EE10 F007          	lfsr	1,7
 34969   004402  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34970   004404  26E1               	addwf	fsr1l,f,c
 34971   004406  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34972   004408  22E2               	addwfc	fsr1h,f,c
 34973   00440A  C4DF F4E7          	movff	indf2,indf1
 34974                           
 34975                           ;../../VLCBlib_PIC/can18_can_2.c: 753:         m->bytes[6] = rxFifoObj[15];
 34976   00440E  EE20 F00F          	lfsr	2,15
 34977   004412  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34978   004414  26D9               	addwf	fsr2l,f,c
 34979   004416  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34980   004418  22DA               	addwfc	fsr2h,f,c
 34981   00441A  EE10 F008          	lfsr	1,8
 34982   00441E  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34983   004420  26E1               	addwf	fsr1l,f,c
 34984   004422  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34985   004424  22E2               	addwfc	fsr1h,f,c
 34986   004426  C4DF F4E7          	movff	indf2,indf1
 34987   00442A                     
 34988                           ; BSR set to: 6
 34989                           ;../../VLCBlib_PIC/can18_can_2.c: 755:         C1FIFOCON3Hbits.UINC = 1;
 34990   00442A  0101               	movlb	1	; () banked
 34991   00442C  8175               	bsf	117,0,b	;volatile
 34992   00442E  EF40  F021         	goto	l9654
 34993   004432                     l685:
 34994   004432  0012               	return		;funcret
 34995   004434                     __end_of_canReceiveMessage:
 34996                           	callstack 0
 34997                           
 34998 ;; *************** function _pop *****************
 34999 ;; Defined at:
 35000 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 35001 ;; Parameters:    Size  Location     Type
 35002 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 35003 ;;		 -> rxQueue(5), 
 35004 ;; Auto vars:     Size  Location     Type
 35005 ;;  ret             2    7[COMRAM] PTR struct Message
 35006 ;;		 -> rxBuffers(72), 
 35007 ;; Return value:  Size  Location     Type
 35008 ;;                  2    0[COMRAM] PTR struct Message
 35009 ;; Registers used:
 35010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35011 ;; Tracked objects:
 35012 ;;		On entry : 0/0
 35013 ;;		On exit  : 0/0
 35014 ;;		Unchanged: 0/0
 35015 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35018 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35019 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35020 ;;Total ram usage:        9 bytes
 35021 ;; Hardware stack levels used: 1
 35022 ;; Hardware stack levels required when called: 1
 35023 ;; This function calls:
 35024 ;;		Nothing
 35025 ;; This function is called by:
 35026 ;;		_canReceiveMessage
 35027 ;; This function uses a non-reentrant model
 35028 ;;
 35029                           
 35030                           	psect	text83
 35031   0062AC                     __ptext83:
 35032                           	callstack 0
 35033   0062AC                     _pop:
 35034                           	callstack 123
 35035   0062AC                     
 35036                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 35037   0062AC  EE20 F002          	lfsr	2,2
 35038   0062B0  5001               	movf	pop@q^(0+1280),w,c
 35039   0062B2  26D9               	addwf	fsr2l,f,c
 35040   0062B4  5002               	movf	(pop@q+1)^(0+1280),w,c
 35041   0062B6  22DA               	addwfc	fsr2h,f,c
 35042   0062B8  EE10 F003          	lfsr	1,3
 35043   0062BC  5001               	movf	pop@q^(0+1280),w,c
 35044   0062BE  26E1               	addwf	fsr1l,f,c
 35045   0062C0  5002               	movf	(pop@q+1)^(0+1280),w,c
 35046   0062C2  22E2               	addwfc	fsr1h,f,c
 35047   0062C4  50DE               	movf	postinc2,w,c
 35048   0062C6  18E6               	xorwf	postinc1,w,c
 35049   0062C8  A4D8               	btfss	status,2,c
 35050   0062CA  EF69  F031         	goto	u5971
 35051   0062CE  EF6B  F031         	goto	u5970
 35052   0062D2                     u5971:
 35053   0062D2  EF71  F031         	goto	l8636
 35054   0062D6                     u5970:
 35055   0062D6                     
 35056                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 35057   0062D6  0E00               	movlw	0
 35058   0062D8  6E01               	movwf	?_pop^(0+1280),c
 35059   0062DA  0E00               	movlw	0
 35060   0062DC  6E02               	movwf	(?_pop+1)^(0+1280),c
 35061   0062DE  EFB4  F031         	goto	l1186
 35062   0062E2                     l8636:
 35063                           
 35064                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 35065   0062E2  EE20 F002          	lfsr	2,2
 35066   0062E6  5001               	movf	pop@q^(0+1280),w,c
 35067   0062E8  26D9               	addwf	fsr2l,f,c
 35068   0062EA  5002               	movf	(pop@q+1)^(0+1280),w,c
 35069   0062EC  22DA               	addwfc	fsr2h,f,c
 35070   0062EE  50DF               	movf	indf2,w,c
 35071   0062F0  6E03               	movwf	??_pop^(0+1280),c
 35072   0062F2  5003               	movf	??_pop^(0+1280),w,c
 35073   0062F4  0D09               	mullw	9
 35074   0062F6  C4F3 F504          	movff	prodl,??_pop+1
 35075   0062FA  C4F4 F505          	movff	prodh,??_pop+2
 35076   0062FE  C501  F4D9         	movff	pop@q,fsr2l
 35077   006302  C502  F4DA         	movff	pop@q+1,fsr2h
 35078   006306  C4DE F506          	movff	postinc2,??_pop+3
 35079   00630A  C4DD F507          	movff	postdec2,??_pop+4
 35080   00630E  5004               	movf	(??_pop+1)^(0+1280),w,c
 35081   006310  2406               	addwf	(??_pop+3)^(0+1280),w,c
 35082   006312  6E08               	movwf	pop@ret^(0+1280),c
 35083   006314  5005               	movf	(??_pop+2)^(0+1280),w,c
 35084   006316  2007               	addwfc	(??_pop+4)^(0+1280),w,c
 35085   006318  6E09               	movwf	(pop@ret+1)^(0+1280),c
 35086   00631A  EE20 F002          	lfsr	2,2
 35087   00631E  5001               	movf	pop@q^(0+1280),w,c
 35088   006320  26D9               	addwf	fsr2l,f,c
 35089   006322  5002               	movf	(pop@q+1)^(0+1280),w,c
 35090   006324  22DA               	addwfc	fsr2h,f,c
 35091   006326  2ADF               	incf	indf2,f,c
 35092   006328                     
 35093                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 35094   006328  EE20 F004          	lfsr	2,4
 35095   00632C  5001               	movf	pop@q^(0+1280),w,c
 35096   00632E  26D9               	addwf	fsr2l,f,c
 35097   006330  5002               	movf	(pop@q+1)^(0+1280),w,c
 35098   006332  22DA               	addwfc	fsr2h,f,c
 35099   006334  EE10 F002          	lfsr	1,2
 35100   006338  5001               	movf	pop@q^(0+1280),w,c
 35101   00633A  26E1               	addwf	fsr1l,f,c
 35102   00633C  5002               	movf	(pop@q+1)^(0+1280),w,c
 35103   00633E  22E2               	addwfc	fsr1h,f,c
 35104   006340  50DE               	movf	postinc2,w,c
 35105   006342  5CE6               	subwf	postinc1,w,c
 35106   006344  A0D8               	btfss	status,0,c
 35107   006346  EFA7  F031         	goto	u5981
 35108   00634A  EFA9  F031         	goto	u5980
 35109   00634E                     u5981:
 35110   00634E  EFB0  F031         	goto	l8644
 35111   006352                     u5980:
 35112   006352  EE20 F002          	lfsr	2,2
 35113   006356  5001               	movf	pop@q^(0+1280),w,c
 35114   006358  26D9               	addwf	fsr2l,f,c
 35115   00635A  5002               	movf	(pop@q+1)^(0+1280),w,c
 35116   00635C  22DA               	addwfc	fsr2h,f,c
 35117   00635E  6ADF               	clrf	indf2,c
 35118   006360                     l8644:
 35119                           
 35120                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 35121   006360  C508  F501         	movff	pop@ret,?_pop
 35122   006364  C509  F502         	movff	pop@ret+1,?_pop+1
 35123   006368                     l1186:
 35124   006368  0012               	return		;funcret
 35125   00636A                     __end_of_pop:
 35126                           	callstack 0
 35127                           
 35128 ;; *************** function _memcpy *****************
 35129 ;; Defined at:
 35130 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 35131 ;; Parameters:    Size  Location     Type
 35132 ;;  d1              2    0[COMRAM] PTR void 
 35133 ;;		 -> poll@m(9), 
 35134 ;;  s1              2    2[COMRAM] PTR const void 
 35135 ;;		 -> rxBuffers(72), NULL(0), 
 35136 ;;  n               2    4[COMRAM] unsigned int 
 35137 ;; Auto vars:     Size  Location     Type
 35138 ;;  s               2    8[COMRAM] PTR const unsigned char 
 35139 ;;		 -> rxBuffers(72), NULL(0), 
 35140 ;;  d               2    6[COMRAM] PTR unsigned char 
 35141 ;;		 -> poll@m(9), 
 35142 ;;  tmp             1   10[COMRAM] unsigned char 
 35143 ;; Return value:  Size  Location     Type
 35144 ;;                  2    0[COMRAM] PTR void 
 35145 ;; Registers used:
 35146 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35147 ;; Tracked objects:
 35148 ;;		On entry : 0/0
 35149 ;;		On exit  : 0/0
 35150 ;;		Unchanged: 0/0
 35151 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35152 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35153 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35155 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35156 ;;Total ram usage:       11 bytes
 35157 ;; Hardware stack levels used: 1
 35158 ;; Hardware stack levels required when called: 1
 35159 ;; This function calls:
 35160 ;;		Nothing
 35161 ;; This function is called by:
 35162 ;;		_canReceiveMessage
 35163 ;; This function uses a non-reentrant model
 35164 ;;
 35165                           
 35166                           	psect	text84
 35167   007AD8                     __ptext84:
 35168                           	callstack 0
 35169   007AD8                     _memcpy:
 35170                           	callstack 123
 35171   007AD8  C503  F509         	movff	memcpy@s1,memcpy@s
 35172   007ADC  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 35173   007AE0  C501  F507         	movff	memcpy@d1,memcpy@d
 35174   007AE4  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 35175   007AE8  EF86  F03D         	goto	l8658
 35176   007AEC                     l8650:
 35177   007AEC  C509  F4D9         	movff	memcpy@s,fsr2l
 35178   007AF0  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 35179   007AF4  50DF               	movf	indf2,w,c
 35180   007AF6  6E0B               	movwf	memcpy@tmp^(0+1280),c
 35181   007AF8  4A09               	infsnz	memcpy@s^(0+1280),f,c
 35182   007AFA  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 35183   007AFC  C507  F4D9         	movff	memcpy@d,fsr2l
 35184   007B00  C508  F4DA         	movff	memcpy@d+1,fsr2h
 35185   007B04  C50B  F4DF         	movff	memcpy@tmp,indf2
 35186   007B08  4A07               	infsnz	memcpy@d^(0+1280),f,c
 35187   007B0A  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 35188   007B0C                     l8658:
 35189   007B0C  0605               	decf	memcpy@n^(0+1280),f,c
 35190   007B0E  A0D8               	btfss	status,0,c
 35191   007B10  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 35192   007B12  2805               	incf	memcpy@n^(0+1280),w,c
 35193   007B14  E106               	bnz	u5991
 35194   007B16  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 35195   007B18  A4D8               	btfss	status,2,c
 35196   007B1A  EF91  F03D         	goto	u5991
 35197   007B1E  EF93  F03D         	goto	u5990
 35198   007B22                     u5991:
 35199   007B22  EF76  F03D         	goto	l8650
 35200   007B26                     u5990:
 35201   007B26  0012               	return		;funcret
 35202   007B28                     __end_of_memcpy:
 35203                           	callstack 0
 35204                           
 35205 ;; *************** function _handleSelfEnumeration *****************
 35206 ;; Defined at:
 35207 ;;		line 800 in file "../../VLCBlib_PIC/can18_can_2.c"
 35208 ;; Parameters:    Size  Location     Type
 35209 ;;  receivedCanI    1    wreg     unsigned char 
 35210 ;; Auto vars:     Size  Location     Type
 35211 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 35212 ;; Return value:  Size  Location     Type
 35213 ;;                  1    wreg      void 
 35214 ;; Registers used:
 35215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35216 ;; Tracked objects:
 35217 ;;		On entry : 0/0
 35218 ;;		On exit  : 0/0
 35219 ;;		Unchanged: 0/0
 35220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35224 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35225 ;;Total ram usage:        5 bytes
 35226 ;; Hardware stack levels used: 1
 35227 ;; Hardware stack levels required when called: 2
 35228 ;; This function calls:
 35229 ;;		_tickGet
 35230 ;; This function is called by:
 35231 ;;		_canReceiveMessage
 35232 ;; This function uses a non-reentrant model
 35233 ;;
 35234                           
 35235                           	psect	text85
 35236   00658C                     __ptext85:
 35237                           	callstack 0
 35238   00658C                     _handleSelfEnumeration:
 35239                           	callstack 122
 35240                           
 35241                           ;incstack = 0
 35242                           ;handleSelfEnumeration@receivedCanId stored from wreg
 35243   00658C  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 35244   00658E                     
 35245                           ;../../VLCBlib_PIC/can18_can_2.c: 802:     switch (enumerationState) {
 35246   00658E  EF00  F033         	goto	l8674
 35247   006592                     l8662:
 35248                           
 35249                           ; BSR set to: 5
 35250                           ;../../VLCBlib_PIC/can18_can_2.c: 805:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 35251   006592  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 35252   006596  0E07               	movlw	7
 35253   006598  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 35254   00659A  0E01               	movlw	1
 35255   00659C  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 35256   00659E  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 35257   0065A0  EFD4  F032         	goto	u6004
 35258   0065A4                     u6005:
 35259   0065A4  90D8               	bcf	status,0,c
 35260   0065A6  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 35261   0065A8                     u6004:
 35262   0065A8  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 35263   0065AA  EFD2  F032         	goto	u6005
 35264   0065AE  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35265   0065B0  46E8               	rlncf	wreg,f,c
 35266   0065B2  0B1F               	andlw	31
 35267   0065B4  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 35268   0065B6  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 35269   0065B8  0E32               	movlw	low _enumerationResults
 35270   0065BA  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 35271   0065BC  6ED9               	movwf	fsr2l,c
 35272   0065BE  0E06               	movlw	high _enumerationResults
 35273   0065C0  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 35274   0065C2  6EDA               	movwf	fsr2h,c
 35275   0065C4  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35276   0065C6  12DF               	iorwf	indf2,f,c
 35277                           
 35278                           ;../../VLCBlib_PIC/can18_can_2.c: 806:             break;
 35279   0065C8  EF1A  F033         	goto	l709
 35280   0065CC                     l8664:
 35281                           
 35282                           ; BSR set to: 5
 35283                           ;../../VLCBlib_PIC/can18_can_2.c: 808:             if (receivedCanId == canId) {
 35284   0065CC  51A8               	movf	_canId& (0+255),w,b
 35285   0065CE  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35286   0065D0  A4D8               	btfss	status,2,c
 35287   0065D2  EFED  F032         	goto	u6011
 35288   0065D6  EFEF  F032         	goto	u6010
 35289   0065DA                     u6011:
 35290   0065DA  EF1A  F033         	goto	l709
 35291   0065DE                     u6010:
 35292   0065DE                     
 35293                           ; BSR set to: 5
 35294                           ;../../VLCBlib_PIC/can18_can_2.c: 811:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 35295   0065DE  0E01               	movlw	1
 35296   0065E0  6FA5               	movwf	_enumerationState& (0+255),b
 35297   0065E2                     
 35298                           ; BSR set to: 5
 35299                           ;../../VLCBlib_PIC/can18_can_2.c: 813:                 canDiagnostics[0x0E].asUint++;
 35300   0065E2  0106               	movlb	6	; () banked
 35301   0065E4  4BAA               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 35302   0065E6  2BAB               	incf	(_canDiagnostics+29)& (0+255),f,b
 35303   0065E8                     
 35304                           ; BSR set to: 6
 35305                           ;../../VLCBlib_PIC/can18_can_2.c: 815:                 enumerationStartTime.val = tickGe
      +                          t();
 35306   0065E8  EC18  F03A         	call	_tickGet	;wreg free
 35307   0065EC  C501  F574         	movff	?_tickGet,_enumerationStartTime
 35308   0065F0  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 35309   0065F4  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 35310   0065F8  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 35311   0065FC  EF1A  F033         	goto	l709
 35312   006600                     l8674:
 35313   006600  0105               	movlb	5	; () banked
 35314   006602  51A5               	movf	_enumerationState& (0+255),w,b
 35315   006604  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 35316   006606  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 35317                           
 35318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35319                           ; Switch size 1, requested type "simple"
 35320                           ; Number of cases is 1, Range of values is 0 to 0
 35321                           ; switch strategies available:
 35322                           ; Name         Instructions Cycles
 35323                           ; simple_byte            4     3 (average)
 35324                           ;	Chosen strategy is simple_byte
 35325   006608  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35326   00660A  0A00               	xorlw	0	; case 0
 35327   00660C  B4D8               	btfsc	status,2,c
 35328   00660E  EF0B  F033         	goto	l11676
 35329   006612  EF1A  F033         	goto	l709
 35330   006616                     l11676:
 35331                           
 35332                           ; BSR set to: 5
 35333                           ; Switch size 1, requested type "simple"
 35334                           ; Number of cases is 3, Range of values is 0 to 3
 35335                           ; switch strategies available:
 35336                           ; Name         Instructions Cycles
 35337                           ; simple_byte           10     6 (average)
 35338                           ;	Chosen strategy is simple_byte
 35339   006616  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 35340   006618  0A00               	xorlw	0	; case 0
 35341   00661A  B4D8               	btfsc	status,2,c
 35342   00661C  EFE6  F032         	goto	l8664
 35343   006620  0A02               	xorlw	2	; case 2
 35344   006622  B4D8               	btfsc	status,2,c
 35345   006624  EFC9  F032         	goto	l8662
 35346   006628  0A01               	xorlw	1	; case 3
 35347   00662A  B4D8               	btfsc	status,2,c
 35348   00662C  EFC9  F032         	goto	l8662
 35349   006630  EF1A  F033         	goto	l709
 35350   006634                     l709:
 35351   006634  0012               	return		;funcret
 35352   006636                     __end_of_handleSelfEnumeration:
 35353                           	callstack 0
 35354                           
 35355 ;; *************** function _sendMessage5 *****************
 35356 ;; Defined at:
 35357 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 35358 ;; Parameters:    Size  Location     Type
 35359 ;;  opc             1    wreg     enum E22928
 35360 ;;  data1           1   37[COMRAM] unsigned char 
 35361 ;;  data2           1   38[COMRAM] unsigned char 
 35362 ;;  data3           1   39[COMRAM] unsigned char 
 35363 ;;  data4           1   40[COMRAM] unsigned char 
 35364 ;;  data5           1   41[COMRAM] unsigned char 
 35365 ;; Auto vars:     Size  Location     Type
 35366 ;;  opc             1   42[COMRAM] enum E22928
 35367 ;; Return value:  Size  Location     Type
 35368 ;;                  1    wreg      void 
 35369 ;; Registers used:
 35370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35371 ;; Tracked objects:
 35372 ;;		On entry : 0/0
 35373 ;;		On exit  : 0/0
 35374 ;;		Unchanged: 0/0
 35375 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35376 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35380 ;;Total ram usage:        6 bytes
 35381 ;; Hardware stack levels used: 1
 35382 ;; Hardware stack levels required when called: 5
 35383 ;; This function calls:
 35384 ;;		_sendMessage
 35385 ;; This function is called by:
 35386 ;;		_canProcessMessage
 35387 ;;		_teachProcessMessage
 35388 ;;		_teachCheckLen
 35389 ;;		_doNenrd
 35390 ;;		_doNnclr
 35391 ;;		_doEvlrn
 35392 ;;		_doReval
 35393 ;;		_doEvuln
 35394 ;;		_doReqev
 35395 ;;		_reqevCallback
 35396 ;;		_mnsProcessMessage
 35397 ;;		_mnsPoll
 35398 ;;		_mnsTRserviceDiscoveryCallback
 35399 ;;		_nvProcessMessage
 35400 ;;		_checkLen
 35401 ;; This function uses a non-reentrant model
 35402 ;;
 35403                           
 35404                           	psect	text86
 35405   008136                     __ptext86:
 35406                           	callstack 0
 35407   008136                     _sendMessage5:
 35408                           	callstack 118
 35409                           
 35410                           ;incstack = 0
 35411                           ;sendMessage5@opc stored from wreg
 35412   008136  6E2B               	movwf	sendMessage5@opc^(0+1280),c
 35413   008138                     
 35414                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 35415   008138  0E06               	movlw	6
 35416   00813A  6E1B               	movwf	sendMessage@len^(0+1280),c
 35417   00813C  C526  F51C         	movff	sendMessage5@data1,sendMessage@data1
 35418   008140  C527  F51D         	movff	sendMessage5@data2,sendMessage@data2
 35419   008144  C528  F51E         	movff	sendMessage5@data3,sendMessage@data3
 35420   008148  C529  F51F         	movff	sendMessage5@data4,sendMessage@data4
 35421   00814C  C52A  F520         	movff	sendMessage5@data5,sendMessage@data5
 35422   008150  0E00               	movlw	0
 35423   008152  6E21               	movwf	sendMessage@data6^(0+1280),c
 35424   008154  0E00               	movlw	0
 35425   008156  6E22               	movwf	sendMessage@data7^(0+1280),c
 35426   008158  502B               	movf	sendMessage5@opc^(0+1280),w,c
 35427   00815A  EC82  F036         	call	_sendMessage
 35428   00815E  0012               	return		;funcret
 35429   008160                     __end_of_sendMessage5:
 35430                           	callstack 0
 35431                           
 35432 ;; *************** function _sendMessage *****************
 35433 ;; Defined at:
 35434 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 35435 ;; Parameters:    Size  Location     Type
 35436 ;;  opc             1    wreg     enum E22928
 35437 ;;  len             1   26[COMRAM] unsigned char 
 35438 ;;  data1           1   27[COMRAM] unsigned char 
 35439 ;;  data2           1   28[COMRAM] unsigned char 
 35440 ;;  data3           1   29[COMRAM] unsigned char 
 35441 ;;  data4           1   30[COMRAM] unsigned char 
 35442 ;;  data5           1   31[COMRAM] unsigned char 
 35443 ;;  data6           1   32[COMRAM] unsigned char 
 35444 ;;  data7           1   33[COMRAM] unsigned char 
 35445 ;; Auto vars:     Size  Location     Type
 35446 ;;  opc             1   36[COMRAM] enum E22928
 35447 ;; Return value:  Size  Location     Type
 35448 ;;                  1    wreg      void 
 35449 ;; Registers used:
 35450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35451 ;; Tracked objects:
 35452 ;;		On entry : 0/0
 35453 ;;		On exit  : 0/0
 35454 ;;		Unchanged: 0/0
 35455 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35456 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35459 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35460 ;;Total ram usage:       11 bytes
 35461 ;; Hardware stack levels used: 1
 35462 ;; Hardware stack levels required when called: 4
 35463 ;; This function calls:
 35464 ;;		_canSendMessage
 35465 ;; This function is called by:
 35466 ;;		_sendMessage2
 35467 ;;		_sendMessage3
 35468 ;;		_sendMessage4
 35469 ;;		_sendMessage5
 35470 ;;		_sendMessage6
 35471 ;;		_sendMessage7
 35472 ;;		_sendMessage0
 35473 ;;		_sendMessage1
 35474 ;; This function uses a non-reentrant model
 35475 ;;
 35476                           
 35477                           	psect	text87
 35478   006D04                     __ptext87:
 35479                           	callstack 0
 35480   006D04                     _sendMessage:
 35481                           	callstack 118
 35482                           
 35483                           ;incstack = 0
 35484                           ;sendMessage@opc stored from wreg
 35485   006D04  6E25               	movwf	sendMessage@opc^(0+1280),c
 35486   006D06                     
 35487                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 35488   006D06  C525  F6B5         	movff	sendMessage@opc,_tmpMessage+1
 35489   006D0A                     
 35490                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 35491   006D0A  C51B  F6B4         	movff	sendMessage@len,_tmpMessage
 35492   006D0E                     
 35493                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 35494   006D0E  C51C  F6B6         	movff	sendMessage@data1,_tmpMessage+2
 35495   006D12                     
 35496                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 35497   006D12  C51D  F6B7         	movff	sendMessage@data2,_tmpMessage+3
 35498   006D16                     
 35499                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 35500   006D16  C51E  F6B8         	movff	sendMessage@data3,_tmpMessage+4
 35501   006D1A                     
 35502                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 35503   006D1A  C51F  F6B9         	movff	sendMessage@data4,_tmpMessage+5
 35504   006D1E                     
 35505                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 35506   006D1E  C520  F6BA         	movff	sendMessage@data5,_tmpMessage+6
 35507   006D22                     
 35508                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 35509   006D22  C521  F6BB         	movff	sendMessage@data6,_tmpMessage+7
 35510   006D26                     
 35511                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 35512   006D26  C522  F6BC         	movff	sendMessage@data7,_tmpMessage+8
 35513   006D2A                     
 35514                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 35515   006D2A  0105               	movlb	5	; () banked
 35516   006D2C  5191               	movf	_transport& (0+255),w,b
 35517   006D2E  1192               	iorwf	(_transport+1)& (0+255),w,b
 35518   006D30  B4D8               	btfsc	status,2,c
 35519   006D32  EF9D  F036         	goto	u5081
 35520   006D36  EF9F  F036         	goto	u5080
 35521   006D3A                     u5081:
 35522   006D3A  EFCA  F036         	goto	l2081
 35523   006D3E                     u5080:
 35524   006D3E                     
 35525                           ; BSR set to: 5
 35526                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 35527   006D3E  C591  F4F6         	movff	_transport,tblptrl
 35528   006D42  C592  F4F7         	movff	_transport+1,tblptrh
 35529   006D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35530   006D46  6AF8               	clrf	tblptru,c
 35531   006D48                     	endif
 35532   006D48                     	if	0	;tblptru may be non-zero
 35533   006D48                     	endif
 35534   006D48  0009               	tblrd		*+
 35535   006D4A  50F5               	movf	tablat,w,c
 35536   006D4C  0009               	tblrd		*+
 35537   006D4E  10F5               	iorwf	tablat,w,c
 35538   006D50  B4D8               	btfsc	status,2,c
 35539   006D52  EFAD  F036         	goto	u5091
 35540   006D56  EFAF  F036         	goto	u5090
 35541   006D5A                     u5091:
 35542   006D5A  EFCA  F036         	goto	l2081
 35543   006D5E                     u5090:
 35544   006D5E                     
 35545                           ; BSR set to: 5
 35546                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 35547   006D5E  0EB4               	movlw	low _tmpMessage
 35548   006D60  6E0D               	movwf	canSendMessage@mp^(0+1280),c
 35549   006D62  0E06               	movlw	high _tmpMessage
 35550   006D64  6E0E               	movwf	(canSendMessage@mp+1)^(0+1280),c
 35551   006D66  C591  F4F6         	movff	_transport,tblptrl
 35552   006D6A  C592  F4F7         	movff	_transport+1,tblptrh
 35553   006D6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35554   006D6E  6AF8               	clrf	tblptru,c
 35555   006D70                     	endif
 35556   006D70                     	if	0	;tblptru may be non-zero
 35557   006D70                     	endif
 35558   006D70  0009               	tblrd		*+
 35559   006D72  C4F5 F523          	movff	tablat,??_sendMessage
 35560   006D76  0009               	tblrd		*+
 35561   006D78  C4F5 F524          	movff	tablat,??_sendMessage+1
 35562   006D7C  D802               	call	u5108
 35563   006D7E  EFCA  F036         	goto	u5109
 35564   006D82                     u5108:
 35565   006D82  0005               	push	
 35566   006D84  6EFA               	movwf	pclath,c
 35567   006D86  5023               	movf	??_sendMessage^(0+1280),w,c
 35568   006D88  6EFD               	movwf	tosl,c
 35569   006D8A  5024               	movf	(??_sendMessage+1)^(0+1280),w,c
 35570   006D8C  6EFE               	movwf	tosh,c
 35571   006D8E  6AFF               	clrf	tosu,c
 35572   006D90  50FA               	movf	pclath,w,c
 35573   006D92  0012               	return		;indir
 35574   006D94                     u5109:
 35575   006D94                     l2081:
 35576   006D94  0012               	return		;funcret
 35577   006D96                     __end_of_sendMessage:
 35578                           	callstack 0
 35579                           
 35580 ;; *************** function _canSendMessage *****************
 35581 ;; Defined at:
 35582 ;;		line 570 in file "../../VLCBlib_PIC/can18_can_2.c"
 35583 ;; Parameters:    Size  Location     Type
 35584 ;;  mp              2   12[COMRAM] PTR struct Message
 35585 ;;		 -> tmpMessage(9), 
 35586 ;; Auto vars:     Size  Location     Type
 35587 ;;  txFifoObj       2   24[COMRAM] PTR unsigned char 
 35588 ;;		 -> RAM(16383), 
 35589 ;;  m               2   22[COMRAM] PTR struct Message
 35590 ;;		 -> rxBuffers(72), NULL(0), 
 35591 ;;  temp            2   20[COMRAM] unsigned short 
 35592 ;;  i               1    0        unsigned char 
 35593 ;; Return value:  Size  Location     Type
 35594 ;;                  1    wreg      enum E23618
 35595 ;; Registers used:
 35596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35597 ;; Tracked objects:
 35598 ;;		On entry : 0/0
 35599 ;;		On exit  : 0/0
 35600 ;;		Unchanged: 0/0
 35601 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35603 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35604 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35605 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35606 ;;Total ram usage:       14 bytes
 35607 ;; Hardware stack levels used: 1
 35608 ;; Hardware stack levels required when called: 3
 35609 ;; This function calls:
 35610 ;;		_getNextWriteMessage
 35611 ;;		_getNumRxBuffersInUse
 35612 ;;		_getNumTxBuffersInUse
 35613 ;;		_have
 35614 ;;		_isEvent
 35615 ;;		_startEnumeration
 35616 ;;		_updateModuleErrorStatus
 35617 ;; This function is called by:
 35618 ;;		_sendMessage
 35619 ;; This function uses a non-reentrant model
 35620 ;;
 35621                           
 35622                           	psect	text88
 35623   002A9E                     __ptext88:
 35624                           	callstack 0
 35625   002A9E                     _canSendMessage:
 35626                           	callstack 118
 35627   002A9E                     
 35628                           ;../../VLCBlib_PIC/can18_can_2.c: 571:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          72:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 574:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 577:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 581
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 35629   002A9E  EE20 F001          	lfsr	2,1
 35630   002AA2  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35631   002AA4  26D9               	addwf	fsr2l,f,c
 35632   002AA6  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35633   002AA8  22DA               	addwfc	fsr2h,f,c
 35634   002AAA  50DF               	movf	indf2,w,c
 35635   002AAC  EC08  F03F         	call	_isEvent
 35636   002AB0  0900               	iorlw	0
 35637   002AB2  B4D8               	btfsc	status,2,c
 35638   002AB4  EF5E  F015         	goto	u4851
 35639   002AB8  EF60  F015         	goto	u4850
 35640   002ABC                     u4851:
 35641   002ABC  EF15  F016         	goto	l661
 35642   002AC0                     u4850:
 35643   002AC0                     
 35644                           ;../../VLCBlib_PIC/can18_can_2.c: 582:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 35645   002AC0  0E08               	movlw	8
 35646   002AC2  EC58  F037         	call	_have
 35647   002AC6  0900               	iorlw	0
 35648   002AC8  B4D8               	btfsc	status,2,c
 35649   002ACA  EF69  F015         	goto	u4861
 35650   002ACE  EF6B  F015         	goto	u4860
 35651   002AD2                     u4861:
 35652   002AD2  EF15  F016         	goto	l661
 35653   002AD6                     u4860:
 35654   002AD6                     
 35655                           ;../../VLCBlib_PIC/can18_can_2.c: 584:             m = getNextWriteMessage(&rxQueue);
 35656   002AD6  0EC7               	movlw	low _rxQueue
 35657   002AD8  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 35658   002ADA  0E05               	movlw	high _rxQueue
 35659   002ADC  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 35660   002ADE  ECB3  F02C         	call	_getNextWriteMessage	;wreg free
 35661   002AE2  C501  F517         	movff	?_getNextWriteMessage,canSendMessage@m
 35662   002AE6  C502  F518         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 35663   002AEA                     
 35664                           ;../../VLCBlib_PIC/can18_can_2.c: 585:             if (m == ((void*)0)) {
 35665   002AEA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35666   002AEC  1018               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 35667   002AEE  A4D8               	btfss	status,2,c
 35668   002AF0  EF7C  F015         	goto	u4871
 35669   002AF4  EF7E  F015         	goto	u4870
 35670   002AF8                     u4871:
 35671   002AF8  EF85  F015         	goto	l7536
 35672   002AFC                     u4870:
 35673   002AFC                     
 35674                           ;../../VLCBlib_PIC/can18_can_2.c: 587:                 canDiagnostics[0x08].asUint++;
 35675   002AFC  0106               	movlb	6	; () banked
 35676   002AFE  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 35677   002B00  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 35678   002B02                     
 35679                           ; BSR set to: 6
 35680                           ;../../VLCBlib_PIC/can18_can_2.c: 588:                 updateModuleErrorStatus();
 35681   002B02  EC76  F041         	call	_updateModuleErrorStatus	;wreg free
 35682                           
 35683                           ;../../VLCBlib_PIC/can18_can_2.c: 590:             } else {
 35684   002B06  EFFF  F015         	goto	l7554
 35685   002B0A                     l7536:
 35686                           
 35687                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->opc = mp->opc;
 35688   002B0A  EE20 F001          	lfsr	2,1
 35689   002B0E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35690   002B10  26D9               	addwf	fsr2l,f,c
 35691   002B12  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35692   002B14  22DA               	addwfc	fsr2h,f,c
 35693   002B16  EE10 F001          	lfsr	1,1
 35694   002B1A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35695   002B1C  26E1               	addwf	fsr1l,f,c
 35696   002B1E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35697   002B20  22E2               	addwfc	fsr1h,f,c
 35698   002B22  C4DF F4E7          	movff	indf2,indf1
 35699   002B26                     
 35700                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->len = mp->len;
 35701   002B26  C50D  F4D9         	movff	canSendMessage@mp,fsr2l
 35702   002B2A  C50E  F4DA         	movff	canSendMessage@mp+1,fsr2h
 35703   002B2E  C517  F4E1         	movff	canSendMessage@m,fsr1l
 35704   002B32  C518  F4E2         	movff	canSendMessage@m+1,fsr1h
 35705   002B36  C4DF F4E7          	movff	indf2,indf1
 35706   002B3A                     
 35707                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[0] = mp->bytes[0];
 35708   002B3A  EE20 F002          	lfsr	2,2
 35709   002B3E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35710   002B40  26D9               	addwf	fsr2l,f,c
 35711   002B42  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35712   002B44  22DA               	addwfc	fsr2h,f,c
 35713   002B46  EE10 F002          	lfsr	1,2
 35714   002B4A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35715   002B4C  26E1               	addwf	fsr1l,f,c
 35716   002B4E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35717   002B50  22E2               	addwfc	fsr1h,f,c
 35718   002B52  C4DF F4E7          	movff	indf2,indf1
 35719   002B56                     
 35720                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[1] = mp->bytes[1];
 35721   002B56  EE20 F003          	lfsr	2,3
 35722   002B5A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35723   002B5C  26D9               	addwf	fsr2l,f,c
 35724   002B5E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35725   002B60  22DA               	addwfc	fsr2h,f,c
 35726   002B62  EE10 F003          	lfsr	1,3
 35727   002B66  5017               	movf	canSendMessage@m^(0+1280),w,c
 35728   002B68  26E1               	addwf	fsr1l,f,c
 35729   002B6A  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35730   002B6C  22E2               	addwfc	fsr1h,f,c
 35731   002B6E  C4DF F4E7          	movff	indf2,indf1
 35732   002B72                     
 35733                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[2] = mp->bytes[2];
 35734   002B72  EE20 F004          	lfsr	2,4
 35735   002B76  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35736   002B78  26D9               	addwf	fsr2l,f,c
 35737   002B7A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35738   002B7C  22DA               	addwfc	fsr2h,f,c
 35739   002B7E  EE10 F004          	lfsr	1,4
 35740   002B82  5017               	movf	canSendMessage@m^(0+1280),w,c
 35741   002B84  26E1               	addwf	fsr1l,f,c
 35742   002B86  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35743   002B88  22E2               	addwfc	fsr1h,f,c
 35744   002B8A  C4DF F4E7          	movff	indf2,indf1
 35745   002B8E                     
 35746                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[3] = mp->bytes[3];
 35747   002B8E  EE20 F005          	lfsr	2,5
 35748   002B92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35749   002B94  26D9               	addwf	fsr2l,f,c
 35750   002B96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35751   002B98  22DA               	addwfc	fsr2h,f,c
 35752   002B9A  EE10 F005          	lfsr	1,5
 35753   002B9E  5017               	movf	canSendMessage@m^(0+1280),w,c
 35754   002BA0  26E1               	addwf	fsr1l,f,c
 35755   002BA2  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35756   002BA4  22E2               	addwfc	fsr1h,f,c
 35757   002BA6  C4DF F4E7          	movff	indf2,indf1
 35758   002BAA                     
 35759                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[4] = mp->bytes[4];
 35760   002BAA  EE20 F006          	lfsr	2,6
 35761   002BAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35762   002BB0  26D9               	addwf	fsr2l,f,c
 35763   002BB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35764   002BB4  22DA               	addwfc	fsr2h,f,c
 35765   002BB6  EE10 F006          	lfsr	1,6
 35766   002BBA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35767   002BBC  26E1               	addwf	fsr1l,f,c
 35768   002BBE  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35769   002BC0  22E2               	addwfc	fsr1h,f,c
 35770   002BC2  C4DF F4E7          	movff	indf2,indf1
 35771   002BC6                     
 35772                           ;../../VLCBlib_PIC/can18_can_2.c: 599:                 m->bytes[5] = mp->bytes[5];
 35773   002BC6  EE20 F007          	lfsr	2,7
 35774   002BCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35775   002BCC  26D9               	addwf	fsr2l,f,c
 35776   002BCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35777   002BD0  22DA               	addwfc	fsr2h,f,c
 35778   002BD2  EE10 F007          	lfsr	1,7
 35779   002BD6  5017               	movf	canSendMessage@m^(0+1280),w,c
 35780   002BD8  26E1               	addwf	fsr1l,f,c
 35781   002BDA  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35782   002BDC  22E2               	addwfc	fsr1h,f,c
 35783   002BDE  C4DF F4E7          	movff	indf2,indf1
 35784   002BE2                     
 35785                           ;../../VLCBlib_PIC/can18_can_2.c: 600:                 m->bytes[6] = mp->bytes[6];
 35786   002BE2  EE20 F008          	lfsr	2,8
 35787   002BE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35788   002BE8  26D9               	addwf	fsr2l,f,c
 35789   002BEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35790   002BEC  22DA               	addwfc	fsr2h,f,c
 35791   002BEE  EE10 F008          	lfsr	1,8
 35792   002BF2  5017               	movf	canSendMessage@m^(0+1280),w,c
 35793   002BF4  26E1               	addwf	fsr1l,f,c
 35794   002BF6  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35795   002BF8  22E2               	addwfc	fsr1h,f,c
 35796   002BFA  C4DF F4E7          	movff	indf2,indf1
 35797   002BFE                     l7554:
 35798                           
 35799                           ;../../VLCBlib_PIC/can18_can_2.c: 603:             temp = getNumRxBuffersInUse();
 35800   002BFE  EC53  F03A         	call	_getNumRxBuffersInUse	;wreg free
 35801   002C02  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35802   002C04  500F               	movf	??_canSendMessage^(0+1280),w,c
 35803   002C06  6E15               	movwf	canSendMessage@temp^(0+1280),c
 35804   002C08  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 35805   002C0A                     
 35806                           ;../../VLCBlib_PIC/can18_can_2.c: 604:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 35807   002C0A  5015               	movf	canSendMessage@temp^(0+1280),w,c
 35808   002C0C  0106               	movlb	6	; () banked
 35809   002C0E  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 35810   002C10  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 35811   002C12  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 35812   002C14  B0D8               	btfsc	status,0,c
 35813   002C16  EF0F  F016         	goto	u4881
 35814   002C1A  EF11  F016         	goto	u4880
 35815   002C1E                     u4881:
 35816   002C1E  EF15  F016         	goto	l661
 35817   002C22                     u4880:
 35818   002C22                     
 35819                           ; BSR set to: 6
 35820                           ;../../VLCBlib_PIC/can18_can_2.c: 605:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 35821   002C22  C515  F6B2         	movff	canSendMessage@temp,_canDiagnostics+36
 35822   002C26  C516  F6B3         	movff	canSendMessage@temp+1,_canDiagnostics+37
 35823   002C2A                     l661:
 35824                           
 35825                           ;../../VLCBlib_PIC/can18_can_2.c: 612:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 35826   002C2A  0101               	movlb	1	; () banked
 35827   002C2C  B16C               	btfsc	108,0,b	;volatile
 35828   002C2E  EF1B  F016         	goto	u4891
 35829   002C32  EF1D  F016         	goto	u4890
 35830   002C36                     u4891:
 35831   002C36  EF24  F016         	goto	l666
 35832   002C3A                     u4890:
 35833   002C3A                     
 35834                           ; BSR set to: 1
 35835                           ;../../VLCBlib_PIC/can18_can_2.c: 614:         canDiagnostics[0x05].asUint++;
 35836   002C3A  0106               	movlb	6	; () banked
 35837   002C3C  4B98               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 35838   002C3E  2B99               	incf	(_canDiagnostics+11)& (0+255),f,b
 35839   002C40                     
 35840                           ; BSR set to: 6
 35841                           ;../../VLCBlib_PIC/can18_can_2.c: 615:         updateModuleErrorStatus();
 35842   002C40  EC76  F041         	call	_updateModuleErrorStatus	;wreg free
 35843   002C44  EF62  F017         	goto	l667
 35844   002C48                     l666:
 35845                           
 35846                           ; BSR set to: 1
 35847                           ;../../VLCBlib_PIC/can18_can_2.c: 623:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 35848   002C48  AD6C               	btfss	108,6,b	;volatile
 35849   002C4A  EF29  F016         	goto	u4901
 35850   002C4E  EF2B  F016         	goto	u4900
 35851   002C52                     u4901:
 35852   002C52  EF2E  F016         	goto	l7568
 35853   002C56                     u4900:
 35854   002C56                     
 35855                           ; BSR set to: 1
 35856                           ;../../VLCBlib_PIC/can18_can_2.c: 624:         canDiagnostics[0x0C].asUint++;
 35857   002C56  0106               	movlb	6	; () banked
 35858   002C58  4BA6               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 35859   002C5A  2BA7               	incf	(_canDiagnostics+25)& (0+255),f,b
 35860   002C5C                     l7568:
 35861                           
 35862                           ;../../VLCBlib_PIC/can18_can_2.c: 629:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 35863   002C5C  0105               	movlb	5	; () banked
 35864   002C5E  51A8               	movf	_canId& (0+255),w,b
 35865   002C60  A4D8               	btfss	status,2,c
 35866   002C62  EF35  F016         	goto	u4911
 35867   002C66  EF37  F016         	goto	u4910
 35868   002C6A                     u4911:
 35869   002C6A  EF43  F016         	goto	l7574
 35870   002C6E                     u4910:
 35871   002C6E                     
 35872                           ; BSR set to: 5
 35873   002C6E  51A5               	movf	_enumerationState& (0+255),w,b
 35874   002C70  A4D8               	btfss	status,2,c
 35875   002C72  EF3D  F016         	goto	u4921
 35876   002C76  EF3F  F016         	goto	u4920
 35877   002C7A                     u4921:
 35878   002C7A  EF43  F016         	goto	l7574
 35879   002C7E                     u4920:
 35880   002C7E                     
 35881                           ; BSR set to: 5
 35882                           ;../../VLCBlib_PIC/can18_can_2.c: 630:         enumerationState = ENUMERATION_REQUIRED;
 35883   002C7E  0E01               	movlw	1
 35884   002C80  6FA5               	movwf	_enumerationState& (0+255),b
 35885                           
 35886                           ;../../VLCBlib_PIC/can18_can_2.c: 631:         canId = 1;
 35887   002C82  0E01               	movlw	1
 35888   002C84  6FA8               	movwf	_canId& (0+255),b
 35889   002C86                     l7574:
 35890                           
 35891                           ; BSR set to: 5
 35892                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj = (uint8_t*) C1FIFOUA2;
 35893   002C86  C170 F519          	movff	368,canSendMessage@txFifoObj	;volatile
 35894   002C8A  C171 F51A          	movff	369,canSendMessage@txFifoObj+1	;volatile
 35895   002C8E                     
 35896                           ; BSR set to: 5
 35897                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 35898   002C8E  C5A8  F50F         	movff	_canId,??_canSendMessage
 35899   002C92  0E7F               	movlw	127
 35900   002C94  160F               	andwf	??_canSendMessage^(0+1280),f,c
 35901   002C96  EE20 F001          	lfsr	2,1
 35902   002C9A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35903   002C9C  26D9               	addwf	fsr2l,f,c
 35904   002C9E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35905   002CA0  22DA               	addwfc	fsr2h,f,c
 35906   002CA2  50DF               	movf	indf2,w,c
 35907   002CA4  6E10               	movwf	(??_canSendMessage+1)^(0+1280),c
 35908   002CA6  6A11               	clrf	(??_canSendMessage+2)^(0+1280),c
 35909   002CA8  0E59               	movlw	low _priorities
 35910   002CAA  2410               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 35911   002CAC  6EF6               	movwf	tblptrl,c
 35912   002CAE  0EFE               	movlw	high _priorities
 35913   002CB0  2011               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 35914   002CB2  6EF7               	movwf	tblptrh,c
 35915   002CB4                     	if	1	;There are 3 active tblptr bytes
 35916   002CB4  6AF8               	clrf	tblptru,c
 35917   002CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 35918   002CB8  22F8               	addwfc	tblptru,f,c
 35919   002CBA                     	endif
 35920   002CBA  0008               	tblrd		*
 35921   002CBC  50F5               	movf	tablat,w,c
 35922   002CBE  6E12               	movwf	(??_canSendMessage+3)^(0+1280),c
 35923   002CC0  6A13               	clrf	(??_canSendMessage+4)^(0+1280),c
 35924   002CC2  0EA0               	movlw	low _canPri
 35925   002CC4  2412               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 35926   002CC6  6EF6               	movwf	tblptrl,c
 35927   002CC8  0EFF               	movlw	high _canPri
 35928   002CCA  2013               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 35929   002CCC  6EF7               	movwf	tblptrh,c
 35930   002CCE                     	if	1	;There are 3 active tblptr bytes
 35931   002CCE  6AF8               	clrf	tblptru,c
 35932   002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 35933   002CD2  22F8               	addwfc	tblptru,f,c
 35934   002CD4                     	endif
 35935   002CD4  0008               	tblrd		*
 35936   002CD6  C4F5 F514          	movff	tablat,??_canSendMessage+5
 35937   002CDA  0E01               	movlw	1
 35938   002CDC  1614               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 35939   002CDE  0E00               	movlw	0
 35940   002CE0  B014               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 35941   002CE2  0E80               	movlw	128
 35942   002CE4  6E14               	movwf	(??_canSendMessage+5)^(0+1280),c
 35943   002CE6  5014               	movf	(??_canSendMessage+5)^(0+1280),w,c
 35944   002CE8  100F               	iorwf	??_canSendMessage^(0+1280),w,c
 35945   002CEA  C519  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 35946   002CEE  C51A  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 35947   002CF2  6EDF               	movwf	indf2,c
 35948   002CF4                     
 35949                           ; BSR set to: 5
 35950                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 35951   002CF4  EE20 F001          	lfsr	2,1
 35952   002CF8  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35953   002CFA  26D9               	addwf	fsr2l,f,c
 35954   002CFC  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35955   002CFE  22DA               	addwfc	fsr2h,f,c
 35956   002D00  EE10 F001          	lfsr	1,1
 35957   002D04  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35958   002D06  26E1               	addwf	fsr1l,f,c
 35959   002D08  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35960   002D0A  22E2               	addwfc	fsr1h,f,c
 35961   002D0C  50E7               	movf	indf1,w,c
 35962   002D0E  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35963   002D10  6A10               	clrf	(??_canSendMessage+1)^(0+1280),c
 35964   002D12  0E59               	movlw	low _priorities
 35965   002D14  240F               	addwf	??_canSendMessage^(0+1280),w,c
 35966   002D16  6EF6               	movwf	tblptrl,c
 35967   002D18  0EFE               	movlw	high _priorities
 35968   002D1A  2010               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 35969   002D1C  6EF7               	movwf	tblptrh,c
 35970   002D1E                     	if	1	;There are 3 active tblptr bytes
 35971   002D1E  6AF8               	clrf	tblptru,c
 35972   002D20  0E00               	movlw	low (__mediumconst shr (0+16))
 35973   002D22  22F8               	addwfc	tblptru,f,c
 35974   002D24                     	endif
 35975   002D24  0008               	tblrd		*
 35976   002D26  50F5               	movf	tablat,w,c
 35977   002D28  6E11               	movwf	(??_canSendMessage+2)^(0+1280),c
 35978   002D2A  6A12               	clrf	(??_canSendMessage+3)^(0+1280),c
 35979   002D2C  0EA0               	movlw	low _canPri
 35980   002D2E  2411               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 35981   002D30  6EF6               	movwf	tblptrl,c
 35982   002D32  0EFF               	movlw	high _canPri
 35983   002D34  2012               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 35984   002D36  6EF7               	movwf	tblptrh,c
 35985   002D38                     	if	1	;There are 3 active tblptr bytes
 35986   002D38  6AF8               	clrf	tblptru,c
 35987   002D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 35988   002D3C  22F8               	addwfc	tblptru,f,c
 35989   002D3E                     	endif
 35990   002D3E  0008               	tblrd		*
 35991   002D40  C4F5 F513          	movff	tablat,??_canSendMessage+4
 35992   002D44  90D8               	bcf	status,0,c
 35993   002D46  3013               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 35994   002D48  6EDF               	movwf	indf2,c
 35995   002D4A                     
 35996                           ; BSR set to: 5
 35997                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[4] = (mp->len&0xF);
 35998   002D4A  EE20 F004          	lfsr	2,4
 35999   002D4E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36000   002D50  26D9               	addwf	fsr2l,f,c
 36001   002D52  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36002   002D54  22DA               	addwfc	fsr2h,f,c
 36003   002D56  C50D  F4E1         	movff	canSendMessage@mp,fsr1l
 36004   002D5A  C50E  F4E2         	movff	canSendMessage@mp+1,fsr1h
 36005   002D5E  50E7               	movf	indf1,w,c
 36006   002D60  0B0F               	andlw	15
 36007   002D62  6EDF               	movwf	indf2,c
 36008   002D64                     
 36009                           ; BSR set to: 5
 36010                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[5] = 0;
 36011   002D64  EE20 F005          	lfsr	2,5
 36012   002D68  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36013   002D6A  26D9               	addwf	fsr2l,f,c
 36014   002D6C  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36015   002D6E  22DA               	addwfc	fsr2h,f,c
 36016   002D70  6ADF               	clrf	indf2,c
 36017   002D72                     
 36018                           ; BSR set to: 5
 36019                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[6] = 0;
 36020   002D72  EE20 F006          	lfsr	2,6
 36021   002D76  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36022   002D78  26D9               	addwf	fsr2l,f,c
 36023   002D7A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36024   002D7C  22DA               	addwfc	fsr2h,f,c
 36025   002D7E  6ADF               	clrf	indf2,c
 36026   002D80                     
 36027                           ; BSR set to: 5
 36028                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[7] = 0;
 36029   002D80  EE20 F007          	lfsr	2,7
 36030   002D84  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36031   002D86  26D9               	addwf	fsr2l,f,c
 36032   002D88  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36033   002D8A  22DA               	addwfc	fsr2h,f,c
 36034   002D8C  6ADF               	clrf	indf2,c
 36035   002D8E                     
 36036                           ; BSR set to: 5
 36037                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[8] = (uint8_t)(mp->opc);
 36038   002D8E  EE20 F001          	lfsr	2,1
 36039   002D92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36040   002D94  26D9               	addwf	fsr2l,f,c
 36041   002D96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36042   002D98  22DA               	addwfc	fsr2h,f,c
 36043   002D9A  EE10 F008          	lfsr	1,8
 36044   002D9E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36045   002DA0  26E1               	addwf	fsr1l,f,c
 36046   002DA2  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36047   002DA4  22E2               	addwfc	fsr1h,f,c
 36048   002DA6  C4DF F4E7          	movff	indf2,indf1
 36049   002DAA                     
 36050                           ; BSR set to: 5
 36051                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[9] = mp->bytes[0];
 36052   002DAA  EE20 F002          	lfsr	2,2
 36053   002DAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36054   002DB0  26D9               	addwf	fsr2l,f,c
 36055   002DB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36056   002DB4  22DA               	addwfc	fsr2h,f,c
 36057   002DB6  EE10 F009          	lfsr	1,9
 36058   002DBA  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36059   002DBC  26E1               	addwf	fsr1l,f,c
 36060   002DBE  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36061   002DC0  22E2               	addwfc	fsr1h,f,c
 36062   002DC2  C4DF F4E7          	movff	indf2,indf1
 36063   002DC6                     
 36064                           ; BSR set to: 5
 36065                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[10] = mp->bytes[1];
 36066   002DC6  EE20 F003          	lfsr	2,3
 36067   002DCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36068   002DCC  26D9               	addwf	fsr2l,f,c
 36069   002DCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36070   002DD0  22DA               	addwfc	fsr2h,f,c
 36071   002DD2  EE10 F00A          	lfsr	1,10
 36072   002DD6  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36073   002DD8  26E1               	addwf	fsr1l,f,c
 36074   002DDA  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36075   002DDC  22E2               	addwfc	fsr1h,f,c
 36076   002DDE  C4DF F4E7          	movff	indf2,indf1
 36077   002DE2                     
 36078                           ; BSR set to: 5
 36079                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[11] = mp->bytes[2];
 36080   002DE2  EE20 F004          	lfsr	2,4
 36081   002DE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36082   002DE8  26D9               	addwf	fsr2l,f,c
 36083   002DEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36084   002DEC  22DA               	addwfc	fsr2h,f,c
 36085   002DEE  EE10 F00B          	lfsr	1,11
 36086   002DF2  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36087   002DF4  26E1               	addwf	fsr1l,f,c
 36088   002DF6  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36089   002DF8  22E2               	addwfc	fsr1h,f,c
 36090   002DFA  C4DF F4E7          	movff	indf2,indf1
 36091   002DFE                     
 36092                           ; BSR set to: 5
 36093                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[12] = mp->bytes[3];
 36094   002DFE  EE20 F005          	lfsr	2,5
 36095   002E02  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36096   002E04  26D9               	addwf	fsr2l,f,c
 36097   002E06  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36098   002E08  22DA               	addwfc	fsr2h,f,c
 36099   002E0A  EE10 F00C          	lfsr	1,12
 36100   002E0E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36101   002E10  26E1               	addwf	fsr1l,f,c
 36102   002E12  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36103   002E14  22E2               	addwfc	fsr1h,f,c
 36104   002E16  C4DF F4E7          	movff	indf2,indf1
 36105   002E1A                     
 36106                           ; BSR set to: 5
 36107                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[13] = mp->bytes[4];
 36108   002E1A  EE20 F006          	lfsr	2,6
 36109   002E1E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36110   002E20  26D9               	addwf	fsr2l,f,c
 36111   002E22  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36112   002E24  22DA               	addwfc	fsr2h,f,c
 36113   002E26  EE10 F00D          	lfsr	1,13
 36114   002E2A  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36115   002E2C  26E1               	addwf	fsr1l,f,c
 36116   002E2E  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36117   002E30  22E2               	addwfc	fsr1h,f,c
 36118   002E32  C4DF F4E7          	movff	indf2,indf1
 36119   002E36                     
 36120                           ; BSR set to: 5
 36121                           ;../../VLCBlib_PIC/can18_can_2.c: 648:     txFifoObj[14] = mp->bytes[5];
 36122   002E36  EE20 F007          	lfsr	2,7
 36123   002E3A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36124   002E3C  26D9               	addwf	fsr2l,f,c
 36125   002E3E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36126   002E40  22DA               	addwfc	fsr2h,f,c
 36127   002E42  EE10 F00E          	lfsr	1,14
 36128   002E46  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36129   002E48  26E1               	addwf	fsr1l,f,c
 36130   002E4A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36131   002E4C  22E2               	addwfc	fsr1h,f,c
 36132   002E4E  C4DF F4E7          	movff	indf2,indf1
 36133   002E52                     
 36134                           ; BSR set to: 5
 36135                           ;../../VLCBlib_PIC/can18_can_2.c: 649:     txFifoObj[15] = mp->bytes[6];
 36136   002E52  EE20 F008          	lfsr	2,8
 36137   002E56  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36138   002E58  26D9               	addwf	fsr2l,f,c
 36139   002E5A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36140   002E5C  22DA               	addwfc	fsr2h,f,c
 36141   002E5E  EE10 F00F          	lfsr	1,15
 36142   002E62  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36143   002E64  26E1               	addwf	fsr1l,f,c
 36144   002E66  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36145   002E68  22E2               	addwfc	fsr1h,f,c
 36146   002E6A  C4DF F4E7          	movff	indf2,indf1
 36147   002E6E                     
 36148                           ; BSR set to: 5
 36149                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     canDiagnostics[0x06].asUint++;
 36150   002E6E  0106               	movlb	6	; () banked
 36151   002E70  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 36152   002E72  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 36153   002E74                     
 36154                           ; BSR set to: 6
 36155                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     C1FIFOCON2H |= 0x1;
 36156   002E74  0101               	movlb	1	; () banked
 36157   002E76  8169               	bsf	105,0,b	;volatile
 36158   002E78                     
 36159                           ; BSR set to: 1
 36160                           ;../../VLCBlib_PIC/can18_can_2.c: 656:     temp = getNumTxBuffersInUse();
 36161   002E78  EC27  F039         	call	_getNumTxBuffersInUse	;wreg free
 36162   002E7C  6E0F               	movwf	??_canSendMessage^(0+1280),c
 36163   002E7E  500F               	movf	??_canSendMessage^(0+1280),w,c
 36164   002E80  6E15               	movwf	canSendMessage@temp^(0+1280),c
 36165   002E82  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 36166   002E84                     
 36167                           ;../../VLCBlib_PIC/can18_can_2.c: 657:     if (temp > canDiagnostics[0x11].asUint) {
 36168   002E84  5015               	movf	canSendMessage@temp^(0+1280),w,c
 36169   002E86  0106               	movlb	6	; () banked
 36170   002E88  5DB0               	subwf	(_canDiagnostics+34)& (0+255),w,b
 36171   002E8A  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 36172   002E8C  59B1               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 36173   002E8E  B0D8               	btfsc	status,0,c
 36174   002E90  EF4C  F017         	goto	u4931
 36175   002E94  EF4E  F017         	goto	u4930
 36176   002E98                     u4931:
 36177   002E98  EF52  F017         	goto	l7614
 36178   002E9C                     u4930:
 36179   002E9C                     
 36180                           ; BSR set to: 6
 36181                           ;../../VLCBlib_PIC/can18_can_2.c: 658:         canDiagnostics[0x11].asUint = temp;
 36182   002E9C  C515  F6B0         	movff	canSendMessage@temp,_canDiagnostics+34
 36183   002EA0  C516  F6B1         	movff	canSendMessage@temp+1,_canDiagnostics+35
 36184   002EA4                     l7614:
 36185                           
 36186                           ; BSR set to: 6
 36187                           ;../../VLCBlib_PIC/can18_can_2.c: 661:     if (canId == 0) {
 36188   002EA4  0105               	movlb	5	; () banked
 36189   002EA6  51A8               	movf	_canId& (0+255),w,b
 36190   002EA8  A4D8               	btfss	status,2,c
 36191   002EAA  EF59  F017         	goto	u4941
 36192   002EAE  EF5B  F017         	goto	u4940
 36193   002EB2                     u4941:
 36194   002EB2  EF60  F017         	goto	l7618
 36195   002EB6                     u4940:
 36196   002EB6                     
 36197                           ; BSR set to: 5
 36198                           ;../../VLCBlib_PIC/can18_can_2.c: 663:         startEnumeration(1);
 36199   002EB6  0E01               	movlw	1
 36200   002EB8  ECFE  F03A         	call	_startEnumeration
 36201                           
 36202                           ;../../VLCBlib_PIC/can18_can_2.c: 664:     } else {
 36203   002EBC  EF62  F017         	goto	l667
 36204   002EC0                     l7618:
 36205                           
 36206                           ; BSR set to: 5
 36207                           ;../../VLCBlib_PIC/can18_can_2.c: 666:         C1FIFOCON2H |= 0x2;
 36208   002EC0  0101               	movlb	1	; () banked
 36209   002EC2  8369               	bsf	105,1,b	;volatile
 36210   002EC4                     l667:
 36211   002EC4  0012               	return		;funcret
 36212   002EC6                     __end_of_canSendMessage:
 36213                           	callstack 0
 36214                           
 36215 ;; *************** function _isEvent *****************
 36216 ;; Defined at:
 36217 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 36218 ;; Parameters:    Size  Location     Type
 36219 ;;  opc             1    wreg     unsigned char 
 36220 ;; Auto vars:     Size  Location     Type
 36221 ;;  opc             1    1[COMRAM] unsigned char 
 36222 ;; Return value:  Size  Location     Type
 36223 ;;                  1    wreg      enum E23474
 36224 ;; Registers used:
 36225 ;;		wreg, status,2, status,0
 36226 ;; Tracked objects:
 36227 ;;		On entry : 0/0
 36228 ;;		On exit  : 0/0
 36229 ;;		Unchanged: 0/0
 36230 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36235 ;;Total ram usage:        2 bytes
 36236 ;; Hardware stack levels used: 1
 36237 ;; Hardware stack levels required when called: 1
 36238 ;; This function calls:
 36239 ;;		Nothing
 36240 ;; This function is called by:
 36241 ;;		_canSendMessage
 36242 ;; This function uses a non-reentrant model
 36243 ;;
 36244                           
 36245                           	psect	text89
 36246   007E10                     __ptext89:
 36247                           	callstack 0
 36248   007E10                     _isEvent:
 36249                           	callstack 119
 36250                           
 36251                           ;incstack = 0
 36252                           ;isEvent@opc stored from wreg
 36253   007E10  6E02               	movwf	isEvent@opc^(0+1280),c
 36254   007E12                     
 36255                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 36256   007E12  6A01               	clrf	_isEvent$5795^(0+1280),c
 36257   007E14  5002               	movf	isEvent@opc^(0+1280),w,c
 36258   007E16  0B90               	andlw	144
 36259   007E18  0A90               	xorlw	144
 36260   007E1A  A4D8               	btfss	status,2,c
 36261   007E1C  EF12  F03F         	goto	u4671
 36262   007E20  EF14  F03F         	goto	u4670
 36263   007E24                     u4671:
 36264   007E24  EF21  F03F         	goto	l2051
 36265   007E28                     u4670:
 36266   007E28  5002               	movf	isEvent@opc^(0+1280),w,c
 36267   007E2A  0AFF               	xorlw	255
 36268   007E2C  0B06               	andlw	6
 36269   007E2E  0A06               	xorlw	6
 36270   007E30  A4D8               	btfss	status,2,c
 36271   007E32  EF1D  F03F         	goto	u4681
 36272   007E36  EF1F  F03F         	goto	u4680
 36273   007E3A                     u4681:
 36274   007E3A  EF21  F03F         	goto	l2051
 36275   007E3E                     u4680:
 36276   007E3E  0E01               	movlw	1
 36277   007E40  6E01               	movwf	_isEvent$5795^(0+1280),c
 36278   007E42                     l2051:
 36279   007E42  5001               	movf	_isEvent$5795^(0+1280),w,c
 36280   007E44  0012               	return		;funcret
 36281   007E46                     __end_of_isEvent:
 36282                           	callstack 0
 36283                           
 36284 ;; *************** function _have *****************
 36285 ;; Defined at:
 36286 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 36287 ;; Parameters:    Size  Location     Type
 36288 ;;  id              1    wreg     unsigned char 
 36289 ;; Auto vars:     Size  Location     Type
 36290 ;;  id              1    2[COMRAM] unsigned char 
 36291 ;;  i               1    3[COMRAM] unsigned char 
 36292 ;; Return value:  Size  Location     Type
 36293 ;;                  1    wreg      enum E23601
 36294 ;; Registers used:
 36295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36296 ;; Tracked objects:
 36297 ;;		On entry : 0/0
 36298 ;;		On exit  : 0/0
 36299 ;;		Unchanged: 0/0
 36300 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36305 ;;Total ram usage:        4 bytes
 36306 ;; Hardware stack levels used: 1
 36307 ;; Hardware stack levels required when called: 1
 36308 ;; This function calls:
 36309 ;;		Nothing
 36310 ;; This function is called by:
 36311 ;;		_canSendMessage
 36312 ;;		_getParameterFlags
 36313 ;;		_getParameter
 36314 ;; This function uses a non-reentrant model
 36315 ;;
 36316                           
 36317                           	psect	text90
 36318   006EB0                     __ptext90:
 36319                           	callstack 0
 36320   006EB0                     _have:
 36321                           	callstack 119
 36322                           
 36323                           ;incstack = 0
 36324                           ;have@id stored from wreg
 36325   006EB0  6E03               	movwf	have@id^(0+1280),c
 36326   006EB2                     
 36327                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<6; i++) {
 36328   006EB2  6A04               	clrf	have@i^(0+1280),c
 36329   006EB4                     l7372:
 36330                           
 36331                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 36332   006EB4  5004               	movf	have@i^(0+1280),w,c
 36333   006EB6  0D02               	mullw	2
 36334   006EB8  0E89               	movlw	low _services
 36335   006EBA  24F3               	addwf	243,w,c
 36336   006EBC  6EF6               	movwf	tblptrl,c
 36337   006EBE  0EFF               	movlw	high _services
 36338   006EC0  20F4               	addwfc	244,w,c
 36339   006EC2  6EF7               	movwf	tblptrh,c
 36340   006EC4                     	if	1	;There are 3 active tblptr bytes
 36341   006EC4  6AF8               	clrf	tblptru,c
 36342   006EC6  0E00               	movlw	low (__mediumconst shr (0+16))
 36343   006EC8  22F8               	addwfc	tblptru,f,c
 36344   006ECA                     	endif
 36345   006ECA  0009               	tblrd		*+
 36346   006ECC  50F5               	movf	tablat,w,c
 36347   006ECE  0009               	tblrd		*+
 36348   006ED0  10F5               	iorwf	tablat,w,c
 36349   006ED2  B4D8               	btfsc	status,2,c
 36350   006ED4  EF6E  F037         	goto	u4691
 36351   006ED8  EF70  F037         	goto	u4690
 36352   006EDC                     u4691:
 36353   006EDC  EF93  F037         	goto	l7380
 36354   006EE0                     u4690:
 36355   006EE0  5004               	movf	have@i^(0+1280),w,c
 36356   006EE2  0D02               	mullw	2
 36357   006EE4  0E89               	movlw	low _services
 36358   006EE6  24F3               	addwf	243,w,c
 36359   006EE8  6EF6               	movwf	tblptrl,c
 36360   006EEA  0EFF               	movlw	high _services
 36361   006EEC  20F4               	addwfc	244,w,c
 36362   006EEE  6EF7               	movwf	tblptrh,c
 36363   006EF0                     	if	1	;There are 3 active tblptr bytes
 36364   006EF0  6AF8               	clrf	tblptru,c
 36365   006EF2  0E00               	movlw	low (__mediumconst shr (0+16))
 36366   006EF4  22F8               	addwfc	tblptru,f,c
 36367   006EF6                     	endif
 36368   006EF6  0009               	tblrd		*+
 36369   006EF8  C4F5 F501          	movff	tablat,??_have
 36370   006EFC  0009               	tblrd		*+
 36371   006EFE  C4F5 F502          	movff	tablat,??_have+1
 36372   006F02  C501  F4F6         	movff	??_have,tblptrl
 36373   006F06  C502  F4F7         	movff	??_have+1,tblptrh
 36374   006F0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36375   006F0A  6AF8               	clrf	tblptru,c
 36376   006F0C                     	endif
 36377   006F0C                     	if	0	;tblptru may be non-zero
 36378   006F0C                     	endif
 36379   006F0C  0008               	tblrd		*
 36380   006F0E  50F5               	movf	tablat,w,c
 36381   006F10  1803               	xorwf	have@id^(0+1280),w,c
 36382   006F12  A4D8               	btfss	status,2,c
 36383   006F14  EF8E  F037         	goto	u4701
 36384   006F18  EF90  F037         	goto	u4700
 36385   006F1C                     u4701:
 36386   006F1C  EF93  F037         	goto	l7380
 36387   006F20                     u4700:
 36388   006F20                     
 36389                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 36390   006F20  0E01               	movlw	1
 36391   006F22  EF9D  F037         	goto	l1982
 36392   006F26                     l7380:
 36393                           
 36394                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 36395   006F26  2A04               	incf	have@i^(0+1280),f,c
 36396   006F28  0E05               	movlw	5
 36397   006F2A  6404               	cpfsgt	have@i^(0+1280),c
 36398   006F2C  EF9A  F037         	goto	u4711
 36399   006F30  EF9C  F037         	goto	u4710
 36400   006F34                     u4711:
 36401   006F34  EF5A  F037         	goto	l7372
 36402   006F38                     u4710:
 36403   006F38                     
 36404                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 36405   006F38  0E00               	movlw	0
 36406   006F3A                     l1982:
 36407   006F3A  0012               	return		;funcret
 36408   006F3C                     __end_of_have:
 36409                           	callstack 0
 36410                           
 36411 ;; *************** function _getNumTxBuffersInUse *****************
 36412 ;; Defined at:
 36413 ;;		line 532 in file "../../VLCBlib_PIC/can18_can_2.c"
 36414 ;; Parameters:    Size  Location     Type
 36415 ;;		None
 36416 ;; Auto vars:     Size  Location     Type
 36417 ;;  i16             2    4[COMRAM] short 
 36418 ;; Return value:  Size  Location     Type
 36419 ;;                  1    wreg      unsigned char 
 36420 ;; Registers used:
 36421 ;;		wreg, status,2, status,0
 36422 ;; Tracked objects:
 36423 ;;		On entry : 0/0
 36424 ;;		On exit  : 0/0
 36425 ;;		Unchanged: 0/0
 36426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36431 ;;Total ram usage:        6 bytes
 36432 ;; Hardware stack levels used: 1
 36433 ;; Hardware stack levels required when called: 1
 36434 ;; This function calls:
 36435 ;;		Nothing
 36436 ;; This function is called by:
 36437 ;;		_canGetDiagnostic
 36438 ;;		_canSendMessage
 36439 ;; This function uses a non-reentrant model
 36440 ;;
 36441                           
 36442                           	psect	text91
 36443   00724E                     __ptext91:
 36444                           	callstack 0
 36445   00724E                     _getNumTxBuffersInUse:
 36446                           	callstack 119
 36447   00724E                     
 36448                           ;../../VLCBlib_PIC/can18_can_2.c: 533:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 36449   00724E  0101               	movlb	1	; () banked
 36450   007250  B16C               	btfsc	108,0,b	;volatile
 36451   007252  EF2D  F039         	goto	u4611
 36452   007256  EF2F  F039         	goto	u4610
 36453   00725A                     u4611:
 36454   00725A  EF32  F039         	goto	l7332
 36455   00725E                     u4610:
 36456   00725E                     
 36457                           ; BSR set to: 1
 36458                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         return 32;
 36459   00725E  0E20               	movlw	32
 36460   007260  EF63  F039         	goto	l650
 36461   007264                     l7332:
 36462                           
 36463                           ; BSR set to: 1
 36464                           ;../../VLCBlib_PIC/can18_can_2.c: 536:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 538:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 36465   007264  0E00               	movlw	0
 36466   007266  2570               	addwf	112,w,b	;volatile
 36467   007268  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36468   00726A  0EC4               	movlw	196
 36469   00726C  2171               	addwfc	113,w,b	;volatile
 36470   00726E  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 36471   007270  0EFF               	movlw	255
 36472   007272  2172               	addwfc	114,w,b	;volatile
 36473   007274  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 36474   007276  0EFF               	movlw	255
 36475   007278  2173               	addwfc	115,w,b	;volatile
 36476   00727A  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 36477   00727C  0E05               	movlw	5
 36478   00727E  EF46  F039         	goto	u4620
 36479   007282                     u4625:
 36480   007282  90D8               	bcf	status,0,c
 36481   007284  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 36482   007286  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 36483   007288  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 36484   00728A  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 36485   00728C                     u4620:
 36486   00728C  2EE8               	decfsz	wreg,f,c
 36487   00728E  EF41  F039         	goto	u4625
 36488   007292  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 36489   007296  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 36490                           
 36491                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 36492   00729A  516D               	movf	109,w,b	;volatile
 36493   00729C  0B1F               	andlw	31
 36494   00729E  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36495   0072A0  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 36496   0072A2  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36497   0072A4  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 36498   0072A6  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36499   0072A8  A0D8               	btfss	status,0,c
 36500   0072AA  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36501   0072AC  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 36502                           
 36503                           ;../../VLCBlib_PIC/can18_can_2.c: 540:         if (i16 < 0) i16 += 32;
 36504   0072AE  BE06               	btfsc	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 36505   0072B0  EF5E  F039         	goto	u4630
 36506   0072B4  EF5C  F039         	goto	u4631
 36507   0072B8                     u4631:
 36508   0072B8  EF62  F039         	goto	l7336
 36509   0072BC                     u4630:
 36510   0072BC                     
 36511                           ; BSR set to: 1
 36512   0072BC  0E20               	movlw	32
 36513   0072BE  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 36514   0072C0  0E00               	movlw	0
 36515   0072C2  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 36516   0072C4                     l7336:
 36517                           
 36518                           ; BSR set to: 1
 36519                           ;../../VLCBlib_PIC/can18_can_2.c: 541:         return (uint8_t)i16;
 36520   0072C4  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36521   0072C6                     l650:
 36522                           
 36523                           ; BSR set to: 1
 36524   0072C6  0012               	return		;funcret
 36525   0072C8                     __end_of_getNumTxBuffersInUse:
 36526                           	callstack 0
 36527                           
 36528 ;; *************** function _getNumRxBuffersInUse *****************
 36529 ;; Defined at:
 36530 ;;		line 550 in file "../../VLCBlib_PIC/can18_can_2.c"
 36531 ;; Parameters:    Size  Location     Type
 36532 ;;		None
 36533 ;; Auto vars:     Size  Location     Type
 36534 ;;  i16             2    4[COMRAM] short 
 36535 ;; Return value:  Size  Location     Type
 36536 ;;                  1    wreg      unsigned char 
 36537 ;; Registers used:
 36538 ;;		wreg, status,2, status,0
 36539 ;; Tracked objects:
 36540 ;;		On entry : 0/0
 36541 ;;		On exit  : 0/0
 36542 ;;		Unchanged: 0/0
 36543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36548 ;;Total ram usage:        6 bytes
 36549 ;; Hardware stack levels used: 1
 36550 ;; Hardware stack levels required when called: 1
 36551 ;; This function calls:
 36552 ;;		Nothing
 36553 ;; This function is called by:
 36554 ;;		_canGetDiagnostic
 36555 ;;		_canSendMessage
 36556 ;;		_canReceiveMessage
 36557 ;; This function uses a non-reentrant model
 36558 ;;
 36559                           
 36560                           	psect	text92
 36561   0074A6                     __ptext92:
 36562                           	callstack 0
 36563   0074A6                     _getNumRxBuffersInUse:
 36564                           	callstack 119
 36565   0074A6                     
 36566                           ;../../VLCBlib_PIC/can18_can_2.c: 551:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 36567   0074A6  0101               	movlb	1	; () banked
 36568   0074A8  A578               	btfss	120,2,b	;volatile
 36569   0074AA  EF59  F03A         	goto	u4641
 36570   0074AE  EF5B  F03A         	goto	u4640
 36571   0074B2                     u4641:
 36572   0074B2  EF5E  F03A         	goto	l7348
 36573   0074B6                     u4640:
 36574   0074B6                     
 36575                           ; BSR set to: 1
 36576                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         return 32;
 36577   0074B6  0E20               	movlw	32
 36578   0074B8  EF8C  F03A         	goto	l656
 36579   0074BC                     l7348:
 36580                           
 36581                           ; BSR set to: 1
 36582                           ;../../VLCBlib_PIC/can18_can_2.c: 554:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 556:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 36583   0074BC  517C               	movf	124,w,b	;volatile
 36584   0074BE  0800               	sublw	0
 36585   0074C0  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36586   0074C2  0E3E               	movlw	62
 36587   0074C4  557D               	subfwb	125,w,b	;volatile
 36588   0074C6  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 36589   0074C8  0E00               	movlw	0
 36590   0074CA  557E               	subfwb	126,w,b	;volatile
 36591   0074CC  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 36592   0074CE  0E00               	movlw	0
 36593   0074D0  557F               	subfwb	127,w,b	;volatile
 36594   0074D2  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 36595   0074D4  0E05               	movlw	5
 36596   0074D6  EF72  F03A         	goto	u4650
 36597   0074DA                     u4655:
 36598   0074DA  90D8               	bcf	status,0,c
 36599   0074DC  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 36600   0074DE  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 36601   0074E0  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 36602   0074E2  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 36603   0074E4                     u4650:
 36604   0074E4  2EE8               	decfsz	wreg,f,c
 36605   0074E6  EF6D  F03A         	goto	u4655
 36606   0074EA  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 36607   0074EE  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 36608                           
 36609                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 36610   0074F2  5179               	movf	121,w,b	;volatile
 36611   0074F4  0B1F               	andlw	31
 36612   0074F6  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36613   0074F8  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 36614   0074FA  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36615   0074FC  0E00               	movlw	0
 36616   0074FE  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36617                           
 36618                           ;../../VLCBlib_PIC/can18_can_2.c: 558:         if (i16 < 0) i16 += 32;
 36619   007500  BE06               	btfsc	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 36620   007502  EF87  F03A         	goto	u4660
 36621   007506  EF85  F03A         	goto	u4661
 36622   00750A                     u4661:
 36623   00750A  EF8B  F03A         	goto	l7352
 36624   00750E                     u4660:
 36625   00750E                     
 36626                           ; BSR set to: 1
 36627   00750E  0E20               	movlw	32
 36628   007510  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36629   007512  0E00               	movlw	0
 36630   007514  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36631   007516                     l7352:
 36632                           
 36633                           ; BSR set to: 1
 36634                           ;../../VLCBlib_PIC/can18_can_2.c: 559:         return (uint8_t) i16;
 36635   007516  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 36636   007518                     l656:
 36637                           
 36638                           ; BSR set to: 1
 36639   007518  0012               	return		;funcret
 36640   00751A                     __end_of_getNumRxBuffersInUse:
 36641                           	callstack 0
 36642                           
 36643 ;; *************** function _getNextWriteMessage *****************
 36644 ;; Defined at:
 36645 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 36646 ;; Parameters:    Size  Location     Type
 36647 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 36648 ;;		 -> rxQueue(5), 
 36649 ;; Auto vars:     Size  Location     Type
 36650 ;;  wr              1   11[COMRAM] unsigned char 
 36651 ;; Return value:  Size  Location     Type
 36652 ;;                  2    0[COMRAM] PTR struct Message
 36653 ;; Registers used:
 36654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36655 ;; Tracked objects:
 36656 ;;		On entry : 0/0
 36657 ;;		On exit  : 0/0
 36658 ;;		Unchanged: 0/0
 36659 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36662 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36663 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36664 ;;Total ram usage:       12 bytes
 36665 ;; Hardware stack levels used: 1
 36666 ;; Hardware stack levels required when called: 1
 36667 ;; This function calls:
 36668 ;;		Nothing
 36669 ;; This function is called by:
 36670 ;;		_canSendMessage
 36671 ;; This function uses a non-reentrant model
 36672 ;;
 36673                           
 36674                           	psect	text93
 36675   005966                     __ptext93:
 36676                           	callstack 0
 36677   005966                     _getNextWriteMessage:
 36678                           	callstack 119
 36679   005966  EE20 F002          	lfsr	2,2
 36680   00596A  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36681   00596C  26D9               	addwf	fsr2l,f,c
 36682   00596E  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36683   005970  22DA               	addwfc	fsr2h,f,c
 36684   005972  50DF               	movf	indf2,w,c
 36685   005974  6E03               	movwf	??_getNextWriteMessage^(0+1280),c
 36686   005976  6A04               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 36687   005978  EE20 F004          	lfsr	2,4
 36688   00597C  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36689   00597E  26D9               	addwf	fsr2l,f,c
 36690   005980  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36691   005982  22DA               	addwfc	fsr2h,f,c
 36692   005984  50DF               	movf	indf2,w,c
 36693   005986  6E05               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 36694   005988  0EFF               	movlw	255
 36695   00598A  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36696   00598C  6E06               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 36697   00598E  6A07               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 36698   005990  0EFF               	movlw	255
 36699   005992  2207               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 36700   005994  EE20 F003          	lfsr	2,3
 36701   005998  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36702   00599A  26D9               	addwf	fsr2l,f,c
 36703   00599C  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36704   00599E  22DA               	addwfc	fsr2h,f,c
 36705   0059A0  50DF               	movf	indf2,w,c
 36706   0059A2  6E08               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 36707   0059A4  6A09               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 36708   0059A6  0E01               	movlw	1
 36709   0059A8  2608               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 36710   0059AA  0E00               	movlw	0
 36711   0059AC  2209               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 36712   0059AE  5006               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 36713   0059B0  1408               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 36714   0059B2  6E0A               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 36715   0059B4  5007               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 36716   0059B6  1409               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 36717   0059B8  6E0B               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 36718   0059BA  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36719   0059BC  180A               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 36720   0059BE  E107               	bnz	u4721
 36721   0059C0  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36722   0059C2  180B               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 36723   0059C4  A4D8               	btfss	status,2,c
 36724   0059C6  EFE7  F02C         	goto	u4721
 36725   0059CA  EFE9  F02C         	goto	u4720
 36726   0059CE                     u4721:
 36727   0059CE  EFEF  F02C         	goto	l7394
 36728   0059D2                     u4720:
 36729   0059D2  0E00               	movlw	0
 36730   0059D4  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36731   0059D6  0E00               	movlw	0
 36732   0059D8  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36733   0059DA  EF2E  F02D         	goto	l1181
 36734   0059DE                     l7394:
 36735   0059DE  EE20 F003          	lfsr	2,3
 36736   0059E2  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36737   0059E4  26D9               	addwf	fsr2l,f,c
 36738   0059E6  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36739   0059E8  22DA               	addwfc	fsr2h,f,c
 36740   0059EA  50DF               	movf	indf2,w,c
 36741   0059EC  6E0C               	movwf	getNextWriteMessage@wr^(0+1280),c
 36742   0059EE  EE20 F003          	lfsr	2,3
 36743   0059F2  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36744   0059F4  26D9               	addwf	fsr2l,f,c
 36745   0059F6  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36746   0059F8  22DA               	addwfc	fsr2h,f,c
 36747   0059FA  2ADF               	incf	indf2,f,c
 36748   0059FC  EE20 F004          	lfsr	2,4
 36749   005A00  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36750   005A02  26D9               	addwf	fsr2l,f,c
 36751   005A04  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36752   005A06  22DA               	addwfc	fsr2h,f,c
 36753   005A08  EE10 F003          	lfsr	1,3
 36754   005A0C  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36755   005A0E  26E1               	addwf	fsr1l,f,c
 36756   005A10  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36757   005A12  22E2               	addwfc	fsr1h,f,c
 36758   005A14  50DE               	movf	postinc2,w,c
 36759   005A16  5CE6               	subwf	postinc1,w,c
 36760   005A18  A0D8               	btfss	status,0,c
 36761   005A1A  EF11  F02D         	goto	u4731
 36762   005A1E  EF13  F02D         	goto	u4730
 36763   005A22                     u4731:
 36764   005A22  EF1A  F02D         	goto	l7400
 36765   005A26                     u4730:
 36766   005A26  EE20 F003          	lfsr	2,3
 36767   005A2A  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36768   005A2C  26D9               	addwf	fsr2l,f,c
 36769   005A2E  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36770   005A30  22DA               	addwfc	fsr2h,f,c
 36771   005A32  6ADF               	clrf	indf2,c
 36772   005A34                     l7400:
 36773   005A34  500C               	movf	getNextWriteMessage@wr^(0+1280),w,c
 36774   005A36  0D09               	mullw	9
 36775   005A38  C4F3 F503          	movff	prodl,??_getNextWriteMessage
 36776   005A3C  C4F4 F504          	movff	prodh,??_getNextWriteMessage+1
 36777   005A40  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 36778   005A44  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 36779   005A48  C4DE F505          	movff	postinc2,??_getNextWriteMessage+2
 36780   005A4C  C4DD F506          	movff	postdec2,??_getNextWriteMessage+3
 36781   005A50  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36782   005A52  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36783   005A54  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36784   005A56  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36785   005A58  2006               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 36786   005A5A  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36787   005A5C                     l1181:
 36788   005A5C  0012               	return		;funcret
 36789   005A5E                     __end_of_getNextWriteMessage:
 36790                           	callstack 0
 36791                           
 36792 ;; *************** function _processEnumeration *****************
 36793 ;; Defined at:
 36794 ;;		line 828 in file "../../VLCBlib_PIC/can18_can_2.c"
 36795 ;; Parameters:    Size  Location     Type
 36796 ;;		None
 36797 ;; Auto vars:     Size  Location     Type
 36798 ;;  i               1   27[COMRAM] unsigned char 
 36799 ;;  newCanId        1   26[COMRAM] unsigned char 
 36800 ;;  enumResult      1   25[COMRAM] unsigned char 
 36801 ;; Return value:  Size  Location     Type
 36802 ;;                  1    wreg      void 
 36803 ;; Registers used:
 36804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36805 ;; Tracked objects:
 36806 ;;		On entry : 0/0
 36807 ;;		On exit  : 0/0
 36808 ;;		Unchanged: 0/0
 36809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36811 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36813 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36814 ;;Total ram usage:        7 bytes
 36815 ;; Hardware stack levels used: 1
 36816 ;; Hardware stack levels required when called: 7
 36817 ;; This function calls:
 36818 ;;		_setNewCanId
 36819 ;;		_startEnumeration
 36820 ;;		_tickGet
 36821 ;;		_updateModuleErrorStatus
 36822 ;; This function is called by:
 36823 ;;		_canPoll
 36824 ;; This function uses a non-reentrant model
 36825 ;;
 36826                           
 36827                           	psect	text94
 36828   00461E                     __ptext94:
 36829                           	callstack 0
 36830   00461E                     _processEnumeration:
 36831                           	callstack 117
 36832   00461E                     
 36833                           ;../../VLCBlib_PIC/can18_can_2.c: 829:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 831:     switch (enumerationState) {
 36834   00461E  EFD6  F023         	goto	l8606
 36835   004622                     l8546:
 36836                           
 36837                           ; BSR set to: 5
 36838                           ;../../VLCBlib_PIC/can18_can_2.c: 834:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 36839   004622  EC18  F03A         	call	_tickGet	;wreg free
 36840   004626  0105               	movlb	5	; () banked
 36841   004628  5174               	movf	_enumerationStartTime& (0+255),w,b
 36842   00462A  5C01               	subwf	?_tickGet^(0+1280),w,c
 36843   00462C  6E16               	movwf	??_processEnumeration^(0+1280),c
 36844   00462E  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36845   004630  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36846   004632  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36847   004634  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36848   004636  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36849   004638  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36850   00463A  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36851   00463C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36852   00463E  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36853   004640  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36854   004642  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36855   004644  E10B               	bnz	u5860
 36856   004646  0ED5               	movlw	213
 36857   004648  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36858   00464A  0E30               	movlw	48
 36859   00464C  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36860   00464E  A0D8               	btfss	status,0,c
 36861   004650  EF2C  F023         	goto	u5861
 36862   004654  EF2E  F023         	goto	u5860
 36863   004658                     u5861:
 36864   004658  EFF0  F023         	goto	l735
 36865   00465C                     u5860:
 36866   00465C                     
 36867                           ; BSR set to: 5
 36868                           ;../../VLCBlib_PIC/can18_can_2.c: 838:                 startEnumeration(0);
 36869   00465C  0E00               	movlw	0
 36870   00465E  ECFE  F03A         	call	_startEnumeration
 36871   004662  EFF0  F023         	goto	l735
 36872   004666                     l8550:
 36873                           
 36874                           ; BSR set to: 5
 36875                           ;../../VLCBlib_PIC/can18_can_2.c: 846:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 36876   004666  EC18  F03A         	call	_tickGet	;wreg free
 36877   00466A  0105               	movlb	5	; () banked
 36878   00466C  5174               	movf	_enumerationStartTime& (0+255),w,b
 36879   00466E  5C01               	subwf	?_tickGet^(0+1280),w,c
 36880   004670  6E16               	movwf	??_processEnumeration^(0+1280),c
 36881   004672  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36882   004674  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36883   004676  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36884   004678  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36885   00467A  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36886   00467C  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36887   00467E  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36888   004680  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36889   004682  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36890   004684  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36891   004686  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36892   004688  E10B               	bnz	u5870
 36893   00468A  0E6B               	movlw	107
 36894   00468C  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36895   00468E  0E18               	movlw	24
 36896   004690  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36897   004692  A0D8               	btfss	status,0,c
 36898   004694  EF4E  F023         	goto	u5871
 36899   004698  EF50  F023         	goto	u5870
 36900   00469C                     u5871:
 36901   00469C  EFF0  F023         	goto	l735
 36902   0046A0                     u5870:
 36903   0046A0                     
 36904                           ; BSR set to: 5
 36905                           ;../../VLCBlib_PIC/can18_can_2.c: 851:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 36906   0046A0  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36907   0046A2  EF54  F023         	goto	l8556
 36908   0046A6                     l8554:
 36909                           
 36910                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                 }
 36911   0046A6  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36912   0046A8                     l8556:
 36913   0046A8  0E32               	movlw	low _enumerationResults
 36914   0046AA  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36915   0046AC  6ED9               	movwf	fsr2l,c
 36916   0046AE  6ADA               	clrf	fsr2h,c
 36917   0046B0  0E06               	movlw	high _enumerationResults
 36918   0046B2  22DA               	addwfc	fsr2h,f,c
 36919   0046B4  28DE               	incf	postinc2,w,c
 36920   0046B6  A4D8               	btfss	status,2,c
 36921   0046B8  EF60  F023         	goto	u5881
 36922   0046BC  EF62  F023         	goto	u5880
 36923   0046C0                     u5881:
 36924   0046C0  EF6A  F023         	goto	l8560
 36925   0046C4                     u5880:
 36926   0046C4  0E0F               	movlw	15
 36927   0046C6  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36928   0046C8  EF68  F023         	goto	u5891
 36929   0046CC  EF6A  F023         	goto	u5890
 36930   0046D0                     u5891:
 36931   0046D0  EF53  F023         	goto	l8554
 36932   0046D4                     u5890:
 36933   0046D4                     l8560:
 36934                           
 36935                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 36936   0046D4  0E32               	movlw	low _enumerationResults
 36937   0046D6  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36938   0046D8  6ED9               	movwf	fsr2l,c
 36939   0046DA  6ADA               	clrf	fsr2h,c
 36940   0046DC  0E06               	movlw	high _enumerationResults
 36941   0046DE  22DA               	addwfc	fsr2h,f,c
 36942   0046E0  50DF               	movf	indf2,w,c
 36943   0046E2  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 36944   0046E4  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 36945   0046E6  B4D8               	btfsc	status,2,c
 36946   0046E8  EF78  F023         	goto	u5901
 36947   0046EC  EF7A  F023         	goto	u5900
 36948   0046F0                     u5901:
 36949   0046F0  EFA2  F023         	goto	l8578
 36950   0046F4                     u5900:
 36951   0046F4                     
 36952                           ;../../VLCBlib_PIC/can18_can_2.c: 855:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 36953   0046F4  501C               	movf	processEnumeration@i^(0+1280),w,c
 36954   0046F6  0D08               	mullw	8
 36955   0046F8  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 36956   0046FC  EF83  F023         	goto	l8568
 36957   004700                     l8564:
 36958                           
 36959                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         enumResult >>= 1;
 36960   004700  90D8               	bcf	status,0,c
 36961   004702  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 36962   004704                     
 36963                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                     }
 36964   004704  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 36965   004706                     l8568:
 36966   004706  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 36967   004708  EF88  F023         	goto	u5911
 36968   00470C  EF8A  F023         	goto	u5910
 36969   004710                     u5911:
 36970   004710  EF80  F023         	goto	l8564
 36971   004714                     u5910:
 36972   004714                     
 36973                           ;../../VLCBlib_PIC/can18_can_2.c: 858:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 36974   004714  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 36975   004716  B4D8               	btfsc	status,2,c
 36976   004718  EF90  F023         	goto	u5921
 36977   00471C  EF92  F023         	goto	u5920
 36978   004720                     u5921:
 36979   004720  EFA2  F023         	goto	l8578
 36980   004724                     u5920:
 36981   004724  0E64               	movlw	100
 36982   004726  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 36983   004728  EF98  F023         	goto	u5931
 36984   00472C  EF9A  F023         	goto	u5930
 36985   004730                     u5931:
 36986   004730  EFA2  F023         	goto	l8578
 36987   004734                     u5930:
 36988   004734                     
 36989                           ;../../VLCBlib_PIC/can18_can_2.c: 860:                         canId = newCanId;
 36990   004734  C51B  F5A8         	movff	processEnumeration@newCanId,_canId
 36991   004738                     
 36992                           ;../../VLCBlib_PIC/can18_can_2.c: 861:                         setNewCanId(canId);
 36993   004738  0105               	movlb	5	; () banked
 36994   00473A  51A8               	movf	_canId& (0+255),w,b
 36995   00473C  EC07  F03E         	call	_setNewCanId
 36996                           
 36997                           ;../../VLCBlib_PIC/can18_can_2.c: 862:                     } else {
 36998   004740  EFA7  F023         	goto	l8586
 36999   004744                     l8578:
 37000                           
 37001                           ;../../VLCBlib_PIC/can18_can_2.c: 864:                         canDiagnostics[0x10].asUi
      +                          nt++;
 37002   004744  0106               	movlb	6	; () banked
 37003   004746  4BAE               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 37004   004748  2BAF               	incf	(_canDiagnostics+33)& (0+255),f,b
 37005   00474A                     
 37006                           ; BSR set to: 6
 37007                           ;../../VLCBlib_PIC/can18_can_2.c: 865:                         updateModuleErrorStatus()
      +                          ;
 37008   00474A  EC76  F041         	call	_updateModuleErrorStatus	;wreg free
 37009   00474E                     l8586:
 37010                           
 37011                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 37012   00474E  0E03               	movlw	3
 37013   004750  0105               	movlb	5	; () banked
 37014   004752  19A5               	xorwf	_enumerationState& (0+255),w,b
 37015   004754  A4D8               	btfss	status,2,c
 37016   004756  EFAF  F023         	goto	u5941
 37017   00475A  EFB1  F023         	goto	u5940
 37018   00475E                     u5941:
 37019   00475E  EFD2  F023         	goto	l8602
 37020   004762                     u5940:
 37021   004762                     
 37022                           ; BSR set to: 5
 37023                           ;../../VLCBlib_PIC/can18_can_2.c: 877:                     for (i=0; i< 32; i++) {
 37024   004762  6A1C               	clrf	processEnumeration@i^(0+1280),c
 37025   004764                     l8594:
 37026                           
 37027                           ; BSR set to: 5
 37028                           ;../../VLCBlib_PIC/can18_can_2.c: 878:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 37029   004764  501C               	movf	processEnumeration@i^(0+1280),w,c
 37030   004766  6E16               	movwf	??_processEnumeration^(0+1280),c
 37031   004768  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 37032   00476A  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 37033   00476C  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 37034   00476E  0EF0               	movlw	240
 37035   004770  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 37036   004772  5016               	movf	??_processEnumeration^(0+1280),w,c
 37037   004774  0B0F               	andlw	15
 37038   004776  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 37039   004778  0EF0               	movlw	240
 37040   00477A  1616               	andwf	??_processEnumeration^(0+1280),f,c
 37041   00477C  0E00               	movlw	0
 37042   00477E  2416               	addwf	??_processEnumeration^(0+1280),w,c
 37043   004780  6ED9               	movwf	fsr2l,c
 37044   004782  0E3C               	movlw	60
 37045   004784  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 37046   004786  6EDA               	movwf	fsr2h,c
 37047   004788  51A8               	movf	_canId& (0+255),w,b
 37048   00478A  0B7F               	andlw	127
 37049   00478C  6EDF               	movwf	indf2,c
 37050   00478E                     
 37051                           ; BSR set to: 5
 37052                           ;../../VLCBlib_PIC/can18_can_2.c: 879:                     }
 37053   00478E  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 37054   004790                     
 37055                           ; BSR set to: 5
 37056   004790  0E1F               	movlw	31
 37057   004792  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 37058   004794  EFCE  F023         	goto	u5951
 37059   004798  EFD0  F023         	goto	u5950
 37060   00479C                     u5951:
 37061   00479C  EFB2  F023         	goto	l8594
 37062   0047A0                     u5950:
 37063   0047A0                     
 37064                           ; BSR set to: 5
 37065                           ;../../VLCBlib_PIC/can18_can_2.c: 881:                     C1FIFOCON2H |= 0x2;
 37066   0047A0  0101               	movlb	1	; () banked
 37067   0047A2  8369               	bsf	105,1,b	;volatile
 37068   0047A4                     l8602:
 37069                           
 37070                           ;../../VLCBlib_PIC/can18_can_2.c: 883:                 enumerationState = NO_ENUMERATION
      +                          ;
 37071   0047A4  0105               	movlb	5	; () banked
 37072   0047A6  6BA5               	clrf	_enumerationState& (0+255),b
 37073   0047A8  EFF0  F023         	goto	l735
 37074   0047AC                     l8606:
 37075   0047AC  0105               	movlb	5	; () banked
 37076   0047AE  51A5               	movf	_enumerationState& (0+255),w,b
 37077   0047B0  6E16               	movwf	??_processEnumeration^(0+1280),c
 37078   0047B2  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 37079                           
 37080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37081                           ; Switch size 1, requested type "simple"
 37082                           ; Number of cases is 1, Range of values is 0 to 0
 37083                           ; switch strategies available:
 37084                           ; Name         Instructions Cycles
 37085                           ; simple_byte            4     3 (average)
 37086                           ;	Chosen strategy is simple_byte
 37087   0047B4  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 37088   0047B6  0A00               	xorlw	0	; case 0
 37089   0047B8  B4D8               	btfsc	status,2,c
 37090   0047BA  EFE1  F023         	goto	l11678
 37091   0047BE  EFF0  F023         	goto	l735
 37092   0047C2                     l11678:
 37093                           
 37094                           ; BSR set to: 5
 37095                           ; Switch size 1, requested type "simple"
 37096                           ; Number of cases is 3, Range of values is 1 to 3
 37097                           ; switch strategies available:
 37098                           ; Name         Instructions Cycles
 37099                           ; simple_byte           10     6 (average)
 37100                           ;	Chosen strategy is simple_byte
 37101   0047C2  5016               	movf	??_processEnumeration^(0+1280),w,c
 37102   0047C4  0A01               	xorlw	1	; case 1
 37103   0047C6  B4D8               	btfsc	status,2,c
 37104   0047C8  EF11  F023         	goto	l8546
 37105   0047CC  0A03               	xorlw	3	; case 2
 37106   0047CE  B4D8               	btfsc	status,2,c
 37107   0047D0  EF33  F023         	goto	l8550
 37108   0047D4  0A01               	xorlw	1	; case 3
 37109   0047D6  B4D8               	btfsc	status,2,c
 37110   0047D8  EF33  F023         	goto	l8550
 37111   0047DC  EFF0  F023         	goto	l735
 37112   0047E0                     l735:
 37113   0047E0  0012               	return		;funcret
 37114   0047E2                     __end_of_processEnumeration:
 37115                           	callstack 0
 37116                           
 37117 ;; *************** function _startEnumeration *****************
 37118 ;; Defined at:
 37119 ;;		line 777 in file "../../VLCBlib_PIC/can18_can_2.c"
 37120 ;; Parameters:    Size  Location     Type
 37121 ;;  txWaiting       1    wreg     enum E23474
 37122 ;; Auto vars:     Size  Location     Type
 37123 ;;  txWaiting       1   10[COMRAM] enum E23474
 37124 ;;  i               1   11[COMRAM] unsigned char 
 37125 ;; Return value:  Size  Location     Type
 37126 ;;                  1    wreg      void 
 37127 ;; Registers used:
 37128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37129 ;; Tracked objects:
 37130 ;;		On entry : 0/0
 37131 ;;		On exit  : 0/0
 37132 ;;		Unchanged: 0/0
 37133 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37138 ;;Total ram usage:        2 bytes
 37139 ;; Hardware stack levels used: 1
 37140 ;; Hardware stack levels required when called: 2
 37141 ;; This function calls:
 37142 ;;		_sendRTR
 37143 ;;		_tickGet
 37144 ;; This function is called by:
 37145 ;;		_canSendMessage
 37146 ;;		_processEnumeration
 37147 ;; This function uses a non-reentrant model
 37148 ;;
 37149                           
 37150                           	psect	text95
 37151   0075FC                     __ptext95:
 37152                           	callstack 0
 37153   0075FC                     _startEnumeration:
 37154                           	callstack 118
 37155                           
 37156                           ;incstack = 0
 37157                           ;startEnumeration@txWaiting stored from wreg
 37158   0075FC  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 37159   0075FE                     
 37160                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          80:     for (i=1; i< (0x7F/8)+1; i++) {
 37161   0075FE  0E01               	movlw	1
 37162   007600  6E0C               	movwf	startEnumeration@i^(0+1280),c
 37163   007602                     l7410:
 37164                           
 37165                           ;../../VLCBlib_PIC/can18_can_2.c: 781:         enumerationResults[i] = 0;
 37166   007602  0E32               	movlw	low _enumerationResults
 37167   007604  240C               	addwf	startEnumeration@i^(0+1280),w,c
 37168   007606  6ED9               	movwf	fsr2l,c
 37169   007608  6ADA               	clrf	fsr2h,c
 37170   00760A  0E06               	movlw	high _enumerationResults
 37171   00760C  22DA               	addwfc	fsr2h,f,c
 37172   00760E  6ADF               	clrf	indf2,c
 37173   007610                     
 37174                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     }
 37175   007610  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 37176   007612  0E0F               	movlw	15
 37177   007614  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 37178   007616  EF0F  F03B         	goto	u4741
 37179   00761A  EF11  F03B         	goto	u4740
 37180   00761E                     u4741:
 37181   00761E  EF01  F03B         	goto	l7410
 37182   007622                     u4740:
 37183   007622                     
 37184                           ;../../VLCBlib_PIC/can18_can_2.c: 783:     enumerationResults[0] = 1;
 37185   007622  0E01               	movlw	1
 37186   007624  0106               	movlb	6	; () banked
 37187   007626  6F32               	movwf	_enumerationResults& (0+255),b
 37188                           
 37189                           ;../../VLCBlib_PIC/can18_can_2.c: 785:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 37190   007628  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 37191   00762A  A4D8               	btfss	status,2,c
 37192   00762C  EF1A  F03B         	goto	u4751
 37193   007630  EF1C  F03B         	goto	u4750
 37194   007634                     u4751:
 37195   007634  EF21  F03B         	goto	l7420
 37196   007638                     u4750:
 37197   007638                     
 37198                           ; BSR set to: 6
 37199   007638  0E02               	movlw	2
 37200   00763A  0105               	movlb	5	; () banked
 37201   00763C  6FA5               	movwf	_enumerationState& (0+255),b
 37202   00763E  EF24  F03B         	goto	l7422
 37203   007642                     l7420:
 37204                           
 37205                           ; BSR set to: 6
 37206   007642  0E03               	movlw	3
 37207   007644  0105               	movlb	5	; () banked
 37208   007646  6FA5               	movwf	_enumerationState& (0+255),b
 37209   007648                     l7422:
 37210                           
 37211                           ; BSR set to: 5
 37212                           ;../../VLCBlib_PIC/can18_can_2.c: 786:     enumerationStartTime.val = tickGet();
 37213   007648  EC18  F03A         	call	_tickGet	;wreg free
 37214   00764C  C501  F574         	movff	?_tickGet,_enumerationStartTime
 37215   007650  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 37216   007654  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 37217   007658  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 37218   00765C                     
 37219                           ;../../VLCBlib_PIC/can18_can_2.c: 788:     canDiagnostics[0x0D].asUint++;
 37220   00765C  0106               	movlb	6	; () banked
 37221   00765E  4BA8               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 37222   007660  2BA9               	incf	(_canDiagnostics+27)& (0+255),f,b
 37223   007662                     
 37224                           ; BSR set to: 6
 37225                           ;../../VLCBlib_PIC/can18_can_2.c: 790:     sendRTR();
 37226   007662  EC4D  F03E         	call	_sendRTR	;wreg free
 37227   007666  0012               	return		;funcret
 37228   007668                     __end_of_startEnumeration:
 37229                           	callstack 0
 37230                           
 37231 ;; *************** function _sendRTR *****************
 37232 ;; Defined at:
 37233 ;;		line 680 in file "../../VLCBlib_PIC/can18_can_2.c"
 37234 ;; Parameters:    Size  Location     Type
 37235 ;;		None
 37236 ;; Auto vars:     Size  Location     Type
 37237 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37238 ;;		 -> RAM(16383), 
 37239 ;; Return value:  Size  Location     Type
 37240 ;;                  1    wreg      void 
 37241 ;; Registers used:
 37242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37243 ;; Tracked objects:
 37244 ;;		On entry : 0/0
 37245 ;;		On exit  : 0/0
 37246 ;;		Unchanged: 0/0
 37247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37252 ;;Total ram usage:        2 bytes
 37253 ;; Hardware stack levels used: 1
 37254 ;; Hardware stack levels required when called: 1
 37255 ;; This function calls:
 37256 ;;		Nothing
 37257 ;; This function is called by:
 37258 ;;		_startEnumeration
 37259 ;; This function uses a non-reentrant model
 37260 ;;
 37261                           
 37262                           	psect	text96
 37263   007C9A                     __ptext96:
 37264                           	callstack 0
 37265   007C9A                     _sendRTR:
 37266                           	callstack 118
 37267   007C9A                     
 37268                           ;../../VLCBlib_PIC/can18_can_2.c: 681:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 37269   007C9A  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 37270   007C9E  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 37271   007CA2                     
 37272                           ;../../VLCBlib_PIC/can18_can_2.c: 682:     txFifoObj[0] = (canId & 0x7F);
 37273   007CA2  0105               	movlb	5	; () banked
 37274   007CA4  51A8               	movf	_canId& (0+255),w,b
 37275   007CA6  0B7F               	andlw	127
 37276   007CA8  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 37277   007CAC  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 37278   007CB0  6EDF               	movwf	indf2,c
 37279   007CB2                     
 37280                           ; BSR set to: 5
 37281                           ;../../VLCBlib_PIC/can18_can_2.c: 683:     txFifoObj[1] = 0;
 37282   007CB2  EE20 F001          	lfsr	2,1
 37283   007CB6  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37284   007CB8  26D9               	addwf	fsr2l,f,c
 37285   007CBA  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37286   007CBC  22DA               	addwfc	fsr2h,f,c
 37287   007CBE  6ADF               	clrf	indf2,c
 37288   007CC0                     
 37289                           ; BSR set to: 5
 37290                           ;../../VLCBlib_PIC/can18_can_2.c: 684:     txFifoObj[4] = 0x20;
 37291   007CC0  EE20 F004          	lfsr	2,4
 37292   007CC4  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37293   007CC6  26D9               	addwf	fsr2l,f,c
 37294   007CC8  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37295   007CCA  22DA               	addwfc	fsr2h,f,c
 37296   007CCC  0E20               	movlw	32
 37297   007CCE  6EDF               	movwf	indf2,c
 37298   007CD0                     
 37299                           ; BSR set to: 5
 37300                           ;../../VLCBlib_PIC/can18_can_2.c: 685:     C1TXQCONH |= (0x2 | 0x1);
 37301   007CD0  0E03               	movlw	3
 37302   007CD2  0101               	movlb	1	; () banked
 37303   007CD4  1351               	iorwf	81,f,b	;volatile
 37304   007CD6                     
 37305                           ; BSR set to: 1
 37306                           ;../../VLCBlib_PIC/can18_can_2.c: 687:     canDiagnostics[0x06].asUint++;
 37307   007CD6  0106               	movlb	6	; () banked
 37308   007CD8  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 37309   007CDA  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 37310   007CDC                     
 37311                           ; BSR set to: 6
 37312   007CDC  0012               	return		;funcret
 37313   007CDE                     __end_of_sendRTR:
 37314                           	callstack 0
 37315                           
 37316 ;; *************** function _setNewCanId *****************
 37317 ;; Defined at:
 37318 ;;		line 896 in file "../../VLCBlib_PIC/can18_can_2.c"
 37319 ;; Parameters:    Size  Location     Type
 37320 ;;  newCanId        1    wreg     unsigned char 
 37321 ;; Auto vars:     Size  Location     Type
 37322 ;;  newCanId        1   20[COMRAM] unsigned char 
 37323 ;; Return value:  Size  Location     Type
 37324 ;;                  1    wreg      enum E23636
 37325 ;; Registers used:
 37326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37327 ;; Tracked objects:
 37328 ;;		On entry : 0/0
 37329 ;;		On exit  : 0/0
 37330 ;;		Unchanged: 0/0
 37331 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37336 ;;Total ram usage:        1 bytes
 37337 ;; Hardware stack levels used: 1
 37338 ;; Hardware stack levels required when called: 6
 37339 ;; This function calls:
 37340 ;;		_prepareSelfEnumResponse
 37341 ;;		_writeNVM
 37342 ;; This function is called by:
 37343 ;;		_processEnumeration
 37344 ;; This function uses a non-reentrant model
 37345 ;;
 37346                           
 37347                           	psect	text97
 37348   007C0E                     __ptext97:
 37349                           	callstack 0
 37350   007C0E                     _setNewCanId:
 37351                           	callstack 117
 37352                           
 37353                           ; BSR set to: 6
 37354                           ;incstack = 0
 37355                           ;setNewCanId@newCanId stored from wreg
 37356   007C0E  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 37357   007C10                     
 37358                           ;../../VLCBlib_PIC/can18_can_2.c: 897:     if ((newCanId >= 1) && (newCanId <= 99)) {
 37359   007C10  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 37360   007C12  B4D8               	btfsc	status,2,c
 37361   007C14  EF0E  F03E         	goto	u5471
 37362   007C18  EF10  F03E         	goto	u5470
 37363   007C1C                     u5471:
 37364   007C1C  EF2A  F03E         	goto	l739
 37365   007C20                     u5470:
 37366   007C20  0E64               	movlw	100
 37367   007C22  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 37368   007C24  EF16  F03E         	goto	u5481
 37369   007C28  EF18  F03E         	goto	u5480
 37370   007C2C                     u5481:
 37371   007C2C  EF2A  F03E         	goto	l739
 37372   007C30                     u5480:
 37373   007C30                     
 37374                           ;../../VLCBlib_PIC/can18_can_2.c: 898:         canId = newCanId;
 37375   007C30  C515  F5A8         	movff	setNewCanId@newCanId,_canId
 37376   007C34                     
 37377                           ;../../VLCBlib_PIC/can18_can_2.c: 900:         prepareSelfEnumResponse();
 37378   007C34  ECA0  F039         	call	_prepareSelfEnumResponse	;wreg free
 37379                           
 37380                           ;../../VLCBlib_PIC/can18_can_2.c: 901:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 37381   007C38  0EFE               	movlw	254
 37382   007C3A  6E0E               	movwf	writeNVM@index^(0+1280),c
 37383   007C3C  0E03               	movlw	3
 37384   007C3E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37385   007C40  0E00               	movlw	0
 37386   007C42  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37387   007C44  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 37388   007C48  0E00               	movlw	0
 37389   007C4A  EC34  F03C         	call	_writeNVM
 37390   007C4E                     
 37391                           ;../../VLCBlib_PIC/can18_can_2.c: 903:         canDiagnostics[0x0F].asUint++;
 37392   007C4E  0106               	movlb	6	; () banked
 37393   007C50  4BAC               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 37394   007C52  2BAD               	incf	(_canDiagnostics+31)& (0+255),f,b
 37395   007C54                     l739:
 37396   007C54  0012               	return		;funcret
 37397   007C56                     __end_of_setNewCanId:
 37398                           	callstack 0
 37399                           
 37400 ;; *************** function _prepareSelfEnumResponse *****************
 37401 ;; Defined at:
 37402 ;;		line 389 in file "../../VLCBlib_PIC/can18_can_2.c"
 37403 ;; Parameters:    Size  Location     Type
 37404 ;;		None
 37405 ;; Auto vars:     Size  Location     Type
 37406 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37407 ;;		 -> RAM(16383), 
 37408 ;; Return value:  Size  Location     Type
 37409 ;;                  1    wreg      void 
 37410 ;; Registers used:
 37411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37412 ;; Tracked objects:
 37413 ;;		On entry : 0/0
 37414 ;;		On exit  : 0/0
 37415 ;;		Unchanged: 0/0
 37416 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37421 ;;Total ram usage:        2 bytes
 37422 ;; Hardware stack levels used: 1
 37423 ;; Hardware stack levels required when called: 1
 37424 ;; This function calls:
 37425 ;;		Nothing
 37426 ;; This function is called by:
 37427 ;;		_canPowerUp
 37428 ;;		_setNewCanId
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text98
 37433   007340                     __ptext98:
 37434                           	callstack 0
 37435   007340                     _prepareSelfEnumResponse:
 37436                           	callstack 123
 37437   007340                     
 37438                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 37439   007340  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 37440   007344  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 37441                           
 37442                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37443   007348  EFD3  F039         	goto	l7848
 37444   00734C                     l7844:
 37445                           
 37446                           ; BSR set to: 1
 37447                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[0] = (canId & 0x7F);
 37448   00734C  0105               	movlb	5	; () banked
 37449   00734E  51A8               	movf	_canId& (0+255),w,b
 37450   007350  0B7F               	andlw	127
 37451   007352  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 37452   007356  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 37453   00735A  6EDF               	movwf	indf2,c
 37454                           
 37455                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[1] = 0;
 37456   00735C  EE20 F001          	lfsr	2,1
 37457   007360  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37458   007362  26D9               	addwf	fsr2l,f,c
 37459   007364  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37460   007366  22DA               	addwfc	fsr2h,f,c
 37461   007368  6ADF               	clrf	indf2,c
 37462                           
 37463                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[4] = 0;
 37464   00736A  EE20 F004          	lfsr	2,4
 37465   00736E  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37466   007370  26D9               	addwf	fsr2l,f,c
 37467   007372  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37468   007374  22DA               	addwfc	fsr2h,f,c
 37469   007376  6ADF               	clrf	indf2,c
 37470                           
 37471                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[5] = 0;
 37472   007378  EE20 F005          	lfsr	2,5
 37473   00737C  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37474   00737E  26D9               	addwf	fsr2l,f,c
 37475   007380  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37476   007382  22DA               	addwfc	fsr2h,f,c
 37477   007384  6ADF               	clrf	indf2,c
 37478                           
 37479                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         txFifoObj[6] = 0;
 37480   007386  EE20 F006          	lfsr	2,6
 37481   00738A  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37482   00738C  26D9               	addwf	fsr2l,f,c
 37483   00738E  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37484   007390  22DA               	addwfc	fsr2h,f,c
 37485   007392  6ADF               	clrf	indf2,c
 37486                           
 37487                           ;../../VLCBlib_PIC/can18_can_2.c: 399:         txFifoObj[7] = 0;
 37488   007394  EE20 F007          	lfsr	2,7
 37489   007398  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37490   00739A  26D9               	addwf	fsr2l,f,c
 37491   00739C  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37492   00739E  22DA               	addwfc	fsr2h,f,c
 37493   0073A0  6ADF               	clrf	indf2,c
 37494   0073A2                     
 37495                           ; BSR set to: 5
 37496                           ;../../VLCBlib_PIC/can18_can_2.c: 400:         C1FIFOCON1Hbits.UINC = 1;
 37497   0073A2  0101               	movlb	1	; () banked
 37498   0073A4  815D               	bsf	93,0,b	;volatile
 37499   0073A6                     l7848:
 37500                           
 37501                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37502   0073A6  0101               	movlb	1	; () banked
 37503   0073A8  B160               	btfsc	96,0,b	;volatile
 37504   0073AA  EFD9  F039         	goto	u5191
 37505   0073AE  EFDB  F039         	goto	u5190
 37506   0073B2                     u5191:
 37507   0073B2  EFA6  F039         	goto	l7844
 37508   0073B6                     u5190:
 37509   0073B6                     
 37510                           ; BSR set to: 1
 37511   0073B6  0012               	return		;funcret
 37512   0073B8                     __end_of_prepareSelfEnumResponse:
 37513                           	callstack 0
 37514                           
 37515 ;; *************** function _APP_preProcessMessage *****************
 37516 ;; Defined at:
 37517 ;;		line 73 in file "../canargb_events.c"
 37518 ;; Parameters:    Size  Location     Type
 37519 ;;  m               2    0[COMRAM] PTR struct Message
 37520 ;;		 -> poll@m(9), 
 37521 ;; Auto vars:     Size  Location     Type
 37522 ;;		None
 37523 ;; Return value:  Size  Location     Type
 37524 ;;                  1    wreg      enum E23290
 37525 ;; Registers used:
 37526 ;;		wreg
 37527 ;; Tracked objects:
 37528 ;;		On entry : 0/0
 37529 ;;		On exit  : 0/0
 37530 ;;		Unchanged: 0/0
 37531 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37536 ;;Total ram usage:        2 bytes
 37537 ;; Hardware stack levels used: 1
 37538 ;; Hardware stack levels required when called: 1
 37539 ;; This function calls:
 37540 ;;		Nothing
 37541 ;; This function is called by:
 37542 ;;		_poll
 37543 ;; This function uses a non-reentrant model
 37544 ;;
 37545                           
 37546                           	psect	text99
 37547   00836E                     __ptext99:
 37548                           	callstack 0
 37549   00836E                     _APP_preProcessMessage:
 37550                           	callstack 124
 37551   00836E                     
 37552                           ;../canargb_events.c: 74:     return NOT_PROCESSED;
 37553   00836E  0E00               	movlw	0
 37554   008370  0012               	return		;funcret
 37555   008372                     __end_of_APP_preProcessMessage:
 37556                           	callstack 0
 37557                           
 37558 ;; *************** function _APP_postProcessMessage *****************
 37559 ;; Defined at:
 37560 ;;		line 79 in file "../canargb_events.c"
 37561 ;; Parameters:    Size  Location     Type
 37562 ;;  m               2    0[COMRAM] PTR struct Message
 37563 ;;		 -> poll@m(9), 
 37564 ;; Auto vars:     Size  Location     Type
 37565 ;;		None
 37566 ;; Return value:  Size  Location     Type
 37567 ;;                  1    wreg      enum E23290
 37568 ;; Registers used:
 37569 ;;		wreg
 37570 ;; Tracked objects:
 37571 ;;		On entry : 0/0
 37572 ;;		On exit  : 0/0
 37573 ;;		Unchanged: 0/0
 37574 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37579 ;;Total ram usage:        2 bytes
 37580 ;; Hardware stack levels used: 1
 37581 ;; Hardware stack levels required when called: 1
 37582 ;; This function calls:
 37583 ;;		Nothing
 37584 ;; This function is called by:
 37585 ;;		_poll
 37586 ;; This function uses a non-reentrant model
 37587 ;;
 37588                           
 37589                           	psect	text100
 37590   008372                     __ptext100:
 37591                           	callstack 0
 37592   008372                     _APP_postProcessMessage:
 37593                           	callstack 124
 37594   008372                     
 37595                           ;../canargb_events.c: 80:     return NOT_PROCESSED;
 37596   008372  0E00               	movlw	0
 37597   008374  0012               	return		;funcret
 37598   008376                     __end_of_APP_postProcessMessage:
 37599                           	callstack 0
 37600                           
 37601 ;; *************** function _loop *****************
 37602 ;; Defined at:
 37603 ;;		line 254 in file "../main.c"
 37604 ;; Parameters:    Size  Location     Type
 37605 ;;		None
 37606 ;; Auto vars:     Size  Location     Type
 37607 ;;		None
 37608 ;; Return value:  Size  Location     Type
 37609 ;;                  1    wreg      void 
 37610 ;; Registers used:
 37611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37612 ;; Tracked objects:
 37613 ;;		On entry : 0/0
 37614 ;;		On exit  : 0/0
 37615 ;;		Unchanged: 0/0
 37616 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37621 ;;Total ram usage:        4 bytes
 37622 ;; Hardware stack levels used: 1
 37623 ;; Hardware stack levels required when called: 3
 37624 ;; This function calls:
 37625 ;;		_doFlash
 37626 ;;		_refreshString
 37627 ;;		_tickGet
 37628 ;; This function is called by:
 37629 ;;		_main
 37630 ;; This function uses a non-reentrant model
 37631 ;;
 37632                           
 37633                           	psect	text101
 37634   007984                     __ptext101:
 37635                           	callstack 0
 37636   007984                     _loop:
 37637                           	callstack 123
 37638   007984                     
 37639                           ;../main.c: 256:     if ((tickGet() - flashTime.val) > (62500/2)) {
 37640   007984  EC18  F03A         	call	_tickGet	;wreg free
 37641   007988  0105               	movlb	5	; () banked
 37642   00798A  5180               	movf	_flashTime& (0+255),w,b
 37643   00798C  5C01               	subwf	?_tickGet^(0+1280),w,c
 37644   00798E  6E0B               	movwf	??_loop^(0+1280),c
 37645   007990  5181               	movf	(_flashTime+1)& (0+255),w,b
 37646   007992  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 37647   007994  6E0C               	movwf	(??_loop+1)^(0+1280),c
 37648   007996  5182               	movf	(_flashTime+2)& (0+255),w,b
 37649   007998  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 37650   00799A  6E0D               	movwf	(??_loop+2)^(0+1280),c
 37651   00799C  5183               	movf	(_flashTime+3)& (0+255),w,b
 37652   00799E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 37653   0079A0  6E0E               	movwf	(??_loop+3)^(0+1280),c
 37654   0079A2  500E               	movf	(??_loop+3)^(0+1280),w,c
 37655   0079A4  100D               	iorwf	(??_loop+2)^(0+1280),w,c
 37656   0079A6  E10B               	bnz	u8300
 37657   0079A8  0E13               	movlw	19
 37658   0079AA  5C0B               	subwf	??_loop^(0+1280),w,c
 37659   0079AC  0E7A               	movlw	122
 37660   0079AE  580C               	subwfb	(??_loop+1)^(0+1280),w,c
 37661   0079B0  A0D8               	btfss	status,0,c
 37662   0079B2  EFDD  F03C         	goto	u8301
 37663   0079B6  EFDF  F03C         	goto	u8300
 37664   0079BA                     u8301:
 37665   0079BA  EFEB  F03C         	goto	l10960
 37666   0079BE                     u8300:
 37667   0079BE                     
 37668                           ; BSR set to: 5
 37669                           ;../main.c: 257:         doFlash();
 37670   0079BE  EC68  F00F         	call	_doFlash	;wreg free
 37671   0079C2                     
 37672                           ;../main.c: 258:         flashTime.val = tickGet();
 37673   0079C2  EC18  F03A         	call	_tickGet	;wreg free
 37674   0079C6  C501  F580         	movff	?_tickGet,_flashTime
 37675   0079CA  C502  F581         	movff	?_tickGet+1,_flashTime+1
 37676   0079CE  C503  F582         	movff	?_tickGet+2,_flashTime+2
 37677   0079D2  C504  F583         	movff	?_tickGet+3,_flashTime+3
 37678   0079D6                     l10960:
 37679                           
 37680                           ;../main.c: 261:     refreshString();
 37681   0079D6  EC1B  F040         	call	_refreshString	;wreg free
 37682   0079DA  0012               	return		;funcret
 37683   0079DC                     __end_of_loop:
 37684                           	callstack 0
 37685                           
 37686 ;; *************** function _refreshString *****************
 37687 ;; Defined at:
 37688 ;;		line 371 in file "../canargb_leds.c"
 37689 ;; Parameters:    Size  Location     Type
 37690 ;;		None
 37691 ;; Auto vars:     Size  Location     Type
 37692 ;;  offset          2    0        unsigned short 
 37693 ;; Return value:  Size  Location     Type
 37694 ;;                  1    wreg      void 
 37695 ;; Registers used:
 37696 ;;		wreg, status,2
 37697 ;; Tracked objects:
 37698 ;;		On entry : 0/0
 37699 ;;		On exit  : 0/0
 37700 ;;		Unchanged: 0/0
 37701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37706 ;;Total ram usage:        0 bytes
 37707 ;; Hardware stack levels used: 1
 37708 ;; Hardware stack levels required when called: 1
 37709 ;; This function calls:
 37710 ;;		Nothing
 37711 ;; This function is called by:
 37712 ;;		_loop
 37713 ;; This function uses a non-reentrant model
 37714 ;;
 37715                           
 37716                           	psect	text102
 37717   008036                     __ptext102:
 37718                           	callstack 0
 37719   008036                     _refreshString:
 37720                           	callstack 124
 37721   008036                     
 37722                           ;../canargb_leds.c: 372:     uint16_t offset;;../canargb_leds.c: 377:     if (refreshReq
      +                          uired) {
 37723   008036  0105               	movlb	5	; () banked
 37724   008038  51AB               	movf	_refreshRequired& (0+255),w,b
 37725   00803A  B4D8               	btfsc	status,2,c
 37726   00803C  EF22  F040         	goto	u6691
 37727   008040  EF24  F040         	goto	u6690
 37728   008044                     u6691:
 37729   008044  EF31  F040         	goto	l284
 37730   008048                     u6690:
 37731   008048                     
 37732                           ; BSR set to: 5
 37733                           ;../canargb_leds.c: 378:         refreshRequired = 0;
 37734   008048  6BAB               	clrf	_refreshRequired& (0+255),b
 37735   00804A                     
 37736                           ; BSR set to: 5
 37737                           ;../canargb_leds.c: 381:         SPI1TCNT = 3 * 255;
 37738   00804A  0E02               	movlw	2
 37739   00804C  0100               	movlb	0	; () banked
 37740   00804E  6F83               	movwf	131,b	;volatile
 37741   008050  0EFD               	movlw	253
 37742   008052  6F82               	movwf	130,b	;volatile
 37743   008054                     
 37744                           ; BSR set to: 0
 37745                           ;../canargb_leds.c: 382:         DMAnCON0bits.SIRQEN = 1;
 37746   008054  8DFC               	bsf	252,6,b	;volatile
 37747   008056                     
 37748                           ; BSR set to: 0
 37749                           ;../canargb_leds.c: 394: LATCbits.LATC6 = flashState;
 37750   008056  0105               	movlb	5	; () banked
 37751   008058  B1AC               	btfsc	_flashState& (0+255),0,b
 37752   00805A  D002               	bra	u6705
 37753   00805C  9CC0               	bcf	192,6,c	;volatile
 37754   00805E  D001               	bra	u6706
 37755   008060                     u6705:
 37756   008060  8CC0               	bsf	192,6,c	;volatile
 37757   008062                     u6706:
 37758   008062                     l284:
 37759   008062  0012               	return		;funcret
 37760   008064                     __end_of_refreshString:
 37761                           	callstack 0
 37762                           
 37763 ;; *************** function _doFlash *****************
 37764 ;; Defined at:
 37765 ;;		line 282 in file "../canargb_leds.c"
 37766 ;; Parameters:    Size  Location     Type
 37767 ;;		None
 37768 ;; Auto vars:     Size  Location     Type
 37769 ;;  ledno           1    5[COMRAM] unsigned char 
 37770 ;;  order           1    4[COMRAM] unsigned char 
 37771 ;; Return value:  Size  Location     Type
 37772 ;;                  1    wreg      void 
 37773 ;; Registers used:
 37774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37775 ;; Tracked objects:
 37776 ;;		On entry : 0/0
 37777 ;;		On exit  : 0/0
 37778 ;;		Unchanged: 0/0
 37779 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37784 ;;Total ram usage:        2 bytes
 37785 ;; Hardware stack levels used: 1
 37786 ;; Hardware stack levels required when called: 2
 37787 ;; This function calls:
 37788 ;;		_getNV
 37789 ;; This function is called by:
 37790 ;;		_loop
 37791 ;; This function uses a non-reentrant model
 37792 ;;
 37793                           
 37794                           	psect	text103
 37795   001ED0                     __ptext103:
 37796                           	callstack 0
 37797   001ED0                     _doFlash:
 37798                           	callstack 123
 37799   001ED0                     
 37800                           ;../canargb_leds.c: 283:     uint8_t ledno;;../canargb_leds.c: 284:     uint8_t order;;.
      +                          ./canargb_leds.c: 286:     flashState = 1-flashState;
 37801   001ED0  0105               	movlb	5	; () banked
 37802   001ED2  51AC               	movf	_flashState& (0+255),w,b
 37803   001ED4  0801               	sublw	1
 37804   001ED6  6FAC               	movwf	_flashState& (0+255),b
 37805   001ED8                     
 37806                           ; BSR set to: 5
 37807                           ;../canargb_leds.c: 287:     order = (uint8_t)getNV(49);
 37808   001ED8  0E31               	movlw	49
 37809   001EDA  EC43  F03D         	call	_getNV
 37810   001EDE  5001               	movf	?_getNV^(0+1280),w,c
 37811   001EE0  6E05               	movwf	doFlash@order^(0+1280),c
 37812   001EE2                     
 37813                           ;../canargb_leds.c: 289:     for (ledno=0; ledno < 255; ledno++) {
 37814   001EE2  6A06               	clrf	doFlash@ledno^(0+1280),c
 37815   001EE4                     l9326:
 37816                           
 37817                           ;../canargb_leds.c: 290:         if (flashState) {
 37818   001EE4  0105               	movlb	5	; () banked
 37819   001EE6  51AC               	movf	_flashState& (0+255),w,b
 37820   001EE8  B4D8               	btfsc	status,2,c
 37821   001EEA  EF79  F00F         	goto	u6671
 37822   001EEE  EF7B  F00F         	goto	u6670
 37823   001EF2                     u6671:
 37824   001EF2  EFDC  F012         	goto	l9360
 37825   001EF6                     u6670:
 37826   001EF6  EF21  F011         	goto	l9344
 37827   001EFA                     l9330:
 37828                           
 37829                           ; BSR set to: 5
 37830                           ;../canargb_leds.c: 293:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37831   001EFA  0E00               	movlw	low _ledPaletteIndexes
 37832   001EFC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37833   001EFE  6ED9               	movwf	fsr2l,c
 37834   001F00  6ADA               	clrf	fsr2h,c
 37835   001F02  0E07               	movlw	high _ledPaletteIndexes
 37836   001F04  22DA               	addwfc	fsr2h,f,c
 37837   001F06  50DF               	movf	223,w,c
 37838   001F08  0B0F               	andlw	15
 37839   001F0A  0D03               	mullw	3
 37840   001F0C  28F3               	incf	243,w,c
 37841   001F0E  EC43  F03D         	call	_getNV
 37842   001F12  5006               	movf	doFlash@ledno^(0+1280),w,c
 37843   001F14  0D03               	mullw	3
 37844   001F16  0E7C               	movlw	low _leds
 37845   001F18  24F3               	addwf	243,w,c
 37846   001F1A  6ED9               	movwf	fsr2l,c
 37847   001F1C  0E0B               	movlw	high _leds
 37848   001F1E  20F4               	addwfc	prodh,w,c
 37849   001F20  6EDA               	movwf	fsr2h,c
 37850   001F22  C501  F4DF         	movff	?_getNV,indf2
 37851                           
 37852                           ;../canargb_leds.c: 294:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37853   001F26  0E00               	movlw	low _ledPaletteIndexes
 37854   001F28  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37855   001F2A  6ED9               	movwf	fsr2l,c
 37856   001F2C  6ADA               	clrf	fsr2h,c
 37857   001F2E  0E07               	movlw	high _ledPaletteIndexes
 37858   001F30  22DA               	addwfc	fsr2h,f,c
 37859   001F32  50DF               	movf	223,w,c
 37860   001F34  0B0F               	andlw	15
 37861   001F36  0D03               	mullw	3
 37862   001F38  50F3               	movf	243,w,c
 37863   001F3A  0F02               	addlw	2
 37864   001F3C  EC43  F03D         	call	_getNV
 37865   001F40  5006               	movf	doFlash@ledno^(0+1280),w,c
 37866   001F42  0D03               	mullw	3
 37867   001F44  0E7D               	movlw	low (_leds+1)
 37868   001F46  24F3               	addwf	243,w,c
 37869   001F48  6ED9               	movwf	fsr2l,c
 37870   001F4A  0E0B               	movlw	high (_leds+1)
 37871   001F4C  20F4               	addwfc	prodh,w,c
 37872   001F4E  6EDA               	movwf	fsr2h,c
 37873   001F50  C501  F4DF         	movff	?_getNV,indf2
 37874                           
 37875                           ;../canargb_leds.c: 295:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37876   001F54  0E00               	movlw	low _ledPaletteIndexes
 37877   001F56  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37878   001F58  6ED9               	movwf	fsr2l,c
 37879   001F5A  6ADA               	clrf	fsr2h,c
 37880   001F5C  0E07               	movlw	high _ledPaletteIndexes
 37881   001F5E  22DA               	addwfc	fsr2h,f,c
 37882   001F60  50DF               	movf	223,w,c
 37883   001F62  0B0F               	andlw	15
 37884   001F64  0D03               	mullw	3
 37885   001F66  50F3               	movf	243,w,c
 37886   001F68  0F03               	addlw	3
 37887   001F6A  EC43  F03D         	call	_getNV
 37888   001F6E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37889   001F70  0D03               	mullw	3
 37890   001F72  0E7E               	movlw	low (_leds+2)
 37891   001F74  24F3               	addwf	243,w,c
 37892   001F76  6ED9               	movwf	fsr2l,c
 37893   001F78  0E0B               	movlw	high (_leds+2)
 37894   001F7A  20F4               	addwfc	prodh,w,c
 37895   001F7C  6EDA               	movwf	fsr2h,c
 37896   001F7E  C501  F4DF         	movff	?_getNV,indf2
 37897                           
 37898                           ;../canargb_leds.c: 296:                     break;
 37899   001F82  EFF3  F012         	goto	l9362
 37900   001F86                     l9332:
 37901                           
 37902                           ; BSR set to: 5
 37903                           ;../canargb_leds.c: 298:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37904   001F86  0E00               	movlw	low _ledPaletteIndexes
 37905   001F88  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37906   001F8A  6ED9               	movwf	fsr2l,c
 37907   001F8C  6ADA               	clrf	fsr2h,c
 37908   001F8E  0E07               	movlw	high _ledPaletteIndexes
 37909   001F90  22DA               	addwfc	fsr2h,f,c
 37910   001F92  50DF               	movf	223,w,c
 37911   001F94  0B0F               	andlw	15
 37912   001F96  0D03               	mullw	3
 37913   001F98  28F3               	incf	243,w,c
 37914   001F9A  EC43  F03D         	call	_getNV
 37915   001F9E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37916   001FA0  0D03               	mullw	3
 37917   001FA2  0E7C               	movlw	low _leds
 37918   001FA4  24F3               	addwf	243,w,c
 37919   001FA6  6ED9               	movwf	fsr2l,c
 37920   001FA8  0E0B               	movlw	high _leds
 37921   001FAA  20F4               	addwfc	prodh,w,c
 37922   001FAC  6EDA               	movwf	fsr2h,c
 37923   001FAE  C501  F4DF         	movff	?_getNV,indf2
 37924                           
 37925                           ;../canargb_leds.c: 299:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37926   001FB2  0E00               	movlw	low _ledPaletteIndexes
 37927   001FB4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37928   001FB6  6ED9               	movwf	fsr2l,c
 37929   001FB8  6ADA               	clrf	fsr2h,c
 37930   001FBA  0E07               	movlw	high _ledPaletteIndexes
 37931   001FBC  22DA               	addwfc	fsr2h,f,c
 37932   001FBE  50DF               	movf	223,w,c
 37933   001FC0  0B0F               	andlw	15
 37934   001FC2  0D03               	mullw	3
 37935   001FC4  50F3               	movf	243,w,c
 37936   001FC6  0F02               	addlw	2
 37937   001FC8  EC43  F03D         	call	_getNV
 37938   001FCC  5006               	movf	doFlash@ledno^(0+1280),w,c
 37939   001FCE  0D03               	mullw	3
 37940   001FD0  0E7E               	movlw	low (_leds+2)
 37941   001FD2  24F3               	addwf	243,w,c
 37942   001FD4  6ED9               	movwf	fsr2l,c
 37943   001FD6  0E0B               	movlw	high (_leds+2)
 37944   001FD8  20F4               	addwfc	prodh,w,c
 37945   001FDA  6EDA               	movwf	fsr2h,c
 37946   001FDC  C501  F4DF         	movff	?_getNV,indf2
 37947                           
 37948                           ;../canargb_leds.c: 300:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37949   001FE0  0E00               	movlw	low _ledPaletteIndexes
 37950   001FE2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37951   001FE4  6ED9               	movwf	fsr2l,c
 37952   001FE6  6ADA               	clrf	fsr2h,c
 37953   001FE8  0E07               	movlw	high _ledPaletteIndexes
 37954   001FEA  22DA               	addwfc	fsr2h,f,c
 37955   001FEC  50DF               	movf	223,w,c
 37956   001FEE  0B0F               	andlw	15
 37957   001FF0  0D03               	mullw	3
 37958   001FF2  50F3               	movf	243,w,c
 37959   001FF4  0F03               	addlw	3
 37960   001FF6  EC43  F03D         	call	_getNV
 37961   001FFA  5006               	movf	doFlash@ledno^(0+1280),w,c
 37962   001FFC  0D03               	mullw	3
 37963   001FFE  0E7D               	movlw	low (_leds+1)
 37964   002000  24F3               	addwf	243,w,c
 37965   002002  6ED9               	movwf	fsr2l,c
 37966   002004  0E0B               	movlw	high (_leds+1)
 37967   002006  20F4               	addwfc	prodh,w,c
 37968   002008  6EDA               	movwf	fsr2h,c
 37969   00200A  C501  F4DF         	movff	?_getNV,indf2
 37970                           
 37971                           ;../canargb_leds.c: 301:                     break;
 37972   00200E  EFF3  F012         	goto	l9362
 37973   002012                     l9334:
 37974                           
 37975                           ; BSR set to: 5
 37976                           ;../canargb_leds.c: 303:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37977   002012  0E00               	movlw	low _ledPaletteIndexes
 37978   002014  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37979   002016  6ED9               	movwf	fsr2l,c
 37980   002018  6ADA               	clrf	fsr2h,c
 37981   00201A  0E07               	movlw	high _ledPaletteIndexes
 37982   00201C  22DA               	addwfc	fsr2h,f,c
 37983   00201E  50DF               	movf	223,w,c
 37984   002020  0B0F               	andlw	15
 37985   002022  0D03               	mullw	3
 37986   002024  28F3               	incf	243,w,c
 37987   002026  EC43  F03D         	call	_getNV
 37988   00202A  5006               	movf	doFlash@ledno^(0+1280),w,c
 37989   00202C  0D03               	mullw	3
 37990   00202E  0E7E               	movlw	low (_leds+2)
 37991   002030  24F3               	addwf	243,w,c
 37992   002032  6ED9               	movwf	fsr2l,c
 37993   002034  0E0B               	movlw	high (_leds+2)
 37994   002036  20F4               	addwfc	prodh,w,c
 37995   002038  6EDA               	movwf	fsr2h,c
 37996   00203A  C501  F4DF         	movff	?_getNV,indf2
 37997                           
 37998                           ;../canargb_leds.c: 304:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37999   00203E  0E00               	movlw	low _ledPaletteIndexes
 38000   002040  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38001   002042  6ED9               	movwf	fsr2l,c
 38002   002044  6ADA               	clrf	fsr2h,c
 38003   002046  0E07               	movlw	high _ledPaletteIndexes
 38004   002048  22DA               	addwfc	fsr2h,f,c
 38005   00204A  50DF               	movf	223,w,c
 38006   00204C  0B0F               	andlw	15
 38007   00204E  0D03               	mullw	3
 38008   002050  50F3               	movf	243,w,c
 38009   002052  0F02               	addlw	2
 38010   002054  EC43  F03D         	call	_getNV
 38011   002058  5006               	movf	doFlash@ledno^(0+1280),w,c
 38012   00205A  0D03               	mullw	3
 38013   00205C  0E7C               	movlw	low _leds
 38014   00205E  24F3               	addwf	243,w,c
 38015   002060  6ED9               	movwf	fsr2l,c
 38016   002062  0E0B               	movlw	high _leds
 38017   002064  20F4               	addwfc	prodh,w,c
 38018   002066  6EDA               	movwf	fsr2h,c
 38019   002068  C501  F4DF         	movff	?_getNV,indf2
 38020                           
 38021                           ;../canargb_leds.c: 305:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38022   00206C  0E00               	movlw	low _ledPaletteIndexes
 38023   00206E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38024   002070  6ED9               	movwf	fsr2l,c
 38025   002072  6ADA               	clrf	fsr2h,c
 38026   002074  0E07               	movlw	high _ledPaletteIndexes
 38027   002076  22DA               	addwfc	fsr2h,f,c
 38028   002078  50DF               	movf	223,w,c
 38029   00207A  0B0F               	andlw	15
 38030   00207C  0D03               	mullw	3
 38031   00207E  50F3               	movf	243,w,c
 38032   002080  0F03               	addlw	3
 38033   002082  EC43  F03D         	call	_getNV
 38034   002086  5006               	movf	doFlash@ledno^(0+1280),w,c
 38035   002088  0D03               	mullw	3
 38036   00208A  0E7D               	movlw	low (_leds+1)
 38037   00208C  24F3               	addwf	243,w,c
 38038   00208E  6ED9               	movwf	fsr2l,c
 38039   002090  0E0B               	movlw	high (_leds+1)
 38040   002092  20F4               	addwfc	prodh,w,c
 38041   002094  6EDA               	movwf	fsr2h,c
 38042   002096  C501  F4DF         	movff	?_getNV,indf2
 38043                           
 38044                           ;../canargb_leds.c: 306:                     break;
 38045   00209A  EFF3  F012         	goto	l9362
 38046   00209E                     l9336:
 38047                           
 38048                           ; BSR set to: 5
 38049                           ;../canargb_leds.c: 308:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38050   00209E  0E00               	movlw	low _ledPaletteIndexes
 38051   0020A0  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38052   0020A2  6ED9               	movwf	fsr2l,c
 38053   0020A4  6ADA               	clrf	fsr2h,c
 38054   0020A6  0E07               	movlw	high _ledPaletteIndexes
 38055   0020A8  22DA               	addwfc	fsr2h,f,c
 38056   0020AA  50DF               	movf	223,w,c
 38057   0020AC  0B0F               	andlw	15
 38058   0020AE  0D03               	mullw	3
 38059   0020B0  28F3               	incf	243,w,c
 38060   0020B2  EC43  F03D         	call	_getNV
 38061   0020B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38062   0020B8  0D03               	mullw	3
 38063   0020BA  0E7D               	movlw	low (_leds+1)
 38064   0020BC  24F3               	addwf	243,w,c
 38065   0020BE  6ED9               	movwf	fsr2l,c
 38066   0020C0  0E0B               	movlw	high (_leds+1)
 38067   0020C2  20F4               	addwfc	prodh,w,c
 38068   0020C4  6EDA               	movwf	fsr2h,c
 38069   0020C6  C501  F4DF         	movff	?_getNV,indf2
 38070                           
 38071                           ;../canargb_leds.c: 309:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38072   0020CA  0E00               	movlw	low _ledPaletteIndexes
 38073   0020CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38074   0020CE  6ED9               	movwf	fsr2l,c
 38075   0020D0  6ADA               	clrf	fsr2h,c
 38076   0020D2  0E07               	movlw	high _ledPaletteIndexes
 38077   0020D4  22DA               	addwfc	fsr2h,f,c
 38078   0020D6  50DF               	movf	223,w,c
 38079   0020D8  0B0F               	andlw	15
 38080   0020DA  0D03               	mullw	3
 38081   0020DC  50F3               	movf	243,w,c
 38082   0020DE  0F02               	addlw	2
 38083   0020E0  EC43  F03D         	call	_getNV
 38084   0020E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38085   0020E6  0D03               	mullw	3
 38086   0020E8  0E7E               	movlw	low (_leds+2)
 38087   0020EA  24F3               	addwf	243,w,c
 38088   0020EC  6ED9               	movwf	fsr2l,c
 38089   0020EE  0E0B               	movlw	high (_leds+2)
 38090   0020F0  20F4               	addwfc	prodh,w,c
 38091   0020F2  6EDA               	movwf	fsr2h,c
 38092   0020F4  C501  F4DF         	movff	?_getNV,indf2
 38093                           
 38094                           ;../canargb_leds.c: 310:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38095   0020F8  0E00               	movlw	low _ledPaletteIndexes
 38096   0020FA  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38097   0020FC  6ED9               	movwf	fsr2l,c
 38098   0020FE  6ADA               	clrf	fsr2h,c
 38099   002100  0E07               	movlw	high _ledPaletteIndexes
 38100   002102  22DA               	addwfc	fsr2h,f,c
 38101   002104  50DF               	movf	223,w,c
 38102   002106  0B0F               	andlw	15
 38103   002108  0D03               	mullw	3
 38104   00210A  50F3               	movf	243,w,c
 38105   00210C  0F03               	addlw	3
 38106   00210E  EC43  F03D         	call	_getNV
 38107   002112  5006               	movf	doFlash@ledno^(0+1280),w,c
 38108   002114  0D03               	mullw	3
 38109   002116  0E7C               	movlw	low _leds
 38110   002118  24F3               	addwf	243,w,c
 38111   00211A  6ED9               	movwf	fsr2l,c
 38112   00211C  0E0B               	movlw	high _leds
 38113   00211E  20F4               	addwfc	prodh,w,c
 38114   002120  6EDA               	movwf	fsr2h,c
 38115   002122  C501  F4DF         	movff	?_getNV,indf2
 38116                           
 38117                           ;../canargb_leds.c: 311:                     break;
 38118   002126  EFF3  F012         	goto	l9362
 38119   00212A                     l9338:
 38120                           
 38121                           ; BSR set to: 5
 38122                           ;../canargb_leds.c: 313:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38123   00212A  0E00               	movlw	low _ledPaletteIndexes
 38124   00212C  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38125   00212E  6ED9               	movwf	fsr2l,c
 38126   002130  6ADA               	clrf	fsr2h,c
 38127   002132  0E07               	movlw	high _ledPaletteIndexes
 38128   002134  22DA               	addwfc	fsr2h,f,c
 38129   002136  50DF               	movf	223,w,c
 38130   002138  0B0F               	andlw	15
 38131   00213A  0D03               	mullw	3
 38132   00213C  28F3               	incf	243,w,c
 38133   00213E  EC43  F03D         	call	_getNV
 38134   002142  5006               	movf	doFlash@ledno^(0+1280),w,c
 38135   002144  0D03               	mullw	3
 38136   002146  0E7E               	movlw	low (_leds+2)
 38137   002148  24F3               	addwf	243,w,c
 38138   00214A  6ED9               	movwf	fsr2l,c
 38139   00214C  0E0B               	movlw	high (_leds+2)
 38140   00214E  20F4               	addwfc	prodh,w,c
 38141   002150  6EDA               	movwf	fsr2h,c
 38142   002152  C501  F4DF         	movff	?_getNV,indf2
 38143                           
 38144                           ;../canargb_leds.c: 314:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38145   002156  0E00               	movlw	low _ledPaletteIndexes
 38146   002158  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38147   00215A  6ED9               	movwf	fsr2l,c
 38148   00215C  6ADA               	clrf	fsr2h,c
 38149   00215E  0E07               	movlw	high _ledPaletteIndexes
 38150   002160  22DA               	addwfc	fsr2h,f,c
 38151   002162  50DF               	movf	223,w,c
 38152   002164  0B0F               	andlw	15
 38153   002166  0D03               	mullw	3
 38154   002168  50F3               	movf	243,w,c
 38155   00216A  0F02               	addlw	2
 38156   00216C  EC43  F03D         	call	_getNV
 38157   002170  5006               	movf	doFlash@ledno^(0+1280),w,c
 38158   002172  0D03               	mullw	3
 38159   002174  0E7D               	movlw	low (_leds+1)
 38160   002176  24F3               	addwf	243,w,c
 38161   002178  6ED9               	movwf	fsr2l,c
 38162   00217A  0E0B               	movlw	high (_leds+1)
 38163   00217C  20F4               	addwfc	prodh,w,c
 38164   00217E  6EDA               	movwf	fsr2h,c
 38165   002180  C501  F4DF         	movff	?_getNV,indf2
 38166                           
 38167                           ;../canargb_leds.c: 315:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38168   002184  0E00               	movlw	low _ledPaletteIndexes
 38169   002186  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38170   002188  6ED9               	movwf	fsr2l,c
 38171   00218A  6ADA               	clrf	fsr2h,c
 38172   00218C  0E07               	movlw	high _ledPaletteIndexes
 38173   00218E  22DA               	addwfc	fsr2h,f,c
 38174   002190  50DF               	movf	223,w,c
 38175   002192  0B0F               	andlw	15
 38176   002194  0D03               	mullw	3
 38177   002196  50F3               	movf	243,w,c
 38178   002198  0F03               	addlw	3
 38179   00219A  EC43  F03D         	call	_getNV
 38180   00219E  5006               	movf	doFlash@ledno^(0+1280),w,c
 38181   0021A0  0D03               	mullw	3
 38182   0021A2  0E7C               	movlw	low _leds
 38183   0021A4  24F3               	addwf	243,w,c
 38184   0021A6  6ED9               	movwf	fsr2l,c
 38185   0021A8  0E0B               	movlw	high _leds
 38186   0021AA  20F4               	addwfc	prodh,w,c
 38187   0021AC  6EDA               	movwf	fsr2h,c
 38188   0021AE  C501  F4DF         	movff	?_getNV,indf2
 38189                           
 38190                           ;../canargb_leds.c: 316:                     break;
 38191   0021B2  EFF3  F012         	goto	l9362
 38192   0021B6                     l9340:
 38193                           
 38194                           ; BSR set to: 5
 38195                           ;../canargb_leds.c: 318:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38196   0021B6  0E00               	movlw	low _ledPaletteIndexes
 38197   0021B8  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38198   0021BA  6ED9               	movwf	fsr2l,c
 38199   0021BC  6ADA               	clrf	fsr2h,c
 38200   0021BE  0E07               	movlw	high _ledPaletteIndexes
 38201   0021C0  22DA               	addwfc	fsr2h,f,c
 38202   0021C2  50DF               	movf	223,w,c
 38203   0021C4  0B0F               	andlw	15
 38204   0021C6  0D03               	mullw	3
 38205   0021C8  28F3               	incf	243,w,c
 38206   0021CA  EC43  F03D         	call	_getNV
 38207   0021CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38208   0021D0  0D03               	mullw	3
 38209   0021D2  0E7D               	movlw	low (_leds+1)
 38210   0021D4  24F3               	addwf	243,w,c
 38211   0021D6  6ED9               	movwf	fsr2l,c
 38212   0021D8  0E0B               	movlw	high (_leds+1)
 38213   0021DA  20F4               	addwfc	prodh,w,c
 38214   0021DC  6EDA               	movwf	fsr2h,c
 38215   0021DE  C501  F4DF         	movff	?_getNV,indf2
 38216                           
 38217                           ;../canargb_leds.c: 319:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38218   0021E2  0E00               	movlw	low _ledPaletteIndexes
 38219   0021E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38220   0021E6  6ED9               	movwf	fsr2l,c
 38221   0021E8  6ADA               	clrf	fsr2h,c
 38222   0021EA  0E07               	movlw	high _ledPaletteIndexes
 38223   0021EC  22DA               	addwfc	fsr2h,f,c
 38224   0021EE  50DF               	movf	223,w,c
 38225   0021F0  0B0F               	andlw	15
 38226   0021F2  0D03               	mullw	3
 38227   0021F4  50F3               	movf	243,w,c
 38228   0021F6  0F02               	addlw	2
 38229   0021F8  EC43  F03D         	call	_getNV
 38230   0021FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38231   0021FE  0D03               	mullw	3
 38232   002200  0E7C               	movlw	low _leds
 38233   002202  24F3               	addwf	243,w,c
 38234   002204  6ED9               	movwf	fsr2l,c
 38235   002206  0E0B               	movlw	high _leds
 38236   002208  20F4               	addwfc	prodh,w,c
 38237   00220A  6EDA               	movwf	fsr2h,c
 38238   00220C  C501  F4DF         	movff	?_getNV,indf2
 38239                           
 38240                           ;../canargb_leds.c: 320:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38241   002210  0E00               	movlw	low _ledPaletteIndexes
 38242   002212  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38243   002214  6ED9               	movwf	fsr2l,c
 38244   002216  6ADA               	clrf	fsr2h,c
 38245   002218  0E07               	movlw	high _ledPaletteIndexes
 38246   00221A  22DA               	addwfc	fsr2h,f,c
 38247   00221C  50DF               	movf	223,w,c
 38248   00221E  0B0F               	andlw	15
 38249   002220  0D03               	mullw	3
 38250   002222  50F3               	movf	243,w,c
 38251   002224  0F03               	addlw	3
 38252   002226  EC43  F03D         	call	_getNV
 38253   00222A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38254   00222C  0D03               	mullw	3
 38255   00222E  0E7E               	movlw	low (_leds+2)
 38256   002230  24F3               	addwf	243,w,c
 38257   002232  6ED9               	movwf	fsr2l,c
 38258   002234  0E0B               	movlw	high (_leds+2)
 38259   002236  20F4               	addwfc	prodh,w,c
 38260   002238  6EDA               	movwf	fsr2h,c
 38261   00223A  C501  F4DF         	movff	?_getNV,indf2
 38262                           
 38263                           ;../canargb_leds.c: 321:                     break;
 38264   00223E  EFF3  F012         	goto	l9362
 38265   002242                     l9344:
 38266                           
 38267                           ; BSR set to: 5
 38268   002242  5005               	movf	doFlash@order^(0+1280),w,c
 38269                           
 38270                           ; Switch size 1, requested type "simple"
 38271                           ; Number of cases is 5, Range of values is 1 to 6
 38272                           ; switch strategies available:
 38273                           ; Name         Instructions Cycles
 38274                           ; simple_byte           16     9 (average)
 38275                           ;	Chosen strategy is simple_byte
 38276   002244  0A01               	xorlw	1	; case 1
 38277   002246  B4D8               	btfsc	status,2,c
 38278   002248  EF7D  F00F         	goto	l9330
 38279   00224C  0A03               	xorlw	3	; case 2
 38280   00224E  B4D8               	btfsc	status,2,c
 38281   002250  EFC3  F00F         	goto	l9332
 38282   002254  0A06               	xorlw	6	; case 4
 38283   002256  B4D8               	btfsc	status,2,c
 38284   002258  EF09  F010         	goto	l9334
 38285   00225C  0A01               	xorlw	1	; case 5
 38286   00225E  B4D8               	btfsc	status,2,c
 38287   002260  EF95  F010         	goto	l9338
 38288   002264  0A03               	xorlw	3	; case 6
 38289   002266  B4D8               	btfsc	status,2,c
 38290   002268  EF4F  F010         	goto	l9336
 38291   00226C  EFDB  F010         	goto	l9340
 38292   002270                     l9346:
 38293                           
 38294                           ; BSR set to: 5
 38295                           ;../canargb_leds.c: 327:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38296   002270  0E00               	movlw	low _ledPaletteIndexes
 38297   002272  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38298   002274  6ED9               	movwf	fsr2l,c
 38299   002276  6ADA               	clrf	fsr2h,c
 38300   002278  0E07               	movlw	high _ledPaletteIndexes
 38301   00227A  22DA               	addwfc	fsr2h,f,c
 38302   00227C  38DF               	swapf	223,w,c
 38303   00227E  0B0F               	andlw	15
 38304   002280  0D03               	mullw	3
 38305   002282  28F3               	incf	243,w,c
 38306   002284  EC43  F03D         	call	_getNV
 38307   002288  5006               	movf	doFlash@ledno^(0+1280),w,c
 38308   00228A  0D03               	mullw	3
 38309   00228C  0E7C               	movlw	low _leds
 38310   00228E  24F3               	addwf	243,w,c
 38311   002290  6ED9               	movwf	fsr2l,c
 38312   002292  0E0B               	movlw	high _leds
 38313   002294  20F4               	addwfc	prodh,w,c
 38314   002296  6EDA               	movwf	fsr2h,c
 38315   002298  C501  F4DF         	movff	?_getNV,indf2
 38316                           
 38317                           ;../canargb_leds.c: 328:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38318   00229C  0E00               	movlw	low _ledPaletteIndexes
 38319   00229E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38320   0022A0  6ED9               	movwf	fsr2l,c
 38321   0022A2  6ADA               	clrf	fsr2h,c
 38322   0022A4  0E07               	movlw	high _ledPaletteIndexes
 38323   0022A6  22DA               	addwfc	fsr2h,f,c
 38324   0022A8  38DF               	swapf	223,w,c
 38325   0022AA  0B0F               	andlw	15
 38326   0022AC  0D03               	mullw	3
 38327   0022AE  50F3               	movf	243,w,c
 38328   0022B0  0F02               	addlw	2
 38329   0022B2  EC43  F03D         	call	_getNV
 38330   0022B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38331   0022B8  0D03               	mullw	3
 38332   0022BA  0E7D               	movlw	low (_leds+1)
 38333   0022BC  24F3               	addwf	243,w,c
 38334   0022BE  6ED9               	movwf	fsr2l,c
 38335   0022C0  0E0B               	movlw	high (_leds+1)
 38336   0022C2  20F4               	addwfc	prodh,w,c
 38337   0022C4  6EDA               	movwf	fsr2h,c
 38338   0022C6  C501  F4DF         	movff	?_getNV,indf2
 38339                           
 38340                           ;../canargb_leds.c: 329:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38341   0022CA  0E00               	movlw	low _ledPaletteIndexes
 38342   0022CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38343   0022CE  6ED9               	movwf	fsr2l,c
 38344   0022D0  6ADA               	clrf	fsr2h,c
 38345   0022D2  0E07               	movlw	high _ledPaletteIndexes
 38346   0022D4  22DA               	addwfc	fsr2h,f,c
 38347   0022D6  38DF               	swapf	223,w,c
 38348   0022D8  0B0F               	andlw	15
 38349   0022DA  0D03               	mullw	3
 38350   0022DC  50F3               	movf	243,w,c
 38351   0022DE  0F03               	addlw	3
 38352   0022E0  EC43  F03D         	call	_getNV
 38353   0022E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38354   0022E6  0D03               	mullw	3
 38355   0022E8  0E7E               	movlw	low (_leds+2)
 38356   0022EA  24F3               	addwf	243,w,c
 38357   0022EC  6ED9               	movwf	fsr2l,c
 38358   0022EE  0E0B               	movlw	high (_leds+2)
 38359   0022F0  20F4               	addwfc	prodh,w,c
 38360   0022F2  6EDA               	movwf	fsr2h,c
 38361   0022F4  C501  F4DF         	movff	?_getNV,indf2
 38362                           
 38363                           ;../canargb_leds.c: 330:                     break;
 38364   0022F8  EFF3  F012         	goto	l9362
 38365   0022FC                     l9348:
 38366                           
 38367                           ; BSR set to: 5
 38368                           ;../canargb_leds.c: 332:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38369   0022FC  0E00               	movlw	low _ledPaletteIndexes
 38370   0022FE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38371   002300  6ED9               	movwf	fsr2l,c
 38372   002302  6ADA               	clrf	fsr2h,c
 38373   002304  0E07               	movlw	high _ledPaletteIndexes
 38374   002306  22DA               	addwfc	fsr2h,f,c
 38375   002308  38DF               	swapf	223,w,c
 38376   00230A  0B0F               	andlw	15
 38377   00230C  0D03               	mullw	3
 38378   00230E  28F3               	incf	243,w,c
 38379   002310  EC43  F03D         	call	_getNV
 38380   002314  5006               	movf	doFlash@ledno^(0+1280),w,c
 38381   002316  0D03               	mullw	3
 38382   002318  0E7C               	movlw	low _leds
 38383   00231A  24F3               	addwf	243,w,c
 38384   00231C  6ED9               	movwf	fsr2l,c
 38385   00231E  0E0B               	movlw	high _leds
 38386   002320  20F4               	addwfc	prodh,w,c
 38387   002322  6EDA               	movwf	fsr2h,c
 38388   002324  C501  F4DF         	movff	?_getNV,indf2
 38389                           
 38390                           ;../canargb_leds.c: 333:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38391   002328  0E00               	movlw	low _ledPaletteIndexes
 38392   00232A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38393   00232C  6ED9               	movwf	fsr2l,c
 38394   00232E  6ADA               	clrf	fsr2h,c
 38395   002330  0E07               	movlw	high _ledPaletteIndexes
 38396   002332  22DA               	addwfc	fsr2h,f,c
 38397   002334  38DF               	swapf	223,w,c
 38398   002336  0B0F               	andlw	15
 38399   002338  0D03               	mullw	3
 38400   00233A  50F3               	movf	243,w,c
 38401   00233C  0F02               	addlw	2
 38402   00233E  EC43  F03D         	call	_getNV
 38403   002342  5006               	movf	doFlash@ledno^(0+1280),w,c
 38404   002344  0D03               	mullw	3
 38405   002346  0E7E               	movlw	low (_leds+2)
 38406   002348  24F3               	addwf	243,w,c
 38407   00234A  6ED9               	movwf	fsr2l,c
 38408   00234C  0E0B               	movlw	high (_leds+2)
 38409   00234E  20F4               	addwfc	prodh,w,c
 38410   002350  6EDA               	movwf	fsr2h,c
 38411   002352  C501  F4DF         	movff	?_getNV,indf2
 38412                           
 38413                           ;../canargb_leds.c: 334:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38414   002356  0E00               	movlw	low _ledPaletteIndexes
 38415   002358  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38416   00235A  6ED9               	movwf	fsr2l,c
 38417   00235C  6ADA               	clrf	fsr2h,c
 38418   00235E  0E07               	movlw	high _ledPaletteIndexes
 38419   002360  22DA               	addwfc	fsr2h,f,c
 38420   002362  38DF               	swapf	223,w,c
 38421   002364  0B0F               	andlw	15
 38422   002366  0D03               	mullw	3
 38423   002368  50F3               	movf	243,w,c
 38424   00236A  0F03               	addlw	3
 38425   00236C  EC43  F03D         	call	_getNV
 38426   002370  5006               	movf	doFlash@ledno^(0+1280),w,c
 38427   002372  0D03               	mullw	3
 38428   002374  0E7D               	movlw	low (_leds+1)
 38429   002376  24F3               	addwf	243,w,c
 38430   002378  6ED9               	movwf	fsr2l,c
 38431   00237A  0E0B               	movlw	high (_leds+1)
 38432   00237C  20F4               	addwfc	prodh,w,c
 38433   00237E  6EDA               	movwf	fsr2h,c
 38434   002380  C501  F4DF         	movff	?_getNV,indf2
 38435                           
 38436                           ;../canargb_leds.c: 335:                     break;
 38437   002384  EFF3  F012         	goto	l9362
 38438   002388                     l9350:
 38439                           
 38440                           ; BSR set to: 5
 38441                           ;../canargb_leds.c: 337:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38442   002388  0E00               	movlw	low _ledPaletteIndexes
 38443   00238A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38444   00238C  6ED9               	movwf	fsr2l,c
 38445   00238E  6ADA               	clrf	fsr2h,c
 38446   002390  0E07               	movlw	high _ledPaletteIndexes
 38447   002392  22DA               	addwfc	fsr2h,f,c
 38448   002394  38DF               	swapf	223,w,c
 38449   002396  0B0F               	andlw	15
 38450   002398  0D03               	mullw	3
 38451   00239A  28F3               	incf	243,w,c
 38452   00239C  EC43  F03D         	call	_getNV
 38453   0023A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38454   0023A2  0D03               	mullw	3
 38455   0023A4  0E7E               	movlw	low (_leds+2)
 38456   0023A6  24F3               	addwf	243,w,c
 38457   0023A8  6ED9               	movwf	fsr2l,c
 38458   0023AA  0E0B               	movlw	high (_leds+2)
 38459   0023AC  20F4               	addwfc	prodh,w,c
 38460   0023AE  6EDA               	movwf	fsr2h,c
 38461   0023B0  C501  F4DF         	movff	?_getNV,indf2
 38462                           
 38463                           ;../canargb_leds.c: 338:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38464   0023B4  0E00               	movlw	low _ledPaletteIndexes
 38465   0023B6  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38466   0023B8  6ED9               	movwf	fsr2l,c
 38467   0023BA  6ADA               	clrf	fsr2h,c
 38468   0023BC  0E07               	movlw	high _ledPaletteIndexes
 38469   0023BE  22DA               	addwfc	fsr2h,f,c
 38470   0023C0  38DF               	swapf	223,w,c
 38471   0023C2  0B0F               	andlw	15
 38472   0023C4  0D03               	mullw	3
 38473   0023C6  50F3               	movf	243,w,c
 38474   0023C8  0F02               	addlw	2
 38475   0023CA  EC43  F03D         	call	_getNV
 38476   0023CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38477   0023D0  0D03               	mullw	3
 38478   0023D2  0E7C               	movlw	low _leds
 38479   0023D4  24F3               	addwf	243,w,c
 38480   0023D6  6ED9               	movwf	fsr2l,c
 38481   0023D8  0E0B               	movlw	high _leds
 38482   0023DA  20F4               	addwfc	prodh,w,c
 38483   0023DC  6EDA               	movwf	fsr2h,c
 38484   0023DE  C501  F4DF         	movff	?_getNV,indf2
 38485                           
 38486                           ;../canargb_leds.c: 339:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38487   0023E2  0E00               	movlw	low _ledPaletteIndexes
 38488   0023E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38489   0023E6  6ED9               	movwf	fsr2l,c
 38490   0023E8  6ADA               	clrf	fsr2h,c
 38491   0023EA  0E07               	movlw	high _ledPaletteIndexes
 38492   0023EC  22DA               	addwfc	fsr2h,f,c
 38493   0023EE  38DF               	swapf	223,w,c
 38494   0023F0  0B0F               	andlw	15
 38495   0023F2  0D03               	mullw	3
 38496   0023F4  50F3               	movf	243,w,c
 38497   0023F6  0F03               	addlw	3
 38498   0023F8  EC43  F03D         	call	_getNV
 38499   0023FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38500   0023FE  0D03               	mullw	3
 38501   002400  0E7D               	movlw	low (_leds+1)
 38502   002402  24F3               	addwf	243,w,c
 38503   002404  6ED9               	movwf	fsr2l,c
 38504   002406  0E0B               	movlw	high (_leds+1)
 38505   002408  20F4               	addwfc	prodh,w,c
 38506   00240A  6EDA               	movwf	fsr2h,c
 38507   00240C  C501  F4DF         	movff	?_getNV,indf2
 38508                           
 38509                           ;../canargb_leds.c: 340:                     break;
 38510   002410  EFF3  F012         	goto	l9362
 38511   002414                     l9352:
 38512                           
 38513                           ; BSR set to: 5
 38514                           ;../canargb_leds.c: 342:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38515   002414  0E00               	movlw	low _ledPaletteIndexes
 38516   002416  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38517   002418  6ED9               	movwf	fsr2l,c
 38518   00241A  6ADA               	clrf	fsr2h,c
 38519   00241C  0E07               	movlw	high _ledPaletteIndexes
 38520   00241E  22DA               	addwfc	fsr2h,f,c
 38521   002420  38DF               	swapf	223,w,c
 38522   002422  0B0F               	andlw	15
 38523   002424  0D03               	mullw	3
 38524   002426  28F3               	incf	243,w,c
 38525   002428  EC43  F03D         	call	_getNV
 38526   00242C  5006               	movf	doFlash@ledno^(0+1280),w,c
 38527   00242E  0D03               	mullw	3
 38528   002430  0E7D               	movlw	low (_leds+1)
 38529   002432  24F3               	addwf	243,w,c
 38530   002434  6ED9               	movwf	fsr2l,c
 38531   002436  0E0B               	movlw	high (_leds+1)
 38532   002438  20F4               	addwfc	prodh,w,c
 38533   00243A  6EDA               	movwf	fsr2h,c
 38534   00243C  C501  F4DF         	movff	?_getNV,indf2
 38535                           
 38536                           ;../canargb_leds.c: 343:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38537   002440  0E00               	movlw	low _ledPaletteIndexes
 38538   002442  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38539   002444  6ED9               	movwf	fsr2l,c
 38540   002446  6ADA               	clrf	fsr2h,c
 38541   002448  0E07               	movlw	high _ledPaletteIndexes
 38542   00244A  22DA               	addwfc	fsr2h,f,c
 38543   00244C  38DF               	swapf	223,w,c
 38544   00244E  0B0F               	andlw	15
 38545   002450  0D03               	mullw	3
 38546   002452  50F3               	movf	243,w,c
 38547   002454  0F02               	addlw	2
 38548   002456  EC43  F03D         	call	_getNV
 38549   00245A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38550   00245C  0D03               	mullw	3
 38551   00245E  0E7E               	movlw	low (_leds+2)
 38552   002460  24F3               	addwf	243,w,c
 38553   002462  6ED9               	movwf	fsr2l,c
 38554   002464  0E0B               	movlw	high (_leds+2)
 38555   002466  20F4               	addwfc	prodh,w,c
 38556   002468  6EDA               	movwf	fsr2h,c
 38557   00246A  C501  F4DF         	movff	?_getNV,indf2
 38558                           
 38559                           ;../canargb_leds.c: 344:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38560   00246E  0E00               	movlw	low _ledPaletteIndexes
 38561   002470  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38562   002472  6ED9               	movwf	fsr2l,c
 38563   002474  6ADA               	clrf	fsr2h,c
 38564   002476  0E07               	movlw	high _ledPaletteIndexes
 38565   002478  22DA               	addwfc	fsr2h,f,c
 38566   00247A  38DF               	swapf	223,w,c
 38567   00247C  0B0F               	andlw	15
 38568   00247E  0D03               	mullw	3
 38569   002480  50F3               	movf	243,w,c
 38570   002482  0F03               	addlw	3
 38571   002484  EC43  F03D         	call	_getNV
 38572   002488  5006               	movf	doFlash@ledno^(0+1280),w,c
 38573   00248A  0D03               	mullw	3
 38574   00248C  0E7C               	movlw	low _leds
 38575   00248E  24F3               	addwf	243,w,c
 38576   002490  6ED9               	movwf	fsr2l,c
 38577   002492  0E0B               	movlw	high _leds
 38578   002494  20F4               	addwfc	prodh,w,c
 38579   002496  6EDA               	movwf	fsr2h,c
 38580   002498  C501  F4DF         	movff	?_getNV,indf2
 38581                           
 38582                           ;../canargb_leds.c: 345:                     break;
 38583   00249C  EFF3  F012         	goto	l9362
 38584   0024A0                     l9354:
 38585                           
 38586                           ; BSR set to: 5
 38587                           ;../canargb_leds.c: 347:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38588   0024A0  0E00               	movlw	low _ledPaletteIndexes
 38589   0024A2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38590   0024A4  6ED9               	movwf	fsr2l,c
 38591   0024A6  6ADA               	clrf	fsr2h,c
 38592   0024A8  0E07               	movlw	high _ledPaletteIndexes
 38593   0024AA  22DA               	addwfc	fsr2h,f,c
 38594   0024AC  38DF               	swapf	223,w,c
 38595   0024AE  0B0F               	andlw	15
 38596   0024B0  0D03               	mullw	3
 38597   0024B2  28F3               	incf	243,w,c
 38598   0024B4  EC43  F03D         	call	_getNV
 38599   0024B8  5006               	movf	doFlash@ledno^(0+1280),w,c
 38600   0024BA  0D03               	mullw	3
 38601   0024BC  0E7E               	movlw	low (_leds+2)
 38602   0024BE  24F3               	addwf	243,w,c
 38603   0024C0  6ED9               	movwf	fsr2l,c
 38604   0024C2  0E0B               	movlw	high (_leds+2)
 38605   0024C4  20F4               	addwfc	prodh,w,c
 38606   0024C6  6EDA               	movwf	fsr2h,c
 38607   0024C8  C501  F4DF         	movff	?_getNV,indf2
 38608                           
 38609                           ;../canargb_leds.c: 348:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38610   0024CC  0E00               	movlw	low _ledPaletteIndexes
 38611   0024CE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38612   0024D0  6ED9               	movwf	fsr2l,c
 38613   0024D2  6ADA               	clrf	fsr2h,c
 38614   0024D4  0E07               	movlw	high _ledPaletteIndexes
 38615   0024D6  22DA               	addwfc	fsr2h,f,c
 38616   0024D8  38DF               	swapf	223,w,c
 38617   0024DA  0B0F               	andlw	15
 38618   0024DC  0D03               	mullw	3
 38619   0024DE  50F3               	movf	243,w,c
 38620   0024E0  0F02               	addlw	2
 38621   0024E2  EC43  F03D         	call	_getNV
 38622   0024E6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38623   0024E8  0D03               	mullw	3
 38624   0024EA  0E7D               	movlw	low (_leds+1)
 38625   0024EC  24F3               	addwf	243,w,c
 38626   0024EE  6ED9               	movwf	fsr2l,c
 38627   0024F0  0E0B               	movlw	high (_leds+1)
 38628   0024F2  20F4               	addwfc	prodh,w,c
 38629   0024F4  6EDA               	movwf	fsr2h,c
 38630   0024F6  C501  F4DF         	movff	?_getNV,indf2
 38631                           
 38632                           ;../canargb_leds.c: 349:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38633   0024FA  0E00               	movlw	low _ledPaletteIndexes
 38634   0024FC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38635   0024FE  6ED9               	movwf	fsr2l,c
 38636   002500  6ADA               	clrf	fsr2h,c
 38637   002502  0E07               	movlw	high _ledPaletteIndexes
 38638   002504  22DA               	addwfc	fsr2h,f,c
 38639   002506  38DF               	swapf	223,w,c
 38640   002508  0B0F               	andlw	15
 38641   00250A  0D03               	mullw	3
 38642   00250C  50F3               	movf	243,w,c
 38643   00250E  0F03               	addlw	3
 38644   002510  EC43  F03D         	call	_getNV
 38645   002514  5006               	movf	doFlash@ledno^(0+1280),w,c
 38646   002516  0D03               	mullw	3
 38647   002518  0E7C               	movlw	low _leds
 38648   00251A  24F3               	addwf	243,w,c
 38649   00251C  6ED9               	movwf	fsr2l,c
 38650   00251E  0E0B               	movlw	high _leds
 38651   002520  20F4               	addwfc	prodh,w,c
 38652   002522  6EDA               	movwf	fsr2h,c
 38653   002524  C501  F4DF         	movff	?_getNV,indf2
 38654                           
 38655                           ;../canargb_leds.c: 350:                     break;
 38656   002528  EFF3  F012         	goto	l9362
 38657   00252C                     l9356:
 38658                           
 38659                           ; BSR set to: 5
 38660                           ;../canargb_leds.c: 352:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38661   00252C  0E00               	movlw	low _ledPaletteIndexes
 38662   00252E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38663   002530  6ED9               	movwf	fsr2l,c
 38664   002532  6ADA               	clrf	fsr2h,c
 38665   002534  0E07               	movlw	high _ledPaletteIndexes
 38666   002536  22DA               	addwfc	fsr2h,f,c
 38667   002538  38DF               	swapf	223,w,c
 38668   00253A  0B0F               	andlw	15
 38669   00253C  0D03               	mullw	3
 38670   00253E  28F3               	incf	243,w,c
 38671   002540  EC43  F03D         	call	_getNV
 38672   002544  5006               	movf	doFlash@ledno^(0+1280),w,c
 38673   002546  0D03               	mullw	3
 38674   002548  0E7D               	movlw	low (_leds+1)
 38675   00254A  24F3               	addwf	243,w,c
 38676   00254C  6ED9               	movwf	fsr2l,c
 38677   00254E  0E0B               	movlw	high (_leds+1)
 38678   002550  20F4               	addwfc	prodh,w,c
 38679   002552  6EDA               	movwf	fsr2h,c
 38680   002554  C501  F4DF         	movff	?_getNV,indf2
 38681                           
 38682                           ;../canargb_leds.c: 353:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38683   002558  0E00               	movlw	low _ledPaletteIndexes
 38684   00255A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38685   00255C  6ED9               	movwf	fsr2l,c
 38686   00255E  6ADA               	clrf	fsr2h,c
 38687   002560  0E07               	movlw	high _ledPaletteIndexes
 38688   002562  22DA               	addwfc	fsr2h,f,c
 38689   002564  38DF               	swapf	223,w,c
 38690   002566  0B0F               	andlw	15
 38691   002568  0D03               	mullw	3
 38692   00256A  50F3               	movf	243,w,c
 38693   00256C  0F02               	addlw	2
 38694   00256E  EC43  F03D         	call	_getNV
 38695   002572  5006               	movf	doFlash@ledno^(0+1280),w,c
 38696   002574  0D03               	mullw	3
 38697   002576  0E7C               	movlw	low _leds
 38698   002578  24F3               	addwf	243,w,c
 38699   00257A  6ED9               	movwf	fsr2l,c
 38700   00257C  0E0B               	movlw	high _leds
 38701   00257E  20F4               	addwfc	prodh,w,c
 38702   002580  6EDA               	movwf	fsr2h,c
 38703   002582  C501  F4DF         	movff	?_getNV,indf2
 38704                           
 38705                           ;../canargb_leds.c: 354:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38706   002586  0E00               	movlw	low _ledPaletteIndexes
 38707   002588  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38708   00258A  6ED9               	movwf	fsr2l,c
 38709   00258C  6ADA               	clrf	fsr2h,c
 38710   00258E  0E07               	movlw	high _ledPaletteIndexes
 38711   002590  22DA               	addwfc	fsr2h,f,c
 38712   002592  38DF               	swapf	223,w,c
 38713   002594  0B0F               	andlw	15
 38714   002596  0D03               	mullw	3
 38715   002598  50F3               	movf	243,w,c
 38716   00259A  0F03               	addlw	3
 38717   00259C  EC43  F03D         	call	_getNV
 38718   0025A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38719   0025A2  0D03               	mullw	3
 38720   0025A4  0E7E               	movlw	low (_leds+2)
 38721   0025A6  24F3               	addwf	243,w,c
 38722   0025A8  6ED9               	movwf	fsr2l,c
 38723   0025AA  0E0B               	movlw	high (_leds+2)
 38724   0025AC  20F4               	addwfc	prodh,w,c
 38725   0025AE  6EDA               	movwf	fsr2h,c
 38726   0025B0  C501  F4DF         	movff	?_getNV,indf2
 38727                           
 38728                           ;../canargb_leds.c: 355:                     break;
 38729   0025B4  EFF3  F012         	goto	l9362
 38730   0025B8                     l9360:
 38731                           
 38732                           ; BSR set to: 5
 38733   0025B8  5005               	movf	doFlash@order^(0+1280),w,c
 38734                           
 38735                           ; Switch size 1, requested type "simple"
 38736                           ; Number of cases is 5, Range of values is 1 to 6
 38737                           ; switch strategies available:
 38738                           ; Name         Instructions Cycles
 38739                           ; simple_byte           16     9 (average)
 38740                           ;	Chosen strategy is simple_byte
 38741   0025BA  0A01               	xorlw	1	; case 1
 38742   0025BC  B4D8               	btfsc	status,2,c
 38743   0025BE  EF38  F011         	goto	l9346
 38744   0025C2  0A03               	xorlw	3	; case 2
 38745   0025C4  B4D8               	btfsc	status,2,c
 38746   0025C6  EF7E  F011         	goto	l9348
 38747   0025CA  0A06               	xorlw	6	; case 4
 38748   0025CC  B4D8               	btfsc	status,2,c
 38749   0025CE  EFC4  F011         	goto	l9350
 38750   0025D2  0A01               	xorlw	1	; case 5
 38751   0025D4  B4D8               	btfsc	status,2,c
 38752   0025D6  EF50  F012         	goto	l9354
 38753   0025DA  0A03               	xorlw	3	; case 6
 38754   0025DC  B4D8               	btfsc	status,2,c
 38755   0025DE  EF0A  F012         	goto	l9352
 38756   0025E2  EF96  F012         	goto	l9356
 38757   0025E6                     l9362:
 38758                           
 38759                           ;../canargb_leds.c: 359:     }
 38760   0025E6  2A06               	incf	doFlash@ledno^(0+1280),f,c
 38761   0025E8  2806               	incf	doFlash@ledno^(0+1280),w,c
 38762   0025EA  A4D8               	btfss	status,2,c
 38763   0025EC  EFFA  F012         	goto	u6681
 38764   0025F0  EFFC  F012         	goto	u6680
 38765   0025F4                     u6681:
 38766   0025F4  EF72  F00F         	goto	l9326
 38767   0025F8                     u6680:
 38768   0025F8                     
 38769                           ;../canargb_leds.c: 360:     refreshRequired = 1;
 38770   0025F8  0E01               	movlw	1
 38771   0025FA  0105               	movlb	5	; () banked
 38772   0025FC  6FAB               	movwf	_refreshRequired& (0+255),b
 38773   0025FE                     
 38774                           ; BSR set to: 5
 38775   0025FE  0012               	return		;funcret
 38776   002600                     __end_of_doFlash:
 38777                           	callstack 0
 38778                           
 38779 ;; *************** function _getNV *****************
 38780 ;; Defined at:
 38781 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 38782 ;; Parameters:    Size  Location     Type
 38783 ;;  index           1    wreg     unsigned char 
 38784 ;; Auto vars:     Size  Location     Type
 38785 ;;  index           1    3[COMRAM] unsigned char 
 38786 ;; Return value:  Size  Location     Type
 38787 ;;                  2    0[COMRAM] short 
 38788 ;; Registers used:
 38789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38790 ;; Tracked objects:
 38791 ;;		On entry : 0/0
 38792 ;;		On exit  : 0/0
 38793 ;;		Unchanged: 0/0
 38794 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38799 ;;Total ram usage:        4 bytes
 38800 ;; Hardware stack levels used: 1
 38801 ;; Hardware stack levels required when called: 1
 38802 ;; This function calls:
 38803 ;;		Nothing
 38804 ;; This function is called by:
 38805 ;;		_doFlash
 38806 ;;		_nvProcessMessage
 38807 ;;		_nvTRnvrdCallback
 38808 ;; This function uses a non-reentrant model
 38809 ;;
 38810                           
 38811                           	psect	text104
 38812   007A86                     __ptext104:
 38813                           	callstack 0
 38814   007A86                     _getNV:
 38815                           	callstack 122
 38816                           
 38817                           ; BSR set to: 5
 38818                           ;incstack = 0
 38819                           ;getNV@index stored from wreg
 38820   007A86  6E04               	movwf	getNV@index^(0+1280),c
 38821   007A88                     
 38822                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 49;
 38823   007A88  5004               	movf	getNV@index^(0+1280),w,c
 38824   007A8A  A4D8               	btfss	status,2,c
 38825   007A8C  EF4A  F03D         	goto	u5421
 38826   007A90  EF4C  F03D         	goto	u5420
 38827   007A94                     u5421:
 38828   007A94  EF52  F03D         	goto	l8012
 38829   007A98                     u5420:
 38830   007A98  0E00               	movlw	0
 38831   007A9A  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38832   007A9C  0E31               	movlw	49
 38833   007A9E  6E01               	movwf	?_getNV^(0+1280),c
 38834   007AA0  EF6B  F03D         	goto	l1547
 38835   007AA4                     l8012:
 38836                           
 38837                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 49) return -CMDERR_INV_NV_IDX;
 38838   007AA4  0E31               	movlw	49
 38839   007AA6  6404               	cpfsgt	getNV@index^(0+1280),c
 38840   007AA8  EF58  F03D         	goto	u5431
 38841   007AAC  EF5A  F03D         	goto	u5430
 38842   007AB0                     u5431:
 38843   007AB0  EF60  F03D         	goto	l8018
 38844   007AB4                     u5430:
 38845   007AB4  0EFF               	movlw	255
 38846   007AB6  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38847   007AB8  0EF6               	movlw	246
 38848   007ABA  6E01               	movwf	?_getNV^(0+1280),c
 38849   007ABC  EF6B  F03D         	goto	l1547
 38850   007AC0                     l8018:
 38851                           
 38852                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 38853   007AC0  0E00               	movlw	low _nvCache
 38854   007AC2  2404               	addwf	getNV@index^(0+1280),w,c
 38855   007AC4  6ED9               	movwf	fsr2l,c
 38856   007AC6  6ADA               	clrf	fsr2h,c
 38857   007AC8  0E06               	movlw	high _nvCache
 38858   007ACA  22DA               	addwfc	fsr2h,f,c
 38859   007ACC  50DF               	movf	indf2,w,c
 38860   007ACE  6E03               	movwf	??_getNV^(0+1280),c
 38861   007AD0  5003               	movf	??_getNV^(0+1280),w,c
 38862   007AD2  6E01               	movwf	?_getNV^(0+1280),c
 38863   007AD4  6A02               	clrf	(?_getNV+1)^(0+1280),c
 38864   007AD6                     l1547:
 38865   007AD6  0012               	return		;funcret
 38866   007AD8                     __end_of_getNV:
 38867                           	callstack 0
 38868                           
 38869 ;; *************** function _initRomOps *****************
 38870 ;; Defined at:
 38871 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 38872 ;; Parameters:    Size  Location     Type
 38873 ;;		None
 38874 ;; Auto vars:     Size  Location     Type
 38875 ;;		None
 38876 ;; Return value:  Size  Location     Type
 38877 ;;                  1    wreg      void 
 38878 ;; Registers used:
 38879 ;;		wreg, status,2
 38880 ;; Tracked objects:
 38881 ;;		On entry : 0/0
 38882 ;;		On exit  : 0/0
 38883 ;;		Unchanged: 0/0
 38884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38889 ;;Total ram usage:        0 bytes
 38890 ;; Hardware stack levels used: 1
 38891 ;; Hardware stack levels required when called: 1
 38892 ;; This function calls:
 38893 ;;		Nothing
 38894 ;; This function is called by:
 38895 ;;		_main
 38896 ;; This function uses a non-reentrant model
 38897 ;;
 38898                           
 38899                           	psect	text105
 38900   0082BE                     __ptext105:
 38901                           	callstack 0
 38902   0082BE                     _initRomOps:
 38903                           	callstack 125
 38904   0082BE                     
 38905                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 38906   0082BE  0105               	movlb	5	; () banked
 38907   0082C0  6B9B               	clrf	_flashFlags& (0+255),b
 38908   0082C2                     
 38909                           ; BSR set to: 5
 38910                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 38911   0082C2  0E00               	movlw	0
 38912   0082C4  6F84               	movwf	_flashBlock& (0+255),b
 38913   0082C6  0E08               	movlw	8
 38914   0082C8  6F85               	movwf	(_flashBlock+1)& (0+255),b
 38915   0082CA  0E00               	movlw	0
 38916   0082CC  6F86               	movwf	(_flashBlock+2)& (0+255),b
 38917   0082CE                     
 38918                           ; BSR set to: 5
 38919                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 38920   0082CE  6AF8               	clrf	248,c	;volatile
 38921   0082D0                     
 38922                           ; BSR set to: 5
 38923                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 38924   0082D0  0100               	movlb	0	; () banked
 38925   0082D2  9F41               	bcf	65,7,b	;volsfr
 38926   0082D4                     
 38927                           ; BSR set to: 0
 38928   0082D4  0012               	return		;funcret
 38929   0082D6                     __end_of_initRomOps:
 38930                           	callstack 0
 38931                           
 38932 ;; *************** function _checkPowerOnPb *****************
 38933 ;; Defined at:
 38934 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 38935 ;; Parameters:    Size  Location     Type
 38936 ;;		None
 38937 ;; Auto vars:     Size  Location     Type
 38938 ;;  i               1   59[COMRAM] unsigned char 
 38939 ;; Return value:  Size  Location     Type
 38940 ;;                  1    wreg      void 
 38941 ;; Registers used:
 38942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38943 ;; Tracked objects:
 38944 ;;		On entry : 0/0
 38945 ;;		On exit  : 0/0
 38946 ;;		Unchanged: 0/0
 38947 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38952 ;;Total ram usage:        1 bytes
 38953 ;; Hardware stack levels used: 1
 38954 ;; Hardware stack levels required when called: 11
 38955 ;; This function calls:
 38956 ;;		_APP_testMode
 38957 ;;		_factoryReset
 38958 ;;		_pbDownTimer
 38959 ;;		_pbUpTimer
 38960 ;;		_showStatus
 38961 ;; This function is called by:
 38962 ;;		_main
 38963 ;; This function uses a non-reentrant model
 38964 ;;
 38965                           
 38966                           	psect	text106
 38967   0066DC                     __ptext106:
 38968                           	callstack 0
 38969   0066DC                     _checkPowerOnPb:
 38970                           	callstack 115
 38971   0066DC                     
 38972                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA2))) {
 38973   0066DC  B4CE               	btfsc	206,2,c	;volatile
 38974   0066DE  EF73  F033         	goto	u8351
 38975   0066E2  EF75  F033         	goto	u8350
 38976   0066E6                     u8351:
 38977   0066E6  EFC0  F033         	goto	l2016
 38978   0066EA                     u8350:
 38979   0066EA                     
 38980                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 38981   0066EA  0E1C               	movlw	28
 38982   0066EC  EC34  F030         	call	_pbDownTimer
 38983   0066F0  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38984   0066F2                     
 38985                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 38986   0066F2  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 38987   0066F4  A4D8               	btfss	status,2,c
 38988   0066F6  EF7F  F033         	goto	u8361
 38989   0066FA  EF81  F033         	goto	u8360
 38990   0066FE                     u8361:
 38991   0066FE  EF85  F033         	goto	l11004
 38992   006702                     u8360:
 38993   006702  EFC0  F033         	goto	l2016
 38994   006706                     l11000:
 38995                           
 38996                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 38997   006706  EFC0  F033         	goto	l2016
 38998   00670A                     l11004:
 38999   00670A  0E04               	movlw	4
 39000   00670C  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 39001   00670E  EF8B  F033         	goto	u8371
 39002   006712  EF8D  F033         	goto	u8370
 39003   006716                     u8371:
 39004   006716  EF91  F033         	goto	l11008
 39005   00671A                     u8370:
 39006   00671A                     
 39007                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 39008   00671A  ECCF  F01F         	call	_APP_testMode	;wreg free
 39009                           
 39010                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 39011   00671E  EFC0  F033         	goto	l2016
 39012   006722                     l11008:
 39013   006722  0E07               	movlw	7
 39014   006724  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 39015   006726  EF97  F033         	goto	u8381
 39016   00672A  EF99  F033         	goto	u8380
 39017   00672E                     u8381:
 39018   00672E  EFC0  F033         	goto	l2016
 39019   006732                     u8380:
 39020   006732                     
 39021                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 39022   006732  0E04               	movlw	4
 39023   006734  EC54  F028         	call	_showStatus
 39024                           
 39025                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 39026   006738  0E05               	movlw	5
 39027   00673A  ECD3  F02F         	call	_pbUpTimer
 39028   00673E  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39029   006740                     
 39030                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 39031   006740  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 39032   006742  A4D8               	btfss	status,2,c
 39033   006744  EFA6  F033         	goto	u8391
 39034   006748  EFA8  F033         	goto	u8390
 39035   00674C                     u8391:
 39036   00674C  EFAA  F033         	goto	l11016
 39037   006750                     u8390:
 39038   006750  EFC0  F033         	goto	l2016
 39039   006754                     l11016:
 39040                           
 39041                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 39042   006754  0E05               	movlw	5
 39043   006756  EC34  F030         	call	_pbDownTimer
 39044   00675A  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39045   00675C                     
 39046                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 39047   00675C  0E01               	movlw	1
 39048   00675E  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 39049   006760  EFB4  F033         	goto	u8401
 39050   006764  EFB6  F033         	goto	u8400
 39051   006768                     u8401:
 39052   006768  EF83  F033         	goto	l11000
 39053   00676C                     u8400:
 39054   00676C  0E04               	movlw	4
 39055   00676E  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 39056   006770  EFBC  F033         	goto	u8411
 39057   006774  EFBE  F033         	goto	u8410
 39058   006778                     u8411:
 39059   006778  EF83  F033         	goto	l11000
 39060   00677C                     u8410:
 39061   00677C                     
 39062                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 39063   00677C  EC3A  F02B         	call	_factoryReset	;wreg free
 39064   006780                     l2016:
 39065   006780  0012               	return		;funcret
 39066   006782                     __end_of_checkPowerOnPb:
 39067                           	callstack 0
 39068                           
 39069 ;; *************** function _showStatus *****************
 39070 ;; Defined at:
 39071 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 39072 ;; Parameters:    Size  Location     Type
 39073 ;;  s               1    wreg     enum E23436
 39074 ;; Auto vars:     Size  Location     Type
 39075 ;;  s               1    2[COMRAM] enum E23436
 39076 ;; Return value:  Size  Location     Type
 39077 ;;                  1    wreg      void 
 39078 ;; Registers used:
 39079 ;;		wreg, status,2, status,0
 39080 ;; Tracked objects:
 39081 ;;		On entry : 0/0
 39082 ;;		On exit  : 0/0
 39083 ;;		Unchanged: 0/0
 39084 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39089 ;;Total ram usage:        3 bytes
 39090 ;; Hardware stack levels used: 1
 39091 ;; Hardware stack levels required when called: 1
 39092 ;; This function calls:
 39093 ;;		Nothing
 39094 ;; This function is called by:
 39095 ;;		_setLEDsByMode
 39096 ;;		_checkPowerOnPb
 39097 ;;		_poll
 39098 ;; This function uses a non-reentrant model
 39099 ;;
 39100                           
 39101                           	psect	text107
 39102   0050A8                     __ptext107:
 39103                           	callstack 0
 39104   0050A8                     _showStatus:
 39105                           	callstack 122
 39106                           
 39107                           ;incstack = 0
 39108                           ;showStatus@s stored from wreg
 39109   0050A8  6E03               	movwf	showStatus@s^(0+1280),c
 39110   0050AA                     
 39111                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 39112   0050AA  EFB3  F028         	goto	l8366
 39113   0050AE                     l1789:
 39114                           
 39115                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 39116   0050AE  0105               	movlb	5	; () banked
 39117   0050B0  6B8B               	clrf	_ledState& (0+255),b
 39118                           
 39119                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 39120   0050B2  6B8C               	clrf	(_ledState+1)& (0+255),b
 39121                           
 39122                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 39123   0050B4  EFF4  F028         	goto	l1809
 39124   0050B8                     l8336:
 39125                           
 39126                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 39127   0050B8  0E01               	movlw	1
 39128   0050BA  0105               	movlb	5	; () banked
 39129   0050BC  6F8B               	movwf	_ledState& (0+255),b
 39130   0050BE                     
 39131                           ; BSR set to: 5
 39132                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 39133   0050BE  6B8C               	clrf	(_ledState+1)& (0+255),b
 39134                           
 39135                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 39136   0050C0  EFF4  F028         	goto	l1809
 39137   0050C4                     l1792:
 39138                           
 39139                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 39140   0050C4  0105               	movlb	5	; () banked
 39141   0050C6  6B8B               	clrf	_ledState& (0+255),b
 39142   0050C8                     
 39143                           ; BSR set to: 5
 39144                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 39145   0050C8  0E03               	movlw	3
 39146   0050CA  6F8C               	movwf	(_ledState+1)& (0+255),b
 39147                           
 39148                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 39149   0050CC  EFF4  F028         	goto	l1809
 39150   0050D0                     l1795:
 39151   0050D0                     l1797:
 39152                           
 39153                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 39154   0050D0  0105               	movlb	5	; () banked
 39155   0050D2  6B8B               	clrf	_ledState& (0+255),b
 39156   0050D4                     
 39157                           ; BSR set to: 5
 39158                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 39159   0050D4  0E01               	movlw	1
 39160   0050D6  6F8C               	movwf	(_ledState+1)& (0+255),b
 39161                           
 39162                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 39163   0050D8  EFF4  F028         	goto	l1809
 39164   0050DC                     l1798:
 39165                           
 39166                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 39167   0050DC  0105               	movlb	5	; () banked
 39168   0050DE  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39169   0050E0                     
 39170                           ; BSR set to: 5
 39171                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 39172   0050E0  0E19               	movlw	25
 39173   0050E2  6F89               	movwf	_flashCounter& (0+255),b
 39174                           
 39175                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 39176   0050E4  0E02               	movlw	2
 39177   0050E6  6F8B               	movwf	_ledState& (0+255),b
 39178                           
 39179                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 39180   0050E8  0E02               	movlw	2
 39181   0050EA  6F8C               	movwf	(_ledState+1)& (0+255),b
 39182                           
 39183                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 39184   0050EC  EFF4  F028         	goto	l1809
 39185   0050F0                     l8346:
 39186                           
 39187                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39188   0050F0  0105               	movlb	5	; () banked
 39189   0050F2  29A1               	incf	_mode_state& (0+255),w,b
 39190   0050F4  A4D8               	btfss	status,2,c
 39191   0050F6  EF7F  F028         	goto	u5671
 39192   0050FA  EF81  F028         	goto	u5670
 39193   0050FE                     u5671:
 39194   0050FE  EF85  F028         	goto	l8350
 39195   005102                     u5670:
 39196   005102                     
 39197                           ; BSR set to: 5
 39198                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 39199   005102  0E06               	movlw	6
 39200   005104  6F8C               	movwf	(_ledState+1)& (0+255),b
 39201                           
 39202                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39203   005106  EFF4  F028         	goto	l1809
 39204   00510A                     l8350:
 39205                           
 39206                           ; BSR set to: 5
 39207   00510A  05A1               	decf	_mode_state& (0+255),w,b
 39208   00510C  A4D8               	btfss	status,2,c
 39209   00510E  EF8B  F028         	goto	u5681
 39210   005112  EF8D  F028         	goto	u5680
 39211   005116                     u5681:
 39212   005116  EFF4  F028         	goto	l1809
 39213   00511A                     u5680:
 39214   00511A                     
 39215                           ; BSR set to: 5
 39216                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 39217   00511A  0E06               	movlw	6
 39218   00511C  6F8B               	movwf	_ledState& (0+255),b
 39219   00511E  EFF4  F028         	goto	l1809
 39220   005122                     l8354:
 39221                           
 39222                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39223   005122  0105               	movlb	5	; () banked
 39224   005124  29A1               	incf	_mode_state& (0+255),w,b
 39225   005126  A4D8               	btfss	status,2,c
 39226   005128  EF98  F028         	goto	u5691
 39227   00512C  EF9A  F028         	goto	u5690
 39228   005130                     u5691:
 39229   005130  EF9E  F028         	goto	l8358
 39230   005134                     u5690:
 39231   005134                     
 39232                           ; BSR set to: 5
 39233                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 39234   005134  0E08               	movlw	8
 39235   005136  6F8C               	movwf	(_ledState+1)& (0+255),b
 39236                           
 39237                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39238   005138  EFF4  F028         	goto	l1809
 39239   00513C                     l8358:
 39240                           
 39241                           ; BSR set to: 5
 39242   00513C  05A1               	decf	_mode_state& (0+255),w,b
 39243   00513E  A4D8               	btfss	status,2,c
 39244   005140  EFA4  F028         	goto	u5701
 39245   005144  EFA6  F028         	goto	u5700
 39246   005148                     u5701:
 39247   005148  EFF4  F028         	goto	l1809
 39248   00514C                     u5700:
 39249   00514C                     
 39250                           ; BSR set to: 5
 39251                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 39252   00514C  0E08               	movlw	8
 39253   00514E  6F8B               	movwf	_ledState& (0+255),b
 39254   005150  EFF4  F028         	goto	l1809
 39255   005154                     l1808:
 39256                           
 39257                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 39258   005154  0105               	movlb	5	; () banked
 39259   005156  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39260                           
 39261                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 39262   005158  6B89               	clrf	_flashCounter& (0+255),b
 39263   00515A                     
 39264                           ; BSR set to: 5
 39265                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 39266   00515A  0E02               	movlw	2
 39267   00515C  6F8B               	movwf	_ledState& (0+255),b
 39268                           
 39269                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 39270   00515E  0E02               	movlw	2
 39271   005160  6F8C               	movwf	(_ledState+1)& (0+255),b
 39272                           
 39273                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 39274   005162  EFF4  F028         	goto	l1809
 39275   005166                     l8366:
 39276   005166  5003               	movf	showStatus@s^(0+1280),w,c
 39277   005168  6E01               	movwf	??_showStatus^(0+1280),c
 39278   00516A  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 39279                           
 39280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39281                           ; Switch size 1, requested type "simple"
 39282                           ; Number of cases is 1, Range of values is 0 to 0
 39283                           ; switch strategies available:
 39284                           ; Name         Instructions Cycles
 39285                           ; simple_byte            4     3 (average)
 39286                           ;	Chosen strategy is simple_byte
 39287   00516C  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 39288   00516E  0A00               	xorlw	0	; case 0
 39289   005170  B4D8               	btfsc	status,2,c
 39290   005172  EFBD  F028         	goto	l11680
 39291   005176  EFF4  F028         	goto	l1809
 39292   00517A                     l11680:
 39293                           
 39294                           ; Switch size 1, requested type "simple"
 39295                           ; Number of cases is 13, Range of values is 0 to 12
 39296                           ; switch strategies available:
 39297                           ; Name         Instructions Cycles
 39298                           ; simple_byte           40    21 (average)
 39299                           ;	Chosen strategy is simple_byte
 39300   00517A  5001               	movf	??_showStatus^(0+1280),w,c
 39301   00517C  0A00               	xorlw	0	; case 0
 39302   00517E  B4D8               	btfsc	status,2,c
 39303   005180  EF57  F028         	goto	l1789
 39304   005184  0A01               	xorlw	1	; case 1
 39305   005186  B4D8               	btfsc	status,2,c
 39306   005188  EF5C  F028         	goto	l8336
 39307   00518C  0A03               	xorlw	3	; case 2
 39308   00518E  B4D8               	btfsc	status,2,c
 39309   005190  EF62  F028         	goto	l1792
 39310   005194  0A01               	xorlw	1	; case 3
 39311   005196  B4D8               	btfsc	status,2,c
 39312   005198  EF68  F028         	goto	l1795
 39313   00519C  0A07               	xorlw	7	; case 4
 39314   00519E  B4D8               	btfsc	status,2,c
 39315   0051A0  EF6E  F028         	goto	l1798
 39316   0051A4  0A01               	xorlw	1	; case 5
 39317   0051A6  B4D8               	btfsc	status,2,c
 39318   0051A8  EF68  F028         	goto	l1797
 39319   0051AC  0A03               	xorlw	3	; case 6
 39320   0051AE  B4D8               	btfsc	status,2,c
 39321   0051B0  EF68  F028         	goto	l1797
 39322   0051B4  0A01               	xorlw	1	; case 7
 39323   0051B6  B4D8               	btfsc	status,2,c
 39324   0051B8  EF78  F028         	goto	l8346
 39325   0051BC  0A0F               	xorlw	15	; case 8
 39326   0051BE  B4D8               	btfsc	status,2,c
 39327   0051C0  EF91  F028         	goto	l8354
 39328   0051C4  0A01               	xorlw	1	; case 9
 39329   0051C6  B4D8               	btfsc	status,2,c
 39330   0051C8  EF68  F028         	goto	l1797
 39331   0051CC  0A03               	xorlw	3	; case 10
 39332   0051CE  B4D8               	btfsc	status,2,c
 39333   0051D0  EF68  F028         	goto	l1797
 39334   0051D4  0A01               	xorlw	1	; case 11
 39335   0051D6  B4D8               	btfsc	status,2,c
 39336   0051D8  EFAA  F028         	goto	l1808
 39337   0051DC  0A07               	xorlw	7	; case 12
 39338   0051DE  B4D8               	btfsc	status,2,c
 39339   0051E0  EFAA  F028         	goto	l1808
 39340   0051E4  EFF4  F028         	goto	l1809
 39341   0051E8                     l1809:
 39342   0051E8  0012               	return		;funcret
 39343   0051EA                     __end_of_showStatus:
 39344                           	callstack 0
 39345                           
 39346 ;; *************** function _pbUpTimer *****************
 39347 ;; Defined at:
 39348 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 39349 ;; Parameters:    Size  Location     Type
 39350 ;;  timeout         1    wreg     unsigned char 
 39351 ;; Auto vars:     Size  Location     Type
 39352 ;;  timeout         1   27[COMRAM] unsigned char 
 39353 ;; Return value:  Size  Location     Type
 39354 ;;                  1    wreg      unsigned char 
 39355 ;; Registers used:
 39356 ;;		wreg, status,2, status,0, cstack
 39357 ;; Tracked objects:
 39358 ;;		On entry : 0/0
 39359 ;;		On exit  : 0/0
 39360 ;;		Unchanged: 0/0
 39361 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39365 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39366 ;;Total ram usage:        5 bytes
 39367 ;; Hardware stack levels used: 1
 39368 ;; Hardware stack levels required when called: 3
 39369 ;; This function calls:
 39370 ;;		___lldiv
 39371 ;;		___lmul
 39372 ;;		_leds_poll
 39373 ;;		_tickGet
 39374 ;; This function is called by:
 39375 ;;		_checkPowerOnPb
 39376 ;; This function uses a non-reentrant model
 39377 ;;
 39378                           
 39379                           	psect	text108
 39380   005FA6                     __ptext108:
 39381                           	callstack 0
 39382   005FA6                     _pbUpTimer:
 39383                           	callstack 122
 39384                           
 39385                           ;incstack = 0
 39386                           ;pbUpTimer@timeout stored from wreg
 39387   005FA6  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 39388   005FA8                     
 39389                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 39390   005FA8  EC18  F03A         	call	_tickGet	;wreg free
 39391   005FAC  C501  F570         	movff	?_tickGet,_pbTimer
 39392   005FB0  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39393   005FB4  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39394   005FB8  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39395                           
 39396                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39397   005FBC  EF12  F030         	goto	l2007
 39398   005FC0                     l10886:
 39399                           
 39400                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 39401   005FC0  EC22  F01B         	call	_leds_poll	;wreg free
 39402                           
 39403                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39404   005FC4  EC18  F03A         	call	_tickGet	;wreg free
 39405   005FC8  0105               	movlb	5	; () banked
 39406   005FCA  5170               	movf	_pbTimer& (0+255),w,b
 39407   005FCC  5C01               	subwf	?_tickGet^(0+1280),w,c
 39408   005FCE  6E18               	movwf	??_pbUpTimer^(0+1280),c
 39409   005FD0  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39410   005FD2  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39411   005FD4  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 39412   005FD6  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39413   005FD8  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39414   005FDA  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 39415   005FDC  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39416   005FDE  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39417   005FE0  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 39418   005FE2  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 39419   005FE4  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39420   005FE6  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39421   005FE8  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39422   005FEA  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39423   005FEC  0E24               	movlw	36
 39424   005FEE  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39425   005FF0  0EF4               	movlw	244
 39426   005FF2  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39427   005FF4  0E00               	movlw	0
 39428   005FF6  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39429   005FF8  0E00               	movlw	0
 39430   005FFA  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39431   005FFC  EC6A  F03B         	call	___lmul	;wreg free
 39432   006000  5018               	movf	??_pbUpTimer^(0+1280),w,c
 39433   006002  5C01               	subwf	?___lmul^(0+1280),w,c
 39434   006004  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 39435   006006  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39436   006008  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 39437   00600A  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39438   00600C  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 39439   00600E  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39440   006010  B0D8               	btfsc	status,0,c
 39441   006012  EF0D  F030         	goto	u8281
 39442   006016  EF0F  F030         	goto	u8280
 39443   00601A                     u8281:
 39444   00601A  EF12  F030         	goto	l2007
 39445   00601E                     u8280:
 39446   00601E                     
 39447                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 39448   00601E  0E00               	movlw	0
 39449   006020  EF33  F030         	goto	l2010
 39450   006024                     l2007:
 39451                           
 39452                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39453   006024  B4CE               	btfsc	206,2,c	;volatile
 39454   006026  EF17  F030         	goto	u8291
 39455   00602A  EF19  F030         	goto	u8290
 39456   00602E                     u8291:
 39457   00602E  EFE0  F02F         	goto	l10886
 39458   006032                     u8290:
 39459   006032                     
 39460                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39461   006032  EC18  F03A         	call	_tickGet	;wreg free
 39462   006036  0105               	movlb	5	; () banked
 39463   006038  5170               	movf	_pbTimer& (0+255),w,b
 39464   00603A  5C01               	subwf	?_tickGet^(0+1280),w,c
 39465   00603C  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39466   00603E  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39467   006040  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39468   006042  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39469   006044  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39470   006046  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39471   006048  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39472   00604A  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39473   00604C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39474   00604E  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39475   006050  0E24               	movlw	36
 39476   006052  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39477   006054  0EF4               	movlw	244
 39478   006056  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39479   006058  0E00               	movlw	0
 39480   00605A  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39481   00605C  0E00               	movlw	0
 39482   00605E  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39483   006060  EC14  F034         	call	___lldiv	;wreg free
 39484   006064  500B               	movf	?___lldiv^(0+1280),w,c
 39485   006066                     l2010:
 39486   006066  0012               	return		;funcret
 39487   006068                     __end_of_pbUpTimer:
 39488                           	callstack 0
 39489                           
 39490 ;; *************** function _pbDownTimer *****************
 39491 ;; Defined at:
 39492 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 39493 ;; Parameters:    Size  Location     Type
 39494 ;;  timeout         1    wreg     unsigned char 
 39495 ;; Auto vars:     Size  Location     Type
 39496 ;;  timeout         1   27[COMRAM] unsigned char 
 39497 ;; Return value:  Size  Location     Type
 39498 ;;                  1    wreg      unsigned char 
 39499 ;; Registers used:
 39500 ;;		wreg, status,2, status,0, cstack
 39501 ;; Tracked objects:
 39502 ;;		On entry : 0/0
 39503 ;;		On exit  : 0/0
 39504 ;;		Unchanged: 0/0
 39505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39509 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39510 ;;Total ram usage:        5 bytes
 39511 ;; Hardware stack levels used: 1
 39512 ;; Hardware stack levels required when called: 3
 39513 ;; This function calls:
 39514 ;;		___lldiv
 39515 ;;		___lmul
 39516 ;;		_leds_poll
 39517 ;;		_tickGet
 39518 ;; This function is called by:
 39519 ;;		_checkPowerOnPb
 39520 ;; This function uses a non-reentrant model
 39521 ;;
 39522                           
 39523                           	psect	text109
 39524   006068                     __ptext109:
 39525                           	callstack 0
 39526   006068                     _pbDownTimer:
 39527                           	callstack 122
 39528                           
 39529                           ;incstack = 0
 39530                           ;pbDownTimer@timeout stored from wreg
 39531   006068  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 39532   00606A                     
 39533                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 39534   00606A  EC18  F03A         	call	_tickGet	;wreg free
 39535   00606E  C501  F570         	movff	?_tickGet,_pbTimer
 39536   006072  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39537   006076  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39538   00607A  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39539                           
 39540                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39541   00607E  EF73  F030         	goto	l2000
 39542   006082                     l10874:
 39543                           
 39544                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 39545   006082  EC22  F01B         	call	_leds_poll	;wreg free
 39546                           
 39547                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39548   006086  EC18  F03A         	call	_tickGet	;wreg free
 39549   00608A  0105               	movlb	5	; () banked
 39550   00608C  5170               	movf	_pbTimer& (0+255),w,b
 39551   00608E  5C01               	subwf	?_tickGet^(0+1280),w,c
 39552   006090  6E18               	movwf	??_pbDownTimer^(0+1280),c
 39553   006092  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39554   006094  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39555   006096  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 39556   006098  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39557   00609A  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39558   00609C  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 39559   00609E  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39560   0060A0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39561   0060A2  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 39562   0060A4  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 39563   0060A6  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39564   0060A8  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39565   0060AA  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39566   0060AC  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39567   0060AE  0E24               	movlw	36
 39568   0060B0  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39569   0060B2  0EF4               	movlw	244
 39570   0060B4  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39571   0060B6  0E00               	movlw	0
 39572   0060B8  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39573   0060BA  0E00               	movlw	0
 39574   0060BC  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39575   0060BE  EC6A  F03B         	call	___lmul	;wreg free
 39576   0060C2  5018               	movf	??_pbDownTimer^(0+1280),w,c
 39577   0060C4  5C01               	subwf	?___lmul^(0+1280),w,c
 39578   0060C6  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 39579   0060C8  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39580   0060CA  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 39581   0060CC  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39582   0060CE  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 39583   0060D0  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39584   0060D2  B0D8               	btfsc	status,0,c
 39585   0060D4  EF6E  F030         	goto	u8261
 39586   0060D8  EF70  F030         	goto	u8260
 39587   0060DC                     u8261:
 39588   0060DC  EF73  F030         	goto	l2000
 39589   0060E0                     u8260:
 39590   0060E0                     
 39591                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 39592   0060E0  0E00               	movlw	0
 39593   0060E2  EF94  F030         	goto	l2003
 39594   0060E6                     l2000:
 39595                           
 39596                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39597   0060E6  A4CE               	btfss	206,2,c	;volatile
 39598   0060E8  EF78  F030         	goto	u8271
 39599   0060EC  EF7A  F030         	goto	u8270
 39600   0060F0                     u8271:
 39601   0060F0  EF41  F030         	goto	l10874
 39602   0060F4                     u8270:
 39603   0060F4                     
 39604                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39605   0060F4  EC18  F03A         	call	_tickGet	;wreg free
 39606   0060F8  0105               	movlb	5	; () banked
 39607   0060FA  5170               	movf	_pbTimer& (0+255),w,b
 39608   0060FC  5C01               	subwf	?_tickGet^(0+1280),w,c
 39609   0060FE  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39610   006100  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39611   006102  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39612   006104  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39613   006106  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39614   006108  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39615   00610A  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39616   00610C  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39617   00610E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39618   006110  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39619   006112  0E24               	movlw	36
 39620   006114  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39621   006116  0EF4               	movlw	244
 39622   006118  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39623   00611A  0E00               	movlw	0
 39624   00611C  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39625   00611E  0E00               	movlw	0
 39626   006120  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39627   006122  EC14  F034         	call	___lldiv	;wreg free
 39628   006126  500B               	movf	?___lldiv^(0+1280),w,c
 39629   006128                     l2003:
 39630   006128  0012               	return		;funcret
 39631   00612A                     __end_of_pbDownTimer:
 39632                           	callstack 0
 39633                           
 39634 ;; *************** function _leds_poll *****************
 39635 ;; Defined at:
 39636 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 39637 ;; Parameters:    Size  Location     Type
 39638 ;;		None
 39639 ;; Auto vars:     Size  Location     Type
 39640 ;;		None
 39641 ;; Return value:  Size  Location     Type
 39642 ;;                  1    wreg      void 
 39643 ;; Registers used:
 39644 ;;		wreg, status,2, status,0, cstack
 39645 ;; Tracked objects:
 39646 ;;		On entry : 0/0
 39647 ;;		On exit  : 0/0
 39648 ;;		Unchanged: 0/0
 39649 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39654 ;;Total ram usage:        4 bytes
 39655 ;; Hardware stack levels used: 1
 39656 ;; Hardware stack levels required when called: 2
 39657 ;; This function calls:
 39658 ;;		___awdiv
 39659 ;;		_tickGet
 39660 ;; This function is called by:
 39661 ;;		_pbDownTimer
 39662 ;;		_pbUpTimer
 39663 ;;		_poll
 39664 ;; This function uses a non-reentrant model
 39665 ;;
 39666                           
 39667                           	psect	text110
 39668   003644                     __ptext110:
 39669                           	callstack 0
 39670   003644                     _leds_poll:
 39671                           	callstack 123
 39672   003644                     
 39673                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 39674   003644  EC18  F03A         	call	_tickGet	;wreg free
 39675   003648  0105               	movlb	5	; () banked
 39676   00364A  5164               	movf	_ledTimer& (0+255),w,b
 39677   00364C  5C01               	subwf	?_tickGet^(0+1280),w,c
 39678   00364E  6E0B               	movwf	??_leds_poll^(0+1280),c
 39679   003650  5165               	movf	(_ledTimer+1)& (0+255),w,b
 39680   003652  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39681   003654  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 39682   003656  5166               	movf	(_ledTimer+2)& (0+255),w,b
 39683   003658  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39684   00365A  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 39685   00365C  5167               	movf	(_ledTimer+3)& (0+255),w,b
 39686   00365E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39687   003660  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 39688   003662  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 39689   003664  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 39690   003666  E10B               	bnz	u6390
 39691   003668  0E72               	movlw	114
 39692   00366A  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 39693   00366C  0E02               	movlw	2
 39694   00366E  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 39695   003670  A0D8               	btfss	status,0,c
 39696   003672  EF3D  F01B         	goto	u6391
 39697   003676  EF3F  F01B         	goto	u6390
 39698   00367A                     u6391:
 39699   00367A  EFE6  F01B         	goto	l9146
 39700   00367E                     u6390:
 39701   00367E                     
 39702                           ; BSR set to: 5
 39703                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 39704   00367E  2B89               	incf	_flashCounter& (0+255),f,b
 39705                           
 39706                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 39707   003680  2B8A               	incf	(_flashCounter+1)& (0+255),f,b
 39708   003682                     
 39709                           ; BSR set to: 5
 39710                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 39711   003682  EC18  F03A         	call	_tickGet	;wreg free
 39712   003686  C501  F564         	movff	?_tickGet,_ledTimer
 39713   00368A  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 39714   00368E  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 39715   003692  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 39716   003696  EFE6  F01B         	goto	l9146
 39717   00369A                     l1746:
 39718                           
 39719                           ; BSR set to: 5
 39720                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 39721   00369A  8CBF               	bsf	191,6,c	;volatile
 39722                           
 39723                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 39724   00369C  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39725                           
 39726                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 39727   00369E  EFB2  F01C         	goto	l9194
 39728   0036A2                     l1748:
 39729                           
 39730                           ; BSR set to: 5
 39731                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 39732   0036A2  9CBF               	bcf	191,6,c	;volatile
 39733                           
 39734                           ;../../VLCBlib_PIC/statusLeds2.c: 103:             flashCounter[1] = 0;
 39735   0036A4  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39736                           
 39737                           ;../../VLCBlib_PIC/statusLeds2.c: 104:             break;
 39738   0036A6  EFB2  F01C         	goto	l9194
 39739   0036AA                     l9100:
 39740                           
 39741                           ; BSR set to: 5
 39742                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 39743   0036AA  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39744   0036AE  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39745   0036B0  0E00               	movlw	0
 39746   0036B2  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39747   0036B4  0E19               	movlw	25
 39748   0036B6  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39749   0036B8  EC95  F030         	call	___awdiv	;wreg free
 39750   0036BC  3A01               	swapf	?___awdiv^(0+1280),f,c
 39751   0036BE  4601               	rlncf	?___awdiv^(0+1280),f,c
 39752   0036C0  4601               	rlncf	?___awdiv^(0+1280),f,c
 39753   0036C2  50BF               	movf	191,w,c	;volatile
 39754   0036C4  1801               	xorwf	?___awdiv^(0+1280),w,c
 39755   0036C6  0BBF               	andlw	-65
 39756   0036C8  1801               	xorwf	?___awdiv^(0+1280),w,c
 39757   0036CA  6EBF               	movwf	191,c	;volatile
 39758   0036CC                     
 39759                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 39760   0036CC  0E31               	movlw	49
 39761   0036CE  0105               	movlb	5	; () banked
 39762   0036D0  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39763   0036D2  EF6D  F01B         	goto	u6401
 39764   0036D6  EF6F  F01B         	goto	u6400
 39765   0036DA                     u6401:
 39766   0036DA  EFB2  F01C         	goto	l9194
 39767   0036DE                     u6400:
 39768   0036DE                     l9104:
 39769                           
 39770                           ; BSR set to: 5
 39771                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 39772   0036DE  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39773   0036E0  EFB2  F01C         	goto	l9194
 39774   0036E4                     l9106:
 39775                           
 39776                           ; BSR set to: 5
 39777                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 39778   0036E4  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39779   0036E8  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39780   0036EA  0E00               	movlw	0
 39781   0036EC  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39782   0036EE  0E32               	movlw	50
 39783   0036F0  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39784   0036F2  EC95  F030         	call	___awdiv	;wreg free
 39785   0036F6  3A01               	swapf	?___awdiv^(0+1280),f,c
 39786   0036F8  4601               	rlncf	?___awdiv^(0+1280),f,c
 39787   0036FA  4601               	rlncf	?___awdiv^(0+1280),f,c
 39788   0036FC  50BF               	movf	191,w,c	;volatile
 39789   0036FE  1801               	xorwf	?___awdiv^(0+1280),w,c
 39790   003700  0BBF               	andlw	-65
 39791   003702  1801               	xorwf	?___awdiv^(0+1280),w,c
 39792   003704  6EBF               	movwf	191,c	;volatile
 39793   003706                     
 39794                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 39795   003706  0E63               	movlw	99
 39796   003708  0105               	movlb	5	; () banked
 39797   00370A  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39798   00370C  EF8A  F01B         	goto	u6411
 39799   003710  EF8C  F01B         	goto	u6410
 39800   003714                     u6411:
 39801   003714  EFB2  F01C         	goto	l9194
 39802   003718                     u6410:
 39803   003718  EF6F  F01B         	goto	l9104
 39804   00371C                     l9112:
 39805                           
 39806                           ; BSR set to: 5
 39807                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 39808   00371C  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39809   003720  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39810   003722  0E00               	movlw	0
 39811   003724  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39812   003726  0E64               	movlw	100
 39813   003728  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39814   00372A  EC95  F030         	call	___awdiv	;wreg free
 39815   00372E  3A01               	swapf	?___awdiv^(0+1280),f,c
 39816   003730  4601               	rlncf	?___awdiv^(0+1280),f,c
 39817   003732  4601               	rlncf	?___awdiv^(0+1280),f,c
 39818   003734  50BF               	movf	191,w,c	;volatile
 39819   003736  1801               	xorwf	?___awdiv^(0+1280),w,c
 39820   003738  0BBF               	andlw	-65
 39821   00373A  1801               	xorwf	?___awdiv^(0+1280),w,c
 39822   00373C  6EBF               	movwf	191,c	;volatile
 39823   00373E                     
 39824                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 39825   00373E  0EC7               	movlw	199
 39826   003740  0105               	movlb	5	; () banked
 39827   003742  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39828   003744  EFA6  F01B         	goto	u6421
 39829   003748  EFA8  F01B         	goto	u6420
 39830   00374C                     u6421:
 39831   00374C  EFB2  F01C         	goto	l9194
 39832   003750                     u6420:
 39833   003750  EF6F  F01B         	goto	l9104
 39834   003754                     l1755:
 39835                           
 39836                           ; BSR set to: 5
 39837                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 39838   003754  8CBF               	bsf	191,6,c	;volatile
 39839   003756                     
 39840                           ; BSR set to: 5
 39841                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 39842   003756  0E18               	movlw	24
 39843   003758  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39844   00375A  EFB1  F01B         	goto	u6431
 39845   00375E  EFB3  F01B         	goto	u6430
 39846   003762                     u6431:
 39847   003762  EFB2  F01C         	goto	l9194
 39848   003766                     u6430:
 39849   003766                     l9120:
 39850                           
 39851                           ; BSR set to: 5
 39852                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 39853   003766  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39854                           
 39855                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 39856   003768  6B8C               	clrf	(_ledState+1)& (0+255),b
 39857   00376A  EFB2  F01C         	goto	l9194
 39858   00376E                     l1757:
 39859                           
 39860                           ; BSR set to: 5
 39861                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 39862   00376E  9CBF               	bcf	191,6,c	;volatile
 39863   003770                     
 39864                           ; BSR set to: 5
 39865                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 39866   003770  0E18               	movlw	24
 39867   003772  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39868   003774  EFBE  F01B         	goto	u6441
 39869   003778  EFC0  F01B         	goto	u6440
 39870   00377C                     u6441:
 39871   00377C  EFB2  F01C         	goto	l9194
 39872   003780                     u6440:
 39873   003780                     l9124:
 39874                           
 39875                           ; BSR set to: 5
 39876                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 39877   003780  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39878   003782                     
 39879                           ; BSR set to: 5
 39880                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 39881   003782  0E01               	movlw	1
 39882   003784  6F8C               	movwf	(_ledState+1)& (0+255),b
 39883   003786  EFB2  F01C         	goto	l9194
 39884   00378A                     l1759:
 39885                           
 39886                           ; BSR set to: 5
 39887                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 39888   00378A  8CBF               	bsf	191,6,c	;volatile
 39889   00378C                     
 39890                           ; BSR set to: 5
 39891                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 39892   00378C  0E31               	movlw	49
 39893   00378E  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39894   003790  EFCC  F01B         	goto	u6451
 39895   003794  EFCE  F01B         	goto	u6450
 39896   003798                     u6451:
 39897   003798  EFB2  F01C         	goto	l9194
 39898   00379C                     u6450:
 39899   00379C  EFB3  F01B         	goto	l9120
 39900   0037A0                     l1761:
 39901                           
 39902                           ; BSR set to: 5
 39903                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 39904   0037A0  9CBF               	bcf	191,6,c	;volatile
 39905   0037A2                     
 39906                           ; BSR set to: 5
 39907                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 39908   0037A2  0E31               	movlw	49
 39909   0037A4  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39910   0037A6  EFD7  F01B         	goto	u6461
 39911   0037AA  EFD9  F01B         	goto	u6460
 39912   0037AE                     u6461:
 39913   0037AE  EFB2  F01C         	goto	l9194
 39914   0037B2                     u6460:
 39915   0037B2  EFC0  F01B         	goto	l9124
 39916   0037B6                     l1763:
 39917                           
 39918                           ; BSR set to: 5
 39919                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 39920   0037B6  9CBF               	bcf	191,6,c	;volatile
 39921   0037B8                     
 39922                           ; BSR set to: 5
 39923                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 39924   0037B8  0E63               	movlw	99
 39925   0037BA  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39926   0037BC  EFE2  F01B         	goto	u6471
 39927   0037C0  EFE4  F01B         	goto	u6470
 39928   0037C4                     u6471:
 39929   0037C4  EFB2  F01C         	goto	l9194
 39930   0037C8                     u6470:
 39931   0037C8  EFC0  F01B         	goto	l9124
 39932   0037CC                     l9146:
 39933   0037CC  0105               	movlb	5	; () banked
 39934   0037CE  518C               	movf	(_ledState+1)& (0+255),w,b
 39935   0037D0  6E0B               	movwf	??_leds_poll^(0+1280),c
 39936   0037D2  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 39937                           
 39938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39939                           ; Switch size 1, requested type "simple"
 39940                           ; Number of cases is 1, Range of values is 0 to 0
 39941                           ; switch strategies available:
 39942                           ; Name         Instructions Cycles
 39943                           ; simple_byte            4     3 (average)
 39944                           ;	Chosen strategy is simple_byte
 39945   0037D4  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 39946   0037D6  0A00               	xorlw	0	; case 0
 39947   0037D8  B4D8               	btfsc	status,2,c
 39948   0037DA  EFF1  F01B         	goto	l11682
 39949   0037DE  EFB2  F01C         	goto	l9194
 39950   0037E2                     l11682:
 39951                           
 39952                           ; BSR set to: 5
 39953                           ; Switch size 1, requested type "simple"
 39954                           ; Number of cases is 10, Range of values is 0 to 9
 39955                           ; switch strategies available:
 39956                           ; Name         Instructions Cycles
 39957                           ; simple_byte           31    16 (average)
 39958                           ;	Chosen strategy is simple_byte
 39959   0037E2  500B               	movf	??_leds_poll^(0+1280),w,c
 39960   0037E4  0A00               	xorlw	0	; case 0
 39961   0037E6  B4D8               	btfsc	status,2,c
 39962   0037E8  EF51  F01B         	goto	l1748
 39963   0037EC  0A01               	xorlw	1	; case 1
 39964   0037EE  B4D8               	btfsc	status,2,c
 39965   0037F0  EF4D  F01B         	goto	l1746
 39966   0037F4  0A03               	xorlw	3	; case 2
 39967   0037F6  B4D8               	btfsc	status,2,c
 39968   0037F8  EF55  F01B         	goto	l9100
 39969   0037FC  0A01               	xorlw	1	; case 3
 39970   0037FE  B4D8               	btfsc	status,2,c
 39971   003800  EF72  F01B         	goto	l9106
 39972   003804  0A07               	xorlw	7	; case 4
 39973   003806  B4D8               	btfsc	status,2,c
 39974   003808  EF8E  F01B         	goto	l9112
 39975   00380C  0A01               	xorlw	1	; case 5
 39976   00380E  B4D8               	btfsc	status,2,c
 39977   003810  EFB7  F01B         	goto	l1757
 39978   003814  0A03               	xorlw	3	; case 6
 39979   003816  B4D8               	btfsc	status,2,c
 39980   003818  EFAA  F01B         	goto	l1755
 39981   00381C  0A01               	xorlw	1	; case 7
 39982   00381E  B4D8               	btfsc	status,2,c
 39983   003820  EFD0  F01B         	goto	l1761
 39984   003824  0A0F               	xorlw	15	; case 8
 39985   003826  B4D8               	btfsc	status,2,c
 39986   003828  EFC5  F01B         	goto	l1759
 39987   00382C  0A01               	xorlw	1	; case 9
 39988   00382E  B4D8               	btfsc	status,2,c
 39989   003830  EFDB  F01B         	goto	l1763
 39990   003834  EFB2  F01C         	goto	l9194
 39991   003838                     l1766:
 39992                           
 39993                           ; BSR set to: 5
 39994                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 39995   003838  8EBF               	bsf	191,7,c	;volatile
 39996                           
 39997                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 39998   00383A  6B89               	clrf	_flashCounter& (0+255),b
 39999                           
 40000                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 40001   00383C  EFE7  F01C         	goto	l1785
 40002   003840                     l1768:
 40003                           
 40004                           ; BSR set to: 5
 40005                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 40006   003840  9EBF               	bcf	191,7,c	;volatile
 40007                           
 40008                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 40009   003842  6B89               	clrf	_flashCounter& (0+255),b
 40010                           
 40011                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 40012   003844  EFE7  F01C         	goto	l1785
 40013   003848                     l9148:
 40014                           
 40015                           ; BSR set to: 5
 40016                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 40017   003848  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40018   00384C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40019   00384E  0E00               	movlw	0
 40020   003850  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40021   003852  0E19               	movlw	25
 40022   003854  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40023   003856  EC95  F030         	call	___awdiv	;wreg free
 40024   00385A  3201               	rrcf	?___awdiv^(0+1280),f,c
 40025   00385C  3201               	rrcf	?___awdiv^(0+1280),f,c
 40026   00385E  50BF               	movf	191,w,c	;volatile
 40027   003860  1801               	xorwf	?___awdiv^(0+1280),w,c
 40028   003862  0B7F               	andlw	-129
 40029   003864  1801               	xorwf	?___awdiv^(0+1280),w,c
 40030   003866  6EBF               	movwf	191,c	;volatile
 40031   003868                     
 40032                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 40033   003868  0E31               	movlw	49
 40034   00386A  0105               	movlb	5	; () banked
 40035   00386C  6589               	cpfsgt	_flashCounter& (0+255),b
 40036   00386E  EF3B  F01C         	goto	u6481
 40037   003872  EF3D  F01C         	goto	u6480
 40038   003876                     u6481:
 40039   003876  EFE7  F01C         	goto	l1785
 40040   00387A                     u6480:
 40041   00387A                     l9152:
 40042                           
 40043                           ; BSR set to: 5
 40044                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 40045   00387A  6B89               	clrf	_flashCounter& (0+255),b
 40046   00387C  EFE7  F01C         	goto	l1785
 40047   003880                     l9154:
 40048                           
 40049                           ; BSR set to: 5
 40050                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 40051   003880  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40052   003884  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40053   003886  0E00               	movlw	0
 40054   003888  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40055   00388A  0E32               	movlw	50
 40056   00388C  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40057   00388E  EC95  F030         	call	___awdiv	;wreg free
 40058   003892  3201               	rrcf	?___awdiv^(0+1280),f,c
 40059   003894  3201               	rrcf	?___awdiv^(0+1280),f,c
 40060   003896  50BF               	movf	191,w,c	;volatile
 40061   003898  1801               	xorwf	?___awdiv^(0+1280),w,c
 40062   00389A  0B7F               	andlw	-129
 40063   00389C  1801               	xorwf	?___awdiv^(0+1280),w,c
 40064   00389E  6EBF               	movwf	191,c	;volatile
 40065   0038A0                     
 40066                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 40067   0038A0  0E63               	movlw	99
 40068   0038A2  0105               	movlb	5	; () banked
 40069   0038A4  6589               	cpfsgt	_flashCounter& (0+255),b
 40070   0038A6  EF57  F01C         	goto	u6491
 40071   0038AA  EF59  F01C         	goto	u6490
 40072   0038AE                     u6491:
 40073   0038AE  EFE7  F01C         	goto	l1785
 40074   0038B2                     u6490:
 40075   0038B2  EF3D  F01C         	goto	l9152
 40076   0038B6                     l9160:
 40077                           
 40078                           ; BSR set to: 5
 40079                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 40080   0038B6  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40081   0038BA  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40082   0038BC  0E00               	movlw	0
 40083   0038BE  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40084   0038C0  0E64               	movlw	100
 40085   0038C2  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40086   0038C4  EC95  F030         	call	___awdiv	;wreg free
 40087   0038C8  3201               	rrcf	?___awdiv^(0+1280),f,c
 40088   0038CA  3201               	rrcf	?___awdiv^(0+1280),f,c
 40089   0038CC  50BF               	movf	191,w,c	;volatile
 40090   0038CE  1801               	xorwf	?___awdiv^(0+1280),w,c
 40091   0038D0  0B7F               	andlw	-129
 40092   0038D2  1801               	xorwf	?___awdiv^(0+1280),w,c
 40093   0038D4  6EBF               	movwf	191,c	;volatile
 40094   0038D6                     
 40095                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 40096   0038D6  0EC7               	movlw	199
 40097   0038D8  0105               	movlb	5	; () banked
 40098   0038DA  6589               	cpfsgt	_flashCounter& (0+255),b
 40099   0038DC  EF72  F01C         	goto	u6501
 40100   0038E0  EF74  F01C         	goto	u6500
 40101   0038E4                     u6501:
 40102   0038E4  EFE7  F01C         	goto	l1785
 40103   0038E8                     u6500:
 40104   0038E8  EF3D  F01C         	goto	l9152
 40105   0038EC                     l1775:
 40106                           
 40107                           ; BSR set to: 5
 40108                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 40109   0038EC  8EBF               	bsf	191,7,c	;volatile
 40110   0038EE                     
 40111                           ; BSR set to: 5
 40112                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 40113   0038EE  0E18               	movlw	24
 40114   0038F0  6589               	cpfsgt	_flashCounter& (0+255),b
 40115   0038F2  EF7D  F01C         	goto	u6511
 40116   0038F6  EF7F  F01C         	goto	u6510
 40117   0038FA                     u6511:
 40118   0038FA  EFE7  F01C         	goto	l1785
 40119   0038FE                     u6510:
 40120   0038FE                     l9168:
 40121                           
 40122                           ; BSR set to: 5
 40123                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 40124   0038FE  6B89               	clrf	_flashCounter& (0+255),b
 40125                           
 40126                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 40127   003900  6B8B               	clrf	_ledState& (0+255),b
 40128   003902  EFE7  F01C         	goto	l1785
 40129   003906                     l1777:
 40130                           
 40131                           ; BSR set to: 5
 40132                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 40133   003906  9EBF               	bcf	191,7,c	;volatile
 40134   003908                     
 40135                           ; BSR set to: 5
 40136                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 40137   003908  0E18               	movlw	24
 40138   00390A  6589               	cpfsgt	_flashCounter& (0+255),b
 40139   00390C  EF8A  F01C         	goto	u6521
 40140   003910  EF8C  F01C         	goto	u6520
 40141   003914                     u6521:
 40142   003914  EFE7  F01C         	goto	l1785
 40143   003918                     u6520:
 40144   003918                     l9172:
 40145                           
 40146                           ; BSR set to: 5
 40147                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 40148   003918  6B89               	clrf	_flashCounter& (0+255),b
 40149   00391A                     
 40150                           ; BSR set to: 5
 40151                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 40152   00391A  0E01               	movlw	1
 40153   00391C  6F8B               	movwf	_ledState& (0+255),b
 40154   00391E  EFE7  F01C         	goto	l1785
 40155   003922                     l1779:
 40156                           
 40157                           ; BSR set to: 5
 40158                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 40159   003922  8EBF               	bsf	191,7,c	;volatile
 40160   003924                     
 40161                           ; BSR set to: 5
 40162                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 40163   003924  0E31               	movlw	49
 40164   003926  6589               	cpfsgt	_flashCounter& (0+255),b
 40165   003928  EF98  F01C         	goto	u6531
 40166   00392C  EF9A  F01C         	goto	u6530
 40167   003930                     u6531:
 40168   003930  EFE7  F01C         	goto	l1785
 40169   003934                     u6530:
 40170   003934  EF7F  F01C         	goto	l9168
 40171   003938                     l1781:
 40172                           
 40173                           ; BSR set to: 5
 40174                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 40175   003938  9EBF               	bcf	191,7,c	;volatile
 40176   00393A                     
 40177                           ; BSR set to: 5
 40178                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 40179   00393A  0E31               	movlw	49
 40180   00393C  6589               	cpfsgt	_flashCounter& (0+255),b
 40181   00393E  EFA3  F01C         	goto	u6541
 40182   003942  EFA5  F01C         	goto	u6540
 40183   003946                     u6541:
 40184   003946  EFE7  F01C         	goto	l1785
 40185   00394A                     u6540:
 40186   00394A  EF8C  F01C         	goto	l9172
 40187   00394E                     l1783:
 40188                           
 40189                           ; BSR set to: 5
 40190                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 40191   00394E  9EBF               	bcf	191,7,c	;volatile
 40192   003950                     
 40193                           ; BSR set to: 5
 40194                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 40195   003950  0E63               	movlw	99
 40196   003952  6589               	cpfsgt	_flashCounter& (0+255),b
 40197   003954  EFAE  F01C         	goto	u6551
 40198   003958  EFB0  F01C         	goto	u6550
 40199   00395C                     u6551:
 40200   00395C  EFE7  F01C         	goto	l1785
 40201   003960                     u6550:
 40202   003960  EF8C  F01C         	goto	l9172
 40203   003964                     l9194:
 40204                           
 40205                           ; BSR set to: 5
 40206   003964  518B               	movf	_ledState& (0+255),w,b
 40207   003966  6E0B               	movwf	??_leds_poll^(0+1280),c
 40208   003968  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 40209                           
 40210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40211                           ; Switch size 1, requested type "simple"
 40212                           ; Number of cases is 1, Range of values is 0 to 0
 40213                           ; switch strategies available:
 40214                           ; Name         Instructions Cycles
 40215                           ; simple_byte            4     3 (average)
 40216                           ;	Chosen strategy is simple_byte
 40217   00396A  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 40218   00396C  0A00               	xorlw	0	; case 0
 40219   00396E  B4D8               	btfsc	status,2,c
 40220   003970  EFBC  F01C         	goto	l11684
 40221   003974  EFE7  F01C         	goto	l1785
 40222   003978                     l11684:
 40223                           
 40224                           ; BSR set to: 5
 40225                           ; Switch size 1, requested type "simple"
 40226                           ; Number of cases is 10, Range of values is 0 to 9
 40227                           ; switch strategies available:
 40228                           ; Name         Instructions Cycles
 40229                           ; simple_byte           31    16 (average)
 40230                           ;	Chosen strategy is simple_byte
 40231   003978  500B               	movf	??_leds_poll^(0+1280),w,c
 40232   00397A  0A00               	xorlw	0	; case 0
 40233   00397C  B4D8               	btfsc	status,2,c
 40234   00397E  EF20  F01C         	goto	l1768
 40235   003982  0A01               	xorlw	1	; case 1
 40236   003984  B4D8               	btfsc	status,2,c
 40237   003986  EF1C  F01C         	goto	l1766
 40238   00398A  0A03               	xorlw	3	; case 2
 40239   00398C  B4D8               	btfsc	status,2,c
 40240   00398E  EF24  F01C         	goto	l9148
 40241   003992  0A01               	xorlw	1	; case 3
 40242   003994  B4D8               	btfsc	status,2,c
 40243   003996  EF40  F01C         	goto	l9154
 40244   00399A  0A07               	xorlw	7	; case 4
 40245   00399C  B4D8               	btfsc	status,2,c
 40246   00399E  EF5B  F01C         	goto	l9160
 40247   0039A2  0A01               	xorlw	1	; case 5
 40248   0039A4  B4D8               	btfsc	status,2,c
 40249   0039A6  EF83  F01C         	goto	l1777
 40250   0039AA  0A03               	xorlw	3	; case 6
 40251   0039AC  B4D8               	btfsc	status,2,c
 40252   0039AE  EF76  F01C         	goto	l1775
 40253   0039B2  0A01               	xorlw	1	; case 7
 40254   0039B4  B4D8               	btfsc	status,2,c
 40255   0039B6  EF9C  F01C         	goto	l1781
 40256   0039BA  0A0F               	xorlw	15	; case 8
 40257   0039BC  B4D8               	btfsc	status,2,c
 40258   0039BE  EF91  F01C         	goto	l1779
 40259   0039C2  0A01               	xorlw	1	; case 9
 40260   0039C4  B4D8               	btfsc	status,2,c
 40261   0039C6  EFA7  F01C         	goto	l1783
 40262   0039CA  EFE7  F01C         	goto	l1785
 40263   0039CE                     l1785:
 40264                           
 40265                           ; BSR set to: 5
 40266   0039CE  0012               	return		;funcret
 40267   0039D0                     __end_of_leds_poll:
 40268                           	callstack 0
 40269                           
 40270 ;; *************** function ___lmul *****************
 40271 ;; Defined at:
 40272 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 40273 ;; Parameters:    Size  Location     Type
 40274 ;;  multiplier      4    0[COMRAM] unsigned long 
 40275 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40276 ;; Auto vars:     Size  Location     Type
 40277 ;;  product         4    8[COMRAM] unsigned long 
 40278 ;; Return value:  Size  Location     Type
 40279 ;;                  4    0[COMRAM] unsigned long 
 40280 ;; Registers used:
 40281 ;;		wreg, status,2, status,0
 40282 ;; Tracked objects:
 40283 ;;		On entry : 0/0
 40284 ;;		On exit  : 0/0
 40285 ;;		Unchanged: 0/0
 40286 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40288 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40290 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40291 ;;Total ram usage:       12 bytes
 40292 ;; Hardware stack levels used: 1
 40293 ;; Hardware stack levels required when called: 1
 40294 ;; This function calls:
 40295 ;;		Nothing
 40296 ;; This function is called by:
 40297 ;;		_pbDownTimer
 40298 ;;		_pbUpTimer
 40299 ;;		_poll
 40300 ;; This function uses a non-reentrant model
 40301 ;;
 40302                           
 40303                           	psect	text111
 40304   0076D4                     __ptext111:
 40305                           	callstack 0
 40306   0076D4                     ___lmul:
 40307                           	callstack 124
 40308   0076D4  0E00               	movlw	0
 40309   0076D6  6E09               	movwf	___lmul@product^(0+1280),c
 40310   0076D8  0E00               	movlw	0
 40311   0076DA  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 40312   0076DC  0E00               	movlw	0
 40313   0076DE  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 40314   0076E0  0E00               	movlw	0
 40315   0076E2  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 40316   0076E4                     l9210:
 40317   0076E4  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 40318   0076E6  EF77  F03B         	goto	u6561
 40319   0076EA  EF79  F03B         	goto	u6560
 40320   0076EE                     u6561:
 40321   0076EE  EF81  F03B         	goto	l9214
 40322   0076F2                     u6560:
 40323   0076F2  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 40324   0076F4  2609               	addwf	___lmul@product^(0+1280),f,c
 40325   0076F6  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 40326   0076F8  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 40327   0076FA  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 40328   0076FC  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 40329   0076FE  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 40330   007700  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 40331   007702                     l9214:
 40332   007702  90D8               	bcf	status,0,c
 40333   007704  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 40334   007706  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 40335   007708  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 40336   00770A  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 40337   00770C  90D8               	bcf	status,0,c
 40338   00770E  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 40339   007710  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 40340   007712  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 40341   007714  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 40342   007716  5001               	movf	___lmul@multiplier^(0+1280),w,c
 40343   007718  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 40344   00771A  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 40345   00771C  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 40346   00771E  A4D8               	btfss	status,2,c
 40347   007720  EF94  F03B         	goto	u6571
 40348   007724  EF96  F03B         	goto	u6570
 40349   007728                     u6571:
 40350   007728  EF72  F03B         	goto	l9210
 40351   00772C                     u6570:
 40352   00772C  C509  F501         	movff	___lmul@product,?___lmul
 40353   007730  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 40354   007734  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 40355   007738  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 40356   00773C  0012               	return		;funcret
 40357   00773E                     __end_of___lmul:
 40358                           	callstack 0
 40359                           
 40360 ;; *************** function ___lldiv *****************
 40361 ;; Defined at:
 40362 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 40363 ;; Parameters:    Size  Location     Type
 40364 ;;  dividend        4   10[COMRAM] unsigned long 
 40365 ;;  divisor         4   14[COMRAM] unsigned long 
 40366 ;; Auto vars:     Size  Location     Type
 40367 ;;  quotient        4   18[COMRAM] unsigned long 
 40368 ;;  counter         1   22[COMRAM] unsigned char 
 40369 ;; Return value:  Size  Location     Type
 40370 ;;                  4   10[COMRAM] unsigned long 
 40371 ;; Registers used:
 40372 ;;		wreg, status,2, status,0
 40373 ;; Tracked objects:
 40374 ;;		On entry : 0/0
 40375 ;;		On exit  : 0/0
 40376 ;;		Unchanged: 0/0
 40377 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40378 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40379 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40381 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40382 ;;Total ram usage:       13 bytes
 40383 ;; Hardware stack levels used: 1
 40384 ;; Hardware stack levels required when called: 1
 40385 ;; This function calls:
 40386 ;;		Nothing
 40387 ;; This function is called by:
 40388 ;;		_pbDownTimer
 40389 ;;		_pbUpTimer
 40390 ;; This function uses a non-reentrant model
 40391 ;;
 40392                           
 40393                           	psect	text112
 40394   006828                     __ptext112:
 40395                           	callstack 0
 40396   006828                     ___lldiv:
 40397                           	callstack 123
 40398   006828  0E00               	movlw	0
 40399   00682A  6E13               	movwf	___lldiv@quotient^(0+1280),c
 40400   00682C  0E00               	movlw	0
 40401   00682E  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 40402   006830  0E00               	movlw	0
 40403   006832  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 40404   006834  0E00               	movlw	0
 40405   006836  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 40406   006838  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40407   00683A  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 40408   00683C  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 40409   00683E  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 40410   006840  B4D8               	btfsc	status,2,c
 40411   006842  EF25  F034         	goto	u6581
 40412   006846  EF27  F034         	goto	u6580
 40413   00684A                     u6581:
 40414   00684A  EF5D  F034         	goto	l2134
 40415   00684E                     u6580:
 40416   00684E  0E01               	movlw	1
 40417   006850  6E17               	movwf	___lldiv@counter^(0+1280),c
 40418   006852  EF31  F034         	goto	l9226
 40419   006856                     l9224:
 40420   006856  90D8               	bcf	status,0,c
 40421   006858  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 40422   00685A  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 40423   00685C  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 40424   00685E  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 40425   006860  2A17               	incf	___lldiv@counter^(0+1280),f,c
 40426   006862                     l9226:
 40427   006862  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 40428   006864  EF36  F034         	goto	u6591
 40429   006868  EF38  F034         	goto	u6590
 40430   00686C                     u6591:
 40431   00686C  EF2B  F034         	goto	l9224
 40432   006870                     u6590:
 40433   006870                     l9228:
 40434   006870  90D8               	bcf	status,0,c
 40435   006872  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 40436   006874  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 40437   006876  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 40438   006878  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 40439   00687A  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40440   00687C  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 40441   00687E  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40442   006880  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 40443   006882  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40444   006884  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 40445   006886  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40446   006888  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 40447   00688A  A0D8               	btfss	status,0,c
 40448   00688C  EF4A  F034         	goto	u6601
 40449   006890  EF4C  F034         	goto	u6600
 40450   006894                     u6601:
 40451   006894  EF55  F034         	goto	l9236
 40452   006898                     u6600:
 40453   006898  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40454   00689A  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 40455   00689C  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40456   00689E  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 40457   0068A0  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40458   0068A2  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 40459   0068A4  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40460   0068A6  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 40461   0068A8  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 40462   0068AA                     l9236:
 40463   0068AA  90D8               	bcf	status,0,c
 40464   0068AC  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 40465   0068AE  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 40466   0068B0  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 40467   0068B2  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 40468   0068B4  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 40469   0068B6  EF38  F034         	goto	l9228
 40470   0068BA                     l2134:
 40471   0068BA  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 40472   0068BE  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 40473   0068C2  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 40474   0068C6  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 40475   0068CA  0012               	return		;funcret
 40476   0068CC                     __end_of___lldiv:
 40477                           	callstack 0
 40478                           
 40479 ;; *************** function _factoryReset *****************
 40480 ;; Defined at:
 40481 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 40482 ;; Parameters:    Size  Location     Type
 40483 ;;		None
 40484 ;; Auto vars:     Size  Location     Type
 40485 ;;  i               1   58[COMRAM] unsigned char 
 40486 ;; Return value:  Size  Location     Type
 40487 ;;                  1    wreg      void 
 40488 ;; Registers used:
 40489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40490 ;; Tracked objects:
 40491 ;;		On entry : 0/0
 40492 ;;		On exit  : 0/0
 40493 ;;		Unchanged: 0/0
 40494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40497 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40498 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40499 ;;Total ram usage:        5 bytes
 40500 ;; Hardware stack levels used: 1
 40501 ;; Hardware stack levels required when called: 10
 40502 ;; This function calls:
 40503 ;;		NULL
 40504 ;;		_APP_factoryReset
 40505 ;;		_canFactoryReset
 40506 ;;		_mnsFactoryReset
 40507 ;;		_nvFactoryReset
 40508 ;;		_teachFactoryReset
 40509 ;;		_writeNVM
 40510 ;; This function is called by:
 40511 ;;		_checkPowerOnPb
 40512 ;;		_main
 40513 ;; This function uses a non-reentrant model
 40514 ;;
 40515                           
 40516                           	psect	text113
 40517   005674                     __ptext113:
 40518                           	callstack 0
 40519   005674                     _factoryReset:
 40520                           	callstack 116
 40521   005674                     
 40522                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<6; i++) {
 40523   005674  6A3B               	clrf	factoryReset@i^(0+1280),c
 40524   005676                     l10858:
 40525                           
 40526                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 40527   005676  503B               	movf	factoryReset@i^(0+1280),w,c
 40528   005678  0D02               	mullw	2
 40529   00567A  0E89               	movlw	low _services
 40530   00567C  24F3               	addwf	243,w,c
 40531   00567E  6EF6               	movwf	tblptrl,c
 40532   005680  0EFF               	movlw	high _services
 40533   005682  20F4               	addwfc	244,w,c
 40534   005684  6EF7               	movwf	tblptrh,c
 40535   005686                     	if	1	;There are 3 active tblptr bytes
 40536   005686  6AF8               	clrf	tblptru,c
 40537   005688  0E00               	movlw	low (__mediumconst shr (0+16))
 40538   00568A  22F8               	addwfc	tblptru,f,c
 40539   00568C                     	endif
 40540   00568C  0009               	tblrd		*+
 40541   00568E  50F5               	movf	tablat,w,c
 40542   005690  0009               	tblrd		*+
 40543   005692  10F5               	iorwf	tablat,w,c
 40544   005694  B4D8               	btfsc	status,2,c
 40545   005696  EF4F  F02B         	goto	u8221
 40546   00569A  EF51  F02B         	goto	u8220
 40547   00569E                     u8221:
 40548   00569E  EFA2  F02B         	goto	l10864
 40549   0056A2                     u8220:
 40550   0056A2  503B               	movf	factoryReset@i^(0+1280),w,c
 40551   0056A4  0D02               	mullw	2
 40552   0056A6  0E89               	movlw	low _services
 40553   0056A8  24F3               	addwf	243,w,c
 40554   0056AA  6EF6               	movwf	tblptrl,c
 40555   0056AC  0EFF               	movlw	high _services
 40556   0056AE  20F4               	addwfc	244,w,c
 40557   0056B0  6EF7               	movwf	tblptrh,c
 40558   0056B2                     	if	1	;There are 3 active tblptr bytes
 40559   0056B2  6AF8               	clrf	tblptru,c
 40560   0056B4  0E00               	movlw	low (__mediumconst shr (0+16))
 40561   0056B6  22F8               	addwfc	tblptru,f,c
 40562   0056B8                     	endif
 40563   0056B8  0009               	tblrd		*+
 40564   0056BA  C4F5 F537          	movff	tablat,??_factoryReset
 40565   0056BE  0009               	tblrd		*+
 40566   0056C0  C4F5 F538          	movff	tablat,??_factoryReset+1
 40567   0056C4  0E02               	movlw	2
 40568   0056C6  2637               	addwf	??_factoryReset^(0+1280),f,c
 40569   0056C8  0E00               	movlw	0
 40570   0056CA  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40571   0056CC  C537  F4F6         	movff	??_factoryReset,tblptrl
 40572   0056D0  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40573   0056D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40574   0056D4  6AF8               	clrf	tblptru,c
 40575   0056D6                     	endif
 40576   0056D6                     	if	0	;tblptru may be non-zero
 40577   0056D6                     	endif
 40578   0056D6  0009               	tblrd		*+
 40579   0056D8  50F5               	movf	tablat,w,c
 40580   0056DA  0009               	tblrd		*+
 40581   0056DC  10F5               	iorwf	tablat,w,c
 40582   0056DE  B4D8               	btfsc	status,2,c
 40583   0056E0  EF74  F02B         	goto	u8231
 40584   0056E4  EF76  F02B         	goto	u8230
 40585   0056E8                     u8231:
 40586   0056E8  EFA2  F02B         	goto	l10864
 40587   0056EC                     u8230:
 40588   0056EC                     
 40589                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 40590   0056EC  503B               	movf	factoryReset@i^(0+1280),w,c
 40591   0056EE  0D02               	mullw	2
 40592   0056F0  0E89               	movlw	low _services
 40593   0056F2  24F3               	addwf	243,w,c
 40594   0056F4  6EF6               	movwf	tblptrl,c
 40595   0056F6  0EFF               	movlw	high _services
 40596   0056F8  20F4               	addwfc	244,w,c
 40597   0056FA  6EF7               	movwf	tblptrh,c
 40598   0056FC                     	if	1	;There are 3 active tblptr bytes
 40599   0056FC  6AF8               	clrf	tblptru,c
 40600   0056FE  0E00               	movlw	low (__mediumconst shr (0+16))
 40601   005700  22F8               	addwfc	tblptru,f,c
 40602   005702                     	endif
 40603   005702  0009               	tblrd		*+
 40604   005704  C4F5 F537          	movff	tablat,??_factoryReset
 40605   005708  0009               	tblrd		*+
 40606   00570A  C4F5 F538          	movff	tablat,??_factoryReset+1
 40607   00570E  0E02               	movlw	2
 40608   005710  2637               	addwf	??_factoryReset^(0+1280),f,c
 40609   005712  0E00               	movlw	0
 40610   005714  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40611   005716  C537  F4F6         	movff	??_factoryReset,tblptrl
 40612   00571A  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40613   00571E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40614   00571E  6AF8               	clrf	tblptru,c
 40615   005720                     	endif
 40616   005720                     	if	0	;tblptru may be non-zero
 40617   005720                     	endif
 40618   005720  0009               	tblrd		*+
 40619   005722  C4F5 F539          	movff	tablat,??_factoryReset+2
 40620   005726  0009               	tblrd		*+
 40621   005728  C4F5 F53A          	movff	tablat,??_factoryReset+3
 40622   00572C  D802               	call	u8248
 40623   00572E  EFA2  F02B         	goto	u8249
 40624   005732                     u8248:
 40625   005732  0005               	push	
 40626   005734  6EFA               	movwf	pclath,c
 40627   005736  5039               	movf	(??_factoryReset+2)^(0+1280),w,c
 40628   005738  6EFD               	movwf	tosl,c
 40629   00573A  503A               	movf	(??_factoryReset+3)^(0+1280),w,c
 40630   00573C  6EFE               	movwf	tosh,c
 40631   00573E  6AFF               	clrf	tosu,c
 40632   005740  50FA               	movf	pclath,w,c
 40633   005742  0012               	return		;indir
 40634   005744                     u8249:
 40635   005744                     l10864:
 40636                           
 40637                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 40638   005744  2A3B               	incf	factoryReset@i^(0+1280),f,c
 40639   005746  0E05               	movlw	5
 40640   005748  643B               	cpfsgt	factoryReset@i^(0+1280),c
 40641   00574A  EFA9  F02B         	goto	u8251
 40642   00574E  EFAB  F02B         	goto	u8250
 40643   005752                     u8251:
 40644   005752  EF3B  F02B         	goto	l10858
 40645   005756                     u8250:
 40646   005756                     
 40647                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 40648   005756  0EFA               	movlw	250
 40649   005758  6E0E               	movwf	writeNVM@index^(0+1280),c
 40650   00575A  0E03               	movlw	3
 40651   00575C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40652   00575E  0E00               	movlw	0
 40653   005760  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40654   005762  0E01               	movlw	1
 40655   005764  6E11               	movwf	writeNVM@value^(0+1280),c
 40656   005766  0E00               	movlw	0
 40657   005768  EC34  F03C         	call	_writeNVM
 40658   00576C                     
 40659                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 40660   00576C  ECAB  F041         	call	_APP_factoryReset	;wreg free
 40661   005770  0012               	return		;funcret
 40662   005772                     __end_of_factoryReset:
 40663                           	callstack 0
 40664                           
 40665 ;; *************** function _nvFactoryReset *****************
 40666 ;; Defined at:
 40667 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 40668 ;; Parameters:    Size  Location     Type
 40669 ;;		None
 40670 ;; Auto vars:     Size  Location     Type
 40671 ;;  i               1   22[COMRAM] unsigned char 
 40672 ;; Return value:  Size  Location     Type
 40673 ;;                  1    wreg      void 
 40674 ;; Registers used:
 40675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40676 ;; Tracked objects:
 40677 ;;		On entry : 0/0
 40678 ;;		On exit  : 0/0
 40679 ;;		Unchanged: 0/0
 40680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40685 ;;Total ram usage:        3 bytes
 40686 ;; Hardware stack levels used: 1
 40687 ;; Hardware stack levels required when called: 6
 40688 ;; This function calls:
 40689 ;;		_APP_nvDefault
 40690 ;;		_writeNVM
 40691 ;; This function is called by:
 40692 ;;		_factoryReset
 40693 ;; This function uses a non-reentrant model
 40694 ;;
 40695                           
 40696                           	psect	text114
 40697   007D22                     __ptext114:
 40698                           	callstack 0
 40699   007D22                     _nvFactoryReset:
 40700                           	callstack 119
 40701   007D22                     
 40702                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 49; i++) {
 40703   007D22  0E01               	movlw	1
 40704   007D24  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 40705   007D26                     l9012:
 40706                           
 40707                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 40708   007D26  0E00               	movlw	0
 40709   007D28  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 40710   007D2A  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 40711   007D2C  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 40712   007D2E  0E02               	movlw	2
 40713   007D30  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 40714   007D32  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 40715   007D36  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 40716   007D3A  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 40717   007D3C  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 40718   007D3E  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 40719   007D40  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 40720   007D42  ECF5  F028         	call	_APP_nvDefault
 40721   007D46  6E11               	movwf	writeNVM@value^(0+1280),c
 40722   007D48  0E00               	movlw	0
 40723   007D4A  EC34  F03C         	call	_writeNVM
 40724   007D4E                     
 40725                           ;../../VLCBlib_PIC/nv.c: 130:     }
 40726   007D4E  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 40727   007D50  0E31               	movlw	49
 40728   007D52  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 40729   007D54  EFAE  F03E         	goto	u6321
 40730   007D58  EFB0  F03E         	goto	u6320
 40731   007D5C                     u6321:
 40732   007D5C  EF93  F03E         	goto	l9012
 40733   007D60                     u6320:
 40734   007D60  0012               	return		;funcret
 40735   007D62                     __end_of_nvFactoryReset:
 40736                           	callstack 0
 40737                           
 40738 ;; *************** function _mnsFactoryReset *****************
 40739 ;; Defined at:
 40740 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 40741 ;; Parameters:    Size  Location     Type
 40742 ;;		None
 40743 ;; Auto vars:     Size  Location     Type
 40744 ;;		None
 40745 ;; Return value:  Size  Location     Type
 40746 ;;                  1    wreg      void 
 40747 ;; Registers used:
 40748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40749 ;; Tracked objects:
 40750 ;;		On entry : 0/0
 40751 ;;		On exit  : 0/0
 40752 ;;		Unchanged: 0/0
 40753 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40758 ;;Total ram usage:        0 bytes
 40759 ;; Hardware stack levels used: 1
 40760 ;; Hardware stack levels required when called: 6
 40761 ;; This function calls:
 40762 ;;		_writeNVM
 40763 ;; This function is called by:
 40764 ;;		_factoryReset
 40765 ;; This function uses a non-reentrant model
 40766 ;;
 40767                           
 40768                           	psect	text115
 40769   007668                     __ptext115:
 40770                           	callstack 0
 40771   007668                     _mnsFactoryReset:
 40772                           	callstack 119
 40773   007668                     
 40774                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 40775   007668  0105               	movlb	5	; () banked
 40776   00766A  6B90               	clrf	(_nn+1)& (0+255),b
 40777                           
 40778                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 40779   00766C  6B8F               	clrf	_nn& (0+255),b
 40780   00766E                     
 40781                           ; BSR set to: 5
 40782                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 40783   00766E  0EFD               	movlw	253
 40784   007670  6E0E               	movwf	writeNVM@index^(0+1280),c
 40785   007672  0E03               	movlw	3
 40786   007674  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40787   007676  0E00               	movlw	0
 40788   007678  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40789   00767A  C590  F511         	movff	_nn+1,writeNVM@value
 40790   00767E  0E00               	movlw	0
 40791   007680  EC34  F03C         	call	_writeNVM
 40792                           
 40793                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 40794   007684  0EFC               	movlw	252
 40795   007686  6E0E               	movwf	writeNVM@index^(0+1280),c
 40796   007688  0E03               	movlw	3
 40797   00768A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40798   00768C  0E00               	movlw	0
 40799   00768E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40800   007690  C58F  F511         	movff	_nn,writeNVM@value
 40801   007694  0E00               	movlw	0
 40802   007696  EC34  F03C         	call	_writeNVM
 40803   00769A                     
 40804                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 40805   00769A  0105               	movlb	5	; () banked
 40806   00769C  69A1               	setf	_mode_state& (0+255),b
 40807   00769E  69A0               	setf	_last_mode_state& (0+255),b
 40808                           
 40809                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 40810   0076A0  0EFB               	movlw	251
 40811   0076A2  6E0E               	movwf	writeNVM@index^(0+1280),c
 40812   0076A4  0E03               	movlw	3
 40813   0076A6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40814   0076A8  0E00               	movlw	0
 40815   0076AA  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40816   0076AC  C5A1  F511         	movff	_mode_state,writeNVM@value
 40817   0076B0  0E00               	movlw	0
 40818   0076B2  EC34  F03C         	call	_writeNVM
 40819   0076B6                     
 40820                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 40821   0076B6  0105               	movlb	5	; () banked
 40822   0076B8  6BA4               	clrf	_mode_flags& (0+255),b
 40823   0076BA  6B9F               	clrf	_last_mode_flags& (0+255),b
 40824                           
 40825                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 40826   0076BC  0EF9               	movlw	249
 40827   0076BE  6E0E               	movwf	writeNVM@index^(0+1280),c
 40828   0076C0  0E03               	movlw	3
 40829   0076C2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40830   0076C4  0E00               	movlw	0
 40831   0076C6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40832   0076C8  C5A4  F511         	movff	_mode_flags,writeNVM@value
 40833   0076CC  0E00               	movlw	0
 40834   0076CE  EC34  F03C         	call	_writeNVM
 40835   0076D2  0012               	return		;funcret
 40836   0076D4                     __end_of_mnsFactoryReset:
 40837                           	callstack 0
 40838                           
 40839 ;; *************** function _canFactoryReset *****************
 40840 ;; Defined at:
 40841 ;;		line 210 in file "../../VLCBlib_PIC/can18_can_2.c"
 40842 ;; Parameters:    Size  Location     Type
 40843 ;;		None
 40844 ;; Auto vars:     Size  Location     Type
 40845 ;;		None
 40846 ;; Return value:  Size  Location     Type
 40847 ;;                  1    wreg      void 
 40848 ;; Registers used:
 40849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40850 ;; Tracked objects:
 40851 ;;		On entry : 0/0
 40852 ;;		On exit  : 0/0
 40853 ;;		Unchanged: 0/0
 40854 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40859 ;;Total ram usage:        0 bytes
 40860 ;; Hardware stack levels used: 1
 40861 ;; Hardware stack levels required when called: 6
 40862 ;; This function calls:
 40863 ;;		_writeNVM
 40864 ;; This function is called by:
 40865 ;;		_factoryReset
 40866 ;; This function uses a non-reentrant model
 40867 ;;
 40868                           
 40869                           	psect	text116
 40870   008270                     __ptext116:
 40871                           	callstack 0
 40872   008270                     _canFactoryReset:
 40873                           	callstack 119
 40874   008270                     
 40875                           ;../../VLCBlib_PIC/can18_can_2.c: 211:     canId = 0;
 40876   008270  0105               	movlb	5	; () banked
 40877   008272  6BA8               	clrf	_canId& (0+255),b
 40878   008274                     
 40879                           ; BSR set to: 5
 40880                           ;../../VLCBlib_PIC/can18_can_2.c: 212:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 40881   008274  0EFE               	movlw	254
 40882   008276  6E0E               	movwf	writeNVM@index^(0+1280),c
 40883   008278  0E03               	movlw	3
 40884   00827A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40885   00827C  0E00               	movlw	0
 40886   00827E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40887   008280  C5A8  F511         	movff	_canId,writeNVM@value
 40888   008284  0E00               	movlw	0
 40889   008286  EC34  F03C         	call	_writeNVM
 40890   00828A  0012               	return		;funcret
 40891   00828C                     __end_of_canFactoryReset:
 40892                           	callstack 0
 40893                           
 40894 ;; *************** function _teachFactoryReset *****************
 40895 ;; Defined at:
 40896 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40897 ;; Parameters:    Size  Location     Type
 40898 ;;		None
 40899 ;; Auto vars:     Size  Location     Type
 40900 ;;		None
 40901 ;; Return value:  Size  Location     Type
 40902 ;;                  1    wreg      void 
 40903 ;; Registers used:
 40904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40905 ;; Tracked objects:
 40906 ;;		On entry : 0/0
 40907 ;;		On exit  : 0/0
 40908 ;;		Unchanged: 0/0
 40909 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40914 ;;Total ram usage:        0 bytes
 40915 ;; Hardware stack levels used: 1
 40916 ;; Hardware stack levels required when called: 8
 40917 ;; This function calls:
 40918 ;;		_clearAllEvents
 40919 ;; This function is called by:
 40920 ;;		_factoryReset
 40921 ;; This function uses a non-reentrant model
 40922 ;;
 40923                           
 40924                           	psect	text117
 40925   008350                     __ptext117:
 40926                           	callstack 0
 40927   008350                     _teachFactoryReset:
 40928                           	callstack 117
 40929   008350                     
 40930                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 40931   008350  EC0B  F041         	call	_clearAllEvents	;wreg free
 40932   008354  0012               	return		;funcret
 40933   008356                     __end_of_teachFactoryReset:
 40934                           	callstack 0
 40935                           
 40936 ;; *************** function _APP_nvDefault *****************
 40937 ;; Defined at:
 40938 ;;		line 70 in file "../canargb_nvs.c"
 40939 ;; Parameters:    Size  Location     Type
 40940 ;;  index           1    wreg     unsigned char 
 40941 ;; Auto vars:     Size  Location     Type
 40942 ;;  index           1   10[COMRAM] unsigned char 
 40943 ;; Return value:  Size  Location     Type
 40944 ;;                  1    wreg      unsigned char 
 40945 ;; Registers used:
 40946 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40947 ;; Tracked objects:
 40948 ;;		On entry : 0/0
 40949 ;;		On exit  : 0/0
 40950 ;;		Unchanged: 0/0
 40951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40954 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40955 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40956 ;;Total ram usage:        3 bytes
 40957 ;; Hardware stack levels used: 1
 40958 ;; Hardware stack levels required when called: 2
 40959 ;; This function calls:
 40960 ;;		___awdiv
 40961 ;;		___awmod
 40962 ;; This function is called by:
 40963 ;;		_nvFactoryReset
 40964 ;; This function uses a non-reentrant model
 40965 ;;
 40966                           
 40967                           	psect	text118
 40968   0051EA                     __ptext118:
 40969                           	callstack 0
 40970   0051EA                     _APP_nvDefault:
 40971                           	callstack 122
 40972                           
 40973                           ;incstack = 0
 40974                           ;APP_nvDefault@index stored from wreg
 40975   0051EA  6E0B               	movwf	APP_nvDefault@index^(0+1280),c
 40976   0051EC                     
 40977                           ;../canargb_nvs.c: 71:     if (index == 49) {
 40978   0051EC  0E31               	movlw	49
 40979   0051EE  180B               	xorwf	APP_nvDefault@index^(0+1280),w,c
 40980   0051F0  A4D8               	btfss	status,2,c
 40981   0051F2  EFFD  F028         	goto	u5441
 40982   0051F6  EFFF  F028         	goto	u5440
 40983   0051FA                     u5441:
 40984   0051FA  EF02  F029         	goto	l8028
 40985   0051FE                     u5440:
 40986   0051FE                     
 40987                           ;../canargb_nvs.c: 72:         return 3;
 40988   0051FE  0E03               	movlw	3
 40989   005200  EF92  F029         	goto	l290
 40990   005204                     l8028:
 40991                           
 40992                           ;../canargb_nvs.c: 74:     index--;
 40993   005204  060B               	decf	APP_nvDefault@index^(0+1280),f,c
 40994   005206                     
 40995                           ;../canargb_nvs.c: 75:     if (index < 49) {
 40996   005206  0E31               	movlw	49
 40997   005208  600B               	cpfslt	APP_nvDefault@index^(0+1280),c
 40998   00520A  EF09  F029         	goto	u5451
 40999   00520E  EF0B  F029         	goto	u5450
 41000   005212                     u5451:
 41001   005212  EF91  F029         	goto	l8050
 41002   005216                     u5450:
 41003   005216  EF72  F029         	goto	l8048
 41004   00521A                     l8034:
 41005                           
 41006                           ;../canargb_nvs.c: 78:                 return defaultColours[index/3].red;
 41007   00521A  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41008   00521E  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41009   005220  0E00               	movlw	0
 41010   005222  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41011   005224  0E03               	movlw	3
 41012   005226  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41013   005228  EC95  F030         	call	___awdiv	;wreg free
 41014   00522C  0E03               	movlw	3
 41015   00522E  0201               	mulwf	?___awdiv^(0+1280),c
 41016   005230  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41017   005234  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41018   005238  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41019   00523A  50F3               	movf	prodl,w,c
 41020   00523C  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41021   00523E  0E59               	movlw	low _defaultColours
 41022   005240  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41023   005242  6EF6               	movwf	tblptrl,c
 41024   005244  0EFF               	movlw	high _defaultColours
 41025   005246  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41026   005248  6EF7               	movwf	tblptrh,c
 41027   00524A                     	if	1	;There are 3 active tblptr bytes
 41028   00524A  6AF8               	clrf	tblptru,c
 41029   00524C  0E00               	movlw	low (__mediumconst shr (0+16))
 41030   00524E  22F8               	addwfc	tblptru,f,c
 41031   005250                     	endif
 41032   005250  0008               	tblrd		*
 41033   005252  50F5               	movf	tablat,w,c
 41034   005254  EF92  F029         	goto	l290
 41035   005258                     l8038:
 41036                           
 41037                           ;../canargb_nvs.c: 80:                 return defaultColours[index/3].green;
 41038   005258  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41039   00525C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41040   00525E  0E00               	movlw	0
 41041   005260  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41042   005262  0E03               	movlw	3
 41043   005264  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41044   005266  EC95  F030         	call	___awdiv	;wreg free
 41045   00526A  0E03               	movlw	3
 41046   00526C  0201               	mulwf	?___awdiv^(0+1280),c
 41047   00526E  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41048   005272  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41049   005276  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41050   005278  50F3               	movf	prodl,w,c
 41051   00527A  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41052   00527C  0E01               	movlw	1
 41053   00527E  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 41054   005280  0E00               	movlw	0
 41055   005282  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 41056   005284  0E59               	movlw	low _defaultColours
 41057   005286  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41058   005288  6EF6               	movwf	tblptrl,c
 41059   00528A  0EFF               	movlw	high _defaultColours
 41060   00528C  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41061   00528E  6EF7               	movwf	tblptrh,c
 41062   005290                     	if	1	;There are 3 active tblptr bytes
 41063   005290  6AF8               	clrf	tblptru,c
 41064   005292  0E00               	movlw	low (__mediumconst shr (0+16))
 41065   005294  22F8               	addwfc	tblptru,f,c
 41066   005296                     	endif
 41067   005296  0008               	tblrd		*
 41068   005298  50F5               	movf	tablat,w,c
 41069   00529A  EF92  F029         	goto	l290
 41070   00529E                     l8042:
 41071                           
 41072                           ;../canargb_nvs.c: 82:                 return defaultColours[index/3].blue;
 41073   00529E  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41074   0052A2  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41075   0052A4  0E00               	movlw	0
 41076   0052A6  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41077   0052A8  0E03               	movlw	3
 41078   0052AA  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41079   0052AC  EC95  F030         	call	___awdiv	;wreg free
 41080   0052B0  0E03               	movlw	3
 41081   0052B2  0201               	mulwf	?___awdiv^(0+1280),c
 41082   0052B4  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41083   0052B8  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41084   0052BC  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41085   0052BE  50F3               	movf	prodl,w,c
 41086   0052C0  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41087   0052C2  0E02               	movlw	2
 41088   0052C4  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 41089   0052C6  0E00               	movlw	0
 41090   0052C8  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 41091   0052CA  0E59               	movlw	low _defaultColours
 41092   0052CC  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41093   0052CE  6EF6               	movwf	tblptrl,c
 41094   0052D0  0EFF               	movlw	high _defaultColours
 41095   0052D2  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41096   0052D4  6EF7               	movwf	tblptrh,c
 41097   0052D6                     	if	1	;There are 3 active tblptr bytes
 41098   0052D6  6AF8               	clrf	tblptru,c
 41099   0052D8  0E00               	movlw	low (__mediumconst shr (0+16))
 41100   0052DA  22F8               	addwfc	tblptru,f,c
 41101   0052DC                     	endif
 41102   0052DC  0008               	tblrd		*
 41103   0052DE  50F5               	movf	tablat,w,c
 41104   0052E0  EF92  F029         	goto	l290
 41105   0052E4                     l8048:
 41106   0052E4  C50B  F501         	movff	APP_nvDefault@index,___awmod@dividend
 41107   0052E8  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
 41108   0052EA  0E00               	movlw	0
 41109   0052EC  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
 41110   0052EE  0E03               	movlw	3
 41111   0052F0  6E03               	movwf	___awmod@divisor^(0+1280),c
 41112   0052F2  EC6F  F032         	call	___awmod	;wreg free
 41113                           
 41114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41115                           ; Switch size 1, requested type "simple"
 41116                           ; Number of cases is 1, Range of values is 0 to 0
 41117                           ; switch strategies available:
 41118                           ; Name         Instructions Cycles
 41119                           ; simple_byte            4     3 (average)
 41120                           ;	Chosen strategy is simple_byte
 41121   0052F6  5002               	movf	(?___awmod+1)^(0+1280),w,c
 41122   0052F8  0A00               	xorlw	0	; case 0
 41123   0052FA  B4D8               	btfsc	status,2,c
 41124   0052FC  EF82  F029         	goto	l11686
 41125   005300  EF91  F029         	goto	l8050
 41126   005304                     l11686:
 41127                           
 41128                           ; Switch size 1, requested type "simple"
 41129                           ; Number of cases is 3, Range of values is 0 to 2
 41130                           ; switch strategies available:
 41131                           ; Name         Instructions Cycles
 41132                           ; simple_byte           10     6 (average)
 41133                           ;	Chosen strategy is simple_byte
 41134   005304  5001               	movf	?___awmod^(0+1280),w,c
 41135   005306  0A00               	xorlw	0	; case 0
 41136   005308  B4D8               	btfsc	status,2,c
 41137   00530A  EF0D  F029         	goto	l8034
 41138   00530E  0A01               	xorlw	1	; case 1
 41139   005310  B4D8               	btfsc	status,2,c
 41140   005312  EF2C  F029         	goto	l8038
 41141   005316  0A03               	xorlw	3	; case 2
 41142   005318  B4D8               	btfsc	status,2,c
 41143   00531A  EF4F  F029         	goto	l8042
 41144   00531E  EF91  F029         	goto	l8050
 41145   005322                     l8050:
 41146                           
 41147                           ;../canargb_nvs.c: 85:     return 0;
 41148   005322  0E00               	movlw	0
 41149   005324                     l290:
 41150   005324  0012               	return		;funcret
 41151   005326                     __end_of_APP_nvDefault:
 41152                           	callstack 0
 41153                           
 41154 ;; *************** function ___awmod *****************
 41155 ;; Defined at:
 41156 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 41157 ;; Parameters:    Size  Location     Type
 41158 ;;  dividend        2    0[COMRAM] int 
 41159 ;;  divisor         2    2[COMRAM] int 
 41160 ;; Auto vars:     Size  Location     Type
 41161 ;;  sign            1    5[COMRAM] unsigned char 
 41162 ;;  counter         1    4[COMRAM] unsigned char 
 41163 ;; Return value:  Size  Location     Type
 41164 ;;                  2    0[COMRAM] int 
 41165 ;; Registers used:
 41166 ;;		wreg, status,2, status,0
 41167 ;; Tracked objects:
 41168 ;;		On entry : 0/0
 41169 ;;		On exit  : 0/0
 41170 ;;		Unchanged: 0/0
 41171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41176 ;;Total ram usage:        6 bytes
 41177 ;; Hardware stack levels used: 1
 41178 ;; Hardware stack levels required when called: 1
 41179 ;; This function calls:
 41180 ;;		Nothing
 41181 ;; This function is called by:
 41182 ;;		_APP_nvDefault
 41183 ;; This function uses a non-reentrant model
 41184 ;;
 41185                           
 41186                           	psect	text119
 41187   0064DE                     __ptext119:
 41188                           	callstack 0
 41189   0064DE                     ___awmod:
 41190                           	callstack 122
 41191   0064DE  6A06               	clrf	___awmod@sign^(0+1280),c
 41192   0064E0  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 41193   0064E2  EF77  F032         	goto	u5320
 41194   0064E6  EF75  F032         	goto	u5321
 41195   0064EA                     u5321:
 41196   0064EA  EF7D  F032         	goto	l7934
 41197   0064EE                     u5320:
 41198   0064EE  6C01               	negf	___awmod@dividend^(0+1280),c
 41199   0064F0  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41200   0064F2  B0D8               	btfsc	status,0,c
 41201   0064F4  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41202   0064F6  0E01               	movlw	1
 41203   0064F8  6E06               	movwf	___awmod@sign^(0+1280),c
 41204   0064FA                     l7934:
 41205   0064FA  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 41206   0064FC  EF84  F032         	goto	u5330
 41207   006500  EF82  F032         	goto	u5331
 41208   006504                     u5331:
 41209   006504  EF88  F032         	goto	l7938
 41210   006508                     u5330:
 41211   006508  6C03               	negf	___awmod@divisor^(0+1280),c
 41212   00650A  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
 41213   00650C  B0D8               	btfsc	status,0,c
 41214   00650E  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
 41215   006510                     l7938:
 41216   006510  5003               	movf	___awmod@divisor^(0+1280),w,c
 41217   006512  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 41218   006514  B4D8               	btfsc	status,2,c
 41219   006516  EF8F  F032         	goto	u5341
 41220   00651A  EF91  F032         	goto	u5340
 41221   00651E                     u5341:
 41222   00651E  EFB5  F032         	goto	l7954
 41223   006522                     u5340:
 41224   006522  0E01               	movlw	1
 41225   006524  6E05               	movwf	___awmod@counter^(0+1280),c
 41226   006526  EF99  F032         	goto	l7944
 41227   00652A                     l7942:
 41228   00652A  90D8               	bcf	status,0,c
 41229   00652C  3603               	rlcf	___awmod@divisor^(0+1280),f,c
 41230   00652E  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 41231   006530  2A05               	incf	___awmod@counter^(0+1280),f,c
 41232   006532                     l7944:
 41233   006532  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 41234   006534  EF9E  F032         	goto	u5351
 41235   006538  EFA0  F032         	goto	u5350
 41236   00653C                     u5351:
 41237   00653C  EF95  F032         	goto	l7942
 41238   006540                     u5350:
 41239   006540                     l7946:
 41240   006540  5003               	movf	___awmod@divisor^(0+1280),w,c
 41241   006542  5C01               	subwf	___awmod@dividend^(0+1280),w,c
 41242   006544  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41243   006546  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 41244   006548  A0D8               	btfss	status,0,c
 41245   00654A  EFA9  F032         	goto	u5361
 41246   00654E  EFAB  F032         	goto	u5360
 41247   006552                     u5361:
 41248   006552  EFAF  F032         	goto	l7950
 41249   006556                     u5360:
 41250   006556  5003               	movf	___awmod@divisor^(0+1280),w,c
 41251   006558  5E01               	subwf	___awmod@dividend^(0+1280),f,c
 41252   00655A  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41253   00655C  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 41254   00655E                     l7950:
 41255   00655E  90D8               	bcf	status,0,c
 41256   006560  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 41257   006562  3203               	rrcf	___awmod@divisor^(0+1280),f,c
 41258   006564  2E05               	decfsz	___awmod@counter^(0+1280),f,c
 41259   006566  EFA0  F032         	goto	l7946
 41260   00656A                     l7954:
 41261   00656A  5006               	movf	___awmod@sign^(0+1280),w,c
 41262   00656C  B4D8               	btfsc	status,2,c
 41263   00656E  EFBB  F032         	goto	u5371
 41264   006572  EFBD  F032         	goto	u5370
 41265   006576                     u5371:
 41266   006576  EFC1  F032         	goto	l7958
 41267   00657A                     u5370:
 41268   00657A  6C01               	negf	___awmod@dividend^(0+1280),c
 41269   00657C  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41270   00657E  B0D8               	btfsc	status,0,c
 41271   006580  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41272   006582                     l7958:
 41273   006582  C501  F501         	movff	___awmod@dividend,?___awmod
 41274   006586  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
 41275   00658A  0012               	return		;funcret
 41276   00658C                     __end_of___awmod:
 41277                           	callstack 0
 41278                           
 41279 ;; *************** function ___awdiv *****************
 41280 ;; Defined at:
 41281 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 41282 ;; Parameters:    Size  Location     Type
 41283 ;;  dividend        2    0[COMRAM] int 
 41284 ;;  divisor         2    2[COMRAM] int 
 41285 ;; Auto vars:     Size  Location     Type
 41286 ;;  quotient        2    6[COMRAM] int 
 41287 ;;  sign            1    5[COMRAM] unsigned char 
 41288 ;;  counter         1    4[COMRAM] unsigned char 
 41289 ;; Return value:  Size  Location     Type
 41290 ;;                  2    0[COMRAM] int 
 41291 ;; Registers used:
 41292 ;;		wreg, status,2, status,0
 41293 ;; Tracked objects:
 41294 ;;		On entry : 0/0
 41295 ;;		On exit  : 0/0
 41296 ;;		Unchanged: 0/0
 41297 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41299 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41302 ;;Total ram usage:        8 bytes
 41303 ;; Hardware stack levels used: 1
 41304 ;; Hardware stack levels required when called: 1
 41305 ;; This function calls:
 41306 ;;		Nothing
 41307 ;; This function is called by:
 41308 ;;		_APP_nvDefault
 41309 ;;		_leds_poll
 41310 ;; This function uses a non-reentrant model
 41311 ;;
 41312                           
 41313                           	psect	text120
 41314   00612A                     __ptext120:
 41315                           	callstack 0
 41316   00612A                     ___awdiv:
 41317                           	callstack 123
 41318   00612A  6A06               	clrf	___awdiv@sign^(0+1280),c
 41319   00612C  BE04               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 41320   00612E  EF9D  F030         	goto	u5260
 41321   006132  EF9B  F030         	goto	u5261
 41322   006136                     u5261:
 41323   006136  EFA3  F030         	goto	l7890
 41324   00613A                     u5260:
 41325   00613A  6C03               	negf	___awdiv@divisor^(0+1280),c
 41326   00613C  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 41327   00613E  B0D8               	btfsc	status,0,c
 41328   006140  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 41329   006142  0E01               	movlw	1
 41330   006144  6E06               	movwf	___awdiv@sign^(0+1280),c
 41331   006146                     l7890:
 41332   006146  BE02               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 41333   006148  EFAA  F030         	goto	u5270
 41334   00614C  EFA8  F030         	goto	u5271
 41335   006150                     u5271:
 41336   006150  EFB0  F030         	goto	l7896
 41337   006154                     u5270:
 41338   006154  6C01               	negf	___awdiv@dividend^(0+1280),c
 41339   006156  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 41340   006158  B0D8               	btfsc	status,0,c
 41341   00615A  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 41342   00615C  0E01               	movlw	1
 41343   00615E  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 41344   006160                     l7896:
 41345   006160  0E00               	movlw	0
 41346   006162  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 41347   006164  0E00               	movlw	0
 41348   006166  6E07               	movwf	___awdiv@quotient^(0+1280),c
 41349   006168  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41350   00616A  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 41351   00616C  B4D8               	btfsc	status,2,c
 41352   00616E  EFBB  F030         	goto	u5281
 41353   006172  EFBD  F030         	goto	u5280
 41354   006176                     u5281:
 41355   006176  EFE5  F030         	goto	l7918
 41356   00617A                     u5280:
 41357   00617A  0E01               	movlw	1
 41358   00617C  6E05               	movwf	___awdiv@counter^(0+1280),c
 41359   00617E  EFC5  F030         	goto	l7904
 41360   006182                     l7902:
 41361   006182  90D8               	bcf	status,0,c
 41362   006184  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 41363   006186  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 41364   006188  2A05               	incf	___awdiv@counter^(0+1280),f,c
 41365   00618A                     l7904:
 41366   00618A  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 41367   00618C  EFCA  F030         	goto	u5291
 41368   006190  EFCC  F030         	goto	u5290
 41369   006194                     u5291:
 41370   006194  EFC1  F030         	goto	l7902
 41371   006198                     u5290:
 41372   006198                     l7906:
 41373   006198  90D8               	bcf	status,0,c
 41374   00619A  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 41375   00619C  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 41376   00619E  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41377   0061A0  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 41378   0061A2  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41379   0061A4  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 41380   0061A6  A0D8               	btfss	status,0,c
 41381   0061A8  EFD8  F030         	goto	u5301
 41382   0061AC  EFDA  F030         	goto	u5300
 41383   0061B0                     u5301:
 41384   0061B0  EFDF  F030         	goto	l7914
 41385   0061B4                     u5300:
 41386   0061B4  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41387   0061B6  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 41388   0061B8  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41389   0061BA  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 41390   0061BC  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 41391   0061BE                     l7914:
 41392   0061BE  90D8               	bcf	status,0,c
 41393   0061C0  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 41394   0061C2  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 41395   0061C4  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 41396   0061C6  EFCC  F030         	goto	l7906
 41397   0061CA                     l7918:
 41398   0061CA  5006               	movf	___awdiv@sign^(0+1280),w,c
 41399   0061CC  B4D8               	btfsc	status,2,c
 41400   0061CE  EFEB  F030         	goto	u5311
 41401   0061D2  EFED  F030         	goto	u5310
 41402   0061D6                     u5311:
 41403   0061D6  EFF1  F030         	goto	l7922
 41404   0061DA                     u5310:
 41405   0061DA  6C07               	negf	___awdiv@quotient^(0+1280),c
 41406   0061DC  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 41407   0061DE  B0D8               	btfsc	status,0,c
 41408   0061E0  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 41409   0061E2                     l7922:
 41410   0061E2  C507  F501         	movff	___awdiv@quotient,?___awdiv
 41411   0061E6  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 41412   0061EA  0012               	return		;funcret
 41413   0061EC                     __end_of___awdiv:
 41414                           	callstack 0
 41415                           
 41416 ;; *************** function _APP_factoryReset *****************
 41417 ;; Defined at:
 41418 ;;		line 125 in file "../main.c"
 41419 ;; Parameters:    Size  Location     Type
 41420 ;;		None
 41421 ;; Auto vars:     Size  Location     Type
 41422 ;;  io              1    0        unsigned char 
 41423 ;; Return value:  Size  Location     Type
 41424 ;;                  1    wreg      void 
 41425 ;; Registers used:
 41426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41427 ;; Tracked objects:
 41428 ;;		On entry : 0/0
 41429 ;;		On exit  : 0/0
 41430 ;;		Unchanged: 0/0
 41431 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41436 ;;Total ram usage:        0 bytes
 41437 ;; Hardware stack levels used: 1
 41438 ;; Hardware stack levels required when called: 9
 41439 ;; This function calls:
 41440 ;;		_factoryResetGlobalEvents
 41441 ;; This function is called by:
 41442 ;;		_factoryReset
 41443 ;; This function uses a non-reentrant model
 41444 ;;
 41445                           
 41446                           	psect	text121
 41447   008356                     __ptext121:
 41448                           	callstack 0
 41449   008356                     _APP_factoryReset:
 41450                           	callstack 116
 41451   008356                     
 41452                           ;../main.c: 126:     uint8_t io;;../main.c: 128:     factoryResetGlobalEvents();
 41453   008356  ECAE  F041         	call	_factoryResetGlobalEvents	;wreg free
 41454   00835A  0012               	return		;funcret
 41455   00835C                     __end_of_APP_factoryReset:
 41456                           	callstack 0
 41457                           
 41458 ;; *************** function _factoryResetGlobalEvents *****************
 41459 ;; Defined at:
 41460 ;;		line 53 in file "../canargb_events.c"
 41461 ;; Parameters:    Size  Location     Type
 41462 ;;		None
 41463 ;; Auto vars:     Size  Location     Type
 41464 ;;		None
 41465 ;; Return value:  Size  Location     Type
 41466 ;;                  1    wreg      void 
 41467 ;; Registers used:
 41468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41469 ;; Tracked objects:
 41470 ;;		On entry : 0/0
 41471 ;;		On exit  : 0/0
 41472 ;;		Unchanged: 0/0
 41473 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41478 ;;Total ram usage:        0 bytes
 41479 ;; Hardware stack levels used: 1
 41480 ;; Hardware stack levels required when called: 8
 41481 ;; This function calls:
 41482 ;;		_clearAllEvents
 41483 ;; This function is called by:
 41484 ;;		_APP_factoryReset
 41485 ;; This function uses a non-reentrant model
 41486 ;;
 41487                           
 41488                           	psect	text122
 41489   00835C                     __ptext122:
 41490                           	callstack 0
 41491   00835C                     _factoryResetGlobalEvents:
 41492                           	callstack 116
 41493   00835C                     
 41494                           ;../canargb_events.c: 55:     clearAllEvents();
 41495   00835C  EC0B  F041         	call	_clearAllEvents	;wreg free
 41496   008360  0012               	return		;funcret
 41497   008362                     __end_of_factoryResetGlobalEvents:
 41498                           	callstack 0
 41499                           
 41500 ;; *************** function _clearAllEvents *****************
 41501 ;; Defined at:
 41502 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41503 ;; Parameters:    Size  Location     Type
 41504 ;;		None
 41505 ;; Auto vars:     Size  Location     Type
 41506 ;;  tableIndex      1   53[COMRAM] unsigned char 
 41507 ;; Return value:  Size  Location     Type
 41508 ;;                  1    wreg      void 
 41509 ;; Registers used:
 41510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41511 ;; Tracked objects:
 41512 ;;		On entry : 0/0
 41513 ;;		On exit  : 0/0
 41514 ;;		Unchanged: 0/0
 41515 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41520 ;;Total ram usage:        1 bytes
 41521 ;; Hardware stack levels used: 1
 41522 ;; Hardware stack levels required when called: 7
 41523 ;; This function calls:
 41524 ;;		_rebuildHashtable
 41525 ;;		_removeTableEntry
 41526 ;; This function is called by:
 41527 ;;		_factoryResetGlobalEvents
 41528 ;;		_teachFactoryReset
 41529 ;;		_doNnclr
 41530 ;; This function uses a non-reentrant model
 41531 ;;
 41532                           
 41533                           	psect	text123
 41534   008216                     __ptext123:
 41535                           	callstack 0
 41536   008216                     _clearAllEvents:
 41537                           	callstack 116
 41538   008216                     
 41539                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 41540   008216  6A36               	clrf	clearAllEvents@tableIndex^(0+1280),c
 41541   008218                     l7772:
 41542                           
 41543                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 41544   008218  5036               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 41545   00821A  EC1A  F022         	call	_removeTableEntry
 41546   00821E                     
 41547                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 41548   00821E  2A36               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 41549   008220  2836               	incf	clearAllEvents@tableIndex^(0+1280),w,c
 41550   008222  A4D8               	btfss	status,2,c
 41551   008224  EF16  F041         	goto	u5111
 41552   008228  EF18  F041         	goto	u5110
 41553   00822C                     u5111:
 41554   00822C  EF0C  F041         	goto	l7772
 41555   008230                     u5110:
 41556   008230                     
 41557                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 41558   008230  ECB9  F02B         	call	_rebuildHashtable	;wreg free
 41559   008234  0012               	return		;funcret
 41560   008236                     __end_of_clearAllEvents:
 41561                           	callstack 0
 41562                           
 41563 ;; *************** function _removeTableEntry *****************
 41564 ;; Defined at:
 41565 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41566 ;; Parameters:    Size  Location     Type
 41567 ;;  tableIndex      1    wreg     unsigned char 
 41568 ;; Auto vars:     Size  Location     Type
 41569 ;;  tableIndex      1   52[COMRAM] unsigned char 
 41570 ;;  i               1   51[COMRAM] unsigned char 
 41571 ;; Return value:  Size  Location     Type
 41572 ;;                  1    wreg      unsigned char 
 41573 ;; Registers used:
 41574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41575 ;; Tracked objects:
 41576 ;;		On entry : 0/0
 41577 ;;		On exit  : 0/0
 41578 ;;		Unchanged: 0/0
 41579 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41582 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41583 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41584 ;;Total ram usage:       14 bytes
 41585 ;; Hardware stack levels used: 1
 41586 ;; Hardware stack levels required when called: 6
 41587 ;; This function calls:
 41588 ;;		_flushFlashBlock
 41589 ;;		_rebuildHashtable
 41590 ;;		_writeNVM
 41591 ;; This function is called by:
 41592 ;;		_clearAllEvents
 41593 ;;		_removeEvent
 41594 ;; This function uses a non-reentrant model
 41595 ;;
 41596                           
 41597                           	psect	text124
 41598   004434                     __ptext124:
 41599                           	callstack 0
 41600   004434                     _removeTableEntry:
 41601                           	callstack 116
 41602                           
 41603                           ;incstack = 0
 41604                           ;removeTableEntry@tableIndex stored from wreg
 41605   004434  6E35               	movwf	removeTableEntry@tableIndex^(0+1280),c
 41606   004436                     
 41607                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*table
      +                          Index + 0, 0x00);
 41608   004436  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41609   004438  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41610   00443A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41611   00443C  0E01               	movlw	1
 41612   00443E  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41613   004440  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41614   004444  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41615   004448  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41616   00444A  50F3               	movf	prodl,w,c
 41617   00444C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41618   00444E  0E01               	movlw	1
 41619   004450  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41620   004452  50F3               	movf	prodl,w,c
 41621   004454  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41622   004456  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41623   00445A  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41624   00445E  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41625   004460  0E00               	movlw	0
 41626   004462  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41627   004464  6E0E               	movwf	writeNVM@index^(0+1280),c
 41628   004466  0E00               	movlw	0
 41629   004468  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41630   00446A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41631   00446C  0E01               	movlw	1
 41632   00446E  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41633   004470  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41634   004472  0E00               	movlw	0
 41635   004474  6E11               	movwf	writeNVM@value^(0+1280),c
 41636   004476  0E01               	movlw	1
 41637   004478  EC34  F03C         	call	_writeNVM
 41638                           
 41639                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 1, 0x00);
 41640   00447C  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41641   00447E  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41642   004480  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41643   004482  0E01               	movlw	1
 41644   004484  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41645   004486  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41646   00448A  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41647   00448E  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41648   004490  50F3               	movf	prodl,w,c
 41649   004492  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41650   004494  0E01               	movlw	1
 41651   004496  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41652   004498  50F3               	movf	prodl,w,c
 41653   00449A  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41654   00449C  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41655   0044A0  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41656   0044A4  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41657   0044A6  0E01               	movlw	1
 41658   0044A8  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41659   0044AA  6E0E               	movwf	writeNVM@index^(0+1280),c
 41660   0044AC  0E00               	movlw	0
 41661   0044AE  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41662   0044B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41663   0044B2  0E01               	movlw	1
 41664   0044B4  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41665   0044B6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41666   0044B8  0E00               	movlw	0
 41667   0044BA  6E11               	movwf	writeNVM@value^(0+1280),c
 41668   0044BC  0E01               	movlw	1
 41669   0044BE  EC34  F03C         	call	_writeNVM
 41670                           
 41671                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 2, 0x00);
 41672   0044C2  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41673   0044C4  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41674   0044C6  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41675   0044C8  0E01               	movlw	1
 41676   0044CA  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41677   0044CC  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41678   0044D0  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41679   0044D4  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41680   0044D6  50F3               	movf	prodl,w,c
 41681   0044D8  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41682   0044DA  0E01               	movlw	1
 41683   0044DC  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41684   0044DE  50F3               	movf	prodl,w,c
 41685   0044E0  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41686   0044E2  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41687   0044E6  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41688   0044EA  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41689   0044EC  0E02               	movlw	2
 41690   0044EE  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41691   0044F0  6E0E               	movwf	writeNVM@index^(0+1280),c
 41692   0044F2  0E00               	movlw	0
 41693   0044F4  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41694   0044F6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41695   0044F8  0E01               	movlw	1
 41696   0044FA  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41697   0044FC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41698   0044FE  0E00               	movlw	0
 41699   004500  6E11               	movwf	writeNVM@value^(0+1280),c
 41700   004502  0E01               	movlw	1
 41701   004504  EC34  F03C         	call	_writeNVM
 41702                           
 41703                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 3, 0x00);
 41704   004508  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41705   00450A  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41706   00450C  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41707   00450E  0E01               	movlw	1
 41708   004510  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41709   004512  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41710   004516  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41711   00451A  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41712   00451C  50F3               	movf	prodl,w,c
 41713   00451E  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41714   004520  0E01               	movlw	1
 41715   004522  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41716   004524  50F3               	movf	prodl,w,c
 41717   004526  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41718   004528  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41719   00452C  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41720   004530  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41721   004532  0E03               	movlw	3
 41722   004534  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41723   004536  6E0E               	movwf	writeNVM@index^(0+1280),c
 41724   004538  0E00               	movlw	0
 41725   00453A  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41726   00453C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41727   00453E  0E01               	movlw	1
 41728   004540  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41729   004542  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41730   004544  0E00               	movlw	0
 41731   004546  6E11               	movwf	writeNVM@value^(0+1280),c
 41732   004548  0E01               	movlw	1
 41733   00454A  EC34  F03C         	call	_writeNVM
 41734                           
 41735                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 4, 0x00);
 41736   00454E  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41737   004550  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41738   004552  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41739   004554  0E01               	movlw	1
 41740   004556  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41741   004558  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41742   00455C  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41743   004560  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41744   004562  50F3               	movf	prodl,w,c
 41745   004564  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41746   004566  0E01               	movlw	1
 41747   004568  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41748   00456A  50F3               	movf	prodl,w,c
 41749   00456C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41750   00456E  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41751   004572  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41752   004576  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41753   004578  0E04               	movlw	4
 41754   00457A  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41755   00457C  6E0E               	movwf	writeNVM@index^(0+1280),c
 41756   00457E  0E00               	movlw	0
 41757   004580  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41758   004582  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41759   004584  0E01               	movlw	1
 41760   004586  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41761   004588  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41762   00458A  0E00               	movlw	0
 41763   00458C  6E11               	movwf	writeNVM@value^(0+1280),c
 41764   00458E  0E01               	movlw	1
 41765   004590  EC34  F03C         	call	_writeNVM
 41766   004594                     
 41767                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<252; i++) {
 41768   004594  6A34               	clrf	removeTableEntry@i^(0+1280),c
 41769   004596                     l7710:
 41770                           
 41771                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x10000 +
      +                           (sizeof(Event) + 1 + 252)*tableIndex + (5 + i), 0x00);
 41772   004596  5034               	movf	removeTableEntry@i^(0+1280),w,c
 41773   004598  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41774   00459A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41775   00459C  0E05               	movlw	5
 41776   00459E  2628               	addwf	??_removeTableEntry^(0+1280),f,c
 41777   0045A0  0E00               	movlw	0
 41778   0045A2  2229               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 41779   0045A4  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41780   0045A6  6E2A               	movwf	(??_removeTableEntry+2)^(0+1280),c
 41781   0045A8  6A2B               	clrf	(??_removeTableEntry+3)^(0+1280),c
 41782   0045AA  0E01               	movlw	1
 41783   0045AC  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41784   0045AE  C4F3 F52C          	movff	prodl,??_removeTableEntry+4
 41785   0045B2  C4F4 F52D          	movff	prodh,??_removeTableEntry+5
 41786   0045B6  022B               	mulwf	(??_removeTableEntry+3)^(0+1280),c
 41787   0045B8  50F3               	movf	prodl,w,c
 41788   0045BA  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41789   0045BC  0E01               	movlw	1
 41790   0045BE  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41791   0045C0  50F3               	movf	prodl,w,c
 41792   0045C2  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41793   0045C4  C52C  F52E         	movff	??_removeTableEntry+4,??_removeTableEntry+6
 41794   0045C8  C52D  F52F         	movff	??_removeTableEntry+5,??_removeTableEntry+7
 41795   0045CC  6A30               	clrf	(??_removeTableEntry+8)^(0+1280),c
 41796   0045CE  5028               	movf	??_removeTableEntry^(0+1280),w,c
 41797   0045D0  242E               	addwf	(??_removeTableEntry+6)^(0+1280),w,c
 41798   0045D2  6E31               	movwf	(??_removeTableEntry+9)^(0+1280),c
 41799   0045D4  5029               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 41800   0045D6  202F               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 41801   0045D8  6E32               	movwf	(??_removeTableEntry+10)^(0+1280),c
 41802   0045DA  0E00               	movlw	0
 41803   0045DC  BE29               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 41804   0045DE  0EFF               	movlw	255
 41805   0045E0  2030               	addwfc	(??_removeTableEntry+8)^(0+1280),w,c
 41806   0045E2  6E33               	movwf	(??_removeTableEntry+11)^(0+1280),c
 41807   0045E4  0E00               	movlw	0
 41808   0045E6  2431               	addwf	(??_removeTableEntry+9)^(0+1280),w,c
 41809   0045E8  6E0E               	movwf	writeNVM@index^(0+1280),c
 41810   0045EA  0E00               	movlw	0
 41811   0045EC  2032               	addwfc	(??_removeTableEntry+10)^(0+1280),w,c
 41812   0045EE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41813   0045F0  0E01               	movlw	1
 41814   0045F2  2033               	addwfc	(??_removeTableEntry+11)^(0+1280),w,c
 41815   0045F4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41816   0045F6  0E00               	movlw	0
 41817   0045F8  6E11               	movwf	writeNVM@value^(0+1280),c
 41818   0045FA  0E01               	movlw	1
 41819   0045FC  EC34  F03C         	call	_writeNVM
 41820   004600                     
 41821                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 41822   004600  2A34               	incf	removeTableEntry@i^(0+1280),f,c
 41823   004602  0EFB               	movlw	251
 41824   004604  6434               	cpfsgt	removeTableEntry@i^(0+1280),c
 41825   004606  EF07  F023         	goto	u5051
 41826   00460A  EF09  F023         	goto	u5050
 41827   00460E                     u5051:
 41828   00460E  EFCB  F022         	goto	l7710
 41829   004612                     u5050:
 41830   004612                     
 41831                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 41832   004612  EC05  F035         	call	_flushFlashBlock	;wreg free
 41833   004616                     
 41834                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 41835   004616  ECB9  F02B         	call	_rebuildHashtable	;wreg free
 41836   00461A                     
 41837                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 41838   00461A  0E00               	movlw	0
 41839   00461C  0012               	return		;funcret
 41840   00461E                     __end_of_removeTableEntry:
 41841                           	callstack 0
 41842                           
 41843 ;; *************** function _writeNVM *****************
 41844 ;; Defined at:
 41845 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 41846 ;; Parameters:    Size  Location     Type
 41847 ;;  type            1    wreg     enum E23276
 41848 ;;  index           3   13[COMRAM] unsigned um
 41849 ;;  value           1   16[COMRAM] unsigned char 
 41850 ;; Auto vars:     Size  Location     Type
 41851 ;;  type            1   19[COMRAM] enum E23276
 41852 ;; Return value:  Size  Location     Type
 41853 ;;                  1    wreg      unsigned char 
 41854 ;; Registers used:
 41855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41856 ;; Tracked objects:
 41857 ;;		On entry : 0/0
 41858 ;;		On exit  : 0/0
 41859 ;;		Unchanged: 0/0
 41860 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41863 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41864 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41865 ;;Total ram usage:        7 bytes
 41866 ;; Hardware stack levels used: 1
 41867 ;; Hardware stack levels required when called: 5
 41868 ;; This function calls:
 41869 ;;		_EEPROM_Write
 41870 ;;		_FLASH_Write
 41871 ;; This function is called by:
 41872 ;;		_bootProcessMessage
 41873 ;;		_canFactoryReset
 41874 ;;		_setNewCanId
 41875 ;;		_removeTableEntry
 41876 ;;		_addEvent
 41877 ;;		_writeEv
 41878 ;;		_mnsFactoryReset
 41879 ;;		_mnsProcessMessage
 41880 ;;		_mnsPoll
 41881 ;;		_nvFactoryReset
 41882 ;;		_setNV
 41883 ;;		_factoryReset
 41884 ;;		_saveNV
 41885 ;; This function uses a non-reentrant model
 41886 ;;
 41887                           
 41888                           	psect	text125
 41889   007868                     __ptext125:
 41890                           	callstack 0
 41891   007868                     _writeNVM:
 41892                           	callstack 116
 41893                           
 41894                           ;incstack = 0
 41895                           ;writeNVM@type stored from wreg
 41896   007868  6E14               	movwf	writeNVM@type^(0+1280),c
 41897   00786A                     
 41898                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 41899   00786A  EF4F  F03C         	goto	l7518
 41900   00786E                     l7508:
 41901                           
 41902                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41903   00786E  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 41904   007872  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41905   007876  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 41906   00787A  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 41907   00787E  EC65  F03C         	call	_EEPROM_Write	;wreg free
 41908   007882  EF64  F03C         	goto	l1707
 41909   007886                     l7512:
 41910                           
 41911                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41912   007886  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 41913   00788A  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 41914   00788E  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 41915   007892  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 41916   007896  ECB2  F02A         	call	_FLASH_Write	;wreg free
 41917   00789A  EF64  F03C         	goto	l1707
 41918   00789E                     l7518:
 41919   00789E  5014               	movf	writeNVM@type^(0+1280),w,c
 41920   0078A0  6E12               	movwf	??_writeNVM^(0+1280),c
 41921   0078A2  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 41922                           
 41923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41924                           ; Switch size 1, requested type "simple"
 41925                           ; Number of cases is 1, Range of values is 0 to 0
 41926                           ; switch strategies available:
 41927                           ; Name         Instructions Cycles
 41928                           ; simple_byte            4     3 (average)
 41929                           ;	Chosen strategy is simple_byte
 41930   0078A4  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 41931   0078A6  0A00               	xorlw	0	; case 0
 41932   0078A8  B4D8               	btfsc	status,2,c
 41933   0078AA  EF59  F03C         	goto	l11688
 41934   0078AE  EF64  F03C         	goto	l1707
 41935   0078B2                     l11688:
 41936                           
 41937                           ; Switch size 1, requested type "simple"
 41938                           ; Number of cases is 2, Range of values is 0 to 1
 41939                           ; switch strategies available:
 41940                           ; Name         Instructions Cycles
 41941                           ; simple_byte            7     4 (average)
 41942                           ;	Chosen strategy is simple_byte
 41943   0078B2  5012               	movf	??_writeNVM^(0+1280),w,c
 41944   0078B4  0A00               	xorlw	0	; case 0
 41945   0078B6  B4D8               	btfsc	status,2,c
 41946   0078B8  EF37  F03C         	goto	l7508
 41947   0078BC  0A01               	xorlw	1	; case 1
 41948   0078BE  B4D8               	btfsc	status,2,c
 41949   0078C0  EF43  F03C         	goto	l7512
 41950   0078C4  EF64  F03C         	goto	l1707
 41951   0078C8                     l1707:
 41952   0078C8  0012               	return		;funcret
 41953   0078CA                     __end_of_writeNVM:
 41954                           	callstack 0
 41955                           
 41956 ;; *************** function _FLASH_Write *****************
 41957 ;; Defined at:
 41958 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 41959 ;; Parameters:    Size  Location     Type
 41960 ;;  index           3    5[COMRAM] unsigned um
 41961 ;;  value           1    8[COMRAM] unsigned char 
 41962 ;; Auto vars:     Size  Location     Type
 41963 ;;  oldValue        1    0        unsigned char 
 41964 ;; Return value:  Size  Location     Type
 41965 ;;                  1    wreg      unsigned char 
 41966 ;; Registers used:
 41967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41968 ;; Tracked objects:
 41969 ;;		On entry : 0/0
 41970 ;;		On exit  : 0/0
 41971 ;;		Unchanged: 0/0
 41972 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41977 ;;Total ram usage:        8 bytes
 41978 ;; Hardware stack levels used: 1
 41979 ;; Hardware stack levels required when called: 4
 41980 ;; This function calls:
 41981 ;;		_eraseFlashBlock
 41982 ;;		_flushFlashBlock
 41983 ;;		_loadFlashBlock
 41984 ;; This function is called by:
 41985 ;;		_writeNVM
 41986 ;; This function uses a non-reentrant model
 41987 ;;
 41988                           
 41989                           	psect	text126
 41990   005564                     __ptext126:
 41991                           	callstack 0
 41992   005564                     _FLASH_Write:
 41993                           	callstack 116
 41994   005564                     
 41995                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 41996   005564  0E00               	movlw	0
 41997   005566  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41998   005568  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41999   00556A  0EFF               	movlw	255
 42000   00556C  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42001   00556E  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42002   005570  0EFF               	movlw	255
 42003   005572  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 42004   005574  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 42005   005576  0105               	movlb	5	; () banked
 42006   005578  5184               	movf	_flashBlock& (0+255),w,b
 42007   00557A  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 42008   00557C  E10C               	bnz	u4790
 42009   00557E  5185               	movf	(_flashBlock+1)& (0+255),w,b
 42010   005580  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 42011   005582  E109               	bnz	u4790
 42012   005584  5186               	movf	(_flashBlock+2)& (0+255),w,b
 42013   005586  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 42014   005588  B4D8               	btfsc	status,2,c
 42015   00558A  EFC9  F02A         	goto	u4791
 42016   00558E  EFCB  F02A         	goto	u4790
 42017   005592                     u4791:
 42018   005592  EFEE  F02A         	goto	l7494
 42019   005596                     u4790:
 42020   005596                     
 42021                           ; BSR set to: 5
 42022                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 42023   005596  5184               	movf	_flashBlock& (0+255),w,b
 42024   005598  1185               	iorwf	(_flashBlock+1)& (0+255),w,b
 42025   00559A  1186               	iorwf	(_flashBlock+2)& (0+255),w,b
 42026   00559C  B4D8               	btfsc	status,2,c
 42027   00559E  EFD3  F02A         	goto	u4801
 42028   0055A2  EFD5  F02A         	goto	u4800
 42029   0055A6                     u4801:
 42030   0055A6  EFE2  F02A         	goto	l7490
 42031   0055AA                     u4800:
 42032   0055AA                     
 42033                           ; BSR set to: 5
 42034                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 42035   0055AA  A39B               	btfss	_flashFlags& (0+255),1,b
 42036   0055AC  EFDA  F02A         	goto	u4811
 42037   0055B0  EFDC  F02A         	goto	u4810
 42038   0055B4                     u4811:
 42039   0055B4  EFE0  F02A         	goto	l1700
 42040   0055B8                     u4810:
 42041   0055B8                     
 42042                           ; BSR set to: 5
 42043                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 42044   0055B8  ECE2  F037         	call	_eraseFlashBlock	;wreg free
 42045   0055BC                     
 42046                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 42047   0055BC  0105               	movlb	5	; () banked
 42048   0055BE  939B               	bcf	_flashFlags& (0+255),1,b
 42049   0055C0                     l1700:
 42050                           
 42051                           ; BSR set to: 5
 42052                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 42053   0055C0  EC05  F035         	call	_flushFlashBlock	;wreg free
 42054   0055C4                     l7490:
 42055                           
 42056                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 42057   0055C4  0E00               	movlw	0
 42058   0055C6  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42059   0055C8  0105               	movlb	5	; () banked
 42060   0055CA  6F84               	movwf	_flashBlock& (0+255),b
 42061   0055CC  0EFF               	movlw	255
 42062   0055CE  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42063   0055D0  6F85               	movwf	(_flashBlock+1)& (0+255),b
 42064   0055D2  0EFF               	movlw	255
 42065   0055D4  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 42066   0055D6  6F86               	movwf	(_flashBlock+2)& (0+255),b
 42067   0055D8                     
 42068                           ; BSR set to: 5
 42069                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 42070   0055D8  EC19  F03D         	call	_loadFlashBlock	;wreg free
 42071   0055DC                     l7494:
 42072                           
 42073                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 42074   0055DC  0EFF               	movlw	255
 42075   0055DE  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42076   0055E0  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42077   0055E2  0E00               	movlw	0
 42078   0055E4  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42079   0055E6  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42080   0055E8  0E00               	movlw	0
 42081   0055EA  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42082   0055EC  6ED9               	movwf	fsr2l,c
 42083   0055EE  0E37               	movlw	55
 42084   0055F0  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42085   0055F2  6EDA               	movwf	fsr2h,c
 42086   0055F4  50DF               	movf	indf2,w,c
 42087   0055F6  0AFF               	xorlw	255
 42088   0055F8  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 42089   0055FA  0900               	iorlw	0
 42090   0055FC  A4D8               	btfss	status,2,c
 42091   0055FE  EF03  F02B         	goto	u4821
 42092   005602  EF07  F02B         	goto	u4820
 42093   005606                     u4821:
 42094   005606  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 42095   005608  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 42096   00560A  EF08  F02B         	goto	u4838
 42097   00560E                     u4820:
 42098   00560E  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 42099   005610                     u4838:
 42100   005610  0105               	movlb	5	; () banked
 42101   005612  319B               	rrcf	_flashFlags& (0+255),w,b
 42102   005614  0B01               	andlw	1
 42103   005616  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 42104   005618  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 42105   00561A  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 42106   00561C  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 42107   00561E  519B               	movf	_flashFlags& (0+255),w,b
 42108   005620  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 42109   005622  0BFD               	andlw	-3
 42110   005624  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 42111   005626  6F9B               	movwf	_flashFlags& (0+255),b
 42112   005628                     
 42113                           ; BSR set to: 5
 42114                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 42115   005628  0EFF               	movlw	255
 42116   00562A  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42117   00562C  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42118   00562E  0E00               	movlw	0
 42119   005630  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42120   005632  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42121   005634  0E00               	movlw	0
 42122   005636  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42123   005638  6ED9               	movwf	fsr2l,c
 42124   00563A  0E37               	movlw	55
 42125   00563C  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42126   00563E  6EDA               	movwf	fsr2h,c
 42127   005640  5009               	movf	FLASH_Write@value^(0+1280),w,c
 42128   005642  18DE               	xorwf	postinc2,w,c
 42129   005644  B4D8               	btfsc	status,2,c
 42130   005646  EF27  F02B         	goto	u4841
 42131   00564A  EF29  F02B         	goto	u4840
 42132   00564E                     u4841:
 42133   00564E  EF38  F02B         	goto	l7502
 42134   005652                     u4840:
 42135   005652                     
 42136                           ; BSR set to: 5
 42137                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 42138   005652  819B               	bsf	_flashFlags& (0+255),0,b
 42139   005654                     
 42140                           ; BSR set to: 5
 42141                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 42142   005654  0EFF               	movlw	255
 42143   005656  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42144   005658  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42145   00565A  0E00               	movlw	0
 42146   00565C  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42147   00565E  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42148   005660  0E00               	movlw	0
 42149   005662  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42150   005664  6ED9               	movwf	fsr2l,c
 42151   005666  0E37               	movlw	55
 42152   005668  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42153   00566A  6EDA               	movwf	fsr2h,c
 42154   00566C  C509  F4DF         	movff	FLASH_Write@value,indf2
 42155   005670                     l7502:
 42156                           
 42157                           ; BSR set to: 5
 42158                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 42159   005670  0E00               	movlw	0
 42160   005672                     
 42161                           ; BSR set to: 5
 42162   005672  0012               	return		;funcret
 42163   005674                     __end_of_FLASH_Write:
 42164                           	callstack 0
 42165                           
 42166 ;; *************** function _loadFlashBlock *****************
 42167 ;; Defined at:
 42168 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 42169 ;; Parameters:    Size  Location     Type
 42170 ;;		None
 42171 ;; Auto vars:     Size  Location     Type
 42172 ;;		None
 42173 ;; Return value:  Size  Location     Type
 42174 ;;                  1    wreg      void 
 42175 ;; Registers used:
 42176 ;;		wreg, status,2
 42177 ;; Tracked objects:
 42178 ;;		On entry : 0/0
 42179 ;;		On exit  : 0/0
 42180 ;;		Unchanged: 0/0
 42181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42184 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42186 ;;Total ram usage:        3 bytes
 42187 ;; Hardware stack levels used: 1
 42188 ;; Hardware stack levels required when called: 1
 42189 ;; This function calls:
 42190 ;;		Nothing
 42191 ;; This function is called by:
 42192 ;;		_FLASH_Write
 42193 ;; This function uses a non-reentrant model
 42194 ;;
 42195                           
 42196                           	psect	text127
 42197   007A32                     __ptext127:
 42198                           	callstack 0
 42199   007A32                     _loadFlashBlock:
 42200                           	callstack 118
 42201   007A32                     l1689:
 42202                           
 42203                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 42204   007A32  0100               	movlb	0	; () banked
 42205   007A34  B140               	btfsc	64,0,b	;volatile
 42206   007A36  EF1F  F03D         	goto	u4591
 42207   007A3A  EF21  F03D         	goto	u4590
 42208   007A3E                     u4591:
 42209   007A3E  EF19  F03D         	goto	l1689
 42210   007A42                     u4590:
 42211   007A42                     
 42212                           ; BSR set to: 0
 42213                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42214   007A42  C586  F045         	movff	_flashBlock+2,69	;volatile
 42215   007A46                     
 42216                           ; BSR set to: 0
 42217                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42218   007A46  C584  F501         	movff	_flashBlock,??_loadFlashBlock
 42219   007A4A  C585  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 42220   007A4E  C586  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 42221   007A52  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 42222   007A56  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 42223   007A5A  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 42224   007A5C  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 42225   007A5E  6F44               	movwf	68,b	;volatile
 42226   007A60                     
 42227                           ; BSR set to: 0
 42228                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 42229   007A60  C584  F043         	movff	_flashBlock,67	;volatile
 42230                           
 42231                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 42232   007A64  5141               	movf	65,w,b	;volsfr
 42233   007A66  0BF8               	andlw	-8
 42234   007A68  0902               	iorlw	2
 42235   007A6A  6F41               	movwf	65,b	;volsfr
 42236   007A6C                     
 42237                           ; BSR set to: 0
 42238                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 42239   007A6C  8140               	bsf	64,0,b	;volatile
 42240   007A6E                     l1692:
 42241                           
 42242                           ; BSR set to: 0
 42243                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 42244   007A6E  B140               	btfsc	64,0,b	;volatile
 42245   007A70  EF3C  F03D         	goto	u4601
 42246   007A74  EF3E  F03D         	goto	u4600
 42247   007A78                     u4601:
 42248   007A78  EF37  F03D         	goto	l1692
 42249   007A7C                     u4600:
 42250   007A7C                     
 42251                           ; BSR set to: 0
 42252                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 42253   007A7C  0E07               	movlw	7
 42254   007A7E  1341               	iorwf	65,f,b	;volsfr
 42255   007A80                     
 42256                           ; BSR set to: 0
 42257                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 42258   007A80  0105               	movlb	5	; () banked
 42259   007A82  6B9B               	clrf	_flashFlags& (0+255),b
 42260   007A84                     
 42261                           ; BSR set to: 5
 42262   007A84  0012               	return		;funcret
 42263   007A86                     __end_of_loadFlashBlock:
 42264                           	callstack 0
 42265                           
 42266 ;; *************** function _flushFlashBlock *****************
 42267 ;; Defined at:
 42268 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 42269 ;; Parameters:    Size  Location     Type
 42270 ;;		None
 42271 ;; Auto vars:     Size  Location     Type
 42272 ;;  interruptEna    1    4[COMRAM] unsigned char 
 42273 ;; Return value:  Size  Location     Type
 42274 ;;                  1    wreg      void 
 42275 ;; Registers used:
 42276 ;;		wreg, status,2, cstack
 42277 ;; Tracked objects:
 42278 ;;		On entry : 0/0
 42279 ;;		On exit  : 0/0
 42280 ;;		Unchanged: 0/0
 42281 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42286 ;;Total ram usage:        1 bytes
 42287 ;; Hardware stack levels used: 1
 42288 ;; Hardware stack levels required when called: 3
 42289 ;; This function calls:
 42290 ;;		_APP_isSuitableTimeToWriteFlash
 42291 ;;		_eraseFlashBlock
 42292 ;; This function is called by:
 42293 ;;		_removeTableEntry
 42294 ;;		_addEvent
 42295 ;;		_FLASH_Write
 42296 ;;		_poll
 42297 ;; This function uses a non-reentrant model
 42298 ;;
 42299                           
 42300                           	psect	text128
 42301   006A0A                     __ptext128:
 42302                           	callstack 0
 42303   006A0A                     _flushFlashBlock:
 42304                           	callstack 116
 42305   006A0A                     
 42306                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 42307   006A0A  0105               	movlb	5	; () banked
 42308   006A0C  B19B               	btfsc	_flashFlags& (0+255),0,b
 42309   006A0E  EF0B  F035         	goto	u4511
 42310   006A12  EF0D  F035         	goto	u4510
 42311   006A16                     u4511:
 42312   006A16  EF0F  F035         	goto	l7282
 42313   006A1A                     u4510:
 42314   006A1A  EF53  F035         	goto	l1675
 42315   006A1E                     l7282:
 42316                           
 42317                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42318   006A1E  EC46  F041         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42319   006A22  0900               	iorlw	0
 42320   006A24  B4D8               	btfsc	status,2,c
 42321   006A26  EF17  F035         	goto	u4521
 42322   006A2A  EF19  F035         	goto	u4520
 42323   006A2E                     u4521:
 42324   006A2E  EF0F  F035         	goto	l7282
 42325   006A32                     u4520:
 42326   006A32                     
 42327                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 42328   006A32  0105               	movlb	5	; () banked
 42329   006A34  A39B               	btfss	_flashFlags& (0+255),1,b
 42330   006A36  EF1F  F035         	goto	u4531
 42331   006A3A  EF21  F035         	goto	u4530
 42332   006A3E                     u4531:
 42333   006A3E  EF23  F035         	goto	l7286
 42334   006A42                     u4530:
 42335   006A42                     
 42336                           ; BSR set to: 5
 42337                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 42338   006A42  ECE2  F037         	call	_eraseFlashBlock	;wreg free
 42339   006A46                     l7286:
 42340                           
 42341                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 42342   006A46  0E00               	movlw	0
 42343   006A48  BED6               	btfsc	214,7,c	;volatile
 42344   006A4A  0E01               	movlw	1
 42345   006A4C  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 42346   006A4E                     
 42347                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 42348   006A4E  9ED6               	bcf	214,7,c	;volatile
 42349   006A50                     l1680:
 42350                           
 42351                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 42352   006A50  0100               	movlb	0	; () banked
 42353   006A52  B140               	btfsc	64,0,b	;volatile
 42354   006A54  EF2E  F035         	goto	u4541
 42355   006A58  EF30  F035         	goto	u4540
 42356   006A5C                     u4541:
 42357   006A5C  EF28  F035         	goto	l1680
 42358   006A60                     u4540:
 42359   006A60                     
 42360                           ; BSR set to: 0
 42361                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 42362   006A60  C584  F043         	movff	_flashBlock,67	;volatile
 42363   006A64  C585  F044         	movff	_flashBlock+1,68	;volatile
 42364   006A68  C586  F045         	movff	_flashBlock+2,69	;volatile
 42365   006A6C                     
 42366                           ; BSR set to: 0
 42367                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 42368   006A6C  5141               	movf	65,w,b	;volsfr
 42369   006A6E  0BF8               	andlw	-8
 42370   006A70  0905               	iorlw	5
 42371   006A72  6F41               	movwf	65,b	;volsfr
 42372                           
 42373                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 42374   006A74  0E55               	movlw	85
 42375   006A76  6F42               	movwf	66,b	;volatile
 42376                           
 42377                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 42378   006A78  0EAA               	movlw	170
 42379   006A7A  6F42               	movwf	66,b	;volatile
 42380   006A7C                     
 42381                           ; BSR set to: 0
 42382                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 42383   006A7C  8140               	bsf	64,0,b	;volatile
 42384   006A7E                     l1683:
 42385                           
 42386                           ; BSR set to: 0
 42387                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 42388   006A7E  B140               	btfsc	64,0,b	;volatile
 42389   006A80  EF44  F035         	goto	u4551
 42390   006A84  EF46  F035         	goto	u4550
 42391   006A88                     u4551:
 42392   006A88  EF3F  F035         	goto	l1683
 42393   006A8C                     u4550:
 42394   006A8C                     
 42395                           ; BSR set to: 0
 42396                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 42397   006A8C  0E07               	movlw	7
 42398   006A8E  1341               	iorwf	65,f,b	;volsfr
 42399                           
 42400                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 42401   006A90  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 42402   006A92  B4D8               	btfsc	status,2,c
 42403   006A94  EF4E  F035         	goto	u4561
 42404   006A98  EF50  F035         	goto	u4560
 42405   006A9C                     u4561:
 42406   006A9C  EF51  F035         	goto	l1686
 42407   006AA0                     u4560:
 42408   006AA0                     
 42409                           ; BSR set to: 0
 42410                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 42411   006AA0  8ED6               	bsf	214,7,c	;volatile
 42412   006AA2                     l1686:
 42413                           
 42414                           ; BSR set to: 0
 42415                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 42416   006AA2  0105               	movlb	5	; () banked
 42417   006AA4  6B9B               	clrf	_flashFlags& (0+255),b
 42418   006AA6                     l1675:
 42419                           
 42420                           ; BSR set to: 5
 42421   006AA6  0012               	return		;funcret
 42422   006AA8                     __end_of_flushFlashBlock:
 42423                           	callstack 0
 42424                           
 42425 ;; *************** function _eraseFlashBlock *****************
 42426 ;; Defined at:
 42427 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 42428 ;; Parameters:    Size  Location     Type
 42429 ;;		None
 42430 ;; Auto vars:     Size  Location     Type
 42431 ;;  interruptEna    1    3[COMRAM] unsigned char 
 42432 ;; Return value:  Size  Location     Type
 42433 ;;                  1    wreg      void 
 42434 ;; Registers used:
 42435 ;;		wreg, status,2, cstack
 42436 ;; Tracked objects:
 42437 ;;		On entry : 0/0
 42438 ;;		On exit  : 0/0
 42439 ;;		Unchanged: 0/0
 42440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42445 ;;Total ram usage:        4 bytes
 42446 ;; Hardware stack levels used: 1
 42447 ;; Hardware stack levels required when called: 2
 42448 ;; This function calls:
 42449 ;;		_APP_isSuitableTimeToWriteFlash
 42450 ;; This function is called by:
 42451 ;;		_flushFlashBlock
 42452 ;;		_FLASH_Write
 42453 ;; This function uses a non-reentrant model
 42454 ;;
 42455                           
 42456                           	psect	text129
 42457   006FC4                     __ptext129:
 42458                           	callstack 0
 42459   006FC4                     _eraseFlashBlock:
 42460                           	callstack 116
 42461   006FC4                     l7196:
 42462                           
 42463                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 42464   006FC4  EC46  F041         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42465   006FC8  0900               	iorlw	0
 42466   006FCA  B4D8               	btfsc	status,2,c
 42467   006FCC  EFEA  F037         	goto	u4431
 42468   006FD0  EFEC  F037         	goto	u4430
 42469   006FD4                     u4431:
 42470   006FD4  EFE2  F037         	goto	l7196
 42471   006FD8                     u4430:
 42472   006FD8                     
 42473                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 42474   006FD8  0E00               	movlw	0
 42475   006FDA  BED6               	btfsc	214,7,c	;volatile
 42476   006FDC  0E01               	movlw	1
 42477   006FDE  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 42478   006FE0                     l1664:
 42479                           
 42480                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 42481   006FE0  0100               	movlb	0	; () banked
 42482   006FE2  B140               	btfsc	64,0,b	;volatile
 42483   006FE4  EFF6  F037         	goto	u4441
 42484   006FE8  EFF8  F037         	goto	u4440
 42485   006FEC                     u4441:
 42486   006FEC  EFF0  F037         	goto	l1664
 42487   006FF0                     u4440:
 42488   006FF0                     
 42489                           ; BSR set to: 0
 42490                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42491   006FF0  C586  F045         	movff	_flashBlock+2,69	;volatile
 42492   006FF4                     
 42493                           ; BSR set to: 0
 42494                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42495   006FF4  C584  F501         	movff	_flashBlock,??_eraseFlashBlock
 42496   006FF8  C585  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 42497   006FFC  C586  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 42498   007000  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 42499   007004  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 42500   007008  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 42501   00700A  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 42502   00700C  6F44               	movwf	68,b	;volatile
 42503                           
 42504                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 42505   00700E  5141               	movf	65,w,b	;volsfr
 42506   007010  0BF8               	andlw	-8
 42507   007012  0906               	iorlw	6
 42508   007014  6F41               	movwf	65,b	;volsfr
 42509   007016                     
 42510                           ; BSR set to: 0
 42511                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 42512   007016  9ED6               	bcf	214,7,c	;volatile
 42513                           
 42514                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 42515   007018  0E55               	movlw	85
 42516   00701A  6F42               	movwf	66,b	;volatile
 42517                           
 42518                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 42519   00701C  0EAA               	movlw	170
 42520   00701E  6F42               	movwf	66,b	;volatile
 42521   007020                     
 42522                           ; BSR set to: 0
 42523                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 42524   007020  8140               	bsf	64,0,b	;volatile
 42525   007022                     l1667:
 42526                           
 42527                           ; BSR set to: 0
 42528                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 42529   007022  B140               	btfsc	64,0,b	;volatile
 42530   007024  EF16  F038         	goto	u4451
 42531   007028  EF18  F038         	goto	u4450
 42532   00702C                     u4451:
 42533   00702C  EF11  F038         	goto	l1667
 42534   007030                     u4450:
 42535   007030                     
 42536                           ; BSR set to: 0
 42537                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 42538   007030  0E07               	movlw	7
 42539   007032  1341               	iorwf	65,f,b	;volsfr
 42540                           
 42541                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 42542   007034  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 42543   007036  B4D8               	btfsc	status,2,c
 42544   007038  EF20  F038         	goto	u4461
 42545   00703C  EF22  F038         	goto	u4460
 42546   007040                     u4461:
 42547   007040  EF23  F038         	goto	l1671
 42548   007044                     u4460:
 42549   007044                     
 42550                           ; BSR set to: 0
 42551                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 42552   007044  8ED6               	bsf	214,7,c	;volatile
 42553   007046                     l1671:
 42554                           
 42555                           ; BSR set to: 0
 42556   007046  0012               	return		;funcret
 42557   007048                     __end_of_eraseFlashBlock:
 42558                           	callstack 0
 42559                           
 42560 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42561 ;; Defined at:
 42562 ;;		line 275 in file "../main.c"
 42563 ;; Parameters:    Size  Location     Type
 42564 ;;		None
 42565 ;; Auto vars:     Size  Location     Type
 42566 ;;		None
 42567 ;; Return value:  Size  Location     Type
 42568 ;;                  1    wreg      enum E23231
 42569 ;; Registers used:
 42570 ;;		wreg
 42571 ;; Tracked objects:
 42572 ;;		On entry : 0/0
 42573 ;;		On exit  : 0/0
 42574 ;;		Unchanged: 0/0
 42575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42580 ;;Total ram usage:        0 bytes
 42581 ;; Hardware stack levels used: 1
 42582 ;; Hardware stack levels required when called: 1
 42583 ;; This function calls:
 42584 ;;		Nothing
 42585 ;; This function is called by:
 42586 ;;		_eraseFlashBlock
 42587 ;;		_flushFlashBlock
 42588 ;; This function uses a non-reentrant model
 42589 ;;
 42590                           
 42591                           	psect	text130
 42592   00828C                     __ptext130:
 42593                           	callstack 0
 42594   00828C                     _APP_isSuitableTimeToWriteFlash:
 42595                           	callstack 116
 42596   00828C                     
 42597                           ;../main.c: 277:     if (DMAnCON0bits.DGO) return BAD_TIME;
 42598   00828C  0100               	movlb	0	; () banked
 42599   00828E  ABFC               	btfss	252,5,b	;volatile
 42600   008290  EF4C  F041         	goto	u4391
 42601   008294  EF4E  F041         	goto	u4390
 42602   008298                     u4391:
 42603   008298  EF51  F041         	goto	l7164
 42604   00829C                     u4390:
 42605   00829C                     
 42606                           ; BSR set to: 0
 42607   00829C  0E00               	movlw	0
 42608   00829E  EF52  F041         	goto	l85
 42609   0082A2                     l7164:
 42610                           
 42611                           ; BSR set to: 0
 42612                           ;../main.c: 279:     return GOOD_TIME;
 42613   0082A2  0E01               	movlw	1
 42614   0082A4                     l85:
 42615                           
 42616                           ; BSR set to: 0
 42617   0082A4  0012               	return		;funcret
 42618   0082A6                     __end_of_APP_isSuitableTimeToWriteFlash:
 42619                           	callstack 0
 42620                           
 42621 ;; *************** function _EEPROM_Write *****************
 42622 ;; Defined at:
 42623 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 42624 ;; Parameters:    Size  Location     Type
 42625 ;;  index           3    8[COMRAM] unsigned um
 42626 ;;  value           1   11[COMRAM] unsigned char 
 42627 ;; Auto vars:     Size  Location     Type
 42628 ;;  interruptEna    1    0        unsigned char 
 42629 ;; Return value:  Size  Location     Type
 42630 ;;                  1    wreg      unsigned char 
 42631 ;; Registers used:
 42632 ;;		wreg, status,2, status,0, cstack
 42633 ;; Tracked objects:
 42634 ;;		On entry : 0/0
 42635 ;;		On exit  : 0/0
 42636 ;;		Unchanged: 0/0
 42637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42642 ;;Total ram usage:        4 bytes
 42643 ;; Hardware stack levels used: 1
 42644 ;; Hardware stack levels required when called: 2
 42645 ;; This function calls:
 42646 ;;		_EEPROM_Read
 42647 ;;		_EEPROM_WriteNoVerify
 42648 ;;		_updateModuleErrorStatus
 42649 ;; This function is called by:
 42650 ;;		_writeNVM
 42651 ;; This function uses a non-reentrant model
 42652 ;;
 42653                           
 42654                           	psect	text131
 42655   0078CA                     __ptext131:
 42656                           	callstack 0
 42657   0078CA                     _EEPROM_Write:
 42658                           	callstack 118
 42659   0078CA  50D6               	movf	214,w,c	;volatile
 42660   0078CC                     l7464:
 42661                           
 42662                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 42663   0078CC  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 42664   0078D0  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 42665   0078D4  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 42666   0078D8  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 42667   0078DC  EC9F  F03B         	call	_EEPROM_WriteNoVerify	;wreg free
 42668   0078E0                     
 42669                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 42670   0078E0  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 42671   0078E4  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42672   0078E8  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 42673   0078EC  EC94  F03D         	call	_EEPROM_Read	;wreg free
 42674   0078F0  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 42675   0078F2  A4D8               	btfss	status,2,c
 42676   0078F4  EF7E  F03C         	goto	u4781
 42677   0078F8  EF80  F03C         	goto	u4780
 42678   0078FC                     u4781:
 42679   0078FC  EF82  F03C         	goto	l7470
 42680   007900                     u4780:
 42681   007900  EF89  F03C         	goto	l7474
 42682   007904                     l7470:
 42683                           
 42684                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 42685   007904  0105               	movlb	5	; () banked
 42686   007906  4BB5               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42687   007908  2BB6               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42688   00790A                     
 42689                           ; BSR set to: 5
 42690                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 42691   00790A  EC76  F041         	call	_updateModuleErrorStatus	;wreg free
 42692                           
 42693                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 42694   00790E  EF66  F03C         	goto	l7464
 42695   007912                     l7474:
 42696                           
 42697                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 42698   007912  0E07               	movlw	7
 42699   007914  0100               	movlb	0	; () banked
 42700   007916  1341               	iorwf	65,f,b	;volsfr
 42701                           
 42702                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 42703   007918  0E00               	movlw	0
 42704   00791A  6F43               	movwf	67,b	;volatile
 42705   00791C  0E00               	movlw	0
 42706   00791E  6F44               	movwf	68,b	;volatile
 42707   007920  0E00               	movlw	0
 42708   007922  6F45               	movwf	69,b	;volatile
 42709   007924                     
 42710                           ; BSR set to: 0
 42711                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 42712   007924  0E00               	movlw	0
 42713   007926                     
 42714                           ; BSR set to: 0
 42715   007926  0012               	return		;funcret
 42716   007928                     __end_of_EEPROM_Write:
 42717                           	callstack 0
 42718                           
 42719 ;; *************** function _updateModuleErrorStatus *****************
 42720 ;; Defined at:
 42721 ;;		line 639 in file "../../VLCBlib_PIC/mns.c"
 42722 ;; Parameters:    Size  Location     Type
 42723 ;;		None
 42724 ;; Auto vars:     Size  Location     Type
 42725 ;;		None
 42726 ;; Return value:  Size  Location     Type
 42727 ;;                  1    wreg      void 
 42728 ;; Registers used:
 42729 ;;		wreg, status,2, status,0
 42730 ;; Tracked objects:
 42731 ;;		On entry : 0/0
 42732 ;;		On exit  : 0/0
 42733 ;;		Unchanged: 0/0
 42734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42739 ;;Total ram usage:        0 bytes
 42740 ;; Hardware stack levels used: 1
 42741 ;; Hardware stack levels required when called: 1
 42742 ;; This function calls:
 42743 ;;		Nothing
 42744 ;; This function is called by:
 42745 ;;		_canSendMessage
 42746 ;;		_processEnumeration
 42747 ;;		_EEPROM_Write
 42748 ;; This function uses a non-reentrant model
 42749 ;;
 42750                           
 42751                           	psect	text132
 42752   0082EC                     __ptext132:
 42753                           	callstack 0
 42754   0082EC                     _updateModuleErrorStatus:
 42755                           	callstack 119
 42756   0082EC                     
 42757                           ;../../VLCBlib_PIC/mns.c: 640:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42758   0082EC  0105               	movlb	5	; () banked
 42759   0082EE  29AF               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42760   0082F0  B4D8               	btfsc	status,2,c
 42761   0082F2  EF7D  F041         	goto	u4501
 42762   0082F6  EF7F  F041         	goto	u4500
 42763   0082FA                     u4501:
 42764   0082FA  EF80  F041         	goto	l1389
 42765   0082FE                     u4500:
 42766   0082FE                     
 42767                           ; BSR set to: 5
 42768                           ;../../VLCBlib_PIC/mns.c: 641:         mnsDiagnostics[0x01].asBytes.lo++;
 42769   0082FE  2BAF               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42770   008300                     l1389:
 42771                           
 42772                           ; BSR set to: 5
 42773   008300  0012               	return		;funcret
 42774   008302                     __end_of_updateModuleErrorStatus:
 42775                           	callstack 0
 42776                           
 42777 ;; *************** function _EEPROM_WriteNoVerify *****************
 42778 ;; Defined at:
 42779 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 42780 ;; Parameters:    Size  Location     Type
 42781 ;;  index           3    0[COMRAM] unsigned um
 42782 ;;  value           1    3[COMRAM] unsigned char 
 42783 ;; Auto vars:     Size  Location     Type
 42784 ;;  interruptEna    1    7[COMRAM] unsigned char 
 42785 ;; Return value:  Size  Location     Type
 42786 ;;                  1    wreg      unsigned char 
 42787 ;; Registers used:
 42788 ;;		wreg, status,2
 42789 ;; Tracked objects:
 42790 ;;		On entry : 0/0
 42791 ;;		On exit  : 0/0
 42792 ;;		Unchanged: 0/0
 42793 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42796 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42797 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42798 ;;Total ram usage:        8 bytes
 42799 ;; Hardware stack levels used: 1
 42800 ;; Hardware stack levels required when called: 1
 42801 ;; This function calls:
 42802 ;;		Nothing
 42803 ;; This function is called by:
 42804 ;;		_EEPROM_Write
 42805 ;; This function uses a non-reentrant model
 42806 ;;
 42807                           
 42808                           	psect	text133
 42809   00773E                     __ptext133:
 42810                           	callstack 0
 42811   00773E                     _EEPROM_WriteNoVerify:
 42812                           	callstack 118
 42813   00773E                     
 42814                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 42815   00773E  0E00               	movlw	0
 42816   007740  BED6               	btfsc	214,7,c	;volatile
 42817   007742  0E01               	movlw	1
 42818   007744  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 42819   007746                     l1649:
 42820                           
 42821                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 42822   007746  0100               	movlb	0	; () banked
 42823   007748  B140               	btfsc	64,0,b	;volatile
 42824   00774A  EFA9  F03B         	goto	u4571
 42825   00774E  EFAB  F03B         	goto	u4570
 42826   007752                     u4571:
 42827   007752  EFA3  F03B         	goto	l1649
 42828   007756                     u4570:
 42829   007756                     
 42830                           ; BSR set to: 0
 42831                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 42832   007756  0E38               	movlw	56
 42833   007758  6F45               	movwf	69,b	;volatile
 42834                           
 42835                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 42836   00775A  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 42837   00775E  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 42838   007762  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 42839   007766  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 42840   00776A  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 42841   00776E  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 42842   007770  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 42843   007772  6F44               	movwf	68,b	;volatile
 42844   007774                     
 42845                           ; BSR set to: 0
 42846                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 42847   007774  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 42848   007778                     
 42849                           ; BSR set to: 0
 42850                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 42851   007778  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 42852                           
 42853                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 42854   00777C  5141               	movf	65,w,b	;volsfr
 42855   00777E  0BF8               	andlw	-8
 42856   007780  0903               	iorlw	3
 42857   007782  6F41               	movwf	65,b	;volsfr
 42858   007784                     
 42859                           ; BSR set to: 0
 42860                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 42861   007784  9ED6               	bcf	214,7,c	;volatile
 42862                           
 42863                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 42864   007786  0E55               	movlw	85
 42865   007788  6F42               	movwf	66,b	;volatile
 42866                           
 42867                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 42868   00778A  0EAA               	movlw	170
 42869   00778C  6F42               	movwf	66,b	;volatile
 42870   00778E                     
 42871                           ; BSR set to: 0
 42872                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 42873   00778E  8140               	bsf	64,0,b	;volatile
 42874                           
 42875                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 42876   007790  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 42877   007792  B4D8               	btfsc	status,2,c
 42878   007794  EFCE  F03B         	goto	u4581
 42879   007798  EFD0  F03B         	goto	u4580
 42880   00779C                     u4581:
 42881   00779C  EFD1  F03B         	goto	l1653
 42882   0077A0                     u4580:
 42883   0077A0                     
 42884                           ; BSR set to: 0
 42885                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 42886   0077A0  8ED6               	bsf	214,7,c	;volatile
 42887   0077A2                     l1653:
 42888                           
 42889                           ; BSR set to: 0
 42890   0077A2  0012               	return		;funcret
 42891   0077A4                     __end_of_EEPROM_WriteNoVerify:
 42892                           	callstack 0
 42893                           
 42894 ;; *************** function _rebuildHashtable *****************
 42895 ;; Defined at:
 42896 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42897 ;; Parameters:    Size  Location     Type
 42898 ;;		None
 42899 ;; Auto vars:     Size  Location     Type
 42900 ;;  ev              2    0        short 
 42901 ;;  a               2    0        int 
 42902 ;;  chainIdx        1   38[COMRAM] unsigned char 
 42903 ;;  tableIndex      1   37[COMRAM] unsigned char 
 42904 ;;  hash            1   36[COMRAM] unsigned char 
 42905 ;; Return value:  Size  Location     Type
 42906 ;;                  1    wreg      void 
 42907 ;; Registers used:
 42908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42909 ;; Tracked objects:
 42910 ;;		On entry : 0/0
 42911 ;;		On exit  : 0/0
 42912 ;;		Unchanged: 0/0
 42913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42915 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42916 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42918 ;;Total ram usage:        6 bytes
 42919 ;; Hardware stack levels used: 1
 42920 ;; Hardware stack levels required when called: 4
 42921 ;; This function calls:
 42922 ;;		_getEN
 42923 ;;		_getHash
 42924 ;;		_getNN
 42925 ;; This function is called by:
 42926 ;;		_teachPowerUp
 42927 ;;		_clearAllEvents
 42928 ;;		_removeTableEntry
 42929 ;;		_addEvent
 42930 ;;		_mnsProcessMessage
 42931 ;; This function uses a non-reentrant model
 42932 ;;
 42933                           
 42934                           	psect	text134
 42935   005772                     __ptext134:
 42936                           	callstack 0
 42937   005772                     _rebuildHashtable:
 42938                           	callstack 120
 42939   005772                     
 42940                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 42941   005772  6A25               	clrf	rebuildHashtable@hash^(0+1280),c
 42942   005774                     l1162:
 42943                           
 42944                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 42945   005774  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 42946   005776                     l7632:
 42947                           
 42948                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 42949   005776  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42950   005778  0D14               	mullw	20
 42951   00577A  0EFC               	movlw	low _eventChains
 42952   00577C  24F3               	addwf	243,w,c
 42953   00577E  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42954   005780  0E08               	movlw	high _eventChains
 42955   005782  20F4               	addwfc	prodh,w,c
 42956   005784  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42957   005786  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42958   005788  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42959   00578A  6ED9               	movwf	fsr2l,c
 42960   00578C  0E00               	movlw	0
 42961   00578E  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42962   005790  6EDA               	movwf	fsr2h,c
 42963   005792  0EFF               	movlw	255
 42964   005794  6EDF               	movwf	indf2,c
 42965   005796                     
 42966                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 42967   005796  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 42968   005798  0E13               	movlw	19
 42969   00579A  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 42970   00579C  EFD2  F02B         	goto	u4951
 42971   0057A0  EFD4  F02B         	goto	u4950
 42972   0057A4                     u4951:
 42973   0057A4  EFBB  F02B         	goto	l7632
 42974   0057A8                     u4950:
 42975   0057A8                     
 42976                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 42977   0057A8  2A25               	incf	rebuildHashtable@hash^(0+1280),f,c
 42978   0057AA  0E1F               	movlw	31
 42979   0057AC  6425               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 42980   0057AE  EFDB  F02B         	goto	u4961
 42981   0057B2  EFDD  F02B         	goto	u4960
 42982   0057B6                     u4961:
 42983   0057B6  EFBA  F02B         	goto	l1162
 42984   0057BA                     u4960:
 42985   0057BA                     
 42986                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<255; ta
      +                          bleIndex++) {
 42987   0057BA  6A26               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 42988   0057BC                     l7646:
 42989                           
 42990                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 42991   0057BC  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42992   0057BE  ECC1  F033         	call	_getEN
 42993   0057C2  500D               	movf	?_getEN^(0+1280),w,c
 42994   0057C4  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 42995   0057C6  B4D8               	btfsc	status,2,c
 42996   0057C8  EFE8  F02B         	goto	u4971
 42997   0057CC  EFEA  F02B         	goto	u4970
 42998   0057D0                     u4971:
 42999   0057D0  EF2D  F02C         	goto	l7664
 43000   0057D4                     u4970:
 43001   0057D4                     
 43002                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 43003   0057D4  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43004   0057D6  EC93  F029         	call	_getNN
 43005   0057DA  C50D  F51C         	movff	?_getNN,getHash@nn
 43006   0057DE  C50E  F51D         	movff	?_getNN+1,getHash@nn+1
 43007   0057E2  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43008   0057E4  ECC1  F033         	call	_getEN
 43009   0057E8  C50D  F51E         	movff	?_getEN,getHash@en
 43010   0057EC  C50E  F51F         	movff	?_getEN+1,getHash@en+1
 43011   0057F0  EC1B  F041         	call	_getHash	;wreg free
 43012   0057F4  6E25               	movwf	rebuildHashtable@hash^(0+1280),c
 43013   0057F6                     
 43014                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 43015   0057F6  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 43016   0057F8                     l7656:
 43017                           
 43018                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 43019   0057F8  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43020   0057FA  0D14               	mullw	20
 43021   0057FC  0EFC               	movlw	low _eventChains
 43022   0057FE  24F3               	addwf	243,w,c
 43023   005800  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43024   005802  0E08               	movlw	high _eventChains
 43025   005804  20F4               	addwfc	prodh,w,c
 43026   005806  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43027   005808  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43028   00580A  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43029   00580C  6ED9               	movwf	fsr2l,c
 43030   00580E  0E00               	movlw	0
 43031   005810  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43032   005812  6EDA               	movwf	fsr2h,c
 43033   005814  28DE               	incf	postinc2,w,c
 43034   005816  A4D8               	btfss	status,2,c
 43035   005818  EF10  F02C         	goto	u4981
 43036   00581C  EF12  F02C         	goto	u4980
 43037   005820                     u4981:
 43038   005820  EF24  F02C         	goto	l7660
 43039   005824                     u4980:
 43040   005824                     
 43041                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 43042   005824  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43043   005826  0D14               	mullw	20
 43044   005828  0EFC               	movlw	low _eventChains
 43045   00582A  24F3               	addwf	243,w,c
 43046   00582C  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43047   00582E  0E08               	movlw	high _eventChains
 43048   005830  20F4               	addwfc	prodh,w,c
 43049   005832  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43050   005834  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43051   005836  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43052   005838  6ED9               	movwf	fsr2l,c
 43053   00583A  0E00               	movlw	0
 43054   00583C  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43055   00583E  6EDA               	movwf	fsr2h,c
 43056   005840  C526  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 43057                           
 43058                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 43059   005844  EF2D  F02C         	goto	l7664
 43060   005848                     l7660:
 43061                           
 43062                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 43063   005848  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 43064   00584A  0E13               	movlw	19
 43065   00584C  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 43066   00584E  EF2B  F02C         	goto	u4991
 43067   005852  EF2D  F02C         	goto	u4990
 43068   005856                     u4991:
 43069   005856  EFFC  F02B         	goto	l7656
 43070   00585A                     u4990:
 43071   00585A                     l7664:
 43072                           
 43073                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 43074   00585A  2A26               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 43075   00585C  2826               	incf	rebuildHashtable@tableIndex^(0+1280),w,c
 43076   00585E  A4D8               	btfss	status,2,c
 43077   005860  EF34  F02C         	goto	u5001
 43078   005864  EF36  F02C         	goto	u5000
 43079   005868                     u5001:
 43080   005868  EFDE  F02B         	goto	l7646
 43081   00586C                     u5000:
 43082   00586C  0012               	return		;funcret
 43083   00586E                     __end_of_rebuildHashtable:
 43084                           	callstack 0
 43085                           
 43086 ;; *************** function _getNN *****************
 43087 ;; Defined at:
 43088 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43089 ;; Parameters:    Size  Location     Type
 43090 ;;  tableIndex      1    wreg     unsigned char 
 43091 ;; Auto vars:     Size  Location     Type
 43092 ;;  tableIndex      1   26[COMRAM] unsigned char 
 43093 ;;  lo              2   23[COMRAM] unsigned short 
 43094 ;;  hi              2   21[COMRAM] unsigned short 
 43095 ;;  flags           1   25[COMRAM] unsigned char 
 43096 ;; Return value:  Size  Location     Type
 43097 ;;                  2   12[COMRAM] unsigned short 
 43098 ;; Registers used:
 43099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43100 ;; Tracked objects:
 43101 ;;		On entry : 0/0
 43102 ;;		On exit  : 0/0
 43103 ;;		Unchanged: 0/0
 43104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43106 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43107 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43108 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43109 ;;Total ram usage:       15 bytes
 43110 ;; Hardware stack levels used: 1
 43111 ;; Hardware stack levels required when called: 3
 43112 ;; This function calls:
 43113 ;;		_readNVM
 43114 ;; This function is called by:
 43115 ;;		_nerdCallback
 43116 ;;		_doNenrd
 43117 ;;		_reqevCallback
 43118 ;;		_findEvent
 43119 ;;		_rebuildHashtable
 43120 ;; This function uses a non-reentrant model
 43121 ;;
 43122                           
 43123                           	psect	text135
 43124   005326                     __ptext135:
 43125                           	callstack 0
 43126   005326                     _getNN:
 43127                           	callstack 120
 43128                           
 43129                           ;incstack = 0
 43130                           ;getNN@tableIndex stored from wreg
 43131   005326  6E1B               	movwf	getNN@tableIndex^(0+1280),c
 43132   005328                     
 43133                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 255) {
 43134   005328  281B               	incf	getNN@tableIndex^(0+1280),w,c
 43135   00532A  A4D8               	btfss	status,2,c
 43136   00532C  EF9A  F029         	goto	u4761
 43137   005330  EF9C  F029         	goto	u4760
 43138   005334                     u4761:
 43139   005334  EFA2  F029         	goto	l7440
 43140   005338                     u4760:
 43141   005338                     
 43142                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 43143   005338  0E00               	movlw	0
 43144   00533A  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43145   00533C  0E08               	movlw	8
 43146   00533E  6E0D               	movwf	?_getNN^(0+1280),c
 43147   005340  EF23  F02A         	goto	l1146
 43148   005344                     l7440:
 43149                           
 43150                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4);
 43151   005344  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43152   005346  6E0F               	movwf	??_getNN^(0+1280),c
 43153   005348  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43154   00534A  0E01               	movlw	1
 43155   00534C  020F               	mulwf	??_getNN^(0+1280),c
 43156   00534E  C4F3 F511          	movff	prodl,??_getNN+2
 43157   005352  C4F4 F512          	movff	prodh,??_getNN+3
 43158   005356  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43159   005358  50F3               	movf	prodl,w,c
 43160   00535A  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43161   00535C  0E01               	movlw	1
 43162   00535E  020F               	mulwf	??_getNN^(0+1280),c
 43163   005360  50F3               	movf	prodl,w,c
 43164   005362  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43165   005364  C511  F513         	movff	??_getNN+2,??_getNN+4
 43166   005368  C512  F514         	movff	??_getNN+3,??_getNN+5
 43167   00536C  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43168   00536E  0E04               	movlw	4
 43169   005370  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43170   005372  6E07               	movwf	readNVM@index^(0+1280),c
 43171   005374  0E00               	movlw	0
 43172   005376  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43173   005378  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43174   00537A  0E01               	movlw	1
 43175   00537C  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43176   00537E  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43177   005380  0E01               	movlw	1
 43178   005382  EC8D  F03A         	call	_readNVM
 43179   005386  5007               	movf	?_readNVM^(0+1280),w,c
 43180   005388  6E1A               	movwf	getNN@flags^(0+1280),c
 43181   00538A                     
 43182                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 43183   00538A  A01A               	btfss	getNN@flags^(0+1280),0,c
 43184   00538C  EFCA  F029         	goto	u4771
 43185   005390  EFCC  F029         	goto	u4770
 43186   005394                     u4771:
 43187   005394  EFD2  F029         	goto	l7446
 43188   005398                     u4770:
 43189   005398                     
 43190                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 43191   005398  C58F  F50D         	movff	_nn,?_getNN
 43192   00539C  C590  F50E         	movff	_nn+1,?_getNN+1
 43193   0053A0  EF23  F02A         	goto	l1146
 43194   0053A4                     l7446:
 43195                           
 43196                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+1);
 43197   0053A4  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43198   0053A6  6E0F               	movwf	??_getNN^(0+1280),c
 43199   0053A8  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43200   0053AA  0E01               	movlw	1
 43201   0053AC  020F               	mulwf	??_getNN^(0+1280),c
 43202   0053AE  C4F3 F511          	movff	prodl,??_getNN+2
 43203   0053B2  C4F4 F512          	movff	prodh,??_getNN+3
 43204   0053B6  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43205   0053B8  50F3               	movf	prodl,w,c
 43206   0053BA  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43207   0053BC  0E01               	movlw	1
 43208   0053BE  020F               	mulwf	??_getNN^(0+1280),c
 43209   0053C0  50F3               	movf	prodl,w,c
 43210   0053C2  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43211   0053C4  C511  F513         	movff	??_getNN+2,??_getNN+4
 43212   0053C8  C512  F514         	movff	??_getNN+3,??_getNN+5
 43213   0053CC  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43214   0053CE  0E01               	movlw	1
 43215   0053D0  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43216   0053D2  6E07               	movwf	readNVM@index^(0+1280),c
 43217   0053D4  0E00               	movlw	0
 43218   0053D6  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43219   0053D8  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43220   0053DA  0E01               	movlw	1
 43221   0053DC  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43222   0053DE  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43223   0053E0  0E01               	movlw	1
 43224   0053E2  EC8D  F03A         	call	_readNVM
 43225   0053E6  5007               	movf	?_readNVM^(0+1280),w,c
 43226   0053E8  6E18               	movwf	getNN@lo^(0+1280),c
 43227   0053EA  6A19               	clrf	(getNN@lo+1)^(0+1280),c
 43228                           
 43229                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0);
 43230   0053EC  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43231   0053EE  6E0F               	movwf	??_getNN^(0+1280),c
 43232   0053F0  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43233   0053F2  0E01               	movlw	1
 43234   0053F4  020F               	mulwf	??_getNN^(0+1280),c
 43235   0053F6  C4F3 F511          	movff	prodl,??_getNN+2
 43236   0053FA  C4F4 F512          	movff	prodh,??_getNN+3
 43237   0053FE  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43238   005400  50F3               	movf	prodl,w,c
 43239   005402  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43240   005404  0E01               	movlw	1
 43241   005406  020F               	mulwf	??_getNN^(0+1280),c
 43242   005408  50F3               	movf	prodl,w,c
 43243   00540A  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43244   00540C  C511  F513         	movff	??_getNN+2,??_getNN+4
 43245   005410  C512  F514         	movff	??_getNN+3,??_getNN+5
 43246   005414  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43247   005416  0E00               	movlw	0
 43248   005418  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43249   00541A  6E07               	movwf	readNVM@index^(0+1280),c
 43250   00541C  0E00               	movlw	0
 43251   00541E  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43252   005420  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43253   005422  0E01               	movlw	1
 43254   005424  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43255   005426  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43256   005428  0E01               	movlw	1
 43257   00542A  EC8D  F03A         	call	_readNVM
 43258   00542E  5007               	movf	?_readNVM^(0+1280),w,c
 43259   005430  6E16               	movwf	getNN@hi^(0+1280),c
 43260   005432  6A17               	clrf	(getNN@hi+1)^(0+1280),c
 43261   005434                     
 43262                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 43263   005434  5016               	movf	getNN@hi^(0+1280),w,c
 43264   005436  6E10               	movwf	(??_getNN+1)^(0+1280),c
 43265   005438  6A0F               	clrf	??_getNN^(0+1280),c
 43266   00543A  5018               	movf	getNN@lo^(0+1280),w,c
 43267   00543C  100F               	iorwf	??_getNN^(0+1280),w,c
 43268   00543E  6E0D               	movwf	?_getNN^(0+1280),c
 43269   005440  5019               	movf	(getNN@lo+1)^(0+1280),w,c
 43270   005442  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 43271   005444  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43272   005446                     l1146:
 43273   005446  0012               	return		;funcret
 43274   005448                     __end_of_getNN:
 43275                           	callstack 0
 43276                           
 43277 ;; *************** function _getHash *****************
 43278 ;; Defined at:
 43279 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43280 ;; Parameters:    Size  Location     Type
 43281 ;;  nn              2   27[COMRAM] unsigned short 
 43282 ;;  en              2   29[COMRAM] unsigned short 
 43283 ;; Auto vars:     Size  Location     Type
 43284 ;;  hash            1   32[COMRAM] unsigned char 
 43285 ;; Return value:  Size  Location     Type
 43286 ;;                  1    wreg      unsigned char 
 43287 ;; Registers used:
 43288 ;;		wreg, status,2, status,0, prodl, prodh
 43289 ;; Tracked objects:
 43290 ;;		On entry : 0/0
 43291 ;;		On exit  : 0/0
 43292 ;;		Unchanged: 0/0
 43293 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43298 ;;Total ram usage:        6 bytes
 43299 ;; Hardware stack levels used: 1
 43300 ;; Hardware stack levels required when called: 1
 43301 ;; This function calls:
 43302 ;;		Nothing
 43303 ;; This function is called by:
 43304 ;;		_findEvent
 43305 ;;		_rebuildHashtable
 43306 ;; This function uses a non-reentrant model
 43307 ;;
 43308                           
 43309                           	psect	text136
 43310   008236                     __ptext136:
 43311                           	callstack 0
 43312   008236                     _getHash:
 43313                           	callstack 122
 43314   008236                     
 43315                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 43316   008236  501D               	movf	(getHash@nn+1)^(0+1280),w,c
 43317   008238  181C               	xorwf	getHash@nn^(0+1280),w,c
 43318   00823A  6E21               	movwf	getHash@hash^(0+1280),c
 43319   00823C                     
 43320                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 43321   00823C  501F               	movf	(getHash@en+1)^(0+1280),w,c
 43322   00823E  181E               	xorwf	getHash@en^(0+1280),w,c
 43323   008240  6E20               	movwf	??_getHash^(0+1280),c
 43324   008242  5021               	movf	getHash@hash^(0+1280),w,c
 43325   008244  0D07               	mullw	7
 43326   008246  50F3               	movf	243,w,c
 43327   008248  2420               	addwf	??_getHash^(0+1280),w,c
 43328   00824A  6E21               	movwf	getHash@hash^(0+1280),c
 43329   00824C                     
 43330                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 43331   00824C  0E1F               	movlw	31
 43332   00824E  1621               	andwf	getHash@hash^(0+1280),f,c
 43333   008250                     
 43334                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 43335   008250  5021               	movf	getHash@hash^(0+1280),w,c
 43336   008252  0012               	return		;funcret
 43337   008254                     __end_of_getHash:
 43338                           	callstack 0
 43339                           
 43340 ;; *************** function _getEN *****************
 43341 ;; Defined at:
 43342 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43343 ;; Parameters:    Size  Location     Type
 43344 ;;  tableIndex      1    wreg     unsigned char 
 43345 ;; Auto vars:     Size  Location     Type
 43346 ;;  tableIndex      1   25[COMRAM] unsigned char 
 43347 ;;  lo              2   23[COMRAM] unsigned short 
 43348 ;;  hi              2   21[COMRAM] unsigned short 
 43349 ;; Return value:  Size  Location     Type
 43350 ;;                  2   12[COMRAM] unsigned short 
 43351 ;; Registers used:
 43352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43353 ;; Tracked objects:
 43354 ;;		On entry : 0/0
 43355 ;;		On exit  : 0/0
 43356 ;;		Unchanged: 0/0
 43357 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43359 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43360 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43361 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43362 ;;Total ram usage:       14 bytes
 43363 ;; Hardware stack levels used: 1
 43364 ;; Hardware stack levels required when called: 3
 43365 ;; This function calls:
 43366 ;;		_readNVM
 43367 ;; This function is called by:
 43368 ;;		_doNnevn
 43369 ;;		_nerdCallback
 43370 ;;		_doNenrd
 43371 ;;		_doRqevn
 43372 ;;		_reqevCallback
 43373 ;;		_addEvent
 43374 ;;		_findEvent
 43375 ;;		_rebuildHashtable
 43376 ;; This function uses a non-reentrant model
 43377 ;;
 43378                           
 43379                           	psect	text137
 43380   006782                     __ptext137:
 43381                           	callstack 0
 43382   006782                     _getEN:
 43383                           	callstack 120
 43384                           
 43385                           ;incstack = 0
 43386                           ;getEN@tableIndex stored from wreg
 43387   006782  6E1A               	movwf	getEN@tableIndex^(0+1280),c
 43388   006784                     
 43389                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3);
 43390   006784  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43391   006786  6E0F               	movwf	??_getEN^(0+1280),c
 43392   006788  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43393   00678A  0E01               	movlw	1
 43394   00678C  020F               	mulwf	??_getEN^(0+1280),c
 43395   00678E  C4F3 F511          	movff	prodl,??_getEN+2
 43396   006792  C4F4 F512          	movff	prodh,??_getEN+3
 43397   006796  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43398   006798  50F3               	movf	prodl,w,c
 43399   00679A  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43400   00679C  0E01               	movlw	1
 43401   00679E  020F               	mulwf	??_getEN^(0+1280),c
 43402   0067A0  50F3               	movf	prodl,w,c
 43403   0067A2  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43404   0067A4  C511  F513         	movff	??_getEN+2,??_getEN+4
 43405   0067A8  C512  F514         	movff	??_getEN+3,??_getEN+5
 43406   0067AC  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43407   0067AE  0E03               	movlw	3
 43408   0067B0  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43409   0067B2  6E07               	movwf	readNVM@index^(0+1280),c
 43410   0067B4  0E00               	movlw	0
 43411   0067B6  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43412   0067B8  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43413   0067BA  0E01               	movlw	1
 43414   0067BC  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43415   0067BE  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43416   0067C0  0E01               	movlw	1
 43417   0067C2  EC8D  F03A         	call	_readNVM
 43418   0067C6  5007               	movf	?_readNVM^(0+1280),w,c
 43419   0067C8  6E18               	movwf	getEN@lo^(0+1280),c
 43420   0067CA  6A19               	clrf	(getEN@lo+1)^(0+1280),c
 43421                           
 43422                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2);
 43423   0067CC  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43424   0067CE  6E0F               	movwf	??_getEN^(0+1280),c
 43425   0067D0  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43426   0067D2  0E01               	movlw	1
 43427   0067D4  020F               	mulwf	??_getEN^(0+1280),c
 43428   0067D6  C4F3 F511          	movff	prodl,??_getEN+2
 43429   0067DA  C4F4 F512          	movff	prodh,??_getEN+3
 43430   0067DE  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43431   0067E0  50F3               	movf	prodl,w,c
 43432   0067E2  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43433   0067E4  0E01               	movlw	1
 43434   0067E6  020F               	mulwf	??_getEN^(0+1280),c
 43435   0067E8  50F3               	movf	prodl,w,c
 43436   0067EA  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43437   0067EC  C511  F513         	movff	??_getEN+2,??_getEN+4
 43438   0067F0  C512  F514         	movff	??_getEN+3,??_getEN+5
 43439   0067F4  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43440   0067F6  0E02               	movlw	2
 43441   0067F8  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43442   0067FA  6E07               	movwf	readNVM@index^(0+1280),c
 43443   0067FC  0E00               	movlw	0
 43444   0067FE  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43445   006800  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43446   006802  0E01               	movlw	1
 43447   006804  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43448   006806  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43449   006808  0E01               	movlw	1
 43450   00680A  EC8D  F03A         	call	_readNVM
 43451   00680E  5007               	movf	?_readNVM^(0+1280),w,c
 43452   006810  6E16               	movwf	getEN@hi^(0+1280),c
 43453   006812  6A17               	clrf	(getEN@hi+1)^(0+1280),c
 43454   006814                     
 43455                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 43456   006814  5016               	movf	getEN@hi^(0+1280),w,c
 43457   006816  6E10               	movwf	(??_getEN+1)^(0+1280),c
 43458   006818  6A0F               	clrf	??_getEN^(0+1280),c
 43459   00681A  5018               	movf	getEN@lo^(0+1280),w,c
 43460   00681C  100F               	iorwf	??_getEN^(0+1280),w,c
 43461   00681E  6E0D               	movwf	?_getEN^(0+1280),c
 43462   006820  5019               	movf	(getEN@lo+1)^(0+1280),w,c
 43463   006822  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 43464   006824  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 43465   006826  0012               	return		;funcret
 43466   006828                     __end_of_getEN:
 43467                           	callstack 0
 43468                           
 43469 ;; *************** function _readNVM *****************
 43470 ;; Defined at:
 43471 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 43472 ;; Parameters:    Size  Location     Type
 43473 ;;  type            1    wreg     enum E23276
 43474 ;;  index           3    6[COMRAM] unsigned um
 43475 ;; Auto vars:     Size  Location     Type
 43476 ;;  type            1   11[COMRAM] enum E23276
 43477 ;; Return value:  Size  Location     Type
 43478 ;;                  2    6[COMRAM] short 
 43479 ;; Registers used:
 43480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43481 ;; Tracked objects:
 43482 ;;		On entry : 0/0
 43483 ;;		On exit  : 0/0
 43484 ;;		Unchanged: 0/0
 43485 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43486 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43490 ;;Total ram usage:        6 bytes
 43491 ;; Hardware stack levels used: 1
 43492 ;; Hardware stack levels required when called: 2
 43493 ;; This function calls:
 43494 ;;		_EEPROM_Read
 43495 ;;		_FLASH_Read
 43496 ;; This function is called by:
 43497 ;;		_bootPowerUp
 43498 ;;		_canPowerUp
 43499 ;;		_getEv
 43500 ;;		_getEVs
 43501 ;;		_getNN
 43502 ;;		_getEN
 43503 ;;		_mnsPowerUp
 43504 ;;		_loadNvCache
 43505 ;;		_main
 43506 ;; This function uses a non-reentrant model
 43507 ;;
 43508                           
 43509                           	psect	text138
 43510   00751A                     __ptext138:
 43511                           	callstack 0
 43512   00751A                     _readNVM:
 43513                           	callstack 124
 43514                           
 43515                           ;incstack = 0
 43516                           ;readNVM@type stored from wreg
 43517   00751A  6E0C               	movwf	readNVM@type^(0+1280),c
 43518   00751C                     
 43519                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 43520   00751C  EFB1  F03A         	goto	l7256
 43521   007520                     l7242:
 43522                           
 43523                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 43524   007520  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 43525   007524  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 43526   007528  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 43527   00752A  EC94  F03D         	call	_EEPROM_Read	;wreg free
 43528   00752E  6E0A               	movwf	??_readNVM^(0+1280),c
 43529   007530  500A               	movf	??_readNVM^(0+1280),w,c
 43530   007532  6E07               	movwf	?_readNVM^(0+1280),c
 43531   007534  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43532   007536  EFC6  F03A         	goto	l1715
 43533   00753A                     l7246:
 43534                           
 43535                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 43536   00753A  C507  F501         	movff	readNVM@index,FLASH_Read@address
 43537   00753E  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 43538   007542  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 43539   007546  ECDC  F039         	call	_FLASH_Read	;wreg free
 43540   00754A  6E0A               	movwf	??_readNVM^(0+1280),c
 43541   00754C  500A               	movf	??_readNVM^(0+1280),w,c
 43542   00754E  6E07               	movwf	?_readNVM^(0+1280),c
 43543   007550  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43544   007552  EFC6  F03A         	goto	l1715
 43545   007556                     l7250:
 43546                           
 43547                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 43548   007556  0EFF               	movlw	255
 43549   007558  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 43550   00755A  0E02               	movlw	2
 43551   00755C  6E07               	movwf	?_readNVM^(0+1280),c
 43552   00755E  EFC6  F03A         	goto	l1715
 43553   007562                     l7256:
 43554   007562  500C               	movf	readNVM@type^(0+1280),w,c
 43555   007564  6E0A               	movwf	??_readNVM^(0+1280),c
 43556   007566  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 43557                           
 43558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43559                           ; Switch size 1, requested type "simple"
 43560                           ; Number of cases is 1, Range of values is 0 to 0
 43561                           ; switch strategies available:
 43562                           ; Name         Instructions Cycles
 43563                           ; simple_byte            4     3 (average)
 43564                           ;	Chosen strategy is simple_byte
 43565   007568  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 43566   00756A  0A00               	xorlw	0	; case 0
 43567   00756C  B4D8               	btfsc	status,2,c
 43568   00756E  EFBB  F03A         	goto	l11690
 43569   007572  EFAB  F03A         	goto	l7250
 43570   007576                     l11690:
 43571                           
 43572                           ; Switch size 1, requested type "simple"
 43573                           ; Number of cases is 2, Range of values is 0 to 1
 43574                           ; switch strategies available:
 43575                           ; Name         Instructions Cycles
 43576                           ; simple_byte            7     4 (average)
 43577                           ;	Chosen strategy is simple_byte
 43578   007576  500A               	movf	??_readNVM^(0+1280),w,c
 43579   007578  0A00               	xorlw	0	; case 0
 43580   00757A  B4D8               	btfsc	status,2,c
 43581   00757C  EF90  F03A         	goto	l7242
 43582   007580  0A01               	xorlw	1	; case 1
 43583   007582  B4D8               	btfsc	status,2,c
 43584   007584  EF9D  F03A         	goto	l7246
 43585   007588  EFAB  F03A         	goto	l7250
 43586   00758C                     l1715:
 43587   00758C  0012               	return		;funcret
 43588   00758E                     __end_of_readNVM:
 43589                           	callstack 0
 43590                           
 43591 ;; *************** function _FLASH_Read *****************
 43592 ;; Defined at:
 43593 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 43594 ;; Parameters:    Size  Location     Type
 43595 ;;  address         3    0[COMRAM] unsigned um
 43596 ;; Auto vars:     Size  Location     Type
 43597 ;;		None
 43598 ;; Return value:  Size  Location     Type
 43599 ;;                  1    wreg      unsigned char 
 43600 ;; Registers used:
 43601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43602 ;; Tracked objects:
 43603 ;;		On entry : 0/0
 43604 ;;		On exit  : 0/0
 43605 ;;		Unchanged: 0/0
 43606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43607 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43609 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43611 ;;Total ram usage:        6 bytes
 43612 ;; Hardware stack levels used: 1
 43613 ;; Hardware stack levels required when called: 1
 43614 ;; This function calls:
 43615 ;;		Nothing
 43616 ;; This function is called by:
 43617 ;;		_readNVM
 43618 ;; This function uses a non-reentrant model
 43619 ;;
 43620                           
 43621                           	psect	text139
 43622   0073B8                     __ptext139:
 43623                           	callstack 0
 43624   0073B8                     _FLASH_Read:
 43625                           	callstack 124
 43626   0073B8                     
 43627                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 43628   0073B8  0E00               	movlw	0
 43629   0073BA  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43630   0073BC  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43631   0073BE  0EFF               	movlw	255
 43632   0073C0  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43633   0073C2  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43634   0073C4  0EFF               	movlw	255
 43635   0073C6  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 43636   0073C8  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 43637   0073CA  0105               	movlb	5	; () banked
 43638   0073CC  5184               	movf	_flashBlock& (0+255),w,b
 43639   0073CE  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 43640   0073D0  E10A               	bnz	u4421
 43641   0073D2  5185               	movf	(_flashBlock+1)& (0+255),w,b
 43642   0073D4  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 43643   0073D6  E107               	bnz	u4421
 43644   0073D8  5186               	movf	(_flashBlock+2)& (0+255),w,b
 43645   0073DA  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 43646   0073DC  A4D8               	btfss	status,2,c
 43647   0073DE  EFF3  F039         	goto	u4421
 43648   0073E2  EFF5  F039         	goto	u4420
 43649   0073E6                     u4421:
 43650   0073E6  EF04  F03A         	goto	l1656
 43651   0073EA                     u4420:
 43652   0073EA                     
 43653                           ; BSR set to: 5
 43654                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 43655   0073EA  0EFF               	movlw	255
 43656   0073EC  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43657   0073EE  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43658   0073F0  0E00               	movlw	0
 43659   0073F2  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43660   0073F4  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43661   0073F6  0E00               	movlw	0
 43662   0073F8  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 43663   0073FA  6ED9               	movwf	fsr2l,c
 43664   0073FC  0E37               	movlw	55
 43665   0073FE  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 43666   007400  6EDA               	movwf	fsr2h,c
 43667   007402  50DF               	movf	indf2,w,c
 43668   007404  EF17  F03A         	goto	l1657
 43669   007408                     l1656:
 43670                           
 43671                           ; BSR set to: 5
 43672                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 43673   007408  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 43674   00740C                     
 43675                           ; BSR set to: 5
 43676                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 43677   00740C  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 43678   007410  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 43679   007414  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 43680   007418  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 43681   00741C  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 43682   007420  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 43683   007422  5004               	movf	??_FLASH_Read^(0+1280),w,c
 43684   007424  6EF7               	movwf	247,c	;volatile
 43685   007426                     
 43686                           ; BSR set to: 5
 43687                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 43688   007426  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 43689   00742A  0008               	tblrd		*	;# 
 43690                           
 43691                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 43692   00742C  50F5               	movf	245,w,c	;volatile
 43693   00742E                     l1657:
 43694   00742E  0012               	return		;funcret
 43695   007430                     __end_of_FLASH_Read:
 43696                           	callstack 0
 43697                           
 43698 ;; *************** function _EEPROM_Read *****************
 43699 ;; Defined at:
 43700 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 43701 ;; Parameters:    Size  Location     Type
 43702 ;;  index           3    0[COMRAM] unsigned um
 43703 ;; Auto vars:     Size  Location     Type
 43704 ;;		None
 43705 ;; Return value:  Size  Location     Type
 43706 ;;                  1    wreg      unsigned char 
 43707 ;; Registers used:
 43708 ;;		wreg, status,2
 43709 ;; Tracked objects:
 43710 ;;		On entry : 0/0
 43711 ;;		On exit  : 0/0
 43712 ;;		Unchanged: 0/0
 43713 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43718 ;;Total ram usage:        6 bytes
 43719 ;; Hardware stack levels used: 1
 43720 ;; Hardware stack levels required when called: 1
 43721 ;; This function calls:
 43722 ;;		Nothing
 43723 ;; This function is called by:
 43724 ;;		_EEPROM_Write
 43725 ;;		_readNVM
 43726 ;; This function uses a non-reentrant model
 43727 ;;
 43728                           
 43729                           	psect	text140
 43730   007B28                     __ptext140:
 43731                           	callstack 0
 43732   007B28                     _EEPROM_Read:
 43733                           	callstack 124
 43734   007B28                     l1634:
 43735                           
 43736                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 43737   007B28  0100               	movlb	0	; () banked
 43738   007B2A  B140               	btfsc	64,0,b	;volatile
 43739   007B2C  EF9A  F03D         	goto	u4401
 43740   007B30  EF9C  F03D         	goto	u4400
 43741   007B34                     u4401:
 43742   007B34  EF94  F03D         	goto	l1634
 43743   007B38                     u4400:
 43744   007B38                     
 43745                           ; BSR set to: 0
 43746                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 43747   007B38  0E38               	movlw	56
 43748   007B3A  6F45               	movwf	69,b	;volatile
 43749                           
 43750                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 43751   007B3C  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 43752   007B40  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 43753   007B44  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 43754   007B48  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 43755   007B4C  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 43756   007B50  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 43757   007B52  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 43758   007B54  6F44               	movwf	68,b	;volatile
 43759   007B56                     
 43760                           ; BSR set to: 0
 43761                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 43762   007B56  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 43763                           
 43764                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 43765   007B5A  0EF8               	movlw	-8
 43766   007B5C  1741               	andwf	65,f,b	;volsfr
 43767   007B5E                     
 43768                           ; BSR set to: 0
 43769                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 43770   007B5E  8140               	bsf	64,0,b	;volatile
 43771   007B60                     l1637:
 43772                           
 43773                           ; BSR set to: 0
 43774                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 43775   007B60  B140               	btfsc	64,0,b	;volatile
 43776   007B62  EFB5  F03D         	goto	u4411
 43777   007B66  EFB7  F03D         	goto	u4410
 43778   007B6A                     u4411:
 43779   007B6A  EFB0  F03D         	goto	l1637
 43780   007B6E                     u4410:
 43781   007B6E                     
 43782                           ; BSR set to: 0
 43783                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 43784   007B6E  0E07               	movlw	7
 43785   007B70  1341               	iorwf	65,f,b	;volsfr
 43786                           
 43787                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 43788   007B72  5146               	movf	70,w,b	;volatile
 43789   007B74                     
 43790                           ; BSR set to: 0
 43791   007B74  0012               	return		;funcret
 43792   007B76                     __end_of_EEPROM_Read:
 43793                           	callstack 0
 43794                           
 43795 ;; *************** function _APP_testMode *****************
 43796 ;; Defined at:
 43797 ;;		line 138 in file "../main.c"
 43798 ;; Parameters:    Size  Location     Type
 43799 ;;		None
 43800 ;; Auto vars:     Size  Location     Type
 43801 ;;  i               1   16[COMRAM] unsigned char 
 43802 ;;  step            1   15[COMRAM] unsigned char 
 43803 ;;  c               1   14[COMRAM] unsigned char 
 43804 ;; Return value:  Size  Location     Type
 43805 ;;                  1    wreg      void 
 43806 ;; Registers used:
 43807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43808 ;; Tracked objects:
 43809 ;;		On entry : 0/0
 43810 ;;		On exit  : 0/0
 43811 ;;		Unchanged: 0/0
 43812 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43817 ;;Total ram usage:        7 bytes
 43818 ;; Hardware stack levels used: 1
 43819 ;; Hardware stack levels required when called: 2
 43820 ;; This function calls:
 43821 ;;		_initARGB
 43822 ;;		_tickGet
 43823 ;;		_updateLedRange
 43824 ;; This function is called by:
 43825 ;;		_checkPowerOnPb
 43826 ;; This function uses a non-reentrant model
 43827 ;;
 43828                           
 43829                           	psect	text141
 43830   003F9E                     __ptext141:
 43831                           	callstack 0
 43832   003F9E                     _APP_testMode:
 43833                           	callstack 123
 43834   003F9E                     
 43835                           ;../main.c: 139:     uint8_t step;;../main.c: 140:     uint8_t i,c;;../main.c: 142:     
      +                          initARGB();
 43836   003F9E  ECF1  F023         	call	_initARGB	;wreg free
 43837   003FA2                     
 43838                           ;../main.c: 143:     ANSELA = 0x00;
 43839   003FA2  0104               	movlb	4	; () banked
 43840   003FA4  6B00               	clrf	0,b	;volatile
 43841   003FA6                     
 43842                           ; BSR set to: 4
 43843                           ;../main.c: 144:     ANSELB = 0x00;
 43844   003FA6  6B08               	clrf	8,b	;volatile
 43845   003FA8                     
 43846                           ; BSR set to: 4
 43847                           ;../main.c: 145:     ANSELC = 0x00;
 43848   003FA8  6B10               	clrf	16,b	;volatile
 43849   003FAA                     
 43850                           ; BSR set to: 4
 43851                           ;../main.c: 148:     (INTCON0bits.GIE = 1);
 43852   003FAA  8ED6               	bsf	214,7,c	;volatile
 43853   003FAC                     
 43854                           ; BSR set to: 4
 43855                           ;../main.c: 150:     testTime.val = tickGet();
 43856   003FAC  EC18  F03A         	call	_tickGet	;wreg free
 43857   003FB0  C501  F57C         	movff	?_tickGet,_testTime
 43858   003FB4  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43859   003FB8  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43860   003FBC  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43861   003FC0                     
 43862                           ;../main.c: 152:     step = 0;
 43863   003FC0  6A10               	clrf	APP_testMode@step^(0+1280),c
 43864   003FC2                     l9254:
 43865                           
 43866                           ;../main.c: 154:         if ((tickGet() - testTime.val) > (4 * 62500)) {
 43867   003FC2  EC18  F03A         	call	_tickGet	;wreg free
 43868   003FC6  0105               	movlb	5	; () banked
 43869   003FC8  517C               	movf	_testTime& (0+255),w,b
 43870   003FCA  5C01               	subwf	?_tickGet^(0+1280),w,c
 43871   003FCC  6E0B               	movwf	??_APP_testMode^(0+1280),c
 43872   003FCE  517D               	movf	(_testTime+1)& (0+255),w,b
 43873   003FD0  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 43874   003FD2  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 43875   003FD4  517E               	movf	(_testTime+2)& (0+255),w,b
 43876   003FD6  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 43877   003FD8  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 43878   003FDA  517F               	movf	(_testTime+3)& (0+255),w,b
 43879   003FDC  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 43880   003FDE  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 43881   003FE0  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 43882   003FE2  E10D               	bnz	u6610
 43883   003FE4  0E91               	movlw	145
 43884   003FE6  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 43885   003FE8  0ED0               	movlw	208
 43886   003FEA  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 43887   003FEC  0E03               	movlw	3
 43888   003FEE  580D               	subwfb	(??_APP_testMode+2)^(0+1280),w,c
 43889   003FF0  A0D8               	btfss	status,0,c
 43890   003FF2  EFFD  F01F         	goto	u6611
 43891   003FF6  EFFF  F01F         	goto	u6610
 43892   003FFA                     u6611:
 43893   003FFA  EFE4  F020         	goto	l9304
 43894   003FFE                     u6610:
 43895   003FFE                     
 43896                           ; BSR set to: 5
 43897                           ;../main.c: 155:             testTime.val = tickGet();
 43898   003FFE  EC18  F03A         	call	_tickGet	;wreg free
 43899   004002  C501  F57C         	movff	?_tickGet,_testTime
 43900   004006  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43901   00400A  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43902   00400E  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43903   004012                     
 43904                           ;../main.c: 156:             step++;
 43905   004012  2A10               	incf	APP_testMode@step^(0+1280),f,c
 43906   004014                     
 43907                           ;../main.c: 157:             if (step >= 6) step = 0;
 43908   004014  0E05               	movlw	5
 43909   004016  6410               	cpfsgt	APP_testMode@step^(0+1280),c
 43910   004018  EF10  F020         	goto	u6621
 43911   00401C  EF12  F020         	goto	u6620
 43912   004020                     u6621:
 43913   004020  EFC9  F020         	goto	l9302
 43914   004024                     u6620:
 43915   004024  6A10               	clrf	APP_testMode@step^(0+1280),c
 43916   004026  EFC9  F020         	goto	l9302
 43917   00402A                     l9264:
 43918                           
 43919                           ;../main.c: 161:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x99));
 43920   00402A  0EFE               	movlw	254
 43921   00402C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43922   00402E  0E99               	movlw	153
 43923   004030  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43924   004032  0E00               	movlw	0
 43925   004034  EC6F  F03E         	call	_updateLedRange
 43926                           
 43927                           ;../main.c: 162:                     break;
 43928   004038  EFE4  F020         	goto	l9304
 43929   00403C                     l9266:
 43930                           
 43931                           ;../main.c: 164:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xAA));
 43932   00403C  0EFE               	movlw	254
 43933   00403E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43934   004040  0EAA               	movlw	170
 43935   004042  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43936   004044  0E00               	movlw	0
 43937   004046  EC6F  F03E         	call	_updateLedRange
 43938                           
 43939                           ;../main.c: 165:                     break;
 43940   00404A  EFE4  F020         	goto	l9304
 43941   00404E                     l9268:
 43942                           
 43943                           ;../main.c: 167:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xBB));
 43944   00404E  0EFE               	movlw	254
 43945   004050  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43946   004052  0EBB               	movlw	187
 43947   004054  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43948   004056  0E00               	movlw	0
 43949   004058  EC6F  F03E         	call	_updateLedRange
 43950                           
 43951                           ;../main.c: 168:                     break;
 43952   00405C  EFE4  F020         	goto	l9304
 43953   004060                     l9270:
 43954                           
 43955                           ;../main.c: 170:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 43956   004060  0EFE               	movlw	254
 43957   004062  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43958   004064  0E00               	movlw	0
 43959   004066  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43960   004068  0E00               	movlw	0
 43961   00406A  EC6F  F03E         	call	_updateLedRange
 43962   00406E                     
 43963                           ;../main.c: 171:                     for (i=0,c=1; i<255; i++) {
 43964   00406E  6A11               	clrf	APP_testMode@i^(0+1280),c
 43965   004070  0E01               	movlw	1
 43966   004072  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43967   004074                     l9280:
 43968                           
 43969                           ;../main.c: 172:                         ledPaletteIndexes[i].asByte = c;
 43970   004074  0E00               	movlw	low _ledPaletteIndexes
 43971   004076  2411               	addwf	APP_testMode@i^(0+1280),w,c
 43972   004078  6ED9               	movwf	fsr2l,c
 43973   00407A  6ADA               	clrf	fsr2h,c
 43974   00407C  0E07               	movlw	high _ledPaletteIndexes
 43975   00407E  22DA               	addwfc	fsr2h,f,c
 43976   004080  C50F  F4DF         	movff	APP_testMode@c,indf2
 43977   004084                     
 43978                           ;../main.c: 173:                         c++;
 43979   004084  2A0F               	incf	APP_testMode@c^(0+1280),f,c
 43980   004086                     
 43981                           ;../main.c: 174:                         if (c >= 0x10) c=1;
 43982   004086  0E0F               	movlw	15
 43983   004088  640F               	cpfsgt	APP_testMode@c^(0+1280),c
 43984   00408A  EF49  F020         	goto	u6631
 43985   00408E  EF4B  F020         	goto	u6630
 43986   004092                     u6631:
 43987   004092  EF4D  F020         	goto	l9288
 43988   004096                     u6630:
 43989   004096  0E01               	movlw	1
 43990   004098  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43991   00409A                     l9288:
 43992                           
 43993                           ;../main.c: 175:                     }
 43994   00409A  2A11               	incf	APP_testMode@i^(0+1280),f,c
 43995   00409C  2811               	incf	APP_testMode@i^(0+1280),w,c
 43996   00409E  A4D8               	btfss	status,2,c
 43997   0040A0  EF54  F020         	goto	u6641
 43998   0040A4  EF56  F020         	goto	u6640
 43999   0040A8                     u6641:
 44000   0040A8  EF3A  F020         	goto	l9280
 44001   0040AC                     u6640:
 44002   0040AC  EFE4  F020         	goto	l9304
 44003   0040B0                     l9292:
 44004                           
 44005                           ;../main.c: 178:                     updateLedRange(0, 19, (PaletteIndex)((uint8_t)0x0F)
      +                          );
 44006   0040B0  0E13               	movlw	19
 44007   0040B2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44008   0040B4  0E0F               	movlw	15
 44009   0040B6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44010   0040B8  0E00               	movlw	0
 44011   0040BA  EC6F  F03E         	call	_updateLedRange
 44012                           
 44013                           ;../main.c: 179:                     updateLedRange(20, 39, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 44014   0040BE  0E27               	movlw	39
 44015   0040C0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44016   0040C2  0EF0               	movlw	240
 44017   0040C4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44018   0040C6  0E14               	movlw	20
 44019   0040C8  EC6F  F03E         	call	_updateLedRange
 44020                           
 44021                           ;../main.c: 180:                     updateLedRange(40, 59, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 44022   0040CC  0E3B               	movlw	59
 44023   0040CE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44024   0040D0  0E0F               	movlw	15
 44025   0040D2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44026   0040D4  0E28               	movlw	40
 44027   0040D6  EC6F  F03E         	call	_updateLedRange
 44028                           
 44029                           ;../main.c: 181:                     updateLedRange(60, 79, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 44030   0040DA  0E4F               	movlw	79
 44031   0040DC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44032   0040DE  0EF0               	movlw	240
 44033   0040E0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44034   0040E2  0E3C               	movlw	60
 44035   0040E4  EC6F  F03E         	call	_updateLedRange
 44036                           
 44037                           ;../main.c: 182:                     updateLedRange(80, 99, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 44038   0040E8  0E63               	movlw	99
 44039   0040EA  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44040   0040EC  0E0F               	movlw	15
 44041   0040EE  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44042   0040F0  0E50               	movlw	80
 44043   0040F2  EC6F  F03E         	call	_updateLedRange
 44044                           
 44045                           ;../main.c: 183:                     updateLedRange(100, 119, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44046   0040F6  0E77               	movlw	119
 44047   0040F8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44048   0040FA  0EF0               	movlw	240
 44049   0040FC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44050   0040FE  0E64               	movlw	100
 44051   004100  EC6F  F03E         	call	_updateLedRange
 44052                           
 44053                           ;../main.c: 184:                     updateLedRange(120, 139, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44054   004104  0E8B               	movlw	139
 44055   004106  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44056   004108  0E0F               	movlw	15
 44057   00410A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44058   00410C  0E78               	movlw	120
 44059   00410E  EC6F  F03E         	call	_updateLedRange
 44060                           
 44061                           ;../main.c: 185:                     updateLedRange(140, 159, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44062   004112  0E9F               	movlw	159
 44063   004114  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44064   004116  0EF0               	movlw	240
 44065   004118  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44066   00411A  0E8C               	movlw	140
 44067   00411C  EC6F  F03E         	call	_updateLedRange
 44068                           
 44069                           ;../main.c: 186:                     updateLedRange(160, 179, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44070   004120  0EB3               	movlw	179
 44071   004122  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44072   004124  0E0F               	movlw	15
 44073   004126  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44074   004128  0EA0               	movlw	160
 44075   00412A  EC6F  F03E         	call	_updateLedRange
 44076                           
 44077                           ;../main.c: 187:                     updateLedRange(180, 199, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44078   00412E  0EC7               	movlw	199
 44079   004130  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44080   004132  0EF0               	movlw	240
 44081   004134  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44082   004136  0EB4               	movlw	180
 44083   004138  EC6F  F03E         	call	_updateLedRange
 44084                           
 44085                           ;../main.c: 188:                     updateLedRange(200, 219, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44086   00413C  0EDB               	movlw	219
 44087   00413E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44088   004140  0E0F               	movlw	15
 44089   004142  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44090   004144  0EC8               	movlw	200
 44091   004146  EC6F  F03E         	call	_updateLedRange
 44092                           
 44093                           ;../main.c: 189:                     updateLedRange(220, 239, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44094   00414A  0EEF               	movlw	239
 44095   00414C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44096   00414E  0EF0               	movlw	240
 44097   004150  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44098   004152  0EDC               	movlw	220
 44099   004154  EC6F  F03E         	call	_updateLedRange
 44100                           
 44101                           ;../main.c: 190:                     updateLedRange(240, 255 -1, (PaletteIndex)((uint8_t
      +                          )0x0F));
 44102   004158  0EFE               	movlw	254
 44103   00415A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44104   00415C  0E0F               	movlw	15
 44105   00415E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44106   004160  0EF0               	movlw	240
 44107   004162  EC6F  F03E         	call	_updateLedRange
 44108                           
 44109                           ;../main.c: 191:                     break;
 44110   004166  EFE4  F020         	goto	l9304
 44111   00416A                     l9294:
 44112                           
 44113                           ;../main.c: 193:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 44114   00416A  0EFE               	movlw	254
 44115   00416C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44116   00416E  0E00               	movlw	0
 44117   004170  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44118   004172  0E00               	movlw	0
 44119   004174  EC6F  F03E         	call	_updateLedRange
 44120   004178                     
 44121                           ;../main.c: 194:                     i=0;
 44122   004178  6A11               	clrf	APP_testMode@i^(0+1280),c
 44123   00417A                     
 44124                           ;../main.c: 195:                     subtestTime.val = tickGet();
 44125   00417A  EC18  F03A         	call	_tickGet	;wreg free
 44126   00417E  C501  F578         	movff	?_tickGet,_subtestTime
 44127   004182  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44128   004186  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44129   00418A  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44130                           
 44131                           ;../main.c: 196:                     break;
 44132   00418E  EFE4  F020         	goto	l9304
 44133   004192                     l9302:
 44134   004192  5010               	movf	APP_testMode@step^(0+1280),w,c
 44135                           
 44136                           ; Switch size 1, requested type "simple"
 44137                           ; Number of cases is 6, Range of values is 0 to 5
 44138                           ; switch strategies available:
 44139                           ; Name         Instructions Cycles
 44140                           ; simple_byte           19    10 (average)
 44141                           ;	Chosen strategy is simple_byte
 44142   004194  0A00               	xorlw	0	; case 0
 44143   004196  B4D8               	btfsc	status,2,c
 44144   004198  EF15  F020         	goto	l9264
 44145   00419C  0A01               	xorlw	1	; case 1
 44146   00419E  B4D8               	btfsc	status,2,c
 44147   0041A0  EF1E  F020         	goto	l9266
 44148   0041A4  0A03               	xorlw	3	; case 2
 44149   0041A6  B4D8               	btfsc	status,2,c
 44150   0041A8  EF27  F020         	goto	l9268
 44151   0041AC  0A01               	xorlw	1	; case 3
 44152   0041AE  B4D8               	btfsc	status,2,c
 44153   0041B0  EF30  F020         	goto	l9270
 44154   0041B4  0A07               	xorlw	7	; case 4
 44155   0041B6  B4D8               	btfsc	status,2,c
 44156   0041B8  EF58  F020         	goto	l9292
 44157   0041BC  0A01               	xorlw	1	; case 5
 44158   0041BE  B4D8               	btfsc	status,2,c
 44159   0041C0  EFB5  F020         	goto	l9294
 44160   0041C4  EFE4  F020         	goto	l9304
 44161   0041C8                     l9304:
 44162                           
 44163                           ;../main.c: 199:         if (step == 5) {
 44164   0041C8  0E05               	movlw	5
 44165   0041CA  1810               	xorwf	APP_testMode@step^(0+1280),w,c
 44166   0041CC  A4D8               	btfss	status,2,c
 44167   0041CE  EFEB  F020         	goto	u6651
 44168   0041D2  EFED  F020         	goto	u6650
 44169   0041D6                     u6651:
 44170   0041D6  EFE1  F01F         	goto	l9254
 44171   0041DA                     u6650:
 44172   0041DA                     
 44173                           ;../main.c: 200:             if ((tickGet() - subtestTime.val) > (62500/10)) {
 44174   0041DA  EC18  F03A         	call	_tickGet	;wreg free
 44175   0041DE  0105               	movlb	5	; () banked
 44176   0041E0  5178               	movf	_subtestTime& (0+255),w,b
 44177   0041E2  5C01               	subwf	?_tickGet^(0+1280),w,c
 44178   0041E4  6E0B               	movwf	??_APP_testMode^(0+1280),c
 44179   0041E6  5179               	movf	(_subtestTime+1)& (0+255),w,b
 44180   0041E8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 44181   0041EA  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 44182   0041EC  517A               	movf	(_subtestTime+2)& (0+255),w,b
 44183   0041EE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 44184   0041F0  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 44185   0041F2  517B               	movf	(_subtestTime+3)& (0+255),w,b
 44186   0041F4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 44187   0041F6  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 44188   0041F8  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 44189   0041FA  100D               	iorwf	(??_APP_testMode+2)^(0+1280),w,c
 44190   0041FC  E10B               	bnz	u6660
 44191   0041FE  0E6B               	movlw	107
 44192   004200  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 44193   004202  0E18               	movlw	24
 44194   004204  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 44195   004206  A0D8               	btfss	status,0,c
 44196   004208  EF08  F021         	goto	u6661
 44197   00420C  EF0A  F021         	goto	u6660
 44198   004210                     u6661:
 44199   004210  EFE1  F01F         	goto	l9254
 44200   004214                     u6660:
 44201   004214                     
 44202                           ; BSR set to: 5
 44203                           ;../main.c: 201:                 subtestTime.val = tickGet();
 44204   004214  EC18  F03A         	call	_tickGet	;wreg free
 44205   004218  C501  F578         	movff	?_tickGet,_subtestTime
 44206   00421C  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44207   004220  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44208   004224  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44209   004228                     
 44210                           ;../main.c: 202:                 updateLedRange(i,i, (PaletteIndex)((uint8_t)0xFF));
 44211   004228  C511  F501         	movff	APP_testMode@i,updateLedRange@end_ledno
 44212   00422C  0EFF               	movlw	255
 44213   00422E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44214   004230  5011               	movf	APP_testMode@i^(0+1280),w,c
 44215   004232  EC6F  F03E         	call	_updateLedRange
 44216   004236                     
 44217                           ;../main.c: 203:                 i++;
 44218   004236  2A11               	incf	APP_testMode@i^(0+1280),f,c
 44219   004238  EFE1  F01F         	goto	l9254
 44220   00423C  0012               	return		;funcret
 44221   00423E                     __end_of_APP_testMode:
 44222                           	callstack 0
 44223                           
 44224 ;; *************** function _updateLedRange *****************
 44225 ;; Defined at:
 44226 ;;		line 262 in file "../canargb_leds.c"
 44227 ;; Parameters:    Size  Location     Type
 44228 ;;  start_ledno     1    wreg     unsigned char 
 44229 ;;  end_ledno       1    0[COMRAM] unsigned char 
 44230 ;;  colourIndexP    1    1[COMRAM] struct PaletteIndex
 44231 ;; Auto vars:     Size  Location     Type
 44232 ;;  start_ledno     1    2[COMRAM] unsigned char 
 44233 ;;  ledno           1    3[COMRAM] unsigned char 
 44234 ;; Return value:  Size  Location     Type
 44235 ;;                  1    wreg      void 
 44236 ;; Registers used:
 44237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44238 ;; Tracked objects:
 44239 ;;		On entry : 0/0
 44240 ;;		On exit  : 0/0
 44241 ;;		Unchanged: 0/0
 44242 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44247 ;;Total ram usage:        4 bytes
 44248 ;; Hardware stack levels used: 1
 44249 ;; Hardware stack levels required when called: 1
 44250 ;; This function calls:
 44251 ;;		Nothing
 44252 ;; This function is called by:
 44253 ;;		_APP_testMode
 44254 ;;		_setup
 44255 ;;		_APP_processConsumedEvent
 44256 ;; This function uses a non-reentrant model
 44257 ;;
 44258                           
 44259                           	psect	text142
 44260   007CDE                     __ptext142:
 44261                           	callstack 0
 44262   007CDE                     _updateLedRange:
 44263                           	callstack 124
 44264                           
 44265                           ;incstack = 0
 44266                           ;updateLedRange@start_ledno stored from wreg
 44267   007CDE  6E03               	movwf	updateLedRange@start_ledno^(0+1280),c
 44268   007CE0                     
 44269                           ;../canargb_leds.c: 263:     uint8_t ledno;;../canargb_leds.c: 264:     if (end_ledno >=
      +                           255) end_ledno = 255 -1;
 44270   007CE0  2801               	incf	updateLedRange@end_ledno^(0+1280),w,c
 44271   007CE2  A4D8               	btfss	status,2,c
 44272   007CE4  EF76  F03E         	goto	u5381
 44273   007CE8  EF78  F03E         	goto	u5380
 44274   007CEC                     u5381:
 44275   007CEC  EF7A  F03E         	goto	l7968
 44276   007CF0                     u5380:
 44277   007CF0  0EFE               	movlw	254
 44278   007CF2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44279   007CF4                     l7968:
 44280                           
 44281                           ;../canargb_leds.c: 266:     for(ledno=start_ledno; ledno<=end_ledno; ledno++) {
 44282   007CF4  C503  F504         	movff	updateLedRange@start_ledno,updateLedRange@ledno
 44283   007CF8  EF87  F03E         	goto	l7974
 44284   007CFC                     l7970:
 44285                           
 44286                           ;../canargb_leds.c: 267:         ledPaletteIndexes[ledno] = colourIndexPair;
 44287   007CFC  0E00               	movlw	low _ledPaletteIndexes
 44288   007CFE  2404               	addwf	updateLedRange@ledno^(0+1280),w,c
 44289   007D00  6ED9               	movwf	fsr2l,c
 44290   007D02  6ADA               	clrf	fsr2h,c
 44291   007D04  0E07               	movlw	high _ledPaletteIndexes
 44292   007D06  22DA               	addwfc	fsr2h,f,c
 44293   007D08  C502  F4DF         	movff	updateLedRange@colourIndexPair,indf2
 44294   007D0C                     
 44295                           ;../canargb_leds.c: 268:     }
 44296   007D0C  2A04               	incf	updateLedRange@ledno^(0+1280),f,c
 44297   007D0E                     l7974:
 44298   007D0E  5004               	movf	updateLedRange@ledno^(0+1280),w,c
 44299   007D10  5C01               	subwf	updateLedRange@end_ledno^(0+1280),w,c
 44300   007D12  B0D8               	btfsc	status,0,c
 44301   007D14  EF8E  F03E         	goto	u5391
 44302   007D18  EF90  F03E         	goto	u5390
 44303   007D1C                     u5391:
 44304   007D1C  EF7E  F03E         	goto	l7970
 44305   007D20                     u5390:
 44306   007D20  0012               	return		;funcret
 44307   007D22                     __end_of_updateLedRange:
 44308                           	callstack 0
 44309                           
 44310 ;; *************** function _tickGet *****************
 44311 ;; Defined at:
 44312 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44313 ;; Parameters:    Size  Location     Type
 44314 ;;		None
 44315 ;; Auto vars:     Size  Location     Type
 44316 ;;  currentTime     4    6[COMRAM] struct _TickValue
 44317 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 44318 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 44319 ;; Return value:  Size  Location     Type
 44320 ;;                  4    0[COMRAM] unsigned long 
 44321 ;; Registers used:
 44322 ;;		wreg, status,2, status,0
 44323 ;; Tracked objects:
 44324 ;;		On entry : 0/0
 44325 ;;		On exit  : 0/0
 44326 ;;		Unchanged: 0/0
 44327 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44331 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44332 ;;Total ram usage:       10 bytes
 44333 ;; Hardware stack levels used: 1
 44334 ;; Hardware stack levels required when called: 1
 44335 ;; This function calls:
 44336 ;;		Nothing
 44337 ;; This function is called by:
 44338 ;;		_APP_testMode
 44339 ;;		_setup
 44340 ;;		_loop
 44341 ;;		_canPowerUp
 44342 ;;		_startEnumeration
 44343 ;;		_handleSelfEnumeration
 44344 ;;		_processEnumeration
 44345 ;;		_mnsPowerUp
 44346 ;;		_mnsPoll
 44347 ;;		_leds_powerUp
 44348 ;;		_leds_poll
 44349 ;;		_pbDownTimer
 44350 ;;		_pbUpTimer
 44351 ;;		_poll
 44352 ;; This function uses a non-reentrant model
 44353 ;;
 44354                           
 44355                           	psect	text143
 44356   007430                     __ptext143:
 44357                           	callstack 0
 44358   007430                     _tickGet:
 44359                           	callstack 124
 44360   007430                     
 44361                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44362   007430  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 44363                           
 44364                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44365   007432  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 44366                           
 44367                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 44368   007434  9EA1               	bcf	1185,7,c	;volatile
 44369   007436                     l7212:
 44370                           
 44371                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 44372   007436  0E00               	movlw	0
 44373   007438  BEB1               	btfsc	1201,7,c	;volatile
 44374   00743A  0E01               	movlw	1
 44375   00743C  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 44376   00743E                     
 44377                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44378   00743E  C318 F507          	movff	792,tickGet@currentTime	;volatile
 44379   007442                     
 44380                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44381   007442  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 44382                           
 44383                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 44384   007446  0E00               	movlw	0
 44385   007448  BEB1               	btfsc	1201,7,c	;volatile
 44386   00744A  0E01               	movlw	1
 44387   00744C  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 44388   00744E                     
 44389                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44390   00744E  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 44391   007450  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 44392   007452  A4D8               	btfss	status,2,c
 44393   007454  EF2E  F03A         	goto	u4471
 44394   007458  EF30  F03A         	goto	u4470
 44395   00745C                     u4471:
 44396   00745C  EF1B  F03A         	goto	l7212
 44397   007460                     u4470:
 44398   007460                     
 44399                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44400   007460  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 44401   007462  B4D8               	btfsc	status,2,c
 44402   007464  EF36  F03A         	goto	u4481
 44403   007468  EF38  F03A         	goto	u4480
 44404   00746C                     u4481:
 44405   00746C  EF44  F03A         	goto	l7230
 44406   007470                     u4480:
 44407   007470                     
 44408                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 44409   007470  9EB1               	bcf	1201,7,c	;volatile
 44410   007472                     
 44411                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44412   007472  0105               	movlb	5	; () banked
 44413   007474  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 44414   007476                     
 44415                           ; BSR set to: 5
 44416                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44417   007476  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44418   007478  A4D8               	btfss	status,2,c
 44419   00747A  EF41  F03A         	goto	u4491
 44420   00747E  EF43  F03A         	goto	u4490
 44421   007482                     u4491:
 44422   007482  EF44  F03A         	goto	l7230
 44423   007486                     u4490:
 44424   007486                     
 44425                           ; BSR set to: 5
 44426                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44427   007486  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 44428   007488                     l7230:
 44429                           
 44430                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44431   007488  0105               	movlb	5	; () banked
 44432   00748A  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44433   00748C  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 44434   00748E                     
 44435                           ; BSR set to: 5
 44436                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44437   00748E  5199               	movf	_timerExtension2& (0+255),w,b	;volatile
 44438   007490  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 44439   007492                     
 44440                           ; BSR set to: 5
 44441                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 44442   007492  8EA1               	bsf	1185,7,c	;volatile
 44443   007494                     
 44444                           ; BSR set to: 5
 44445                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44446   007494  C507  F501         	movff	tickGet@currentTime,?_tickGet
 44447   007498  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 44448   00749C  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 44449   0074A0  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 44450   0074A4                     
 44451                           ; BSR set to: 5
 44452   0074A4  0012               	return		;funcret
 44453   0074A6                     __end_of_tickGet:
 44454                           	callstack 0
 44455                           
 44456 ;; *************** function _initARGB *****************
 44457 ;; Defined at:
 44458 ;;		line 60 in file "../canargb_leds.c"
 44459 ;; Parameters:    Size  Location     Type
 44460 ;;		None
 44461 ;; Auto vars:     Size  Location     Type
 44462 ;;  ledno           1    0[COMRAM] unsigned char 
 44463 ;; Return value:  Size  Location     Type
 44464 ;;                  1    wreg      void 
 44465 ;; Registers used:
 44466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44467 ;; Tracked objects:
 44468 ;;		On entry : 0/0
 44469 ;;		On exit  : 0/0
 44470 ;;		Unchanged: 0/0
 44471 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44476 ;;Total ram usage:        1 bytes
 44477 ;; Hardware stack levels used: 1
 44478 ;; Hardware stack levels required when called: 1
 44479 ;; This function calls:
 44480 ;;		Nothing
 44481 ;; This function is called by:
 44482 ;;		_APP_testMode
 44483 ;;		_setup
 44484 ;; This function uses a non-reentrant model
 44485 ;;
 44486                           
 44487                           	psect	text144
 44488   0047E2                     __ptext144:
 44489                           	callstack 0
 44490   0047E2                     _initARGB:
 44491                           	callstack 124
 44492   0047E2                     
 44493                           ;../canargb_leds.c: 61:     uint8_t ledno;;../canargb_leds.c: 63:     flashState = 0;
 44494   0047E2  0105               	movlb	5	; () banked
 44495   0047E4  6BAC               	clrf	_flashState& (0+255),b
 44496                           
 44497                           ;../canargb_leds.c: 65:     for (ledno=0; ledno <255; ledno++) {
 44498   0047E6  6A01               	clrf	initARGB@ledno^(0+1280),c
 44499   0047E8                     l8390:
 44500                           
 44501                           ;../canargb_leds.c: 66:         leds[ledno].r = 0;
 44502   0047E8  5001               	movf	initARGB@ledno^(0+1280),w,c
 44503   0047EA  0D03               	mullw	3
 44504   0047EC  0E7C               	movlw	low _leds
 44505   0047EE  24F3               	addwf	243,w,c
 44506   0047F0  6ED9               	movwf	fsr2l,c
 44507   0047F2  0E0B               	movlw	high _leds
 44508   0047F4  20F4               	addwfc	prodh,w,c
 44509   0047F6  6EDA               	movwf	fsr2h,c
 44510   0047F8  6ADF               	clrf	indf2,c
 44511                           
 44512                           ;../canargb_leds.c: 67:         leds[ledno].g = 0;
 44513   0047FA  5001               	movf	initARGB@ledno^(0+1280),w,c
 44514   0047FC  0D03               	mullw	3
 44515   0047FE  0E7D               	movlw	low (_leds+1)
 44516   004800  24F3               	addwf	243,w,c
 44517   004802  6ED9               	movwf	fsr2l,c
 44518   004804  0E0B               	movlw	high (_leds+1)
 44519   004806  20F4               	addwfc	prodh,w,c
 44520   004808  6EDA               	movwf	fsr2h,c
 44521   00480A  6ADF               	clrf	indf2,c
 44522                           
 44523                           ;../canargb_leds.c: 68:         leds[ledno].b = 0;
 44524   00480C  5001               	movf	initARGB@ledno^(0+1280),w,c
 44525   00480E  0D03               	mullw	3
 44526   004810  0E7E               	movlw	low (_leds+2)
 44527   004812  24F3               	addwf	243,w,c
 44528   004814  6ED9               	movwf	fsr2l,c
 44529   004816  0E0B               	movlw	high (_leds+2)
 44530   004818  20F4               	addwfc	prodh,w,c
 44531   00481A  6EDA               	movwf	fsr2h,c
 44532   00481C  6ADF               	clrf	indf2,c
 44533   00481E                     
 44534                           ;../canargb_leds.c: 69:         ledPaletteIndexes[ledno].asNibbles.flashOnPaletteIndex =
      +                           0;
 44535   00481E  0E00               	movlw	low _ledPaletteIndexes
 44536   004820  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44537   004822  6ED9               	movwf	fsr2l,c
 44538   004824  6ADA               	clrf	fsr2h,c
 44539   004826  0E07               	movlw	high _ledPaletteIndexes
 44540   004828  22DA               	addwfc	fsr2h,f,c
 44541   00482A  0EF0               	movlw	-16
 44542   00482C  16DF               	andwf	223,f,c
 44543   00482E                     
 44544                           ;../canargb_leds.c: 70:         ledPaletteIndexes[ledno].asNibbles.flashOffPaletteIndex 
      +                          = 0;
 44545   00482E  0E00               	movlw	low _ledPaletteIndexes
 44546   004830  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44547   004832  6ED9               	movwf	fsr2l,c
 44548   004834  6ADA               	clrf	fsr2h,c
 44549   004836  0E07               	movlw	high _ledPaletteIndexes
 44550   004838  22DA               	addwfc	fsr2h,f,c
 44551   00483A  0E0F               	movlw	-241
 44552   00483C  16DF               	andwf	223,f,c
 44553   00483E                     
 44554                           ;../canargb_leds.c: 71:     }
 44555   00483E  2A01               	incf	initARGB@ledno^(0+1280),f,c
 44556   004840  2801               	incf	initARGB@ledno^(0+1280),w,c
 44557   004842  A4D8               	btfss	status,2,c
 44558   004844  EF26  F024         	goto	u5721
 44559   004848  EF28  F024         	goto	u5720
 44560   00484C                     u5721:
 44561   00484C  EFF4  F023         	goto	l8390
 44562   004850                     u5720:
 44563   004850                     
 44564                           ;../canargb_leds.c: 106:     TRISC = 0;
 44565   004850  6AC8               	clrf	200,c	;volatile
 44566   004852                     
 44567                           ;../canargb_leds.c: 107:     RC0PPS = 0x43;
 44568   004852  0E43               	movlw	67
 44569   004854  0102               	movlb	2	; () banked
 44570   004856  6F11               	movwf	17,b	;volatile
 44571                           
 44572                           ;../canargb_leds.c: 108:     RC1PPS = 0x32;
 44573   004858  0E32               	movlw	50
 44574   00485A  6F12               	movwf	18,b	;volatile
 44575                           
 44576                           ;../canargb_leds.c: 109:     RC2PPS = 0x31;
 44577   00485C  0E31               	movlw	49
 44578   00485E  6F13               	movwf	19,b	;volatile
 44579                           
 44580                           ;../canargb_leds.c: 110:     RC3PPS = 0x01;
 44581   004860  0E01               	movlw	1
 44582   004862  6F14               	movwf	20,b	;volatile
 44583                           
 44584                           ;../canargb_leds.c: 111:     RC4PPS = 0x02;
 44585   004864  0E02               	movlw	2
 44586   004866  6F15               	movwf	21,b	;volatile
 44587                           
 44588                           ;../canargb_leds.c: 112:     RC5PPS = 0x04;
 44589   004868  0E04               	movlw	4
 44590   00486A  6F16               	movwf	22,b	;volatile
 44591   00486C                     
 44592                           ; BSR set to: 2
 44593                           ;../canargb_leds.c: 113:     RC6PPS = 0x00;
 44594   00486C  6B17               	clrf	23,b	;volatile
 44595   00486E                     
 44596                           ; BSR set to: 2
 44597                           ;../canargb_leds.c: 116:     {;../canargb_leds.c: 117:         SPI1CON0bits.LSBF=0;
 44598   00486E  0100               	movlb	0	; () banked
 44599   004870  9584               	bcf	132,2,b	;volatile
 44600   004872                     
 44601                           ; BSR set to: 0
 44602                           ;../canargb_leds.c: 118:         SPI1CON0bits.BMODE=1;
 44603   004872  8184               	bsf	132,0,b	;volatile
 44604   004874                     
 44605                           ; BSR set to: 0
 44606                           ;../canargb_leds.c: 119:         SPI1CON0bits.MST=1;
 44607   004874  8384               	bsf	132,1,b	;volatile
 44608                           
 44609                           ;../canargb_leds.c: 121:         SPI1TWIDTHbits.TWIDTH=0;
 44610   004876  0EF8               	movlw	-8
 44611   004878  1788               	andwf	136,f,b	;volatile
 44612                           
 44613                           ;../canargb_leds.c: 122:         SPI1TCNT=0;
 44614   00487A  0E00               	movlw	0
 44615   00487C  6F83               	movwf	131,b	;volatile
 44616   00487E  0E00               	movlw	0
 44617   004880  6F82               	movwf	130,b	;volatile
 44618   004882                     
 44619                           ; BSR set to: 0
 44620                           ;../canargb_leds.c: 124:         SPI1CON1bits.SMP=0;
 44621   004882  9F85               	bcf	133,7,b	;volatile
 44622   004884                     
 44623                           ; BSR set to: 0
 44624                           ;../canargb_leds.c: 125:         SPI1CON1bits.CKE=1;
 44625   004884  8D85               	bsf	133,6,b	;volatile
 44626   004886                     
 44627                           ; BSR set to: 0
 44628                           ;../canargb_leds.c: 126:         SPI1CON1bits.CKP=0;
 44629   004886  9B85               	bcf	133,5,b	;volatile
 44630   004888                     
 44631                           ; BSR set to: 0
 44632                           ;../canargb_leds.c: 127:         SPI1CON1bits.SDIP=1;
 44633   004888  8385               	bsf	133,1,b	;volatile
 44634   00488A                     
 44635                           ; BSR set to: 0
 44636                           ;../canargb_leds.c: 129:         SPI1CON2bits.SSET=0;
 44637   00488A  9586               	bcf	134,2,b	;volatile
 44638   00488C                     
 44639                           ; BSR set to: 0
 44640                           ;../canargb_leds.c: 130:         SPI1CON1bits.SSP=1;
 44641   00488C  8585               	bsf	133,2,b	;volatile
 44642   00488E                     
 44643                           ; BSR set to: 0
 44644                           ;../canargb_leds.c: 131:         SPI1CON2bits.TXR=1;
 44645   00488E  8386               	bsf	134,1,b	;volatile
 44646   004890                     
 44647                           ; BSR set to: 0
 44648                           ;../canargb_leds.c: 132:         SPI1CON2bits.RXR=0;
 44649   004890  9186               	bcf	134,0,b	;volatile
 44650   004892                     
 44651                           ; BSR set to: 0
 44652                           ;../canargb_leds.c: 134:         SPI1CLKbits.CLKSEL=0b00000;
 44653   004892  6B8C               	clrf	140,b	;volatile
 44654                           
 44655                           ;../canargb_leds.c: 138:         SPI1BAUDbits.BAUD = 39;
 44656   004894  0E27               	movlw	39
 44657   004896  6F89               	movwf	137,b	;volatile
 44658   004898                     
 44659                           ; BSR set to: 0
 44660                           ;../canargb_leds.c: 140:         SPI1INTF=0;
 44661   004898  6B8A               	clrf	138,b	;volatile
 44662   00489A                     
 44663                           ; BSR set to: 0
 44664                           ;../canargb_leds.c: 141:         SPI1CON0bits.EN=1;
 44665   00489A  8F84               	bsf	132,7,b	;volatile
 44666   00489C                     
 44667                           ; BSR set to: 0
 44668                           ;../canargb_leds.c: 142:     };../canargb_leds.c: 145:     {;../canargb_leds.c: 146:    
      +                               CLCSELECT = 0;
 44669   00489C  6BD5               	clrf	213,b	;volatile
 44670                           
 44671                           ;../canargb_leds.c: 147:         CLCnCON = 0x82;
 44672   00489E  0E82               	movlw	130
 44673   0048A0  6FD6               	movwf	214,b	;volatile
 44674                           
 44675                           ;../canargb_leds.c: 148:         CLCnPOL = 0x0E;
 44676   0048A2  0E0E               	movlw	14
 44677   0048A4  6FD7               	movwf	215,b	;volatile
 44678                           
 44679                           ;../canargb_leds.c: 149:         CLCnSEL0 = 0x41;
 44680   0048A6  0E41               	movlw	65
 44681   0048A8  6FD8               	movwf	216,b	;volatile
 44682                           
 44683                           ;../canargb_leds.c: 150:         CLCnSEL1 = 0x41;
 44684   0048AA  0E41               	movlw	65
 44685   0048AC  6FD9               	movwf	217,b	;volatile
 44686                           
 44687                           ;../canargb_leds.c: 151:         CLCnSEL2 = 0x41;
 44688   0048AE  0E41               	movlw	65
 44689   0048B0  6FDA               	movwf	218,b	;volatile
 44690                           
 44691                           ;../canargb_leds.c: 152:         CLCnSEL3 = 0x41;
 44692   0048B2  0E41               	movlw	65
 44693   0048B4  6FDB               	movwf	219,b	;volatile
 44694                           
 44695                           ;../canargb_leds.c: 153:         CLCnGLS0 = 1;
 44696   0048B6  0E01               	movlw	1
 44697   0048B8  6FDC               	movwf	220,b	;volatile
 44698   0048BA                     
 44699                           ; BSR set to: 0
 44700                           ;../canargb_leds.c: 154:         CLCnGLS1 = 0;
 44701   0048BA  6BDD               	clrf	221,b	;volatile
 44702   0048BC                     
 44703                           ; BSR set to: 0
 44704                           ;../canargb_leds.c: 155:         CLCnGLS2 = 0;
 44705   0048BC  6BDE               	clrf	222,b	;volatile
 44706   0048BE                     
 44707                           ; BSR set to: 0
 44708                           ;../canargb_leds.c: 156:         CLCnGLS3 = 0;
 44709   0048BE  6BDF               	clrf	223,b	;volatile
 44710   0048C0                     
 44711                           ; BSR set to: 0
 44712                           ;../canargb_leds.c: 157:     };../canargb_leds.c: 160:     {;../canargb_leds.c: 161:    
      +                               T2CON = 0x0;
 44713   0048C0  0103               	movlb	3	; () banked
 44714   0048C2  6B24               	clrf	36,b	;volatile
 44715                           
 44716                           ;../canargb_leds.c: 162:         T2CLKCON = 0x02;
 44717   0048C4  0E02               	movlw	2
 44718   0048C6  6F26               	movwf	38,b	;volatile
 44719                           
 44720                           ;../canargb_leds.c: 163:         T2HLT = 0x11;
 44721   0048C8  0E11               	movlw	17
 44722   0048CA  6F25               	movwf	37,b	;volatile
 44723                           
 44724                           ;../canargb_leds.c: 164:         T2RST = 0x12;
 44725   0048CC  0E12               	movlw	18
 44726   0048CE  6F27               	movwf	39,b	;volatile
 44727                           
 44728                           ;../canargb_leds.c: 168:         T2PR = 51;
 44729   0048D0  0E33               	movlw	51
 44730   0048D2  6F23               	movwf	35,b	;volatile
 44731   0048D4                     
 44732                           ; BSR set to: 3
 44733                           ;../canargb_leds.c: 170:     };../canargb_leds.c: 173:     {;../canargb_leds.c: 174:    
      +                               T4CON = 0x0;
 44734   0048D4  6B30               	clrf	48,b	;volatile
 44735                           
 44736                           ;../canargb_leds.c: 175:         T4CLKCON = 0x02;
 44737   0048D6  0E02               	movlw	2
 44738   0048D8  6F32               	movwf	50,b	;volatile
 44739                           
 44740                           ;../canargb_leds.c: 176:         T4HLT = 0x11;
 44741   0048DA  0E11               	movlw	17
 44742   0048DC  6F31               	movwf	49,b	;volatile
 44743                           
 44744                           ;../canargb_leds.c: 177:         T4RST = 0x12;
 44745   0048DE  0E12               	movlw	18
 44746   0048E0  6F33               	movwf	51,b	;volatile
 44747                           
 44748                           ;../canargb_leds.c: 181:         T4PR = 29;
 44749   0048E2  0E1D               	movlw	29
 44750   0048E4  6F2F               	movwf	47,b	;volatile
 44751                           
 44752                           ;../canargb_leds.c: 183:     };../canargb_leds.c: 187:     {;../canargb_leds.c: 188:    
      +                               CLCSELECT = 1;
 44753   0048E6  0E01               	movlw	1
 44754   0048E8  0100               	movlb	0	; () banked
 44755   0048EA  6FD5               	movwf	213,b	;volatile
 44756                           
 44757                           ;../canargb_leds.c: 189:         CLCnCON = 0x82;
 44758   0048EC  0E82               	movlw	130
 44759   0048EE  6FD6               	movwf	214,b	;volatile
 44760                           
 44761                           ;../canargb_leds.c: 190:         CLCnPOL = 0x8E;
 44762   0048F0  0E8E               	movlw	142
 44763   0048F2  6FD7               	movwf	215,b	;volatile
 44764                           
 44765                           ;../canargb_leds.c: 191:         CLCnSEL0 = 0x14;
 44766   0048F4  0E14               	movlw	20
 44767   0048F6  6FD8               	movwf	216,b	;volatile
 44768                           
 44769                           ;../canargb_leds.c: 192:         CLCnSEL1 = 0x14;
 44770   0048F8  0E14               	movlw	20
 44771   0048FA  6FD9               	movwf	217,b	;volatile
 44772                           
 44773                           ;../canargb_leds.c: 193:         CLCnSEL2 = 0x14;
 44774   0048FC  0E14               	movlw	20
 44775   0048FE  6FDA               	movwf	218,b	;volatile
 44776                           
 44777                           ;../canargb_leds.c: 194:         CLCnSEL3 = 0x14;
 44778   004900  0E14               	movlw	20
 44779   004902  6FDB               	movwf	219,b	;volatile
 44780                           
 44781                           ;../canargb_leds.c: 195:         CLCnGLS0 = 0x01;
 44782   004904  0E01               	movlw	1
 44783   004906  6FDC               	movwf	220,b	;volatile
 44784   004908                     
 44785                           ; BSR set to: 0
 44786                           ;../canargb_leds.c: 196:         CLCnGLS1 = 0x00;
 44787   004908  6BDD               	clrf	221,b	;volatile
 44788   00490A                     
 44789                           ; BSR set to: 0
 44790                           ;../canargb_leds.c: 197:         CLCnGLS2 = 0x00;
 44791   00490A  6BDE               	clrf	222,b	;volatile
 44792   00490C                     
 44793                           ; BSR set to: 0
 44794                           ;../canargb_leds.c: 198:         CLCnGLS3 = 0x00;
 44795   00490C  6BDF               	clrf	223,b	;volatile
 44796                           
 44797                           ;../canargb_leds.c: 199:     };../canargb_leds.c: 203:     {;../canargb_leds.c: 204:    
      +                               CLCSELECT = 3;
 44798   00490E  0E03               	movlw	3
 44799   004910  6FD5               	movwf	213,b	;volatile
 44800                           
 44801                           ;../canargb_leds.c: 205:         CLCnCON = 0x82;
 44802   004912  0E82               	movlw	130
 44803   004914  6FD6               	movwf	214,b	;volatile
 44804                           
 44805                           ;../canargb_leds.c: 206:         CLCnPOL = 0x8E;
 44806   004916  0E8E               	movlw	142
 44807   004918  6FD7               	movwf	215,b	;volatile
 44808                           
 44809                           ;../canargb_leds.c: 207:         CLCnSEL0 = 0x16;
 44810   00491A  0E16               	movlw	22
 44811   00491C  6FD8               	movwf	216,b	;volatile
 44812                           
 44813                           ;../canargb_leds.c: 208:         CLCnSEL1 = 0x16;
 44814   00491E  0E16               	movlw	22
 44815   004920  6FD9               	movwf	217,b	;volatile
 44816                           
 44817                           ;../canargb_leds.c: 209:         CLCnSEL2 = 0x16;
 44818   004922  0E16               	movlw	22
 44819   004924  6FDA               	movwf	218,b	;volatile
 44820                           
 44821                           ;../canargb_leds.c: 210:         CLCnSEL3 = 0x16;
 44822   004926  0E16               	movlw	22
 44823   004928  6FDB               	movwf	219,b	;volatile
 44824                           
 44825                           ;../canargb_leds.c: 211:         CLCnGLS0 = 0x01;
 44826   00492A  0E01               	movlw	1
 44827   00492C  6FDC               	movwf	220,b	;volatile
 44828   00492E                     
 44829                           ; BSR set to: 0
 44830                           ;../canargb_leds.c: 212:         CLCnGLS1 = 0x00;
 44831   00492E  6BDD               	clrf	221,b	;volatile
 44832   004930                     
 44833                           ; BSR set to: 0
 44834                           ;../canargb_leds.c: 213:         CLCnGLS2 = 0x00;
 44835   004930  6BDE               	clrf	222,b	;volatile
 44836   004932                     
 44837                           ; BSR set to: 0
 44838                           ;../canargb_leds.c: 214:         CLCnGLS3 = 0x00;
 44839   004932  6BDF               	clrf	223,b	;volatile
 44840   004934                     
 44841                           ; BSR set to: 0
 44842                           ;../canargb_leds.c: 215:     };../canargb_leds.c: 218:     {;../canargb_leds.c: 219:    
      +                               MD1CON0 = 0;
 44843   004934  6B6A               	clrf	106,b	;volatile
 44844   004936                     
 44845                           ; BSR set to: 0
 44846                           ;../canargb_leds.c: 220:         MD1CON1 = 0x00;
 44847   004936  6B6B               	clrf	107,b	;volatile
 44848                           
 44849                           ;../canargb_leds.c: 221:         MD1CARH = 0x12;
 44850   004938  0E12               	movlw	18
 44851   00493A  6F6E               	movwf	110,b	;volatile
 44852                           
 44853                           ;../canargb_leds.c: 222:         MD1CARL = 0x10;
 44854   00493C  0E10               	movlw	16
 44855   00493E  6F6D               	movwf	109,b	;volatile
 44856                           
 44857                           ;../canargb_leds.c: 223:         MD1SRC = 0x1F;
 44858   004940  0E1F               	movlw	31
 44859   004942  6F6C               	movwf	108,b	;volatile
 44860   004944                     
 44861                           ; BSR set to: 0
 44862                           ;../canargb_leds.c: 224:     };../canargb_leds.c: 229:     {;../canargb_leds.c: 230:    
      +                               DMASELECT=0;
 44863   004944  6BE8               	clrf	232,b	;volatile
 44864                           
 44865                           ;../canargb_leds.c: 231:         DMAnCON1bits.DMODE=0;
 44866   004946  0E3F               	movlw	-193
 44867   004948  17FD               	andwf	253,f,b	;volatile
 44868                           
 44869                           ;../canargb_leds.c: 232:         DMAnCON1bits.SMR=0;
 44870   00494A  0EE7               	movlw	-25
 44871   00494C  17FD               	andwf	253,f,b	;volatile
 44872                           
 44873                           ;../canargb_leds.c: 233:         DMAnCON1bits.SMODE=1;
 44874   00494E  51FD               	movf	253,w,b	;volatile
 44875   004950  0BF9               	andlw	-7
 44876   004952  0902               	iorlw	2
 44877   004954  6FFD               	movwf	253,b	;volatile
 44878   004956                     
 44879                           ; BSR set to: 0
 44880                           ;../canargb_leds.c: 234:         DMAnCON1bits.SSTP=1;
 44881   004956  81FD               	bsf	253,0,b	;volatile
 44882                           
 44883                           ;../canargb_leds.c: 235:         DMAnSSZ=3*255;
 44884   004958  0E02               	movlw	2
 44885   00495A  6FF8               	movwf	248,b	;volatile
 44886   00495C  0EFD               	movlw	253
 44887   00495E  6FF7               	movwf	247,b	;volatile
 44888                           
 44889                           ;../canargb_leds.c: 236:         DMAnSSA=(__uint24)&leds;
 44890   004960  0E7C               	movlw	low _leds
 44891   004962  6FF9               	movwf	249,b	;volatile
 44892   004964  0E0B               	movlw	high _leds
 44893   004966  6FFA               	movwf	250,b	;volatile
 44894   004968  0E00               	movlw	low (_leds shr (0+16))
 44895   00496A  6FFB               	movwf	251,b	;volatile
 44896                           
 44897                           ;../canargb_leds.c: 237:         DMAnDSZ=3*255;
 44898   00496C  0E02               	movlw	2
 44899   00496E  6FEF               	movwf	239,b	;volatile
 44900   004970  0EFD               	movlw	253
 44901   004972  6FEE               	movwf	238,b	;volatile
 44902                           
 44903                           ;../canargb_leds.c: 238:         DMAnDSA=(uint16_t)&SPI1TXB;
 44904   004974  0E00               	movlw	0
 44905   004976  6FF1               	movwf	241,b	;volatile
 44906   004978  0E81               	movlw	129
 44907   00497A  6FF0               	movwf	240,b	;volatile
 44908                           
 44909                           ;../canargb_leds.c: 239:         DMAnSIRQ=0x19;
 44910   00497C  0E19               	movlw	25
 44911   00497E  6FFF               	movwf	255,b	;volatile
 44912   004980                     
 44913                           ; BSR set to: 0
 44914                           ;../canargb_leds.c: 240:         DMAnAIRQ=0;
 44915   004980  6BFE               	clrf	254,b	;volatile
 44916   004982                     
 44917                           ; BSR set to: 0
 44918                           ;../canargb_leds.c: 246:         DMAnCON0bits.SIRQEN = 0;
 44919   004982  9DFC               	bcf	252,6,b	;volatile
 44920   004984                     
 44921                           ; BSR set to: 0
 44922                           ;../canargb_leds.c: 247:         DMAnCON0bits.EN=1;
 44923   004984  8FFC               	bsf	252,7,b	;volatile
 44924   004986                     
 44925                           ; BSR set to: 0
 44926                           ;../canargb_leds.c: 248:     };../canargb_leds.c: 251:     T2CONbits.ON = 1;
 44927   004986  0103               	movlb	3	; () banked
 44928   004988  8F24               	bsf	36,7,b	;volatile
 44929   00498A                     
 44930                           ; BSR set to: 3
 44931                           ;../canargb_leds.c: 252:     T4CONbits.ON = 1;
 44932   00498A  8F30               	bsf	48,7,b	;volatile
 44933   00498C                     
 44934                           ; BSR set to: 3
 44935                           ;../canargb_leds.c: 253:     MD1CON0bits.EN = 1;
 44936   00498C  0100               	movlb	0	; () banked
 44937   00498E  8F6A               	bsf	106,7,b	;volatile
 44938                           
 44939                           ;../canargb_leds.c: 255:     refreshRequired = 1;
 44940   004990  0E01               	movlw	1
 44941   004992  0105               	movlb	5	; () banked
 44942   004994  6FAB               	movwf	_refreshRequired& (0+255),b
 44943   004996                     
 44944                           ; BSR set to: 5
 44945   004996  0012               	return		;funcret
 44946   004998                     __end_of_initARGB:
 44947                           	callstack 0
 44948                           
 44949 ;; *************** function _receiveOverrun *****************
 44950 ;; Defined at:
 44951 ;;		line 370 in file "../../VLCBlib_PIC/can18_can_2.c"
 44952 ;; Parameters:    Size  Location     Type
 44953 ;;		None
 44954 ;; Auto vars:     Size  Location     Type
 44955 ;;		None
 44956 ;; Return value:  Size  Location     Type
 44957 ;;                  1    wreg      void 
 44958 ;; Registers used:
 44959 ;;		status,2, status,0
 44960 ;; Tracked objects:
 44961 ;;		On entry : 0/0
 44962 ;;		On exit  : 0/0
 44963 ;;		Unchanged: 0/0
 44964 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44969 ;;Total ram usage:        0 bytes
 44970 ;; Hardware stack levels used: 1
 44971 ;; This function calls:
 44972 ;;		Nothing
 44973 ;; This function is called by:
 44974 ;;		Interrupt level 2
 44975 ;; This function uses a non-reentrant model
 44976 ;;
 44977                           
 44978                           	psect	text145
 44979   007EE4                     __ptext145:
 44980                           	callstack 0
 44981   007EE4                     _receiveOverrun:
 44982                           	callstack 115
 44983   007EE4                     
 44984                           ;../../VLCBlib_PIC/can18_can_2.c: 371:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 44985   007EE4  0101               	movlb	1	; () banked
 44986   007EE6  A778               	btfss	120,3,b	;volatile
 44987   007EE8  EF78  F03F         	goto	i2u861_41
 44988   007EEC  EF7A  F03F         	goto	i2u861_40
 44989   007EF0                     i2u861_41:
 44990   007EF0  EF7F  F03F         	goto	i2l11102
 44991   007EF4                     i2u861_40:
 44992   007EF4                     
 44993                           ; BSR set to: 1
 44994                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         canDiagnostics[0x08].asUint++;
 44995   007EF4  0106               	movlb	6	; () banked
 44996   007EF6  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44997   007EF8  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 44998   007EFA                     
 44999                           ; BSR set to: 6
 45000                           ;../../VLCBlib_PIC/can18_can_2.c: 375:         C1FIFOSTA3Lbits.RXOVIF = 0;
 45001   007EFA  0101               	movlb	1	; () banked
 45002   007EFC  9778               	bcf	120,3,b	;volatile
 45003   007EFE                     i2l11102:
 45004                           
 45005                           ; BSR set to: 1
 45006                           ;../../VLCBlib_PIC/can18_can_2.c: 377:     if (C1INTHbits.IVMIF == 1) {
 45007   007EFE  AF1D               	btfss	29,7,b	;volatile
 45008   007F00  EF84  F03F         	goto	i2u862_41
 45009   007F04  EF86  F03F         	goto	i2u862_40
 45010   007F08                     i2u862_41:
 45011   007F08  EF8B  F03F         	goto	i2l607
 45012   007F0C                     i2u862_40:
 45013   007F0C                     
 45014                           ; BSR set to: 1
 45015                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         canDiagnostics[0x01].asUint++;
 45016   007F0C  0106               	movlb	6	; () banked
 45017   007F0E  4B90               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45018   007F10  2B91               	incf	(_canDiagnostics+3)& (0+255),f,b
 45019   007F12                     
 45020                           ; BSR set to: 6
 45021                           ;../../VLCBlib_PIC/can18_can_2.c: 381:         C1INTHbits.IVMIF = 0;
 45022   007F12  0101               	movlb	1	; () banked
 45023   007F14  9F1D               	bcf	29,7,b	;volatile
 45024   007F16                     i2l607:
 45025                           
 45026                           ; BSR set to: 1
 45027   007F16  0011               	retfie		f
 45028   007F18                     __end_of_receiveOverrun:
 45029                           	callstack 0
 45030                           
 45031 ;; *************** function _TMR0_ISR *****************
 45032 ;; Defined at:
 45033 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 45034 ;; Parameters:    Size  Location     Type
 45035 ;;		None
 45036 ;; Auto vars:     Size  Location     Type
 45037 ;;		None
 45038 ;; Return value:  Size  Location     Type
 45039 ;;                  1    wreg      void 
 45040 ;; Registers used:
 45041 ;;		wreg, status,2, status,0
 45042 ;; Tracked objects:
 45043 ;;		On entry : 0/0
 45044 ;;		On exit  : 0/0
 45045 ;;		Unchanged: 0/0
 45046 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45051 ;;Total ram usage:        0 bytes
 45052 ;; Hardware stack levels used: 1
 45053 ;; This function calls:
 45054 ;;		Nothing
 45055 ;; This function is called by:
 45056 ;;		Interrupt level 2
 45057 ;; This function uses a non-reentrant model
 45058 ;;
 45059                           
 45060                           	psect	text146
 45061   008188                     __ptext146:
 45062                           	callstack 0
 45063   008188                     _TMR0_ISR:
 45064                           	callstack 115
 45065   008188                     
 45066                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 45067   008188  AEB1               	btfss	1201,7,c	;volatile
 45068   00818A  EFC9  F040         	goto	i2u863_41
 45069   00818E  EFCB  F040         	goto	i2u863_40
 45070   008192                     i2u863_41:
 45071   008192  EFD7  F040         	goto	i2l1846
 45072   008196                     i2u863_40:
 45073   008196                     
 45074                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 45075   008196  9EB1               	bcf	1201,7,c	;volatile
 45076   008198                     
 45077                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 45078   008198  0105               	movlb	5	; () banked
 45079   00819A  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 45080   00819C                     
 45081                           ; BSR set to: 5
 45082                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 45083   00819C  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 45084   00819E  A4D8               	btfss	status,2,c
 45085   0081A0  EFD4  F040         	goto	i2u864_41
 45086   0081A4  EFD6  F040         	goto	i2u864_40
 45087   0081A8                     i2u864_41:
 45088   0081A8  EFD7  F040         	goto	i2l1846
 45089   0081AC                     i2u864_40:
 45090   0081AC                     
 45091                           ; BSR set to: 5
 45092                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 45093   0081AC  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 45094   0081AE                     i2l1846:
 45095   0081AE  0011               	retfie		f
 45096   0081B0                     __end_of_TMR0_ISR:
 45097                           	callstack 0
 45098                           
 45099 ;; *************** function _DEFAULT_ISR *****************
 45100 ;; Defined at:
 45101 ;;		line 1369 in file "../../VLCBlib_PIC/vlcb.c"
 45102 ;; Parameters:    Size  Location     Type
 45103 ;;		None
 45104 ;; Auto vars:     Size  Location     Type
 45105 ;;		None
 45106 ;; Return value:  Size  Location     Type
 45107 ;;                  1    wreg      void 
 45108 ;; Registers used:
 45109 ;;		None
 45110 ;; Tracked objects:
 45111 ;;		On entry : 0/0
 45112 ;;		On exit  : 0/0
 45113 ;;		Unchanged: 0/0
 45114 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45119 ;;Total ram usage:        0 bytes
 45120 ;; Hardware stack levels used: 1
 45121 ;; This function calls:
 45122 ;;		Nothing
 45123 ;; This function is called by:
 45124 ;;		Interrupt level 2
 45125 ;; This function uses a non-reentrant model
 45126 ;;
 45127                           
 45128                           	psect	text147
 45129   00837C                     __ptext147:
 45130                           	callstack 0
 45131   00837C                     _DEFAULT_ISR:
 45132                           	callstack 115
 45133   00837C  0011               	retfie		f
 45134   00837E                     __end_of_DEFAULT_ISR:
 45135                           	callstack 0
 45136                           
 45137                           ;
 45138                           ; H/W Interrupt Vector Table @ 0x900
 45139                           ;
 45140                           
 45141                           	psect	ivt0x900
 45142   000900                     __pivt0x900:
 45143                           	callstack 0
 45144   000900                     ivt0x900_base:
 45145                           	callstack 0
 45146                           
 45147                           ; Vector 0 : SWINT
 45148   000900  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45149                           
 45150                           ; Vector 1 : HLVD
 45151   000902  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45152                           
 45153                           ; Vector 2 : OSF
 45154   000904  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45155                           
 45156                           ; Vector 3 : CSW
 45157   000906  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45158                           
 45159                           ; Vector 4 : TU16A
 45160   000908  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45161                           
 45162                           ; Vector 5 : CLC1
 45163   00090A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45164                           
 45165                           ; Vector 6 : CAN
 45166   00090C  1FB9               	dw	_receiveOverrun shr (0+2)
 45167                           
 45168                           ; Vector 7 : IOC
 45169   00090E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45170                           
 45171                           ; Vector 8 : INT0
 45172   000910  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45173                           
 45174                           ; Vector 9 : ZCD
 45175   000912  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45176                           
 45177                           ; Vector 10 : AD
 45178   000914  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45179                           
 45180                           ; Vector 11 : ACT
 45181   000916  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45182                           
 45183                           ; Vector 12 : CM1
 45184   000918  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45185                           
 45186                           ; Vector 13 : SMT1
 45187   00091A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45188                           
 45189                           ; Vector 14 : SMT1PRA
 45190   00091C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45191                           
 45192                           ; Vector 15 : SMT1PWA
 45193   00091E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45194                           
 45195                           ; Vector 16 : ADCH1
 45196   000920  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45197                           
 45198                           ; Vector 17 : ADCH2
 45199   000922  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45200                           
 45201                           ; Vector 18 : ADCH3
 45202   000924  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45203                           
 45204                           ; Vector 19 : ADCH4
 45205   000926  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45206                           
 45207                           ; Vector 20 : DMA1SCNT
 45208   000928  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45209                           
 45210                           ; Vector 21 : DMA1DCNT
 45211   00092A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45212                           
 45213                           ; Vector 22 : DMA1OR
 45214   00092C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45215                           
 45216                           ; Vector 23 : DMA1A
 45217   00092E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45218                           
 45219                           ; Vector 24 : SPI1RX
 45220   000930  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45221                           
 45222                           ; Vector 25 : SPI1TX
 45223   000932  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45224                           
 45225                           ; Vector 26 : SPI1
 45226   000934  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45227                           
 45228                           ; Vector 27 : TMR2
 45229   000936  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45230                           
 45231                           ; Vector 28 : TMR1
 45232   000938  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45233                           
 45234                           ; Vector 29 : TMR1G
 45235   00093A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45236                           
 45237                           ; Vector 30 : CCP1
 45238   00093C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45239                           
 45240                           ; Vector 31 : TMR0
 45241   00093E  2062               	dw	_TMR0_ISR shr (0+2)
 45242                           
 45243                           ; Vector 32 : U1RX
 45244   000940  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45245                           
 45246                           ; Vector 33 : U1TX
 45247   000942  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45248                           
 45249                           ; Vector 34 : U1E
 45250   000944  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45251                           
 45252                           ; Vector 35 : U1
 45253   000946  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45254                           
 45255                           ; Vector 36 : CANRX
 45256   000948  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45257                           
 45258                           ; Vector 37 : CANTX
 45259   00094A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45260                           
 45261                           ; Vector 38 : PWM1PR
 45262   00094C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45263                           
 45264                           ; Vector 39 : PWM1
 45265   00094E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45266                           
 45267                           ; Vector 40 : SPI2RX
 45268   000950  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45269                           
 45270                           ; Vector 41 : SPI2TX
 45271   000952  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45272                           
 45273                           ; Vector 42 : SPI2
 45274   000954  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45275                           
 45276                           ; Vector 43 : TU16B
 45277   000956  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45278                           
 45279                           ; Vector 44 : TMR3
 45280   000958  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45281                           
 45282                           ; Vector 45 : TMR3G
 45283   00095A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45284                           
 45285                           ; Vector 46 : PWM2PR
 45286   00095C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45287                           
 45288                           ; Vector 47 : PWM2
 45289   00095E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45290                           
 45291                           ; Vector 48 : INT1
 45292   000960  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45293                           
 45294                           ; Vector 49 : CLC2
 45295   000962  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45296                           
 45297                           ; Vector 50 : CWG1
 45298   000964  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45299                           
 45300                           ; Vector 51 : NCO1
 45301   000966  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45302                           
 45303                           ; Vector 52 : DMA2SCNT
 45304   000968  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45305                           
 45306                           ; Vector 53 : DMA2DCNT
 45307   00096A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45308                           
 45309                           ; Vector 54 : DMA2OR
 45310   00096C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45311                           
 45312                           ; Vector 55 : DMA2A
 45313   00096E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45314                           
 45315                           ; Vector 56 : I2C1RX
 45316   000970  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45317                           
 45318                           ; Vector 57 : I2C1TX
 45319   000972  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45320                           
 45321                           ; Vector 58 : I2C1
 45322   000974  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45323                           
 45324                           ; Vector 59 : I2C1E
 45325   000976  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45326                           
 45327                           ; Vector 60 : Undefined
 45328   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 45329                           
 45330                           ; Vector 61 : CLC3
 45331   00097A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45332                           
 45333                           ; Vector 62 : PWM3PR
 45334   00097C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45335                           
 45336                           ; Vector 63 : PWM3
 45337   00097E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45338                           
 45339                           ; Vector 64 : U2RX
 45340   000980  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45341                           
 45342                           ; Vector 65 : U2TX
 45343   000982  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45344                           
 45345                           ; Vector 66 : U2E
 45346   000984  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45347                           
 45348                           ; Vector 67 : U2
 45349   000986  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45350                           
 45351                           ; Vector 68 : TMR5
 45352   000988  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45353                           
 45354                           ; Vector 69 : TMR5G
 45355   00098A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45356                           
 45357                           ; Vector 70 : CCP2
 45358   00098C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45359                           
 45360                           ; Vector 71 : SCAN
 45361   00098E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45362                           
 45363                           ; Vector 72 : U3RX
 45364   000990  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45365                           
 45366                           ; Vector 73 : U3TX
 45367   000992  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45368                           
 45369                           ; Vector 74 : U3E
 45370   000994  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45371                           
 45372                           ; Vector 75 : U3
 45373   000996  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45374                           
 45375                           ; Vector 76 : Undefined
 45376   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 45377                           
 45378                           ; Vector 77 : CLC4
 45379   00099A  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45380                           
 45381                           ; Vector 78 : PWM4PR
 45382   00099C  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45383                           
 45384                           ; Vector 79 : PWM4
 45385   00099E  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45386                           
 45387                           ; Vector 80 : INT2
 45388   0009A0  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45389                           
 45390                           ; Vector 81 : CLC5
 45391   0009A2  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45392                           
 45393                           ; Vector 82 : CWG2
 45394   0009A4  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45395                           
 45396                           ; Vector 83 : NCO2
 45397   0009A6  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45398                           
 45399                           ; Vector 84 : DMA3SCNT
 45400   0009A8  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45401                           
 45402                           ; Vector 85 : DMA3DCNT
 45403   0009AA  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45404                           
 45405                           ; Vector 86 : DMA3OR
 45406   0009AC  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45407                           
 45408                           ; Vector 87 : DMA3A
 45409   0009AE  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45410                           
 45411                           ; Vector 88 : CCP3
 45412   0009B0  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45413                           
 45414                           ; Vector 89 : CLC6
 45415   0009B2  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45416                           
 45417                           ; Vector 90 : CWG3
 45418   0009B4  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45419                           
 45420                           ; Vector 91 : TMR4
 45421   0009B6  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45422                           
 45423                           ; Vector 92 : DMA4SCNT
 45424   0009B8  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45425                           
 45426                           ; Vector 93 : DMA4DCNT
 45427   0009BA  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45428                           
 45429                           ; Vector 94 : DMA4OR
 45430   0009BC  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45431                           
 45432                           ; Vector 95 : DMA4A
 45433   0009BE  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45434                           
 45435                           ; Vector 96 : U4RX
 45436   0009C0  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45437                           
 45438                           ; Vector 97 : U4TX
 45439   0009C2  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45440                           
 45441                           ; Vector 98 : U4E
 45442   0009C4  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45443                           
 45444                           ; Vector 99 : U4
 45445   0009C6  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45446                           
 45447                           ; Vector 100 : DMA5SCNT
 45448   0009C8  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45449                           
 45450                           ; Vector 101 : DMA5DCNT
 45451   0009CA  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45452                           
 45453                           ; Vector 102 : DMA5OR
 45454   0009CC  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45455                           
 45456                           ; Vector 103 : DMA5A
 45457   0009CE  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45458                           
 45459                           ; Vector 104 : U5RX
 45460   0009D0  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45461                           
 45462                           ; Vector 105 : U5TX
 45463   0009D2  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45464                           
 45465                           ; Vector 106 : U5E
 45466   0009D4  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45467                           
 45468                           ; Vector 107 : U5
 45469   0009D6  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45470                           
 45471                           ; Vector 108 : DMA6SCNT
 45472   0009D8  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45473                           
 45474                           ; Vector 109 : DMA6DCNT
 45475   0009DA  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45476                           
 45477                           ; Vector 110 : DMA6OR
 45478   0009DC  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45479                           
 45480                           ; Vector 111 : DMA6A
 45481   0009DE  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45482                           
 45483                           ; Vector 112 : Undefined
 45484   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 45485                           
 45486                           ; Vector 113 : CLC7
 45487   0009E2  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45488                           
 45489                           ; Vector 114 : CM2
 45490   0009E4  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45491                           
 45492                           ; Vector 115 : NCO3
 45493   0009E6  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45494                           
 45495                           ; Vector 116 : DMA7SCNT
 45496   0009E8  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45497                           
 45498                           ; Vector 117 : DMA7DCNT
 45499   0009EA  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45500                           
 45501                           ; Vector 118 : DMA7OR
 45502   0009EC  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45503                           
 45504                           ; Vector 119 : DMA7A
 45505   0009EE  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45506                           
 45507                           ; Vector 120 : NVM
 45508   0009F0  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45509                           
 45510                           ; Vector 121 : CLC8
 45511   0009F2  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45512                           
 45513                           ; Vector 122 : CRC
 45514   0009F4  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45515                           
 45516                           ; Vector 123 : TMR6
 45517   0009F6  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45518                           
 45519                           ; Vector 124 : DMA8SCNT
 45520   0009F8  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45521                           
 45522                           ; Vector 125 : DMA8DCNT
 45523   0009FA  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45524                           
 45525                           ; Vector 126 : DMA8OR
 45526   0009FC  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45527                           
 45528                           ; Vector 127 : DMA8A
 45529   0009FE  20DF               	dw	_DEFAULT_ISR shr (0+2)
 45530   000A00                     ivt0x900_undefint:
 45531                           	callstack 0
 45532   000A00  00FF               	reset	
 45533                           
 45534                           	psect	rparam
 45535   000001                     ___rparam_used  equ	1
 45536   000000                     ___param_bank   equ	0
 45537   000000                     __Lparam        equ	__Lrparam
 45538   000000                     __Hparam        equ	__Hrparam
 45539                           
 45540                           	psect	config
 45541                           
 45542                           ;Config register CONFIG1 @ 0x300000
 45543                           ;	External Oscillator Selection
 45544                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 45545                           ;	Reset Oscillator Selection
 45546                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 45547   300000                     	org	3145728
 45548   300000  FA                 	db	250
 45549                           
 45550                           ;Config register CONFIG2 @ 0x300001
 45551                           ;	Clock out Enable bit
 45552                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 45553                           ;	PRLOCKED One-Way Set Enable bit
 45554                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 45555                           ;	Clock Switch Enable bit
 45556                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 45557                           ;	JTAG Enable bit
 45558                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 45559                           ;	Fail-Safe Clock Monitor Enable bit
 45560                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 45561                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 45562                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 45563                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 45564                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 45565   300001                     	org	3145729
 45566   300001  EF                 	db	239
 45567                           
 45568                           ;Config register CONFIG3 @ 0x300002
 45569                           ;	MCLR Enable bit
 45570                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 45571                           ;	Power-up timer selection bits
 45572                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 45573                           ;	Multi-vector enable bit
 45574                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 45575                           ;	IVTLOCK bit One-way set enable bit
 45576                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 45577                           ;	Low Power BOR Enable bit
 45578                           ;	LPBOREN = OFF, Low-Power BOR disabled
 45579                           ;	Brown-out Reset Enable bits
 45580                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 45581   300002                     	org	3145730
 45582   300002  FD                 	db	253
 45583                           
 45584                           ;Config register CONFIG4 @ 0x300003
 45585                           ;	Brown-out Reset Voltage Selection bits
 45586                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 45587                           ;	ZCD Disable bit
 45588                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 45589                           ;	PPSLOCK bit One-Way Set Enable bit
 45590                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 45591                           ;	Stack Full/Underflow Reset Enable bit
 45592                           ;	STVREN = ON, Stack full/underflow will cause Reset
 45593                           ;	Low Voltage Programming Enable bit
 45594                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 45595                           ;	Extended Instruction Set Enable bit
 45596                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 45597   300003                     	org	3145731
 45598   300003  FD                 	db	253
 45599                           
 45600                           ;Config register CONFIG5 @ 0x300004
 45601                           ;	WDT Period selection bits
 45602                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 45603                           ;	WDT operating mode
 45604                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 45605   300004                     	org	3145732
 45606   300004  9F                 	db	159
 45607                           
 45608                           ;Config register CONFIG6 @ 0x300005
 45609                           ;	WDT Window Select bits
 45610                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 45611                           ;	WDT input clock selector
 45612                           ;	WDTCCS = SC, Software Control
 45613   300005                     	org	3145733
 45614   300005  FF                 	db	255
 45615                           
 45616                           ;Config register CONFIG7 @ 0x300006
 45617                           ;	Boot Block Size selection bits
 45618                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 45619                           ;	Boot Block enable bit
 45620                           ;	BBEN = ON, Boot block enabled
 45621                           ;	Storage Area Flash enable bit
 45622                           ;	SAFEN = OFF, SAF disabled
 45623                           ;	Background Debugger
 45624                           ;	DEBUG = 0x1, unprogrammed default
 45625   300006                     	org	3145734
 45626   300006  F7                 	db	247
 45627                           
 45628                           ;Config register CONFIG8 @ 0x300007
 45629                           ;	Boot Block Write Protection bit
 45630                           ;	WRTB = ON, Boot Block Write protected
 45631                           ;	Configuration Register Write Protection bit
 45632                           ;	WRTC = ON, Configuration registers Write protected
 45633                           ;	Data EEPROM Write Protection bit
 45634                           ;	WRTD = OFF, Data EEPROM not Write protected
 45635                           ;	SAF Write protection bit
 45636                           ;	WRTSAF = OFF, SAF not Write Protected
 45637                           ;	Application Block write protection bit
 45638                           ;	WRTAPP = OFF, Application Block not write protected
 45639   300007                     	org	3145735
 45640   300007  FC                 	db	252
 45641                           
 45642                           ;Config register CONFIG9 @ 0x300008
 45643                           ;	CRC on boot output pin selection
 45644                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 45645                           ;	CRC on boot output pin enable bit
 45646                           ;	BPEN = OFF, CRC on boot output pin disabled
 45647                           ;	CRC on boot output pin open drain bit
 45648                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 45649   300008                     	org	3145736
 45650   300008  FF                 	db	255
 45651                           
 45652                           ;Config register CONFIG10 @ 0x300009
 45653                           ;	PFM and Data EEPROM Code Protection bit
 45654                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 45655   300009                     	org	3145737
 45656   300009  FF                 	db	255
 45657                           
 45658                           ;Config register CONFIG11 @ 0x30000A
 45659                           ;	CRC on boot scan enable for boot area
 45660                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 45661                           ;	CRC on boot Continue on Error for boot areas bit
 45662                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 45663                           ;	CRC on boot application code scan enable
 45664                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 45665                           ;	CRC on boot SAF area scan enable
 45666                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 45667                           ;	CRC on boot Data EEPROM scan enable
 45668                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 45669                           ;	CRC on boot Config fuses scan enable
 45670                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 45671                           ;	CRC on boot Continue on Error for non-boot areas bit
 45672                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 45673                           ;	Boot on CRC Enable bit
 45674                           ;	BOOTPOR = OFF, CRC on boot will not run
 45675   30000A                     	org	3145738
 45676   30000A  FF                 	db	255
 45677                           
 45678                           ;Config register CONFIG12 @ 0x30000B
 45679                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 45680                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 45681   30000B                     	org	3145739
 45682   30000B  FF                 	db	255
 45683                           
 45684                           ;Config register CONFIG13 @ 0x30000C
 45685                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 45686                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 45687   30000C                     	org	3145740
 45688   30000C  FF                 	db	255
 45689                           
 45690                           ;Config register CONFIG14 @ 0x30000D
 45691                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 45692                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 45693   30000D                     	org	3145741
 45694   30000D  FF                 	db	255
 45695                           
 45696                           ;Config register CONFIG15 @ 0x30000E
 45697                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 45698                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 45699   30000E                     	org	3145742
 45700   30000E  FF                 	db	255
 45701                           
 45702                           ;Config register CONFIG16 @ 0x30000F
 45703                           ;	Boot Sector Seed for CRC on boot bits 31-24
 45704                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 45705   30000F                     	org	3145743
 45706   30000F  FF                 	db	255
 45707                           
 45708                           ;Config register CONFIG17 @ 0x300010
 45709                           ;	Boot Sector Seed for CRC on boot bits 23-16
 45710                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 45711   300010                     	org	3145744
 45712   300010  FF                 	db	255
 45713                           
 45714                           ;Config register CONFIG18 @ 0x300011
 45715                           ;	Boot Sector Seed for CRC on boot bits 15-8
 45716                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 45717   300011                     	org	3145745
 45718   300011  FF                 	db	255
 45719                           
 45720                           ;Config register CONFIG19 @ 0x300012
 45721                           ;	Boot Sector Seed for CRC on boot bits 7-0
 45722                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 45723   300012                     	org	3145746
 45724   300012  FF                 	db	255
 45725                           
 45726                           ;Config register CONFIG20 @ 0x300013
 45727                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 45728                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 45729   300013                     	org	3145747
 45730   300013  FF                 	db	255
 45731                           
 45732                           ;Config register CONFIG21 @ 0x300014
 45733                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 45734                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 45735   300014                     	org	3145748
 45736   300014  FF                 	db	255
 45737                           
 45738                           ;Config register CONFIG22 @ 0x300015
 45739                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 45740                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 45741   300015                     	org	3145749
 45742   300015  FF                 	db	255
 45743                           
 45744                           ;Config register CONFIG23 @ 0x300016
 45745                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 45746                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 45747   300016                     	org	3145750
 45748   300016  FF                 	db	255
 45749                           
 45750                           ;Config register CONFIG24 @ 0x300017
 45751                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 45752                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 45753   300017                     	org	3145751
 45754   300017  FF                 	db	255
 45755                           
 45756                           ;Config register CONFIG25 @ 0x300018
 45757                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 45758                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 45759   300018                     	org	3145752
 45760   300018  FF                 	db	255
 45761                           
 45762                           ;Config register CONFIG26 @ 0x300019
 45763                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 45764                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 45765   300019                     	org	3145753
 45766   300019  FF                 	db	255
 45767                           
 45768                           ;Config register CONFIG27 @ 0x30001A
 45769                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 45770                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 45771   30001A                     	org	3145754
 45772   30001A  FF                 	db	255
 45773                           
 45774                           ;Config register CONFIG28 @ 0x30001B
 45775                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 45776                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 45777   30001B                     	org	3145755
 45778   30001B  FF                 	db	255
 45779                           
 45780                           ;Config register CONFIG29 @ 0x30001C
 45781                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 45782                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 45783   30001C                     	org	3145756
 45784   30001C  FF                 	db	255
 45785                           
 45786                           ;Config register CONFIG30 @ 0x30001D
 45787                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 45788                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 45789   30001D                     	org	3145757
 45790   30001D  FF                 	db	255
 45791                           
 45792                           ;Config register CONFIG31 @ 0x30001E
 45793                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 45794                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 45795   30001E                     	org	3145758
 45796   30001E  FF                 	db	255
 45797                           
 45798                           ;Config register CONFIG32 @ 0x30001F
 45799                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 45800                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 45801   30001F                     	org	3145759
 45802   30001F  FF                 	db	255
 45803                           
 45804                           ;Config register CONFIG33 @ 0x300020
 45805                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 45806                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 45807   300020                     	org	3145760
 45808   300020  FF                 	db	255
 45809                           
 45810                           ;Config register CONFIG34 @ 0x300021
 45811                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 45812                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 45813   300021                     	org	3145761
 45814   300021  FF                 	db	255
 45815                           
 45816                           ;Config register CONFIG35 @ 0x300022
 45817                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 45818                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 45819   300022                     	org	3145762
 45820   300022  FF                 	db	255
 45821                           tosu	equ	0x4FF
 45822                           tosh	equ	0x4FE
 45823                           tosl	equ	0x4FD
 45824                           stkptr	equ	0x4FC
 45825                           pclatu	equ	0x4FB
 45826                           pclath	equ	0x4FA
 45827                           pcl	equ	0x4F9
 45828                           tblptru	equ	0x4F8
 45829                           tblptrh	equ	0x4F7
 45830                           tblptrl	equ	0x4F6
 45831                           tablat	equ	0x4F5
 45832                           prodh	equ	0x4F4
 45833                           prodl	equ	0x4F3
 45834                           indf0	equ	0x4EF
 45835                           postinc0	equ	0x4EE
 45836                           postdec0	equ	0x4ED
 45837                           preinc0	equ	0x4EC
 45838                           plusw0	equ	0x4EB
 45839                           fsr0h	equ	0x4EA
 45840                           fsr0l	equ	0x4E9
 45841                           wreg	equ	0x4E8
 45842                           indf1	equ	0x4E7
 45843                           postinc1	equ	0x4E6
 45844                           postdec1	equ	0x4E5
 45845                           preinc1	equ	0x4E4
 45846                           plusw1	equ	0x4E3
 45847                           fsr1h	equ	0x4E2
 45848                           fsr1l	equ	0x4E1
 45849                           bsr	equ	0x4E0
 45850                           indf2	equ	0x4DF
 45851                           postinc2	equ	0x4DE
 45852                           postdec2	equ	0x4DD
 45853                           preinc2	equ	0x4DC
 45854                           plusw2	equ	0x4DB
 45855                           fsr2h	equ	0x4DA
 45856                           fsr2l	equ	0x4D9
 45857                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    422
    Data        2
    BSS         2213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160     45     159
    BANK6           256      0     189
    BANK7           256      0     255
    BANK8           256      0     252
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    canTransport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventConsumerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S1868MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    S343$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S343$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S343Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S343Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    S343Transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[6] size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 6
		 -> canTransport(CODE[6]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 


Critical Paths under _main in COMRAM

    _setup->_tickGet
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_consumerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_findEvent
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _pollTimedResponse->_reqevCallback
    _getEv->_readNVM
    _nerdCallback->_sendMessage7
    _setNV->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage4->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _mnsPoll->_sendMessage5
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _sendMessage7->_sendMessage
    _findEvent->_getHash
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _getEVs->_readNVM
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _sendMessage5->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_startEnumeration
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _startEnumeration->_tickGet
    _setNewCanId->_writeNVM
    _loop->_tickGet
    _doFlash->_getNV
    _checkPowerOnPb->_factoryReset
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lldiv->_tickGet
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read
    _APP_testMode->_tickGet

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  179560
                                             92 COMRAM     3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     622
                           _initARGB
              _setTimedResponseDelay
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0    4604
                                             40 COMRAM     5     5      0
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1395
                                             39 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     450
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     382
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     735
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          20    20      0    1037
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     497
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  147023
                                             30 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   72439
                                             83 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5601
                                             48 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6035
                                             43 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9898
                                             46 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8662
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     296
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6080
                                             43 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11133
                                             58 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3606
                                             53 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   12637
                                             77 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7    5104
                                             70 COMRAM     7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            24    17      7    4989
                                             46 COMRAM    24    17      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             16    14      2     782
                                             20 COMRAM    16    14      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   21461
                                             60 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6722
                                             45 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _getEv                                               16    14      2     352
                                             12 COMRAM    16    14      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2603
                                             45 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3505
                                             45 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2723
                                             45 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2788
                                             45 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2    3097
                                             45 COMRAM     8     6      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11789
                                             83 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1     946
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1       1
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2   19277
                                             83 COMRAM     7     5      2
                                              0 BANK5     30    30      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
           _canWaitForTxQueueToDrain *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3     155
                                              4 COMRAM     4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             37 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage4                                         5     1      4    2403
                                             37 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2418
                                             37 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         5     5      0     319
                                              5 COMRAM     4     4      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _canWaitForTxQueueToDrain                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     6     4      2     203
                                              6 COMRAM     4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5892
                                             43 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             37 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2    8192
                                             83 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             37 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0      29
                                              0 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1244
                                             33 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2841
                                             48 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2795
                                             43 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                             9     7      2    1032
                                             27 COMRAM     9     7      2
                             _getEVs
                     _updateLedRange
                          _updateRGB
 ---------------------------------------------------------------------------------
 (4) _updateRGB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getEVs                                              15    15      0     395
                                             12 COMRAM    15    15      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     200
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2745
                                             83 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2635
                                             37 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    2266
                                             26 COMRAM    11     3      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             12 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     222
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1741
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1741
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     905
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     722
                                             83 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0    1973
                                             10 COMRAM     4     4      0
                            _doFlash
                      _refreshString
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _refreshString                                        2     2      0       0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              2     2      0    1762
                                              4 COMRAM     2     2      0
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   14003
                                             59 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     529
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     166
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _factoryReset                                         5     5      0   10950
                                             54 COMRAM     5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _teachFactoryReset                                    0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) _nvFactoryReset                                       3     3      0    1538
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _APP_nvDefault                                        3     3      0     792
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     318
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mnsFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_factoryReset                                     1     1      0    3666
           _factoryResetGlobalEvents
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalEvents                             0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3666
                                             53 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    14    14      0    2271
                                             39 COMRAM    14    14      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     656
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     228
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      91
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1327
                                             33 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               15    13      2     432
                                             12 COMRAM    15    13      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             27 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               14    12      2     351
                                             12 COMRAM    14    12      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _readNVM                                              6     3      3     247
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (2) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (4) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         7     7      0     823
                                             10 COMRAM     7     7      0
                           _initARGB
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _updateLedRange                                       4     2      2     226
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _initARGB                                             1     1      0     156
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _initARGB
       _tickGet
       _updateLedRange
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
             _rebuildHashtable
               _getEN
                 _readNVM
                   _EEPROM_Read
                   _FLASH_Read
               _getHash
                 _getEN (ARG)
                 _getNN (ARG)
                   _readNVM
               _getNN
             _removeTableEntry
               _flushFlashBlock
                 _APP_isSuitableTimeToWriteFlash
                 _eraseFlashBlock
                   _APP_isSuitableTimeToWriteFlash
               _rebuildHashtable
               _writeNVM
                 _APP_nvDefault (ARG)
                   ___awdiv
                   ___awmod
                 _EEPROM_Write (ARG)
                   _EEPROM_Read
                   _EEPROM_WriteNoVerify
                   _updateModuleErrorStatus
                 _FLASH_Write (ARG)
                   _eraseFlashBlock
                   _flushFlashBlock
                   _loadFlashBlock
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     _doFlash
       _getNV
     _refreshString
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _bootProcessMessage *
       _writeNVM
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
           _sendRTR
           _tickGet
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
       _sendMessage5
         _getParameterFlags (ARG)
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
             _updateModuleErrorStatus
         _tableIndexToEvtIdx (ARG)
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
       _APP_processConsumedEvent
         _getEVs
           _readNVM
         _updateLedRange
         _updateRGB
       _consumerEventCheckLen
         _checkLen
           _sendMessage5
       _findEvent
         _getEN
         _getHash
         _getNN
       _isConsumedEvent
         _APP_isConsumedEvent
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumerEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _canWaitForTxQueueToDrain *
       _consumerEsdData *
       _consumerGetDiagnostic *
       _findServiceIndex *
       _getParameter *
         _getParameterFlags
         _have
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
         _getParameter (ARG)
         _sendMessage (ARG)
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
         _APP_nvValueChanged
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
           _readNVM
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
             _findEvent
             _flushFlashBlock
             _getEN
             _rebuildHashtable
             _writeEv
               _writeNVM
             _writeNVM
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _getEN
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
       _doRqevn
         _getEN
         _sendMessage3
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _initARGB
     _setTimedResponseDelay
     _tickGet
     _updateLedRange

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0    1405     11.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRlhl       577      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0     252     98.4%
BITBANK7           256      0       0      0.0%
BANK7              256      0     255     99.6%
BITBANK6           256      0       0      0.0%
BANK6              256      0     189     73.8%
BITBIGSFRhllh      243      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     45     159     99.4%
BITBIGSFRhlh       156      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     95      95    100.0%
BITBIGSFRllllll     64      0       0      0.0%
BITBIGSFRhlll       61      0       0      0.0%
BITBIGSFRllhl       43      0       0      0.0%
BITBIGSFRllhh       40      0       0      0.0%
BITBIGSFRlllllh     37      0       0      0.0%
BITBIGSFRlllh       20      0       0      0.0%
BITBIGSFRlhh        11      0       0      0.0%
BITBIGSFRhh          8      0       0      0.0%
BITBIGSFRllllh       1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    2355      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 23 19:32:41 2025

                      nerdCallback@nodeNumber 0530                           findEvent@tableIndex 052E  
                   __end_of_pollTimedResponse 62AC                        ?_handleSelfEnumeration 0501  
                            sendMessage@data1 051C                              sendMessage@data2 051D  
                            sendMessage@data3 051E                              sendMessage@data4 051F  
                            sendMessage@data5 0520                              sendMessage@data6 0521  
                            sendMessage@data7 0522                           findEvent@nodeNumber 0522  
               __end_of_setTimedResponseDelay 8330                                 ?_APP_addEvent 0547  
                        _getNumRxBuffersInUse 74A6                                            l53 835A  
                                          l81 79DA                                            l85 82A4  
                                          l77 4F56                         _timedResponseCallback 0587  
                         _timedResponseOpcode 05A2                                  ___awdiv@sign 0506  
                                          _nn 058F                              ?_flushFlashBlock 0501  
                     __end_of_eraseFlashBlock 7048                                           l100 8360  
                                         l103 836C                                           l112 81D0  
                                         l106 8370                                           l115 5A9C  
                                         l116 5B52                                           l109 8374  
                                         l302 8378                                           l333 5D00  
                                         l246 4850                                           l254 7D20  
                                         l334 5D24                                           l247 4996  
                                         l280 25FE                                           l600 4DFC  
                                         l257 8336                                           l290 5324  
                                         l338 6C70                                           l347 7EB4  
                                         l284 8062                                           l348 7EE0  
                                         l613 73B6                                           l349 7EBC  
                      __end_of_updateLedRange 7D22                                           l560 828A  
                                         l641 6654                                           l633 8214  
                                         l617 5DFC                                           l650 72C6  
                                         l299 8368                                           l803 3DD0  
                                         l563 4CCE                                           l628 834E  
                                         l820 3EEA                                           l661 2C2A  
                                         l709 6634                                           l645 6684  
                                         l646 6690                                           l750 70C6  
                                         l735 47E0                                           l639 66DA  
                                         l751 70C8                                           l656 7518  
                                         l808 3DDC                                           l681 7CDC  
                                         l825 8326                                           l666 2C48  
                                         l834 826E                                           l754 831C  
                                         l739 7C54                                           l667 2EC4  
                                         l675 8302                                           l747 7092  
                                         l940 8354                                           l684 4286  
                                         l685 4432                                           l829 7FD6  
                                         l678 8312                                           l839 82EA  
                                         l951 1ECE                                           l945 7D9E  
                                         l962 185C                                           l794 3F9C  
                                         l699 7666                                           l965 1910  
                                         l789 7E0E                                           l968 19A4  
                             checkPowerOnPb@i 053C                                           l977 1AF4  
                          _enumerationResults 0632              ??_APP_isSuitableTimeToWriteFlash 0501  
             ?_APP_isSuitableTimeToWriteFlash 0501                                           _evs 0800  
                                         _pop 62AC                                 _APP_nvDefault 51EA  
                                ___awmod@sign 0506                                           prod 04F3  
                                         tosl 04FD                                           wreg 04E8  
                tableIndexToEvtIdx@tableIndex 0501                       APP_nvValueChanged@index 0501  
                     APP_nvValueChanged@value 0501                                   _subtestTime 0578  
         __end_of_mnsTRallDiagnosticsCallback 5564                   _mnsTRallDiagnosticsCallback 5448  
                                        l1020 7F46                                          l1101 461C  
                                        l1111 3C5E                                          l1015 714A  
                                        l1032 8234                                          l2000 60E6  
                                        l1120 64DC                                          l1113 3CB6  
                                        l1041 82BC                                          l2010 6066  
                                        l1130 6A08                                          l1050 71CC  
                                        l2003 6128                                          l1027 8006  
                                        l1140 6B42                                          l1045 75FA  
                                        l1125 6D02                                          l1037 7BE8  
                                        l1150 6826                                          l1134 8364  
                                        l1038 7C0C                                          l2007 6024  
                                        l1063 5FA4                                          l1055 7B9C  
                                        l2016 6780                                          l1080 4C8A  
                                        l1056 7BC0                                          l2032 327A  
                                        l1153 8342                                          l2041 3296  
                                        l1146 5446                                          l1162 5774  
                                        l1306 16F6                                          l1163 57BA  
                                        l2051 7E42                                          l1139 6AC0  
                                        l1411 2836                                          l1059 8034  
                                        l1172 586C                                          l2052 7E44  
                                        l1404 278A                                          l1156 8348  
                                        l1076 724C                                          l1068 5C3C  
                                        l1316 0CC0                                          l2141 68CA  
                                        l1181 5A5C                                          l2061 810A  
                                        l2134 68BA                                          l2118 772C  
                                        l2070 815E                                          l1422 2A9C  
                                        l1334 0E58                                          l1159 8252  
                                        l2119 773C                                          l2047 696A  
                                        l1415 2930                                          l1335 0ED4  
                                        l1440 4B16                                          l2064 80E0  
                                        l1096 7E78                                          l2081 6D94  
                                        l1417 2954                                          l1409 27FA  
                                        l2073 808C                                          l1089 5ED2  
                                        l1186 6368                                          l1426 7FA6  
                                        l1290 4FBA                                          l2090 63C4  
                                        l1435 7C98                                          l2067 80B6  
                                        l2091 638A                                          l1700 55C0  
                                        l2076 8134                                          l1292 4FEE  
                                        l1532 7DD8                                          l1285 76D2  
                                        l1365 15D8                                          l1293 4FF2  
                                        l2093 638C                                          l1702 5672  
                                        l1374 169A                                          l1294 5026  
                                        l2086 6378                                          l2351 658A  
                                        l1527 7D60                                          l1631 82D4  
                                        l1471 5562                                          l1543 7804  
                                        l2095 6404                                          l1640 7B74  
                                        l1384 6FBE                                          l1536 7F76  
                                        l1560 3642                                          l1288 4F8A  
                                        l2088 6386                                          l1385 6FC2  
                                        l2089 6388                                          l1634 7B28  
                                        l2338 61EA                                          l1298 50A6  
                                        l1715 758C                                          l1707 78C8  
                                        l1547 7AD6                                          l1555 6E22  
                                        l1467 6BDA                                          l1476 7EAC  
                                        l1637 7B60                                          l1653 77A2  
                                        l1389 8300                                          l1581 81F2  
                                        l1741 8186                                          l1646 7926  
                                        l1671 7046                                          l1656 7408  
                                        l1664 6FE0                                          l1680 6A50  
                                        l1808 5154                                          l1832 7866  
                                        l1657 742E                                          l1649 7746  
                                        l1761 37A0                                          l1809 51E8  
                                        l1666 6FF0                                          l1682 6A60  
                                        l1746 369A                                          l1667 7022  
                                        l1683 6A7E                                          l1675 6AA6  
                                        l1691 7A42                                          l1763 37B6  
                                        l1755 3754                                          l1587 7A30  
                                        l1692 7A6E                                          l1748 36A2  
                                        l1781 3938                                          l1757 376E  
                                        l1686 6AA2                                          l1678 6A32  
                                        l1766 3838                                          l1870 7982  
                                        l1839 74A4                                          l1695 7A84  
                                        l1783 394E                                          l1775 38EC  
                                        l1759 378A                                          l1768 3840  
                                        l1792 50C4                                          l1689 7A32  
                                        l1777 3906                                          l1785 39CE  
                                        l1865 794A                                          l1874 62AA  
                                        l1779 3922                                          l1795 50D0  
                                        l1859 833C                                _bootloaderType 05AA  
                                        l1797 50D0                                          l1789 50AE  
                                        l1869 796E                                          l1798 50DC  
                                        l1982 6F3A                                          l1879 626A  
                                        l7200 6FF4                                          l2784 7B26  
                                        l8000 6B40                                          l1976 6EAE  
                                        l7210 7430                                          l7202 7016  
                                        l1994 5964                                          l7220 7460  
                                        l7212 7436                                          l7300 7756  
                                        l7204 7020                                          l1988 5770  
                                        l8012 7AA4                                          l8004 8330  
                                        l8100 7FAA                                          l1997 832E  
                                        l7222 7470                                          l7230 7488  
                                        l7214 743E                                          l7310 77A0  
                                        l7302 7774                                          l7206 7030  
                                        l8030 5206                                          l8022 51EC  
                                        l8014 7AB4                                          l8006 7A88  
                                        l8110 68CC                                          l8102 7FBA  
                                        l7232 748E                                          l7224 7472  
                                        l7216 7442                                          l7240 751C  
                                        l7304 7778                                          l7160 829C  
                                        l7208 7044                                          l7320 7A7C  
                                        l7312 7A32                                          l8024 51FE  
                                        l8008 7A98                                          l7400 5A34  
                                        l8120 6962                                          l8112 68E6  
                                        l8200 69A6                                          l9000 7E90  
                                        l7234 7492                                          l7226 7476  
                                        l7218 744E                                          l7170 7B38  
                                        l7250 7556                                          l7242 7520  
                                        l7306 7784                                          l7322 7A80  
                                        l7314 7A46                                          l8042 529E  
                                        l8034 521A                                          l8050 5322  
                                        l8018 7AC0                                          l7410 7602  
                                        l8114 68FE                                          l8130 7FDA  
                                        l8106 7FC6                                          l9002 7EAA  
                                        l7236 7494                                          l7228 7486  
                                        l7172 7B56                                          l7180 73B8  
                                        l7308 778E                                          l7164 82A2  
                                        l7316 7A60                                          l7500 5654  
                                        l8028 5204                                          l9012 7D26  
                                        l9100 36AA                                          l7420 7642  
                                        l7412 7610                                          l7404 75FE  
                                        l7340 74A6                                          l7332 7264  
                                        l7324 724E                                          l8116 691E  
                                        l8124 6968                                          l8140 6E26  
                                        l8220 8066                                          l8132 7FEA  
                                        l8212 7E72                                          l8204 7E46  
                                        l7174 7B5E                                          l7190 7426  
                                        l7182 73EA                                          l7246 753A  
                                        l7430 6814                                          l7262 82EC  
                                        l7158 828C                                          l7318 7A6C  
                                        l7502 5670                                          l8038 5258  
                                        l9014 7D4E                                          l9006 7D22  
                                        l9102 36CC                                          l7270 7CB2  
                                        l7422 7648                                          l7414 7612  
                                        l7350 750E                                          l7342 74B6  
                                        l7334 72BC                                          l7326 725E  
                                        l8118 693C                                          l8150 6E94  
                                        l8302 4A38                                          l8222 499A  
                                        l8070 6672                                          l8062 6638  
                                        l8206 7E5C                                          l9030 77E2  
                                        l8400 4852                                          l7176 7B6E  
                                        l7168 7B28                                          l7256 7562  
                                        l7440 5344                                          l7264 82FE  
                                        l7512 7886                                          l8048 52E4  
                                        l9016 7D50                                          l9120 3766  
                                        l9112 371C                                          l9104 36DE  
                                        l8080 7C10                                          l7272 7CC0  
                                        l7424 765C                                          l7416 7622  
                                        l7352 7516                                          l7336 72C4  
                                        l7360 7E28                                          l7600 2E36  
                                        l8240 49B6                                          l8232 49AA  
                                        l8224 499E                                          l8320 4A68  
                                        l8128 80BA                                          l8136 7FF6  
                                        l8064 6648                                          l8216 8362  
                                        l8208 7E6C                                          l9032 77F2  
                                        l9024 77A8                                          l8410 4882  
                                        l8402 486C                                          l7442 538A  
                                        l7434 5328                                          l7194 6FC4  
                                        l7290 6A6C                                          l7282 6A1E  
                                        l7506 786A                                          l9210 76E4  
                                        l9122 3770                                          l9114 373E  
                                        l9106 36E4                                          l8082 7C20  
                                        l7274 7CD0                                          l7266 7C9A  
                                        l7426 7662                                          l7418 7638  
                                        l7362 7E3E                                          l7610 2E84  
                                        l7602 2E52                                          l7530 2AEA  
                                        l8154 6E9A                                          l8146 6E28  
                                        l8322 8090                                          l8170 794E  
                                        l8162 792A                                          l8074 669C  
                                        l8330 7F96                                          l8058 8366  
                                        l9050 6DEE                                          l9042 6DAE  
                                        l9034 77F4                                          l9026 77D0  
                                        l9018 77A4                                          l8420 488C  
                                        l8412 4884                                          l8404 486E  
                                        l7188 740C                                          l7428 6784  
                                        l7452 8236                                          l7444 5398  
                                        l7436 5338                                          l7196 6FC4  
                                        l7292 6A7C                                          l7284 6A42  
                                        l7508 786E                                          l9220 6838  
                                        l9212 76F2                                          l9132 37A2  
                                        l9124 3780                                          l9108 3706  
                                        l8340 50C8                                          l8084 7C30  
                                        l7276 7CD6                                          l7268 7CA2  
                                        l7348 74BC                                          l7380 6F26  
                                        l7372 6EB4                                          l7356 7E12  
                                        l7612 2E9C                                          l7604 2E6E  
                                        l7540 2B3A                                          l7532 2AFC  
                                        l7524 2A9E                                          l8500 5B28  
                                        l8156 6E9C                                          l8148 6E54  
                                        l8260 49D0                                          l8252 49C2  
                                        l8236 49B0                                          l8228 49A4  
                                        l8172 795E                                          l8164 792E  
                                        l8068 6660                                          l8076 66CA  
                                        l8324 7F7A                                          l9060 81D8  
                                        l9052 6E12                                          l9044 6DC8  
                                        l9036 6D98                                          l8430 489A  
                                        l8422 488E                                          l8414 4886  
                                        l8406 4872                                          l9310 4228  
                                        l9302 4192                                          l7454 823C  
                                        l7446 53A4                                          l7622 5772  
                                        l7470 7904                                          l7462 78CA  
                                        l7198 6FD8                                          l7294 6A8C  
                                        l7286 6A46                                          l7278 6A0A  
                                        l7518 789E                                          l7710 4596  
                                        l7702 4436                                          l9230 687A  
                                        l9222 684E                                          l9214 7702  
                                        l9150 3868                                          l9126 3782  
                                        l9118 3756                                          l8350 510A  
                                        l8342 50D4                                          l8334 50AA  
                                        l8086 7C34                                          l7390 59D2  
                                        l7382 6F28                                          l7374 6EE0  
                                        l7366 6EB2                                          l7358 7E14  
                                        l7614 2EA4                                          l7606 2E74  
                                        l7550 2BC6                                          l7542 2B56  
                                        l7534 2B02                                          l7526 2AC0  
                                        l8502 5B36                                          l8158 6EAC  
                                        l8270 49F0                                          l8174 7974  
                                        l8166 793E                                          l8326 7F8A  
                                        l9070 81E4                                          l9054 6E20  
                                        l9038 6DA8                                          l8190 697E  
                                        l8182 8340                                          l8094 8314  
                                        l8440 48C0                                          l8432 489C  
                                        l8424 4890                                          l8416 4888  
                                        l8408 4874                                          l9312 4236  
                                        l9304 41C8                                          l9240 3F9E  
                                        l7456 824C                                          l7448 5434  
                                        l7640 57AA                                          l7632 5776  
                                        l7472 790A                                          l7464 78CC  
                                        l7296 6AA0                                          l7288 6A4E  
                                        l7480 5564                                          l7720 461A  
                                        l7712 4600                                          l7704 4594  
                                        l9232 6898                                          l9224 6856  
                                        l9216 770C                                          l9208 76D4  
                                        l9160 38B6                                          l9152 387A  
                                        l9128 378C                                          l8360 514C  
                                        l8352 511A                                          l8344 50E0  
                                        l8336 50B8                                          l9320 1EE2  
                                        l8088 7C4E                                          l8600 47A0  
                                        l7384 6F38                                          l7376 6F20  
                                        l7616 2EB6                                          l7608 2E78  
                                        l7560 2C3A                                          l7552 2BE2  
                                        l7544 2B72                                          l7536 2B0A  
                                        l7528 2AD6                                          l8504 5B3A  
                                        l8264 49D6                                          l8256 49C8  
                                        l8248 49BC                                          l8176 7978  
                                        l8168 7944                                          l8520 7ECA  
                                        l8512 7EB0                                          l9064 81DE  
                                        l9048 6DCE                                          l9080 7A00  
                                        l9072 79DC                                          l7800 3B5A  
                                        l8450 492E                                          l8442 48D4  
                                        l8434 48BA                                          l8426 4892  
                                        l8418 488A                                          l9306 41DA  
                                        l9250 3FAC                                          l9242 3FA2  
                                        l7458 8250                                          l7650 57F6  
                                        l7634 5796                                          l7298 773E  
                                        l7474 7912                                          l7466 78E0  
                                        l7490 55C4                                          l7482 5596  
                                        l7714 4602                                          l8522 8270  
                                        l9234 68A8                                          l9226 6862  
                                        l9218 6828                                          l9170 3908  
                                        l9162 38D6                                          l9154 3880  
                                        l9138 37B8                                          l9146 37CC  
                                        l8362 515A                                          l8354 5122  
                                        l8346 50F0                                          l8338 50BE  
                                        l9330 1EFA                                          l8602 47A4  
                                        l7394 59DE                                          l7618 2EC0  
                                        l7570 2C6E                                          l7562 2C40  
                                        l7546 2B8E                                          l7538 2B26  
                                        l7554 2BFE                                          l8506 5B4A  
                                        l8098 810E                                          l8186 80E4  
                                        l8290 49FC                                          l8514 7EC4  
                                        l9058 81D4                                          l8178 8346  
                                        l8194 698A                                          l9090 7A2E  
                                        l9074 79EC                                          l7730 6C8A  
                                        l7810 3BEC                                          l7802 3BA4  
                                        l8530 7060                                          l9410 5C9A  
                                        l9402 5C52                                          l9314 832A  
                                        l8460 4944                                          l8452 4930  
                                        l8444 4908                                          l8436 48BC  
                                        l8428 4898                                          l9308 4214  
                                        l9260 4014                                          l9252 3FC0  
                                        l9244 3FA6                                          l7660 5848  
                                        l7636 5798                                          l7476 7924  
                                        l7492 55D8                                          l7484 55AA  
                                        l7716 4612                                          l7900 617A  
                                        l8524 8274                                          l9236 68AA  
                                        l9228 6870                                          l9180 393A  
                                        l9172 3918                                          l9156 38A0  
                                        l9148 3848                                          l8356 5134  
                                        l8348 5102                                          l9340 21B6  
                                        l9332 1F86                                          l9316 1ED0  
                                        l7396 59FC                                          l7388 5966  
                                        l7580 2D4A                                          l7572 2C7E  
                                        l7556 2C0A                                          l7548 2BAA  
                                        l8372 7F4A                                          l8620 8200  
                                        l8196 699A                                          l8188 696E  
                                        l7732 6C9A                                          l7724 6C74  
                                        l7812 3C4C                                          l7804 3BEA  
                                        l7820 3C6C                                          l8540 70C2  
                                        l8532 7070                                          l9412 5C9E  
                                        l9404 5C6E                                          l8470 4986  
                                        l8462 4956                                          l8454 4932  
                                        l8446 490A                                          l8438 48BE  
                                        l8390 47E8                                          l9270 4060  
                                        l9262 4024                                          l9254 3FC2  
                                        l9246 3FA8                                          l7662 584A  
                                        l7646 57BC                                          l7638 57A8  
                                        l7486 55B8                                          l7494 55DC  
                                        l7718 4616                                          l8382 8356  
                                        l7910 61B4                                          l7902 6182  
                                        l9238 68B4                                          l9174 391A  
                                        l9166 38EE                                          l9094 3644  
                                        l8358 513C                                          l8366 5166  
                                        l9350 2388                                          l9334 2012  
                                        l9326 1EE4                                          l9318 1ED8  
                                        l8550 4666                                          l8606 47AC  
                                        l7398 5A26                                          l7590 2DAA  
                                        l7582 2D64                                          l7574 2C86  
                                        l7566 2C56                                          l7558 2C22  
                                        l7750 6D16                                          l7742 6D06  
                                        l8630 62AC                                          l7670 643C  
                                        l8294 4A10                                          l8278 49F6  
                                        l8374 7F5A                                          l8614 81F6  
                                        l8702 8260                                          l9086 7A12  
                                        l9078 79F2                                          l7726 6C84  
                                        l7822 3C7E                                          l7814 3C4E  
                                        l8710 70F4                                          l9430 6C02  
                                        l8534 7082                                          l8526 704A  
                                        l9422 5D0C                                          l9414 5CA0  
                                        l9406 5C94                                          l9510 4D88  
                                        l8472 498A                                          l8464 4980  
                                        l8456 4934                                          l8448 490C  
                                        l8392 481E                                          l8384 47E2  
                                        l9280 4074                                          l9272 406E  
                                        l9264 402A                                          l9256 3FFE  
                                        l9248 3FAA                                          l7656 57F8  
                                        l7648 57D4                                          l7664 585A  
                                        l7496 5628                                          l7488 55BC  
                                        l7920 61DA                                          l7912 61BC  
                                        l7904 618A                                          l8704 8350  
                                        l9176 3924                                          l9168 38FE  
                                        l9096 367E                                          l9352 2414  
                                        l9336 209E                                          l9344 2242  
                                        l9360 25B8                                          l8560 46D4  
                                        l8552 46A0                                          l8544 461E  
                                        l7592 2DC6                                          l7584 2D72  
                                        l7576 2C8E                                          l7568 2C5C  
                                        l7760 6D2A                                          l7752 6D1A  
                                        l7744 6D0A                                          l8640 6328  
                                        l8632 62D6                                          l8480 5A96  
                                        l7680 646E                                          l8616 81FA  
                                        l9088 7A28                                          l7736 6CA0  
                                        l7816 3C66                                          l8800 8008  
                                        l8712 7104                                          l9424 6BDC  
                                        l8536 70A0                                          l8528 704C  
                                        l9416 5CB0                                          l9512 4D8C  
                                        l8474 498C                                          l8466 4982  
                                        l8458 4936                                          l8394 482E  
                                        l9290 409C                                          l9282 4084  
                                        l9274 4070                                          l9266 403C  
                                        l9258 4012                                          l7666 585C  
                                        l7658 5824                                          l7498 5652  
                                        l7922 61E2                                          l7914 61BE  
                                        l7906 6198                                          l7930 64EE  
                                        l9186 3950                                          l9194 3964  
                                        l9098 3682                                          l9354 24A0  
                                        l9346 2270                                          l9338 212A  
                                        l9362 25E6                                          l9370 8048  
                                        l7842 7340                                          l8570 4714  
                                        l8562 46F4                                          l8554 46A6  
                                        l8546 4622                                          l7594 2DE2  
                                        l7586 2D80                                          l7578 2CF4  
                                        l7762 6D3E                                          l7754 6D1E  
                                        l7746 6D0E                                          l7850 8138  
                                        l8650 7AEC                                          l8642 6352  
                                        l8490 5ADE                                          l7690 64C0  
                                        l8298 4A24                                          l8378 7F66  
                                        l8626 8206                                          l7738 6D00  
                                        l7834 3CAC                                          l7826 3C84  
                                        l8730 5EE6                                          l8802 800C  
                                        l8714 712A                                          l8722 7136  
                                        l8706 70CA                                          l9426 6BFC  
                                        l9602 5D44                                          l8538 70A8  
                                        l9418 5CC0                                          l9530 4D9E  
                                        l9522 4D94                                          l9514 4D90  
                                        l9506 4D84                                          l8468 4984  
                                        l8396 483E                                          l9292 40B0  
                                        l9284 4086                                          l9268 404E  
                                        l7772 8218                                          l7916 61C4  
                                        l7908 619E                                          l7940 6522  
                                        l7932 64F6                                          l9364 25E8  
                                        l9356 252C                                          l9348 22FC  
                                        l9372 804A                                          l7844 734C  
                                        l8580 474A                                          l8572 4724  
                                        l8564 4700                                          l8556 46A8  
                                        l8548 465C                                          l7596 2DFE  
                                        l7588 2D8E                                          l7764 6D5E  
                                        l7756 6D22                                          l7748 6D12  
                                        l8660 658E                                          l8652 7AF8  
                                        l8644 6360                                          l8636 62E2  
                                        l9700 442A                                          l8492 5AEE  
                                        l8476 5A60                                          l7684 6474  
                                        l7676 643E                                          l7668 6426  
                                        l8628 8302                                          l7860 6F6C  
                                        l7852 6F3C                                          l8900 758E  
                                        l7836 3CB0                                          l7828 3CA2  
                                        l7780 39D0                                          l8804 801A  
                                        l8820 7BEA                                          l8708 70DA  
                                        l9436 6C24                                          l9620 5DA8  
                                        l9540 4DA2                                          l9524 4D94  
                                        l9508 4D84                                          l9460 4C9A  
                          doEvuln@eventNumber 053D                                          l8398 4840  
                                        l9294 416A                                          l9286 4096  
                                        l7774 821E                                          l7766 8216  
                                        l7918 61CA                                          l7950 655E  
                                        l7942 652A                                          l7934 64FA  
                                        l7926 64DE                                          l9366 25F8  
                                        l9374 8054                                          l9382 8372  
                                        l7846 73A2                                          l8574 4734  
                                        l8566 4704                                          l8558 46C4  
                                        l7598 2E1A                                          l7758 6D26  
                                        l8670 65E8                                          l8662 6592  
                                        l8654 7AFC                                          l8638 631A  
                                        l8494 5AFC                                          l8478 5A80  
                                        l7694 64C6                                          l7686 6490  
                                        l7678 645E                                          l7870 6F9A  
                                        l7862 6F6E                                          l7854 6F3E  
                                        l8910 75C4                                          l8902 759E  
                                        l7838 3CB4                                          l7782 39E6  
                                        l8742 5F78                                          l8734 5F16  
                                        l8726 5ED4                                          l8750 71CE  
                                        l8806 82A6                                          l8822 7BFA  
                                        l8814 7BC6                                          l8830 7B7A  
                                        l8718 7130                                          l9438 6C3C  
                                        l9614 5D8A                                          l9542 4DA6  
                                        l9526 4D96                                          l9462 4C9E  
                                        ?_pop 0501                                          l9296 4178  
                                        l9288 409A                                          l7776 8220  
                                        l7952 6564                                          l7944 6532  
                                        l7936 6508                                          l7928 64E0  
                                        l9376 8056                                          l9368 8036  
                                        l7848 73A6                                          l8576 4738  
                                        l8568 4706                                          l8664 65CC  
                                        l8656 7B08                                          l8648 7AD8  
                                        l8496 5B0A                                          l8488 5A9E  
                                        l7696 64C8                                          l7688 64A8  
                                        l7872 6FAA                                          l7864 6F80  
                                        l7856 6F54                                          l8920 5E08  
                                        l8912 75D2                                          l7792 3A12  
                                        l7784 39F6                                          l8744 5F7C  
                                        l8736 5F36                                          l8728 5ED6  
                                        l8752 71E4                                          l8840 714E  
                                        l8816 7BD4                                          l8808 7BC2  
                                        l8760 4B18                                          l8832 7B88  
                                        l8824 7B76                                          l9448 6C42  
                                        l9632 5DC6                                          l9608 5D68  
                                        l9800 3F9A                                          l9720 3CB8  
                                        l9560 4DB6                                          l9544 4DAA  
                                        l9528 4D9A                                          l9480 4D10  
                                        l9464 4CB8                                          l9456 4C8C  
                                        l9712 7DDE                                          l7970 7CFC  
                                        l9298 417A                                          l7778 8230  
                                        l7962 835C                                          l7890 6146  
                                        l7882 612A                                          l7946 6540  
                                        l7954 656A                                          l7938 6510  
                                        l9378 836E                                          l8594 4764  
                                        l8586 474E                                          l8578 4744  
                                        l8666 65DE                                          l8674 6600  
                                        l8658 7B0C                                          l9650 4252  
                                        l8498 5B1A                                          l8682 82D6  
                                        l7874 6FAC                                          l7866 6F82  
                                        l7858 6F56                                          l8690 8256  
                                        l8930 5E7C                                          l8922 5E3A  
                                        l8914 75F8                                          l8906 75A4  
                                        l7794 3A20                                          l7786 39FC  
                                        l8746 5F8A                                          l8738 5F48  
                                        l8754 71F4                                          l8850 71B2  
                                        l8842 7156                                          l8818 7BE6  
                                        l8770 4B7E                                          l8762 4B2E  
                                        l8834 7B9A                                          l9618 5D90  
                                        l9730 3D1C                                          l9722 3CD6  
                                        l9810 7D66                                          l9394 5C50  
                                        l9386 5C3E                                          l9570 4DC0  
                                        l9562 4DB8                                          l9554 4DB0  
                                        l9546 4DAE                                          l9538 4DA2  
                                        l9490 4D30                                          l9482 4D1A  
                                        l9474 4CDA                                          l9466 4CC6  
                                        l9458 4C92                                          l9714 7DF2  
                                        l9706 7DDA                                          l7972 7D0C  
                                        l7964 7CE0                                          l7892 6154  
                                        l7884 612C                                          l7956 657A  
                                        l7948 6556                                          l8940 7668  
                                        l8596 478E                                          l8588 4762  
                                        l8668 65E2                                          l9660 4296  
                                        l9652 4264                                          l7876 6FBC  
                                        l7868 6F98                                          l8692 825A  
                                        l8932 5E90                                          l8908 75B2  
                                        l7796 3A32                                          l7788 39FE  
                                        l7980 81B0                                          l8844 7166  
                                        l8780 4BD6                                          l8764 4B3E  
                                        l8860 5B84                                          l8852 5B56  
                                        l8836 7B9E                                          l9900 18E8  
                                        l9732 3D3A                                          l9724 3CF6  
                                        l9820 7D80                                          l9396 5C50  
                                        l9388 5C44                                          l9580 4DD4  
                                        l9572 4DC2                                          l9564 4DBA  
                                        l9556 4DB0                                          l9492 4D34  
                                        l9484 4D28                                          l9476 4CF0  
                                        l9468 4CD2                                          l9716 7DF4  
                                        l7974 7D0E                                          l7966 7CF0  
                                        l7894 615C                                          l7886 613A  
                                        l7958 6582                                          l8942 766E  
                                        l8598 4790                                          l9670 42C8  
                                        l9654 4280                                          l8686 8320  
                                        l8950 7C5A                                          l9646 834A  
                                        l7878 6FC0                                          l8934 5EB2  
                                        l8926 5E40                                          l8918 5E00  
                                        l7798 3B4A                                          l8758 7224  
                                        l8782 4BF8                                          l8790 4C2A  
                                        l8774 4BAE                                          l8870 5BB4  
                                        l8862 5B88                                          l8854 5B5E  
                                        l8838 7BAE                                          l9910 1924  
                                        l9830 16FC                                          l9734 3D58  
                                        l9742 3D5E                                          l9750 3D82  
                                        l9822 7D90                                          l9590 4DF6  
                                        l9582 4DD8                                          l9574 4DC6  
                                        l9566 4DBC                                          l9558 4DB4  
                                        l9494 4D4A                                          l9486 4D2A  
                                        l9478 4CF4                                          l9718 7E04  
                                        l7968 7CF4                                          l7896 6160  
                                        l7888 6142                                          l8944 769A  
                                        l9680 4304                                          l9672 42D0  
                                        l9664 429C                                          l9648 423E  
                                        l7984 6AAA                                          l7976 836A  
                                        l8952 7C64                                          l8936 5ED0  
                                        l8928 5E6E                                          l8960 6B44  
                                        l8848 7196                                          l8792 4C38  
                                        l8784 4BFE                                          l8776 4BBE  
                                        l8768 4B6E                                          l8880 5C22  
                                        l8864 5B98                                          l8872 5BCE  
                                        l8856 5B6E                                          l9840 1764  
                                        l9832 1720                                          l9760 3DA4  
                                        l9744 3D7C                                          l9728 3CFC  
                                        l9824 7D9A                                          l9816 7D6A  
                                        l9808 7D62                                          l9592 4DF8  
                                        l9584 4DEC                                          l9576 4DCA  
                                        l9568 4DBE                                          l9496 4D5C  
                                        l9488 4D2C                                          l7898 6168  
                                        l8946 76B6                                          l9690 432A  
                                        l9682 430A                                          l9674 42DE  
                                        l9666 42A8                                          l7994 6AC2  
                                        l7986 6ABA                                          l8954 7C6E  
                                        l8882 7F1A                                          l8962 6B54  
                                        l8778 4BC6                                          l8874 5BE0  
                                        l8866 5BA0                                          l9842 176A  
                                        l9762 3DD0                                          l9754 3D88  
                                        l9826 7D9C                                          l9818 7D7E  
                                        l9594 4DFA                                          l9586 4DF0  
                                        l9498 4D6A                                          l9578 4DD0  
                                        l9692 4342                                          l9676 42E4  
                                        l9668 42C0                                          l7996 6B2E  
                                        l8948 7C56                                          l8892 7F2A  
                                        l8884 7F1E                                          l8980 54B6  
                                        l8972 5448                                          l8796 4C6C  
                                        l8788 4C18                                          l8876 5BEE  
                                        l8868 5BB0                                          l9940 1A68  
                                        l9932 1A20                                          l9916 197C  
                                        l9836 1726                                          l9828 16F8  
                                        l9596 5D26                                          l9772 3DE0  
                                        l9588 4DF2                                          l9678 42EA  
                                        l7998 6B30                                          l8958 7C78  
                                        l8990 5560                                          l8982 5518  
                                        l8974 5492                                          l8966 6B5A  
                                        l9926 19B8                                          l9854 1798  
                                        l9838 1746                                          l9598 5D3E  
                                        l9790 3F10                                          l9782 3ED0  
                                        l9774 3E86                                          l9688 4310  
                                        l8888 7F24                                          l8976 54B0  
                                        l8968 6BD8                                          l9960 1AD2  
                                        l9952 1A8A                                          l9856 17B8  
                                        l9848 1770                                          l9792 3F6E  
                                        l9776 3EBC                                          l9698 434A  
                                        l8898 7F30                                          l8994 7E7A  
                                        l9938 1A48                                          l9882 1822  
                                        l9858 17D6                                          l9794 3F74  
                                        l8996 7E8A                                          l8988 552E  
                                        l9980 1B62                                          l9972 1B32  
                                        l9884 1846                                          l9868 17F8  
                                        l9876 181A                                          l9796 3F84  
                                        l9788 3EFA                                          l9982 1B82  
                                        l9974 1B3A                                          l9966 1B02  
                                        l9958 1AB2                                          l9894 1870  
                                        l9878 181C                                          l9798 3F94  
                                        l9994 1BAC                                          l9988 1BA4  
                      __end_of_checkPowerOnPb 6782                                          u5000 586C  
                                        u5001 5868                                          u5010 646E  
                                        _T2PR 0323                                          u5011 646A  
                                        u5020 64A8                                          u5021 64A4  
                                        u5110 8230                                          u5030 64C0  
                                        u5111 822C                                          u5031 64BC  
                                        u4400 7B38                                          u5040 64D8  
                                        u5200 6F54                                          u5120 39F6  
                                        u4401 7B34                                          u5041 64D4  
                                        u5201 6F50                                          u5121 39F2  
                                        _IPR5 0367                                          u4410 7B6E  
                                        u5050 4612                                          u6010 65DE  
                                        u5210 6F6C                                          u5130 3A0E  
                                        _T4PR 032F                                          u4411 7B6A  
                                        u5051 460E                                          u6011 65DA  
                                        u5211 6F68                                          u5131 3A0A  
                                        u4420 73EA                                          u4500 82FE  
                                        u5300 61B4                                          u5108 6D82  
                                        u6004 65A8                                          u5220 6F80  
                                        u5060 6C84                                          u5140 3A32  
                                        u6100 4BBE                                          u6020 70DA  
                                        u4421 73E6                                          u4501 82FA  
                                        u5301 61B0                                          u5109 6D94  
                                        u6005 65A4                                          u5221 6F7C  
                                        u5061 6C80                                          u5141 3A2E  
                                        u6101 4BBA                                          u6021 70D6  
                                        u4430 6FD8                                          u4510 6A1A  
                                        u5310 61DA                                          u5230 6F98  
                                        u5070 6C9A                                          u5150 3B5A  
                                        u6110 4BD6                                          u6030 70F4  
                                        u4431 6FD4                                          u4511 6A16  
                                        u5311 61D6                                          u5231 6F94  
                                        u5071 6C96                                          u5151 3B56  
                                        u6111 4BD2                                          u6031 70F0  
                                        u4440 6FF0                                          u4520 6A32  
                                        u4600 7A7C                                          u5320 64EE  
                                        u5080 6D3E                                          u5400 6ABA  
                                        u5240 6FAA                                          u5160 3C5E  
                                        u6120 4C38                                          u6200 5BB0  
                                        u6040 7104                                          u7000 3F10  
                           doEvuln@nodeNumber 053B                                          u4441 6FEC  
                                        u4521 6A2E                                          u4601 7A78  
                                        u5321 64EA                                          u5081 6D3A  
                                        u5401 6AB6                                          u5241 6FA6  
                                        u5161 3C5A                                          u6121 4C34  
                                        u6201 5BAC                                          u6041 7100  
                                        u7001 3F0C                                          u4450 7030  
                                        u4530 6A42                                          u5330 6508  
                                        u4610 725E                                          u5090 6D5E  
                                        u5410 6B40                                          u5250 6FBC  
                                        u5170 3C7E                                          u6050 5EE6  
                                        u6130 7BE6                                          u6210 5BEE  
                                        u7010 3F94                                          u4451 702C  
                                        u4531 6A3E                                          u5331 6504  
                                        u4611 725A                                          u5091 6D5A  
                                        u5411 6B3C                                          u5251 6FB8  
                                        u5171 3C7A                                          u6051 5EE2  
                                        u6131 7BE2                                          u6211 5BEA  
                                        u7011 3F90                                          u4460 7044  
                                        u4540 6A60                                          u5260 613A  
                                        u5340 6522                                          u5420 7A98  
                                        u4620 728C                                          u4700 6F20  
                                        u5500 68E6                                          u6220 759E  
                                        u6300 552A                                          u5180 3CA2  
                                        u6060 5F48                                          u6140 7BFA  
                                        u7100 1816                                          u7020 7D90  
                                        u4461 7040                                          u4541 6A5C  
                                        u5261 6136                                          u5341 651E  
                                        u5421 7A94                                          u4701 6F1C  
                                        u5501 68E2                                          u6221 759A  
                                        u6301 5526                                          u5181 3C9E  
                                        u6061 5F44                                          u6141 7BF6  
                                        u7101 1812                                          u7021 7D8C  
                                        u4470 7460                                          u4390 829C  
                                        u4550 6A8C                                          u5270 6154  
                                        u5350 6540                                          u5430 7AB4  
                                        u5190 73B6                                          u4630 72BC  
                                        u4710 6F38                                          u5510 68FE  
                                        u6230 75C4                                          u6310 7E8A  
                                        u6070 71F4                                          u6150 7B9A  
                                        u7110 1846                                          u7030 1720  
                                        u4471 745C                                          u4391 8298  
                                        u4551 6A88                                          u5271 6150  
                                        u5351 653C                                          u5431 7AB0  
                                        u5191 73B2                                          u4631 72B8  
                                        u4711 6F34                                          u5511 68FA  
                                        u6231 75C0                                          u6311 7E86  
                                        u6071 71F0                                          u6151 7B96  
                                        u7111 1842                                          u7031 171C  
                                        u4480 7470                                          u4560 6AA0  
                                        u4800 55AA                                          u5280 617A  
                                        u5360 6556                                          u5440 51FE  
                                        u6320 7D60                                          u6400 36DE  
                                        u4720 59D2                                          u4640 74B6  
                                        u5520 691E                                          u8000 2A5A  
                                        u5600 796E                                          u6240 5E3A  
                                        u6080 4B3E                                          u6160 7BAE  
                                        u7200 1AAE                                          u7120 186C  
                                        u7040 1746                                          u4481 746C  
                                        u4561 6A9C                                          u4801 55A6  
                                        u5281 6176                                          u5361 6552  
                                        u5441 51FA                                          u6321 7D5C  
                                        u6401 36DA                                          u4721 59CE  
                                        u4641 74B2                                          u4625 7282  
                                        u5521 691A                                          u8001 2A56  
                                        u5601 796A                                          u6241 5E36  
                                        u6081 4B3A                                          u6161 7BAA  
                                        u7201 1AAA                                          u7121 1868  
                                        u7041 1742                                          u4490 7486  
                                        u4570 7756                                          u4810 55B8  
                                        u5290 6198                                          u5370 657A  
                                        u5450 5216                                          u6410 3718  
                                        u4730 5A26                                          u4650 74E4  
                                        u5530 693C                                          u5610 697E  
                                        u6250 5E7C                                          u6170 7166  
                                        u6090 4B7E                                          u7210 1AD2  
                                        u7130 190C                                          u7050 1764  
                                        u6330 77DE                                          u8010 7DCA  
                                        u4491 7482                                          u4571 7752  
                                        u4811 55B4                                          u5291 6194  
                                        u5371 6576                                          u5451 5212  
                                        u6411 3714                                          u4731 5A22  
                                        u5531 6938                                          u5611 697A  
                                        u6251 5E78                                          u6171 7162  
                                        u6091 4B7A                                          u7211 1ACE  
                                        u7131 1908                                          u7051 1760  
                                        u6331 77DA                                          u8011 7DC6  
                                        u5380 7CF0                                          u4580 77A0  
                                        u4820 560E                                          u6500 38E8  
                                        u6420 3750                                          u5700 514C  
                                        u4740 7622                                          u4660 750E  
                                        u4900 2C56                                          u5540 7FEA  
                                        u5460 6648                                          u5620 699A  
                                        u6260 5E90                                          u6180 5B6E  
                                        u7300 1C42                                          u7220 1AF0  
                                        u7140 1920                                          u7060 1794  
                                        u8100 3490                                          u8020 32B0  
                                        u6340 7804                                          u5381 7CEC  
                                        u4581 779C                                          u4821 5606  
                                        u6501 38E4                                          u6421 374C  
                                        u5701 5148                                          u4741 761E  
                                        u4661 750A                                          u4901 2C52  
                                        u5541 7FE6                                          u5461 6644  
                                        u5621 6996                                          u6261 5E8C  
                                        u6181 5B6A                                          u7301 1C3E  
                                        u7221 1AEC                                          u7141 191C  
                                        u7061 1790                                          u8101 348C  
                                        u8021 32AC                                          u6341 7800  
                                        u5390 7D20                                          u4590 7A42  
                                        u6510 38FE                                          u6430 3766  
                                        u5470 7C20                                          u4750 7638  
                                        u4670 7E28                                          u4910 2C6E  
                                        u5550 6E54                                          u5710 7F5A  
                                        u6350 6DA8                                          u6270 6B54  
                                        u5630 7E6C                                          u6190 5B98  
                                        u7310 1C66                                          u7230 1B02  
                                        u7150 19A0                                          u7070 17B8  
                                        u8110 34EA                                          u8030 32D6  
                                        u5391 7D1C                                          u4591 7A3E  
                                        u6511 38FA                                          u6431 3762  
                                        u5471 7C1C                                          u4751 7634  
                                        u4655 74DA                                          u4671 7E24  
                                        u4911 2C6A                                          u5551 6E50  
                                        u5711 7F56                                          u6351 6DA4  
                                        u6271 6B50                                          u5631 7E68  
                                        u6191 5B94                                          u7311 1C62  
                                        u7231 1AFE                                          u7151 199C  
                                        u7071 17B4                                          u8111 34E6  
                                        u8031 32D2                                          u5720 4850  
                                        u4760 5338                                          u4840 5652  
                                        u6600 6898                                          u6520 3918  
                                        u6440 3780                                          u5480 7C30  
                                        u4680 7E3E                                          u4920 2C7E  
                                        u5800 5B4A                                          u5560 6E94  
                                        u5640 49EC                                          u6360 6DC8  
                                        u6280 5492                                          u8200 6254  
                                        u7320 1C84                                          u7240 1B5E  
                                        u7160 19B4                                          u7080 17D6  
                                        u8120 354C                                          u8040 32F8  
                                        u7400 4F80                                          u5721 484C  
                                        u4761 5334                                          u4841 564E  
                                        u6601 6894                                          u6521 3914  
                                        u6441 377C                                          u5481 7C2C  
                                        u4681 7E3A                                          u4921 2C7A  
                                        u5801 5B46                                          u5561 6E90  
                                        u5641 49E8                                          u6361 6DC4  
                                        u6281 548E                                          u8201 6250  
                                        u7321 1C80                                          u7241 1B5A  
                                        u7161 19B0                                          u7081 17D2  
                                        u8121 3548                                          u8041 32F4  
                                        u7401 4F7C                                          u6610 3FFE  
                                        u4770 5398                                          u6530 3934  
                                        u6450 379C                                          u4690 6EE0  
                                        u4930 2E9C                                          u4850 2AC0  
                                        u5730 5A7C                                          u5570 6EAC  
                                        u5650 4A64                                          u5490 7FBA  
                                        u6370 79EC                                          u8210 6266  
                                        u7330 1CB4                                          u7250 1B82  
                                        u7170 1A44                                          u7090 17F4  
                                        u8130 35A4                                          u8050 3314  
                                        u5810 7060                                          u7410 4FB6  
                                        u6611 3FFA                                          u4771 5394  
                                        u6531 3930                                          u6451 3798  
                                        u4691 6EDC                                          u4931 2E98  
                                        u4851 2ABC                                          u5731 5A76  
                                        u5571 6EA8                                          u5491 7FB6  
                                        u6371 79E8                                          u8211 6262  
                                        u7331 1CB0                                          u7251 1B7E  
                                        u7171 1A40                                          u7091 17F0  
                                        u8131 35A0                                          u8051 3310  
                                        u5811 705C                                          u7411 4FB2  
                                        u6620 4024                                          u4780 7900  
                                        u8220 56A2                                          u6540 394A  
                                        u6460 37B2                                          u8300 79BE  
                                        u5900 46F4                                          u4940 2EB6  
                                        u4860 2AD6                                          u5740 5A7E  
                                        u5580 793E                                          u5660 7F8A  
                                        u6380 7A0E                                          u7340 1CD8  
                                        u7260 1BA0                                          u7180 1A68  
                                        u7500 0D12                                          u8060 3374  
                                        u5820 7070                                          u8140 7824  
                                        u7420 4FE6                                          u6621 4020  
                                        u4781 78FC                                          u8221 569E  
                                        u6541 3946                                          u6461 37AE  
                                        u8301 79BA                                          u5901 46F0  
                                        u4941 2EB2                                          u4861 2AD2  
                                        u5581 793A                                          u5661 7F86  
                                        u6381 7A0A                                          u7341 1CD4  
                                        u7261 1B9C                                          u7181 1A64  
                                        u7501 0D0E                                          u8061 3370  
                                        u5821 706C                                          u8141 7820  
                                        u7421 4FE2                                          u6630 4096  
                                        u4950 57A8                                          u4838 5610  
                                        u4790 5596                                          u8230 56EC  
                                        u6550 3960                                          u6470 37C8  
                                        u6390 367E                                          u5670 5102  
                                        u5910 4714                                          u4870 2AFC  
                                        u5750 5A96                                          u5590 795E  
                                        u7350 1CF6                                          u7270 1BD0  
                                        u7190 1A86                                          u7510 0D34  
                                        u8070 33E0                                          u5830 7082  
                                        u8150 7856                                          u6710 5C94  
                                        u7430 501E                                          u8310 58B0  
                                        u6631 4092                                          u4951 57A4  
                                        u4791 5592                                          u8231 56E8  
                                        u6551 395C                                          u6471 37C4  
                                        u6391 367A                                          u5671 50FE  
                                        u5911 4710                                          u4871 2AF8  
                                        u5751 5A92                                          u5591 795A  
                                        u7351 1CF2                                          u7271 1BCC  
                                        u7191 1A82                                          u7511 0D30  
                                        u8071 33DC                                          u5831 707E  
                                        u8151 7850                                          u6711 5C90  
                                        u7431 501A                                          u8311 58AC  
                                        u6640 40AC                                          u4960 57BA  
                                        u6560 76F2                                          u6480 387A  
                                        u5680 511A                                          u8400 676C  
                                        u5920 4724                                          u4880 2C22  
                                        u5760 5AEE                                          u7360 1D34  
                                        u7280 1BF4                                          u6800 5D3E  
                                        u7600 0F28                                          u7520 0D56  
                                        u8080 33FC                                          u5840 70A0  
                                        u6720 5CB0                                          u7440 507A  
                                        u8320 58FA                                          u6641 40A8  
                                        u4961 57B6                                          u6561 76EE  
                                        u6481 3876                                          u5681 5116  
                                        u8401 6768                                          u6705 8060  
                                        u5921 4720                                          u4881 2C1E  
                                        u5761 5AEA                                          u5657 4A5A  
                                        u7361 1D30                                          u7281 1BF0  
                                        u6801 5D3A                                          u7601 0F24  
                                        u7521 0D52                                          u8081 33F8  
                                        u5841 709C                                          u6721 5CAC  
                                        u7441 5076                                          u8321 58F6  
                                        u6650 41DA                                          u4970 57D4  
                                        u8250 5756                                          u6570 772C  
                                        u6490 38B2                                          u5690 5134  
                                        u8410 677C                                          u6706 8062  
                                        u5930 4734                                          u4890 2C3A  
                                        u5770 5AFC                                          u6298 54FC  
                                        u8170 61FE                                          u7370 1D58  
                                        u7290 1C12                                          u6810 5D64  
                                        u7610 0F5A                                          u7530 0D72  
                                        u7450 0A18                                          u8090 342E  
                                        u5850 70BE                                          u6730 5CC0  
                                        u6651 41D6                                          u4971 57D0  
                                        u8251 5752                                          u6571 7728  
                                        u6491 38AE                                          u5691 5130  
                                        u8411 6778                                          u5931 4730  
                                        u4891 2C36                                          u5771 5AF8  
                                        u6299 5510                                          u8171 61FA  
                                        u7371 1D54                                          u7291 1C0E  
                                        u6811 5D60                                          u7611 0F56  
                                        u7531 0D6E                                          u7451 0A14  
                                        u8091 342A                                          u5851 70BA  
                                        u6731 5CBC                                          u6660 4214  
                                        u4980 5824                                          u6580 684E  
                                        u8260 60E0                                          u5940 4762  
                                        u5860 465C                                          u5780 5B1A  
                                        u8180 6214                                          u7380 1D76  
                                        u6820 5D86                                          u6900 3CD6  
                                        u7620 0FE4                                          u7540 0DAC  
                                        u7460 0A34                                          u8420 2F22  
                                        u6740 5D24                                          u8340 5964  
                                        u6661 4210                                          u4981 5820  
                                        u6581 684A                                          u8261 60DC  
                                        u5941 475E                                          u5861 4658  
                                        u5781 5B16                                          u8181 6210  
                                        u7381 1D72                                          u6821 5D82  
                                        u6901 3CD2                                          u7621 0FE0  
                                        u7541 0DA8                                          u7461 0A30  
                                        u8421 2F1E                                          u8165 785A  
                                        u6741 5D20                                          u8341 5960  
                                        u4990 585A                                          u6590 6870  
                                        u8270 60F4                                          u8350 66EA  
                                        u6670 1EF6                                          u5950 47A0  
                                        u5870 46A0                                          u5790 5B28  
                                        u7390 1DC4                                          u6750 6BFC  
                                        u6830 5DA8                                          u6910 3CF6  
                                        u7630 1026                                          u7550 0E22  
                                        u7470 0C18                                          u8510 3118  
                                        u8430 2F82                                          u4991 5856  
                                        u6591 686C                                          u8271 60F0  
                                        u8351 66E6                                          u6671 1EF2  
                                        u5951 479C                                          u5871 469C  
                                        u5791 5B24                                          u7391 1DC0  
                                        u6751 6BF8                                          u6831 5DA4  
                                        u6911 3CF2                                          u7631 1022  
                                        u7551 0E1E                                          u7471 0C14  
                                        u8511 3114                                          u8431 2F7E  
                                        u8248 5732                                          u8280 601E  
                                        u8360 6702                                          u6680 25F8  
                                        u5880 46C4                                          u6840 4264  
                                        u7800 26A0                                          u5960 8312  
                                        u6760 6C20                                          u6920 3D1C  
                                        u7560 0E3E                                          u7480 0C52  
                                        u8600 328C                                          u8520 312A  
                                        u8440 2FCA                                          u8249 5744  
                                        u8281 601A                                          u8361 66FE  
                                        u6681 25F4                                          u5881 46C0  
                                        u6841 4260                                          u7801 269C  
                                        u5961 830E                                          u6761 6C1C  
                                        u6921 3D18                                          u7561 0E3A  
                                        u7481 0C4E                                          u8601 3288  
                                        u8521 3126                                          u8441 2FC6  
                                        u8290 6032                                          u8370 671A  
                                        u6690 8048                                          u5890 46D4  
                                        u5970 62D6                                          u6850 4296  
                                        u7810 26B4                                          u6930 3D3A  
                                        u7730 1500                                          u7650 10EA  
                                        u7570 0E8A                                          u7490 0C6E  
                                        u8530 3150                                          u8450 3014  
                                        u6770 4CC6                                          u8338 5940  
                                        u8291 602E                                          u8371 6716  
                                        u6691 8044                                          u5891 46D0  
                                        u5971 62D2                                          u6851 4292  
                                        u7811 26B0                                          u6931 3D36  
                                        u7731 14FC                                          u7651 10E6  
                                        u7571 0E86                                          u7491 0C6A  
                                        u8531 314C                                          u8451 3010  
                                        u6771 4CC2                                          u8339 5952  
                                        u8380 6732                                          u5980 6352  
                                        u6860 42C0                                          u7900 2844  
                                        u7820 26E2                                          u6940 3D58  
                                        u7740 154A                                          u7708 13CC  
                                        u7660 116E                                          u8540 317E  
                                        u8508 30F6                                          u6780 4D10  
                                        u8381 672E                                          u5981 634E  
                                        u6861 42BC                                          u7901 2840  
                                        u7821 26DE                                          u6941 3D54  
                                        u7741 1546                                          u7709 13E0  
                                        u7661 116A                                          u8541 317A  
                                        u8509 3108                                          u6781 4D0C  
                                        u8390 6750                                          u5990 7B26  
                                        u6870 4304                                          u7910 287E  
                                        u7830 26F2                                          u8198 6220  
                                        u6950 3D7C                                          u7750 155A  
                                        u7718 144A                                          u7670 11A8  
                                        u7590 0EEE                                          u8550 31C8  
                                        u8470 3080                                          u6790 4D4A  
                                        u8391 674C                                          u5991 7B22  
                                        u6871 4300                                          u7911 287A  
                                        u7831 26EE                                          u8199 623C  
                                        u6951 3D78                                          u7751 1556  
                                        u7719 145E                                          u7671 11A4  
                                        u7591 0EEA                                          u8551 31C4  
                                        u8471 307C                                          u6791 4D46  
                                        u6880 4342                                          u7920 28BA  
                                        u7840 2702                                          u6960 3DA0  
                                        u7760 15D0                                          u7728 14C8  
                                        u7680 11F4                                          u7648 10B0  
                                        u8480 309A                                          u6881 433E  
                                        u7921 28B6                                          u7841 26FE  
                                        u6961 3D9C                                          u7761 15CC  
                                        u7729 14DC                                          u7681 11F0  
                                        u7649 10D0                                          u8481 3096  
                                        u7930 28CE                                          u7850 2756  
                                        u7770 2612                                          u6970 3ECC  
                                        u7690 127C                                          u8570 3238  
                                        u8490 30C6                                          u6890 7E04  
                                        u8650 6386                                          u7931 28CA  
                                        u7851 2752                                          u7771 260E  
                                        u6971 3EC8                                          u7691 1278  
                                        u8571 3234                                          u8491 30C2  
                                        u6891 7E00                                          u8651 6382  
                                        u7940 292A                                          u7860 2782  
                                        u7780 264E                                          u6980 3EE6  
                                        u7588 0EC2                                          u8580 3256  
                                        u8468 305A                                          u8660 63A0  
                                        u7941 2926                                          u7861 277E  
                                        u7781 264A                                          u6981 3EE2  
                                        u7589 0ED4                                          u8581 3252  
                                        u8469 306C                                          u8661 639C  
                                        u7950 2962                                          u7870 2798  
                                        u7790 265C                                          u6990 3EFA  
                                        u8590 3266                                          u8670 63B2  
                                        u7951 295E                                          u7871 2794  
                                        u7791 2658                                          u6991 3EF6  
                                        u8591 3262                                          u8671 63AE  
                                        u7960 2972                                          u7880 27EC  
                                        u8568 3216                                          u8680 63C4  
                                        u7961 296E                                          u7881 27E8  
                                        u8569 3228                                          u8681 63C0  
                                        u7970 29AC                                          u7890 2808  
                                        u8690 6400                                          u7971 29A8  
                                        u7891 2804                                          u8691 63FC  
                                        u7980 29E8                                          u7981 29E4  
                                        u7990 2A1E                                          u7991 2A1A  
                     getNumTxBuffersInUse@i16 0505                                          _have 6EB0  
                                        _main 636A                                          _leds 0B7C  
                                        _name 0848                                          _loop 7984  
                                        _poll 2EC6                    __end_of_mnsTRrqnpnCallback 7EAE  
                                        fsr1h 04E2                                          fsr2h 04DA  
                                        indf1 04E7                                          indf2 04DF  
                                        fsr1l 04E1                                          fsr2l 04D9  
                           ?_removeTableEntry 0501                                          pop@q 0501  
                                        prodh 04F4                                          prodl 04F3  
                                        start 0A02                                  ?_loadNvCache 0501  
                                bootPowerUp@a 0510                                  bootPowerUp@b 050D  
                                bootPowerUp@i 050F                            ??_removeTableEntry 0528  
                               ?_APP_testMode 0501                               getEN@tableIndex 051A  
                                ___param_bank 0000                                ??_APP_addEvent 054E  
                       ?_getNumRxBuffersInUse 0501                             findServiceIndex@i 0504  
                        __end_of_EEPROM_Write 7928                                   _uptimeTimer 0568  
                                       ??_pop 0503                                         l10000 1BD4  
                                       l10002 1BF4                                         l10020 1C46  
                                       l10100 4F72                                         l10022 1C66  
                                       l10014 1C1E                                         l10110 4FBE  
                                       l10102 4F80                                         l11000 6706  
                                       l10040 1CB8                                         l10008 1C16  
                                       l10120 501E                                         l10112 4FD8  
                                       l10104 4F8E                                         l11010 6732  
                                       l10042 1CD8                                         l10034 1C90  
                                       l10210 0C18                                         l10202 0BE0  
                                       l10130 504C                                         l10122 502A  
                                       l10114 4FE6                                         l10106 4FA8  
                                       l11020 676C                                         l11012 6740  
                                       l11004 670A                                         l10060 1D38  
                                       l10028 1C88                                         l10220 0C6E  
                                       l10140 5068                                         l10132 5050  
                                       l10124 5030                                         l10116 4FF6  
                              _SPI1TWIDTHbits 0088                                         l11022 677C  
                                       l11006 671A                                         l10062 1D58  
                                       l10054 1D10                                         l10310 0ED6  
                                       l10302 0E60                                         l10222 0C82  
                                       l11030 2F3A                                         l10142 506A  
                                       l10126 5034                                         l10118 5010  
                                       l11016 6754                                         l11008 6722  
                                       l10080 1DC8                                         l10048 1CFA  
                                       l10400 152E                                         l10320 0F28  
                                       l10312 0EEE                                         l10304 0E76  
                                       l10240 0C94                                         l10216 0C36  
                                       l10208 0C00                                         l10160 0A88  
                                       l10152 0A1C                                         l11032 2F82  
                                       l11024 2EC6                                         l10144 507A  
                                       l10128 5038                                         l11018 675C  
                                       l10074 1DA0                                         l10410 1566  
                                       l10402 153A                                         l10330 0F78  
                                       l10322 0F3E                                         l10306 0E8A  
                                       l10234 0C8E                                         l10218 0C52  
                                       l10170 0ABC                                         l10162 0A9E  
                                       l10154 0A34                                         l11050 3070  
                                       l11042 2F9E                                         l11034 2F86  
                                       l11026 2F22                                         l10146 5084  
                                       l10138 5054                                         l10068 1D7A  
                                       l10420 15D0                                         l10412 1574  
                                       l10404 154A                                         l10332 0FE4  
                                       l10324 0F5A                                         l10308 0E98  
                                       l10260 0D16                                         l10228 0C88  
                                       l10164 0AA4                                         l10172 0AC0  
                                       l10156 0A52                                         l10252 0CC4  
                                       l10148 0A06                                         l11060 30C6  
                                       l11052 3080                                         l11044 2FCA  
                                       l11036 2F9A                                         l11028 2F26  
                                       l10510 264E                                         l10430 15E4  
                                       l10422 15DC                                         l10414 158E  
                                       l10406 155A                                         l10350 1108  
                                       l10334 100A                                         l10318 0F0C  
                                       l10254 0CFA                                         l10182 0AEC  
                                       l10166 0AA8                                         l10158 0A72  
                                       l11062 3118                                         l11054 3084  
                                       l11046 3014                                         l11150 63B2  
                                       l11142 638E                                         l10600 29E8  
                                       l10520 26A0                                         l10512 265C  
                                       l10088 1E40                                         l10440 1606  
                                       l10432 15E6                                         l10416 1594  
                                       l10408 1562                                         l10336 1026  
                                       l10344 1048                                         l10280 0D90  
                                       l10272 0D5A                                         l10248 0C9A  
                                       l10176 0AC6                                         l10168 0AB6  
                                       l11080 3238                                         l11064 312A  
                                       l11056 3088                                         l11048 306C  
                                       l11160 63D8                                         l11152 63B4  
                                       l11144 6390                                         l11128 636A  
                                       l10610 2A1E                                         l10602 29F6  
                                       l10530 26E2                                         l10514 2676  
                                       l10522 26A2                                         l10506 2600  
                                       l10418 15AA                                         l10370 11D8  
                                       l10346 10D8                                         l10290 0DF0  
                                       l10282 0DAC                                         l10274 0D72  
                                       l10266 0D38                                         l11082 3242  
                                       l11074 3152                                         l11066 3140  
                                       l11058 309A                                         l11090 327A  
                                       l10098 4F58                                         l11170 6410  
                                       l11162 63DC                                         l11154 63C8  
                                       l11146 63A0                                         l10612 2A5A  
                                       l10604 29FA                                         l10540 2756  
                                       l10532 26F2                                         l10524 26B4  
                                       l10516 267A                                         l10508 2612  
                                       l10372 11F4                                         l10380 1212  
                                       l10364 118C                                         l10356 1156  
                                       l10348 10EA                                         l10292 0E12  
                                       l10188 0B74                                         l10196 0B94  
                                       l10700 342E                                         l11092 328C  
                                       l11084 3246                                         l11076 317E  
                                       l11068 3150                                         l11172 6414  
                                       l11164 6400                                         l11156 63CC  
                                       l11148 63A2                                         l10614 2A68  
                                       l10606 2A08                                         l10550 27B0  
                                       l10542 276A                                         l10534 2702  
                                       l10526 26CA                                         l10518 268E  
                                       l10454 1644                                         l10446 1624  
                                       l10438 1604                                         l10390 14E8  
                                       l10382 127C                                         l10366 11A8  
                                       l10358 116E                                         l10294 0E22  
                                       l10198 0BDA                                         l10710 3476  
                                       l11094 3290                                         l11086 3256  
                                       l11078 31C8                                         l11174 6416  
                                       l11166 6408                                         l11158 63D6  
                                       l10616 2A6C                                         l10608 2A0C  
                                       l10560 280C                                         l10552 27EC  
                                       l10544 2770                                         l10536 2718  
                                       l10528 26CE                                         l10456 1646  
                                       l10448 1626                                         l10464 1664  
                                       l10392 1500                                         l10384 12FC  
                                       l10368 11C2                                         l10296 0E3E  
                                       l10288 0DDC                                         l10712 3490  
                                       l10720 34A6                                         l11088 3266  
                                       l10800 7824                                         l10640 7DCA  
                                       l11176 641A                                         l11168 640E  
                                       l10570 287E                                         l10562 2820  
                                       l10554 27F0                                         l10546 2782  
                                       l10626 2A7E                                         l10538 271C  
                                       l10650 32B6                                         l10810 7846  
                                       l10802 7838                                         l10642 7DD4  
                                       l10634 7DA4                                         l10580 28E4  
                                       l10572 28BA                                         l10564 282E  
                                       l10556 27F2                                         l10548 2798  
                                       l10476 16A0                                         l10740 354C  
                                       l10708 344C                                         l10644 3298  
                                       l10820 7864                                         l10812 785A  
                                       l10804 783A                                         l10636 7DB8  
                                       l10628 7DA0                                         l10900 4E0E  
                                       l10590 2944                                         l10582 28EA  
                                       l10574 28BE                                         l10558 2808  
                                       l10830 6214                                         l10398 151E  
                                       l10750 3596                                         l10726 34D2  
                                       l10662 32FC                                         l10646 32B0  
                                       l10814 785C                                         l10806 7842  
                                       l10822 8338                                         l10638 7DBA  
                                       l10910 4E1C                                         l10902 4E12  
                                       l10576 28CE                                         l10584 28EE  
                                       l10568 2844                                         l10592 294C  
                                       l10832 621A                                         l10824 61EC  
                                       l10752 35A4                                         l10760 35D8  
                                       l10728 34EA                                         l10736 3508  
                                       l10664 3314                                         l10672 334C  
                                       l10656 32DA                                         l10816 785E  
                                       l10808 7844                                         l10920 4E68  
                                       l10912 4E30                                         l10904 4E16  
                                       l10594 2962                                         l10586 292A  
                                       l10578 28D6                                         l10842 6270  
                                       l10834 6242                                         l10762 35FA  
                                       l10738 3532                                         l10690 33E0  
                                       l10674 3366                                         l10666 3340  
                                       l10818 7860                                         l10930 4EAE  
                                       l10922 4E76                                         l10914 4E3E  
                                       l10906 4E18                                         l10860 56A2  
                                       l10852 5674                                         l10596 2972  
                                       l10588 292C                                         l10836 6254  
                                       l10828 6202                                         l11660 0BB4  
                                       l10748 357C                                         l10692 33FC  
                                       l10676 3374                                         l10684 33A8  
                                       l10668 3346                                         l10940 4EF4  
                                       l10932 4EBC                                         l10924 4E84  
                                       l10916 4E4C                                         l10908 4E1A  
                                       l10870 576C                                         l10862 56EC  
                                       l10598 29AC                                         l10838 6256  
                                       l10846 6278                                         l11670 6C62  
                                       l11662 0CE4                                         l10686 33AE  
                                       l10774 3604                                         l10782 8160  
                                       l10950 4F3A                                         l10942 4F02  
                                       l10934 4ECA                                         l10926 4E92  
                                       l10918 4E5A                                         l10864 5744  
                                       l10880 60F4                                         l10872 606A  
                                       l11680 517A                                         l10960 79D6  
                                       l11672 1E60                                         l11664 16C0  
                                       l10688 33D0                                         l10784 8172  
                                       l10952 4F48                                         l10944 4F10  
                                       l10936 4ED8                                         l10928 4EA0  
                                       l11690 7576                                         l10866 5746  
                                       l10858 5676                                         l11682 37E2  
                                       l10874 6082                                         l10962 82BE  
                                       l10954 7984                                         l11674 628C  
                                       l11666 3E00                                         l11658 3624  
                                       l10698 3416                                         l10794 780E  
                                       l10786 7808                                         l10970 586E  
                                       l10946 4F1E                                         l10938 4EE6  
                                       l10868 5756                                         l11684 3978  
                                       l10876 60E0                                         l10892 6032  
                                       l10884 5FA8                                         l10964 82C2  
                                       l10956 79BE                                         l11676 6616  
                                       l11668 5DE6                                         l10796 7810  
                                       l10788 780A                                         l10972 5874  
                                       l10948 4F2C                                         l11686 5304  
                                       l10886 5FC0                                         l10966 82CE  
                                       l10958 79C2                                         l11678 47C2  
                                       l10798 7814                                         l10990 5952  
                                       l10974 5878                                         l11688 78B2  
                                       l10888 601E                                         l10968 82D0  
                                       l10992 5954                                         l10984 5884  
                                       l10976 587C                                         l10896 4DFE  
                                       l10994 66DC                                         l10986 58B0  
                                       l10978 5882                                         l10898 4E08  
                                       l10996 66EA                                         l10988 58FA  
                                       l10998 66F2                                         ?_have 0501  
                                       ?_main 0501                                _defaultColours FF59  
                         processEnumeration@i 051C                               __end_of___awdiv 61EC  
                                       ?_loop 0501                               __end_of___awmod 658C  
                                       ?_poll 0501                               __end_of___lldiv 68CC  
                             ___awdiv@divisor 0503                                         _T2CON 0324  
                                       _T4CON 0330                                         _T2HLT 0325  
                             ?_updateLedRange 0501                                         _T4HLT 0331  
                             reqevCallback@ev 0538                          __end_of_factoryReset 5772  
                                       _T2RST 0327                             _initTimedResponse 8338  
                                       _T4RST 0333                                         i2l607 7F16  
                              ?_APP_nvDefault 0501                               ___awdiv@counter 0505  
                             __end_of_canPoll 8350                      __end_of_nvTRnvrdCallback 7A32  
                             __end_of_doFlash 2600              __end_of_factoryResetGlobalEvents 8362  
                              _APP_nvValidate 8366                                         _TMR0H 0319  
                                       _TMR0L 0318                                         _TRISC 04C8  
                             __end_of_doEvlrn 5FA6                               __end_of_doNenrd 71CE  
                nvProcessMessage@valueOrError 0558                               __end_of_doEvuln 724E  
                             __end_of_doNnclr 8036                               __end_of_doNnevn 7C0E  
                             __end_of_doReqev 4C8C                               __end_of_doReval 5C3E  
                             __end_of_doRqevn 7BC2                               __end_of_getHash 8254  
                         ___lmul@multiplicand 0505                            ?_initTimedResponse 0501  
                          __p_paramBlock_text 0820                                 ?_leds_powerUp 0501  
                            __end_of_TMR0_ISR 81B0                               __end_of_isEvent 7E46  
              APP_processConsumedEvent@action 0520                                         _canId 05A8  
                                       _getEN 6782                                         _getNN 5326  
                                       _getNV 7A86                                         _getEv 696C  
                        _enumerationStartTime 0574                               __end_of_readNVM 758E  
                                       _errno 05A3                                         _setNV 6D96  
                                       _numEv 8362                         __end_of_refreshString 8064  
                                       have@i 0504                         _consumerEventCheckLen 82D6  
                                       _setup 4DFE                           canReceiveMessage@mp 0514  
                             __end_of_sendRTR 7CDE                  __end_of_getNumTxBuffersInUse 72C8  
                                       main@i 055D                               __end_of_mnsPoll 2A9E  
                               setNV@oldValue 0518                        APP_preProcessMessage@m 0501  
                             __end_of_tickGet 74A6                               ?_checkPowerOnPb 0501  
                                       pclath 04FA                                         tablat 04F5  
                         ??_initTimedResponse 0501               mnsTRallDiagnosticsCallback@step 052F  
             mnsTRallDiagnosticsCallback@type 0501                                         poll@i 05F3  
                                       poll@m 05F4                               __end_of_powerUp 5966  
                     reqevCallback@tableIndex 053C                                         status 04D8  
                               ?_nvGetESDdata 0501                       reqevCallback@nodeNumber 053A  
                             __end_of_writeEv 6D04                      ?_updateModuleErrorStatus 0501  
                  __end_of_startTimedResponse 7984                              ?_nvGetDiagnostic 0507  
                              ??_APP_testMode 050B                  processEnumeration@enumResult 051A  
                             __initialization 72C8                                  __end_of_have 6F3C  
                                __end_of_main 6426                                  __end_of_name 0850  
                                __end_of_loop 79DC                                  __end_of_poll 3298  
                               ?_nerdCallback 052E                        __end_of_defaultColours FF89  
                        __end_of_getParameter 4B18                     __end_of_initTimedResponse 833E  
                      __end_of_APP_nvValidate 836A                                        ??_have 0501  
                                ?_setNewCanId 0501                                        ??_main 055D  
                            ?_eraseFlashBlock 0501                                        ??_loop 050B  
                                ?_sendMessage 051B                                        ??_poll 05EE  
                       __end_of_reqevCallback 5ED4                                 __activetblptr 0003  
                           ??_consumerEsdData 0501                                   readNVM@type 050C  
                           startEnumeration@i 050C                                ??_leds_powerUp 050B  
            __end_of_canWaitForTxQueueToDrain 8314                       APP_postProcessMessage@m 0501  
                    ??_APP_postProcessMessage 0503                                        _C1CONH 0101  
                                      _C1CONL 0100                                        _C1CONT 0103  
                                      _C1CONU 0102                                        ?_getEN 050D  
                                      ?_getNN 050D                                        ?_getNV 0501  
                                      ?_getEv 050D                              __end_of_addEvent 3CB8  
                                      ?_setNV 0515                                  _canTransport FFF9  
                                      ?_numEv 0501                              ___awdiv@dividend 0501  
                                      ?_setup 0501                           APP_nvValidate@index 0501  
                           ??_consumerPowerUp 0501                                        _ANSELA 0400  
                                      _ANSELB 0408                                        _ANSELC 0410  
                                      _MD1SRC 006C                           APP_nvValidate@value 0501  
                                      _RC0PPS 0211                                        _RB2PPS 020B  
                                      _RC1PPS 0212                                        _RC2PPS 0213  
                                      _RC3PPS 0214                                        _RC4PPS 0215  
                                      _RC5PPS 0216                              reqevCallback@nEv 0535  
                                      _RC6PPS 0217                                        i2l2104 837C  
                                      i2l1846 81AE                                        _TABLAT 04F5  
                     ??_CAN1_OperationModeGet 0501                                ??_nvGetESDdata 0501  
                     ??_CAN1_OperationModeSet 0501                                        _NVMADR 0043  
                                      _TMR0IE 250F                                        _TMR0IF 258F  
                                      _TMR0IP 1B2F                              __end_of_checkLen 696C  
                                ?_removeEvent 0536                                _clearAllEvents 8216  
                    __end_of_APP_factoryReset 835C                                   initTicker@i 0504  
                           ?_findServiceIndex 0501                              _rebuildHashtable 5772  
                           _canProcessMessage 5D26  APP_processConsumedEvent@colourPixelIndexPair 0523  
                               teachPowerUp@i 0528                      reqevCallback@eventNumber 0536  
                  __end_of_APP_nvValueChanged 837A                            ??_findServiceIndex 0501  
                          _processEnumeration 461E                            ?_canProcessMessage 0554  
                  ??_APP_processConsumedEvent 051E                        ??_getNumRxBuffersInUse 0501  
                              teachCheckLen@m 0531                                        ___lmul 76D4  
                    __end_of_mnsGetDiagnostic 7FA8                          consumerEsdData@index 0501  
                              ??_nerdCallback 0530                                        _canPri FFA0  
                            __end_of_initARGB 4998                                     ??___awdiv 0505  
                                      _doNerd 82A6                                     ??___awmod 0505  
                       _APP_preProcessMessage 836E                                        _getEVs 6AA8  
                                   ??___lldiv 0513                                 _nvDiagnostics 05BB  
                                   ??_canPoll 051D                                     ??_doFlash 0505  
                             getParameter@idx 0509                                        _memcpy 7AD8  
                                   ??_doEvlrn 0554                                     ??_doNenrd 052C  
                                   ??_doEvuln 053F                                     ??_doNnclr 0537  
                                      clear_0 72E8                                        clear_1 72FA  
                                      clear_2 7308                                     ??_doNnevn 052A  
                                      clear_3 731A                                        clear_4 7326  
                                   ??_doReqev 0534                                     ??_doReval 052D  
                            ___awdiv@quotient 0507                               ___awmod@divisor 0503  
                                   ??_doRqevn 052A                           ?_processEnumeration 0501  
                                      have@id 0503                                     ??_getHash 0520  
                             ??_APP_nvDefault 0509                           ??_canProcessMessage 0556  
                                      isa$std 0001                               ___awmod@counter 0505  
                             ?_APP_nvValidate 0501                                        main@t1 055E  
                                      main@t2 055F                                     ??_isEvent 0501  
                                   ??_readNVM 050A                      nerdCallback@serviceIndex 052E  
                           _canReceiveMessage 423E                    __end_of_teachGetDiagnostic 8008  
                            _nvProcessMessage 3298                                     ??_sendRTR 0501  
                                   ??_mnsPoll 052C                                        pop@ret 0508  
                           ??_mnsFactoryReset 0515                                  ivt0x900_base 0900  
                                __mediumconst FE58            APP_processConsumedEvent@tableIndex 051E  
                                   ??_tickGet 0505                              __end_of_services FF95  
                          _tableIndexToEvtIdx 8344                   findServiceIndex@serviceType 0503  
                                      tblptrh 04F7                                        tblptrl 04F6  
                           doEvlrn@nodeNumber 054E                                        tblptru 04F8  
                                ??_FLASH_Read 0504                             nvProcessMessage@m 0554  
                      ?_consumerEventCheckLen 0531                            ?_canReceiveMessage 0510  
                                   ??_powerUp 0529                        getParameterFlags@flags 0505  
           mnsTRserviceDiscoveryCallback@step 052F             mnsTRserviceDiscoveryCallback@type 0501  
                     consumerProcessMessage@m 0554                          __end_of_APP_addEvent 81D2  
                                   ??_writeEv 0517                                  __p_name_text 0848  
                         addEvent@eventNumber 0531                  nvTRnvrdCallback@valueOrError 0530  
                            __end_of_writeNVM 78CA                           ?_tableIndexToEvtIdx 0501  
                      __end_of_clearAllEvents 8236                         mnsGetDiagnostic@index 0509  
                        ??_processEnumeration 0516                              ??_receiveOverrun 0501  
                                  __accesstop 0560                       __end_of__initialization 733A  
                   __end_of_canProcessMessage 5DFE                 __end_of_consumerGetDiagnostic 7FD8  
                         ??_canReceiveMessage 0512                             EEPROM_Write@index 0509  
                              nvGetESDdata@id 0501                              APP_testMode@step 0510  
                           EEPROM_Write@value 050C                                 doEvuln@result 053F  
                               ___rparam_used 0001                            teachCheckLen@learn 0534  
                                  _eeBootFlag 0594                       ??_handleSelfEnumeration 050B  
                   ?_factoryResetGlobalEvents 0501                                 ?_teachPowerUp 0501  
                            FLASH_Write@index 0506                             _getParameterFlags 6F3C  
                            FLASH_Write@value 0509                                __pcstackCOMRAM 0501  
   mnsTRserviceDiscoveryCallback@serviceIndex 052E                                  __pidataBANK5 8376  
                                  _canEsdData 81F4                            ?_getParameterFlags 0501  
                                   ?_TMR0_ISR 0501                                 __end_of_getEN 6828  
                               __end_of_getNN 5448                                 __end_of_getNV 7AD8  
                               __end_of_getEv 6A0A                            __end_of_FLASH_Read 7430  
                               __end_of_setNV 6E24                                 __end_of_numEv 8366  
                               __end_of_setup 4F58                          ??_tableIndexToEvtIdx 0501  
                           _ledPaletteIndexes 0700                          _getNumTxBuffersInUse 724E  
                   __end_of_canReceiveMessage 4434                  nvTRnvrdCallback@serviceIndex 052E  
                  __end_of_bootProcessMessage 6C72                    consumerGetDiagnostic@index 0509  
                         ??_getParameterFlags 0505                                    _canService FFEB  
                           ??_isConsumedEvent 0501                                    addEvent@en 0543  
                                  _canPowerUp 4C8C                     reqevCallback@serviceIndex 052E  
                        __end_of_APP_testMode 423E                    rebuildHashtable@tableIndex 0526  
                             _refreshRequired 05AB                                       ??_getEN 050F  
                                     ??_getNN 050F                                       ??_getNV 0503  
                                     ??_getEv 050F                                       ??_setNV 0516  
                               ?_sendMessage2 0526                                 ?_sendMessage3 0526  
                               ?_sendMessage4 0526                                 ?_sendMessage5 0526  
                               ?_sendMessage6 0526                                 ?_sendMessage7 0526  
                                     ??_numEv 0501                         _setupModePreviousMode 059E  
                                     ??_setup 050B                                  canEsdData@id 0501  
                                readNVM@index 0507                      mnsProcessMessage@newMode 055A  
                           initTicker@divider 0503                                  _EEPROM_Write 78CA  
                                  __pbssBANK5 0560                                    __pbssBANK6 0600  
                                  __pbssBANK7 0700                                    __pbssBANK8 0800  
                                loadNvCache@i 0511                               ?_clearAllEvents 0501  
                  startTimedResponse@callback 0506                               canSendMessage@m 0517  
                  APP_processConsumedEvent@ev 0524                           setNewCanId@newCanId 0515  
                   __end_of_getParameterFlags 6FC4                                _loadFlashBlock 7A32  
                                _factoryReset 5674                                ??_teachPowerUp 0528  
                               _setLEDsByMode 7C56                                       IVTBASEH 045E  
                                     IVTBASEL 045D                                       IVTBASEU 045F  
                               addEvent@evVal 0534                                 addEvent@evNum 0533  
                                  __pivt0x900 0900                                _canDiagnostics 068E  
                                 mnsPowerUp@i 050D                            mnsProcessMessage@d 0558  
                          mnsProcessMessage@i 0556                            mnsProcessMessage@m 0554  
                        __end_of_leds_powerUp 8188                                    _bl_version FF95  
                   ?_canWaitForTxQueueToDrain 0501                        ?_APP_preProcessMessage 0501  
                                     ?___lmul 0501                             _bootloaderVersion 05A9  
                                  ??_TMR0_ISR 0501                                       ?_doNerd 0501  
                                     _C1TRECU 0136                                       ?_getEVs 0501  
                            ??_updateLedRange 0503                                       _C1TXQUA 0158  
                                   _C1FIFOUA1 0164                                     _C1FIFOUA2 0170  
                                   _C1FIFOUA3 017C                         ?_getNumTxBuffersInUse 0501  
                                     ?_memcpy 0501                                 _C1BDIAG0Hbits 0139  
                                   ?_addEvent 052F                            _mnsTRrqnpnCallback 7E7A  
                              ___lmul@product 0509                                 _C1BDIAG0Lbits 0138  
                                   _C1NBTCFGH 0105                                     _C1NBTCFGL 0104  
                                   _C1NBTCFGT 0107                                     _C1NBTCFGU 0106  
                       _setTimedResponseDelay 8328                                       _MD1CARH 006E  
                                     _MD1CARL 006D                                       _MD1CON0 006A  
                                     _MD1CON1 006B                          __end_of_nvGetESDdata 81F4  
                                     _CLCnCON 00D6                                       _CLCnPOL 00D7  
                                     _DMAnDSA 00F0                                       _DMAnDSZ 00EE  
                            _canGetDiagnostic 6636                                    _flashBlock 0584  
                                     _DMAnSSA 00F9                                    _flashFlags 059B  
                                     _DMAnSSZ 00F7                                 ??_DEFAULT_ISR 0501  
                                     i2l11100 7EFA                                       i2l11102 7EFE  
                                     i2l11120 81AC                                       i2l11112 8188  
                                     i2l11104 7F0C                                       i2l11114 8196  
                                     i2l11106 7F12                                       i2l11116 8198  
                                     i2l11118 819C                                       i2l11096 7EE4  
                                     i2l11098 7EF4                                  _DMAnCON0bits 00FC  
                                   ?_checkLen 052C                                  _DMAnCON1bits 00FD  
                                  _flashState 05AC                             ?_nvTRnvrdCallback 052E  
                           reqevCallback@step 052F                           ?_mnsTRrqnpnCallback 052E  
                            ??_checkPowerOnPb 053C                                       _IVTLOCK 0459  
                                     _TBLPTRH 04F7                                       _TBLPTRL 04F6  
                                     _TBLPTRU 04F8                                     _C1TXQCONH 0151  
                                   _C1TXQCONL 0150               flushFlashBlock@interruptEnabled 0505  
                                   _C1TXQCONT 0153                                     _C1TXQCONU 0152  
                                     _NVMADRH 0044                                       _NVMADRL 0043  
                                     _SPI1TXB 0081                                       _NVMADRU 0045  
                                     _NVMDATL 0046                            ??_nvTRnvrdCallback 0530  
                                 _C1FIFOCON1H 015D                                   _C1FIFOCON2H 0169  
                                 _C1FIFOCON1L 015C                                   _C1FIFOCON3H 0175  
                                 _C1FIFOCON2L 0168                                   _C1FIFOCON3L 0174  
                                 _C1FIFOCON1T 015F                                   _C1FIFOCON1U 015E  
                                 _C1FIFOCON2T 016B                                   _C1FIFOCON2U 016A  
                                 _C1FIFOCON3T 0177                                   _C1FIFOCON3U 0176  
                                     _NVMLOCK 0042                                ??_sendMessage2 0528  
                              ??_sendMessage3 0529                                ??_sendMessage4 052A  
                              ??_sendMessage5 052B                                ??_sendMessage6 052C  
                              ??_sendMessage7 052D                              _teachDiagnostics 05CC  
                        __end_of_nerdCallback 75FC                     isConsumedEvent@eventIndex 0501  
                                   ?_initARGB 0501                                checkLen@needed 052E  
                                _getParameter 4998                        __end_of_loadFlashBlock 7A86  
                             _timerExtension1 059A                               _timerExtension2 0599  
                __end_of_eventConsumerService FFB3                                ?_setLEDsByMode 0501  
                      mnsTRrqnpnCallback@step 052F                        mnsTRrqnpnCallback@type 0501  
              canReceiveMessage@incomingCanId 0513                           _consumerDiagnostics 05C1  
                               initARGB@ledno 0501                                   poll@handled 05F2  
                        ??_mnsTRrqnpnCallback 0530                             __end_of_findEvent 64DE  
                                     __Hparam 0000                   consumerEventCheckLen@needed 0533  
                                     __Lparam 0000                               _consumerEsdData 8254  
                                   _CLCSELECT 00D5                        _APP_postProcessMessage 8372  
                          pbDownTimer@timeout 051C                                   ?_canEsdData 0501  
                           __end_of_pbUpTimer 6068                                     _DMASELECT 00E8  
                            pbUpTimer@timeout 051C                                 APP_testMode@c 050F  
                               APP_testMode@i 0511                                    _initTicker 7806  
                                     ___awdiv 612A                                    _initRomOps 82BE  
                                     ___awmod 64DE                                       ___lldiv 6828  
                                     _canPoll 834A                                       _doFlash 1ED0  
                                  ??_addEvent 0536                                       _doEvlrn 5ED4  
                                  _paramBlock 0820                                       _doNenrd 714C  
                          canProcessMessage@m 0554                                       _doEvuln 71CE  
                                     _doNnclr 8008                                       _doNnevn 7BC2  
                                     _doReqev 4B18                                       _doReval 5B54  
                                     __pcinit 72C8                                 _teachCheckLen 70CA  
                                     _doRqevn 7B76                             __end_of_leds_poll 39D0  
                          _startTimedResponse 7928                                       __ramtop 4000  
                                     _getHash 8236                                     ?_writeNVM 050E  
                          doEvlrn@eventNumber 0550                                       __ptext0 636A  
                                     __ptext1 4DFE                                       __ptext2 8328  
                                     __ptext3 586E                                       __ptext4 7DA0  
                                     __ptext5 4F58                                       __ptext6 7DDA  
                                     __ptext7 4C8C                                       __ptext8 5C3E  
                                     __ptext9 7D62                               _consumerPowerUp 7DDA  
                                     _isEvent 7E10                                       _pbTimer 0570  
                          APP_nvDefault@index 050B                               getEv@tableIndex 051C  
                            _EnumerationState 05A6                             ??_canFactoryReset 0515  
                           _mnsProcessMessage 0A06                                       _nvCache 0600  
                                  _mode_flags 05A4                                   ?_canPowerUp 0501  
                                     _readNVM 751A                     startEnumeration@txWaiting 050B  
                                  getNN@flags 051A                                _nvFactoryReset 7D22  
                                     getEN@hi 0516                                     _T2CONbits 0324  
                                     getEN@lo 0518                             ??_teachGetESDdata 0501  
                    __end_of_rebuildHashtable 586E                                    ??_checkLen 0530  
                                     getNN@hi 0516                                       getNN@lo 0518  
                                  _mode_state 05A1                              ___awmod@dividend 0501  
                          doReqev@eventNumber 0531                                       _sendRTR 7C9A  
                                     _mnsPoll 2600                                     _T4CONbits 0330  
                          ?_mnsProcessMessage 0554                                       _tickGet 7430  
                                _flashCounter 0589                             doNenrd@tableIndex 0531  
                         ?_startTimedResponse 0505                                  _isEvent$5795 0501  
                                  getNV@index 0504                                       _rxQueue 05C7  
                           doNenrd@nodeNumber 052C                      ??_consumerProcessMessage 0556  
                                     _powerUp 586E                         canReceiveMessage@temp 0516  
                          doRqevn@eventNumber 052A                                    _mnsService FFDD  
                           __end_of_nvService FFDD                                    _mnsPowerUp 4F58  
                           __end_of_nvPowerUp 7DDA                           __end_of_DEFAULT_ISR 837E  
                                     _writeEv 6C72                          end_of_initialization 733A  
                                  ??_initARGB 0501                           ??_mnsProcessMessage 05D0  
                                writeNVM@type 0514                                    getEv@evNum 050D  
            prepareSelfEnumResponse@txFifoObj 0501                                       memcpy@d 0507  
                                     memcpy@n 0505                                       memcpy@s 0509  
                  APP_nvValueChanged@oldValue 0502                                 ??_EEPROM_Read 0504  
                             ?_loadFlashBlock 0501                 __end_of_CAN1_OperationModeGet 831E  
               __end_of_CAN1_OperationModeSet 70CA                             ?_APP_factoryReset 0501  
                            _startEnumeration 75FC                               ___lldiv@divisor 050F  
                                writeEv@evVal 0516                      __end_of_nvProcessMessage 3644  
                                writeEv@evNum 0515                               ___lldiv@counter 0517  
                        ??_startTimedResponse 0508                       pollTimedResponse@result 053F  
                          ??_APP_factoryReset 0537               eraseFlashBlock@interruptEnabled 0504  
                           __end_of_updateRGB 8338                              ??_APP_nvValidate 0502  
                               ??_FLASH_Write 050A                          nvGetDiagnostic@index 0509  
                                     postdec1 04E5                                       postdec2 04DD  
                      ??_getNumTxBuffersInUse 0501                                       postinc0 04EE  
                                     postinc1 04E6                                       postinc2 04DE  
                   updateLedRange@start_ledno 0503                               _mnsFactoryReset 7668  
                           ?_mnsGetDiagnostic 0507          EEPROM_WriteNoVerify@interruptEnabled 0508  
                     _prepareSelfEnumResponse 7340                        ?_setTimedResponseDelay 0501  
                                _APP_addEvent 81B0                                ?_teachCheckLen 0531  
                   __end_of_mnsProcessMessage 16F8                            doNnevn@eventNumber 052A  
                                doFlash@ledno 0506                                    _tmpMessage 06B4  
                          ??_mnsGetDiagnostic 0509                                  doFlash@order 0505  
              startTimedResponse@serviceIndex 0505                        __end_of_nvFactoryReset 7D62  
                                  ??_writeNVM 0512                                    _showStatus 50A8  
                                   _PORTAbits 04CE                                    _previousNN 058D  
                     ??_consumerEventCheckLen 0534                            _APP_nvValueChanged 8378  
                   _timedResponseServiceIndex 0598                                    _priorities FE59  
                               ??_pbDownTimer 0518                               sendMessage2@opc 0528  
                        __end_of_teachPowerUp 7DA0                               sendMessage3@opc 0529  
                             sendMessage4@opc 052A                               sendMessage5@opc 052B  
                             sendMessage6@opc 052C                               sendMessage7@opc 052D  
                           _eventTeachService FFB3                                     _TRISAbits 04C6  
                                   _TRISBbits 04C7                        _mnsProcessMessage$4465 0557  
                          _timedResponseDelay 0593                                   showStatus@s 0503  
                             loadNvCache@temp 050F                           ?_APP_nvValueChanged 0501  
                               ??_bootEsdData 0501                                    isEvent@opc 0502  
                             ??_setLEDsByMode 0504                           teachCheckLen@needed 0533  
                     __end_of_consumerEsdData 8270               ??_mnsTRserviceDiscoveryCallback 0530  
                           ??_flushFlashBlock 0505                            _teachGetDiagnostic 7FD8  
                           _heartbeatSequence 059C                           _teachProcessMessage 16F8  
                          canSendMessage@temp 0515                             removeTableEntry@i 0534  
                               ??_bootPowerUp 050D                                  _APP_testMode 3F9E  
                             _isConsumedEvent 831E                 __end_of_handleSelfEnumeration 6636  
                         __end_of_EEPROM_Read 7B76                       __end_of_consumerPowerUp 7E10  
                         ?_teachGetDiagnostic 0507                             _canTransmitFailed 05A7  
                                 ?_initTicker 0501                                   ?_initRomOps 0501  
                        ??_APP_nvValueChanged 0503                          __end_of_sendMessage2 810C  
                        __end_of_sendMessage3 80E2                          __end_of_sendMessage4 80B8  
                        __end_of_sendMessage5 8160                          __end_of_sendMessage6 808E  
                        __end_of_sendMessage7 8136                                __end_of___lmul 773E  
                              __end_of_canPri FFA5                                __end_of_doNerd 82BE  
                  removeTableEntry@tableIndex 0535                                __end_of_getEVs 6B44  
                             ?_nvFactoryReset 0501                              _removeTableEntry 4434  
                              __end_of_memcpy 7B28                            canReceiveMessage@m 0510  
                        ?_teachProcessMessage 0554                     __end_of_eventTeachService FFC1  
                         __end_of_FLASH_Write 5674                     consumerProcessMessage@enn 0559  
                       __end_of_APP_nvDefault 5326                     consumerProcessMessage@ret 055B  
                        _eventConsumerService FFA5                                _canSendMessage 2A9E  
                                 _DEFAULT_ISR 837C                                  _name_absaddr 0848  
                         start_initialization 72C8                              ??_clearAllEvents 0536  
                   ?_APP_processConsumedEvent 051C                                  _leds_powerUp 8160  
                        ??_teachGetDiagnostic 0509                                   __end_of_pop 636A  
                               factoryReset@i 053B                                   ?_mnsPowerUp 0501  
                         _APP_isConsumedEvent 836A                  ?_mnsTRallDiagnosticsCallback 052E  
                __end_of_EEPROM_WriteNoVerify 77A4                                 _refreshString 8036  
                         __end_of_pbDownTimer 612A                            _bootProcessMessage 6BDC  
                         _getNextWriteMessage 5966                                  _nvGetESDdata 81D2  
                    __end_of_canGetDiagnostic 66DC                       ??_APP_preProcessMessage 0503  
                     __end_of_mnsFactoryReset 76D4                                 ??_loadNvCache 050D  
                       _consumerGetDiagnostic 7FA8                           __end_of_bootEsdData 7EE2  
                         ?_bootProcessMessage 0554                                  doEvlrn@evVal 0553  
                                doEvlrn@evNum 0552                               numEv@tableIndex 0501  
                   ??_prepareSelfEnumResponse 0501                        startTimedResponse@type 0508  
                  __end_of_evtIdxToTableIndex 8344                      rebuildHashtable@chainIdx 0527  
                                    ??___lmul 0509                               ??_teachCheckLen 0535  
                                doNenrd@index 0530                          ?_APP_isConsumedEvent 0501  
                                    ??_doNerd 0509                                      ??_getEVs 050D  
                         bootProcessMessage@m 0554                            addEvent@forceOwnNN 0535  
                                 _MD1CON0bits 006A                                  _nerdCallback 758E  
                                 __pdataBANK5 05FD                       _updateModuleErrorStatus 82EC  
                         __end_of_bootService FFCF                                      ??_memcpy 0507  
                         __end_of_bootPowerUp 5D26                        __end_of_canSendMessage 2EC6  
                                 ?_showStatus 0501                          ?_getNextWriteMessage 0501  
                       ??_teachProcessMessage 0556                                   __pbssBIGRAM 08FC  
                               _reqevCallback 5DFE                          ??_bootProcessMessage 0556  
                           ??_nvGetDiagnostic 0509                              canSendMessage@mp 050D  
                               __pcstackBANK5 05D0                                    setNV@index 0519  
                                  setNV@value 0515           APP_processConsumedEvent@start_ledno 0521  
                          addEvent@tableIndex 0546                                ?_refreshString 0501  
                  setTimedResponseDelay@delay 0501                                     addEvent@e 0545  
                          addEvent@nodeNumber 052F                 ??_mnsTRallDiagnosticsCallback 0530  
                    _factoryResetGlobalEvents 835C                       __end_of_isConsumedEvent 8328  
                            ?_consumerEsdData 0501                                   _EEPROM_Read 7B28  
                          initTicker@priority 0502                       ?_APP_postProcessMessage 0501  
                           ??_eraseFlashBlock 0501                     APP_processConsumedEvent@m 051C  
                              mnsPowerUp@temp 050E                                  doNnevn@count 052C  
                        teachProcessMessage@m 0554                               _canFactoryReset 8270  
       __end_of_mnsTRserviceDiscoveryCallback 6BDC                 _mnsTRserviceDiscoveryCallback 6B44  
                mnsTRallDiagnosticsCallback@d 0534                                    nvPowerUp@i 0512  
                             tickGet@IntFlag1 0506                               tickGet@IntFlag2 0505  
                      _consumerProcessMessage 3CB8                               _teachGetESDdata 7F18  
                       ??_APP_isConsumedEvent 0501                                  ??_canEsdData 0501  
                                    _C1FIFOBA 014C                                 __pmediumconst FE58  
                            ?_consumerPowerUp 0501                              getEVs@tableIndex 051A  
                                    ?___awdiv 0501                                     __ptext100 8372  
                                   __ptext101 7984                                     __ptext110 3644  
                                   __ptext102 8036                                     __ptext111 76D4  
                                   __ptext103 1ED0                                     __ptext120 612A  
                                   __ptext112 6828                                     __ptext104 7A86  
                                   __ptext121 8356                                     __ptext113 5674  
                                   __ptext105 82BE                                     __ptext130 828C  
                                   __ptext122 835C                                     __ptext114 7D22  
                                   __ptext106 66DC                                     __ptext131 78CA  
                                   __ptext123 8216                                     __ptext115 7668  
                                   __ptext107 50A8                                     __ptext140 7B28  
                                   __ptext132 82EC                                     __ptext124 4434  
                                   __ptext116 8270                                     __ptext108 5FA6  
                                   __ptext141 3F9E                                     __ptext133 773E  
                                   __ptext125 7868                                     __ptext117 8350  
                                   __ptext109 6068                                   _FLASH_Write 5564  
                                   __ptext142 7CDE                                     __ptext134 5772  
                                   __ptext126 5564                                     __ptext118 51EA  
                                   __ptext143 7430                                     __ptext135 5326  
                                   __ptext127 7A32                                     __ptext119 64DE  
                                   __ptext144 47E2                                     __ptext136 8236  
                                   __ptext128 6A0A                                     __ptext145 7EE4  
                                   __ptext137 6782                                     __ptext129 6FC4  
                                   __ptext146 8188                                     __ptext138 751A  
                                   __ptext147 837C                                     __ptext139 73B8  
                                    _C1MASK0H 0191                                      ?___awmod 0501  
                                    _C1MASK0L 0190                                      _C1MASK0T 0193  
                                    _C1MASK0U 0192                                     _findEvent 6426  
                                    ?___lldiv 050B                           __end_of_loadNvCache 7806  
                                doReqev@evVal 0534                                  doReqev@evNum 0533  
                             getNN@tableIndex 051B                                      ?_canPoll 0501  
                                doReval@enNum 052E                                      ?_doFlash 0501  
                                doReval@evVal 0530                                  doReval@evNum 052C  
                                   _flashTime 0580                                      ?_doEvlrn 054E  
                                    ?_doNenrd 0501                                      ?_doEvuln 053B  
                                    ?_doNnclr 0501                                      ?_doNnevn 0501  
                                    ?_doReqev 052F                                      ?_doReval 052C  
                           teachGetESDdata@id 0501                                      ?_doRqevn 0501  
                       ??_getNextWriteMessage 0503                                      ?_getHash 051C  
                               ??_setNewCanId 0515                                     _pbUpTimer 5FA6  
                             ?_canSendMessage 050D                                 ??_sendMessage 0523  
                                    ?_isEvent 0501                              _findServiceIndex 6E24  
                            nerdCallback@step 052F                              nerdCallback@type 0501  
                              ?_reqevCallback 052E                                  ??_canPowerUp 050D  
                              _heartbeatTimer 056C                                   __smallconst FE58  
                                    ?_readNVM 0507                                    _C1FLTCON0L 0180  
                    __end_of_startEnumeration 7668                                    _C1FLTOBJ0H 018D  
                                  _C1FLTOBJ0L 018C                                    _C1FLTOBJ0T 018F  
                                  _C1FLTOBJ0U 018E                                    _C1CONHbits 0101  
                                   _leds_poll 3644                                      ?_sendRTR 0501  
                                    ?_mnsPoll 0501                             ?_rebuildHashtable 0501  
             __end_of_prepareSelfEnumResponse 73B8              CAN1_OperationModeSet@requestMode 0502  
                                    ?_tickGet 0501       mnsTRallDiagnosticsCallback@serviceIndex 052E  
                                    _CANRXPPS 023D                                   _pbDownTimer 6068  
                                  _C1CONTbits 0103                                    _C1CONUbits 0102  
                                   checkLen@m 052C                              ??_loadFlashBlock 0501  
                                    ?_powerUp 0501                            ??_rebuildHashtable 0522  
                                    _T2CLKCON 0326                                      _CLCnGLS0 00DC  
                                    _CLCnGLS1 00DD                                      _CLCnGLS2 00DE  
                                    _CLCnGLS3 00DF                                      _CLCnSEL0 00D8  
                                    _CLCnSEL1 00D9                                      _CLCnSEL2 00DA  
                                    _CLCnSEL3 00DB                                      ?_writeEv 0515  
                                    _DMAnAIRQ 00FE                                      _T4CLKCON 0332  
                                  _C1INTHbits 011D                                      _DMAnSIRQ 00FF  
                                 _bootEsdData 7EAE                            __end_of_canEsdData 8216  
                                  _C1INTTbits 011F                                    _C1INTUbits 011E  
                                 _flashBuffer 05FD                        consumerEventCheckLen@m 0531  
                              doReval@evIndex 052D                __end_of_APP_postProcessMessage 8376  
                     getNumRxBuffersInUse@i16 0505                                     _nvService FFCF  
                         consumerPowerUp@temp 0501                                 ??_removeEvent 053A  
                                _SPI1BAUDbits 0089                                      _LATBbits 04BF  
                                    _LATCbits 04C0                                     _nvPowerUp 7DA0  
                           findEvent@chainIdx 052D                        ?_consumerGetDiagnostic 0507  
                    _canWaitForTxQueueToDrain 8302                                      _IPR0bits 0362  
                                    _PIE0bits 049E                          rebuildHashtable@hash 0525  
                            ?_mnsFactoryReset 0501                                     _rxBuffers 0646  
                                   getHash@en 051E                                     getHash@nn 051C  
                              _flashFlushTime 0642                                  _SPI1CON0bits 0084  
                                    _IVTBASEH 045E                                      _IVTBASEL 045D  
                                _SPI1CON1bits 0085                                      _IVTBASEU 045F  
                                _SPI1CON2bits 0086        __end_of_APP_isSuitableTimeToWriteFlash 82A6  
              _APP_isSuitableTimeToWriteFlash 828C                                   _bootService FFC1  
                          __end_of_canService FFF9                                  _teachPowerUp 7D62  
                                 _bootPowerUp 5C3E                                      _PIR0bits 04AE  
                          __end_of_canPowerUp 4DFE                             ?_nvProcessMessage 0554  
                     ??_setTimedResponseDelay 0501                             doReqev@tableIndex 0536  
                                    _SPI1INTF 008A                                      i2u861_40 7EF4  
                                    i2u861_41 7EF0                                      i2u862_40 7F0C  
                                    i2u862_41 7F08                                      i2u863_40 8196  
                                    _SPI1TCNT 0082                                      i2u863_41 8192  
                              _mnsDiagnostics 05AD                                      i2u864_40 81AC  
                                    i2u864_41 81A8                     ??_updateModuleErrorStatus 0501  
                            ivt0x900_undefint 0A00                             doReqev@nodeNumber 052F  
                                 _pbWasPushed 059D                                      _TMR0_ISR 8188  
                          ??_nvProcessMessage 0556                     EEPROM_WriteNoVerify@index 0501  
                                  ?_findEvent 0522                     EEPROM_WriteNoVerify@value 0504  
                                   _updateRGB 8330                          _EEPROM_WriteNoVerify 773E  
            consumerProcessMessage@tableIndex 055C                 updateLedRange@colourIndexPair 0502  
                           _teachFactoryReset 8350                                    ?_pbUpTimer 0501  
                              sendMessage@len 051B                                sendMessage@opc 0525  
                           _timedResponseTime 0560                             _timedResponseStep 0595  
                           _timedResponseType 0596                              _enumerationState 05A5  
                                doRqevn@count 052C                                     _transport 0591  
                          ?_teachFactoryReset 0501                 APP_processConsumedEvent@onOff 051F  
                  canReceiveMessage@rxFifoObj 0518                                    ?_leds_poll 0501  
                             _flushFlashBlock 6A0A                 __end_of_consumerEventCheckLen 82EC  
                             ??_refreshString 0501                           __end_of_setNewCanId 7C56  
                         __end_of_sendMessage 6D96                           ??_teachFactoryReset 0537  
                             checkLen@service 052F                                   _INTCON0bits 04D6  
                          __end_of_bl_version FFA0                             ___lmul@multiplier 0501  
                                _sendMessage2 80E2                                  _sendMessage3 80B8  
                                _sendMessage4 808E                                  _sendMessage5 8136  
                                _sendMessage6 8064                                  _sendMessage7 810C  
                             nvFactoryReset@i 0517                       __end_of_canFactoryReset 828C  
           APP_processConsumedEvent@end_ledno 0522                      __end_of_removeTableEntry 461E  
                            ?_isConsumedEvent 0501                       __end_of_teachGetESDdata 7F48  
                                  ?_nvPowerUp 0501                                   _loadNvCache 77A4  
                                    __Hrparam 0000                                   _eventChains 08FC  
                    evtIdxToTableIndex@evtIdx 0501                       APP_addEvent@eventNumber 0549  
                                   memcpy@tmp 050B                         _CAN1_OperationModeGet 8314  
                                    __Lrparam 0000                         _CAN1_OperationModeSet 7048  
                           doReval@tableIndex 052F                              ??_nvFactoryReset 0515  
                                ??_initTicker 0501                           __end_of_removeEvent 7E7A  
                                ??_initRomOps 0501                        removeEvent@eventNumber 0538  
            __end_of_APP_processConsumedEvent 5B54                     __end_of_teachFactoryReset 8356  
                       ?_EEPROM_WriteNoVerify 0501                                      _addEvent 39D0  
                                  ?_updateRGB 0501                ?_mnsTRserviceDiscoveryCallback 052E  
                             ??_reqevCallback 0530                            doNenrd@eventNumber 052E  
                                ?_DEFAULT_ISR 0501                                      _checkLen 68CC  
                                  _T0CON0bits 031A                                    _T0CON1bits 031B  
             __end_of_updateModuleErrorStatus 8302                                    _FLASH_Read 73B8  
                       getNextWriteMessage@wr 050C                                      __ptext10 77A4  
                                    __ptext11 8160                                      __ptext20 5D26  
                                    __ptext12 8338                                      __ptext21 6BDC  
                                    __ptext13 7806                                      __ptext30 714C  
                                    __ptext22 16F8                                      __ptext14 7048  
                                    __ptext31 833E                                      __ptext23 70CA  
                                    __ptext15 8314                                      __ptext40 6B44  
                                    __ptext32 71CE                                      __ptext24 7B76  
                                    __ptext16 2EC6                                      __ptext41 5448  
                                    __ptext33 7E46                                      __ptext25 5B54  
                                    __ptext17 3298                                      __ptext50 8366  
                                    __ptext42 7E7A                                      __ptext34 5ED4  
                                    __ptext26 4B18                                      __ptext18 0A06  
                                    __ptext51 81D2                                      __ptext43 758E  
                                    __ptext35 81B0                                      __ptext27 7BC2  
                                    __ptext19 3CB8                                      __ptext60 7FD8  
                                    __ptext52 8254                                      __ptext44 5DFE  
                                    __ptext36 39D0                                      __ptext28 8008  
                                    __ptext61 7928                                      __ptext53 81F4  
                                    __ptext45 8362                                      __ptext37 6C72  
                                    __ptext29 82A6                                      __ptext70 2600  
                                    __ptext62 8064                                      __ptext54 7EAE  
                                    __ptext46 696C                                      __ptext38 61EC  
                                    __ptext71 7C56                                      __ptext63 808E  
                                    __ptext55 7F18                                      __ptext47 8344  
                                    __ptext39 79DC                                      __ptext80 8330  
                                    __ptext72 80E2                                      __ptext64 80B8  
                                    __ptext56 7F48                                      __ptext48 6D96  
                                    __ptext81 6AA8                                      __ptext73 810C  
                                    __ptext65 4998                                      __ptext57 7F78  
                                    __ptext49 8378                                      __ptext90 6EB0  
                                    __ptext82 423E                                      __ptext74 831E  
                                    __ptext66 6F3C                                      __ptext58 7FA8  
                                    __ptext91 724E                                      __ptext83 62AC  
                                    __ptext75 836A                                      __ptext67 6E24  
                                    __ptext59 6636                                      __ptext92 74A6  
                                    __ptext84 7AD8                                      __ptext76 6426  
                                    __ptext68 8302                                      __ptext93 5966  
                                    __ptext85 658C                                      __ptext77 82D6  
                                    __ptext69 834A                                      __ptext94 461E  
                                    __ptext86 8136                                      __ptext78 68CC  
                                    __ptext95 75FC                                      __ptext87 6D04  
                                    __ptext79 5A5E                                      __ptext96 7C9A  
                                    __ptext88 2A9E                                      __ptext97 7C0E  
                                    __ptext89 7E10                                      __ptext98 7340  
                                    __ptext99 836E                  __end_of_getNumRxBuffersInUse 751A  
                                ??_mnsPowerUp 050D                                      _ledTimer 0564  
                                    _ledState 058B                                 ?_EEPROM_Write 0509  
                 CAN1_OperationModeSet@status 0501                                      _initARGB 47E2  
                                 _OSCCON1bits 00AD                                   _OSCCON3bits 00AF  
                          __end_of_initTicker 7868                            __end_of_initRomOps 82D6  
                                    doNnevn@i 052D                            __end_of_paramBlock 0840  
                              canPowerUp@temp 050D                         __end_of_setLEDsByMode 7C9A  
                               ?_factoryReset 0501                              _nvTRnvrdCallback 79DC  
                               findEvent@hash 052C                                      doRqevn@i 052D  
                           ?_canGetDiagnostic 0507                                   getEVs@evIdx 051B  
                                 _IVTLOCKbits 0459                 __end_of_APP_preProcessMessage 8372  
                          ??_canGetDiagnostic 0509                                   _SPI1CLKbits 008C  
                                    isa$xinst 0000                                      _testTime 057C  
                                    _services FF89                                _receiveOverrun 7EE4  
                    clearAllEvents@tableIndex 0536                               _nvGetDiagnostic 7F48  
                                 ??_findEvent 0526                         _handleSelfEnumeration 658C  
                     canSendMessage@txFifoObj 0519                            __end_of_mnsService FFEB  
                     __end_of_flushFlashBlock 6AA8                             writeEv@tableIndex 0524  
                          __end_of_mnsPowerUp 50A8                                  ??_showStatus 0501  
                                 ??_pbUpTimer 0518                                      _writeNVM 7868  
                            sendRTR@txFifoObj 0501                    processEnumeration@newCanId 051B  
                      APP_addEvent@forceOwnNN 054D                                   _setNewCanId 7C0E  
                                 _sendMessage 6D04            handleSelfEnumeration@receivedCanId 050F  
                               writeNVM@index 050E                       updateLedRange@end_ledno 0501  
                               writeNVM@value 0511                                   ??_leds_poll 050B  
                  ??_factoryResetGlobalEvents 0537                            _evtIdxToTableIndex 833E  
                       canGetDiagnostic@index 050A                                   _NVMCON0bits 0040  
                                 _NVMCON1bits 0041                                      memcpy@d1 0501  
                                    memcpy@s1 0503                               _eraseFlashBlock 6FC4  
                           APP_addEvent@evVal 054C                             APP_addEvent@evNum 054B  
                     teachGetDiagnostic@index 0509                                ??_EEPROM_Write 050D  
                  __end_of_processEnumeration 47E2                                   getHash@hash 0521  
                             _C1FIFOCON1Hbits 015D                                      intlevel2 0000  
                         ?_evtIdxToTableIndex 0501                               _C1FIFOCON3Hbits 0175  
                               ?_getParameter 0501                          getNextWriteMessage@q 0501  
                            ?_canFactoryReset 0501                                  ?_EEPROM_Read 0501  
                            ___lldiv@dividend 050B                                ??_factoryReset 0537  
                                 ??_nvPowerUp 0512                         removeEvent@tableIndex 053A  
                            ?_teachGetESDdata 0501                      __end_of_findServiceIndex 6EB0  
                                 _removeEvent 7E46                        APP_addEvent@nodeNumber 0547  
                     ?_consumerProcessMessage 0554                            __end_of_showStatus 51EA  
              mnsTRrqnpnCallback@serviceIndex 052E                         removeEvent@nodeNumber 0536  
                      ?_CAN1_OperationModeGet 0501                        ?_CAN1_OperationModeSet 0501  
                          _paramBlock_absaddr 0820                        __end_of_receiveOverrun 7F18  
                         updateLedRange@ledno 0504                            __end_of_priorities FF59  
                            ??_canSendMessage 050F                   __end_of_teachProcessMessage 1ED0  
                  __end_of_tableIndexToEvtIdx 834A                          __end_of_canTransport FFFF  
                                ?_FLASH_Write 0506                            tickGet@currentTime 0507  
                      ??_EEPROM_WriteNoVerify 0505                                      powerUp@i 052D  
                        ??_evtIdxToTableIndex 0501                             _pollTimedResponse 61EC  
                       __end_of_teachCheckLen 714C                                   ??_updateRGB 0501  
                          ?_pollTimedResponse 0501                      _APP_processConsumedEvent 5A5E  
                           FLASH_Read@address 0501                              _APP_factoryReset 8356  
                     nerdCallback@eventNumber 0532                 APP_isConsumedEvent@tableIndex 0501  
                            ___lldiv@quotient 0513                                _updateLedRange 7CDE  
                           ?_startEnumeration 0501                                  ?_pbDownTimer 0501  
                                 findEvent@en 052A                                   findEvent@nn 0528  
                        findEvent@eventNumber 0524                                   ?_FLASH_Read 0501  
                               bootEsdData@id 0501                    ??_canWaitForTxQueueToDrain 0501  
                         ??_pollTimedResponse 053D                              _mnsGetDiagnostic 7F78  
                          ??_startEnumeration 050B                  _timedResponseAllServicesFlag 0597  
                             _C1FIFOSTA2Hbits 016D                       ??_consumerGetDiagnostic 0509  
                             _C1FIFOSTA1Lbits 0160                               _C1FIFOSTA3Hbits 0179  
                              ??_getParameter 0506                               _C1FIFOSTA2Lbits 016C  
                                ?_bootEsdData 0501                               _C1FIFOSTA3Lbits 0178  
                           sendMessage2@data1 0526                             sendMessage2@data2 0527  
                           sendMessage3@data1 0526                             sendMessage3@data2 0527  
                           sendMessage3@data3 0528                             sendMessage4@data1 0526  
                           sendMessage4@data2 0527                             sendMessage4@data3 0528  
                           sendMessage4@data4 0529                             sendMessage5@data1 0526  
                           sendMessage5@data2 0527                             sendMessage5@data3 0528  
                           sendMessage5@data4 0529                             sendMessage5@data5 052A  
                           sendMessage6@data1 0526                             sendMessage6@data2 0527  
                           sendMessage6@data3 0528                             sendMessage6@data4 0529  
                           sendMessage6@data5 052A                             sendMessage6@data6 052B  
                            bootPowerUp@found 050E                               _last_mode_flags 059F  
                           sendMessage7@data1 0526                             sendMessage7@data2 0527  
                           sendMessage7@data3 0528                             sendMessage7@data4 0529  
                           sendMessage7@data5 052A                             sendMessage7@data6 052B  
                           sendMessage7@data7 052C                __end_of_consumerProcessMessage 3F9E  
                              _checkPowerOnPb 66DC                              EEPROM_Read@index 0501  
                    ?_prepareSelfEnumResponse 0501                               _last_mode_state 05A0  
                 __end_of_APP_isConsumedEvent 836E                       __end_of_nvGetDiagnostic 7F78  
                                ?_bootPowerUp 0501                               ?_receiveOverrun 0501  
                        nvTRnvrdCallback@step 052F                          nvTRnvrdCallback@type 0501  
                 __end_of_getNextWriteMessage 5A5E  
